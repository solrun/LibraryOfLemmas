Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SwapsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Inversion" (required by "Draft.SwapsTemplates" via "Draft.Swaps")
Loading theory "Draft.Templates" (required by "Draft.SwapsTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Inversion"
### 0.076s elapsed time, 0.255s cpu time, 0.000s GC time
Loading theory "Draft.Swaps" (required by "Draft.SwapsTemplates")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.091s elapsed time, 0.299s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.104s elapsed time, 0.326s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SwapsTemplates" via "Draft.ExtrEqs")
### theory "Draft.Swaps"
### 0.100s elapsed time, 0.233s cpu time, 0.042s GC time
### theory "HOL-Library.BigO"
### 0.648s elapsed time, 0.765s cpu time, 0.103s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SwapsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.469s elapsed time, 0.469s cpu time, 0.000s GC time
Loading theory "Draft.SwapsTemplates"
val templateLemmas =
   [("Swaps.not_before0", "~ ?x < ?xs ! 0 in ?xs",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_var 0)
             )
         )),
    ("Swaps.length_swap", "length (swap ?i ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Swaps.set_swap", "set (swap ?n ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Swaps.distinct_swap", "distinct (swap ?i ?xs) = distinct ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Swaps.swaps_eq_Nil_iff", "(swaps ?acts ?xs = []) = (?xs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Swaps.swap_Suc", "swap (Suc ?n) (?a # ?xs) = ?a # swap ?n ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Swaps.swap_id", "length ?xs <= Suc ?n ==> swap ?n ?xs = ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Swaps.card_Inv_swaps_le",
     "distinct ?xs ==> card (Inv ?xs (swaps ?sws ?xs)) <= length ?sws",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Swaps.swaps_map_Suc",
     "swaps (map Suc ?sws) (?a # ?xs) = ?a # swaps ?sws ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("Swaps.index_swaps_size",
     "distinct ?s ==>
      index ?s ?q <= index (swaps ?sws ?s) ?q + length ?sws",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0),
                   template_var 2)),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Swaps.nth_swap_id",
     "Suc ?i < length ?xs ==> swap ?i ?xs ! ?i = ?xs ! (?i + 1)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Swaps.index_swaps_last_size",
     "distinct ?s ==>
      length ?s <= index (swaps ?sws ?s) (last ?s) + length ?sws + 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 7, template_var 1),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_var 0),
                       template_var 1)),
                   template_app (template_hole 2, template_var 1))),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("Swaps.nth_swaps",
     "ALL i:set ?is. ?j < i ==> swaps ?is ?xs ! ?j = ?xs ! ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("Swaps.swaps_eq_nth_take_drop",
     "?i < length ?xs ==>
      swaps [0..<?i] ?xs = ?xs ! ?i # take ?i ?xs @ drop (Suc ?i) ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Swaps.swaps_inv",
     "set (swaps ?sws ?xs) = set ?xs &
      length (swaps ?sws ?xs) = length ?xs &
      distinct (swaps ?sws ?xs) = distinct ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 6, template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 1),
                       template_var 0))),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Swaps.before_id",
     "[| distinct ?xs; ?i < length ?xs; ?j < length ?xs |]
      ==> ?xs ! ?i < ?xs ! ?j in ?xs = (?i < ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Swaps.card_Inv_swaps",
     "[| distinct ?is; ALL i:set ?is. Suc i < length ?xs; distinct ?xs |]
      ==> card (Inv ?xs (swaps ?is ?xs)) = length ?is",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              t_empty)
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("Swaps.index_swap_distinct",
     "[| distinct ?xs; Suc ?n < length ?xs |]
      ==> index (swap ?n ?xs) ?x =
          (if ?x = ?xs ! ?n then Suc ?n
           else if ?x = ?xs ! Suc ?n then ?n else index ?xs ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 2)),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1))),
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_app (template_hole 7, template_var 1)))),
                   template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0)))
             )))),
    ("Swaps.before_swaps",
     "[| distinct ?is; ALL i:set ?is. Suc i < length ?xs; distinct ?xs;
         ?i ~: set ?is; ?i < ?j; ?j < length ?xs |]
      ==> swaps ?is ?xs ! ?i < swaps ?is ?xs ! ?j in ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 3)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 10, template_var 3))
                )
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_var 3),
                       template_var 2)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 3),
                     template_var 2)),
                 template_var 0)),
             template_var 2)
           ))),
    ("Swaps.before_in_swap",
     "[| dist_perm ?xs ?ys; Suc ?n < length ?xs |]
      ==> ?x < ?y in swap ?n ?xs =
          (?x < ?y in ?xs & ~ (?x = ?xs ! ?n & ?y = ?xs ! Suc ?n) |
           ?x = ?xs ! Suc ?n & ?y = ?xs ! ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 4)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 3)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 4)),
                  template_app (template_hole 10, template_var 3))))
            ),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 4))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 4))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 1),
                         template_var 0),
                       template_var 4)),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_app
                            (template_app (template_hole 0, template_var 4),
                             template_var 2))),
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_hole 8, template_var 2))))))),
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_app (template_hole 8, template_var 2)))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2))))
             )))),
    ("Swaps.Inv_swap",
     "dist_perm ?xs ?ys ==>
      Inv ?xs (swap ?n ?ys) =
      (if Suc ?n < length ?xs
       then if ?ys ! ?n < ?ys ! Suc ?n in ?xs
            then Inv ?xs ?ys Un {(?ys ! ?n, ?ys ! Suc ?n)}
            else Inv ?xs ?ys - {(?ys ! Suc ?n, ?ys ! ?n)}
       else Inv ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 2)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 1)),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_var 2)),
                  template_app (template_hole 14, template_var 1))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 2),
           template_app
            (template_app (template_hole 11, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 0)),
                 template_app (template_hole 7, template_var 2))),
             template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_var 0)),
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_app (template_hole 8, template_var 0))),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 12, template_var 2),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app (template_hole 5, template_var 1),
                             template_var 0)),
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_app
                            (template_hole 8, template_var 0)))),
                     template_hole 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 12, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_app (template_hole 8, template_var 0))),
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_var 0))),
                   template_hole 1)))),
           template_app
            (template_app (template_hole 12, template_var 2),
             template_var 1)))))]:
   (string * thm * template) list
### theory "Draft.SwapsTemplates"
### 0.338s elapsed time, 0.480s cpu time, 0.069s GC time
val it = (): unit
