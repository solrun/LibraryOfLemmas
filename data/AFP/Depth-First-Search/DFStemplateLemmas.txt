   [("DFS.dfs_base", "dfs ?g [] ?ys = ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 0)),
    ("DFS.next_subset_dfs", "set ?xs <= set (dfs ?g ?xs ?ys)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 2),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("DFS.visit_subset_dfs", "set ?ys <= set (dfs ?g ?xs ?ys)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 2),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("DFS.dfs_eq_reachable", "set (dfs ?g ?xs []) = reachable ?g ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("DFS.reachable_closed_dfs", "reachable ?g ?xs <= set (dfs ?g ?xs [])",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)))),
    ("DFS.reachable_nexts",
     "reachable ?g (nexts ?g ?x) <= reachable ?g [?x]",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("DFS.dfs_subset_reachable_visit_nodes",
     "set (dfs ?g ?xs ?ys) <= reachable ?g ?xs Un set ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("DFS.nextss_closed_dfs",
     "nextss ?g (dfs ?g ?xs []) <= set (dfs ?g ?xs [])",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_hole 1)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_hole 1)))),
    ("DFS.reachable_append",
     "reachable ?g (?xs @ ?ys) = reachable ?g ?xs Un reachable ?g ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("DFS.nexts_set", "(?y : set (nexts ?g ?x)) = ((?x, ?y) : set ?g)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("DFS.Image_closed_trancl", "?r `` ?X <= ?X ==> ?r^* `` ?X = ?X",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 0))),
    ("DFS.nextss_Cons",
     "nextss ?g (?x # ?xs) = set (nexts ?g ?x) Un nextss ?g ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("DFS.dfs_app", "dfs ?g (?xs @ ?ys) ?zs = dfs ?g ?ys (dfs ?g ?xs ?zs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)))),
    ("DFS.dfs2_invariant",
     "dfs2_dom (?g, ?xs, ?ys) ==> set ?ys <= set (dfs2 ?g ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("DFS.nextss_closed_dfs'",
     "nextss ?g ?ys <= set ?xs Un set ?ys ==>
      nextss ?g (dfs ?g ?xs ?ys) <= set (dfs ?g ?xs ?ys)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0)),
            template_app (template_hole 1, template_var 1)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1))))),
    ("DFS.dfs_inductive",
     "dfs ?g (?x # ?xs) ?ys =
      (if List.member ?ys ?x then dfs ?g ?xs ?ys
       else dfs ?g (nexts ?g ?x @ ?xs) (?x # ?ys))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0))))),
    ("DFS.dfs2_inductive",
     "dfs2 ?g (?x # ?xs) ?ys =
      (if List.member ?ys ?x then dfs2 ?g ?xs ?ys
       else dfs2 ?g ?xs (dfs2 ?g (nexts ?g ?x) (?x # ?ys)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))))))]
