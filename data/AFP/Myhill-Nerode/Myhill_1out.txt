Loading theory "Draft.Folds" (required by "Draft.Myhill_1Templates" via "Draft.Myhill_1")
Loading theory "Draft.Templates" (required by "Draft.Myhill_1Templates" via "Draft.ExtrEqs")
### theory "Draft.Folds"
### 0.043s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.Myhill_1" (required by "Draft.Myhill_1Templates")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.171s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Myhill_1Templates")
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.541s elapsed time, 1.119s cpu time, 0.087s GC time
Found termination order: "{}"
### theory "Draft.Myhill_1"
### 0.788s elapsed time, 1.392s cpu time, 0.087s GC time
Loading theory "Draft.Myhill_1Templates"
val templateLemmas =
   [("Myhill_1.lang_is_union_of_finals", "?A = \<Union> (finals ?A)",
     template_equation
      (template_var 0,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Myhill_1.append_rhs_preserves_cls",
     "rhss (Append_rexp_rhs ?rhs ?r) = rhss ?rhs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Myhill_1.finals_in_partitions", "finals ?A <= UNIV // \<approx>?A",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Myhill_1.lhss_preserves_cls",
     "lhss (Subst_all ?ES ?Y ?yrhs) = lhss ?ES",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Myhill_1.finite_Init_rhs", "finite ?CS ==> finite (Init_rhs ?CS ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Myhill_1.Append_preserves_finite",
     "finite ?rhs ==> finite (Append_rexp_rhs ?rhs ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Myhill_1.Arden_preserves_finite",
     "finite ?rhs ==> finite (Arden ?X ?rhs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Myhill_1.ardenable_set_sub",
     "ardenable ?rhs ==> ardenable (?rhs - ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Myhill_1.Append_preserves_ardenable",
     "ardenable ?rhs ==> ardenable (Append_rexp_rhs ?rhs ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Myhill_1.Arden_preserves_ardenable",
     "ardenable ?rhs ==> ardenable (Arden ?X ?rhs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Myhill_1.Subst_all_preserves_finite",
     "finite ?ES ==> finite (Subst_all ?ES ?Y ?yrhs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Myhill_1.lhss_union_distrib", "lhss (?A Un ?B) = lhss ?A Un lhss ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Myhill_1.rhss_union_distrib", "rhss (?A Un ?B) = rhss ?A Un rhss ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Myhill_1.lang_of_append_rexp_rhs",
     "lang_rhs (Append_rexp_rhs ?rhs ?r) = lang_rhs ?rhs \<cdot> lang ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Myhill_1.lang_of_append_rexp",
     "lang_trm (Append_rexp ?r ?trm) = lang_trm ?trm \<cdot> lang ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Myhill_1.lang_rhs_union_distrib",
     "lang_rhs ?A Un lang_rhs ?B = lang_rhs (?A Un ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Myhill_1.Arden_removes_cl",
     "rhss (Arden ?Y ?yrhs) = rhss ?yrhs - {?Y}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Myhill_1.finite_Lam", "finite ?rhs ==> finite {r. Lam r : ?rhs}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Myhill_1.finite_Trn", "finite ?rhs ==> finite {r. Trn ?Y r : ?rhs}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Myhill_1.ardenable_set_union",
     "[| ardenable ?rhs; ardenable ?rhs' |] ==> ardenable (?rhs Un ?rhs')",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Myhill_1.Myhill_Nerode1",
     "finite (UNIV // \<approx>?A) ==> EX r. ?A = lang r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Myhill_1.Init_ES_satisfies_invariant",
     "finite (UNIV // \<approx>?A) ==>
      invariant (Init (UNIV // \<approx>?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("Myhill_1.Subst_preserves_finite_rhs",
     "[| finite ?rhs; finite ?yrhs |] ==> finite (Subst ?rhs ?Y ?yrhs)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Myhill_1.Subst_preserves_ardenable",
     "[| ardenable ?rhs; ardenable ?xrhs |]
      ==> ardenable (Subst ?rhs ?X ?xrhs)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Myhill_1.Subst_all_preserves_finite_rhs",
     "[| finite_rhs ?ES; finite ?yrhs |]
      ==> finite_rhs (Subst_all ?ES ?Y ?yrhs)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Myhill_1.str_eq_conv_Derivs",
     "\<approx>?A = {(u, v). Derivs u ?A = Derivs v ?A}",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Myhill_1.Pair_Collect", "((?x, ?y) : {(x, y). ?P x y}) = ?P ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))),
       template_app
        (template_app (template_var 0, template_var 2), template_var 1))),
    ("Myhill_1.l_eq_r_in_eqs",
     "(?X, ?rhs) : Init (UNIV // \<approx>?A) ==> ?X = lang_rhs ?rhs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 0))))
            )],
       template_equation
        (template_var 2, template_app (template_hole 0, template_var 1)))),
    ("Myhill_1.Subst_all_cls_remains",
     "(?X, ?xrhs) : ?ES ==> EX xrhs'. (?X, xrhs') : Subst_all ?ES ?Y ?yrhs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Myhill_1.Subst_all_satisfies_invariant",
     "invariant (?ES Un {(?Y, ?yrhs)}) ==>
      invariant (Subst_all ?ES ?Y (Arden ?Y ?yrhs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Myhill_1.Subst_all_preserves_validity",
     "validity (?ES Un {(?Y, ?yrhs)}) ==>
      validity (Subst_all ?ES ?Y (Arden ?Y ?yrhs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Myhill_1.Subst_preserves_soundness",
     "[| ?X = lang_rhs ?xrhs; finite ?rhs |]
      ==> lang_rhs (Subst ?rhs ?X ?xrhs) = lang_rhs ?rhs",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Myhill_1.Remove_in_card_measure",
     "[| finite ?ES; (?X, ?rhs) : ?ES |]
      ==> (Remove ?ES ?X ?rhs, ?ES) : measure card",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_var 2)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Myhill_1.Arden_preserves_soundness",
     "[| ?X = lang_rhs ?rhs; ardenable ?rhs; finite ?rhs |]
      ==> ?X = lang_rhs (Arden ?X ?rhs)",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Myhill_1.defined_by_str",
     "[| ?s : ?X; ?X : UNIV // \<approx>?A |] ==> ?X = \<approx>?A `` {?s}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Myhill_1.every_eqcl_has_reg",
     "[| finite (UNIV // \<approx>?A); ?X : UNIV // \<approx>?A |]
      ==> EX r. ?X = lang r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app (template_hole 4, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app (template_hole 4, template_var 1)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Myhill_1.Subst_updates_cls",
     "?X ~: rhss ?xrhs ==>
      rhss (Subst ?rhs ?X ?xrhs) = rhss ?rhs Un rhss ?xrhs - {?X}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 6, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 6, template_var 0)),
               template_app (template_hole 6, template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Myhill_1.iteration_step_invariant",
     "[| invariant ?ES; (?X, ?xrhs) : ?ES; Cond ?ES |]
      ==> invariant (Iter ?X ?ES)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Myhill_1.iteration_step_measure",
     "[| invariant ?ES; (?X, ?xrhs) : ?ES; Cond ?ES |]
      ==> (Iter ?X ?ES, ?ES) : measure card",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 2)),
                 template_var 2)),
             template_app (template_hole 0, template_hole 5))
           ))),
    ("Myhill_1.invariantI",
     "[| soundness ?ES; finite ?ES; distinctness ?ES; ardenable_all ?ES;
         finite_rhs ?ES; validity ?ES |]
      ==> invariant ?ES",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Myhill_1.bchoice_finite_set",
     "[| ALL x:?S. EX y. x = ?f y; finite ?S |]
      ==> EX ys. \<Union> ?S = \<Union> (?f ` ys) & finite ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1), t_empty)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Myhill_1.iteration_step_ex",
     "[| invariant ?ES; (?X, ?xrhs) : ?ES; Cond ?ES |]
      ==> EX xrhs'. (?X, xrhs') : Iter ?X ?ES",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Myhill_1.lang_rhs_set",
     "lang_rhs {Trn ?X r |r. ?P r} =
      \<Union> {lang_trm (Trn ?X r) |r. ?P r}",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Myhill_1.card_noteq_1_has_more",
     "[| Cond ?ES; (?X, ?xrhs) : ?ES; finite ?ES |]
      ==> EX (Y, yrhs):?ES. (?X, ?xrhs) ~= (Y, yrhs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 2),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, t_empty))
           ))),
    ("Myhill_1.trm_soundness",
     "finite ?rhs ==>
      lang_rhs {Trn ?X r |r. Trn ?X r : ?rhs} =
      ?X \<cdot> lang (\<Uplus>{r. Trn ?X r : ?rhs})",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1))],
       template_equation
        (template_app
          (template_hole 12, template_app (template_hole 11, t_empty)),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_app (template_hole 0, t_empty))))))),
    ("Myhill_1.Solve",
     "[| finite (UNIV // \<approx>?A); ?X : UNIV // \<approx>?A |]
      ==> EX rhs.
             Solve ?X (Init (UNIV // \<approx>?A)) = {(?X, rhs)} &
             invariant {(?X, rhs)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_app (template_hole 10, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_app (template_hole 10, template_var 1)))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Myhill_1.IterI2",
     "[| (?Y, ?yrhs) : ?ES; ?X ~= ?Y;
         !!Y yrhs.
            [| (Y, yrhs) : ?ES; ?X ~= Y |] ==> ?Q (Remove ?ES Y yrhs) |]
      ==> ?Q (Iter ?X ?ES)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Myhill_1.every_eqclass_has_transition",
     "[| ?s @ [?c] : ?X; ?X : UNIV // \<approx>?A;
         !!Y. [| Y : UNIV // \<approx>?A; Y \<cdot> {[?c]} <= ?X; ?s : Y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_hole 9))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app (template_hole 5, template_var 1)))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Myhill_1Templates"
### 0.373s elapsed time, 0.553s cpu time, 0.069s GC time
val it = (): unit
