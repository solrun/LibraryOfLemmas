   [("Closures.singleton_regular", "regular {?s}",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Closures.rev_lang", "rev ` lang ?r = lang (Rev ?r)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Closures.rev_star", "rev ` ?A\<star> = (rev ` ?A)\<star>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Closures.finite_regular", "finite ?A ==> regular ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Closures.cofinite_regular", "finite (- ?A) ==> regular ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Closures.rev_seq",
     "rev ` ?B \<cdot> ?A = (rev ` ?A) \<cdot> (rev ` ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 1)))),
    ("Closures.rev_star2", "?s : ?A\<star> ==> rev ?s : (rev ` ?A)\<star>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_hole 1),
                 template_var 0)))
           ))),
    ("Closures.rev_star1",
     "?s : (rev ` ?A)\<star> ==> ?s : rev ` ?A\<star>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Closures.closure_star", "regular ?A ==> regular (?A\<star>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Closures.closure_complement", "regular ?A ==> regular (- ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Closures.closure_reversal", "regular ?A ==> regular (rev ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Closures.closure_left_quotient",
     "regular ?A ==> regular (Deriv_lang ?B ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Closures.closure_union",
     "[| regular ?A; regular ?B |] ==> regular (?A Un ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Closures.closure_seq",
     "[| regular ?A; regular ?B |] ==> regular (?A \<cdot> ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Closures.closure_difference",
     "[| regular ?A; regular ?B |] ==> regular (?A - ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Closures.closure_intersection",
     "[| regular ?A; regular ?B |] ==> regular (?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Closures.continuation_lemma",
     "[| regular ?A; infinite ?B |]
      ==> EX x:?B. EX y:?B. x ~= y & x \<approx>?A y",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0), t_empty)
           )))]
