   [("SAT_Plan_Extensions.cnf_of_encode_interfering_operator_pair_exclusion_is_i",
     "cnf (encode_interfering_operator_pair_exclusion ?\<Pi> ?k ?op\<^sub>1
            ?op\<^sub>2) =
      {{(Operator ?k (index (?\<Pi>\<^sub>\<O>) ?op\<^sub>1))\<inverse>,
        (Operator ?k (index (?\<Pi>\<^sub>\<O>) ?op\<^sub>2))\<inverse>}}",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 3)),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 3)),
                       template_var 0)))),
               template_hole 1))),
         template_hole 0))),
    ("SAT_Plan_Extensions.cnf_of_encode_interfering_operator_exclusion_is",
     "cnf (encode_interfering_operator_exclusion ?\<Pi> ?t) =
      \<Union>
       (UN (op\<^sub>1,
           op\<^sub>2):{(op\<^sub>1, op\<^sub>2).
                        (op\<^sub>1, op\<^sub>2)
                        : set (?\<Pi>\<^sub>\<O>) \<times>
                          set (?\<Pi>\<^sub>\<O>) &
                        index (?\<Pi>\<^sub>\<O>) op\<^sub>1 ~=
                        index (?\<Pi>\<^sub>\<O>) op\<^sub>2 &
                        are_operators_interfering op\<^sub>1 op\<^sub>2}.
           {{{(Operator k (index (?\<Pi>\<^sub>\<O>) op\<^sub>1))\<inverse>,
              (Operator k
                (index (?\<Pi>\<^sub>\<O>) op\<^sub>2))\<inverse>}} |
            k. k : {0..<?t}})",
     template_equation
      (template_app
        (template_hole 28,
         template_app
          (template_app (template_hole 27, template_var 1),
           template_var 0)),
       template_app
        (template_hole 26,
         template_app
          (template_hole 25,
           template_app
            (template_app
              (template_hole 24, template_app (template_hole 23, t_empty)),
             template_app
              (template_hole 8,
               template_app (template_hole 7, t_empty))))))),
    ("SAT_Plan_Extensions.cnf_of_encode_interfering_operator_exclusion_is_ii",
     "set (concat
            (map (%(op\<^sub>1, op\<^sub>2).
                     map (%k. encode_interfering_operator_pair_exclusion
                               ?\<Pi> k op\<^sub>1 op\<^sub>2)
                      [0..<?t])
              (filter
                (%(op\<^sub>1, op\<^sub>2).
                    index (?\<Pi>\<^sub>\<O>) op\<^sub>1 ~=
                    index (?\<Pi>\<^sub>\<O>) op\<^sub>2 &
                    are_operators_interfering op\<^sub>1 op\<^sub>2)
                (List.product (?\<Pi>\<^sub>\<O>) (?\<Pi>\<^sub>\<O>))))) =
      (UN (op\<^sub>1,
          op\<^sub>2):{(op\<^sub>1, op\<^sub>2).
                       (op\<^sub>1, op\<^sub>2)
                       : set (?\<Pi>\<^sub>\<O>) \<times>
                         set (?\<Pi>\<^sub>\<O>) &
                       index (?\<Pi>\<^sub>\<O>) op\<^sub>1 ~=
                       index (?\<Pi>\<^sub>\<O>) op\<^sub>2 &
                       are_operators_interfering op\<^sub>1 op\<^sub>2}.
          (%k. encode_interfering_operator_pair_exclusion ?\<Pi> k
                op\<^sub>1 op\<^sub>2) `
          {0..<?t})",
     template_equation
      (template_app
        (template_hole 26,
         template_app
          (template_hole 25,
           template_app
            (template_app
              (template_hole 24, template_app (template_hole 23, t_empty)),
             template_app
              (template_app
                (template_hole 18,
                 template_app (template_hole 17, t_empty)),
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 12, template_var 1)),
                 template_app (template_hole 12, template_var 1)))))),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app
            (template_hole 4, template_app (template_hole 17, t_empty)))))),
    ("SAT_Plan_Extensions.cnf_of_encode_interfering_operator_exclusion_is_iii",
     "cnf `
      set (concat
            (map (%(op\<^sub>1, op\<^sub>2).
                     map (%k. encode_interfering_operator_pair_exclusion
                               ?\<Pi> k op\<^sub>1 op\<^sub>2)
                      [0..<?t])
              (filter
                (%(op\<^sub>1, op\<^sub>2).
                    index (?\<Pi>\<^sub>\<O>) op\<^sub>1 ~=
                    index (?\<Pi>\<^sub>\<O>) op\<^sub>2 &
                    are_operators_interfering op\<^sub>1 op\<^sub>2)
                (List.product (?\<Pi>\<^sub>\<O>) (?\<Pi>\<^sub>\<O>))))) =
      (UN (op\<^sub>1,
          op\<^sub>2):{(op\<^sub>1, op\<^sub>2).
                       (op\<^sub>1, op\<^sub>2)
                       : set (?\<Pi>\<^sub>\<O>) \<times>
                         set (?\<Pi>\<^sub>\<O>) &
                       index (?\<Pi>\<^sub>\<O>) op\<^sub>1 ~=
                       index (?\<Pi>\<^sub>\<O>) op\<^sub>2 &
                       are_operators_interfering op\<^sub>1 op\<^sub>2}.
          {{{(Operator k (index (?\<Pi>\<^sub>\<O>) op\<^sub>1))\<inverse>,
             (Operator k
               (index (?\<Pi>\<^sub>\<O>) op\<^sub>2))\<inverse>}} |
           k. k : {0..<?t}})",
     template_equation
      (template_app
        (template_app (template_hole 37, template_hole 36),
         template_app
          (template_hole 35,
           template_app
            (template_hole 34,
             template_app
              (template_app
                (template_hole 33,
                 template_app (template_hole 32, t_empty)),
               template_app
                (template_app
                  (template_hole 27,
                   template_app (template_hole 26, t_empty)),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app (template_hole 21, template_var 1)),
                   template_app (template_hole 21, template_var 1))))))),
       template_app
        (template_hole 18,
         template_app
          (template_app
            (template_hole 17, template_app (template_hole 16, t_empty)),
           template_app
            (template_hole 4,
             template_app (template_hole 26, t_empty))))))]
