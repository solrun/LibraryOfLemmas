   [("Solve_SASP.map_of_eq", "AList_Upd_Del.map_of ?xs = Map.map_of ?xs",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Solve_SASP.atoms_formula_vars", "atoms ?f = set (formula_vars ?f)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Solve_SASP.set_tree_intorder",
     "Tree2.set_tree ?t = set (Tree2.inorder ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Solve_SASP.set_list_to_rbt",
     "Tree2.set_tree (list_to_rbt ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Solve_SASP.foldr_And",
     "foldr (\<^bold>\<and>) ?as (\<^bold>\<not> \<bottom>) =
      \<^bold>\<And>?as",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Solve_SASP.find_max_append",
     "find_max (?xs @ ?ys) = max (find_max ?xs) (find_max ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Solve_SASP.changing_atoms_works'",
     "?M o ?g \<Turnstile> ?phi = ?M \<Turnstile> map_formula ?g ?phi",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Solve_SASP.match_pres_submap",
     "Solve_SASP.match_pres
       (Tree2.inorder (M.tree_map_of' RBT_Set.empty ?pres)) ?s =
      (Map.map_of ?pres \<subseteq>\<^sub>m ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Solve_SASP.atoms_And_append",
     "atoms \<^bold>\<And>?as1.0 @ ?as2.0 =
      atoms \<^bold>\<And>?as1.0 Un atoms \<^bold>\<And>?as2.0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Solve_SASP.cnf_And",
     "set (cnf_to_dimacs (?f1.0 \<^bold>\<and> ?f2.0)) =
      set (cnf_to_dimacs ?f1.0) Un set (cnf_to_dimacs ?f2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Solve_SASP.model_to_dimacs_model_append'",
     "model_to_dimacs_model ?M (?vs @ ?vs') =
      model_to_dimacs_model ?M ?vs @ model_to_dimacs_model ?M ?vs'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Solve_SASP.model_to_dimacs_model_append",
     "set (model_to_dimacs_model ?M (?vs @ ?vs')) =
      set (model_to_dimacs_model ?M ?vs) Un
      set (model_to_dimacs_model ?M ?vs')",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Solve_SASP.upt_eq_Cons_conv",
     "(?x # ?xs = [?i..<?j]) = (?i < ?j & ?i = ?x & [?i + 1..<?j] = ?xs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_dunno)),
    ("Solve_SASP.dimacs_model_code",
     "dimacs_model ?ls ?cs =
      (let tls = list_to_rbt ?ls
       in (ALL c:set ?cs. size (inter_rbt tls (list_to_rbt c)) ~= 0) &
          distinct (map dimacs_lit_to_var ?ls))",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 1)),
         t_empty)))]
