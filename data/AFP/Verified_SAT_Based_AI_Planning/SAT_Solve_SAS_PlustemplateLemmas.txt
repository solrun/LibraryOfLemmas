   [("SAT_Solve_SAS_Plus.sasp_exec_noops",
     "execute_serial_plan_sas_plus ?s (replicate ?n empty_sasp_action) =
      ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 1)),
    ("SAT_Solve_SAS_Plus.noops_valid",
     "is_valid_problem_sas_plus ?\<Psi> ==>
      is_valid_problem_sas_plus (prob_with_noop ?\<Psi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SAT_Solve_SAS_Plus.sasp_filter_empty_action",
     "execute_serial_plan_sas_plus ?s (rem_noops ?\<pi>s) =
      execute_serial_plan_sas_plus ?s ?\<pi>s",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SAT_Solve_SAS_Plus.sasp_noops_in_noop_problem",
     "set (replicate ?n empty_sasp_action)
      <= set ((prob_with_noop ?\<Pi>)\<^sub>\<O>\<^sub>+)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_hole 2)),
       template_app
        (template_hole 4,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("SAT_Solve_SAS_Plus.noops_sound",
     "SAS_Plus_Semantics.is_serial_solution_for_problem
       (prob_with_noop ?\<Psi>) ?\<pi>s ==>
      SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi>
       (rem_noops ?\<pi>s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SAT_Solve_SAS_Plus.noops_complete",
     "SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi> ?\<pi> ==>
      SAS_Plus_Semantics.is_serial_solution_for_problem
       (prob_with_noop ?\<Psi>) (replicate ?n empty_sasp_action @ ?\<pi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_var 1))
           ))),
    ("SAT_Solve_SAS_Plus.sas_plus_problem_has_serial_solution_iff",
     "is_valid_problem_sas_plus ?\<Psi> ==>
      (EX \<psi>.
          SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi>
           \<psi>) =
      (EX \<A> t.
          \<A> \<Turnstile> \<Phi>\<^sub>\<forall> \<phi> ?\<Psi>  t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("SAT_Solve_SAS_Plus.sas_plus_problem_has_serial_solution_iff_ii",
     "[| is_valid_problem_sas_plus ?\<Psi>;
         SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi> ?\<psi>;
         ?h = length ?\<psi> |]
      ==> EX \<A>.
             \<A> \<Turnstile> \<Phi>\<^sub>\<forall> \<phi> ?\<Psi>  ?h",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0, template_app (template_hole 4, template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SAT_Solve_SAS_Plus.sas_plus_problem_has_serial_solution_iff_ii'",
     "[| is_valid_problem_sas_plus ?\<Psi>;
         SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi> ?\<psi>;
         length ?\<psi> <= ?h |]
      ==> EX \<A>.
             \<A> \<Turnstile>
             \<Phi>\<^sub>\<forall> \<phi> prob_with_noop ?\<Psi>  ?h",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("SAT_Solve_SAS_Plus.sas_plus_problem_has_serial_solution_iff_i",
     "[| is_valid_problem_sas_plus ?\<Psi>;
         ?\<A> \<Turnstile> \<Phi>\<^sub>\<forall> \<phi> ?\<Psi>  ?t |]
      ==> SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi>
           (map (strips_op_to_sasp ?\<Psi>)
             (concat (\<Phi>\<inverse> \<phi> ?\<Psi>  ?\<A> ?t)))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 5, template_var 2)),
                     template_var 1),
                   template_var 0))))
           ))),
    ("SAT_Solve_SAS_Plus.sas_plus_problem_has_serial_solution_iff_i'",
     "[| is_valid_problem_sas_plus ?\<Psi>;
         ?\<A> \<Turnstile>
         \<Phi>\<^sub>\<forall> \<phi> prob_with_noop ?\<Psi>  ?t |]
      ==> SAS_Plus_Semantics.is_serial_solution_for_problem ?\<Psi>
           (rem_noops
             (map (strips_op_to_sasp (prob_with_noop ?\<Psi>))
               (concat
                 (\<Phi>\<inverse> \<phi> prob_with_noop
     ?\<Psi>  ?\<A> ?t))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 2))),
                       template_var 1),
                     template_var 0)))))
           )))]
