Loading theory "HOL-Data_Structures.Cmp" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join" via "HOL-Data_Structures.Isin2")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Data_Structures.Less_False" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join" via "HOL-Data_Structures.Isin2" via "HOL-Data_Structures.Set_Specs" via "HOL-Data_Structures.List_Ins_Del" via "HOL-Data_Structures.Sorted_Less")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "HOL-Data_Structures.Less_False"
### 0.049s elapsed time, 0.221s cpu time, 0.000s GC time
Loading theory "HOL-Data_Structures.Sorted_Less" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join" via "HOL-Data_Structures.Isin2" via "HOL-Data_Structures.Set_Specs" via "HOL-Data_Structures.List_Ins_Del")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Data_Structures.Sorted_Less"
### 0.054s elapsed time, 0.214s cpu time, 0.000s GC time
Loading theory "HOL-Data_Structures.List_Ins_Del" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join" via "HOL-Data_Structures.Isin2" via "HOL-Data_Structures.Set_Specs")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.155s elapsed time, 0.636s cpu time, 0.054s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.337s elapsed time, 1.344s cpu time, 0.141s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Data_Structures.List_Ins_Del"
### 0.246s elapsed time, 0.958s cpu time, 0.141s GC time
Loading theory "HOL-Data_Structures.Set_Specs" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join" via "HOL-Data_Structures.Isin2")
locale Set
  fixes empty :: "'s"
    and insert :: "'a => 's => 's"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
  assumes "Set empty insert delete isin set invar"
### theory "HOL-Data_Structures.Cmp"
### 0.398s elapsed time, 1.591s cpu time, 0.141s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.244s elapsed time, 0.964s cpu time, 0.087s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs")
locale Set_by_Ordered
  fixes empty :: "'t"
    and insert :: "'a => 't => 't"
    and delete :: "'a => 't => 't"
    and isin :: "'t => 'a => bool"
    and inorder :: "'t => 'a list"
    and inv :: "'t => bool"
  assumes "Set_by_Ordered empty insert delete isin inorder inv"
locale Set2
  fixes empty :: "'s"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
    and insert :: "'a => 's => 's"
    and union :: "'s => 's => 's"
    and inter :: "'s => 's => 's"
    and diff :: "'s => 's => 's"
  assumes "Set2 empty delete isin set invar insert union inter diff"
### theory "HOL-Data_Structures.Set_Specs"
### 0.092s elapsed time, 0.356s cpu time, 0.000s GC time
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.990s elapsed time, 3.119s cpu time, 0.764s GC time
### theory "HOL-Library.BigO"
### 0.927s elapsed time, 2.864s cpu time, 0.764s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.769s elapsed time, 3.824s cpu time, 0.852s GC time
Loading theory "Draft.Templates" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Data_Structures.Tree2" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join" via "HOL-Data_Structures.Isin2")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.061s elapsed time, 0.152s cpu time, 0.040s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Set2_Join_RBTMoreTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Data_Structures.Tree2"
### 0.206s elapsed time, 0.445s cpu time, 0.040s GC time
Loading theory "HOL-Data_Structures.Isin2" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.Set2_Join")
Loading theory "HOL-Data_Structures.RBT" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT" via "HOL-Data_Structures.RBT_Set")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Data_Structures.Isin2"
### 0.396s elapsed time, 1.209s cpu time, 0.132s GC time
Loading theory "HOL-Data_Structures.Set2_Join" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.561s elapsed time, 1.562s cpu time, 0.132s GC time
locale Set2_Join
  fixes join :: "('a * 'b) tree => 'a => ('a * 'b) tree => ('a * 'b) tree"
    and inv :: "('a * 'b) tree => bool"
  assumes "Set2_Join join inv"
### Missing patterns in function definition:
### split_min \<langle>\<rangle> = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Data_Structures.Set2_Join"
### 1.645s elapsed time, 4.103s cpu time, 1.130s GC time
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Data_Structures.RBT"
### 2.310s elapsed time, 5.683s cpu time, 1.295s GC time
Loading theory "HOL-Data_Structures.RBT_Set" (required by "Draft.Set2_Join_RBTMoreTemplates" via "Draft.Set2_Join_RBT")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Data_Structures.RBT_Set"
### 1.010s elapsed time, 1.101s cpu time, 0.089s GC time
Loading theory "Draft.Set2_Join_RBT" (required by "Draft.Set2_Join_RBTMoreTemplates")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Set2_Join_RBT"
### 1.598s elapsed time, 2.418s cpu time, 1.136s GC time
Loading theory "Draft.Set2_Join_RBTMoreTemplates"
val templateLemmas =
   [("Set2_Join_RBT.set_paint",
     "Tree2.set_tree (paint ?c ?t) = Tree2.set_tree ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Set2_Join_RBT.bst_paint", "Tree2.bst (paint ?c ?t) = Tree2.bst ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Set2_Join_RBT.bheight_paint_Black",
     "bheight (paint Black ?t) <= bheight ?t + 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 0)),
         template_hole 0))),
    ("Set2_Join_RBT.inorder_joinR",
     "Tree2.inorder (joinR ?l ?x ?r) =
      Tree2.inorder ?l @ ?x # Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("Set2_Join_RBT.bst_join",
     "Tree2.bst \<langle>?l, (?a, ?n), ?r\<rangle> ==>
      Tree2.bst (Set2_Join_RBT.join ?l ?a ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Set2_Join_RBT.set_baliL",
     "Tree2.set_tree (baliL ?l ?a ?r) =
      Tree2.set_tree ?l Un {?a} Un Tree2.set_tree ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Set2_Join_RBT.set_baliR",
     "Tree2.set_tree (baliR ?l ?a ?r) =
      Tree2.set_tree ?l Un {?a} Un Tree2.set_tree ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Set2_Join_RBT.set_join",
     "Tree2.set_tree (Set2_Join_RBT.join ?l ?x ?r) =
      Tree2.set_tree ?l Un {?x} Un Tree2.set_tree ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Set2_Join_RBT.set_joinR",
     "Tree2.set_tree (joinR ?l ?x ?r) =
      Tree2.set_tree ?l Un {?x} Un Tree2.set_tree ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Set2_Join_RBT.bheight_baliR",
     "bheight ?l = bheight ?r ==>
      bheight (baliR ?l ?a ?r) = Suc (bheight ?l)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 2))))),
    ("Set2_Join_RBT.inorder_joinL",
     "bheight ?l <= bheight ?r ==>
      Tree2.inorder (joinL ?l ?x ?r) =
      Tree2.inorder ?l @ ?x # Tree2.inorder ?r",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 3, template_var 1)))))),
    ("Set2_Join_RBT.invh_joinL",
     "[| invh ?l; invh ?r; bheight ?l <= bheight ?r |]
      ==> invh (joinL ?l ?x ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Set2_Join_RBT.invh_joinR",
     "[| invh ?l; invh ?r; bheight ?r <= bheight ?l |]
      ==> invh (joinR ?l ?x ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Set2_Join_RBT.bst_joinL",
     "[| Tree2.bst \<langle>?l, (?a, ?n), ?r\<rangle>;
         bheight ?l <= bheight ?r |]
      ==> Tree2.bst (joinL ?l ?a ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Set2_Join_RBT.rbt_join",
     "[| invc ?l; invh ?l; invc ?r; invh ?r |]
      ==> rbt (Set2_Join_RBT.join ?l ?x ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Set2_Join_RBT.set_joinL",
     "bheight ?l <= bheight ?r ==>
      Tree2.set_tree (joinL ?l ?x ?r) =
      Tree2.set_tree ?l Un {?x} Un Tree2.set_tree ?r",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_app (template_hole 4, template_var 1))))),
    ("Set2_Join_RBT.bheight_joinL",
     "[| invh ?l; invh ?r; bheight ?l <= bheight ?r |]
      ==> bheight (joinL ?l ?x ?r) = bheight ?r",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 1)))),
    ("Set2_Join_RBT.bheight_joinR",
     "[| invh ?l; invh ?r; bheight ?r <= bheight ?l |]
      ==> bheight (joinR ?l ?x ?r) = bheight ?l",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 2)))),
    ("Set2_Join_RBT.inv_join",
     "[| invc ?l; invh ?l; invc ?r; invh ?r |]
      ==> invc (Set2_Join_RBT.join ?l ?x ?r) &
          invh (Set2_Join_RBT.join ?l ?x ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)))
           ))),
    ("Set2_Join_RBT.bst_baliL",
     "[| Tree2.bst ?l; Tree2.bst ?r; ALL x:Tree2.set_tree ?l. x < ?a;
         ALL x:Tree2.set_tree ?r. ?a < x |]
      ==> Tree2.bst (baliL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Set2_Join_RBT.bst_baliR",
     "[| Tree2.bst ?l; Tree2.bst ?r; ALL x:Tree2.set_tree ?l. x < ?a;
         ALL x:Tree2.set_tree ?r. ?a < x |]
      ==> Tree2.bst (baliR ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Set2_Join_RBT.bst_joinR",
     "[| Tree2.bst ?l; Tree2.bst ?r; ALL x:Tree2.set_tree ?l. x < ?a;
         ALL y:Tree2.set_tree ?r. ?a < y |]
      ==> Tree2.bst (joinR ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Set2_Join_RBT.invc2_joinL",
     "[| invc ?l; invc ?r; bheight ?l <= bheight ?r |]
      ==> invc2 (joinL ?l ?x ?r) &
          (bheight ?l ~= bheight ?r & color ?r = Black -->
           invc (joinL ?l ?x ?r))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 2),
          template_app (template_hole 9, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 9, template_var 2)),
                         template_app (template_hole 9, template_var 1)))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_hole 6))),
               template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0),
                   template_var 1))))
           ))),
    ("Set2_Join_RBT.invc2_joinR",
     "[| invc ?l; invh ?l; invc ?r; invh ?r; bheight ?r <= bheight ?l |]
      ==> invc2 (joinR ?l ?x ?r) &
          (bheight ?l ~= bheight ?r & color ?l = Black -->
           invc (joinR ?l ?x ?r))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 9, template_var 2)),
                         template_app (template_hole 9, template_var 1)))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_hole 6))),
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0),
                   template_var 1))))
           )))]:
   (string * thm * template) list
### theory "Draft.Set2_Join_RBTMoreTemplates"
### 0.357s elapsed time, 0.523s cpu time, 0.046s GC time
val it = (): unit
