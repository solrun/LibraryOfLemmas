   [("Idx_Iterator.idx_iteratei_aux_simps",
     "~ ?c ?\<sigma> ==>
      idx_iteratei_aux ?get ?sz ?i ?l ?c ?f ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 6, template_var 5))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 6),
             template_var 0),
           template_var 5),
         template_var 5))),
    ("Idx_Iterator.idx_iteratei_aux_simps",
     "?i = 0 ==>
      idx_iteratei_aux ?get ?sz ?i ?l ?c ?f ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_equation (template_var 6, template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 6),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_var 0))),
    ("Idx_Iterator.idx_iteratei_aux_nth_conv_foldli_drop",
     "?i <= length ?xs ==>
      idx_iteratei_aux (!) (length ?xs) ?i ?xs ?c ?f ?\<sigma> =
      foldli (drop (length ?xs - ?i) ?xs) ?c ?f ?\<sigma>",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 6, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 6, template_var 3)),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 6, template_var 3)),
                       template_var 4)),
                   template_var 3)),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Idx_Iterator.idx_iteratei_aux_simps",
     "[| ?i ~= 0; ?c ?\<sigma> |]
      ==> idx_iteratei_aux ?get ?sz ?i ?l ?c ?f ?\<sigma> =
          idx_iteratei_aux ?get ?sz (?i - 1) ?l ?c ?f
           (?f (?get ?l (?sz - ?i)) ?\<sigma>)",
     template_implication
      ([template_negation
         (template_equation (template_var 6, template_hole 4)),
        template_predicate (template_app (template_var 5, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2),
                   template_var 6),
                 template_var 1),
               template_var 5),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_hole 0)),
                 template_var 1),
               template_var 5),
             template_var 0),
           template_app
            (template_app
              (template_var 0,
               template_app
                (template_app (template_var 3, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 6))),
             template_var 4))))),
    ("Idx_Iterator.idx_iteratei_eq_foldli",
     "[| (?sz, length) : ?arel \<rightarrow> nat_rel;
         (?get, (!)) : ?arel \<rightarrow> nat_rel \<rightarrow> Id;
         (?s, ?s') : ?arel |]
      ==> (idx_iteratei ?get ?sz ?s, foldli ?s') : Id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 4),
                  template_hole 21)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_hole 18),
                    template_var 3)),
                template_hole 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 2),
                  template_hole 14)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_hole 17)),
                  template_hole 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4),
                     template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           )))]
