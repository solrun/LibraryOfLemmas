   [("SetIteratorGA.iterate_to_list_foldli",
     "iterate_to_list (foldli ?xs) = rev ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SetIteratorGA.set_iterator_finite",
     "set_iterator ?it ?S0.0 ==> finite ?S0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SetIteratorGA.iterator_to_ordered_iterator_mergesort_code",
     "iterator_to_ordered_iterator_mergesort ?R ?it =
      foldli (mergesort_by_rel ?R (iterate_to_list ?it))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("SetIteratorGA.map_iterator_finite",
     "map_iterator ?it ?m ==> finite (dom ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SetIteratorGA.iterator_to_ordered_iterator_quicksort_code",
     "iterator_to_ordered_iterator_quicksort ?R ?it =
      foldli (quicksort_by_rel ?R [] (iterate_to_list ?it))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("SetIteratorGA.iterate_is_empty_by_size_correct",
     "set_iterator ?it ?S0.0 ==>
      iterate_is_empty_by_size ?it = (?S0.0 = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (template_app (template_hole 2, template_var 1))],
         template_equation (template_var 0, template_hole 0)))),
    ("SetIteratorGA.iterate_is_empty_correct",
     "set_iterator ?it ?S0.0 ==> iterate_is_empty ?it = (?S0.0 = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (template_app (template_hole 2, template_var 1))],
         template_equation (template_var 0, template_hole 0)))),
    ("SetIteratorGA.iterate_is_sng_correct",
     "set_iterator ?it ?S0.0 ==> iterate_is_sng ?it = (card ?S0.0 = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (template_app (template_hole 3, template_var 1))],
         template_equation
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("SetIteratorGA.iterate_size_correct",
     "set_iterator ?it ?S0.0 ==>
      iterate_size ?it = card ?S0.0 & finite ?S0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SetIteratorGA.iterate_ball_correct",
     "set_iterator ?it ?S0.0 ==> iterate_ball ?it ?P = (ALL x:?S0.0. ?P x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetIteratorGA.iterate_bex_correct",
     "set_iterator ?it ?S0.0 ==> iterate_bex ?it ?P = (EX x:?S0.0. ?P x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetIteratorGA.iterate_to_list_correct",
     "set_iterator ?it ?S0.0 ==>
      set (iterate_to_list ?it) = ?S0.0 & distinct (iterate_to_list ?it)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1))),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)))
           ))),
    ("SetIteratorGA.iterate_size_abort_correct",
     "set_iterator ?it ?S0.0 ==>
      iterate_size_abort ?it ?n = min ?n (card ?S0.0) & finite ?S0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 1)))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIteratorGA.iterate_sel_no_map_correct",
     "set_iterator ?it ?S0.0 ==>
      (iterate_sel_no_map ?it ?P = None) = (ALL x:?S0.0. ~ ?P x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("SetIteratorGA.iterate_sel_no_map_genord_correct",
     "set_iterator_genord ?it ?S0.0 ?R ==>
      (iterate_sel_no_map ?it ?P = None) = (ALL x:?S0.0. ~ ?P x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("SetIteratorGA.iterate_sel_genord_correct",
     "set_iterator_genord ?it ?S0.0 ?R ==>
      (iterate_sel ?it ?f = None) = (ALL x:?S0.0. ?f x = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("SetIteratorGA.iterate_sel_no_map_correct",
     "[| set_iterator ?it ?S0.0; iterate_sel_no_map ?it ?P = Some ?x |]
      ==> ?x : ?S0.0 & ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_var 1, template_var 0))
           ))),
    ("SetIteratorGA.iterate_to_list_genord_correct",
     "set_iterator_genord ?it ?S0.0 ?R ==>
      set (iterate_to_list ?it) = ?S0.0 &
      distinct (iterate_to_list ?it) &
      sorted_wrt ?R (rev (iterate_to_list ?it))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 2))),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 2))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_var 2)))))
           ))),
    ("SetIteratorGA.iterate_sel_no_map_map_correct",
     "[| map_iterator ?it ?m; iterate_sel_no_map ?it ?P = Some (?k, ?v) |]
      ==> ?m ?k = Some ?v & ?P (?k, ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_var 3, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)))
           ))),
    ("SetIteratorGA.iterator_to_ordered_iterator_correct",
     "[| !!l. sorted_wrt ?R (?sort_fun l) & mset (?sort_fun l) = mset l;
         set_iterator ?it ?S0.0 |]
      ==> set_iterator_genord (iterator_to_ordered_iterator ?sort_fun ?it)
           ?S0.0 ?R",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0),
             template_var 3)
           ))),
    ("SetIteratorGA.iterate_sel_no_map_map_correct",
     "map_iterator ?it ?m ==>
      (iterate_sel_no_map ?it ?P = None) =
      (ALL k v. ?m k = Some v --> ~ ?P (k, v))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app (template_hole 11, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 0)),
           template_hole 7),
         template_app (template_hole 6, t_empty)))),
    ("SetIteratorGA.iterate_sel_no_map_genord_correct",
     "[| set_iterator_genord ?it ?S0.0 ?R;
         iterate_sel_no_map ?it ?P = Some ?x |]
      ==> ?x : ?S0.0 & ?P ?x & (ALL x':?S0.0 - {?x}. ?P x' --> ?R ?x x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 4), template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_var 1, template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_hole 1))),
                 t_empty)))
           ))),
    ("SetIteratorGA.iterate_sel_genord_correct",
     "[| set_iterator_genord ?it ?S0.0 ?R; iterate_sel ?it ?f = Some ?y |]
      ==> EX x:?S0.0.
             ?f x = Some ?y &
             (ALL x':?S0.0 - {x}. ALL y. ?f x' = Some ?y' --> ?R x x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 5), template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 4), t_empty)
           ))),
    ("SetIteratorGA.iterator_to_ordered_iterator_mergesort_correct",
     "[| !!x y. ?R x y | ?R y x; !!x y z. [| ?R x y; ?R y z |] ==> ?R x z;
         set_iterator ?it ?S0.0 |]
      ==> set_iterator_genord
           (iterator_to_ordered_iterator_mergesort ?R ?it) ?S0.0 ?R",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0),
             template_var 2)
           ))),
    ("SetIteratorGA.iterator_to_ordered_iterator_quicksort_correct",
     "[| !!x y. ?R x y | ?R y x; !!x y z. [| ?R x y; ?R y z |] ==> ?R x z;
         set_iterator ?it ?S0.0 |]
      ==> set_iterator_genord
           (iterator_to_ordered_iterator_quicksort ?R ?it) ?S0.0 ?R",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0),
             template_var 2)
           )))]
