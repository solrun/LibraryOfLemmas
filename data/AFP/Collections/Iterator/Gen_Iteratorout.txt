Loading theory "Draft.SetIterator" (required by "Draft.Gen_IteratorTemplates" via "Draft.Gen_Iterator" via "Draft.Proper_Iterator" via "Draft.SetIteratorOperations")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.571s cpu time, 0.046s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
locale set_iterator_genord
  fixes
    iti ::
      "('\<sigma> => bool)
       => ('x => '\<sigma> => '\<sigma>) => '\<sigma> => '\<sigma>"
    and S0 :: "'x set"
    and R :: "'x => 'x => bool"
  assumes "set_iterator_genord iti S0 R"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.228s elapsed time, 0.922s cpu time, 0.046s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.356s elapsed time, 1.411s cpu time, 0.148s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.974s elapsed time, 3.604s cpu time, 0.880s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.SetIterator"
### 1.271s elapsed time, 4.738s cpu time, 0.926s GC time
Loading theory "Draft.SetIteratorOperations" (required by "Draft.Gen_IteratorTemplates" via "Draft.Gen_Iterator" via "Draft.Proper_Iterator")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.049s elapsed time, 3.748s cpu time, 0.864s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.018s elapsed time, 6.275s cpu time, 1.178s GC time
Loading theory "Draft.Templates" (required by "Draft.Gen_IteratorTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Gen_IteratorTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.767s elapsed time, 1.813s cpu time, 0.751s GC time
### theory "Draft.SetIteratorOperations"
### 1.739s elapsed time, 3.959s cpu time, 0.963s GC time
Loading theory "Draft.Proper_Iterator" (required by "Draft.Gen_IteratorTemplates" via "Draft.Gen_Iterator")
structure Icf_Proper_Iterator:
  sig
    val add: attribute
    val add_thm: thm -> Context.generic -> Context.generic
    val del: attribute
    val del_thm: thm -> Context.generic -> Context.generic
    val get: Proof.context -> thm list
    structure icf_proper_iteratorI: NAMED_THMS
    val setup: theory -> theory
  end
### theory "Draft.Proper_Iterator"
### 0.311s elapsed time, 0.384s cpu time, 0.045s GC time
Loading theory "Draft.Gen_Iterator" (required by "Draft.Gen_IteratorTemplates")
### theory "Draft.Gen_Iterator"
### 0.358s elapsed time, 0.415s cpu time, 0.049s GC time
Loading theory "Draft.Gen_IteratorTemplates"
val templateLemmas =
   [("Gen_Iterator.it_to_sorted_list_weaken",
     "?R <= ?R' ==> it_to_sorted_list ?R ?s <= it_to_sorted_list ?R' ?s",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Gen_Iterator.pi'_dom",
     "proper_it' ?it ?it' ==>
      proper_it' (map_iterator_dom o ?it) (map_iterator_dom o ?it')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Gen_Iterator.set_to_list_by_set_to_sorted_list",
     "GEN_ALGO_tag (is_set_to_sorted_list ?ordR ?Rk ?Rs ?tsl) ==>
      is_set_to_list ?Rk ?Rs ?tsl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Gen_Iterator.set_to_sorted_list_itype",
     "set_to_sorted_list ?R ::\<^sub>i
      \<langle>?I\<rangle>\<^sub>i?i_set \<rightarrow>\<^sub>i
      \<langle>\<langle>?I\<rangle>\<^sub>ii_list\<rangle>\<^sub>ii_nres",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 4, template_hole 1),
               template_app
                (template_app (template_hole 4, template_hole 0),
                 template_var 0))))
         )),
    ("Gen_Iterator.map_to_list_by_map_to_sorted_list",
     "GEN_ALGO_tag (is_map_to_sorted_list ?ordR ?Rk ?Rv ?Rm ?tsl) ==>
      is_map_to_list ?Rk ?Rv ?Rm ?tsl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Gen_Iterator.map_to_sorted_list_itype",
     "map_to_sorted_list ?R ::\<^sub>i
      \<langle>?Rk, ?Rv\<rangle>\<^sub>i?i_map \<rightarrow>\<^sub>i
      \<langle>\<langle>\<langle>?Rk,
      ?Rv\<rangle>\<^sub>ii_prod\<rangle>\<^sub>ii_list\<rangle>\<^sub>ii_nres",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 3)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_app (template_hole 5, template_hole 2),
               template_app
                (template_app (template_hole 5, template_hole 1),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 0),
                       template_var 1)),
                   template_var 0)))))
         )),
    ("Gen_Iterator.det_fold_setI",
     "(!!l. [| distinct l; sorted_wrt ?R l |]
            ==> foldli l ?c ?f ?\<sigma> = ?result (set l)) ==>
      det_fold_set ?R ?c ?f ?\<sigma> ?result",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Gen_Iterator.det_fold_mapI",
     "(!!l. [| distinct (map fst l); sorted_wrt (key_rel ?R) l |]
            ==> foldli l ?c ?f ?\<sigma> = ?result (map_of l)) ==>
      det_fold_map ?R ?c ?f ?\<sigma> ?result",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Gen_Iterator.set_to_sorted_list_by_tsl",
     "[| MINOR_PRIO_TAG (- 11);
         SIDE_GEN_ALGO (is_set_to_sorted_list ?R ?Rk ?Rs ?tsl) |]
      ==> (%s. RETURN (?tsl s), set_to_sorted_list ?R)
          : \<langle>?Rk\<rangle>?Rs \<rightarrow>
            \<langle>\<langle>?Rk\<rangle>list_rel\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_app
               (template_hole 19,
                template_app
                 (template_hole 18,
                  template_app
                   (template_hole 17,
                    template_app
                     (template_hole 17,
                      template_app (template_hole 16, template_hole 15))))))
            ),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 12, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, t_empty),
                 template_app (template_hole 8, template_var 3))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 2))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2))))
           ))),
    ("Gen_Iterator.set_to_list_by_tsl",
     "[| PRIO_TAG_GEN_ALGO; SIDE_GEN_ALGO (is_set_to_list ?Rk ?Rs ?tsl) |]
      ==> (%s. RETURN (?tsl s), set_to_sorted_list (%_ _. True))
          : \<langle>?Rk\<rangle>?Rs \<rightarrow>
            \<langle>\<langle>?Rk\<rangle>list_rel\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app
               (template_hole 20,
                template_app
                 (template_hole 19,
                  template_app
                   (template_hole 18,
                    template_app
                     (template_hole 17,
                      template_app (template_hole 18, template_hole 16))))))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, t_empty),
                 template_app (template_hole 9, t_empty))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 2))),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2))))
           ))),
    ("Gen_Iterator.is_set_to_sorted_listE",
     "[| is_set_to_sorted_list ?ordR ?Rk ?Rs ?tsl;
         (?s, ?s') : \<langle>?Rk\<rangle>?Rs;
         !!l'. [| (?tsl ?s, l') : \<langle>?Rk\<rangle>list_rel;
                  RETURN l' <= it_to_sorted_list ?ordR ?s' |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 8, template_var 4),
                template_var 5))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Gen_Iterator.det_fold_map_aux",
     "[| [| distinct (map fst ?l); sorted_wrt (key_rel ?R) ?l |]
         ==> foldli ?l ?c ?f ?\<sigma> = ?result (map_of ?l);
         RETURN ?l <= it_to_sorted_list (key_rel ?R) (map_to_set ?m) |]
      ==> foldli ?l ?c ?f ?\<sigma> = ?result ?m",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 6))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 5)),
                   template_var 6)
                 )],
            template_equation
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_var 1,
                template_app (template_hole 4, template_var 6))))),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 6),
          template_app
           (template_app
             (template_hole 1,
              template_app (template_hole 7, template_var 5)),
            template_app (template_hole 0, template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 6),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app (template_var 1, template_var 0)))),
    ("Gen_Iterator.proper_it_mono_dres",
     "[| proper_it' ?it ?it'; !!kv x. ?f kv x <= ?f' kv x |]
      ==> ?it' ?s (case_dres False False ?c) (%kv s. s >>= ?f kv) ?\<sigma>
          <= ?it' ?s (case_dres False False ?c) (%kv s. s >>= ?f' kv)
              ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_var 5, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 1),
                 template_var 1)),
             t_empty),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_var 5, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 1),
                 template_var 1)),
             t_empty),
           template_var 0)))),
    ("Gen_Iterator.map_to_sorted_list_by_tsl",
     "[| MINOR_PRIO_TAG (- 11);
         SIDE_GEN_ALGO (is_map_to_sorted_list ?R ?Rk ?Rv ?Rs ?tsl) |]
      ==> (%s. RETURN (?tsl s), map_to_sorted_list ?R)
          : \<langle>?Rk, ?Rv\<rangle>?Rs \<rightarrow>
            \<langle>\<langle>?Rk \<times>\<^sub>r
                              ?Rv\<rangle>list_rel\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_hole 24),
              template_app
               (template_hole 23,
                template_app
                 (template_hole 22,
                  template_app
                   (template_hole 21,
                    template_app
                     (template_hole 21,
                      template_app (template_hole 20, template_hole 19))))))
            ),
        template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, t_empty),
                 template_app (template_hole 12, template_var 4))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_var 3)),
                     template_var 2))),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_var 3)),
                     template_var 2)))))
           ))),
    ("Gen_Iterator.map_to_list_by_tsl",
     "[| PRIO_TAG_GEN_ALGO;
         SIDE_GEN_ALGO (is_map_to_list ?Rk ?Rv ?Rs ?tsl) |]
      ==> (%s. RETURN (?tsl s), map_to_sorted_list (%_ _. True))
          : \<langle>?Rk, ?Rv\<rangle>?Rs \<rightarrow>
            \<langle>\<langle>?Rk \<times>\<^sub>r
                              ?Rv\<rangle>list_rel\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_hole 25),
              template_app
               (template_hole 24,
                template_app
                 (template_hole 23,
                  template_app
                   (template_hole 22,
                    template_app
                     (template_hole 21,
                      template_app (template_hole 22, template_hole 20))))))
            ),
        template_predicate
         (
            template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 17, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, t_empty),
                 template_app (template_hole 13, t_empty))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_var 3)),
                     template_var 2))),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_var 3)),
                     template_var 2)))))
           ))),
    ("Gen_Iterator.param_it_to_list",
     "(it_to_list, it_to_list)
      : (?Rs \<rightarrow>
         (?Ra \<rightarrow> bool_rel) \<rightarrow>
         (?Rb \<rightarrow>
          \<langle>?Rb\<rangle>list_rel \<rightarrow>
          \<langle>?Rb\<rangle>list_rel) \<rightarrow>
         \<langle>?Rc\<rangle>list_rel \<rightarrow> ?Rd) \<rightarrow>
        ?Rs \<rightarrow> ?Rd",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 35,
             template_app
              (template_app (template_hole 34, template_hole 33),
               template_hole 32)),
           template_app
            (template_app
              (template_hole 31,
               template_app
                (template_app (template_hole 30, template_hole 29),
                 template_app
                  (template_app
                    (template_hole 28,
                     template_app
                      (template_app (template_hole 27, template_hole 26),
                       template_var 4)),
                   template_app
                    (template_app
                      (template_hole 25,
                       template_app
                        (template_app (template_hole 24, template_hole 23),
                         template_app
                          (template_app
                            (template_hole 22,
                             template_app
                              (template_app
                                (template_hole 21, template_hole 20),
                               template_var 3)),
                           template_hole 19))),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app
                            (template_hole 17, template_hole 16),
                           template_app
                            (template_app
                              (template_hole 15,
                               template_app
                                (template_app
                                  (template_hole 14, template_hole 13),
                                 template_var 2)),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11, template_hole 10),
                                   template_app
                                    (template_app
(template_hole 9, template_hole 8),
                                     template_var 2))),
                               template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_var 2))))),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_app
                              (template_app
                                (template_hole 4, template_hole 3),
                               template_var 1))),
                         template_var 0)))))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 4)),
               template_var 0)))
         )),
    ("Gen_Iterator.proper_it_mono_dres_flat",
     "[| proper_it' ?it ?it'; !!kv x. flat_ge (?f kv x) (?f' kv x) |]
      ==> flat_ge
           (?it' ?s (case_dres False False ?c) (%kv s. s >>= ?f kv)
             ?\<sigma>)
           (?it' ?s (case_dres False False ?c) (%kv s. s >>= ?f' kv)
             ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_app
                    (template_app (template_var 5, template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_hole 1),
                       template_var 1)),
                   t_empty),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_var 5, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 1),
                     template_var 1)),
                 t_empty),
               template_var 0))
           ))),
    ("Gen_Iterator.proper_it_mono_dres_dom",
     "[| proper_it' ?it ?it'; !!kv x. ?f kv x <= ?f' kv x |]
      ==> (map_iterator_dom o ?it') ?s (case_dres False False ?c)
           (%kv s. s >>= ?f kv) ?\<sigma>
          <= (map_iterator_dom o ?it') ?s (case_dres False False ?c)
              (%kv s. s >>= ?f' kv) ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 5),
                 template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 1),
                 template_var 1)),
             t_empty),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 5),
                 template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 1),
                 template_var 1)),
             t_empty),
           template_var 0)))),
    ("Gen_Iterator.is_map_to_sorted_listE",
     "[| is_map_to_sorted_list ?ordR ?Rk ?Rv ?Rm ?tsl;
         (?m, ?m') : \<langle>?Rk, ?Rv\<rangle>?Rm;
         !!l'. [| (?tsl ?m, l')
                  : \<langle>?Rk \<times>\<^sub>r ?Rv\<rangle>list_rel;
                  RETURN l'
                  <= it_to_sorted_list (key_rel ?ordR) (map_to_set ?m') |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 17, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 6)),
                template_var 5))
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Gen_Iterator.proper_it_mono_dres_dom_flat",
     "[| proper_it' ?it ?it'; !!kv x. flat_ge (?f kv x) (?f' kv x) |]
      ==> flat_ge
           ((map_iterator_dom o ?it') ?s (case_dres False False ?c)
             (%kv s. s >>= ?f kv) ?\<sigma>)
           ((map_iterator_dom o ?it') ?s (case_dres False False ?c)
             (%kv s. s >>= ?f' kv) ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_var 5),
                       template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_hole 1),
                       template_var 1)),
                   t_empty),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 5),
                     template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 1),
                     template_var 1)),
                 t_empty),
               template_var 0))
           ))),
    ("Gen_Iterator.proper_it_mono_dres_pair",
     "[| proper_it' ?it ?it'; !!k v x. ?f k v x <= ?f' k v x |]
      ==> ?it' ?s (case_dres False False ?c) (%(k, v) s. s >>= ?f k v)
           ?\<sigma>
          <= ?it' ?s (case_dres False False ?c) (%(k, v) s. s >>= ?f' k v)
              ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_var 5, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2),
                 template_var 1)),
             template_app (template_hole 1, t_empty)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_var 5, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2),
                 template_var 1)),
             template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("Gen_Iterator.proper_it_mono_dres_pair_flat",
     "[| proper_it' ?it ?it'; !!k v x. flat_ge (?f k v x) (?f' k v x) |]
      ==> flat_ge
           (?it' ?s (case_dres False False ?c) (%(k, v) s. s >>= ?f k v)
             ?\<sigma>)
           (?it' ?s (case_dres False False ?c) (%(k, v) s. s >>= ?f' k v)
             ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_app
                    (template_app (template_var 5, template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 2),
                       template_var 1)),
                   template_app (template_hole 1, t_empty)),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_var 5, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 2),
                     template_var 1)),
                 template_app (template_hole 1, t_empty)),
               template_var 0))
           ))),
    ("Gen_Iterator.det_fold_sorted_set",
     "[| det_fold_set ?ordR ?c' ?f' ?\<sigma>' ?result;
         is_set_to_sorted_list ?ordR ?Rk ?Rs ?tsl;
         (?s, ?s') : \<langle>?Rk\<rangle>?Rs;
         (?c, ?c') : ?R\<sigma> \<rightarrow> bool_rel;
         (?f, ?f') : ?Rk \<rightarrow> ?R\<sigma> \<rightarrow> ?R\<sigma>;
         (?\<sigma>, ?\<sigma>') : ?R\<sigma> |]
      ==> (foldli (?tsl ?s) ?c ?f ?\<sigma>, ?result ?s') : ?R\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 21, template_var 13),
                    template_var 12),
                  template_var 11),
                template_var 10),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 20, template_var 13),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 17, template_var 7),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 12)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_var 2)),
                template_hole 11))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 11)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 10)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_var 6, template_var 5)),
                         template_var 3),
                       template_var 1),
                     template_var 0)),
                 template_app (template_var 9, template_var 4))),
             template_var 2)
           ))),
    ("Gen_Iterator.det_fold_set",
     "[| det_fold_set (%_ _. True) ?c' ?f' ?\<sigma>' ?result;
         is_set_to_list ?Rk ?Rs ?tsl; (?s, ?s') : \<langle>?Rk\<rangle>?Rs;
         (?c, ?c') : ?R\<sigma> \<rightarrow> bool_rel;
         (?f, ?f') : ?Rk \<rightarrow> ?R\<sigma> \<rightarrow> ?R\<sigma>;
         (?\<sigma>, ?\<sigma>') : ?R\<sigma> |]
      ==> (foldli (?tsl ?s) ?c ?f ?\<sigma>, ?result ?s') : ?R\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 22, t_empty),
                    template_var 12),
                  template_var 11),
                template_var 10),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 17, template_var 7),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 12)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_var 2)),
                template_hole 11))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 11)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 10)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_var 6, template_var 5)),
                         template_var 3),
                       template_var 1),
                     template_var 0)),
                 template_app (template_var 9, template_var 4))),
             template_var 2)
           ))),
    ("Gen_Iterator.det_fold_sorted_map",
     "[| det_fold_map ?ordR ?c' ?f' ?\<sigma>' ?result;
         is_map_to_sorted_list ?ordR ?Rk ?Rv ?Rm ?tsl;
         (?m, ?m') : \<langle>?Rk, ?Rv\<rangle>?Rm;
         (?c, ?c') : ?R\<sigma> \<rightarrow> bool_rel;
         (?f, ?f')
         : ?Rk \<times>\<^sub>r ?Rv \<rightarrow>
           ?R\<sigma> \<rightarrow> ?R\<sigma>;
         (?\<sigma>, ?\<sigma>') : ?R\<sigma> |]
      ==> (foldli (?tsl ?m) ?c ?f ?\<sigma>, ?result ?m') : ?R\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 25, template_var 14),
                    template_var 13),
                  template_var 12),
                template_var 11),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 24, template_var 14),
                    template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 7),
                    template_var 9)),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_var 13)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 2)),
                template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 12)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 9)),
                      template_var 8))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 11)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_var 6, template_var 5)),
                         template_var 3),
                       template_var 1),
                     template_var 0)),
                 template_app (template_var 10, template_var 4))),
             template_var 2)
           ))),
    ("Gen_Iterator.det_fold_map",
     "[| det_fold_map (%_ _. True) ?c' ?f' ?\<sigma>' ?result;
         is_map_to_list ?Rk ?Rv ?Rm ?tsl;
         (?m, ?m') : \<langle>?Rk, ?Rv\<rangle>?Rm;
         (?c, ?c') : ?R\<sigma> \<rightarrow> bool_rel;
         (?f, ?f')
         : ?Rk \<times>\<^sub>r ?Rv \<rightarrow>
           ?R\<sigma> \<rightarrow> ?R\<sigma>;
         (?\<sigma>, ?\<sigma>') : ?R\<sigma> |]
      ==> (foldli (?tsl ?m) ?c ?f ?\<sigma>, ?result ?m') : ?R\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 26, t_empty),
                    template_var 13),
                  template_var 12),
                template_var 11),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 24, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 7),
                    template_var 9)),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_var 13)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 2)),
                template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 12)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 9)),
                      template_var 8))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 11)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_var 6, template_var 5)),
                         template_var 3),
                       template_var 1),
                     template_var 0)),
                 template_app (template_var 10, template_var 4))),
             template_var 2)
           )))]:
   (string * thm * template) list
### theory "Draft.Gen_IteratorTemplates"
### 0.468s elapsed time, 0.666s cpu time, 0.091s GC time
val it = (): unit
