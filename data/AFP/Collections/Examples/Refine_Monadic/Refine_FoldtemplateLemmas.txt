   [("Refine_Fold.rfoldl_simps", "rfoldl ?f ?s [] = RETURN ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Fold.pick_sum_code_refines",
     "RETURN (pick_sum_code ?s ?l) <= pick_sum_impl ?s ?l",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Fold.foldl_mono",
     "(!!x. mono (%s. ?f s x)) ==> mono (%s. foldl ?f s ?l)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_Fold.rfoldl_simps",
     "rfoldl ?f ?s (?x # ?ls) = ?f ?s ?x >>= (%s. rfoldl ?f s ?ls)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 3, template_var 2),
             template_var 1)),
         t_empty))),
    ("Refine_Fold.pick_sum_code_aux",
     "RETURN
       (foldl (%s x. Let (the (ls.sel x (%_. True))) ((+) s)) ?s0.0 ?l)
      <= pick_sum_impl ?s0.0 ?l",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, t_empty), template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Fold.pick_sum_impl_refine",
     "(?l, ?l') : \<langle>br ls.\<alpha> ls.invar\<rangle>list_rel ==>
      pick_sum_impl ?s0.0 ?l <= \<Down> nat_rel (pick_sum ?s0.0 ?l')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6)),
                  template_app (template_hole 5, template_hole 6))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Refine_Fold.transfer_rfoldl",
     "(!!s x. RETURN (?f s x) <= ?F s x) ==>
      RETURN (foldl ?f ?s ?l) <= rfoldl ?F ?s ?l",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Fold.pick_sum_correct",
     "[| {} ~: set ?l; ALL x:set ?l. finite x |]
      ==> pick_sum ?s0.0 ?l
          <= SPEC (%s. s <= foldl (%s x. s + Max x) ?s0.0 ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app (template_hole 10, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 10, template_var 1)),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 6, template_var 0), template_var 1),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("Refine_Fold.rfoldl_refines",
     "[| !!x x' s s'.
            [| (s, s') : ?Rs; (x, x') : ?Rl |]
            ==> ?f s x <= \<Down> ?Rs (?f' s' x');
         (?s0.0, ?s0') : ?Rs; (?l, ?l') : \<langle>?Rl\<rangle>list_rel |]
      ==> rfoldl ?f ?s0.0 ?l <= \<Down> ?Rs (rfoldl ?f' ?s0' ?l')",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 6))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app (template_hole 6, template_var 7),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 0)))))]
