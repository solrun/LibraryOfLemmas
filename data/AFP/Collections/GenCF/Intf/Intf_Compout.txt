Loading theory "Draft.Intf_Comp" (required by "Draft.Intf_CompTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.139s elapsed time, 0.552s cpu time, 0.050s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.224s elapsed time, 0.893s cpu time, 0.050s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.356s elapsed time, 1.390s cpu time, 0.146s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs")
locale linorder_on
  fixes D :: "'a set"
    and cmp :: "'a => 'a => comp_res"
  assumes "linorder_on D cmp"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
consts
  cmp_lex' :: "('a => 'b => comp_res) => 'a list => 'b list => comp_res"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "{}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale eq_linorder_on
  fixes D :: "'a set"
    and cmp :: "'a => 'a => comp_res"
  assumes "eq_linorder_on D cmp"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 1.044s elapsed time, 3.865s cpu time, 1.017s GC time
linorder_on (?f ` ?D) ?cmp ==> linorder_on ?D (cmp_img ?f ?cmp)
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
"cmp_lex"
  :: "('a => 'b => comp_res) => 'a list => 'b list => comp_res"
Found termination order: "size <*mlex*> {}"
"cmp_prod"
  :: "('a => 'b => comp_res)
      => ('c => 'd => comp_res) => 'a * 'c => 'b * 'd => comp_res"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "Draft.Intf_Comp"
### 1.506s elapsed time, 5.487s cpu time, 1.165s GC time
### theory "HOL-Library.Stream"
### 1.159s elapsed time, 4.111s cpu time, 1.019s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.032s elapsed time, 5.748s cpu time, 1.256s GC time
Loading theory "Draft.Templates" (required by "Draft.Intf_CompTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Intf_CompTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.459s elapsed time, 0.518s cpu time, 0.075s GC time
Loading theory "Draft.Intf_CompTemplates"
val templateLemmas =
   [("Intf_Comp.map_to_set_inj'", "inj_on map_to_set ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Intf_Comp.dflt_cmp_2inv",
     "dflt_cmp (comp2le ?cmp) (comp2lt ?cmp) = ?cmp",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Intf_Comp.eq_linorder_class_conv",
     "eq_linorder ?cmp = class.linorder (comp2le ?cmp) (comp2lt ?cmp)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Intf_Comp.cmp_lex_alt", "cmp_lex ?cmp ?l ?m = cmp_lex' ?cmp ?l ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Intf_Comp.eq_linorder_comp2eq_eq",
     "eq_linorder ?cmp ==> comp2eq ?cmp = (=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (template_app (template_hole 1, template_var 0))],
         template_predicate (template_hole 0)))),
    ("Intf_Comp.set_ord_eq_linorder",
     "eq_linorder ?cmp ==> eq_linorder (cmp_set ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Intf_Comp.set_ord_linear",
     "linorder ?cmp ==> linorder (cmp_set ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Intf_Comp.extend_eq_linorder",
     "eq_linorder_on ?D ?cmp ==> eq_linorder (cmp_extend ?D ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Intf_Comp.lex_eq_linorder",
     "eq_linorder_on ?D ?cmp ==> eq_linorder_on (lists ?D) (cmp_lex ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Intf_Comp.extend_linorder",
     "linorder_on ?D ?cmp ==> linorder (cmp_extend ?D ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Intf_Comp.set_to_map_set_is_map_of",
     "distinct (map fst ?l) ==> set_to_map (set ?l) = map_of ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Intf_Comp.img_linorder",
     "linorder_on (?f ` ?D) ?cmp ==> linorder_on ?D (cmp_img ?f ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Intf_Comp.restrict_eq_linorder",
     "[| eq_linorder_on ?D ?cmp; ?D' <= ?D |] ==> eq_linorder_on ?D' ?cmp",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Intf_Comp.restrict_linorder",
     "[| linorder_on ?D ?cmp; ?D' <= ?D |] ==> linorder_on ?D' ?cmp",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Intf_Comp.map_ord_eq_linorder",
     "[| eq_linorder ?cmpk; eq_linorder ?cmpv |]
      ==> eq_linorder (cmp_map ?cmpk ?cmpv)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Intf_Comp.map_ord_linear",
     "[| linorder ?cmpk; linorder ?cmpv |]
      ==> linorder (cmp_map ?cmpk ?cmpv)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Intf_Comp.img_eq_linorder",
     "[| eq_linorder_on (?f ` ?D) ?cmp; inj_on ?f ?D |]
      ==> eq_linorder_on ?D (cmp_img ?f ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Intf_Comp.prod_eq_linorder",
     "[| eq_linorder_on ?D1.0 ?cmp1.0; eq_linorder_on ?D2.0 ?cmp2.0 |]
      ==> eq_linorder_on (?D1.0 \<times> ?D2.0) (cmp_prod ?cmp1.0 ?cmp2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3), t_empty)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Intf_Comp.prod_linorder",
     "[| linorder_on ?A ?cmp1.0; linorder_on ?B ?cmp2.0 |]
      ==> linorder_on (?A \<times> ?B) (cmp_prod ?cmp1.0 ?cmp2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3), t_empty)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Intf_Comp.param_comp_res",
     "(case_comp_res, case_comp_res)
      : ?Ra \<rightarrow>
        ?Ra \<rightarrow> ?Ra \<rightarrow> comp_res_rel \<rightarrow> ?Ra",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 0)),
                   template_var 0)))))
         )),
    ("Intf_Comp.combine_eq_linorder",
     "[| eq_linorder_on ?D1.0 ?cmp1.0; eq_linorder_on ?D2.0 ?cmp2.0;
         ?D = ?D1.0 Un ?D2.0 |]
      ==> eq_linorder_on ?D (cmp_combine ?D1.0 ?cmp1.0 ?D2.0 ?cmp2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 4),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Intf_Comp.combine_linorder",
     "[| linorder_on ?D1.0 ?cmp1.0; linorder_on ?D2.0 ?cmp2.0;
         ?D = ?D1.0 Un ?D2.0 |]
      ==> linorder_on ?D (cmp_combine ?D1.0 ?cmp1.0 ?D2.0 ?cmp2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 4),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Intf_Comp.param_comp2eq",
     "(comp2eq, comp2eq)
      : (?R \<rightarrow> ?R \<rightarrow> comp_res_rel) \<rightarrow>
        ?R \<rightarrow> ?R \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app (template_hole 19, template_hole 18),
               template_hole 17)),
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_hole 14),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 0)),
                     template_hole 7)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0)),
                 template_hole 0))))
         )),
    ("Intf_Comp.linorder_to_class",
     "[| linorder ?cmp; !!x y. ?cmp x y = EQUAL ==> x = y |]
      ==> class.linorder (comp2le ?cmp) (comp2lt ?cmp)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Intf_Comp.param_cmp_lex",
     "(cmp_lex, cmp_lex)
      : (?Ra \<rightarrow> ?Rb \<rightarrow> comp_res_rel) \<rightarrow>
        \<langle>?Ra\<rangle>list_rel \<rightarrow>
        \<langle>?Rb\<rangle>list_rel \<rightarrow> comp_res_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app (template_hole 22, template_hole 21),
               template_hole 20)),
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_hole 14),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_var 0)),
                     template_hole 10)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0))),
                 template_hole 10))))
         )),
    ("Intf_Comp.UnE'",
     "[| ?x : ?A Un ?B; ?x : ?A ==> ?thesis;
         [| ?x ~: ?A; ?x : ?B |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)
                   )
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Intf_Comp.param_cmp_img",
     "(cmp_img, cmp_img)
      : (?Ra \<rightarrow> ?Rb) \<rightarrow>
        (?Rb \<rightarrow> ?Rb \<rightarrow> ?Rc) \<rightarrow>
        ?Ra \<rightarrow> ?Ra \<rightarrow> ?Rc",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 24,
             template_app
              (template_app (template_hole 23, template_hole 22),
               template_hole 21)),
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app (template_hole 19, template_hole 18),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app (template_hole 16, template_hole 15),
                       template_var 2)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_hole 6),
                           template_var 1)),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2)),
                   template_var 0)))))
         )),
    ("Intf_Comp.param_cmp_extend",
     "[| (?cmp, ?cmp') : ?R \<rightarrow> ?R \<rightarrow> comp_res_rel;
         Range ?R <= ?D |]
      ==> (?cmp, cmp_extend ?D ?cmp')
          : ?R \<rightarrow> ?R \<rightarrow> comp_res_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_var 1)),
                  template_hole 3)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 1)),
                 template_hole 3)))
           ))),
    ("Intf_Comp.cmp_extend_paramD",
     "[| (?cmp, cmp_extend ?D ?cmp')
         : ?R \<rightarrow> ?R \<rightarrow> comp_res_rel;
         Range ?R <= ?D |]
      ==> (?cmp, ?cmp') : ?R \<rightarrow> ?R \<rightarrow> comp_res_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app (template_hole 9, template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 0)),
                  template_hole 2)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0)),
                 template_hole 2)))
           ))),
    ("Intf_Comp.cmp_combine_paramD",
     "[| (?cmp, cmp_combine ?D1.0 ?cmp1.0 ?D2.0 ?cmp2.0)
         : ?R \<rightarrow> ?R \<rightarrow> comp_res_rel;
         Range ?R <= ?D1.0 |]
      ==> (?cmp, ?cmp1.0) : ?R \<rightarrow> ?R \<rightarrow> comp_res_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 0)),
                  template_hole 2)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 0),
          template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 5),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0)),
                 template_hole 2)))
           ))),
    ("Intf_Comp.param_cmp_prod",
     "(cmp_prod, cmp_prod)
      : (?Ra \<rightarrow> ?Rb \<rightarrow> comp_res_rel) \<rightarrow>
        (?Rc \<rightarrow> ?Rd \<rightarrow> comp_res_rel) \<rightarrow>
        ?Ra \<times>\<^sub>r ?Rc \<rightarrow>
        ?Rb \<times>\<^sub>r ?Rd \<rightarrow> comp_res_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 34,
             template_app
              (template_app (template_hole 33, template_hole 32),
               template_hole 31)),
           template_app
            (template_app
              (template_hole 30,
               template_app
                (template_app (template_hole 29, template_hole 28),
                 template_app
                  (template_app
                    (template_hole 27,
                     template_app
                      (template_app (template_hole 26, template_hole 25),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 24,
                       template_app
                        (template_app (template_hole 23, template_hole 22),
                         template_var 2)),
                     template_hole 21)))),
             template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app (template_hole 19, template_hole 18),
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app
                            (template_hole 13, template_hole 12),
                           template_var 0)),
                       template_hole 21)))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_hole 6),
                           template_var 3)),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_hole 1, template_hole 0),
                             template_var 2)),
                         template_var 0))),
                   template_hole 21)))))
         ))]:
   (string * thm * template) list
### theory "Draft.Intf_CompTemplates"
### 0.581s elapsed time, 1.208s cpu time, 0.688s GC time
val it = (): unit
