Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "Draft.SetIterator" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator" via "Draft.It_to_It" via "Draft.Proper_Iterator" via "Draft.SetIteratorOperations")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.565s cpu time, 0.056s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
locale set_iterator_genord
  fixes
    iti ::
      "('\<sigma> => bool)
       => ('x => '\<sigma> => '\<sigma>) => '\<sigma> => '\<sigma>"
    and S0 :: "'x set"
    and R :: "'x => 'x => bool"
  assumes "set_iterator_genord iti S0 R"
### theory "HOL-Library.Set_Algebras"
### 0.277s elapsed time, 1.108s cpu time, 0.056s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.351s elapsed time, 1.384s cpu time, 0.165s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.939s elapsed time, 3.508s cpu time, 0.750s GC time
Loading theory "Draft.Intf_Set" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "Draft.SetIterator"
### 1.322s elapsed time, 4.996s cpu time, 1.002s GC time
Loading theory "Draft.Idx_Iterator" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator")
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.031s elapsed time, 3.852s cpu time, 0.837s GC time
Loading theory "Draft.SetIteratorOperations" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator" via "Draft.It_to_It" via "Draft.Proper_Iterator")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Intf_Set"
### 0.306s elapsed time, 1.182s cpu time, 0.168s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd p)))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Idx_Iterator"
### 0.402s elapsed time, 1.530s cpu time, 0.152s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.089s elapsed time, 7.022s cpu time, 1.236s GC time
Loading theory "Draft.Templates" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Impl_Bit_SetTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.783s elapsed time, 1.901s cpu time, 0.856s GC time
### theory "Draft.SetIteratorOperations"
### 1.851s elapsed time, 4.491s cpu time, 1.146s GC time
Loading theory "Draft.Proper_Iterator" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator" via "Draft.It_to_It")
Loading theory "Draft.SetIteratorGA" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator")
structure Icf_Proper_Iterator:
  sig
    val add: attribute
    val add_thm: thm -> Context.generic -> Context.generic
    val del: attribute
    val del_thm: thm -> Context.generic -> Context.generic
    val get: Proof.context -> thm list
    structure icf_proper_iteratorI: NAMED_THMS
    val setup: theory -> theory
  end
### theory "Draft.Proper_Iterator"
### 0.336s elapsed time, 0.726s cpu time, 0.077s GC time
Loading theory "Draft.It_to_It" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator")
Loading theory "Draft.Gen_Iterator" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set" via "Draft.Iterator")
locale proper_it_loc
  fixes
    it ::
      "'s => ('x list => bool)
             => ('x => 'x list => 'x list) => 'x list => 'x list"
    and
    it' ::
      "'s => ('\<sigma> => bool)
             => ('x => '\<sigma> => '\<sigma>) => '\<sigma> => '\<sigma>"
  assumes "proper_it_loc it it'"
### theory "Draft.It_to_It"
### 0.083s elapsed time, 0.254s cpu time, 0.000s GC time
### theory "Draft.SetIteratorGA"
### 0.558s elapsed time, 1.275s cpu time, 0.127s GC time
### theory "Draft.Gen_Iterator"
### 0.420s elapsed time, 0.789s cpu time, 0.050s GC time
Loading theory "Draft.Iterator" (required by "Draft.Impl_Bit_SetTemplates" via "Draft.Impl_Bit_Set")
### theory "Draft.Iterator"
### 0.357s elapsed time, 0.397s cpu time, 0.057s GC time
Loading theory "Draft.Impl_Bit_Set" (required by "Draft.Impl_Bit_SetTemplates")
"set_bit_class.set_bit"
  :: "'a => nat => bool => 'a"
"bs_empty"
  :: "unit => integer"
"insert"
  :: "'a => 'a set => 'a set"
"op_set_delete"
  :: "'a => 'a set => 'a set"
See theory exports
### theory "Draft.Impl_Bit_Set"
### 1.101s elapsed time, 1.734s cpu time, 0.892s GC time
Loading theory "Draft.Impl_Bit_SetTemplates"
val templateLemmas =
   [("Impl_Bit_Set.bs_complement_correct",
     "bs_\<alpha> (bs_complement ?s) = - bs_\<alpha> ?s",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_isEmpty_correct",
     "bs_isEmpty ?s = (bs_\<alpha> ?s = {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Impl_Bit_Set.bs_mem_correct", "bs_mem ?i ?s = (?i : bs_\<alpha> ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Impl_Bit_Set.bs_insert_correct",
     "bs_\<alpha> (bs_insert ?i ?s) = insert ?i (bs_\<alpha> ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_eq_correct",
     "bs_eq ?s1.0 ?s2.0 = (bs_\<alpha> ?s1.0 = bs_\<alpha> ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Impl_Bit_Set.bs_subset_eq_correct",
     "bs_subset_eq ?s1.0 ?s2.0 = (bs_\<alpha> ?s1.0 <= bs_\<alpha> ?s2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Impl_Bit_Set.bs_diff_correct",
     "bs_\<alpha> (bs_diff ?s1.0 ?s2.0) =
      bs_\<alpha> ?s1.0 - bs_\<alpha> ?s2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_inter_correct",
     "bs_\<alpha> (bs_inter ?s1.0 ?s2.0) =
      bs_\<alpha> ?s1.0 Int bs_\<alpha> ?s2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_union_correct",
     "bs_\<alpha> (bs_union ?s1.0 ?s2.0) =
      bs_\<alpha> ?s1.0 Un bs_\<alpha> ?s2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_delete_correct",
     "bs_\<alpha> (bs_delete ?i ?s) = bs_\<alpha> ?s - {?i}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Impl_Bit_Set.bs_disjoint_correct",
     "bs_disjoint ?s1.0 ?s2.0 =
      (bs_\<alpha> ?s1.0 Int bs_\<alpha> ?s2.0 = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0)))]:
   (string * thm * template) list
### theory "Draft.Impl_Bit_SetTemplates"
### 0.646s elapsed time, 0.821s cpu time, 0.065s GC time
val it = (): unit
