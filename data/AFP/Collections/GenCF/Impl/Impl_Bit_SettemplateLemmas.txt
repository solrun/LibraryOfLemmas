   [("Impl_Bit_Set.bs_complement_correct",
     "bs_\<alpha> (bs_complement ?s) = - bs_\<alpha> ?s",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_isEmpty_correct",
     "bs_isEmpty ?s = (bs_\<alpha> ?s = {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Impl_Bit_Set.bs_mem_correct", "bs_mem ?i ?s = (?i : bs_\<alpha> ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Impl_Bit_Set.bs_insert_correct",
     "bs_\<alpha> (bs_insert ?i ?s) = insert ?i (bs_\<alpha> ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_eq_correct",
     "bs_eq ?s1.0 ?s2.0 = (bs_\<alpha> ?s1.0 = bs_\<alpha> ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Impl_Bit_Set.bs_subset_eq_correct",
     "bs_subset_eq ?s1.0 ?s2.0 = (bs_\<alpha> ?s1.0 <= bs_\<alpha> ?s2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Impl_Bit_Set.bs_diff_correct",
     "bs_\<alpha> (bs_diff ?s1.0 ?s2.0) =
      bs_\<alpha> ?s1.0 - bs_\<alpha> ?s2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_inter_correct",
     "bs_\<alpha> (bs_inter ?s1.0 ?s2.0) =
      bs_\<alpha> ?s1.0 Int bs_\<alpha> ?s2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_union_correct",
     "bs_\<alpha> (bs_union ?s1.0 ?s2.0) =
      bs_\<alpha> ?s1.0 Un bs_\<alpha> ?s2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Impl_Bit_Set.bs_delete_correct",
     "bs_\<alpha> (bs_delete ?i ?s) = bs_\<alpha> ?s - {?i}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Impl_Bit_Set.bs_disjoint_correct",
     "bs_disjoint ?s1.0 ?s2.0 =
      (bs_\<alpha> ?s1.0 Int bs_\<alpha> ?s2.0 = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0)))]
