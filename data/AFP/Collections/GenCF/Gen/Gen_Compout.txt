Loading theory "Draft.Intf_Comp" (required by "Draft.Gen_CompTemplates" via "Draft.Gen_Comp")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.564s cpu time, 0.059s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.233s elapsed time, 0.942s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.382s elapsed time, 1.512s cpu time, 0.148s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs")
locale linorder_on
  fixes D :: "'a set"
    and cmp :: "'a => 'a => comp_res"
  assumes "linorder_on D cmp"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
consts
  cmp_lex' :: "('a => 'b => comp_res) => 'a list => 'b list => comp_res"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.957s elapsed time, 3.534s cpu time, 0.827s GC time
locale eq_linorder_on
  fixes D :: "'a set"
    and cmp :: "'a => 'a => comp_res"
  assumes "eq_linorder_on D cmp"
linorder_on (?f ` ?D) ?cmp ==> linorder_on ?D (cmp_img ?f ?cmp)
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
"cmp_lex"
  :: "('a => 'b => comp_res) => 'a list => 'b list => comp_res"
"cmp_prod"
  :: "('a => 'b => comp_res)
      => ('c => 'd => comp_res) => 'a * 'c => 'b * 'd => comp_res"
### theory "HOL-Library.Stream"
### 1.023s elapsed time, 3.628s cpu time, 0.810s GC time
### theory "Draft.Intf_Comp"
### 1.424s elapsed time, 5.173s cpu time, 0.958s GC time
Loading theory "Draft.Gen_Comp" (required by "Draft.Gen_CompTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Gen_Comp"
### 0.159s elapsed time, 0.349s cpu time, 0.064s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.854s elapsed time, 5.429s cpu time, 1.009s GC time
Loading theory "Draft.Templates" (required by "Draft.Gen_CompTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.046s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Gen_CompTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.454s elapsed time, 0.495s cpu time, 0.053s GC time
Loading theory "Draft.Gen_CompTemplates"
val templateLemmas =
   [("Gen_Comp.gen_prod_cmp_dflt",
     "[| PRIO_TAG_GEN_ALGO;
         GEN_OP ?cmp1.0 (dflt_cmp (<=) (<))
          (?R1.0 \<rightarrow> ?R1.0 \<rightarrow> comp_res_rel);
         GEN_OP ?cmp2.0 (dflt_cmp (<=) (<))
          (?R2.0 \<rightarrow> ?R2.0 \<rightarrow> comp_res_rel) |]
      ==> (cmp_prod ?cmp1.0 ?cmp2.0, dflt_cmp (<=) (<))
          : ?R1.0 \<times>\<^sub>r ?R2.0 \<rightarrow>
            ?R1.0 \<times>\<^sub>r ?R2.0 \<rightarrow> comp_res_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 52, template_hole 51),
              template_app
               (template_hole 50,
                template_app
                 (template_hole 49,
                  template_app
                   (template_hole 48,
                    template_app
                     (template_hole 47,
                      template_app (template_hole 48, template_hole 46))))))
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_hole 44,
                template_app
                 (template_app
                   (template_hole 43,
                    template_app
                     (template_app (template_hole 42, template_var 3),
                      template_app
                       (template_app
                         (template_hole 41,
                          template_app
                           (template_hole 40,
                            template_app
                             (template_app
                               (template_hole 39, template_hole 38),
                              template_hole 37))),
                        template_app
                         (template_hole 36,
                          template_app
                           (template_app
                             (template_hole 35,
                              template_app
                               (template_app
                                 (template_hole 34, template_hole 33),
                                template_var 2)),
                            template_app
                             (template_app
                               (template_hole 32,
                                template_app
                                 (template_app
                                   (template_hole 31, template_hole 30),
                                  template_var 2)),
                              template_hole 29)))))),
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app
                       (template_app (template_hole 34, template_hole 33),
                        template_var 2)),
                    template_app
                     (template_app
                       (template_hole 32,
                        template_app
                         (template_app (template_hole 31, template_hole 30),
                          template_var 2)),
                      template_hole 29)))))
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_hole 44,
                template_app
                 (template_app
                   (template_hole 28,
                    template_app
                     (template_app (template_hole 27, template_var 1),
                      template_app
                       (template_app
                         (template_hole 26,
                          template_app
                           (template_hole 25,
                            template_app
                             (template_app
                               (template_hole 24, template_hole 23),
                              template_hole 22))),
                        template_app
                         (template_hole 21,
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_app
                                 (template_hole 19, template_hole 18),
                                template_var 0)),
                            template_app
                             (template_app
                               (template_hole 17,
                                template_app
                                 (template_app
                                   (template_hole 16, template_hole 15),
                                  template_var 0)),
                              template_hole 29)))))),
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app (template_hole 19, template_hole 18),
                        template_var 0)),
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app (template_hole 16, template_hole 15),
                          template_var 0)),
                      template_hole 29)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_hole 9))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_var 2)),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_var 2)),
                       template_var 0))),
                 template_hole 29)))
           )))]:
   (string * thm * template) list
### theory "Draft.Gen_CompTemplates"
### 0.599s elapsed time, 1.241s cpu time, 0.737s GC time
val it = (): unit
