   [("DatRef.wa_pref_refl", "wa_precise_refine ?WA ?WA id",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 0),
           template_hole 0)
         )),
    ("DatRef.wa_ref_refl", "wa_refine ?WA ?WA id",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 0),
           template_hole 0)
         )),
    ("DatRef.dwa_is_wa",
     "while_algo (det_wa_wa ?DWA) = det_while_algo ?DWA",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("DatRef.det_while_algo_intro",
     "while_algo (det_wa_wa ?DWA) ==> det_while_algo ?DWA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("DatRef.wa_pref_trans",
     "[| wa_precise_refine ?WC ?WB ?\<alpha>1.0;
         wa_precise_refine ?WB ?WA ?\<alpha>2.0 |]
      ==> wa_precise_refine ?WC ?WA (?\<alpha>2.0 o ?\<alpha>1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("DatRef.wa_ref_trans",
     "[| wa_refine ?WC ?WB ?\<alpha>1.0; wa_refine ?WB ?WA ?\<alpha>2.0 |]
      ==> wa_refine ?WC ?WA (?\<alpha>2.0 o ?\<alpha>1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("DatRef.wa_refine_intro",
     "[| while_algo ?WAA;
         !!s s'.
            [| s : ?invar_addc; s : ?condc; ?\<alpha> s : wa_invar ?WAA;
               (s, s') : ?stepc |]
            ==> s' : ?invar_addc;
         ?initialc <= ?invar_addc;
         !!s. [| s : ?invar_addc; ?\<alpha> s : wa_invar ?WAA; s : ?condc |]
              ==> ?\<alpha> s : wa_cond ?WAA;
         !!s s'.
            [| s : ?invar_addc; s : ?condc; ?\<alpha> s : wa_invar ?WAA;
               (s, s') : ?stepc |]
            ==> (?\<alpha> s, ?\<alpha> s') : wa_step ?WAA;
         ?\<alpha> ` ?initialc <= wa_initial ?WAA |]
      ==> while_algo
           (| wa_cond = ?condc, wa_step = ?stepc, wa_initial = ?initialc,
              wa_invar =
                ?invar_addc Int {s. ?\<alpha> s : wa_invar ?WAA} |) &
          wa_refine
           (| wa_cond = ?condc, wa_step = ?stepc, wa_initial = ?initialc,
              wa_invar = ?invar_addc Int {s. ?\<alpha> s : wa_invar ?WAA} |)
           ?WAA ?\<alpha>",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 5)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_inequation (less_equals, template_var 0, template_var 4),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 2), template_var 0),
          template_app (template_hole 7, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 1),
                       template_var 0),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_app (template_hole 2, t_empty))),
                   template_hole 1))),
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 1),
                         template_var 0),
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_app (template_hole 2, t_empty))),
                     template_hole 1)),
                 template_var 5),
               template_var 2))
           )))]
