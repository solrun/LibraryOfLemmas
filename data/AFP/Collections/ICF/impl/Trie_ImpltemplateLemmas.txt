   [("Trie_Impl.trie_reverse_key_reverse",
     "trie_reverse_key (trie_reverse_key ?ksv) = ?ksv",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Trie_Impl.trie_iteratei_correct",
     "invar_trie ?t ==>
      set_iterator (Trie_Impl.iteratei ?t)
       (trie_reverse_key ` map_to_set (lookup_trie ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Trie_Impl.iteratei_interrupt",
     "~ ?c ?\<sigma> ==> Trie_Impl.iteratei ?t ?c ?f ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("Trie_Impl.iteratei_postfixed_interrupt",
     "~ ?c ?\<sigma> ==>
      iteratei_postfixed ?ks ?t ?c ?f ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 4),
             template_var 0),
           template_var 3),
         template_var 3))),
    ("Trie_Impl.iteratei_postfixed_correct",
     "invar_trie ?t ==>
      set_iterator (iteratei_postfixed ?ks0.0 ?t)
       ((%ksv. (rev (fst ksv) @ ?ks0.0, snd ksv)) `
        map_to_set (lookup_trie ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))))
           )))]
