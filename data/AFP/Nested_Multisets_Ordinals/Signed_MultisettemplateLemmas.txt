   [("Signed_Multiset.finite_set_zmset", "finite (set_zmset ?M)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Signed_Multiset.zcount_empty", "zcount {#}\<^sub>z ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Signed_Multiset.multi_psub_self_zmset",
     "(?A \<subset>#\<^sub>z ?A) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Signed_Multiset.neg_zmset_pos", "mset_neg (zmset_of ?M) = {#}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Signed_Multiset.zmset_of_inverse", "mset_pos (zmset_of ?M) = ?M",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Signed_Multiset.filter_empty_zmset",
     "filter_zmset ?P {#}\<^sub>z = {#}\<^sub>z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Signed_Multiset.repeat_zmset_empty",
     "repeat_zmset ?n {#}\<^sub>z = {#}\<^sub>z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Signed_Multiset.replicate_zmset_0",
     "replicate_zmset 0 ?x = {#}\<^sub>z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Signed_Multiset.multi_psub_of_add_self_zmset",
     "?A \<subset>#\<^sub>z add_zmset ?x ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Signed_Multiset.mset_pos_supset",
     "?A \<subseteq>#\<^sub>z zmset_of (mset_pos ?A)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Signed_Multiset.empty_ne_singleton_zmset",
     "{#}\<^sub>z ~= {#?x#}\<^sub>z",
     template_negation
      (
         template_equation
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 1))
         )),
    ("Signed_Multiset.singleton_ne_empty_zmset",
     "{#?x#}\<^sub>z ~= {#}\<^sub>z",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_hole 0)
         )),
    ("Signed_Multiset.mset_neg_uminus", "mset_neg (- ?A) = mset_pos ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Signed_Multiset.mset_pos_uminus", "mset_pos (- ?A) = mset_neg ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Signed_Multiset.minus_zmset_of_inverse",
     "mset_neg (- zmset_of ?M) = ?M",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Signed_Multiset.mset_neg_singleton", "mset_neg {#?x#}\<^sub>z = {#}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Signed_Multiset.filter_zmset_False",
     "{#y :#z ?M. False#} = {#}\<^sub>z",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Signed_Multiset.filter_zmset_True", "{#y :#z ?M. True#} = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("Signed_Multiset.mset_neg_supset",
     "- ?A \<subseteq>#\<^sub>z zmset_of (mset_neg ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Signed_Multiset.multi_member_split", "EX A. ?M = add_zmset ?x A",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Signed_Multiset.multi_self_add_other_not_self_zmset",
     "(?M = add_zmset ?x ?M) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Signed_Multiset.repeat_zmset_iterate_add",
     "repeat_zmset ?n ?M = iterate_add ?n ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Signed_Multiset.multi_drop_mem_not_eq_zmset",
     "?B - {#?c#}\<^sub>z ~= ?B",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 1)
         )),
    ("Signed_Multiset.set_zmset_single", "set_zmset {#?b#}\<^sub>z = {?b}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Signed_Multiset.not_lt_iff_ge_zmset", "(~ ?x < ?y) = (?y <= ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Signed_Multiset.set_zmset_eq_empty_iff",
     "(set_zmset ?M = {}) = (?M = {#}\<^sub>z)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Signed_Multiset.mset_pos_singleton",
     "mset_pos {#?x#}\<^sub>z = {#?x#}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Signed_Multiset.uminus_add_conv_diff_mset", "- ?a + ?b = ?b - ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Signed_Multiset.subset_imp_less_zmset",
     "?M \<subset>#\<^sub>z ?N ==> ?M < ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Signed_Multiset.subset_eq_imp_le_zmset",
     "?M \<subseteq>#\<^sub>z ?N ==> ?M <= ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Signed_Multiset.singleton_ne_uminus_singleton_zmset",
     "{#?x#}\<^sub>z ~= - {#?y#}\<^sub>z",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)))
         )),
    ("Signed_Multiset.uminus_singleton_ne_singleton_zmset",
     "- {#?x#}\<^sub>z ~= {#?y#}\<^sub>z",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Signed_Multiset.zcount_uminus", "zcount (- ?A) ?x = - zcount ?A ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zcount_of_mset",
     "zcount (zmset_of ?M) ?x = int (count ?M ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.count_mset_pos",
     "count (mset_pos ?M) ?x = nat (zcount ?M ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zcount_inject", "(zcount ?M = zcount ?N) = (?M = ?N)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Signed_Multiset.zmset_of_inject",
     "(zmset_of ?M = zmset_of ?N) = (?M = ?N)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Signed_Multiset.zmset_of_less",
     "(zmset_of ?M < zmset_of ?N) = (?M < ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Signed_Multiset.zmset_of_le",
     "(zmset_of ?M <= zmset_of ?N) = (?M <= ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Signed_Multiset.zmset_of_subset_iff",
     "(zmset_of ?M \<subset>#\<^sub>z zmset_of ?N) = (?M <# ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Signed_Multiset.zmset_of_subseteq_iff",
     "(zmset_of ?M \<subseteq>#\<^sub>z zmset_of ?N) = (?M <=# ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Signed_Multiset.mset_pos_neg_partition",
     "?M = zmset_of (mset_pos ?M) - zmset_of (mset_neg ?M)",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Signed_Multiset.add_zmset_add_single",
     "add_zmset ?a ?A = ?A + {#?a#}\<^sub>z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_hole 0)))),
    ("Signed_Multiset.mset_neg_as_pos",
     "zmset_of (mset_neg ?M) = zmset_of (mset_pos ?M) - ?M",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Signed_Multiset.mset_pos_as_neg",
     "zmset_of (mset_pos ?M) = zmset_of (mset_neg ?M) + ?M",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Signed_Multiset.zmset_of_add_mset",
     "zmset_of (add_mset ?x ?M) = add_zmset ?x (zmset_of ?M)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Signed_Multiset.repeat_zmset_replicate_zmset",
     "repeat_zmset ?n {#?a#}\<^sub>z = replicate_zmset ?n ?a",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Signed_Multiset.add_zmset_remove_trivial",
     "add_zmset ?x ?M - {#?x#}\<^sub>z = ?M",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)),
       template_var 0)),
    ("Signed_Multiset.insert_Diff_zmset",
     "add_zmset ?x (?M - {#?x#}\<^sub>z) = ?M",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0))),
       template_var 0)),
    ("Signed_Multiset.count_mset_neg",
     "count (mset_neg ?M) ?x = nat (- zcount ?M ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Signed_Multiset.replicate_zmset_Suc",
     "replicate_zmset (Suc ?n) ?x = add_zmset ?x (replicate_zmset ?n ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zmset_of_plus",
     "zmset_of (?M + ?N) = zmset_of ?M + zmset_of ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Signed_Multiset.zmset_subset_insertD",
     "add_zmset ?x ?A \<subset>#\<^sub>z ?B ==> ?A \<subset>#\<^sub>z ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Signed_Multiset.zmset_subset_eq_insertD",
     "add_zmset ?x ?A \<subseteq>#\<^sub>z ?B ==> ?A \<subset>#\<^sub>z ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Signed_Multiset.finite_count_ne",
     "finite {x. count ?M x ~= count ?N x}",
     template_predicate
      (
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))
         )),
    ("Signed_Multiset.not_in_iff_zmset",
     "(?x ~:#z ?M) = (zcount ?M ?x = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Signed_Multiset.zcount_eq_zero_iff",
     "(zcount ?M ?x = 0) = (?x ~:#z ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Signed_Multiset.subset_eq_diff_conv_zmset",
     "(?A - ?C \<subseteq>#\<^sub>z ?B) =
      (?A \<subseteq>#\<^sub>z ?B + ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Signed_Multiset.zcount_ne_zero_iff",
     "(zcount ?M ?x ~= 0) = (?x :#z ?M)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Signed_Multiset.add_add_same_iff_zmset",
     "(add_zmset ?a ?A = add_zmset ?a ?B) = (?A = ?B)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Signed_Multiset.single_eq_single_zmset",
     "({#?a#}\<^sub>z = {#?b#}\<^sub>z) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_equation (template_var 1, template_var 0))),
    ("Signed_Multiset.zmset_subset_add_zmset",
     "(add_zmset ?x ?N \<subset>#\<^sub>z add_zmset ?x ?M) =
      (?N \<subset>#\<^sub>z ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Signed_Multiset.zmset_subset_eq_add_zmset_cancel",
     "(add_zmset ?a ?A \<subseteq>#\<^sub>z add_zmset ?a ?B) =
      (?A \<subseteq>#\<^sub>z ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Signed_Multiset.diff_add_zmset", "?M - (?N + ?Q) = ?M - ?N - ?Q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Signed_Multiset.diff_diff_add_zmset", "?M - ?N - ?P = ?M - (?N + ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.diff_add_zmset_swap",
     "add_zmset ?b ?M - ?A = add_zmset ?b (?M - ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.union_zmset_add_zmset_right",
     "?A + add_zmset ?a ?B = add_zmset ?a (?A + ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.zmset_subset_eq_zmultiset_union_diff_commute",
     "?A - ?B + ?C = ?A + ?C - ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Signed_Multiset.uminus_add_add_uminus", "?b - ?a + ?c = ?b + ?c - ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Signed_Multiset.union_add_left_zmset",
     "add_zmset ?a ?A + ?B = add_zmset ?a (?A + ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.add_zmset_commute",
     "add_zmset ?x (add_zmset ?y ?M) = add_zmset ?y (add_zmset ?x ?M)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.repeat_zmset_right",
     "repeat_zmset ?a (repeat_zmset ?b ?A) = repeat_zmset (?a * ?b) ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Signed_Multiset.add_zmset_diff_bothsides",
     "add_zmset ?a ?M - add_zmset ?a ?A = ?M - ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Signed_Multiset.zcount_single",
     "zcount {#?b#}\<^sub>z ?a = (if ?b = ?a then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Signed_Multiset.count_repeat_zmset",
     "zcount (repeat_zmset ?i ?A) ?a = int ?i * zcount ?A ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zmset_subset_eq_zcount",
     "?A \<subseteq>#\<^sub>z ?B ==> zcount ?A ?a <= zcount ?B ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zmultiset_filter_mono",
     "?A \<subseteq>#\<^sub>z ?B ==>
      filter_zmset ?f ?A \<subseteq>#\<^sub>z filter_zmset ?f ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Signed_Multiset.zcount_diff",
     "zcount (?M - ?N) ?a = zcount ?M ?a - zcount ?N ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zcount_union",
     "zcount (?M + ?N) ?a = zcount ?M ?a + zcount ?N ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.count_filter_zmset",
     "zcount (filter_zmset ?P ?M) ?a = (if ?P ?a then zcount ?M ?a else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Signed_Multiset.count_replicate_zmset",
     "zcount (replicate_zmset ?n ?x) ?y = (if ?y = ?x then int ?n else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 1)),
               template_app (template_hole 1, template_var 2)),
             template_hole 0)
           ))),
    ("Signed_Multiset.zmultiset_eq_iff",
     "(?M = ?N) = (ALL a. zcount ?M a = zcount ?N a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Signed_Multiset.diff_single_eq_union_zmset",
     "(?M - {#?x#}\<^sub>z = ?N) = (?M = add_zmset ?x ?N)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.filter_diff_zmset",
     "filter_zmset ?P (?M - ?N) = filter_zmset ?P ?M - filter_zmset ?P ?N",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.filter_union_zmset",
     "filter_zmset ?P (?M + ?N) = filter_zmset ?P ?M + filter_zmset ?P ?N",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.filter_single_zmset",
     "filter_zmset ?P {#?x#}\<^sub>z =
      (if ?P ?x then {#?x#}\<^sub>z else {#}\<^sub>z)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 1, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 1))),
    ("Signed_Multiset.repeat_zmset_distrib2",
     "repeat_zmset ?n (?A + ?B) = repeat_zmset ?n ?A + repeat_zmset ?n ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.repeat_zmset_distrib_add_zmset",
     "repeat_zmset ?n (add_zmset ?a ?A) =
      replicate_zmset ?n ?a + repeat_zmset ?n ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.repeat_zmset_distrib",
     "repeat_zmset (?m + ?n) ?A = repeat_zmset ?m ?A + repeat_zmset ?n ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Signed_Multiset.zmset_add",
     "(!!B. ?A = add_zmset ?a B ==> ?thesis) ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Signed_Multiset.zmultiset_partition",
     "?M = filter_zmset ?P ?M + {#x :#z ?M. ~ ?P x#}",
     template_equation
      (template_var 1,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("Signed_Multiset.filter_filter_zmset",
     "filter_zmset ?P (filter_zmset ?Q ?M) = {#x :#z ?M. ?Q x & ?P x#}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Signed_Multiset.add_zmset_eq_add_NO_MATCH",
     "NO_MATCH {#}\<^sub>z ?H ==> add_zmset ?a ?H = {#?a#}\<^sub>z + ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0)),
           template_var 1)))),
    ("Signed_Multiset.lt_imp_ex_zcount_lt",
     "?M < ?N ==> EX y. zcount ?M y < zcount ?N y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Signed_Multiset.union_single_eq_diff_zmset",
     "add_zmset ?x ?M = ?N ==> ?M = ?N - {#?x#}\<^sub>z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_hole 0))))),
    ("Signed_Multiset.zcount_inI",
     "(zcount ?M ?x = 0 ==> False) ==> ?x :#z ?M",
     template_implication
      ([template_implication
         ([template_equation
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_hole 3)],
          template_predicate (template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Signed_Multiset.zmultiset_eqI",
     "(!!x. zcount ?A x = zcount ?B x) ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Signed_Multiset.zmset_subset_eqI",
     "(!!a. zcount ?A a <= zcount ?B a) ==> ?A \<subseteq>#\<^sub>z ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Signed_Multiset.in_diff_zcount",
     "(?a :#z ?M - ?N) = (zcount ?N ?a ~= zcount ?M ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Signed_Multiset.diff_union_swap_zmset",
     "add_zmset ?b (?M - {#?a#}\<^sub>z) =
      add_zmset ?b ?M - {#?a#}\<^sub>z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("Signed_Multiset.mset_neg_diff",
     "mset_neg (?A - ?B) =
      mset_neg ?A - mset_neg ?B + (mset_pos ?B - mset_pos ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Signed_Multiset.mset_neg_plus",
     "mset_neg (?A + ?B) =
      mset_neg ?A - mset_pos ?B + (mset_neg ?B - mset_pos ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Signed_Multiset.mset_pos_diff",
     "mset_pos (?A - ?B) =
      mset_pos ?A - mset_pos ?B + (mset_neg ?B - mset_neg ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Signed_Multiset.mset_pos_plus",
     "mset_pos (?A + ?B) =
      mset_pos ?A - mset_neg ?B + (mset_pos ?B - mset_neg ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Signed_Multiset.filter_add_zmset",
     "filter_zmset ?P (add_zmset ?x ?A) =
      (if ?P ?x then add_zmset ?x (filter_zmset ?P ?A)
       else filter_zmset ?P ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Signed_Multiset.left_add_mult_distrib_zmset",
     "repeat_zmset ?i ?u + (repeat_zmset ?j ?u + ?k) =
      repeat_zmset (?i + ?j) ?u + ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Signed_Multiset.zcount_add_zmset",
     "zcount (add_zmset ?b ?A) ?a =
      (if ?b = ?a then zcount ?A ?a + 1 else zcount ?A ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0)),
                 template_hole 0)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))
           ))),
    ("Signed_Multiset.left_diff_repeat_zmset_distrib'",
     "?j <= ?i ==>
      repeat_zmset (?i - ?j) ?u = repeat_zmset ?i ?u - repeat_zmset ?j ?u",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Signed_Multiset.zmultiset_nonemptyE",
     "[| ?A ~= {#}\<^sub>z; !!x. x :#z ?A ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Signed_Multiset.zmset_subset_add_iff2",
     "?i <= ?j ==>
      (repeat_zmset ?i ?u + ?m \<subset>#\<^sub>z repeat_zmset ?j ?u + ?n) =
      (?m \<subset>#\<^sub>z repeat_zmset (?j - ?i) ?u + ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 4)),
                 template_var 2)),
             template_var 0))))),
    ("Signed_Multiset.zmset_subseteq_add_iff2",
     "?i <= ?j ==>
      (repeat_zmset ?i ?u + ?m \<subseteq>#\<^sub>z
       repeat_zmset ?j ?u + ?n) =
      (?m \<subseteq>#\<^sub>z repeat_zmset (?j - ?i) ?u + ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 4)),
                 template_var 2)),
             template_var 0))))),
    ("Signed_Multiset.zmset_subset_add_iff1",
     "?j <= ?i ==>
      (repeat_zmset ?i ?u + ?m \<subset>#\<^sub>z repeat_zmset ?j ?u + ?n) =
      (repeat_zmset (?i - ?j) ?u + ?m \<subset>#\<^sub>z ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 4)),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Signed_Multiset.zmset_subseteq_add_iff1",
     "?j <= ?i ==>
      (repeat_zmset ?i ?u + ?m \<subseteq>#\<^sub>z
       repeat_zmset ?j ?u + ?n) =
      (repeat_zmset (?i - ?j) ?u + ?m \<subseteq>#\<^sub>z ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 4)),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Signed_Multiset.decompose_zmset_of2",
     "(!!A B C.
          [| ?M = zmset_of A + C; ?N = zmset_of B + C |] ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Signed_Multiset.add_zmset_eq_conv_ex",
     "(add_zmset ?a ?M = add_zmset ?b ?N) =
      (?M = ?N & ?a = ?b |
       (EX K. ?M = add_zmset ?b K & ?N = add_zmset ?a K))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Signed_Multiset.add_zmset_eq_conv_diff",
     "(add_zmset ?a ?M = add_zmset ?b ?N) =
      (?M = ?N & ?a = ?b |
       ?M = add_zmset ?b (?N - {#?a#}\<^sub>z) &
       ?N = add_zmset ?a (?M - {#?b#}\<^sub>z))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_hole 0))))),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_hole 0))))))
           ))),
    ("Signed_Multiset.mset_pos_neg_dual",
     "mset_pos ?a + mset_pos ?b + (mset_neg ?a - mset_pos ?b) +
      (mset_neg ?b - mset_pos ?a) =
      mset_neg ?a + mset_neg ?b + (mset_pos ?a - mset_neg ?b) +
      (mset_pos ?b - mset_neg ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 2, template_var 1))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Signed_Multiset.less_mset_zmsetE",
     "[| ?M < ?N;
         !!A B C.
            [| ?M = zmset_of A + C; ?N = zmset_of B + C; A < B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Signed_Multiset.less_eq_mset_zmsetE",
     "[| ?M <= ?N;
         !!A B C.
            [| ?M = zmset_of A + C; ?N = zmset_of B + C; A <= B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Signed_Multiset.subset_mset_zmsetE",
     "[| ?M \<subset>#\<^sub>z ?N;
         !!A B C.
            [| ?M = zmset_of A + C; ?N = zmset_of B + C; A <# B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Signed_Multiset.subseteq_mset_zmsetE",
     "[| ?M \<subseteq>#\<^sub>z ?N;
         !!A B C.
            [| ?M = zmset_of A + C; ?N = zmset_of B + C; A <=# B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0)))]
