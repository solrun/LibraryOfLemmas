   [("Syntactic_Ordinal.offset_hmset_of_nat",
     "offset_hmset (of_nat ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Syntactic_Ordinal.head_\<omega>_numeral",
     "head_\<omega> (numeral ?n) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Syntactic_Ordinal.le_square_hmset", "?m <= ?m * ?m",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Syntactic_Ordinal.offset_hmset_numeral",
     "offset_hmset (numeral ?n) = numeral ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Syntactic_Ordinal.hmset_of_enat_of_nat",
     "hmset_of_enat (of_nat ?n) = of_nat ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Syntactic_Ordinal.hmset_of_enat_numeral",
     "hmset_of_enat (numeral ?n) = numeral ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Syntactic_Ordinal.empty_times_right_hmset", "?M * HMSet {#} = 0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_hole 0)),
    ("Syntactic_Ordinal.empty_times_left_hmset", "HMSet {#} * ?M = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("Syntactic_Ordinal.head_\<omega>_subseteq",
     "hmsetmset (head_\<omega> ?M) <=# hmsetmset ?M",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_app (template_hole 1, template_var 0))
         )),
    ("Syntactic_Ordinal.zero_less_iff_1_le_hmset", "(0 < ?n) = (1 <= ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Syntactic_Ordinal.lt_1_iff_eq_0_hmset", "(?M < 1) = (?M = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Syntactic_Ordinal.of_nat_hmset",
     "of_nat ?n = HMSet (replicate_mset ?n 0)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Syntactic_Ordinal.of_nat_lt_\<omega>", "of_nat ?n < \<omega>",
     template_inequation
      (less_than, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Syntactic_Ordinal.numeral_lt_\<omega>", "numeral ?n < \<omega>",
     template_inequation
      (less_than, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Syntactic_Ordinal.le_cube_hmset", "?m <= ?m * (?m * ?m)",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Syntactic_Ordinal.of_nat_le_\<omega>", "of_nat ?n <= \<omega>",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Syntactic_Ordinal.numeral_le_\<omega>", "numeral ?n <= \<omega>",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Syntactic_Ordinal.hmset_of_enat_le_\<omega>",
     "hmset_of_enat ?n <= \<omega>",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Syntactic_Ordinal.of_nat_ne_\<omega>", "of_nat ?n ~= \<omega>",
     template_negation
      (
         template_equation
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)))
         )),
    ("Syntactic_Ordinal.numeral_ne_\<omega>", "numeral ?n ~= \<omega>",
     template_negation
      (
         template_equation
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)))
         )),
    ("Syntactic_Ordinal.\<omega>_ne_of_nat", "\<omega> ~= of_nat ?m",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Syntactic_Ordinal.\<omega>_ne_numeral", "\<omega> ~= numeral ?n",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Syntactic_Ordinal.not_\<omega>_lt_of_nat", "~ \<omega> < of_nat ?n",
     template_negation
      (
         template_inequation
          (less_than,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Syntactic_Ordinal.not_\<omega>_lt_numeral", "~ \<omega> < numeral ?n",
     template_negation
      (
         template_inequation
          (less_than,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Syntactic_Ordinal.not_\<omega>_le_of_nat", "~ \<omega> <= of_nat ?n",
     template_negation
      (
         template_inequation
          (less_equals,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Syntactic_Ordinal.not_\<omega>_le_numeral",
     "~ \<omega> <= numeral ?n",
     template_negation
      (
         template_inequation
          (less_equals,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Syntactic_Ordinal.head_\<omega>_eq_0_iff",
     "(head_\<omega> ?m = 0) = (?m = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Syntactic_Ordinal.sum_coefs_gt_0", "(0 < sum_coefs ?M) = (0 < ?M)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Syntactic_Ordinal.less_iff_add1_le_hmset",
     "(?m < ?n) = (?m + 1 <= ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Syntactic_Ordinal.of_nat_inject_hmset",
     "(of_nat ?m = of_nat ?n) = (?m = ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Syntactic_Ordinal.hmset_of_enat_inject",
     "(hmset_of_enat ?m = hmset_of_enat ?n) = (?m = ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Syntactic_Ordinal.less_add_1_iff_le_hmset",
     "(?m < ?n + 1) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Syntactic_Ordinal.of_nat_less_hmset",
     "(of_nat ?M < of_nat ?N) = (?M < ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Syntactic_Ordinal.hmset_of_enat_less",
     "(hmset_of_enat ?m < hmset_of_enat ?n) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Syntactic_Ordinal.of_nat_le_hmset",
     "(of_nat ?M <= of_nat ?N) = (?M <= ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Syntactic_Ordinal.hmset_of_enat_le",
     "(hmset_of_enat ?m <= hmset_of_enat ?n) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Syntactic_Ordinal.sum_coefs_distrib_plus",
     "sum_coefs (?M + ?N) = sum_coefs ?M + sum_coefs ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Syntactic_Ordinal.of_nat_lt_hmset_of_enat_iff",
     "(of_nat ?m < hmset_of_enat ?n) = (enat ?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Syntactic_Ordinal.of_nat_le_hmset_of_enat_iff",
     "(of_nat ?m <= hmset_of_enat ?n) = (enat ?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Syntactic_Ordinal.head_\<omega>_of_nat",
     "head_\<omega> (of_nat ?n) = (if ?n = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Syntactic_Ordinal.of_nat_minus_hmset",
     "of_nat (?m - ?n) = of_nat ?m - of_nat ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Syntactic_Ordinal.head_\<omega>_plus",
     "head_\<omega> (?m + ?n) = sup (head_\<omega> ?m) (head_\<omega> ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Syntactic_Ordinal.head_\<omega>_times",
     "head_\<omega> (?m * ?n) = head_\<omega> ?m * head_\<omega> ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Syntactic_Ordinal.mult_le_cancel_left1_hmset",
     "0 < ?y ==> ?x <= ?x * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Syntactic_Ordinal.mult_le_cancel_right1_hmset",
     "0 < ?y ==> ?x <= ?y * ?x",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.le_imp_head_\<omega>_le",
     "?m <= ?n ==> head_\<omega> ?m <= head_\<omega> ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Syntactic_Ordinal.mult_le_cancel_left2_hmset",
     "?y <= 1 ==> ?x * ?y <= ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Syntactic_Ordinal.mult_le_cancel_right2_hmset",
     "?y <= 1 ==> ?y * ?x <= ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Syntactic_Ordinal.head_\<omega>_lt_imp_lt",
     "head_\<omega> ?m < head_\<omega> ?n ==> ?m < ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Syntactic_Ordinal.hmset_of_enat_eq_\<omega>_iff",
     "(hmset_of_enat ?n = \<omega>) = (?n = \<infinity>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2))),
       template_equation (template_var 0, template_hole 0))),
    ("Syntactic_Ordinal.minus_diff_sym_hmset",
     "?m - (?m - ?n) = ?n - (?n - ?m)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Syntactic_Ordinal.diff_plus_sym_hmset", "?c - ?b + ?b = ?b - ?c + ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Syntactic_Ordinal.hmset_of_enat_minus_enat",
     "hmset_of_enat (?m - enat ?n) = hmset_of_enat ?m - of_nat ?n",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Syntactic_Ordinal.hmset_of_enat_lt_iff_ne_infinity",
     "(hmset_of_enat ?x < \<omega>) = (?x ~= \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3)))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Syntactic_Ordinal.\<omega>_minus_of_nat",
     "\<omega> - of_nat ?n = \<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)))),
    ("Syntactic_Ordinal.\<omega>_minus_numeral",
     "\<omega> - numeral ?n = \<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)))),
    ("Syntactic_Ordinal.of_nat_times_\<omega>_exp",
     "of_nat ?n * \<omega>^ ?m = HMSet (replicate_mset ?n ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.\<omega>_exp_times_of_nat",
     "\<omega>^ ?m * of_nat ?n = HMSet (replicate_mset ?n ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Syntactic_Ordinal.less_imp_minus_plus_hmset",
     "?m < ?n ==> ?k < ?k - ?m + ?n",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("Syntactic_Ordinal.mult_le_mono1_hmset",
     "?i <= ?j ==> ?i * ?k <= ?j * ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.mult_le_mono2_hmset",
     "?i <= ?j ==> ?k * ?i <= ?k * ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Syntactic_Ordinal.le_imp_minus_plus_hmset",
     "?m <= ?n ==> ?k <= ?k - ?m + ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("Syntactic_Ordinal.zero_less_mult_iff_hmset",
     "(0 < ?m * ?n) = (0 < ?m & 0 < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Syntactic_Ordinal.one_le_mult_iff_hmset",
     "(1 <= ?m * ?n) = (1 <= ?m & 1 <= ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Syntactic_Ordinal.singleton_times_right_hmset",
     "?N * \<omega>^ ?M = HMSet (image_mset ((+) ?M) (hmsetmset ?N))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Syntactic_Ordinal.singleton_times_left_hmset",
     "\<omega>^ ?M * ?N = HMSet (image_mset ((+) ?M) (hmsetmset ?N))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Syntactic_Ordinal.hmsetmset_times",
     "hmsetmset (?m * ?n) =
      {#x + y. (x, y) :# hmsetmset ?m \<times># hmsetmset ?n#}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 1)),
           t_empty)))),
    ("Syntactic_Ordinal.plus_of_nat_plus_of_nat_hmset",
     "?k + of_nat ?m + of_nat ?n = ?k + of_nat (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Syntactic_Ordinal.lt_\<omega>_imp_ex_of_nat",
     "?M < \<omega> ==> EX n. ?M = of_nat n",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Syntactic_Ordinal.le_\<omega>_imp_ex_hmset_of_enat",
     "?M <= \<omega> ==> EX n. ?M = hmset_of_enat n",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Syntactic_Ordinal.mult_less_cancel1_hmset",
     "(?k * ?m < ?k * ?n) = (0 < ?k & ?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.mult_less_cancel2_hmset",
     "(?m * ?k < ?n * ?k) = (0 < ?k & ?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Syntactic_Ordinal.mult_le_cancel1_hmset",
     "(?k * ?m <= ?k * ?n) = (0 < ?k --> ?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.mult_le_cancel2_hmset",
     "(?m * ?k <= ?n * ?k) = (0 < ?k --> ?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Syntactic_Ordinal.gt_0_lt_mult_gt_1_hmset",
     "[| 0 < ?m; 1 < ?n |] ==> ?m < ?m * ?n",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.times_\<omega>_minus_of_nat",
     "?m * \<omega> - of_nat ?n = ?m * \<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("Syntactic_Ordinal.times_\<omega>_minus_numeral",
     "?m * \<omega> - numeral ?n = ?m * \<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("Syntactic_Ordinal.times_of_nat_minus_right",
     "?l * (of_nat ?m - of_nat ?n) = ?l * of_nat ?m - ?l * of_nat ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Syntactic_Ordinal.times_of_nat_minus_left",
     "(of_nat ?m - of_nat ?n) * ?l = of_nat ?m * ?l - of_nat ?n * ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 0, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Syntactic_Ordinal.times_hmultiset_monoL",
     "[| ?a < ?b; 0 < ?c |] ==> ?a * ?c < ?b * ?c",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.mult_le_mono_hmset",
     "[| ?i <= ?j; ?k <= ?l |] ==> ?i * ?k <= ?j * ?l",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Syntactic_Ordinal.times_diff_plus_sym_hmset",
     "?a * (?c - ?b) + ?a * ?b = ?a * (?b - ?c) + ?a * ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Syntactic_Ordinal.plus_of_nat_minus_of_nat_hmset",
     "?n <= ?m ==> ?k + of_nat ?m - of_nat ?n = ?k + of_nat (?m - ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1))),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("Syntactic_Ordinal.Times_mset_monoL",
     "[| ?M < ?N; ?Z ~= {#} |] ==> ?M \<times># ?Z < ?N \<times># ?Z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Syntactic_Ordinal.lt_\<omega>_lt_\<omega>_imp_times_lt_\<omega>",
     "[| ?M < \<omega>; ?N < \<omega> |] ==> ?M * ?N < \<omega>",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_hole 1))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_hole 1)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("Syntactic_Ordinal.mono_cross_mult_less_hmset",
     "[| ?A < ?Aa; ?B < ?Ba |]
      ==> ?A * ?Ba + ?B * ?Aa < ?A * ?B + ?Aa * ?Ba",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Syntactic_Ordinal.hmset_pair_decompose_less",
     "?m1.0 < ?m2.0 ==>
      EX k n1 n2.
         ?m1.0 = k + n1 &
         ?m2.0 = k + n2 & head_\<omega> n1 < head_\<omega> n2",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Syntactic_Ordinal.lt_\<omega>_imp_times_minus_right",
     "[| ?m < \<omega>; ?n < \<omega> |]
      ==> ?l * (?m - ?n) = ?l * ?m - ?l * ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3))),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Syntactic_Ordinal.lt_\<omega>_imp_times_minus_left",
     "[| ?m < \<omega>; ?n < \<omega> |]
      ==> (?m - ?n) * ?l = ?m * ?l - ?n * ?l",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3))),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Syntactic_Ordinal.hmset_pair_decompose",
     "EX k n1 n2.
         ?m1.0 = k + n1 &
         ?m2.0 = k + n2 &
         (head_\<omega> n1 ~= head_\<omega> n2 | n1 = 0 & n2 = 0)",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Syntactic_Ordinal.plus_nmultiset_mono",
     "[| (?X, ?Y) < (?X', ?Y'); no_elem ?X; no_elem ?Y; no_elem ?X';
         no_elem ?Y' |]
      ==> plus_nmultiset ?X ?Y < plus_nmultiset ?X' ?Y'",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Syntactic_Ordinal.ludwig_waldmann_less",
     "[| ?\<alpha>2.0 + ?\<beta>2.0 * ?\<gamma>
         < ?\<alpha>1.0 + ?\<beta>1.0 * ?\<gamma>;
         ?\<beta>2.0 <= ?\<beta>1.0; ?\<gamma> < ?\<delta> |]
      ==> ?\<alpha>2.0 + ?\<beta>2.0 * ?\<delta>
          < ?\<alpha>1.0 + ?\<beta>1.0 * ?\<delta>",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 5),
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3))),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_than, template_var 3, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Syntactic_Ordinal.hmset_pair_decompose_less_eq",
     "?m1.0 <= ?m2.0 ==>
      EX k n1 n2.
         ?m1.0 = k + n1 &
         ?m2.0 = k + n2 &
         (head_\<omega> n1 < head_\<omega> n2 | n1 = 0 & n2 = 0)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Syntactic_Ordinal.triple_cross_mult_hmset",
     "?An * (?Bn * ?Cn + ?Bp * ?Cp - (?Bn * ?Cp + ?Cn * ?Bp)) +
      (?Cn * (?An * ?Bp + ?Bn * ?Ap - (?An * ?Bn + ?Ap * ?Bp)) +
       (?Ap * (?Bn * ?Cp + ?Cn * ?Bp - (?Bn * ?Cn + ?Bp * ?Cp)) +
        ?Cp * (?An * ?Bn + ?Ap * ?Bp - (?An * ?Bp + ?Bn * ?Ap)))) =
      ?An * (?Bn * ?Cp + ?Cn * ?Bp - (?Bn * ?Cn + ?Bp * ?Cp)) +
      (?Cn * (?An * ?Bn + ?Ap * ?Bp - (?An * ?Bp + ?Bn * ?Ap)) +
       (?Ap * (?Bn * ?Cn + ?Bp * ?Cp - (?Bn * ?Cp + ?Cn * ?Bp)) +
        ?Cp * (?An * ?Bp + ?Bn * ?Ap - (?An * ?Bn + ?Ap * ?Bp))))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2))))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2))))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 2))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1))))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 0))))))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 3)),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2))))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)))))))))]
