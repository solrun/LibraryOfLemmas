Loading theory "HOL-Library.Cancellation" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.Multiset_More" via "HOL-Library.Multiset_Order" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.514s cpu time, 0.041s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.Multiset_More")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.195s elapsed time, 0.798s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.322s elapsed time, 1.291s cpu time, 0.129s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
consts
  prefixes :: "'a list => 'a list list"
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.461s elapsed time, 1.835s cpu time, 0.235s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.Multiset_More" via "HOL-Library.Multiset_Order")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
consts
  left :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  suffixes :: "'a list => 'a list list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.289s elapsed time, 4.942s cpu time, 1.241s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### theory "HOL-Library.Sublist"
### 1.666s elapsed time, 6.436s cpu time, 1.419s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
### theory "HOL-Library.BigO"
### 1.045s elapsed time, 3.468s cpu time, 1.253s GC time
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.604s elapsed time, 9.224s cpu time, 2.621s GC time
Loading theory "Draft.Templates" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.ExtrEqs")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.108s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Multiset_MoreMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.547s elapsed time, 1.138s cpu time, 0.102s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.558s elapsed time, 10.035s cpu time, 2.625s GC time
Loading theory "HOL-Library.Multiset_Order" (required by "Draft.Multiset_MoreMoreTemplates" via "Draft.Multiset_More")
class preorder = ord +
  assumes "less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
    and "order_refl": "!!x. x <= x"
    and "order_trans": "!!x y z. [| x <= y; y <= z |] ==> x <= z"
instantiation
  multiset :: (preorder) ordered_ab_semigroup_monoid_add_imp_le
instantiation
  multiset :: (wellorder) wellorder
instantiation
  multiset :: (preorder) order_bot
  bot_multiset == bot :: 'a multiset
instantiation
  multiset :: (linorder) distrib_lattice
  inf_multiset == inf :: 'a multiset => 'a multiset => 'a multiset
  sup_multiset == sup :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Multiset_Order"
### 0.423s elapsed time, 1.131s cpu time, 0.908s GC time
Loading theory "Draft.Multiset_More" (required by "Draft.Multiset_MoreMoreTemplates")
### theory "Draft.Multiset_More"
### 0.546s elapsed time, 0.714s cpu time, 0.149s GC time
Loading theory "Draft.Multiset_MoreMoreTemplates"
val templateLemmas =
   [("Multiset_More.sorted_sorted_list_of_multiset",
     "sorted (sorted_list_of_multiset ?M)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Multiset_More.mset_list_of_mset", "mset (list_of_mset ?m) = ?m",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Multiset_More.Sigma_mset_empty1", "Sigma_mset {#} ?B = {#}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Multiset_More.mset_set_set_mset_subseteq",
     "mset_set (set_mset ?A) <=# ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("Multiset_More.list_of_mset_exi", "EX l. ?m = mset l",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Multiset_More.length_list_of_mset",
     "length (list_of_mset ?A) = size ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiset_More.length_sorted_list_of_multiset",
     "length (sorted_list_of_multiset ?A) = size ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiset_More.set_mset_remdups_mset",
     "set_mset (remdups_mset ?A) = set_mset ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Multiset_More.mset_sorted_list_of_set",
     "mset (sorted_list_of_set ?A) = mset_set ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiset_More.Sigma_mset_empty2", "?A \<times># {#} = {#}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       template_hole 0)),
    ("Multiset_More.count_mset_set_le_one", "count (mset_set ?A) ?x <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("Multiset_More.mset_remdups_remdups_mset",
     "mset (remdups ?D) = remdups_mset (mset ?D)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Multiset_More.mset_take_subseteq", "mset (take ?n ?xs) <=# mset ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app (template_hole 1, template_var 0))
         )),
    ("Multiset_More.list_of_mset_empty",
     "(list_of_mset ?m = []) = (?m = {#})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Multiset_More.sorted_list_of_multiset_eq_Nil",
     "(sorted_list_of_multiset ?M = []) = (?M = {#})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Multiset_More.remdups_mset_eq_empty",
     "(remdups_mset ?D = {#}) = (?D = {#})",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Multiset_More.mset_replicate_replicate_mset",
     "mset (replicate ?n ?L) = replicate_mset ?n ?L",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Multiset_More.remdups_mset_singleton", "remdups_mset {#?a#} = {#?a#}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Multiset_More.iterate_op_plus", "((+) ?k ^^ ?m) 0 = ?k * ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multiset_More.mset_set_set_mset_empty_mempty",
     "(mset_set (set_mset ?D) = {#}) = (?D = {#})",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Multiset_More.repeat_mset_compower",
     "repeat_mset ?n ?A = ((+) ?A ^^ ?n) {#}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Multiset_More.diff_intersect_sym_diff",
     "(?A - ?B) \<inter># (?B - ?A) = {#}",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Multiset_More.plus_multiset_transfer",
     "rel_fun (rel_mset ?R) (rel_fun (rel_mset ?R) (rel_mset ?R)) (+) (+)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("Multiset_More.sum_image_mset_sum_map",
     "\<Sum>\<^sub># (image_mset ?f (mset ?xs)) = sum_list (map ?f ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multiset_More.filter_mset_eq",
     "filter_mset ((=) ?L) ?A = replicate_mset (count ?A ?L) ?L",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Multiset_More.count_image_mset_ge_count",
     "count ?A ?b <= count (image_mset ?f ?A) (?f ?b)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("Multiset_More.subset_mset_imp_subset_add_mset",
     "?A <=# ?B ==> ?A <=# add_mset ?x ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Multiset_More.Melem_subseteq_Union_mset",
     "?x :# ?T ==> ?x <=# \<Sum>\<^sub># ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_More.replicate_mset_subset_iff_lt",
     "(replicate_mset ?m ?x <# replicate_mset ?n ?x) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Multiset_More.replicate_mset_subseteq_iff_le",
     "(replicate_mset ?m ?x <=# replicate_mset ?n ?x) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Multiset_More.replicate_mset_lt_iff_lt",
     "(replicate_mset ?m ?x < replicate_mset ?n ?x) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Multiset_More.replicate_mset_le_iff_le",
     "(replicate_mset ?m ?x <= replicate_mset ?n ?x) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Multiset_More.product_swap_mset",
     "image_mset prod.swap (?A \<times># ?B) = ?B \<times># ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Multiset_More.Times_mset_single_left",
     "{#?a#} \<times># ?B = image_mset (Pair ?a) ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Multiset_More.subseq_mset_subseteq_mset",
     "subseq ?xs ?ys ==> mset ?xs <=# mset ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_More.Melem_subset_eq_sum_list",
     "?x :# mset ?T ==> ?x <=# sum_list ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_More.count_sum_mset",
     "count (\<Sum>\<^sub># ?M) ?b = (SUM P:#?M. count P ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Multiset_More.count_remdups_mset_If",
     "count (remdups_mset ?A) ?a = (if ?a :# ?A then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_hole 0))),
    ("Multiset_More.Times_mset_Times",
     "set_mset (?A \<times># ?B) = set_mset ?A \<times> set_mset ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Multiset_More.count_remdups_mset_eq_1",
     "(?a :# remdups_mset ?A) = (count (remdups_mset ?A) ?a = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Multiset_More.Sigma_mset_Union",
     "Sigma_mset (\<Sum>\<^sub># ?X) ?B = (SUM A:#?X. Sigma_mset A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Multiset_More.count_transfer",
     "bi_unique ?R ==> rel_fun (rel_mset ?R) (rel_fun ?R (=)) count count",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Multiset_More.less_subset_eq_sum_list",
     "?i < length ?CAi ==> ?CAi ! ?i <=# sum_list ?CAi",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_More.same_mset_distinct_iff",
     "mset ?M = mset ?M' ==> distinct ?M = distinct ?M'",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Multiset_More.Diff_triv_mset",
     "?M \<inter># ?N = {#} ==> ?M - ?N = ?M",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Multiset_More.filter_mset_empty_conv",
     "(filter_mset ?P ?M = {#}) = (\<forall>L:#?M. ~ ?P L)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Multiset_More.id_remove_1_mset_iff_notin",
     "(?M = remove1_mset ?a ?M) = (?a ~:# ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Multiset_More.remove_1_mset_id_iff_notin",
     "(remove1_mset ?a ?M = ?M) = (?a ~:# ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_var 1),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Multiset_More.remove1_single_empty_iff",
     "(remove1_mset ?L {#?L'#} = {#}) = (?L = ?L')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 1),
       template_equation (template_var 0, template_var 1))),
    ("Multiset_More.repeat_mset_prod",
     "repeat_mset (?m * ?n) ?A = ((+) (repeat_mset ?n ?A) ^^ ?m) {#}",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("Multiset_More.replicate_mset_plus",
     "replicate_mset (?a + ?b) ?C =
      replicate_mset ?a ?C + replicate_mset ?b ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Multiset_More.replicate_mset_minus_replicate_mset_same",
     "replicate_mset ?m ?x - replicate_mset ?n ?x =
      replicate_mset (?m - ?n) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Multiset_More.Sigma_mset_Diff_distrib1",
     "Sigma_mset (?I - ?J) ?C = Sigma_mset ?I ?C - Sigma_mset ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_plus_distrib1",
     "Sigma_mset (?A + ?B) ?C = Sigma_mset ?A ?C + Sigma_mset ?B ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_Int_distrib1",
     "Sigma_mset (?I \<inter># ?J) ?C =
      Sigma_mset ?I ?C \<inter># Sigma_mset ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_Un_distrib1",
     "Sigma_mset (?I \<union># ?J) ?C =
      Sigma_mset ?I ?C \<union># Sigma_mset ?J ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Multiset_More.Times_mset_single_right",
     "?A \<times># {#?b#} = {#(a, ?b). a :# ?A#}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), t_empty),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Multiset_More.removeAll_subseteq_remove1_mset",
     "removeAll_mset ?x ?M <=# remove1_mset ?x ?M",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_var 0))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("Multiset_More.less_subset_eq_Union_mset",
     "?i < length ?CAi ==> ?CAi ! ?i <=# \<Sum>\<^sub># (mset ?CAi)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Multiset_More.Sigma_mset_transfer",
     "rel_fun (rel_mset ?R)
       (rel_fun (rel_fun ?R (rel_mset ?S)) (rel_mset (rel_prod ?R ?S)))
       Sigma_mset Sigma_mset",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app (template_hole 4, template_var 0))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)))),
             template_hole 1),
           template_hole 0)
         )),
    ("Multiset_More.count_sum_mset_if_1_0",
     "count ?M ?a = (SUM x:#?M. if x = ?a then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 1)))),
    ("Multiset_More.count_mset_set_if",
     "count (mset_set ?A) ?a = (if ?a : ?A & finite ?A then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_hole 0))),
    ("Multiset_More.in_mset_sum_list_iff",
     "(?a :# sum_list ?\<A>) = (EX A:set ?\<A>. ?a :# A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Multiset_More.Times_mset_empty",
     "(?A \<times># ?B = {#}) = (?A = {#} | ?B = {#})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), t_empty),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Multiset_More.member_product_mset",
     "(?x :# Multiset_More.product_mset ?A ?B) = (?x :# ?A \<times># ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1), t_empty))))),
    ("Multiset_More.size_mset_remove1_mset_le_iff",
     "(size (remove1_mset ?x ?M) < size ?M) = (?x :# ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))),
         template_app (template_hole 5, template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Multiset_More.mset_removeAll",
     "removeAll_mset ?C (mset ?L) = mset (removeAll ?C ?L)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 1)),
               template_var 0)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Multiset_More.mset_filter_compl",
     "mset (filter ?p ?xs) + mset (filter (Not o ?p) ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 0))),
       template_app (template_hole 3, template_var 0))),
    ("Multiset_More.Times_mset_single_single",
     "{#?a#} \<times># {#?b#} = {#(?a, ?b)#}",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_hole 5)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Multiset_More.minus_multiset_transfer",
     "bi_unique ?R ==>
      rel_fun (rel_mset ?R) (rel_fun (rel_mset ?R) (rel_mset ?R)) (-) (-)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 3, template_var 0)),
                   template_app (template_hole 3, template_var 0))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Multiset_More.add_mset_less_imp_less_remove1_mset",
     "add_mset ?x ?M < ?N ==> ?M < remove1_mset ?x ?N",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_hole 0))))),
    ("Multiset_More.range_image_mset",
     "set_mset ?Ds <= range ?f ==> ?Ds : range (image_mset ?f)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))
           ))),
    ("Multiset_More.Sigma_msetD1",
     "(?a, ?b) :# Sigma_mset ?A ?B ==> ?a :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Multiset_More.mset_drop_upto",
     "mset (drop ?a ?N) = image_mset ((!) ?N) (mset_set {?a..<length ?N})",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Multiset_More.removeAll_mset_filter_mset",
     "removeAll_mset ?C ?M = filter_mset ((~=) ?C) ?M",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty), template_var 1))),
    ("Multiset_More.filter_mset_neq",
     "{#x :# ?M. x ~= ?y#} = removeAll_mset ?y ?M",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("Multiset_More.count_image_mset_inj",
     "inj ?f ==> count (image_mset ?f ?M) (?f ?x) = count ?M ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multiset_More.sum_image_mset_mono_mem",
     "?n :# ?M ==> ?f ?n <= \<Sum>\<^sub># (image_mset ?f ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_var 0, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Multiset_More.all_the_same",
     "\<forall>x:#?X. x = ?y ==> card (set_mset ?X) <= Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 1, template_hole 0)))),
    ("Multiset_More.Sigma_msetD2",
     "(?a, ?b) :# Sigma_mset ?A ?B ==> ?b :# ?B ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_hole 0,
               template_app (template_var 0, template_var 3)))
           ))),
    ("Multiset_More.subseteq_mset_size_eql",
     "[| ?X <=# ?Y; size ?Y = size ?X |] ==> ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 1, template_var 0))),
    ("Multiset_More.count_Sigma_mset",
     "count (Sigma_mset ?A ?B) (?a, ?b) = count ?A ?a * count (?B ?a) ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_empty_iff",
     "(Sigma_mset ?I ?X = {#}) = (\<forall>i:#?I. ?X i = {#})",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty))),
    ("Multiset_More.size_mset_removeAll_mset_le_iff",
     "(size (removeAll_mset ?x ?M) < size ?M) = (?x :# ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_var 0)))),
         template_app (template_hole 5, template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Multiset_More.remdups_mset_singleton_sum",
     "remdups_mset (add_mset ?a ?A) =
      (if ?a :# ?A then remdups_mset ?A
       else add_mset ?a (remdups_mset ?A))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("Multiset_More.fst_image_mset_times_mset",
     "image_mset fst (?A \<times># ?B) =
      (if ?B = {#} then {#} else repeat_mset (size ?B) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)),
               template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Multiset_More.snd_image_mset_times_mset",
     "image_mset snd (?A \<times># ?B) =
      (if ?A = {#} then {#} else repeat_mset (size ?A) ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3)),
               template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Multiset_More.image_mset_filter_swap",
     "image_mset ?f {#x :# ?M. ?P (?f x)#} =
      filter_mset ?P (image_mset ?f ?M)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Multiset_More.Times_mset_Diff_distrib1",
     "(?A - ?B) \<times># ?C = ?A \<times># ?C - ?B \<times># ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Multiset_More.Times_insert_right",
     "add_mset ?a ?A \<times># ?B =
      ?A \<times># ?B + image_mset (Pair ?a) ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Multiset_More.Times_mset_Int_distrib1",
     "(?A \<inter># ?B) \<times># ?C =
      ?A \<times># ?C \<inter># ?B \<times># ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Multiset_More.Times_mset_Un_distrib1",
     "(?A \<union># ?B) \<times># ?C =
      ?A \<times># ?C \<union># ?B \<times># ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Multiset_More.Sigma_mset_plus_distrib2",
     "(SIGMAMSET i\<in>#?A. ?B i + ?C i) =
      Sigma_mset ?A ?B + Sigma_mset ?A ?C",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_Diff_distrib2",
     "(SIGMAMSET i\<in>#?I. ?A i - ?B i) =
      Sigma_mset ?I ?A - Sigma_mset ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_Int_distrib2",
     "(SIGMAMSET i\<in>#?I. ?A i \<inter># ?B i) =
      Sigma_mset ?I ?A \<inter># Sigma_mset ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Multiset_More.Sigma_mset_Un_distrib2",
     "(SIGMAMSET i\<in>#?I. ?A i \<union># ?B i) =
      Sigma_mset ?I ?A \<union># Sigma_mset ?I ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Multiset_More.notin_add_mset_remdups_mset",
     "?a ~:# ?A ==>
      add_mset ?a (remdups_mset ?A) = remdups_mset (add_mset ?a ?A)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Multiset_More.removeAll_notin",
     "?a ~:# ?A ==> removeAll_mset ?a ?A = ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 1)),
         template_var 0))),
    ("Multiset_More.remove_diff_multiset",
     "?x13.0 ~:# ?A ==> ?A - add_mset ?x13.0 ?B = ?A - ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Multiset_More.set_mset_minus_replicate_mset",
     "?n < count ?A ?a ==>
      set_mset (?A - replicate_mset ?n ?a) = set_mset ?A",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app (template_hole 2, template_var 1)))),
    ("Multiset_More.ex_replicate_mset_if_all_elems_eq",
     "\<forall>x:#?M. x = ?y ==> EX n. ?M = replicate_mset n ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Multiset_More.size_remove1_mset_If",
     "size (remove1_mset ?x ?M) = size ?M - (if ?x :# ?M then 1 else 0)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6))),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 9, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 1))),
             template_hole 1),
           template_hole 0)))),
    ("Multiset_More.count_image_mset_Pair",
     "count (image_mset (Pair ?a) ?B) (?x, ?b) =
      (if ?x = ?a then count ?B ?b else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Multiset_More.multiset_filter_mono2",
     "(filter_mset ?P ?A <=# filter_mset ?Q ?A) =
      (\<forall>a:#?A. ?P a --> ?Q a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Multiset_More.range_mset_map",
     "set_mset ?Ds <= range ?f ==> ?Ds : range (%Cl. mset (map ?f Cl))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, t_empty), template_hole 0))
           ))),
    ("Multiset_More.in_mset_sum_list",
     "[| ?L :# ?LL; ?LL : set ?Ci |] ==> ?L :# sum_list ?Ci",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Multiset_More.subset_add_mset_notin_subset_mset",
     "[| ?A <=# add_mset ?b ?B; ?b ~:# ?A |] ==> ?A <=# ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app (template_hole 0, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Multiset_More.in_mset_conv_nth",
     "(?x :# mset ?xs) = (EX i<length ?xs. ?xs ! i = ?x)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("Multiset_More.set_mset_single_iff_replicate_mset",
     "(set_mset ?U = {?a}) = (EX n>0. ?U = replicate_mset n ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app (template_hole 5, t_empty))),
    ("Multiset_More.add_mset_remove_trivial_iff",
     "(?N = add_mset ?a (remove1_mset ?b ?N)) = (?a :# ?N & ?a = ?b)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 4)))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Multiset_More.trivial_add_mset_remove_iff",
     "(add_mset ?a (remove1_mset ?b ?N) = ?N) = (?a :# ?N & ?a = ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 4))),
         template_var 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multiset_More.Times_insert_left",
     "?A \<times># add_mset ?x ?B = ?A \<times># ?B + {#(a, ?x). a :# ?A#}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 2)))),
    ("Multiset_More.sum_image_mset_mono",
     "?A <=# ?B ==>
      \<Sum>\<^sub># (image_mset ?f ?A)
      <= \<Sum>\<^sub># (image_mset ?f ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Multiset_More.image_mset_of_subset",
     "?A <=# image_mset ?\<eta> ?C' ==>
      EX A'. image_mset ?\<eta> A' = ?A & A' <=# ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Multiset_More.sum_le_singleton",
     "?A <= {?x} ==> sum ?f ?A = (if ?x : ?A then ?f ?x else (0::?'b))",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app (template_var 0, template_var 1)),
           template_hole 0)))),
    ("Multiset_More.sum_mset_dvd",
     "\<forall>m:#?M. ?k dvd ?f m ==>
      ?k dvd \<Sum>\<^sub># (image_mset ?f ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("Multiset_More.finite_mset_set_inter",
     "[| finite ?A; finite ?B |]
      ==> mset_set (?A Int ?B) = mset_set ?A \<inter># mset_set ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Multiset_More.mem_Times_mset_iff",
     "(?x :# ?A \<times># ?B) = (fst ?x :# ?A & snd ?x :# ?B)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1), t_empty))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("Multiset_More.mem_Sigma_mset_iff",
     "((?a, ?b) :# Sigma_mset ?A ?B) = (?a :# ?A & ?b :# ?B ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2)),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_hole 0,
             template_app (template_var 0, template_var 3)))))),
    ("Multiset_More.Times_mset_image_mset2",
     "?A \<times># image_mset ?f ?B =
      {#(a, ?f b). (a, b) :# ?A \<times># ?B#}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Multiset_More.Times_mset_image_mset1",
     "image_mset ?f ?A \<times># ?B =
      {#(?f a, b). (a, b) :# ?A \<times># ?B#}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Multiset_More.count_image_mset_le_count_inj_on",
     "inj_on ?f (set_mset ?M) ==>
      count (image_mset ?f ?M) ?y
      <= count ?M (inv_into (set_mset ?M) ?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 5, template_var 1)),
               template_var 2),
             template_var 0))))),
    ("Multiset_More.in_remove1_mset_neq",
     "?a ~= ?b ==> (?a :# remove1_mset ?b ?C) = (?a :# ?C)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_hole 3, template_var 0))))),
    ("Multiset_More.Times_mset_subset_mset_cancel1",
     "?x :# ?A ==> (?A \<times># ?B <=# ?A \<times># ?C) = (?B <=# ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2), t_empty)),
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multiset_More.Times_mset_eq_cancel2",
     "?x :# ?C ==> (?A \<times># ?C = ?B \<times># ?C) = (?A = ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1), t_empty),
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)),
         template_equation (template_var 1, template_var 0)))),
    ("Multiset_More.Times_mset_subset_mset_cancel2",
     "?x :# ?C ==> (?A \<times># ?C <=# ?B \<times># ?C) = (?A <=# ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1), t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multiset_More.sum_mset_if_eq_constant",
     "(SUM x:#?M. if ?a = x then ?f x else (0::?'a)) =
      ((+) (?f ?a) ^^ count ?M ?a) (0::?'a)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_hole 0,
             template_app (template_var 1, template_var 2))),
         template_hole 3))),
    ("Multiset_More.replicate_mset_eq_iff",
     "(replicate_mset ?m ?x = replicate_mset ?n ?y) =
      (?m = ?n & (?m ~= 0 --> ?x = ?y))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_hole 1))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Multiset_More.set_mset_minus_replicate_mset",
     "count ?A ?a <= ?n ==>
      set_mset (?A - replicate_mset ?n ?a) = set_mset ?A - {?a}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Multiset_More.image_mset_of_subset_list",
     "image_mset ?\<eta> ?C' = mset ?lC ==>
      EX qC'. map ?\<eta> qC' = ?lC & mset qC' = ?C'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Multiset_More.subset_msetE",
     "[| ?A <# ?B; [| ?A <=# ?B; ~ ?B <=# ?A |] ==> ?R |] ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 2)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Multiset_More.sum_mset_transfer",
     "[| ?R (0::?'a) (0::?'b); rel_fun ?R (rel_fun ?R ?R) (+) (+) |]
      ==> rel_fun (rel_mset ?R) ?R \<Sum>\<^sub># \<Sum>\<^sub>#",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 9),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 0)),
                template_hole 5),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_var 0),
               template_hole 1),
             template_hole 0)
           ))),
    ("Multiset_More.Sigma_msetI",
     "[| ?a :# ?A; ?b :# ?B ?a |] ==> (?a, ?b) :# Sigma_mset ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_var 0, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Multiset_More.split_paired_Ball_mset_Sigma_mset",
     "(\<forall>z:#Sigma_mset ?A ?B. ?P z) =
      (\<forall>x:#?A. \<forall>y:#?B x. ?P (x, y))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         t_empty))),
    ("Multiset_More.split_paired_Bex_mset_Sigma_mset",
     "(\<exists>z:#Sigma_mset ?A ?B. ?P z) =
      (\<exists>x:#?A. \<exists>y:#?B x. ?P (x, y))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         t_empty))),
    ("Multiset_More.remove1_mset_add_mset_If",
     "remove1_mset ?L (add_mset ?L' ?C) =
      (if ?L = ?L' then ?C else remove1_mset ?L ?C + {#?L'#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               template_var 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3))),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_hole 3)))
           ))),
    ("Multiset_More.image_filter_ne_mset",
     "image_mset ?f {#x :# ?M. ?f x ~= ?y#} =
      removeAll_mset ?y (image_mset ?f ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0)),
               template_var 1)),
           template_var 1)))),
    ("Multiset_More.image_mset_filter_swap2",
     "filter_mset ?Q (image_mset ?P ?D) =
      image_mset ?P {#C. C :# {#C :# ?D. ?Q (?P C)#}#}",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Multiset_More.image_mset_remove1_mset_if",
     "image_mset ?f (remove1_mset ?a ?M) =
      (if ?a :# ?M then remove1_mset (?f ?a) (image_mset ?f ?M)
       else image_mset ?f ?M)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6))),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 2, template_var 0)),
               template_hole 0))),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_var 1)))),
    ("Multiset_More.filter_mset_empty_if_finite_and_filter_set_empty",
     "[| {x: ?X. ?P x} = {}; finite ?X |]
      ==> filter_mset ?P (mset_set ?X) = {#}",
     template_implication
      ([template_equation
         (template_app (template_hole 8, t_empty), template_hole 5),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Multiset_More.in_mset_sum_list2",
     "[| ?L :# sum_list ?Ci;
         !!LL. [| LL : set ?Ci; ?L :# LL |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Multiset_More.filter_mset_neq_cond",
     "{#x :# ?M. ?P x & x ~= ?y#} = removeAll_mset ?y (filter_mset ?P ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, t_empty), template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, t_empty),
                   template_var 0)),
               template_var 1)),
           template_var 1)))),
    ("Multiset_More.Times_mset_assoc",
     "(?A \<times># ?B) \<times># ?C =
      {#((a, b), c). (a, b, c) :# ?A \<times># ?B \<times># ?C#}",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2), t_empty)),
         t_empty),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("Multiset_More.sum_mset_distrib_div_if_dvd",
     "\<forall>m:#?M. ?k dvd ?f m ==>
      \<Sum>\<^sub># (image_mset ?f ?M) div ?k = (SUM m:#?M. ?f m div ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2))),
           template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Multiset_More.subseteq_multiset_transfer",
     "[| bi_unique ?R; right_total ?R |]
      ==> rel_fun (rel_mset ?R) (rel_fun (rel_mset ?R) (=))
           (%M N. filter_mset (Domainp ?R) M <=# filter_mset (Domainp ?R) N)
           (<=#)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 6, template_var 0)),
                   template_hole 4)),
               t_empty),
             template_hole 0)
           ))),
    ("Multiset_More.filter_mset_cong",
     "[| ?M = ?M'; !!a. a :# ?M ==> ?P a = ?Q a |]
      ==> filter_mset ?P ?M = filter_mset ?Q ?M",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Multiset_More.Sigma_mset_mono",
     "[| ?A <=# ?C; !!x. x :# ?A ==> ?B x <=# ?D x |]
      ==> Sigma_mset ?A ?B <=# Sigma_mset ?C ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multiset_More.Sigma_msetE2",
     "[| (?a, ?b) :# Sigma_mset ?A ?B; [| ?a :# ?A; ?b :# ?B ?a |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 2))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_hole 0,
                     template_app (template_var 1, template_var 4)))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Multiset_More.image_mset_cong2",
     "[| !!x. x :# ?M ==> ?f x = ?g x; ?M = ?N |]
      ==> image_mset ?f ?M = image_mset ?g ?N",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_equation (template_var 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multiset_More.less_multiset_doubletons",
     "[| ?y < ?t | ?y < ?s; ?x < ?t | ?x < ?s |]
      ==> {#?y, ?x#} < {#?t, ?s#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Multiset_More.untion_image_mset_Pair_distribute",
     "(SUM x:#?J - ?I. image_mset (Pair x) (?C x)) =
      (SUM x:#?J. image_mset (Pair x) (?C x)) -
      (SUM x:#?I. image_mset (Pair x) (?C x))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty), template_var 1))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Multiset_More.Sigma_mset_cong",
     "[| ?A = ?B; !!x. x :# ?B ==> ?C x = ?D x |]
      ==> Sigma_mset ?A ?C = Sigma_mset ?B ?D",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Multiset_More.add_mset_eq_add_mset_ne",
     "?a ~= ?b ==>
      (add_mset ?a ?A = add_mset ?b ?B) =
      (?a :# ?B & ?b :# ?A & ?A = add_mset ?b (remove1_mset ?a ?B))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app (template_hole 2, template_var 1))),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_hole 0))))))
             )))),
    ("Multiset_More.subseteq_list_Union_mset",
     "[| length ?Ci = ?n; length ?CAi = ?n;
         ALL i<?n. ?Ci ! i <=# ?CAi ! i |]
      ==> \<Sum>\<^sub># (mset ?Ci) <=# \<Sum>\<^sub># (mset ?CAi)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 7, template_var 0), template_var 1),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Multiset_More.add_mset_eq_add_mset",
     "(add_mset ?a ?M = add_mset ?b ?M') =
      (?a = ?b & ?M = ?M' |
       ?a ~= ?b & ?b :# ?M & add_mset ?a (remove1_mset ?b ?M) = ?M')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 8, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app (template_hole 2, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_app
                          (template_app (template_hole 8, template_var 1),
                           template_hole 0)))),
                   template_var 0))))
           ))),
    ("Multiset_More.minus_remove1_mset_if",
     "?A - remove1_mset ?b ?B =
      (if ?b :# ?B & ?b :# ?A & count ?B ?b <= count ?A ?b
       then {#?b#} + (?A - ?B) else ?A - ?B)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app (template_hole 3, template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app (template_hole 3, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7)),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_var 1)))),
    ("Multiset_More.Sigma_msetE",
     "[| ?c :# Sigma_mset ?A ?B;
         !!x y. [| x :# ?A; y :# ?B x; ?c = (x, y) |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Multiset_More.image_filter_cong",
     "(!!C. [| C :# ?M; ?P C |] ==> ?f C = ?g C) ==>
      image_mset ?f (filter_mset ?P ?M) =
      image_mset ?g (filter_mset ?P ?M)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, t_empty), template_var 3)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, t_empty), template_var 3))))),
    ("Multiset_More.remove1_mset_eqE",
     "[| remove1_mset ?L ?x1.0 = ?M;
         [| ?L :# ?x1.0; ?x1.0 = ?M + {#?L#} |] ==> ?P;
         [| ?L ~:# ?x1.0; ?x1.0 = ?M |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)),
          template_var 1),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_var 3))
               )],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 4)))],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app (template_hole 2, template_var 3))
                   )
               )],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Multiset_MoreMoreTemplates"
### 0.434s elapsed time, 0.651s cpu time, 0.056s GC time
val it = (): unit
