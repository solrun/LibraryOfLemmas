   [("Nested_Multiset.irrefl_less_nmultiset", "?X < ?X ==> False",
     template_implication
      ([template_inequation (less_than, template_var 0, template_var 0)],
       template_predicate (template_hole 0))),
    ("Nested_Multiset.less_nmultiset_imp_le_depth_nmset",
     "?X < ?Y ==> |?X| <= |?Y|",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Nested_Multiset.less_depth_nmset_imp_less_nmultiset",
     "|?X| < |?Y| ==> ?X < ?Y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Nested_Multiset.antisym_less_nmultiset",
     "[| ?X < ?Y; ?Y < ?X |] ==> False",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate (template_hole 0))),
    ("Nested_Multiset.depth_nmset_MSet", "?x :# ?M ==> |?x| < |MSet ?M|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Nested_Multiset.trans_less_nmultiset",
     "[| ?X < ?Y; ?Y < ?Z |] ==> ?X < ?Z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Nested_Multiset.total_less_nmultiset",
     "[| ~ ?X < ?Y; ?Y ~= ?X |] ==> ?Y < ?X",
     template_implication
      ([template_negation
         (template_inequation (less_than, template_var 1, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Nested_Multiset.depth_nmset_eq_0",
     "(|?X| = 0) = (?X = MSet {#} | (EX x. ?X = Elem x))",
     template_bimplication
      (template_equation
        (template_app (template_hole 7, template_var 0), template_hole 6),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Nested_Multiset.wf_less_nmultiset_depth",
     "wf {(X, Y). |X| = ?i & |Y| = ?i & X < Y}",
     template_predicate
      (
         template_app
          (template_hole 6,
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty)))
         )),
    ("Nested_Multiset.depth_nmset_eq_Suc",
     "(|?X| = Suc ?n) =
      (EX N. ?X = MSet N &
             (\<exists>Y:#N. |Y| = ?n) & (\<forall>Y:#N. |Y| <= ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 1)),
         template_app (template_hole 8, template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Nested_Multiset.less_multiset_ext\<^sub>D\<^sub>M_imp_mult",
     "[| set_mset ?N <= ?A; set_mset ?M <= ?A;
         less_multiset_ext\<^sub>D\<^sub>M ?R ?M ?N |]
      ==> (?M, ?N) : mult {(x, y). x : ?A & y : ?A & ?R x y}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 0),
                template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 3)),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))))
           ))),
    ("Nested_Multiset.eq_mlex_I",
     "[| !!X Y. ?f X < ?f Y ==> ?R X Y; antisymp ?R |]
      ==> {(X, Y). ?R X Y} = ?f <*mlex*> {(X, Y). ?f X = ?f Y & ?R X Y}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("Nested_Multiset.less_multiset_ext\<^sub>D\<^sub>M_cong",
     "(!!X Y k a.
          [| X ~= {#}; X <=# ?N; ?M = ?N - X + Y; k :# Y |]
          ==> ?R k a = ?S k a) ==>
      less_multiset_ext\<^sub>D\<^sub>M ?R ?M ?N =
      less_multiset_ext\<^sub>D\<^sub>M ?S ?M ?N",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 3)))),
    ("Nested_Multiset.less_multiset_ext\<^sub>D\<^sub>M_iff_mult",
     "[| set_mset ?N <= ?A; set_mset ?M <= ?A;
         ALL x:?A. ALL y:?A. ALL z:?A. ?R x y --> ?R y z --> ?R x z |]
      ==> less_multiset_ext\<^sub>D\<^sub>M ?R ?M ?N =
          ((?M, ?N) : mult {(x, y). x : ?A & y : ?A & ?R x y})",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 0),
             template_var 1),
           template_var 3),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 3)),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, t_empty))))))),
    ("Nested_Multiset.mult_imp_less_multiset_ext\<^sub>D\<^sub>M",
     "[| set_mset ?N <= ?A; set_mset ?M <= ?A;
         ALL x:?A. ALL y:?A. ALL z:?A. ?R x y --> ?R y z --> ?R x z;
         (?M, ?N) : mult {(x, y). x : ?A & y : ?A & ?R x y} |]
      ==> less_multiset_ext\<^sub>D\<^sub>M ?R ?M ?N",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 3)),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 3)
           ))),
    ("Nested_Multiset.less_nmultiset_cases",
     "[| !!a b. ?x = (Elem a, Elem b) ==> ?P;
         !!a M. ?x = (Elem a, MSet M) ==> ?P;
         !!M a. ?x = (MSet M, Elem a) ==> ?P;
         !!M N. ?x = (MSet M, MSet N) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Nested_Multiset.less_nmultiset_induct",
     "[| !!a b. ?P (Elem a) (Elem b); !!a M. ?P (Elem a) (MSet M);
         !!M a. ?P (MSet M) (Elem a);
         !!M N.
            (!!X Y k a.
                [| X ~= {#}; X <=# N; M = N - X + Y; k :# Y |]
                ==> ?P k a) ==>
            ?P (MSet M) (MSet N) |]
      ==> ?P ?a0.0 ?a1.0",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           )))]
