   [("Consensus_Misc.const_map_empty", "const_map ?v {} = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       t_empty)),
    ("Consensus_Misc.dom_const_map", "dom (const_map ?v ?S) = ?S",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Consensus_Misc.const_map_is_None",
     "(const_map ?y ?A ?x = None) = (?x ~: ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Consensus_Misc.map_graph_mem",
     "((?x, ?y) : map_graph ?f) = (?f ?x = Some ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_var 0, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Consensus_Misc.process_mru_is_None",
     "(process_mru ?v_f ?a = None) = (vote_set ?v_f {?a} = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 0))),
    ("Consensus_Misc.const_map_ran",
     "(?x : ran (const_map ?v ?S)) = (?S ~= {} & ?x = ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)))
            )],
       template_dunno)),
    ("Consensus_Misc.const_map_is_Some",
     "(const_map ?y ?A ?x = Some ?z) = (?z = ?y & ?x : ?A)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_dunno)),
    ("Consensus_Misc.Max_by_eta",
     "Max_by ?f = (%S. SOME x. x : S & ?f x = Max (?f ` S))",
     template_equation
      (template_app (template_hole 6, template_var 0), t_empty)),
    ("Consensus_Misc.div_Suc",
     "Suc ?m div ?n =
      (if Suc ?m mod ?n = 0 then Suc (?m div ?n) else ?m div ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Consensus_Misc.process_mru_is_Some",
     "(process_mru ?v_f ?a = Some ?rv) =
      (vote_set ?v_f {?a} ~= {} & ?rv = Max_by fst (vote_set ?v_f {?a}))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 11, template_var 2), template_var 1),
         template_app (template_hole 10, template_var 0)),
       template_dunno)),
    ("Consensus_Misc.vote_set_upd",
     "vote_set (?v_hist(?r := ?v_f)) {?p} =
      (if ?p : dom ?v_f then insert (?r, the (?v_f ?p)) else id)
       (if ?v_hist ?r ?p = None then vote_set ?v_hist {?p}
        else vote_set ?v_hist {?p} - {(?r, the (?v_hist ?r ?p))})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 13, template_var 0),
                template_hole 12))
            )],
       template_dunno))]
