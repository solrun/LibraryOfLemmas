   [("Infra.vimage_image_subset", "?A <= ?f -` ?f ` ?A",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Infra.map_comp", "map (?g o ?f) = map ?g o map ?f",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Infra.Image_compose", "(?R1.0 O ?R2.0) `` ?A = ?R2.0 `` ?R1.0 `` ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Infra.dom_lemmas", "?f ?x = Some ?y ==> ?x : dom ?f",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Infra.finite_zero_cardI", "[| ?A = {}; finite ?A |] ==> card ?A = 0",
     template_implication
      ([template_equation (template_var 0, template_hole 4),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Infra.finite_zero_cardD", "[| card ?A = 0; finite ?A |] ==> ?A = {}",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation (template_var 0, template_hole 0))),
    ("Infra.take_prefix", "take ?n ?l = ?xs ==> EX xs'. ?l = ?xs @ xs'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Infra.finite_positive_cardI",
     "[| ?A ~= {}; finite ?A |] ==> 0 < card ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Infra.finite_positive_cardD",
     "[| 0 < card ?A; finite ?A |] ==> ?A ~= {}",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Infra.dom_lemmas", "[| ?f ?x = Some ?y; ?z ~: dom ?f |] ==> ?x ~= ?z",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_app (template_hole 1, template_var 3))
                )
            )],
       template_negation
        (template_equation (template_var 2, template_var 0))))]
