Loading theory "Draft.Consensus_Types" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting" via "Draft.Quorums")
Loading theory "Draft.Infra" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Consensus_Misc" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.Consensus_Types"
### 0.036s elapsed time, 0.171s cpu time, 0.000s GC time
Loading theory "Draft.Quorums" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
locale quorum
  fixes Quorum :: "'a set set"
  assumes "quorum Quorum"
### theory "Draft.Infra"
### 0.072s elapsed time, 0.317s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting")
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
locale mono_quorum
  fixes Quorum :: "process set set"
  assumes "mono_quorum Quorum"
### theory "Draft.Quorums"
### 0.080s elapsed time, 0.305s cpu time, 0.047s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.520s cpu time, 0.047s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Consensus_Misc"
### 0.234s elapsed time, 0.946s cpu time, 0.047s GC time
Loading theory "Draft.Three_Steps" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU")
### theory "Draft.Three_Steps"
### 0.076s elapsed time, 0.290s cpu time, 0.067s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.836s cpu time, 0.067s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.301s elapsed time, 1.195s cpu time, 0.067s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Draft.Refinement"
### 1.126s elapsed time, 4.279s cpu time, 0.788s GC time
Loading theory "Draft.Voting" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.900s elapsed time, 3.400s cpu time, 0.675s GC time
Loading theory "Draft.CT_Defs" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.007s elapsed time, 3.819s cpu time, 0.765s GC time
Loading theory "Draft.HO_Transition_System" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "size <*mlex*> {}"
### theory "Draft.HO_Transition_System"
### 0.250s elapsed time, 0.996s cpu time, 0.086s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
specification
  coord_phase: three_phase ?r = three_phase ?r' ==> coord ?r = coord ?r'
### theory "Draft.Voting"
### 0.586s elapsed time, 2.211s cpu time, 0.255s GC time
Loading theory "Draft.Same_Vote" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote")
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Same_Vote"
### 0.122s elapsed time, 0.369s cpu time, 0.000s GC time
Loading theory "Draft.MRU_Vote" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
### theory "Draft.MRU_Vote"
### 0.070s elapsed time, 0.221s cpu time, 0.076s GC time
Loading theory "Draft.MRU_Vote_Opt" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs" via "Draft.Three_Step_MRU")
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "size <*mlex*> {}"
### theory "Draft.MRU_Vote_Opt"
### 0.257s elapsed time, 0.779s cpu time, 0.061s GC time
Loading theory "Draft.Three_Step_MRU" (required by "Draft.CT_ProofsTemplates" via "Draft.CT_Proofs")
### theory "HOL-Library.Tree"
### 2.037s elapsed time, 7.316s cpu time, 1.115s GC time
Loading theory "Draft.Templates" (required by "Draft.CT_ProofsTemplates" via "Draft.ExtrEqs")
### Missing patterns in function definition:
### val NeverVoted = undefined
### val Null = undefined
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.061s elapsed time, 0.182s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CT_ProofsTemplates")
Found termination order: "{}"
Found termination order: "{}"
locale mono_quorum
  fixes Quorum :: "process set set"
  assumes "mono_quorum Quorum"
### theory "Draft.CT_Defs"
### 1.355s elapsed time, 4.544s cpu time, 0.517s GC time
### theory "Draft.Three_Step_MRU"
### 0.395s elapsed time, 1.157s cpu time, 0.125s GC time
Loading theory "Draft.CT_Proofs" (required by "Draft.CT_ProofsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.594s elapsed time, 1.466s cpu time, 0.146s GC time
### theory "Draft.CT_Proofs"
### 0.423s elapsed time, 0.852s cpu time, 0.069s GC time
Loading theory "Draft.CT_ProofsTemplates"
val templateLemmas =
   [("CT_Proofs.three_step_less_D",
     "0 < three_step ?r ==> three_step ?r = 1 | three_step ?r = 2",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("CT_Proofs.CT_Refines_ThreeStep_MRU",
     "ALL r. CT_commPerRd r (?HOs r) (?crds r) ==>
      PO_refines ct_ref_rel majorities.ts_mru_TS (CT_TS ?HOs ?HOs ?crds)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_hole 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 1),
               template_var 0))
           ))),
    ("CT_Proofs.mru_vote_evolution2",
     "ALL p. next2 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      pstate.mru_vote o ?s' = pstate.mru_vote o ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 3)))),
    ("CT_Proofs.decide_evolution",
     "ALL p. next0 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      decide o ?s = decide o ?s'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 3),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("CT_Proofs.mru_vote_evolution0",
     "ALL p. next0 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      pstate.mru_vote o ?s' = pstate.mru_vote o ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 3)))),
    ("CT_Proofs.decide_evolution",
     "ALL p. next1 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      decide o ?s = decide o ?s'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 3),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("CT_Proofs.CT_trans",
     "CSHO_trans_alt CT_sendMsg CT_nextState ?HOs ?SHOs ?crds =
      CT_trans_step ?HOs ?SHOs ?crds next0 send0 0 Un
      CT_trans_step ?HOs ?SHOs ?crds next1 send1 1 Un
      CT_trans_step ?HOs ?SHOs ?crds next2 send2 2",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 11, template_var 2),
                         template_var 1),
                       template_var 0),
                     template_hole 10),
                   template_hole 9),
                 template_hole 8)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 2),
                       template_var 1),
                     template_var 0),
                   template_hole 7),
                 template_hole 6),
               template_hole 5))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 11, template_var 2),
                   template_var 1),
                 template_var 0),
               template_hole 4),
             template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("CT_Proofs.step0_ref",
     "ALL r. CT_commPerRd r (?HOs r) (?crds r) ==>
      {ct_ref_rel} UN r. \<Union>
                          (range
                            (majorities.opt_mru_step0
                              r)), CT_trans_step ?HOs ?HOs ?crds next0 send0
                                    0 {> ct_ref_rel}",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, t_empty),
                     template_hole 4))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 1),
                       template_var 0),
                     template_hole 2),
                   template_hole 1),
                 template_hole 0)),
             template_hole 11)
           ))),
    ("CT_Proofs.step2_ref",
     "ALL r. CT_commPerRd r (?HOs r) (?crds r) ==>
      {ct_ref_rel} UN r. \<Union>
                          (range
                            (majorities.opt_mru_step2
                              r)), CT_trans_step ?HOs ?HOs ?crds next2 send2
                                    2 {> ct_ref_rel}",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, t_empty),
                     template_hole 6))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 1),
                         template_var 1),
                       template_var 0),
                     template_hole 4),
                   template_hole 3),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)))),
             template_hole 13)
           ))),
    ("CT_Proofs.msgs_mru_vote",
     "?\<mu> (coord ?r)
      : get_msgs (send0 ?r) ?cfg (?HOs ?r) (?HOs ?r) (coord ?r) ==>
      msgs_to_lvs (?\<mu> (coord ?r)) |` ?HOs ?r (coord ?r) =
      (pstate.mru_vote o ?cfg) |` ?HOs ?r (coord ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_var 3,
                  template_app (template_hole 7, template_var 2))),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_var 2)),
                      template_var 1),
                    template_app (template_var 0, template_var 2)),
                  template_app (template_var 0, template_var 2)),
                template_app (template_hole 7, template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_var 3,
                 template_app (template_hole 7, template_var 2)))),
           template_app
            (template_app (template_var 0, template_var 2),
             template_app (template_hole 7, template_var 2))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_var 0, template_var 2),
             template_app (template_hole 7, template_var 2)))))),
    ("CT_Proofs.CT_termination",
     "[| CHORun CT_Alg ?rho ?HOs ?crds;
         ALL r. CHOcommPerRd CT_M r (?HOs r) (?crds r);
         CHOcommGlobal CT_M ?HOs ?crds |]
      ==> EX r v. decide (?rho r ?p) = Some v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("CT_Proofs.step1_ref",
     "ALL r. CT_commPerRd r (?HOs r) (?crds r) ==>
      {ct_ref_rel} UN r S.
                      \<Union>
                       (range
                         (majorities.opt_mru_step1 r
                           S)), CT_trans_step ?HOs ?HOs ?crds next1 send1
                                 (Suc 0) {> ct_ref_rel}",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, t_empty),
                     template_hole 5))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 1),
                       template_var 0),
                     template_hole 3),
                   template_hole 2),
                 template_app (template_hole 1, template_hole 0))),
             template_hole 13)
           )))]:
   (string * thm * template) list
### theory "Draft.CT_ProofsTemplates"
### 0.400s elapsed time, 0.550s cpu time, 0.050s GC time
val it = (): unit
