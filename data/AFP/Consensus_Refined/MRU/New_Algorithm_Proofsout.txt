Loading theory "Draft.Infra" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting" via "Draft.Refinement")
Loading theory "Draft.Consensus_Types" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting" via "Draft.Quorums")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Consensus_Misc" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Consensus_Types"
### 0.032s elapsed time, 0.157s cpu time, 0.000s GC time
Loading theory "Draft.Quorums" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Infra"
### 0.065s elapsed time, 0.295s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote" via "Draft.Voting")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
locale quorum
  fixes Quorum :: "'a set set"
  assumes "quorum Quorum"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
locale mono_quorum
  fixes Quorum :: "process set set"
  assumes "mono_quorum Quorum"
### theory "Draft.Quorums"
### 0.092s elapsed time, 0.357s cpu time, 0.040s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Library.Function_Algebras"
### 0.152s elapsed time, 0.624s cpu time, 0.040s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "Draft.Consensus_Misc"
### 0.170s elapsed time, 0.694s cpu time, 0.040s GC time
Loading theory "Draft.Three_Steps" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.Three_Steps"
### 0.049s elapsed time, 0.202s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.271s elapsed time, 1.070s cpu time, 0.066s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.406s elapsed time, 1.590s cpu time, 0.130s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  shift :: "'a list => 'a stream => 'a stream"
### theory "Draft.Refinement"
### 0.887s elapsed time, 3.484s cpu time, 0.293s GC time
Loading theory "Draft.Voting" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote" via "Draft.Same_Vote")
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.041s elapsed time, 3.932s cpu time, 0.807s GC time
Loading theory "Draft.HO_Transition_System" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs")
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.132s elapsed time, 4.297s cpu time, 0.827s GC time
Loading theory "Draft.New_Algorithm_Defs" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Voting"
### 0.591s elapsed time, 2.327s cpu time, 0.203s GC time
Loading theory "Draft.Same_Vote" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt" via "Draft.MRU_Vote")
### theory "Draft.HO_Transition_System"
### 0.253s elapsed time, 0.998s cpu time, 0.083s GC time
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Same_Vote"
### 0.149s elapsed time, 0.471s cpu time, 0.063s GC time
Loading theory "Draft.MRU_Vote" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU" via "Draft.MRU_Vote_Opt")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
### theory "Draft.MRU_Vote"
### 0.051s elapsed time, 0.157s cpu time, 0.000s GC time
Loading theory "Draft.MRU_Vote_Opt" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs" via "Draft.Three_Step_MRU")
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "size <*mlex*> {}"
### theory "Draft.MRU_Vote_Opt"
### 0.260s elapsed time, 0.792s cpu time, 0.065s GC time
Loading theory "Draft.Three_Step_MRU" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.New_Algorithm_Proofs")
### theory "HOL-Library.Tree"
### 2.059s elapsed time, 7.466s cpu time, 1.133s GC time
Loading theory "Draft.Templates" (required by "Draft.New_Algorithm_ProofsTemplates" via "Draft.ExtrEqs")
### Missing patterns in function definition:
### !!v. msg_to_val_stamp (PreVote v) = undefined
### !!v. msg_to_val_stamp (Vote v) = undefined
### msg_to_val_stamp Null = undefined
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.061s elapsed time, 0.181s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.New_Algorithm_ProofsTemplates")
Found termination order: "{}"
locale mono_quorum
  fixes Quorum :: "process set set"
  assumes "mono_quorum Quorum"
### theory "Draft.New_Algorithm_Defs"
### 0.813s elapsed time, 2.548s cpu time, 0.245s GC time
### theory "Draft.Three_Step_MRU"
### 0.389s elapsed time, 1.086s cpu time, 0.116s GC time
Loading theory "Draft.New_Algorithm_Proofs" (required by "Draft.New_Algorithm_ProofsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.580s elapsed time, 1.373s cpu time, 0.126s GC time
### theory "Draft.New_Algorithm_Proofs"
### 0.416s elapsed time, 0.827s cpu time, 0.058s GC time
Loading theory "Draft.New_Algorithm_ProofsTemplates"
val templateLemmas =
   [("New_Algorithm_Proofs.New_Algo_Refines_votes",
     "PO_refines new_algo_ref_rel majorities.ts_mru_TS
       (New_Algo_TS ?HOs ?HOs ?crds)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_hole 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1),
             template_var 0))
         )),
    ("New_Algorithm_Proofs.three_step_less_D",
     "0 < three_step ?r ==> three_step ?r = 1 | three_step ?r = 2",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("New_Algorithm_Proofs.step0_ref",
     "{new_algo_ref_rel} UN r. \<Union>
                                (range
                                  (majorities.opt_mru_step0
                                    r)), New_Algo_trans_step ?HOs ?HOs ?crds
    next0 send0 0 {> new_algo_ref_rel}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, t_empty),
                   template_hole 4))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 1),
                     template_var 0),
                   template_hole 2),
                 template_hole 1),
               template_hole 0)),
           template_hole 11)
         )),
    ("New_Algorithm_Proofs.mru_vote_evolution0",
     "ALL p. next0 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      pstate.mru_vote o ?s' = pstate.mru_vote o ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 3)))),
    ("New_Algorithm_Proofs.decide_evolution",
     "ALL p. next0 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      decide o ?s = decide o ?s'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 3),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("New_Algorithm_Proofs.decide_evolution",
     "ALL p. next1 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      decide o ?s = decide o ?s'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 3),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("New_Algorithm_Proofs.mru_vote_evolution2",
     "ALL p. next2 ?r p (?s p) (?msgs p) (?crd p) (?s' p) ==>
      pstate.mru_vote o ?s' = pstate.mru_vote o ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 3)))),
    ("New_Algorithm_Proofs.step2_ref",
     "{new_algo_ref_rel} UN r. \<Union>
                                (range
                                  (majorities.opt_mru_step2
                                    r)), New_Algo_trans_step ?HOs ?HOs ?crds
    next2 send2 2 {> new_algo_ref_rel}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 14, template_hole 13),
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, t_empty),
                   template_hole 6))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 1),
                     template_var 0),
                   template_hole 4),
                 template_hole 3),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))),
           template_hole 13)
         )),
    ("New_Algorithm_Proofs.step1_ref",
     "{new_algo_ref_rel} UN r S.
                            \<Union>
                             (range
                               (majorities.opt_mru_step1 r
                                 S)), New_Algo_trans_step ?HOs ?HOs ?crds
 next1 send1 (Suc 0) {> new_algo_ref_rel}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 14, template_hole 13),
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, t_empty),
                   template_hole 5))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 1),
                     template_var 0),
                   template_hole 3),
                 template_hole 2),
               template_app (template_hole 1, template_hole 0))),
           template_hole 13)
         )),
    ("New_Algorithm_Proofs.msgs_mru_vote",
     "?\<mu> ?p : get_msgs (send0 ?r) ?cfg (?HOs ?r) (?HOs ?r) ?p ==>
      msgs_to_lvs (?\<mu> ?p) |` ?HOs ?r ?p =
      (pstate.mru_vote o ?cfg) |` ?HOs ?r ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 4, template_var 3)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_var 2)),
                      template_var 1),
                    template_app (template_var 0, template_var 2)),
                  template_app (template_var 0, template_var 2)),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_var 4, template_var 3))),
           template_app
            (template_app (template_var 0, template_var 2),
             template_var 3)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_var 0, template_var 2),
             template_var 3))))),
    ("New_Algorithm_Proofs.New_Algo_termination",
     "[| HORun New_Algo_Alg ?rho ?HOs;
         ALL r. HOcommPerRd New_Algo_M (?HOs r);
         HOcommGlobal New_Algo_M ?HOs |]
      ==> EX r v. decide (?rho r ?p) = Some v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 6),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("New_Algorithm_Proofs.New_Algo_trans",
     "CSHO_trans_alt NA_sendMsg NA_nextState ?HOs ?SHOs (K o ?crds) =
      New_Algo_trans_step ?HOs ?SHOs ?crds next0 send0 0 Un
      New_Algo_trans_step ?HOs ?SHOs ?crds next1 send1 1 Un
      New_Algo_trans_step ?HOs ?SHOs ?crds next2 send2 2",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 17, template_hole 16),
               template_hole 15),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 14, template_hole 13),
           template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 11, template_var 2),
                         template_var 1),
                       template_var 0),
                     template_hole 10),
                   template_hole 9),
                 template_hole 8)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 11, template_var 2),
                       template_var 1),
                     template_var 0),
                   template_hole 7),
                 template_hole 6),
               template_hole 5))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 11, template_var 2),
                   template_var 1),
                 template_var 0),
               template_hole 4),
             template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))))))]:
   (string * thm * template) list
### theory "Draft.New_Algorithm_ProofsTemplates"
### 0.405s elapsed time, 0.537s cpu time, 0.047s GC time
val it = (): unit
