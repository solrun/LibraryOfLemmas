Loading theory "Draft.Consensus_Misc" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs" via "Draft.Voting_Opt" via "Draft.Voting")
Loading theory "Draft.Consensus_Types" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs" via "Draft.Voting_Opt" via "Draft.Voting" via "Draft.Quorums")
Loading theory "Draft.Infra" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs" via "Draft.HO_Transition_System" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "Draft.Consensus_Types"
### 0.029s elapsed time, 0.140s cpu time, 0.000s GC time
Loading theory "Draft.Quorums" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs" via "Draft.Voting_Opt" via "Draft.Voting")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
locale quorum
  fixes Quorum :: "'a set set"
  assumes "quorum Quorum"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.069s elapsed time, 0.313s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs" via "Draft.HO_Transition_System")
locale mono_quorum
  fixes Quorum :: "process set set"
  assumes "mono_quorum Quorum"
### theory "Draft.Quorums"
### 0.063s elapsed time, 0.259s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.557s cpu time, 0.053s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "Draft.Consensus_Misc"
### 0.179s elapsed time, 0.729s cpu time, 0.053s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.865s cpu time, 0.091s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.309s elapsed time, 1.220s cpu time, 0.091s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.Refinement"
### 1.149s elapsed time, 4.361s cpu time, 0.951s GC time
Loading theory "Draft.Voting" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs" via "Draft.Voting_Opt")
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.978s elapsed time, 3.702s cpu time, 0.806s GC time
Loading theory "Draft.HO_Transition_System" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs")
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.089s elapsed time, 4.133s cpu time, 0.878s GC time
Loading theory "Draft.OneThirdRule_Defs" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs")
Found termination order: "size <*mlex*> {}"
### theory "Draft.HO_Transition_System"
### 0.269s elapsed time, 1.055s cpu time, 0.147s GC time
Found termination order: "size <*mlex*> {}"
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Voting"
### 0.562s elapsed time, 2.054s cpu time, 0.147s GC time
Loading theory "Draft.Voting_Opt" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.OneThirdRule_Proofs")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.OneThirdRule_Defs"
### 0.416s elapsed time, 1.358s cpu time, 0.141s GC time
locale quorum_process
  fixes Quorum :: "process set set"
  assumes "quorum_process Quorum"
### theory "Draft.Voting_Opt"
### 0.245s elapsed time, 0.675s cpu time, 0.121s GC time
Loading theory "Draft.OneThirdRule_Proofs" (required by "Draft.OneThirdRule_ProofsTemplates")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.066s elapsed time, 7.132s cpu time, 1.166s GC time
Loading theory "Draft.Templates" (required by "Draft.OneThirdRule_ProofsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.195s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OneThirdRule_ProofsTemplates")
### theory "Draft.OneThirdRule_Proofs"
### 0.458s elapsed time, 0.980s cpu time, 0.049s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.500s elapsed time, 0.730s cpu time, 0.062s GC time
Loading theory "Draft.OneThirdRule_ProofsTemplates"
val templateLemmas =
   [("OneThirdRule_Proofs.OTR_Refines_LV_VOting",
     "PO_refines otr_ref_rel OneThirdRule_Proofs.majorities.flv_TS
       (OTR_TS ?HOs ?HOs ?crds)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_hole 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1),
             template_var 0))
         )),
    ("OneThirdRule_Proofs.card_Compl", "card (- ?S) = card UNIV - card ?S",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app (template_hole 3, template_hole 0)),
         template_app (template_hole 3, template_var 0)))),
    ("OneThirdRule_Proofs.m_mult_div_Suc_m",
     "0 < ?n ==> ?m * ?n div Suc ?m < ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("OneThirdRule_Proofs.card_Un_le",
     "[| finite ?A; finite ?B |] ==> card (?A Un ?B) <= card ?A + card ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("OneThirdRule_Proofs.qintersect_card",
     "[| ?Q : OneThirdRule_Proofs.majs; ?Q' : OneThirdRule_Proofs.majs |]
      ==> card (?Q Int - ?Q') < card (?Q Int ?Q')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("OneThirdRule_Proofs.MFR_in_msgs",
     "[| dom ?msgs ~= {}; MFR ?msgs ?v |]
      ==> EX q:dom ?msgs. ?v = the (?msgs q)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 1)),
             t_empty)
           ))),
    ("OneThirdRule_Proofs.step_ref",
     "{otr_ref_rel} UN r v_f.
                       \<Union>
                        (range
                          (OneThirdRule_Proofs.majorities.flv_round r
                            v_f)), OTR_trans_step ?HOs {> otr_ref_rel}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, t_empty),
                   template_hole 1))),
             template_app (template_hole 0, template_var 0)),
           template_hole 8)
         )),
    ("OneThirdRule_Proofs.decide_origin",
     "[| ?\<mu> ?p : get_msgs (OTR_sendMsg ?r) ?sc (?HOs ?r) (?HOs ?r) ?p;
         OTR_nextState ?r ?p (?sc ?p) (?\<mu> ?p) (?sc' ?p);
         decision (?sc' ?p) ~= decision (?sc ?p) |]
      ==> EX v. decision (?sc' ?p) = Some v &
                {q. pstate.last_vote (?sc q) = v}
                : OneThirdRule_Proofs.majs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_var 5, template_var 4)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 13,
                        template_app (template_hole 12, template_var 3)),
                      template_var 2),
                    template_app (template_var 1, template_var 3)),
                  template_app (template_var 1, template_var 3)),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 4),
                  template_app (template_var 2, template_var 4)),
                template_app (template_var 5, template_var 4)),
              template_app (template_var 0, template_var 4))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 8,
                template_app (template_var 0, template_var 4)),
              template_app
               (template_hole 8,
                template_app (template_var 2, template_var 4)))
            )],
       template_predicate (template_app (template_hole 7, t_empty))))]:
   (string * thm * template) list
### theory "Draft.OneThirdRule_ProofsTemplates"
### 0.351s elapsed time, 0.455s cpu time, 0.000s GC time
val it = (): unit
