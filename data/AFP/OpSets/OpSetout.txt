Loading theory "Draft.OpSet" (required by "Draft.OpSetMoreTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
locale opset
  fixes opset :: "('oid * 'oper) set"
    and deps :: "'oper => 'oid set"
  assumes "opset opset deps"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.608s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "crdt_ops"
### theory "HOL-Library.Set_Algebras"
### 0.202s elapsed time, 0.816s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs")
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.320s elapsed time, 1.268s cpu time, 0.138s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.OpSet"
### 0.327s elapsed time, 1.289s cpu time, 0.138s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.747s elapsed time, 2.392s cpu time, 0.339s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.955s elapsed time, 2.799s cpu time, 0.792s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.854s elapsed time, 4.283s cpu time, 0.975s GC time
Loading theory "Draft.Templates" (required by "Draft.OpSetMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.050s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OpSetMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.476s elapsed time, 0.532s cpu time, 0.071s GC time
Loading theory "Draft.OpSetMoreTemplates"
val templateLemmas =
   [("OpSet.spec_ops_empty", "spec_ops [] ?deps",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("OpSet.crdt_ops_distinct", "crdt_ops ?xs ?deps ==> distinct ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("OpSet.spec_ops_distinct", "spec_ops ?ops ?deps ==> distinct ?ops",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("OpSet.crdt_ops_distinct_fst",
     "crdt_ops ?xs ?deps ==> distinct (map fst ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("OpSet.spec_ops_is_opset",
     "spec_ops ?op_list ?deps ==> opset (set ?op_list) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("OpSet.spec_ops_distinct_fst",
     "spec_ops ?ops ?deps ==> distinct (map fst ?ops)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("OpSet.spec_ops_sorted",
     "spec_ops ?ops ?deps ==> sorted (map fst ?ops)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("OpSet.spec_ops_remove1",
     "spec_ops ?xs ?deps ==> spec_ops (remove1 ?x ?xs) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("OpSet.distinct_append_swap",
     "distinct (?xs @ ?ys) ==> distinct (?ys @ ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("OpSet.opset_insert",
     "opset (insert ?x ?ops) ?deps ==> opset ?ops ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("OpSet.spec_ops_rem_cons",
     "spec_ops (?x # ?xs) ?deps ==> spec_ops ?xs ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("OpSet.distinct_map_fst_remove1",
     "distinct (map fst ?xs) ==> distinct (map fst (remove1 ?x ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("OpSet.crdt_ops_rem_last",
     "crdt_ops (?xs @ [?x]) ?deps ==> crdt_ops ?xs ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 0))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("OpSet.spec_ops_rem_last",
     "spec_ops (?xs @ [?x]) ?deps ==> spec_ops ?xs ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 0))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("OpSet.opset_subset",
     "[| opset ?Y ?deps; ?X <= ?Y |] ==> opset ?X ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("OpSet.append_subset",
     "set ?xs = set (?ys @ ?zs) ==> set ?ys <= set ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app (template_hole 2, template_var 2)))),
    ("OpSet.append_subset",
     "set ?xs = set (?ys @ ?zs) ==> set ?zs <= set ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app (template_hole 2, template_var 2)))),
    ("OpSet.distinct_rem_mid",
     "distinct (?xs @ [?x] @ ?ys) ==> distinct (?xs @ ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_hole 0)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("OpSet.spec_ops_exists",
     "opset ?ops ?deps ==>
      EX op_list. set op_list = ?ops & spec_ops op_list ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OpSet.crdt_ops_spec_ops_exist",
     "crdt_ops ?xs ?deps ==> EX ys. set ?xs = set ys & spec_ops ys ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OpSet.opset_sublist",
     "opset (set (?xs @ ?ys @ ?zs)) ?deps ==>
      opset (set (?xs @ ?zs)) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_var 0)
           ))),
    ("OpSet.crdt_ops_unique_last",
     "crdt_ops (?xs @ [(?oid, ?oper)]) ?deps ==> ?oid ~: set (map fst ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 2),
                        template_var 1)),
                    template_hole 5))),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 3)))
               )
           ))),
    ("OpSet.crdt_ops_ref_less_last",
     "[| crdt_ops (?xs @ [(?oid, ?oper)]) ?deps; ?r : ?deps ?oper |]
      ==> ?r < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2)),
                    template_hole 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_var 1, template_var 2))
            )],
       template_inequation (less_than, template_var 0, template_var 3))),
    ("OpSet.spec_ops_ref_less_last",
     "[| spec_ops (?xs @ [(?oid, ?oper)]) ?deps; ?r : ?deps ?oper |]
      ==> ?r < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2)),
                    template_hole 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_var 1, template_var 2))
            )],
       template_inequation (less_than, template_var 0, template_var 3))),
    ("OpSet.distinct_set_remove_last",
     "distinct (?xs @ [?x]) ==> set ?xs = set (?xs @ [?x]) - {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            )],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5)))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("OpSet.spec_ops_id_inc",
     "[| spec_ops (?xs @ [(?oid, ?oper)]) ?deps; ?x : set (map fst ?xs) |]
      ==> ?x < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 3),
                        template_var 2)),
                    template_hole 5))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 4)))
            )],
       template_inequation (less_than, template_var 0, template_var 3))),
    ("OpSet.crdt_ops_ref_less",
     "[| crdt_ops ?xs ?deps; (?oid, ?oper) : set ?xs; ?r : ?deps ?oper |]
      ==> ?r < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_var 3, template_var 1))
            )],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("OpSet.spec_ops_ref_less",
     "[| spec_ops ?xs ?deps; (?oid, ?oper) : set ?xs; ?r : ?deps ?oper |]
      ==> ?r < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_var 3, template_var 1))
            )],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("OpSet.distinct_fst_append",
     "[| ?x : set (map fst ?xs); distinct (map fst (?xs @ ?ys)) |]
      ==> ?x ~: set (map fst ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0)))
               )
           ))),
    ("OpSet.crdt_ops_ref_exists",
     "[| crdt_ops (?pre @ (?oid, ?oper) # ?suf) ?deps; ?ref : ?deps ?oper |]
      ==> ?ref : fst ` set ?pre",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_var 3)),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_var 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 5)))
           ))),
    ("OpSet.spec_ops_oid_unique",
     "[| spec_ops ?op_list ?deps; (?oid, ?op1.0) : set ?op_list;
         (?oid, ?op2.0) : set ?op_list |]
      ==> ?op1.0 = ?op2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_var 4))
            )],
       template_equation (template_var 1, template_var 0))),
    ("OpSet.crdt_ops_no_future_ref",
     "[| crdt_ops (?xs @ [(?oid, ?oper)] @ ?ys) ?deps; ?ref : ?deps ?oper |]
      ==> ?ref ~: fst ` set ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 6, template_var 4),
                            template_var 3)),
                        template_hole 5)),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_var 1, template_var 3))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 2)))
               )
           ))),
    ("OpSet.distinct_set_remove_mid",
     "distinct (?xs @ [?x] @ ?ys) ==>
      set (?xs @ ?ys) = set (?xs @ [?x] @ ?ys) - {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_hole 5)),
                   template_var 0)))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("OpSet.crdt_ops_unique_mid",
     "crdt_ops (?xs @ [(?oid, ?oper)] @ ?ys) ?deps ==>
      ?oid ~: set (map fst ?xs) & ?oid ~: set (map fst ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_app (template_hole 7, template_var 3),
                            template_var 2)),
                        template_hole 6)),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 4))))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1)))))
           ))),
    ("OpSet.distinct_list_split",
     "[| distinct ?xs; ?xs = ?xa @ ?x # ?ya; ?xs = ?xb @ ?x # ?yb |]
      ==> ?xa = ?xb & ?ya = ?yb",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 5)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 2, template_var 4),
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2))),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("OpSet.spec_ops_add_last",
     "[| spec_ops ?xs ?deps; ALL i:set (map fst ?xs). i < ?oid;
         ALL ref:?deps ?oper. ref < ?oid |]
      ==> spec_ops (?xs @ [(?oid, ?oper)]) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 3))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_var 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_hole 0))),
             template_var 2)
           ))),
    ("OpSet.crdt_ops_rem_penultimate",
     "[| crdt_ops (?xs @ [(?i1.0, ?r1.0)] @ [(?i2.0, ?r2.0)]) ?deps;
         !!r. r : ?deps ?r2.0 ==> r ~= ?i1.0 |]
      ==> crdt_ops (?xs @ [(?i2.0, ?r2.0)]) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app (template_hole 5, template_var 4),
                            template_var 3)),
                        template_hole 4)),
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 5, template_var 2),
                          template_var 1)),
                      template_hole 4)))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 5),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 1)),
                   template_hole 4))),
             template_var 0)
           ))),
    ("OpSet.crdt_ops_rem_middle",
     "[| crdt_ops (?xs @ [(?oid, ?ref)] @ ?ys) ?deps;
         !!op2 r. [| op2 : snd ` set ?ys; r : ?deps op2 |] ==> r ~= ?oid |]
      ==> crdt_ops (?xs @ ?ys) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app
                           (template_app (template_hole 10, template_var 3),
                            template_var 2)),
                        template_hole 9)),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("OpSet.crdt_ops_rem_spec",
     "[| spec_ops (?xs @ [?x]) ?deps; crdt_ops (?ys @ [?x] @ ?zs) ?deps;
         set (?xs @ [?x]) = set (?ys @ [?x] @ ?zs) |]
      ==> crdt_ops (?ys @ ?zs) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_hole 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_hole 3)),
                    template_var 0))),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_hole 3))),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_hole 3)),
                template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OpSet.append_set_rem_last",
     "[| set (?xs @ [?x]) = set (?ys @ [?x] @ ?zs); distinct (?xs @ [?x]);
         distinct (?ys @ [?x] @ ?zs) |]
      ==> set ?xs = set (?ys @ ?zs)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1))),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_hole 1)),
                template_var 0)))),
        template_predicate
         (
            template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1)))
            ),
        template_predicate
         (
            template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_hole 1)),
                  template_var 0)))
            )],
       template_equation
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("OpSet.spec_ops_split",
     "[| spec_ops ?xs ?deps; ?oid ~: set (map fst ?xs) |]
      ==> EX pre suf.
             ?xs = pre @ suf &
             (ALL i:set (map fst pre). i < ?oid) &
             (ALL i:set (map fst suf). ?oid < i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 2)))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("OpSet.crdt_ops_intro",
     "[| !!r. r : ?deps ?oper ==> r : fst ` set ?xs & r < ?oid;
         ?oid ~: fst ` set ?xs; crdt_ops ?xs ?deps |]
      ==> crdt_ops (?xs @ [(?oid, ?oper)]) ?deps",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 2)),
                   template_hole 0))),
             template_var 3)
           ))),
    ("OpSet.crdt_ops_reorder_spec",
     "[| spec_ops (?xs @ [?x]) ?deps; crdt_ops (?ys @ [?x] @ ?zs) ?deps;
         set (?xs @ [?x]) = set (?ys @ [?x] @ ?zs) |]
      ==> crdt_ops (?ys @ ?zs @ [?x]) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_hole 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_hole 3)),
                    template_var 0))),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_hole 3))),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_hole 3)),
                template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_hole 3)))),
             template_var 2)
           ))),
    ("OpSet.crdt_ops_reorder",
     "[| crdt_ops (?xs @ [(?oid, ?oper)] @ ?ys) ?deps;
         !!op2 r. [| op2 : snd ` set ?ys; r : ?deps op2 |] ==> r ~= ?oid |]
      ==> crdt_ops (?xs @ ?ys @ [(?oid, ?oper)]) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app
                           (template_app (template_hole 10, template_var 3),
                            template_var 2)),
                        template_hole 9)),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 4),
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_var 3),
                         template_var 2)),
                     template_hole 9)))),
             template_var 0)
           ))),
    ("OpSet.spec_ops_add_any",
     "[| spec_ops (?xs @ ?ys) ?deps; ALL i:set (map fst ?xs). i < ?oid;
         ALL i:set (map fst ?ys). ?oid < i;
         ALL ref:?deps ?oper. ref < ?oid |]
      ==> spec_ops (?xs @ [(?oid, ?oper)] @ ?ys) ?deps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 4))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 3))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0)),
                       template_hole 0)),
                   template_var 3))),
             template_var 2)
           ))),
    ("OpSet.crdt_ops_last",
     "[| crdt_ops (?xs @ [?x]) ?deps;
         !!oid oper.
            [| ?x = (oid, oper); crdt_ops ?xs ?deps; oid ~: fst ` set ?xs;
               ALL ref:?deps oper. ref : fst ` set ?xs & ref < oid |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_hole 12))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("OpSet.spec_ops_exists_base",
     "[| finite ?ops;
         !!oid op1 op2.
            [| (oid, op1) : ?ops; (oid, op2) : ?ops |] ==> op1 = op2;
         !!oid oper ref.
            [| (oid, oper) : ?ops; ref : ?deps oper |] ==> ref < oid |]
      ==> EX op_list. set op_list = ?ops & spec_ops op_list ?deps",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("OpSet.crdt_ops_independent_suf",
     "[| spec_ops (?xs @ [(?oid, ?oper)]) ?deps;
         crdt_ops (?ys @ [(?oid, ?oper)] @ ?zs) ?deps;
         set (?xs @ [(?oid, ?oper)]) = set (?ys @ [(?oid, ?oper)] @ ?zs);
         ?op2.0 : snd ` set ?zs; ?r : ?deps ?op2.0 |]
      ==> ?r ~= ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 7),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 6),
                        template_var 5)),
                    template_hole 9))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app
                           (template_app (template_hole 10, template_var 6),
                            template_var 5)),
                        template_hole 9)),
                    template_var 2))),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 12, template_var 7),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 5)),
                template_hole 9))),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 6),
                        template_var 5)),
                    template_hole 9)),
                template_var 2)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app (template_hole 6, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_var 4, template_var 1))
            )],
       template_negation
        (template_equation (template_var 0, template_var 6))))]:
   (string * thm * template) list
### theory "Draft.OpSetMoreTemplates"
### 0.274s elapsed time, 0.372s cpu time, 0.000s GC time
val it = (): unit
