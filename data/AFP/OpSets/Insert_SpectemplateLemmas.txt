   [("Insert_Spec.succ_rel_set_fst", "fst ` succ_rel ?xs = set ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Insert_Spec.interp_ins_distinct",
     "insert_ops ?op_list ==> distinct (interp_ins ?op_list)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Insert_Spec.interp_ins_subset",
     "set (interp_ins ?op_list) <= set (map fst ?op_list)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Insert_Spec.insert_ops_remove1",
     "insert_ops ?xs ==> insert_ops (remove1 ?x ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Insert_Spec.insert_ops_rem_prefix",
     "insert_ops (?pre @ ?suf) ==> insert_ops ?suf",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Insert_Spec.insert_ops_appendD",
     "insert_ops (?xs @ ?ys) ==> insert_ops ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Insert_Spec.insert_ops_rem_cons",
     "insert_ops (?x # ?xs) ==> insert_ops ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Insert_Spec.distinct_fst", "distinct (map fst ?A) ==> distinct ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Insert_Spec.insert_ops_rem_last",
     "insert_ops (?xs @ [?x]) ==> insert_ops ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_hole 0)))
            )],
       template_predicate
        (template_app (template_hole 3, template_var 1)))),
    ("Insert_Spec.interp_ins_tail_unfold",
     "interp_ins (?xs @ [?x]) = insert_spec (interp_ins ?xs) ?x",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 4, template_var 1)),
         template_var 0))),
    ("Insert_Spec.list_order_memb1",
     "list_order ?ops ?x ?y ==> ?x : set (interp_ins ?ops)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Insert_Spec.list_order_memb2",
     "list_order ?ops ?x ?y ==> ?y : set (interp_ins ?ops)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Insert_Spec.insert_spec_none",
     "set (insert_spec ?xs (?oid, None)) = set ?xs Un {?oid}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 6, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Insert_Spec.insert_spec_nonex",
     "?ref ~: set ?xs ==> insert_spec ?xs (?oid, Some ?ref) = ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))),
         template_var 1))),
    ("Insert_Spec.insert_ops_ref_older",
     "insert_ops (?pre @ [(?oid, Some ?ref)] @ ?suf) ==> ?ref < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_app (template_hole 2, template_var 1))),
                      template_hole 1)),
                  template_var 0)))
            )],
       template_inequation (less_than, template_var 1, template_var 2))),
    ("Insert_Spec.insert_ops_memb_ref_older",
     "[| insert_ops ?op_list; (?oid, Some ?ref) : set ?op_list |]
      ==> ?ref < ?oid",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))),
              template_app (template_hole 1, template_var 2))
            )],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Insert_Spec.succ_rel_insert_Some",
     "distinct ?list ==>
      succ_rel (insert_spec ?list (?oid, Some ?ref)) =
      insert_alt (succ_rel ?list) (?oid, ?ref)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Insert_Spec.insert_spec_set",
     "?ref : set ?xs ==>
      set (insert_spec ?xs (?oid, Some ?ref)) = set ?xs Un {?oid}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 2)))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Insert_Spec.inserted_item_ident",
     "[| ?a : set (insert_spec ?xs (?e, ?i)); ?a ~: set ?xs |] ==> ?a = ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app (template_hole 4, template_var 2))
                )
            )],
       template_equation (template_var 3, template_var 1))),
    ("Insert_Spec.list_greater_non_memb",
     "[| !!x. x : set ?xs ==> x < ?oid; ?oid : set ?xs |] ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate (template_hole 0))),
    ("Insert_Spec.list_order_trans",
     "[| insert_ops ?op_list; list_order ?op_list ?x ?y;
         list_order ?op_list ?y ?z |]
      ==> list_order ?op_list ?x ?z",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Insert_Spec.subset_distinct_le",
     "[| set ?A <= set ?B; distinct ?A; distinct ?B |]
      ==> length ?A <= length ?B",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Insert_Spec.last_op_greatest",
     "[| insert_ops (?op_list @ [(?oid, ?oper)]);
         ?x : set (map fst ?op_list) |]
      ==> ?x < ?oid",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 2),
                      template_var 1)),
                  template_hole 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 3)))
            )],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("Insert_Spec.list_orderI",
     "interp_ins ?ops = ?xs @ [?x] @ ?ys @ [?y] @ ?zs ==>
      list_order ?ops ?x ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 5),
          template_app
           (template_app (template_hole 3, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_hole 1)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_hole 1)),
                  template_var 0)))))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3),
             template_var 1)
           ))),
    ("Insert_Spec.succ_rel_functional",
     "[| (?a, ?b1.0) : succ_rel ?xs; (?a, ?b2.0) : succ_rel ?xs;
         distinct ?xs |]
      ==> ?b1.0 = ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0)),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("Insert_Spec.succ_rel_insert_head",
     "distinct (?ref # ?list) ==>
      succ_rel (insert_spec (?ref # ?list) (?oid, Some ?ref)) =
      insert_alt (succ_rel (?ref # ?list)) (?oid, ?ref)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Insert_Spec.app_length_lt_exists",
     "[| ?xsa @ ?zsa = ?xs @ ?ys; length ?xsa <= length ?xs |]
      ==> ?xsa @ drop (length ?xsa) ?xs = ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 3)),
             template_var 1)),
         template_var 1))),
    ("Insert_Spec.list_order_monotonic",
     "[| insert_ops ?A; insert_ops ?B; set ?A <= set ?B;
         list_order ?A ?x ?y |]
      ==> list_order ?B ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Insert_Spec.succ_rel_rem_head",
     "distinct (?x # ?xs) ==>
      {(p, n). (p, n) : succ_rel (?x # ?xs) & p ~= ?x} = succ_rel ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app (template_hole 2, template_var 0)))),
    ("Insert_Spec.insert_after_ref",
     "distinct (?xs @ ?ref # ?ys) ==>
      insert_spec (?xs @ ?ref # ?ys) (?oid, Some ?ref) =
      ?xs @ ?ref # ?oid # ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)))))),
    ("Insert_Spec.set_subset_length_eq",
     "[| set ?A <= set ?B; length ?B <= length ?A; distinct ?A;
         distinct ?B |]
      ==> set ?A = set ?B",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("Insert_Spec.list_orderE",
     "list_order ?ops ?x ?y ==>
      EX xs ys zs. interp_ins ?ops = xs @ [?x] @ ys @ [?y] @ zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Insert_Spec.succ_rel_swap_head",
     "[| distinct (?ref # ?list); (?ref, ?n) : succ_rel (?ref # ?list) |]
      ==> succ_rel (?oid # ?list) = {(?oid, ?n)} Un succ_rel ?list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1)),
               template_hole 0)),
           template_app (template_hole 4, template_var 2))))),
    ("Insert_Spec.insert_first_part",
     "?ref = None | ?ref = Some ?r & ?r : set ?xs ==>
      insert_spec (?xs @ ?ys) (?oid, ?ref) =
      insert_spec ?xs (?oid, ?ref) @ ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_app (template_hole 6, template_var 3))),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app (template_hole 4, template_var 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4))),
           template_var 1)))),
    ("Insert_Spec.insert_spec_distinct",
     "[| distinct ?xs; !!x. x : set ?xs ==> x < ?oid;
         ?ref = Some ?r --> ?r < ?oid |]
      ==> distinct (insert_spec ?xs (?oid, ?ref))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Insert_Spec.insert_second_part",
     "[| ?ref = Some ?r; ?r ~: set ?xs; ?r : set ?ys |]
      ==> insert_spec (?xs @ ?ys) (?oid, ?ref) =
          ?xs @ insert_spec ?ys (?oid, ?ref)",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 7, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app (template_hole 4, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4)))))),
    ("Insert_Spec.insert_somewhere",
     "?ref = None | ?ref = Some ?r & ?r : set ?list ==>
      EX xs ys.
         ?list = xs @ ys & insert_spec ?list (?oid, ?ref) = xs @ ?oid # ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_app (template_hole 8, template_var 2))),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 6, template_var 1))))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Insert_Spec.length_diff_Suc_exists",
     "[| length ?xs - length ?ys = Suc ?m; set ?ys <= set ?xs; distinct ?ys;
         distinct ?xs |]
      ==> EX e. e : set ?xs & e ~: set ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 8, template_var 1)),
          template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Insert_Spec.insert_alt_equivalent",
     "[| insert_ops ?ops; ?head ~: fst ` set ?ops;
         !!r. Some r : snd ` set ?ops ==> r ~= ?head |]
      ==> succ_rel (?head # interp_ins ?ops) = interp_alt ?head ?ops",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 0),
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_app (template_hole 11, template_var 1)))
                )
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Insert_Spec.succ_rel_insert_alt",
     "[| ?a ~= ?ref; distinct (?oid # ?a # ?b # ?list) |]
      ==> insert_alt (succ_rel (?a # ?b # ?list)) (?oid, ?ref) =
          {(?a, Some ?b)} Un
          insert_alt (succ_rel (?b # ?list)) (?oid, ?ref)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 9, template_var 4),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0)))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_app (template_hole 1, template_var 1))),
               template_hole 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 3)))))),
    ("Insert_Spec.insert_preserves_order",
     "[| insert_ops ?ops; insert_ops ?rest; ?rest = ?before @ ?after;
         ?ops = ?before @ (?oid, ?ref) # ?after |]
      ==> EX xs ys zs.
             interp_ins ?rest = xs @ zs & interp_ins ?ops = xs @ ys @ zs",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate (template_app (template_hole 9, template_var 4)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_var 2)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 2)))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Insert_Spec.succ_rel_insert_later",
     "[| succ_rel (insert_spec (?b # ?list) (?oid, Some ?ref)) =
         insert_alt (succ_rel (?b # ?list)) (?oid, ?ref);
         ?a ~= ?ref; distinct (?a # ?b # ?list) |]
      ==> succ_rel (insert_spec (?a # ?b # ?list) (?oid, Some ?ref)) =
          insert_alt (succ_rel (?a # ?b # ?list)) (?oid, ?ref)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)))),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3))),
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1))),
        template_negation
         (template_equation (template_var 0, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 3))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app (template_hole 5, template_var 1)))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 3)))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)))))]
