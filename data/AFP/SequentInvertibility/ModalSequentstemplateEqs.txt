   [("ModalSequents.modaliseEmpty", "?a \<cdot> (\<Empt>) = \<Empt>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("ModalSequents.extendRuleEmpty",
     "extendRule ( \<Empt> \<Rightarrow>* \<Empt>) ?r = ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("ModalSequents.extendEmpty",
     "extend ( \<Empt> \<Rightarrow>* \<Empt>) ?C = ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("ModalSequents.disjoint_Ax_mod1", "Ax Int p_e modRules2 ?M ?N = {}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("ModalSequents.disjoint_up_mod1",
     "upRules Int p_e modRules2 ?M ?N = {}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("ModalSequents.mapExtendEmpty",
     "map (extend ( \<Empt> \<Rightarrow>* \<Empt>)) ?ps = ?ps",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 0))),
         template_var 0),
       template_var 0)),
    ("ModalSequents.extend1_to_2",
     "extendRule2 ?S ?S ?r = extendRule ?S ?r",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("ModalSequents.mset_extend",
     "ModalSequents.mset (extend ?S ?c) =
      ModalSequents.mset ?S + ModalSequents.mset ?c",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ModalSequents.extendCommute",
     "extend ?S (extend ?R ?c) = extend ?R (extend ?S ?c)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("ModalSequents.extendAssoc",
     "extend ?S (extend ?R ?c) = extend (extend ?S ?R) ?c",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("ModalSequents.derivablep_derivable_eq",
     "derivablep (%x. x : ?R) = (%x xa. (x, xa) : derivable ?R)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("ModalSequents.mapAssoc",
     "map (extend ?S) (map (extend ?R) ?c) =
      map (extend (extend ?S ?R)) ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0))),
    ("ModalSequents.mapCommute",
     "map (extend ?S) (map (extend ?R) ?c) =
      map (extend ?R) (map (extend ?S) ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("ModalSequents.p_ep_p_e_eq",
     "p_ep (%x xa. (x, xa) : ?R) ?M ?N = (%x. x : p_e ?R ?M ?N)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       t_empty)),
    ("ModalSequents.extp_ext_eq",
     "extp (%x. x : ?R) (%x xa. (x, xa) : ?R') ?M ?N =
      (%x. x : ext ?R ?R' ?M ?N)",
     template_equation
      (template_app
        (template_app
          (template_app (template_app (template_hole 3, t_empty), t_empty),
           template_var 1),
         template_var 0),
       t_empty))]
