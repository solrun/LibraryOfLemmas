   [("Word.bv_int_bv", "bv_to_int (int_to_bv ?i) = ?i",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Word.bv_nat_bv", "bv_to_nat (nat_to_bv ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Word.bitand_cancel", "(?b \<and>\<^sub>b ?b) = ?b",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Word.bitnot_bitnot", "(\<not>\<^sub>b \<not>\<^sub>b ?b) = ?b",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Word.bitor_cancel", "(?b \<or>\<^sub>b ?b) = ?b",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Word.bitxor_cancel", "(?b \<oplus>\<^sub>b ?b) = \<zero>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Word.bv_not_bv_not", "bv_not (bv_not ?w) = ?w",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Word.bv_to_int_type", "bv_to_int (norm_signed ?w) = bv_to_int ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.length_bv_not", "length (bv_not ?w) = length ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.length_int", "length (int_to_bv ?i) = length_int ?i",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.length_nat", "length (nat_to_bv ?n) = length_nat ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.bv_to_nat_type", "bv_to_nat (norm_unsigned ?w) = bv_to_nat ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.bv_msb_norm", "bv_msb (norm_signed ?w) = bv_msb ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.bv_msb_Cons", "bv_msb (?b # ?bs) = ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Word.bv_uminus_type", "bv_uminus (norm_signed ?w) = bv_uminus ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.int_bv_int", "int_to_bv (bv_to_int ?w) = norm_signed ?w",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.nat_bv_nat", "nat_to_bv (bv_to_nat ?w) = norm_unsigned ?w",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.bv_uminus_returntype",
     "norm_signed (bv_uminus ?w) = bv_uminus ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.int_to_bv_returntype",
     "norm_signed (int_to_bv ?w) = int_to_bv ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.norm_signed_idem",
     "norm_signed (norm_signed ?w) = norm_signed ?w",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.utos_returntype", "norm_signed (utos ?w) = utos ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.norm_unsigned_nat_to_bv",
     "norm_unsigned (nat_to_bv ?n) = nat_to_bv ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.norm_unsigned_idem",
     "norm_unsigned (norm_unsigned ?w) = norm_unsigned ?w",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Word.utos_type", "utos (norm_unsigned ?w) = utos ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.bv_mapzip_Nil", "bv_mapzip ?f [] [] = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0),
       template_hole 0)),
    ("Word.norm_signed_length", "length (norm_signed ?w) <= length ?w",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.norm_unsigned_length", "length (norm_unsigned ?w) <= length ?w",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.bv_to_int_utos", "bv_to_int (utos ?w) = int (bv_to_nat ?w)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Word.bv_to_nat0", "bv_to_nat (\<zero> # ?bs) = bv_to_nat ?bs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Word.bv_smult_sym", "bv_smult ?w1.0 ?w2.0 = bv_smult ?w2.0 ?w1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Word.norm_unsigned_Cons0",
     "norm_unsigned (\<zero> # ?bs) = norm_unsigned ?bs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Word.bv_uminus_length", "length (bv_uminus ?w) <= Suc (length ?w)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Word.utos_length", "length (utos ?w) <= Suc (length ?w)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Word.rem_initial_length", "length (rem_initial ?b ?w) <= length ?w",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Word.bv_to_int_Cons0",
     "bv_to_int (\<zero> # ?bs) = int (bv_to_nat ?bs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Word.bv_to_nat_extend",
     "bv_to_nat (bv_extend ?n \<zero> ?w) = bv_to_nat ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Word.bv_add_type2",
     "bv_add ?w1.0 (norm_unsigned ?w2.0) = bv_add ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_add_type1",
     "bv_add (norm_unsigned ?w1.0) ?w2.0 = bv_add ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_mult_type2",
     "bv_mult ?w1.0 (norm_unsigned ?w2.0) = bv_mult ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_mult_type1",
     "bv_mult (norm_unsigned ?w1.0) ?w2.0 = bv_mult ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_sadd_type2",
     "bv_sadd ?w1.0 (norm_signed ?w2.0) = bv_sadd ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_sadd_type1",
     "bv_sadd (norm_signed ?w1.0) ?w2.0 = bv_sadd ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_smult_type2",
     "bv_smult ?w1.0 (norm_signed ?w2.0) = bv_smult ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_smult_type1",
     "bv_smult (norm_signed ?w1.0) ?w2.0 = bv_smult ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_sub_type2",
     "bv_sub ?w1.0 (norm_signed ?w2.0) = bv_sub ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_sub_type1",
     "bv_sub (norm_signed ?w1.0) ?w2.0 = bv_sub ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Word.bv_sadd_returntype",
     "norm_signed (bv_sadd ?w1.0 ?w2.0) = bv_sadd ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Word.bv_smult_returntype",
     "norm_signed (bv_smult ?w1.0 ?w2.0) = bv_smult ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Word.bv_sub_returntype",
     "norm_signed (bv_sub ?w1.0 ?w2.0) = bv_sub ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Word.norm_unsigned_Cons1",
     "norm_unsigned (\<one> # ?bs) = \<one> # ?bs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Word.bv_add_returntype",
     "norm_unsigned (bv_add ?w1.0 ?w2.0) = bv_add ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Word.bv_mult_returntype",
     "norm_unsigned (bv_mult ?w1.0 ?w2.0) = bv_mult ?w1.0 ?w2.0",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Word.bv_extend_norm_unsigned",
     "bv_extend (length ?w) \<zero> (norm_unsigned ?w) = ?w",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Word.bv_uminus_length_utos",
     "length (bv_uminus (utos ?w)) <= Suc (length ?w)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Word.mult_Bit0_left", "num.Bit0 ?m * ?n = num.Bit0 (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Word.unfold_nat_to_bv_helper",
     "nat_to_bv_helper ?b ?l = nat_to_bv_helper ?b [] @ ?l",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Word.bv_extend_rem_initial",
     "bv_extend (length ?w) ?b (rem_initial ?b ?w) = ?w",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 1)),
    ("Word.bv_to_nat_upper_range", "bv_to_nat ?w < 2 ^ length ?w",
     template_inequation
      (less_than, template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Word.length_nat_pos", "0 < ?x ==> 0 < length_nat ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Word.norm_unsigned_result",
     "norm_unsigned ?xs = [] | bv_msb (norm_unsigned ?xs) = \<one>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0))),
             template_hole 0))
         )),
    ("Word.bv_chop_length_fst",
     "length (fst (bv_chop ?w ?i)) = length ?w - ?i",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("Word.bv_chop_length_snd",
     "length (snd (bv_chop ?w ?i)) = min ?i (length ?w)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Word.fast_bv_to_nat_Cons1",
     "fast_bv_to_nat_helper (\<one> # ?bs) ?bin =
      fast_bv_to_nat_helper ?bs (num.Bit1 ?bin)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Word.fast_bv_to_nat_Cons0",
     "fast_bv_to_nat_helper (\<zero> # ?bs) ?bin =
      fast_bv_to_nat_helper ?bs (num.Bit0 ?bin)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Word.bv_not_Cons",
     "bv_not (?b # ?bs) = (\<not>\<^sub>b ?b) # bv_not ?bs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Word.bv_chop_append",
     "bv_chop (?w1.0 @ ?w2.0) (length ?w2.0) = (?w1.0, ?w2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Word.bv_mult_length",
     "length (bv_mult ?w1.0 ?w2.0) <= length ?w1.0 + length ?w2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Word.bv_smult_length",
     "length (bv_smult ?w1.0 ?w2.0) <= length ?w1.0 + length ?w2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Word.length_nat_mono", "?x <= ?y ==> length_nat ?x <= length_nat ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Word.bv_to_nat_zero_imp_empty",
     "bv_to_nat ?w = 0 ==> norm_unsigned ?w = []",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Word.bv_msb_one_length", "bv_msb ?w = \<one> ==> 0 < length ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Word.norm_empty_bv_to_nat_zero",
     "norm_unsigned ?w = [] ==> bv_to_nat ?w = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Word.pos_length_pos", "0 < bv_to_int ?w ==> 0 < length ?w",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Word.bv_to_int_msb1", "bv_to_int ?w1.0 < 0 ==> bv_msb ?w1.0 = \<one>",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 0),
          template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Word.bv_to_int_msb0",
     "0 <= bv_to_int ?w1.0 ==> bv_msb ?w1.0 = \<zero>",
     template_implication
      ([template_inequation
         (less_equals, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Word.bv_length_bv_mapzip",
     "length (bv_mapzip ?f ?w1.0 ?w2.0) =
      max (length ?w1.0) (length ?w2.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Word.norm_signed11",
     "norm_signed (\<one> # \<one> # ?xs) = norm_signed (\<one> # ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Word.norm_signed00",
     "norm_signed (\<zero> # \<zero> # ?xs) = norm_signed (\<zero> # ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Word.append_bv_chop_id",
     "fst (bv_chop ?w ?l) @ snd (bv_chop ?w ?l) = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_var 1)),
    ("Word.bv_to_int_upper_range", "bv_to_int ?w < 2 ^ (length ?w - 1)",
     template_inequation
      (less_than, template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Word.bv_add_length",
     "length (bv_add ?w1.0 ?w2.0)
      <= Suc (max (length ?w1.0) (length ?w2.0))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Word.bv_sadd_length",
     "length (bv_sadd ?w1.0 ?w2.0)
      <= Suc (max (length ?w1.0) (length ?w2.0))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Word.bv_sub_length",
     "length (bv_sub ?w1.0 ?w2.0)
      <= Suc (max (length ?w1.0) (length ?w2.0))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Word.bv_smult_length_utos",
     "length (bv_smult (utos ?w1.0) ?w2.0) <= length ?w1.0 + length ?w2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Word.bv_msb_one", "bv_msb ?w = \<one> ==> bv_to_nat ?w ~= 0",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Word.neg_length_pos", "bv_to_int ?w < - 1 ==> 0 < length ?w",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Word.bv_to_int_Cons1",
     "bv_to_int (\<one> # ?bs) = - int (bv_to_nat (bv_not ?bs) + 1)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0))))),
    ("Word.int_nat_two_exp", "2 ^ ?k = int (2 ^ ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_hole 3))),
           template_var 0)))),
    ("Word.norm_signed10",
     "norm_signed (\<one> # \<zero> # ?xs) = \<one> # \<zero> # ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 2, template_hole 0),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("Word.norm_signed01",
     "norm_signed (\<zero> # \<one> # ?xs) = \<zero> # \<one> # ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 2, template_hole 0),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 0)))),
    ("Word.bv_to_int_lower_range",
     "- (2 ^ (length ?w - 1)) <= bv_to_int ?w",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_hole 1))),
       template_app (template_hole 0, template_var 0))),
    ("Word.length_int_gt0",
     "0 < ?i ==> length_int ?i = Suc (length_nat (nat ?i))",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Word.bv_extend_longer", "?n <= length ?w ==> bv_extend ?n ?b ?w = ?w",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("Word.bv_to_nat_nzero_imp_nempty",
     "bv_to_nat ?w ~= 0 ==> norm_unsigned ?w ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Word.norm_signed_equal",
     "length (norm_signed ?w) = length ?w ==> norm_signed ?w = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_var 0))),
    ("Word.norm_unsigned_equal",
     "length (norm_unsigned ?w) = length ?w ==> norm_unsigned ?w = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_var 0))),
    ("Word.bv_msb_extend_same",
     "bv_msb ?w = ?b ==> bv_msb (bv_extend ?n ?b ?w) = ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 2)),
         template_var 1))),
    ("Word.norm_unsigned_append2",
     "norm_unsigned ?xs = [] ==>
      norm_unsigned (?xs @ ?ys) = norm_unsigned ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Word.bv_msb_bv_not",
     "0 < length ?w ==> bv_msb (bv_not ?w) = (\<not>\<^sub>b bv_msb ?w)",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Word.bv_length_extend",
     "length ?w <= ?i ==> length (bv_extend ?i ?b ?w) = ?i",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_var 1))),
    ("Word.bv_to_nat1",
     "bv_to_nat (\<one> # ?bs) = 2 ^ length ?bs + bv_to_nat ?bs",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 8, template_var 0)))),
    ("Word.nat_helper2",
     "nat_to_bv (2 ^ length ?xs + bv_to_nat ?xs) = \<one> # ?xs",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_app (template_hole 3, template_var 0))),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Word.max_mono", "mono ?f ==> max (?f ?x) (?f ?y) <= ?f (max ?x ?y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Word.int_to_bv_ge0",
     "0 <= ?n ==>
      int_to_bv ?n = norm_signed (\<zero> # nat_to_bv (nat ?n))",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 0)],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("Word.bv_to_int_extend",
     "bv_msb ?w = ?b ==> bv_to_int (bv_extend ?n ?b ?w) = bv_to_int ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 2)),
         template_app (template_hole 1, template_var 2)))),
    ("Word.bv_extend_norm_signed",
     "bv_msb ?w = ?b ==> bv_extend (length ?w) ?b (norm_signed ?w) = ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_var 1))),
    ("Word.bv_select_rev",
     "?n < length ?w ==> bv_select ?w ?n = rev ?w ! ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Word.rem_initial_equal",
     "length (rem_initial ?b ?w) = length ?w ==> rem_initial ?b ?w = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0))),
    ("Word.length_nat_to_bv_lower_limit",
     "2 ^ ?k <= ?n ==> ?k < length (nat_to_bv ?n)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3))),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Word.length_int_lt0",
     "?i < 0 ==> length_int ?i = Suc (length_nat (nat (- ?i) - 1))",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 8)],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_hole 0)))))),
    ("Word.max_le", "[| ?x <= ?z; ?y <= ?z |] ==> max ?x ?y <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Word.length_int_mono_gt0",
     "[| 0 <= ?x; ?x <= ?y |] ==> length_int ?x <= length_int ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Word.length_int_mono_lt0",
     "[| ?x <= ?y; ?y <= 0 |] ==> length_int ?y <= length_int ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Word.length_nat_non0",
     "?n ~= 0 ==> length_nat ?n = Suc (length_nat (?n div 2))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Word.norm_unsigned_append1",
     "norm_unsigned ?xs ~= [] ==>
      norm_unsigned (?xs @ ?ys) = norm_unsigned ?xs @ ?ys",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Word.rem_initial_append2",
     "rem_initial ?b ?xs = [] ==>
      rem_initial ?b (?xs @ ?ys) = rem_initial ?b ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Word.length_int_to_bv_lower_limit_gt0",
     "2 ^ (?k - 1) <= ?i ==> ?k < length (int_to_bv ?i)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5))),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)),
          template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Word.length_nat_to_bv_upper_limit",
     "?n <= 2 ^ ?k - 1 ==> length (nat_to_bv ?n) <= ?k",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_hole 3))),
                template_var 0)),
            template_hole 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Word.bv_to_nat_dist_append",
     "bv_to_nat (?l1.0 @ ?l2.0) =
      bv_to_nat ?l1.0 * 2 ^ length ?l2.0 + bv_to_nat ?l2.0",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 8, template_var 0)))),
    ("Word.bv_to_nat_helper",
     "bv_to_nat (?b # ?bs) = bitval ?b * 2 ^ length ?bs + bv_to_nat ?bs",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 9, template_var 0)))),
    ("Word.bv_extend_shorter",
     "length ?w < ?n ==> bv_extend ?n ?b ?w = bv_extend ?n ?b (?b # ?w)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Word.length_int_to_bv_lower_limit_lem1",
     "?i < - (2 ^ (?k - 1)) ==> ?k < length (int_to_bv ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))))],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Word.bv_to_int_qinj",
     "[| bv_to_int ?xs = bv_to_int ?ys; length ?xs = length ?ys |]
      ==> ?xs = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Word.bv_to_nat_qinj",
     "[| bv_to_nat ?xs = bv_to_nat ?ys; length ?xs = length ?ys |]
      ==> ?xs = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Word.int_to_bv_lt0",
     "?n < 0 ==>
      int_to_bv ?n =
      norm_signed (bv_not (\<zero> # nat_to_bv (nat (- ?n - 1))))",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 11)],
       template_equation
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0)),
                     template_hole 0))))))))),
    ("Word.bv_to_nat_lower_limit",
     "0 < bv_to_nat ?w ==>
      2 ^ (length (norm_unsigned ?w) - 1) <= bv_to_nat ?w",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)),
         template_app (template_hole 9, template_var 0)))),
    ("Word.rem_initial_append1",
     "rem_initial ?b ?xs ~= [] ==>
      rem_initial ?b (?xs @ ?ys) = rem_initial ?b ?xs @ ?ys",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_hole 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Word.bv_to_int_lower_limit_gt0",
     "0 < bv_to_int ?w ==>
      2 ^ (length (norm_signed ?w) - 2) <= bv_to_int ?w",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_hole 5, template_hole 4)))),
         template_app (template_hole 9, template_var 0)))),
    ("Word.bv_chopI",
     "[| ?w = ?w1.0 @ ?w2.0; ?i = length ?w2.0 |]
      ==> bv_chop ?w ?i = (?w1.0, ?w2.0)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Word.norm_signed_result",
     "norm_signed ?w = [] |
      norm_signed ?w = [\<one>] |
      bv_msb (norm_signed ?w) ~= bv_msb (tl (norm_signed ?w))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0)),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 6))),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 7, template_var 0))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 7, template_var 0)))))))
         )),
    ("Word.bv_to_nat_rew_msb",
     "bv_msb ?w = \<one> ==>
      bv_to_nat ?w = 2 ^ (length ?w - 1) + bv_to_nat (tl ?w)",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 0),
          template_hole 11)],
       template_equation
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1))),
           template_app
            (template_hole 9,
             template_app (template_hole 0, template_var 0)))))),
    ("Word.bv_to_int_upper_limit_lem1",
     "bv_to_int ?w < - 1 ==>
      bv_to_int ?w < - (2 ^ (length (norm_signed ?w) - 2))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 0),
          template_app (template_hole 9, template_hole 8))],
       template_inequation
        (less_than, template_app (template_hole 10, template_var 0),
         template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 0,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Word.length_int_to_bv_upper_limit_gt0",
     "[| 0 < ?i; ?i <= 2 ^ (?k - 1) - 1 |] ==> length (int_to_bv ?i) <= ?k",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4))),
            template_hole 3))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Word.bv_slice_length",
     "[| ?j <= ?i; ?i < length ?w |]
      ==> length (bv_slice ?w (?i, ?j)) = ?i - ?j + 1",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_hole 0)))),
    ("Word.length_int_to_bv_upper_limit_lem1",
     "[| ?i < - 1; - (2 ^ (?k - 1)) <= ?i |]
      ==> length (int_to_bv ?i) <= ?k",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 11, template_hole 10)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Word.bv_mapzip_Cons",
     "length ?w1.0 = length ?w2.0 ==>
      bv_mapzip ?f (?x # ?w1.0) (?y # ?w2.0) =
      ?f ?x ?y # bv_mapzip ?f ?w1.0 ?w2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 4),
          template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_var 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 4),
             template_var 3))))),
    ("Word.int_wf_ge_induct",
     "(!!i. (!!j. [| ?k <= j; j < i |] ==> ?P j) ==> ?P i) ==> ?P ?i",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Word.nat_helper1",
     "nat_to_bv (bv_to_nat ?w) = norm_unsigned ?w ==>
      nat_to_bv (2 * bv_to_nat ?w + bitval ?x) = norm_unsigned (?w @ [?x])",
     template_implication
      ([template_equation
         (template_app
           (template_hole 11,
            template_app (template_hole 10, template_var 1)),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_app (template_hole 10, template_var 1))),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Word.n_div_2_cases",
     "[| ?n = 0 ==> ?R; [| ?n div 2 < ?n; 0 < ?n |] ==> ?R |] ==> ?R",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 5)],
          template_predicate (template_var 0)),
        template_implication
         ([template_inequation
            (less_than,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 1)],
          template_implication
           ([template_inequation
              (less_than, template_hole 5, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Word.nat_to_bv_non0",
     "?n ~= 0 ==>
      nat_to_bv ?n =
      nat_to_bv (?n div 2) @ [if ?n mod 2 = 0 then \<zero> else \<one>]",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_implication
        ([template_predicate
           (template_app (template_hole 11, template_var 0))],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 3, template_var 0),
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6)))),
                           template_hole 13)),
                       template_hole 2),
                     template_hole 1)),
                 template_hole 0))
             )))),
    ("Word.bit_list_induct",
     "[| ?P []; !!bs. ?P bs ==> ?P (\<zero> # bs);
         !!bs. ?P bs ==> ?P (\<one> # bs) |]
      ==> ?P ?w",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Word.adder_helper",
     "0 < max (length ?w1.0) (length ?w2.0) ==>
      2 ^ (length ?w1.0 - 1) + 2 ^ (length ?w2.0 - 1)
      <= 2 ^ max (length ?w1.0) (length ?w2.0)",
     template_implication
      ([template_inequation
         (less_than, template_hole 11,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1)),
            template_app (template_hole 8, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 9, template_var 1)),
                 template_hole 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 8, template_var 0)),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 1)),
             template_app (template_hole 8, template_var 0)))))),
    ("Word.bit_list_cases",
     "[| ?w = [] ==> ?P ?w; !!bs. ?w = \<zero> # bs ==> ?P ?w;
         !!bs. ?w = \<one> # bs ==> ?P ?w |]
      ==> ?P ?w",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate
           (template_app (template_var 0, template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Word.bv_slice_bv_slice",
     "[| ?k <= ?i; ?i <= ?j; ?j <= ?l; ?l < length ?w |]
      ==> bv_slice ?w (?j, ?i) =
          bv_slice (bv_slice ?w (?l, ?k)) (?j - ?k, ?i - ?k)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4)))))),
    ("Word.bv_sliceI",
     "[| ?j <= ?i; ?i < length ?w; ?w = ?w1.0 @ ?w2.0 @ ?w3.0;
         Suc ?i = length ?w2.0 + ?j; ?j = length ?w3.0 |]
      ==> bv_slice ?w (?i, ?j) = ?w2.0",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 7, template_var 3)),
        template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0))),
        template_equation
         (template_app (template_hole 3, template_var 4),
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 7, template_var 1)),
            template_var 5)),
        template_equation
         (template_var 5, template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 5)),
         template_var 1)))]
