   [("Cryptinverts.pred_unfold", "pred ?n = ?n - 1",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Cryptinverts.cryptinverts_hilf1",
     "prime ?p ==> ?m * ?m ^ (?k * pred ?p) mod ?p = ?m mod ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 0, template_var 2))))),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 2)))),
    ("Cryptinverts.cryptinverts_hilf2",
     "prime ?p ==> ?m * ?m ^ (?k * pred ?p * pred ?q) mod ?p = ?m mod ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app (template_hole 0, template_var 3))),
                   template_app (template_hole 0, template_var 0))))),
           template_var 3),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 3)))),
    ("Cryptinverts.cryptinverts_hilf3",
     "prime ?q ==> ?m * ?m ^ (?k * pred ?p * pred ?q) mod ?q = ?m mod ?q",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app (template_hole 0, template_var 0))),
                   template_app (template_hole 0, template_var 3))))),
           template_var 3),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 3)))),
    ("Cryptinverts.fermat",
     "[| prime ?p; ?m mod ?p ~= 0 |] ==> ?m ^ (?p - 1) mod ?p = 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_var 1),
         template_hole 0))),
    ("Cryptinverts.primmultgreater2",
     "[| prime ?p; prime ?q; ?p ~= ?q |] ==> 2 < ?p * ?q",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Cryptinverts.primmultgreater",
     "[| prime ?p; prime ?q; ?p ~= 2; ?q ~= 2 |] ==> 2 < ?p * ?q",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_hole 2)))
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_hole 2)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Cryptinverts.cryptinverts_hilf4",
     "[| prime ?p; prime ?q; ?p ~= ?q; ?m < ?p * ?q;
         ?x mod (pred ?p * pred ?q) = 1 |]
      ==> ?m ^ ?x mod (?p * ?q) = ?m",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 2, template_var 3)),
              template_app (template_hole 2, template_var 2))),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_var 1))),
    ("Cryptinverts.cryptinverts",
     "[| prime ?p; prime ?q; ?p ~= ?q; ?n = ?p * ?q; ?m < ?n;
         ?e * ?d mod (pred ?p * pred ?q) = 1 |]
      ==> rsa_crypt (rsa_crypt ?m ?e ?n) ?d ?n = ?m",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_negation
         (template_equation (template_var 5, template_var 4)),
        template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 5, template_var 5),
            template_var 4)),
        template_inequation (less_than, template_var 2, template_var 3),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0)),
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 2, template_var 5)),
              template_app (template_hole 2, template_var 4))),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)),
             template_var 0),
           template_var 3),
         template_var 2)))]
