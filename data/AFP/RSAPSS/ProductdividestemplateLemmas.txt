   [("Productdivides.productdivides",
     "[| ?x mod ?a = 0; ?x mod ?b = 0; prime ?a; prime ?b; ?a ~= ?b |]
      ==> ?x mod (?a * ?b) = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 0),
          template_hole 3),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 3))),
    ("Productdivides.specializedtoprimes1",
     "[| prime ?p; prime ?q; ?p ~= ?q; ?a mod ?p = ?b mod ?p;
         ?a mod ?q = ?b mod ?q |]
      ==> ?a mod (?p * ?q) = ?b mod (?p * ?q)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 3),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2))))),
    ("Productdivides.specializedtoprimes1a",
     "[| prime ?p; prime ?q; ?p ~= ?q; ?a mod ?p = ?b mod ?p;
         ?a mod ?q = ?b mod ?q; ?b < ?p * ?q |]
      ==> ?a mod (?p * ?q) = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 3),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_var 0)))]
