   [("Card_Partitions.card_partition_on",
     "finite ?A ==>
      card {P. partition_on ?A P & card P = ?k} = Stirling (card ?A) ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Card_Partitions.card_partition_on_size1",
     "finite ?A ==>
      card {P. partition_on ?A P & (ALL X:P. card X = 1)} = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_hole 0))),
    ("Card_Partitions.card_partition_on_at_most_size",
     "finite ?A ==>
      card {P. partition_on ?A P & card P <= ?k} =
      sum (Stirling (card ?A)) {..?k}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_hole 9, template_app (template_hole 8, t_empty)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Card_Partitions.partition_on_size1",
     "finite ?A ==>
      {P. partition_on ?A P & (ALL X:P. card X = 1)} = {(%a. {a}) ` ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app (template_hole 11, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 0)),
           template_hole 0)))),
    ("Card_Partitions.card_partition_on_size1_eq_0",
     "[| finite ?A; ?k < card ?A |]
      ==> card
           {P. partition_on ?A P & card P <= ?k & (ALL X:P. card X = 1)} =
          0",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_hole 0))),
    ("Card_Partitions.card_partition_on_size1_eq_1",
     "[| finite ?A; card ?A <= ?k |]
      ==> card
           {P. partition_on ?A P & card P <= ?k & (ALL X:P. card X = 1)} =
          1",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_hole 0))),
    ("Card_Partitions.injectivity_subexpr2",
     "[| ?a ~: ?A; insert {?a} ?P = insert {?a} ?P';
         (partition_on ?A ?P & card ?P = ?k') &
         partition_on ?A ?P' & card ?P' = ?k' |]
      ==> ?P = ?P'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 4),
                template_hole 4)),
            template_var 2),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 4),
                template_hole 4)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app (template_hole 0, template_var 2)),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)))
            )],
       template_equation (template_var 2, template_var 1))),
    ("Card_Partitions.injectivity_subexpr1",
     "[| ?a ~: ?A; ?X : ?P & ?X' : ?P';
         insert (insert ?a ?X) (?P - {?X}) =
         insert (insert ?a ?X') (?P' - {?X'});
         (partition_on ?A ?P & card ?P = Suc ?k') &
         partition_on ?A ?P' & card ?P' = Suc ?k' |]
      ==> ?X = ?X'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 6),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 6),
                template_var 4)),
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 4),
                template_hole 5))),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 6),
                template_var 2)),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_hole 5)))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 3)),
                    template_app (template_hole 1, template_var 0)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 1)),
                  template_app (template_hole 1, template_var 0))))
            )],
       template_equation (template_var 4, template_var 2))),
    ("Card_Partitions.injectivity_subexpr1",
     "[| ?a ~: ?A; ?X : ?P & ?X' : ?P';
         insert (insert ?a ?X) (?P - {?X}) =
         insert (insert ?a ?X') (?P' - {?X'});
         (partition_on ?A ?P & card ?P = Suc ?k') &
         partition_on ?A ?P' & card ?P' = Suc ?k' |]
      ==> ?P = ?P'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 6),
                template_var 4)),
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_hole 4))),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 6),
                template_var 2)),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_hole 4)))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 3)),
                    template_app (template_hole 0, template_var 0)))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 1)),
                  template_app (template_hole 0, template_var 0))))
            )],
       template_equation (template_var 3, template_var 1))),
    ("Card_Partitions.set_partition_on_insert_with_fixed_card_eq",
     "[| finite ?A; ?a ~: ?A |]
      ==> {P. partition_on (insert ?a ?A) P & card P = Suc ?k} =
          ({P. partition_on ?A P & card P = Suc ?k} >>=
           (%P. P >>= (%p. {insert (insert ?a p) (P - {p})}))) Un
          ({P. partition_on ?A P & card P = ?k} >>= (%P. {insert {?a} P}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app (template_hole 15, t_empty),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 15, t_empty)),
               t_empty)),
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 15, t_empty)),
             t_empty)))))]
