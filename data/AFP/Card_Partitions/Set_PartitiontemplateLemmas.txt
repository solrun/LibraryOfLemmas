   [("Set_Partition.comp_image", "(`) ?f o (`) ?g = (`) (?f o ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set_Partition.partition_on_split1",
     "partition_on ?A (?P Un ?Q) ==> partition_on (\<Union> ?P) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Set_Partition.partition_on_split2",
     "partition_on ?A (?P Un ?Q) ==> partition_on (\<Union> ?Q) ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Set_Partition.partition_on_eq_implies_eq_carrier",
     "[| partition_on ?A ?Q; partition_on ?B ?Q |] ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Set_Partition.partition_on_le_set_elements",
     "[| finite ?A; partition_on ?A ?P |] ==> card ?P <= card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Set_Partition.partition_on_notemptyI",
     "[| partition_on ?A ?P; ?A ~= {} |] ==> ?P ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Set_Partition.partition_on_Diff",
     "[| partition_on ?A ?P; ?Q <= ?P |]
      ==> partition_on (?A - \<Union> ?Q) (?P - ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Set_Partition.partition_on_map",
     "[| inj_on ?f ?A; partition_on ?A ?P |]
      ==> partition_on (?f ` ?A) ((`) ?f ` ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 2)),
               template_var 0))
           ))),
    ("Set_Partition.partition_on_partition_on_unique",
     "[| partition_on ?A ?P; ?x : ?A |] ==> EX! X. ?x : X & X : ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Set_Partition.partition_subset_imp_notin",
     "[| partition_on ?A ?P; ?X : ?P; ?X' < ?X |] ==> ?X' ~: ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)
               )
           ))),
    ("Set_Partition.partition_on_in_the_unique_part",
     "[| partition_on ?A ?P; ?x : ?A |] ==> ?x : (THE X. ?x : X & X : ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, t_empty))
           ))),
    ("Set_Partition.partition_on_the_part_mem",
     "[| partition_on ?A ?P; ?x : ?A |] ==> (THE X. ?x : X & X : ?P) : ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 1)
           ))),
    ("Set_Partition.set_of_partition_on_map",
     "inj_on ?f ?A ==>
      (`) ((`) ?f) ` {P. partition_on ?A P} =
      {P. partition_on (?f ` ?A) P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("Set_Partition.partition_on_disjoint",
     "[| partition_on ?A ?P; partition_on ?B ?Q; ?A Int ?B = {} |]
      ==> ?P Int ?Q = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 1),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_hole 0))),
    ("Set_Partition.partition_on_insert'",
     "[| partition_on (?A - ?X) ?P; ?X <= ?A; ?X ~= {} |]
      ==> partition_on ?A (insert ?X ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Set_Partition.partition_on_remove_singleton",
     "[| partition_on ?A ?P; ?X : ?P; ?A - ?X = ?A' |]
      ==> partition_on ?A' (?P - {?X})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("Set_Partition.partition_on_union",
     "[| ?A Int ?B = {}; partition_on ?A ?P; partition_on ?B ?Q |]
      ==> partition_on (?A Un ?B) (?P Un ?Q)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Set_Partition.partition_on_no_partition_outside_carrier",
     "[| partition_on ?A ?P; ?x ~: ?A |]
      ==> {y. EX X:?P. ?x : X & y : X} = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_var 2)
                )
            )],
       template_equation
        (template_app (template_hole 3, t_empty), template_hole 0))),
    ("Set_Partition.partition_on_insert_singleton",
     "[| partition_on ?A ?P; ?a ~: ?A; insert ?a ?A = ?A' |]
      ==> partition_on ?A' (insert {?a} ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 3)
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 0)),
               template_var 2))
           ))),
    ("Set_Partition.partition_on_UN",
     "[| partition_on ?A ?B; !!b. b : ?B ==> partition_on b (?P b) |]
      ==> partition_on ?A (\<Union> (?P ` ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Set_Partition.partition_on_the_part_eq",
     "[| partition_on ?A ?P; ?x : ?X; ?X : ?P |]
      ==> (THE X. ?x : X & X : ?P) = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Set_Partition.partition_on_intersect_on_elements",
     "[| partition_on (?A Un ?C) ?P; ALL X:?P. EX x. x : X Int ?C |]
      ==> partition_on ?C ((%X. X Int ?C) ` ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 0, t_empty), template_var 0))
           ))),
    ("Set_Partition.set_eqI'",
     "[| !!x. x : ?A ==> x : ?B; !!x. x : ?B ==> x : ?A |] ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Set_Partition.partition_on_insert",
     "[| partition_on ?A ?P; disjnt ?A ?X; ?X ~= {}; ?A Un ?X = ?A' |]
      ==> partition_on ?A' (insert ?X ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Set_Partition.partition_onD4",
     "[| partition_on ?A ?P; ?p : ?P; ?q : ?P; ?x : ?p; ?x : ?q |]
      ==> ?p = ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 1))),
    ("Set_Partition.partition_on_all_in_part_eq_part",
     "[| partition_on ?A ?P; ?X' : ?P |]
      ==> {x: ?A. (THE X. x : X & X : ?P) = ?X'} = ?X'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("Set_Partition.partition_on_part_characteristic",
     "[| partition_on ?A ?P; ?X : ?P; ?x : ?X |]
      ==> ?X = {y. EX X:?P. ?x : X & y : X}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 1, template_app (template_hole 2, t_empty)))),
    ("Set_Partition.partition_on_insert_elements",
     "[| ?A Int ?B = {}; partition_on ?B ?P;
         ?f : ?A \<rightarrow>\<^sub>E ?P |]
      ==> partition_on (?A Un ?B) ((%X. X Un {x: ?A. ?f x = X}) ` ?P)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 3), template_var 2),
          template_hole 8),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 3), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 3, t_empty), template_var 1))
           ))),
    ("Set_Partition.partition_onI",
     "[| !!p. p : ?P ==> p ~= {}; \<Union> ?P = ?A;
         !!p p'. [| p : ?P; p' : ?P; p ~= p' |] ==> p Int p' = {} |]
      ==> partition_on ?A ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_var 0),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Set_Partition.partition_onE",
     "[| partition_on ?A ?P;
         [| !!p. p : ?P ==> p ~= {}; \<Union> ?P = ?A;
            !!p p'. [| p : ?P; p' : ?P; p ~= p' |] ==> p Int p' = {} |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 6, t_empty))],
          template_implication
           ([template_equation
              (template_app (template_hole 1, template_var 1),
               template_var 2)],
            template_implication
             ([template_predicate
                (template_app (template_hole 6, t_empty))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0)))]
