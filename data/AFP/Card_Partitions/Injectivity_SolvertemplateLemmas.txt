   [("Injectivity_Solver.inj_on_impl_disjoint_family_on_singleton",
     "inj_on ?f ?A ==> disjoint_family_on (%x. {?f x}) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)
           ))),
    ("Injectivity_Solver.injectivity_solver_prep_assms",
     "?x : ?A ==> ?x : ?A & ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Injectivity_Solver.injectivity_solver_prep_assms_Collect",
     "?x : {x. ?P x} ==> ?P ?x & ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 0, template_var 1)),
             template_app (template_var 0, template_var 1))
           ))),
    ("Injectivity_Solver.card_bind_singleton",
     "[| finite ?S; inj_on ?f ?S |]
      ==> card (?S >>= (%x. {?f x})) = card ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)),
         template_app (template_hole 0, template_var 1)))),
    ("Injectivity_Solver.disjoint_terminal_singleton",
     "[| ?s ~= ?t; ?X = ?Y ==> ?s = ?t |] ==> {?X} Int {?Y} = {}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_implication
         ([template_equation (template_var 1, template_var 0)],
          template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_hole 0))),
    ("Injectivity_Solver.elim_singleton",
     "[| ?x : {?s} & ?x' : {?t}; ?x = ?s & ?x' = ?t ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 5))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Injectivity_Solver.injectivity_solver_CollectE",
     "[| ?a : {x. ?P x} & ?a' : {x. ?P' x}; ?P ?a & ?P' ?a' ==> ?W |]
      ==> ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app (template_hole 2, t_empty))),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, t_empty)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 3, template_var 4)),
                 template_app (template_var 1, template_var 2))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Injectivity_Solver.card_bind",
     "[| finite ?S; ALL X:?S. finite (?f X); disjoint_family_on ?f ?S |]
      ==> card (?S >>= ?f) = (SUM x:?S. card (?f x))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Injectivity_Solver.disjoint_bind'",
     "(!!s t. s : ?S & t : ?T ==> ?f s Int ?g t = {}) ==>
      (?S >>= ?f) Int (?T >>= ?g) = {}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_hole 2))),
    ("Injectivity_Solver.disjoint_family_onI",
     "(!!i j. [| i : ?I & j : ?I; i ~= j |] ==> ?A i Int ?A j = {}) ==>
      disjoint_family_on ?A ?I",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Injectivity_Solver.disjoint_terminal",
     "[| ?s ~= ?t; !!x x'. [| x : ?S & x' : ?T; x = x' |] ==> ?s = ?t |]
      ==> ?S Int ?T = {}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Injectivity_Solver.disjoint_bind",
     "(!!s t. ?S s & ?T t ==> ?f s Int ?g t = {}) ==>
      ({s. ?S s} >>= ?f) Int ({t. ?T t} >>= ?g) = {}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0)),
         template_hole 4))),
    ("Injectivity_Solver.disjoint_terminal_Collect",
     "[| ?s ~= ?t; !!x x'. [| ?S x & ?T x'; x = x' |] ==> ?s = ?t |]
      ==> {x. ?S x} Int {x. ?T x} = {}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Injectivity_Solver.card_bind_constant",
     "[| finite ?S; ALL X:?S. finite (?f X); disjoint_family_on ?f ?S;
         !!x. x : ?S ==> card (?f x) = ?k |]
      ==> card (?S >>= ?f) = card ?S * ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0))))]
