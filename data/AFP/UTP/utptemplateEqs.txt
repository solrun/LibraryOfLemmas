   [("utp_recursion.mu_const", "(\<mu> X \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_recursion.nu_const", "(\<nu> X \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_tactics.uexpr_transfer_extra",
     "\<lbrakk>mk\<^sub>e ?y\<rbrakk>\<^sub>e = ?y",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_theory.utp_order_eq", "(.=\<^bsub>utp_order ?T\<^esub>) = (=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate (template_hole 0))),
    ("utp_pred.top_uexpr_rep_eq",
     "\<lbrakk>\<top>\<rbrakk>\<^sub>e ?b = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_pred.bot_uexpr_rep_eq",
     "\<lbrakk>\<bottom>\<rbrakk>\<^sub>e ?b = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.aext_id", "?P \<oplus>\<^sub>p \<Sigma> = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_alphabet.arestr_id", "?P \<restriction>\<^sub>e \<Sigma> = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_expr.uop_const", "uop id ?u = ?u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_subst.id_subst", "id \<dagger> ?v = ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_alphabet.aext_one", "1 \<oplus>\<^sub>p ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.arestr_one", "1 \<restriction>\<^sub>e ?a = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_subst.subst_one", "?\<sigma> \<dagger> 1 = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_alphabet.aext_zero", "0 \<oplus>\<^sub>p ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.arestr_zero", "0 \<restriction>\<^sub>e ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_subst.subst_zero", "?\<sigma> \<dagger> 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_tactics.uexpr_transfer_extra",
     "mk\<^sub>e \<lbrakk>?x\<rbrakk>\<^sub>e = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_pred_laws.true_inf", "?P \<squnion> true = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.true_inf", "true \<squnion> ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.false_sup", "?P \<sqinter> false = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.false_sup", "false \<sqinter> ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_alphabet.aext_false", "false \<oplus>\<^sub>p ?a = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.aext_true", "true \<oplus>\<^sub>p ?a = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.arestr_false", "false \<restriction>\<^sub>e ?a = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.arestr_true", "true \<restriction>\<^sub>e ?a = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.upred_arestr_false",
     "false \<restriction>\<^sub>p ?a = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_alphabet.upred_arestr_true",
     "true \<restriction>\<^sub>p ?a = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_dynlog.dBox_false", "\<^bold>[false\<^bold>]?\<Phi> = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_dynlog.dBox_skip", "\<^bold>[II\<^bold>]?\<Phi> = ?\<Phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_dynlog.dDia_false", "\<^bold><false\<^bold>>?\<Phi> = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_dynlog.dDia_skip", "\<^bold><II\<^bold>>?\<Phi> = ?\<Phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.eq_upred_refl", "(?x =\<^sub>u ?x) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.upred_eq_true", "(?p =\<^sub>u true) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.upred_true_eq", "(true =\<^sub>u ?p) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.all_zero", "(\<forall> \<emptyset> \<bullet> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.true_conj_zero", "(?P \<and> false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.true_conj_zero", "(false \<and> ?P) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.inf_bot_left", "(false \<and> ?x) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.inf_top_left", "(true \<and> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.inf_bot_right", "(?x \<and> false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.inf_top_right", "(?x \<and> true) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.inf_idem", "(?x \<and> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.true_disj_zero", "(?P \<or> true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.sup_bot_left", "(false \<or> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.true_disj_zero", "(true \<or> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.sup_top_left", "(true \<or> ?x) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.sup_bot_right", "(?x \<or> false) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.sup_top_right", "(?x \<or> true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.sup_idem", "(?x \<or> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.C1", "(\<exists> ?x \<bullet> false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.ex_zero", "(\<exists> \<emptyset> \<bullet> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.p_iff_p", "(?P \<Leftrightarrow> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.true_iff", "(?P \<Leftrightarrow> true) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.p_imp_p", "(?P \<Rightarrow> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.imp_true", "(?p \<Rightarrow> true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.imp_vacuous", "(false \<Rightarrow> ?u) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.true_imp", "(true \<Rightarrow> ?p) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.double_compl", "(\<not> \<not> ?x) = ?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_pred_laws.shAll_unbound",
     "(\<^bold>\<forall> x \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_pred_laws.shEx_unbound",
     "(\<^bold>\<exists> x \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_pred_laws.var_res_all", "?P \<restriction>\<^sub>v \<Sigma> = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_rel_laws.Dom_assigns",
     "Dom \<langle>?\<sigma>\<rangle>\<^sub>a = true",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_rel_laws.Dom_assume", "Dom ?[?b] = ?b",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_sp.sp_false", "?p sp false = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_pred.subst_false", "?\<sigma> \<dagger> false = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_pred.subst_true", "?\<sigma> \<dagger> true = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_wp.wp_skip_r", "II wp ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_wp.wp_true", "?p wp true = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_pred_laws.conj_idem", "(?P \<and> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.disj_idem", "(?P \<or> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.double_negation", "(\<not> \<not> ?P) = ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_rel_laws.frame_all", "{\<Sigma>}:[?P] = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_rel_laws.frame_miracle", "{?x}:[false] = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_rel.rel_aext_false", "false \<oplus>\<^sub>r ?a = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_rel_laws.rel_frext_miracle", "?a:[false]\<^sup>+ = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_rel_laws.while_bot_false",
     "while\<^sub>\<bottom> false do ?P od = II",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_rel_laws.while_false", "while\<^sup>\<top> false do ?P od = II",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_rel_laws.while_true", "while\<^sup>\<top> true do ?P od = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_rel_laws.seqr_left_unit", "II ;; ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_rel_laws.seqr_right_unit", "?P ;; II = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_rel_laws.seqr_right_zero", "?P ;; false = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_rel_laws.seqr_left_zero", "false ;; ?P = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_expr.lit_ueval",
     "\<lbrakk>\<guillemotleft>?x\<guillemotright>\<rbrakk>\<^sub>e ?b =
      ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 1)),
    ("utp_subst.usubst_cond_id",
     "?\<sigma> \<triangleleft> ?b \<triangleright>\<^sub>s ?\<sigma> =
      ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1),
       template_var 1)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<guillemotleft>?x\<guillemotright>\<rbrakk>\<^sub>e =
      (%b. ?x)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x\<rbrakk>\<^sub>e = get\<^bsub>?x\<^esub>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_rel.RID_pr_var", "RID (&?x) = RID ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("utp_theory.upred_lattice_Idempotent",
     "Idem\<^bsub>\<P>\<^esub> ?H = Idempotent ?H",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_insts.mkuexpr_lit",
     "mk\<^sub>e (%s. ?k) = \<guillemotleft>?k\<guillemotright>",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_subst.usubst_lookup_id", "\<langle>id\<rangle>\<^sub>s ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("utp_meta_subst.msubst_const",
     "?P\<lbrakk>x\<rightarrow>?v\<rbrakk> = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, t_empty), template_var 0),
       template_var 1)),
    ("utp_expr.numeral_uexpr_simp",
     "numeral ?x = \<guillemotleft>numeral ?x\<guillemotright>",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_expr.lit_numeral",
     "\<guillemotleft>numeral ?n\<guillemotright> = numeral ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_funcs.uset_minus_empty", "?x - {}\<^sub>u = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("utp_pred_laws.closure_all",
     "[?P]\<^sub>u = (\<forall> \<Sigma> \<bullet> ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("utp_theory.upred_lattice_inf", "Lattice.inf \<P> ?A = \<Or>?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.upred_eq_false", "(?p =\<^sub>u false) = (\<not> ?p)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.upred_false_eq", "(false =\<^sub>u ?p) = (\<not> ?p)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.p_imp_false", "(?P \<Rightarrow> false) = (\<not> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.max_bot", "ord.max (<=) false ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.max_top", "ord.max (<=) true ?x = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.max_bot2", "ord.max (<=) ?x false = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("utp_pred_laws.max_top2", "ord.max (<=) ?x true = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.min_bot", "ord.min (<=) false ?x = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.min_top", "ord.min (<=) true ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.min_bot2", "ord.min (<=) ?x false = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.min_top2", "ord.min (<=) ?x true = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("utp_pred.msubst_false",
     "false\<lbrakk>x\<rightarrow>?v\<rbrakk> = false",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_hole 0)),
    ("utp_pred.msubst_true",
     "true\<lbrakk>x\<rightarrow>?v\<rbrakk> = true",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.p_and_not_p", "(?P \<and> \<not> ?P) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot", "(?x \<and> \<not> ?x) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.compl_inf_bot", "(\<not> ?x \<and> ?x) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.p_or_not_p", "(?P \<or> \<not> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_compl_top", "(?x \<or> \<not> ?x) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.compl_sup_top", "(\<not> ?x \<or> ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.le_pred_refl", "(?x \<le>\<^sub>u ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("utp_concurrency.par_by_merge_right_false",
     "?P \<parallel>\<^bsub>?M\<^esub> false = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("utp_concurrency.par_by_merge_false",
     "?P \<parallel>\<^bsub>false\<^esub> ?Q = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("utp_concurrency.par_by_merge_left_false",
     "false \<parallel>\<^bsub>?M\<^esub> ?Q = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("utp_rel_laws.assigns_r_feasible",
     "\<langle>?\<sigma>\<rangle>\<^sub>a ;; true = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("utp_var.pr_var_idem", "&&?x = &?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_alphabet.alpha_in_var", "?x ;\<^sub>L fst\<^sub>L = $?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_rel.var_in_alpha", "?x ;\<^sub>L in\<alpha> = $?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_alphabet.alpha_out_var", "?x ;\<^sub>L snd\<^sub>L = $?x\<acute>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_rel.var_out_alpha", "?x ;\<^sub>L out\<alpha> = $?x\<acute>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_var.in_var_pr_var", "$&?x = $?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("utp_var.out_var_pr_var", "$&?x\<acute> = $?x\<acute>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("utp_expr.numeral_uexpr_rep_eq",
     "\<lbrakk>numeral ?x\<rbrakk>\<^sub>e ?b = numeral ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_expr_insts.of_nat_uexpr_rep_eq",
     "\<lbrakk>of_nat ?x\<rbrakk>\<^sub>e ?b = of_nat ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_pred_laws.bot_unique", "(false \<sqsubseteq> ?a) = (?a = false)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("utp_pred_laws.top_unique", "(?a \<sqsubseteq> true) = (?a = true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("utp_theory.upred_lattice_Monotonic",
     "Mono\<^bsub>\<P>\<^esub> ?H = Monotonic ?H",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_insts.mkuexpr_lens_get",
     "mk\<^sub>e get\<^bsub>?x\<^esub> = &?x",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_alphabet.aext_lit",
     "\<guillemotleft>?v\<guillemotright> \<oplus>\<^sub>p ?a =
      \<guillemotleft>?v\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_alphabet.arestr_lit",
     "\<guillemotleft>?v\<guillemotright> \<restriction>\<^sub>e ?a =
      \<guillemotleft>?v\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_subst.subst_lit",
     "?\<sigma> \<dagger> \<guillemotleft>?v\<guillemotright> =
      \<guillemotleft>?v\<guillemotright>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.cond_idem",
     "?P \<triangleleft> ?b \<triangleright> ?P = ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.cond_unit_F",
     "?P \<triangleleft> false \<triangleright> ?Q = ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.cond_unit_T",
     "?P \<triangleleft> true \<triangleright> ?Q = ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0),
       template_var 1)),
    ("utp_meta_subst.msubst_lit", "msubst lit ?v = ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("utp_alphabet.aext_numeral",
     "numeral ?n \<oplus>\<^sub>p ?a = numeral ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_alphabet.arestr_numeral",
     "numeral ?n \<restriction>\<^sub>e ?a = numeral ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_expr_insts.mkuexpr_numeral",
     "mk\<^sub>e (%s. numeral ?n) = numeral ?n",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr.lit_numeral_2", "mk\<^sub>e (%b. numeral ?v) = numeral ?v",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_insts.lit_uminus",
     "\<guillemotleft>- ?x\<guillemotright> =
      - \<guillemotleft>?x\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.UINF_ind_const", "(\<Sqinter> i \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_var 0)),
    ("utp_expr_funcs.uunion_empty_1", "{}\<^sub>u \<union>\<^sub>u ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.eq_upred_sym", "(?x =\<^sub>u ?y) = (?y =\<^sub>u ?x)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.inf_commute", "(?x \<and> ?y) = (?y \<and> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.sup_commute", "(?x \<or> ?y) = (?y \<or> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_alphabet.upred_arestr_lit",
     "\<guillemotleft>?v\<guillemotright> \<restriction>\<^sub>p ?a =
      \<guillemotleft>?v\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_pred.subst_closure",
     "?\<sigma> \<dagger> [?P]\<^sub>u = [?P]\<^sub>u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.uset_laws", "(?x \<in>\<^sub>u {}\<^sub>u) = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_hole 0)),
    ("utp_pred_laws.cond_true_false",
     "true \<triangleleft> ?b \<triangleright> false = ?b",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0),
           template_hole 1),
         template_hole 0),
       template_var 0)),
    ("utp_pred_laws.inf_sup_absorb", "(?x \<and> (?x \<or> ?y)) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.sup_inf_absorb", "(?x \<or> ?x \<and> ?y) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.usup_and", "?P \<squnion> ?Q = (?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.uinf_or", "?P \<sqinter> ?Q = (?P \<or> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.conj_comm", "(?P \<and> ?Q) = (?Q \<and> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.disj_comm", "(?P \<or> ?Q) = (?Q \<or> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.uzero_le_laws", "(1 \<le>\<^sub>u numeral ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.uzero_le_laws", "(0 \<le>\<^sub>u numeral ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.conj_disj_abs", "(?P \<and> (?P \<or> ?Q)) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.disj_conj_abs", "(?P \<or> ?P \<and> ?Q) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_rel_laws.frame_none", "{\<emptyset>}:[?P] = (?P \<and> II)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("utp_rel_laws.assume_Dom", "?[Dom ?P] ;; ?P = ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_var 0)),
    ("utp_rel_laws.iter_seqr_nil", "seqr_iter [] ?P = II",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("utp_concurrency.U0_as_alpha", "?P ;; U0 = \<lceil>?P\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("utp_concurrency.U1_as_alpha", "?P ;; U1 = \<lceil>?P\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("utp_expr_funcs.uconcat_units",
     "?xs ^\<^sub>u \<langle>\<rangle> = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("utp_expr_funcs.uconcat_units",
     "\<langle>\<rangle> ^\<^sub>u ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("utp_concurrency.U0\<alpha>_comp_in_var",
     "$?x ;\<^sub>L U0\<alpha> = $?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_concurrency.U1\<alpha>_comp_in_var",
     "$?x ;\<^sub>L U1\<alpha> = $?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr.var_ueval",
     "\<lbrakk>?x\<rbrakk>\<^sub>e ?b = get\<^bsub>?x\<^esub> ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_theory.mk_conn_upper",
     "\<pi>\<^sup>*\<^bsub>?H1.0 \<Leftarrow>\<langle>?\<H>\<^sub>1,?\<H>\<^sub>2\<rangle>\<Rightarrow> ?H2.0\<^esub> =
      ?\<H>\<^sub>2",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("utp_theory.mk_conn_lower",
     "\<pi>\<^sub>*\<^bsub>?H1.0 \<Leftarrow>\<langle>?\<H>\<^sub>1,?\<H>\<^sub>2\<rangle>\<Rightarrow> ?H2.0\<^esub> =
      ?\<H>\<^sub>1",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("utp_pred_laws.refBy_order",
     "(?P \<sqsubseteq> ?Q) = `?Q \<Rightarrow> ?P`",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.bot_less", "(\<not> ?a = false) = (false < ?a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("utp_pred_laws.less_top", "(\<not> ?a = true) = (?a < true)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("utp_theory.upred_lattice_le", "le \<P> ?P ?Q = (?P \<sqsubseteq> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.taut_iff_eq", "`?P \<Leftrightarrow> ?Q` = (?P = ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("utp_unrest.unrest_svar", "(&?x \<sharp> ?P) = (?x \<sharp> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("utp_subst.subst_var",
     "?\<sigma> \<dagger> ?x = \<langle>?\<sigma>\<rangle>\<^sub>s ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_meta_subst.msubst_lit'",
     "\<guillemotleft>?y\<guillemotright>\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_meta_subst.msubst_var",
     "?x\<lbrakk>y\<rightarrow>?u\<rbrakk> = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_expr.bop_const_2", "bop (%x y. x) ?u ?v = ?u",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0),
       template_var 1)),
    ("utp_expr.bop_const_1", "bop (%x y. y) ?u ?v = ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0),
       template_var 0)),
    ("utp_expr.uexpr_fst", "\<pi>\<^sub>1((?e, ?f)\<^sub>u) = ?e",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("utp_expr.uexpr_snd", "\<pi>\<^sub>2((?e, ?f)\<^sub>u) = ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("utp_lift.lift_pre_var", "\<lceil>?x\<rceil>\<^sub>< = $?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_lift.lift_post_var", "\<lceil>?x\<rceil>\<^sub>> = $?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_expr.lit_fun_simps",
     "\<guillemotleft>?f ?x\<guillemotright> =
      uop ?f \<guillemotleft>?x\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_var 1, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_expr_funcs.uinter_empty_1",
     "?x \<inter>\<^sub>u {}\<^sub>u = {}\<^sub>u",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("utp_expr_funcs.uinter_empty_2",
     "{}\<^sub>u \<inter>\<^sub>u ?x = {}\<^sub>u",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("utp_pred_laws.shAll_bool", "ushAll ?P = (?P True \<and> ?P False)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app (template_var 0, template_hole 0)))),
    ("utp_pred_laws.shEx_bool", "ushEx ?P = (?P True \<or> ?P False)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app (template_var 0, template_hole 0)))),
    ("utp_pred_laws.diff_eq", "diff_upred ?x ?y = (?x \<and> \<not> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_dynlog.dBox_assigns",
     "\<^bold>[\<langle>?\<sigma>\<rangle>\<^sub>a\<^bold>]?\<Phi> =
      ?\<sigma> \<dagger> ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_dynlog.dBox_test",
     "\<^bold>[?[?p]\<^bold>]?\<Phi> = (?p \<Rightarrow> ?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_dynlog.dDia_assigns",
     "\<^bold><\<langle>?\<sigma>\<rangle>\<^sub>a\<^bold>>?\<Phi> =
      ?\<sigma> \<dagger> ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_dynlog.dDia_test",
     "\<^bold><?[?p]\<^bold>>?\<Phi> = (?p \<and> ?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_wp.wp_assigns_r",
     "\<langle>?\<sigma>\<rangle>\<^sub>a wp ?r = ?\<sigma> \<dagger> ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.UINF_where_false",
     "(\<Sqinter> i | false \<bullet> ?P i) = false",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.UINF_false", "UINF ?P (%i. false) = false",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.USUP_where_false",
     "(\<Squnion> i | false \<bullet> ?P i) = true",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.USUP_true", "USUP ?F (%P. true) = true",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot_right",
     "(?x \<and> ?y \<and> \<not> ?x) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1))),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot_left2",
     "(?x \<and> \<not> ?x \<and> ?y) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot_left1",
     "(\<not> ?x \<and> ?x \<and> ?y) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_compl_top_left2",
     "(?x \<or> \<not> ?x \<or> ?y) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_compl_top_left1",
     "(\<not> ?x \<or> ?x \<or> ?y) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_hole 0)),
    ("utp_rel.subst_pre_skip",
     "\<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger> II =
      \<langle>?\<sigma>\<rangle>\<^sub>a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_funcs.ulist_filter_empty",
     "?x \<restriction>\<^sub>u {}\<^sub>u = \<langle>\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), template_var 0),
         template_app (template_hole 3, template_hole 2)),
       template_app (template_hole 1, template_hole 0))),
    ("utp_concurrency.U0\<alpha>_comp_out_var",
     "$?x\<acute> ;\<^sub>L U0\<alpha> = $0-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_concurrency.U1\<alpha>_comp_out_var",
     "$?x\<acute> ;\<^sub>L U1\<alpha> = $1-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_var.pr_var_lens_plus", "&(?x +\<^sub>L ?y) = ?x +\<^sub>L ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_theory.utp_order_le", "le (utp_order ?T) = (\<sqsubseteq>)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("utp_theory.Healthy_fixed_points",
     "fps \<P> ?H = \<lbrakk>?H\<rbrakk>\<^sub>H",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("utp_theory.utp_order_carrier",
     "carrier (utp_order ?H) = \<lbrakk>?H\<rbrakk>\<^sub>H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("utp_pred_laws.obs_upred_refine_iff",
     "(?P \<sqsubseteq> ?Q) =
      (\<lbrakk>?Q\<rbrakk>\<^sub>o <= \<lbrakk>?P\<rbrakk>\<^sub>o)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.le_iff_inf",
     "(?y \<sqsubseteq> ?x) = ((?x \<and> ?y) = ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("utp_pred_laws.le_iff_sup",
     "(?y \<sqsubseteq> ?x) = ((?x \<or> ?y) = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.bdd_above_insert",
     "preorder.bdd_above (<=) (insert ?a ?A) = preorder.bdd_above (<=) ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("utp_pred_laws.bdd_below_insert",
     "preorder.bdd_below (<=) (insert ?a ?A) = preorder.bdd_below (<=) ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("utp_pred_laws.atLeast_eq_UNIV_iff",
     "(ord.atLeast (<=) ?x = UNIV) = (?x = false)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("utp_pred_laws.atMost_eq_UNIV_iff",
     "(ord.atMost (<=) ?x = UNIV) = (?x = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("utp_pred_laws.compl_eq_compl_iff",
     "((\<not> ?x) = (\<not> ?y)) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("utp_pred_laws.diff_shunt_var",
     "(diff_upred ?x ?y = false) = (?y \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_rel_laws.postcond_equiv",
     "(?P = true ;; ?P) = (in\<alpha> \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("utp_rel_laws.precond_equiv",
     "(?P = ?P ;; true) = (out\<alpha> \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("utp_pred_laws.compl_less_compl_iff",
     "((\<not> ?x) < (\<not> ?y)) = (?y < ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("utp_pred_laws.compl_le_compl_iff",
     "((\<not> ?y) \<sqsubseteq> (\<not> ?x)) = (?x \<sqsubseteq> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("utp_alphabet.aext_var", "?x \<oplus>\<^sub>p ?a = ?x ;\<^sub>L ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_alphabet.arestr_var",
     "?x \<restriction>\<^sub>e ?a = ?x /\<^sub>L ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.lit_convr",
     "\<guillemotleft>?v\<guillemotright>\<^sup>- =
      \<guillemotleft>?v\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("utp_subst.usubst_abs",
     "?\<sigma> \<dagger> \<bar>?x\<bar> =
      \<bar>?\<sigma> \<dagger> ?x\<bar>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_subst.usubst_sgn",
     "?\<sigma> \<dagger> sgn ?x = sgn (?\<sigma> \<dagger> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_uminus",
     "(- ?x) \<oplus>\<^sub>p ?a = - ?x \<oplus>\<^sub>p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_uminus",
     "?\<sigma> \<dagger> - ?x = - (?\<sigma> \<dagger> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_expr_insts.mkuexpr_uminus",
     "mk\<^sub>e (%s. - ?f s) = - mk\<^sub>e ?f",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_power",
     "\<guillemotleft>?x ^ ?n\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> ^ ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("utp_alphabet.aext_not",
     "(\<not> ?P) \<oplus>\<^sub>p ?x = (\<not> ?P \<oplus>\<^sub>p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.arestr_not",
     "(\<not> ?P) \<restriction>\<^sub>e ?a =
      (\<not> ?P \<restriction>\<^sub>e ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_pred.subst_not",
     "?\<sigma> \<dagger> (\<not> ?P) = (\<not> ?\<sigma> \<dagger> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.impl_mp1",
     "(?P \<and> (?P \<Rightarrow> ?Q)) = (?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("utp_pred_laws.inf_left_idem",
     "(?x \<and> ?x \<and> ?y) = (?x \<and> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.inf_right_idem",
     "((?x \<and> ?y) \<and> ?y) = (?x \<and> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.impl_mp2",
     "((?P \<Rightarrow> ?Q) \<and> ?P) = (?Q \<and> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("utp_pred_laws.sup_left_idem",
     "(?x \<or> ?x \<or> ?y) = (?x \<or> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_rel_laws.Dom_conv_Ran", "Dom (?P\<^sup>-) = Ran ?P",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))),
       template_app (template_hole 0, template_var 0))),
    ("utp_rel_laws.Ran_conv_Dom", "Ran (?P\<^sup>-) = Dom ?P",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.C5", "(&?x =\<^sub>u &?x) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("utp_rel_laws.ustar_unfoldl",
     "?P\<^sup>\<star> = II \<sqinter> (?P ;; ?P\<^sup>\<star>)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 0))))),
    ("utp_rel_laws.while_bot_true",
     "while\<^sub>\<bottom> true do ?P od = \<mu> ((;;) ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("utp_sym_eval.term_symeval",
     "terminated: ?\<Gamma> ;; ?P = ?\<Gamma> \<Turnstile> ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("utp_var.pr_var_lens_comp_1", "&?x ;\<^sub>L ?y = &?y:?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_theory.utp_order_fpl", "utp_order ?H = fpl \<P> ?H",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("utp_theory.mk_conn_orderA",
     "\<X>\<^bsub>?H1.0 \<Leftarrow>\<langle>?\<H>\<^sub>1,?\<H>\<^sub>2\<rangle>\<Rightarrow> ?H2.0\<^esub> =
      utp_order ?H1.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 3))),
    ("utp_theory.mk_conn_orderB",
     "\<Y>\<^bsub>?H1.0 \<Leftarrow>\<langle>?\<H>\<^sub>1,?\<H>\<^sub>2\<rangle>\<Rightarrow> ?H2.0\<^esub> =
      utp_order ?H2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr.uop_ueval",
     "\<lbrakk>uop ?f ?x\<rbrakk>\<^sub>e ?b =
      ?f (\<lbrakk>?x\<rbrakk>\<^sub>e ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_var.var_lookup_in",
     "get\<^bsub>$?x\<^esub> (?A, ?A') = get\<^bsub>?x\<^esub> ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("utp_var.var_lookup_out",
     "get\<^bsub>$?x\<acute>\<^esub> (?A, ?A') = get\<^bsub>?x\<^esub> ?A'",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("utp_subst.subst_upd_id_lam",
     "(%x. x)(?x \<mapsto>\<^sub>s ?v) = [?x \<mapsto>\<^sub>s ?v]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0))),
    ("utp_subst.subst_upd_pr_var",
     "?s(&?x \<mapsto>\<^sub>s ?v) = ?s(?x \<mapsto>\<^sub>s ?v)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<dagger> ?xa\<rbrakk>\<^sub>e =
      (%b. \<lbrakk>?xa\<rbrakk>\<^sub>e (?x b))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<langle>?x\<rangle>\<^sub>s ?xa\<rbrakk>\<^sub>e =
      (%b. get\<^bsub>?xa\<^esub> (?x b))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>uop ?x ?xa\<rbrakk>\<^sub>e =
      (%b. ?x (\<lbrakk>?xa\<rbrakk>\<^sub>e b))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>ulambda ?x\<rbrakk>\<^sub>e =
      (%A x. \<lbrakk>?x x\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>[?x]\<^sub>u\<rbrakk>\<^sub>e =
      (%A. ALL A'. \<lbrakk>?x\<rbrakk>\<^sub>e A')",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("utp_wp.wp_hoare_link",
     "\<lbrace>?p\<rbrace> ?Q \<lbrace>?r\<rbrace>\<^sub>u =
      (?Q wp ?r \<sqsubseteq> ?p)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_sp.sp_hoare_link",
     "\<lbrace>?p\<rbrace> ?Q \<lbrace>?r\<rbrace>\<^sub>u =
      (?r \<sqsubseteq> ?p sp ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("utp_dynlog.hoare_as_dynlog",
     "\<lbrace>?p\<rbrace> ?Q \<lbrace>?r\<rbrace>\<^sub>u =
      (?p \<tturnstile> \<^bold>[?Q\<^bold>]?r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.taut_conj", "`?A \<and> ?B` = (`?A` \<and> `?B`)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.inf_shunt",
     "((?x \<and> ?y) = false) = ((\<not> ?y) \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.sup_shunt",
     "((?x \<or> ?y) = true) = (?y \<sqsubseteq> (\<not> ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("utp_rel_laws.feasibile_iff_true_right_zero",
     "(?P ;; true = true) = `\<exists> out\<alpha> \<bullet> ?P`",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("utp_meta_subst.msubst_lit'_2",
     "\<guillemotleft>?z\<guillemotright>\<lbrakk>(x,
      y)\<rightarrow>?v\<rbrakk> =
      \<guillemotleft>?z\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_meta_subst.msubst_var_2",
     "?x\<lbrakk>(y, z)\<rightarrow>?u\<rbrakk> = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_concurrency.U0_alpha_out_var",
     "\<lceil>$?x\<acute>\<rceil>\<^sub>0 = $0-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("utp_concurrency.U1_alpha_out_var",
     "\<lceil>$?x\<acute>\<rceil>\<^sub>1 = $1-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("utp_expr.lit_plus",
     "\<guillemotleft>?x + ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> +
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr.lit_numeral_1",
     "uop numeral ?x =
      mk\<^sub>e (%b. numeral (\<lbrakk>?x\<rbrakk>\<^sub>e b))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("utp_expr_insts.lit_minus",
     "\<guillemotleft>?x - ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> -
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_times",
     "\<guillemotleft>?x * ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> *
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_div",
     "\<guillemotleft>?x div ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> div
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_divide",
     "\<guillemotleft>?x / ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> /
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.compl_inf",
     "(\<not> (?x \<and> ?y)) = (\<not> ?x \<or> \<not> ?y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.compl_sup",
     "(\<not> (?x \<or> ?y)) = (\<not> ?x \<and> \<not> ?y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_rel_laws.Dom_inf",
     "Dom (?P \<sqinter> ?Q) = (Dom ?P \<or> Dom ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_rel_laws.Dom_disj", "Dom (?P \<or> ?Q) = (Dom ?P \<or> Dom ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.closure_conj_distr",
     "([?P]\<^sub>u \<and> [?Q]\<^sub>u) = [?P \<and> ?Q]\<^sub>u",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.inf_cancel_left1",
     "((?x \<and> ?a) \<and> \<not> ?x \<and> ?b) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.inf_cancel_left2",
     "((\<not> ?x \<and> ?a) \<and> ?x \<and> ?b) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_cancel_left1",
     "((?x \<or> ?a) \<or> \<not> ?x \<or> ?b) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_cancel_left2",
     "((\<not> ?x \<or> ?a) \<or> ?x \<or> ?b) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.not_conj_deMorgans",
     "(\<not> (?P \<and> ?Q)) = (\<not> ?P \<or> \<not> ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.not_disj_deMorgans",
     "(\<not> (?P \<or> ?Q)) = (\<not> ?P \<and> \<not> ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.conj_disj_not_abs",
     "(?P \<and> (\<not> ?P \<or> ?Q)) = (?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("utp_rel_laws.ustar_as_nu",
     "?P\<^sup>\<star> = (\<nu> X \<bullet> (?P ;; X) \<sqinter> II)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("utp_sym_eval.assigns_symeval",
     "?\<Gamma> \<Turnstile> \<langle>?\<sigma>\<rangle>\<^sub>a =
      terminated: (?\<sigma> o ?\<Gamma>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("utp_rel_laws.assigns_comp",
     "\<langle>?f\<rangle>\<^sub>a ;; \<langle>?g\<rangle>\<^sub>a =
      \<langle>?g o ?f\<rangle>\<^sub>a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_rel_laws.assert_seq",
     "{?b}\<^sub>\<bottom> ;; {?c}\<^sub>\<bottom> =
      {?b \<and> ?c}\<^sub>\<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.assume_seq", "?[?b] ;; ?[?c] = ?[?b \<and> ?c]",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.assigns_r_comp",
     "\<langle>?\<sigma>\<rangle>\<^sub>a ;; ?P =
      \<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger> ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("utp_var.in_var_plus", "$(?x +\<^sub>L ?y) = $?x +\<^sub>L $?y",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_var.out_var_plus",
     "$(?x +\<^sub>L ?y)\<acute> = $?x\<acute> +\<^sub>L $?y\<acute>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_expr_insts.power_rep_eq",
     "\<lbrakk>?P ^ ?n\<rbrakk>\<^sub>e =
      (%b. \<lbrakk>?P\<rbrakk>\<^sub>e b ^ ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<restriction>\<^sub>e ?xa\<rbrakk>\<^sub>e =
      (%b. \<lbrakk>?x\<rbrakk>\<^sub>e (create\<^bsub>?xa\<^esub> b))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<oplus>\<^sub>p ?xa\<rbrakk>\<^sub>e =
      (%b. \<lbrakk>?x\<rbrakk>\<^sub>e (get\<^bsub>?xa\<^esub> b))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>ushAll ?x\<rbrakk>\<^sub>e =
      (%A. ALL x. \<lbrakk>?x x\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>ushEx ?x\<rbrakk>\<^sub>e =
      (%A. EX x. \<lbrakk>?x x\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<langle>?x\<rangle>\<^sub>a\<rbrakk>\<^sub>e =
      (%(b, b'). b' = ?x b)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("utp_sp.s_pre",
     "`?P \<Rightarrow> ?C wp ?Q` = \<lbrace>?P\<rbrace> ?C
      \<lbrace>?Q\<rbrace>\<^sub>u",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("utp_sp.sp_so",
     "`?p sp ?C \<Rightarrow> ?Q` = \<lbrace>?p\<rbrace> ?C
      \<lbrace>?Q\<rbrace>\<^sub>u",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("utp_alphabet.aext_twice",
     "(?P \<oplus>\<^sub>p ?a) \<oplus>\<^sub>p ?b =
      ?P \<oplus>\<^sub>p (?a ;\<^sub>L ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_uop",
     "uop ?f ?u \<oplus>\<^sub>p ?a = uop ?f (?u \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_uop",
     "?\<sigma> \<dagger> uop ?f ?v = uop ?f (?\<sigma> \<dagger> ?v)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_subst.subst_subst",
     "?\<sigma> \<dagger> ?\<rho> \<dagger> ?e =
      (?\<rho> o ?\<sigma>) \<dagger> ?e",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("utp_rel.subst_lift_cond",
     "\<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger>
      \<lceil>?s\<rceil>\<^sub>\<leftarrow> =
      \<lceil>?\<sigma> \<dagger> ?s\<rceil>\<^sub>\<leftarrow>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.post_convr",
     "\<lceil>?p\<rceil>\<^sub>>\<^sup>- = \<lceil>?p\<rceil>\<^sub><",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("utp_rel_laws.pre_convr",
     "\<lceil>?p\<rceil>\<^sub><\<^sup>- = \<lceil>?p\<rceil>\<^sub>>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("utp_rel_laws.RA3", "?P\<^sup>-\<^sup>- = ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)),
       template_var 0)),
    ("utp_rel_laws.convr_invol", "?p\<^sup>-\<^sup>- = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)),
       template_var 0)),
    ("utp_rel_laws.uivar_convr", "$?x\<^sup>- = $?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_rel_laws.uovar_convr", "$?x\<acute>\<^sup>- = $?x",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_expr.lit_fun_simps",
     "\<guillemotleft>?g ?x ?y\<guillemotright> =
      bop ?g \<guillemotleft>?x\<guillemotright>
       \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_var 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_rel_laws.Dom_seq", "Dom (?P ;; ?Q) = Dom (?P ;; ?[Dom ?Q])",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)))))),
    ("utp_dynlog.dBox_seq",
     "\<^bold>[?P ;; ?Q\<^bold>]?\<Phi> =
      \<^bold>[?P\<^bold>]\<^bold>[?Q\<^bold>]?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_dynlog.dDia_seq",
     "\<^bold><?P ;; ?Q\<^bold>>?\<Phi> =
      \<^bold><?P\<^bold>>\<^bold><?Q\<^bold>>?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.all_plus",
     "(\<forall> {?y, ?x} \<bullet> ?P) =
      (\<forall> ?x \<bullet> \<forall> ?y \<bullet> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.inf_left_commute",
     "(?x \<and> ?y \<and> ?z) = (?y \<and> ?x \<and> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.inf_assoc",
     "((?x \<and> ?y) \<and> ?z) = (?x \<and> ?y \<and> ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.sup_left_commute",
     "(?x \<or> ?y \<or> ?z) = (?y \<or> ?x \<or> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.sup_assoc",
     "((?x \<or> ?y) \<or> ?z) = (?x \<or> ?y \<or> ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.ex_plus",
     "(\<exists> {?y, ?x} \<bullet> ?P) =
      (\<exists> ?x \<bullet> \<exists> ?y \<bullet> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_wp.wp_seq_r", "?P ;; ?Q wp ?r = ?P wp (?Q wp ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.UINF_is_exists",
     "(\<Sqinter> x \<bullet> ?P x) = ushEx ?P",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.USUP_is_forall",
     "(\<Squnion> x \<bullet> ?P x) = ushAll ?P",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.conj_assoc",
     "((?P \<and> ?Q) \<and> ?S) = (?P \<and> ?Q \<and> ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.disj_assoc",
     "((?P \<or> ?Q) \<or> ?S) = (?P \<or> ?Q \<or> ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.neg_conj_cancel1",
     "(\<not> ?P \<and> (?P \<or> ?Q)) = (\<not> ?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("utp_pred_laws.neg_conj_cancel2",
     "(\<not> ?Q \<and> (?P \<or> ?Q)) = (\<not> ?Q \<and> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("utp_rel_laws.pre_skip_post",
     "(\<lceil>?b\<rceil>\<^sub>< \<and> II) =
      (II \<and> \<lceil>?b\<rceil>\<^sub>>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 1),
       template_app
        (template_app (template_hole 4, template_hole 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 0)))),
    ("utp_sym_eval.seq_symeval",
     "?\<Gamma> \<Turnstile> ?P ;; ?Q = (?\<Gamma> \<Turnstile> ?P) ;; ?Q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("utp_rel_laws.assigns_power",
     "power.power II (;;) \<langle>?f\<rangle>\<^sub>a ?n =
      \<langle>?f ^^ ?n\<rangle>\<^sub>a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_rel_laws.assigns_subst",
     "\<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger>
      \<langle>?\<rho>\<rangle>\<^sub>a =
      \<langle>?\<rho> o ?\<sigma>\<rangle>\<^sub>a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_concurrency.par_by_merge_commute_swap",
     "?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?Q \<parallel>\<^bsub>swap\<^sub>m ;; ?M\<^esub> ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 2))),
    ("utp_rel_laws.RA1", "?P ;; ?Q ;; ?R = (?P ;; ?Q) ;; ?R",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("utp_rel_laws.seqr_assoc", "(?P ;; ?Q) ;; ?R = ?P ;; ?Q ;; ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_concurrency.U0_seqr",
     "\<lceil>?P ;; ?Q\<rceil>\<^sub>0 = ?P ;; \<lceil>?Q\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_concurrency.U1_seqr",
     "\<lceil>?P ;; ?Q\<rceil>\<^sub>1 = ?P ;; \<lceil>?Q\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_rel_laws.skip_var", "($?x \<and> II) = (II \<and> $?x\<acute>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 4, template_hole 1),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>msubst ?x ?xa\<rbrakk>\<^sub>e =
      (%b. \<lbrakk>?x (\<lbrakk>?xa\<rbrakk>\<^sub>e b)\<rbrakk>\<^sub>e
            b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_pred_laws.sup_neg_inf",
     "((?q \<or> ?r) \<sqsubseteq> ?p) =
      (?r \<sqsubseteq> (?p \<and> \<not> ?q))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("utp_pred_laws.shunt1",
     "(?z \<sqsubseteq> (?x \<and> ?y)) =
      ((\<not> ?y \<or> ?z) \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("utp_pred_laws.shunt2",
     "(?z \<sqsubseteq> (?x \<and> \<not> ?y)) =
      ((?y \<or> ?z) \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.cond_symm",
     "?P \<triangleleft> ?b \<triangleright> ?Q =
      ?Q \<triangleleft> \<not> ?b \<triangleright> ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_var 1))),
    ("utp_meta_subst.msubst_lit_2_1",
     "\<guillemotleft>x\<guillemotright>\<lbrakk>(x,
      y)\<rightarrow>(?u, ?v)\<^sub>u\<rbrakk> =
      ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("utp_meta_subst.msubst_lit_2_2",
     "\<guillemotleft>y\<guillemotright>\<lbrakk>(x,
      y)\<rightarrow>(?u, ?v)\<^sub>u\<rbrakk> =
      ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("utp_pred_laws.UINF_pred_lit_eq",
     "(\<Sqinter> x | \<guillemotleft>x =
?v\<guillemotright> \<bullet> ?P x) =
      ?P ?v",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app (template_var 0, template_var 1))),
    ("utp_pred_laws.uset_mems",
     "(?x \<in>\<^sub>u {?y}\<^sub>u) = (?x =\<^sub>u ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0),
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_rel_laws.upower_seqr_iter",
     "power.power II (;;) ?P ?n = (;; Q : replicate ?n ?P \<bullet> Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         t_empty))),
    ("utp_rel_laws.seq_Sup_distl", "?P ;; \<Or>?A = \<Or>((;;) ?P ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("utp_rel_laws.seq_Sup_distr",
     "\<Or>?A ;; ?Q = \<Or>((%P. P ;; ?Q) ` ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("utp_expr_funcs.tail_cons",
     "tail\<^sub>u(\<langle>?x\<rangle> ^\<^sub>u ?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1),
               template_app (template_hole 1, template_hole 0))),
           template_var 0)),
       template_var 0)),
    ("utp_rel.usubst_upd_in_comp",
     "?\<sigma>(&in\<alpha>:?x \<mapsto>\<^sub>s ?v) = ?\<sigma>($?x 
      \<mapsto>\<^sub>s ?v)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("utp_rel.usubst_upd_out_comp",
     "?\<sigma>(&out\<alpha>:?x \<mapsto>\<^sub>s ?v) = ?\<sigma>
      ($?x\<acute> \<mapsto>\<^sub>s ?v)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<squnion> ?xa\<rbrakk>\<^sub>e =
      (%A. \<lbrakk>?x\<rbrakk>\<^sub>e A \<squnion>
           \<lbrakk>?xa\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<sqinter> ?xa\<rbrakk>\<^sub>e =
      (%A. \<lbrakk>?x\<rbrakk>\<^sub>e A \<sqinter>
           \<lbrakk>?xa\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<Squnion>?x\<rbrakk>\<^sub>e =
      (%A. \<Squnion>P\<in>Rep_uexpr ` ?x. P A)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<Sqinter>?x\<rbrakk>\<^sub>e =
      (%A. \<Sqinter>P\<in>Rep_uexpr ` ?x. P A)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<Leftrightarrow> ?xa\<rbrakk>\<^sub>e =
      (%A. \<lbrakk>?x\<rbrakk>\<^sub>e A =
           \<lbrakk>?xa\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<Rightarrow> ?xa\<rbrakk>\<^sub>e =
      (%A. \<lbrakk>?x\<rbrakk>\<^sub>e A -->
           \<lbrakk>?xa\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_rel_laws.ustar_rep_eq",
     "\<lbrakk>?P\<^sup>\<star>\<rbrakk>\<^sub>e =
      (%b. b : {p. \<lbrakk>?P\<rbrakk>\<^sub>e p}^*)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       t_empty)),
    ("utp_rel.subst_rel_lift_comp",
     "\<lceil>?\<sigma>\<rceil>\<^sub>s o \<lceil>?\<rho>\<rceil>\<^sub>s =
      \<lceil>?\<sigma> o ?\<rho>\<rceil>\<^sub>s",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("utp_expr.uexpr_eq_iff",
     "(?e = ?f) =
      (ALL b.
          \<lbrakk>?e\<rbrakk>\<^sub>e b = \<lbrakk>?f\<rbrakk>\<^sub>e b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("utp_tactics.uexpr_transfer_extra",
     "(?x <= ?xa) =
      (ALL A.
          \<lbrakk>?x\<rbrakk>\<^sub>e A
          <= \<lbrakk>?xa\<rbrakk>\<^sub>e A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("utp_pred.upred_ref_iff",
     "(?P \<sqsubseteq> ?Q) =
      (ALL b.
          \<lbrakk>?Q\<rbrakk>\<^sub>e b -->
          \<lbrakk>?P\<rbrakk>\<^sub>e b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("utp_pred_laws.bdd_above_Un",
     "preorder.bdd_above (<=) (?A Un ?B) =
      (preorder.bdd_above (<=) ?A \<and> preorder.bdd_above (<=) ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("utp_pred_laws.bdd_below_Un",
     "preorder.bdd_below (<=) (?A Un ?B) =
      (preorder.bdd_below (<=) ?A \<and> preorder.bdd_below (<=) ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("utp_pred_laws.bot_eq_sup_iff",
     "(false = (?x \<or> ?y)) = (?x = false \<and> ?y = false)",
     template_bimplication
      (template_equation
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_dunno)),
    ("utp_pred_laws.top_eq_inf_iff",
     "(true = (?x \<and> ?y)) = (?x = true \<and> ?y = true)",
     template_bimplication
      (template_equation
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_dunno)),
    ("utp_pred_laws.inf_eq_top_iff",
     "((?x \<and> ?y) = true) = (?x = true \<and> ?y = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("utp_pred_laws.sup_eq_bot_iff",
     "((?x \<or> ?y) = false) = (?x = false \<and> ?y = false)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("utp_pred_laws.le_inf_iff",
     "((?y \<and> ?z) \<sqsubseteq> ?x) =
      (?y \<sqsubseteq> ?x \<and> ?z \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.le_sup_iff",
     "(?z \<sqsubseteq> (?x \<or> ?y)) =
      (?z \<sqsubseteq> ?x \<and> ?z \<sqsubseteq> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.seqr_true_lemma",
     "(?P = (\<not> (\<not> ?P) ;; true)) = (?P = ?P ;; true)",
     template_bimplication
      (template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)),
             template_hole 0))),
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_pred_laws.upred_eval_taut",
     "`?P\<lbrakk>\<guillemotleft>?b\<guillemotright>/&\<^bold>v\<rbrakk>` =
      \<lbrakk>?P\<rbrakk>\<^sub>e ?b",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_hole 2)),
               template_app (template_hole 1, template_var 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_rel.subst_lift_pre",
     "\<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger>
      \<lceil>?b\<rceil>\<^sub>< =
      \<lceil>?\<sigma> \<dagger> ?b\<rceil>\<^sub><",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("utp_alphabet.aext_plus",
     "(?x + ?y) \<oplus>\<^sub>p ?a =
      ?x \<oplus>\<^sub>p ?a + ?y \<oplus>\<^sub>p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_plus",
     "?\<sigma> \<dagger> (?x + ?y) =
      ?\<sigma> \<dagger> ?x + ?\<sigma> \<dagger> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_expr_insts.mkuexpr_plus",
     "mk\<^sub>e (%s. ?f s + ?g s) = mk\<^sub>e ?f + mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_alphabet.aext_minus",
     "(?x - ?y) \<oplus>\<^sub>p ?a =
      ?x \<oplus>\<^sub>p ?a - ?y \<oplus>\<^sub>p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_minus",
     "?\<sigma> \<dagger> (?x - ?y) =
      ?\<sigma> \<dagger> ?x - ?\<sigma> \<dagger> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_expr_insts.mkuexpr_minus",
     "mk\<^sub>e (%s. ?f s - ?g s) = mk\<^sub>e ?f - mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_alphabet.aext_times",
     "(?x * ?y) \<oplus>\<^sub>p ?a =
      ?x \<oplus>\<^sub>p ?a * ?y \<oplus>\<^sub>p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_times",
     "?\<sigma> \<dagger> (?x * ?y) =
      ?\<sigma> \<dagger> ?x * ?\<sigma> \<dagger> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_expr_insts.mkuexpr_times",
     "mk\<^sub>e (%s. ?f s * ?g s) = mk\<^sub>e ?f * mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_subst.subst_div",
     "?\<sigma> \<dagger> (?x div ?y) =
      ?\<sigma> \<dagger> ?x div ?\<sigma> \<dagger> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_subst.subst_mod",
     "?\<sigma> \<dagger> (?x mod ?y) =
      ?\<sigma> \<dagger> ?x mod ?\<sigma> \<dagger> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_alphabet.aext_divide",
     "(?x / ?y) \<oplus>\<^sub>p ?a =
      ?x \<oplus>\<^sub>p ?a / ?y \<oplus>\<^sub>p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_expr_insts.mkuexpr_divide",
     "mk\<^sub>e (%s. ?f s / ?g s) = mk\<^sub>e ?f / mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred.subst_inf",
     "?\<sigma> \<dagger> (?P \<squnion> ?Q) =
      ?\<sigma> \<dagger> ?P \<squnion> ?\<sigma> \<dagger> ?Q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_sup",
     "?\<sigma> \<dagger> (?P \<sqinter> ?Q) =
      ?\<sigma> \<dagger> ?P \<sqinter> ?\<sigma> \<dagger> ?Q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.UINF_as_Sup_collect'",
     "(\<Sqinter> P \<bullet> ?f P) = \<Sqinter>range ?f",
     template_equation
      (template_app (template_app (template_hole 4, t_empty), t_empty),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("utp_pred_laws.USUP_as_Inf_collect'",
     "(\<Squnion> P \<bullet> ?f P) = \<Squnion>range ?f",
     template_equation
      (template_app (template_app (template_hole 4, t_empty), t_empty),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("utp_pred_laws.UINF_as_Sup",
     "(\<Sqinter> P \<in> ?\<P> \<bullet> P) = \<Sqinter>?\<P>",
     template_equation
      (template_app (template_app (template_hole 5, t_empty), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.USUP_as_Inf",
     "(\<Squnion> P \<in> ?\<P> \<bullet> P) = \<Squnion>?\<P>",
     template_equation
      (template_app (template_app (template_hole 5, t_empty), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_alphabet.aext_ulambda",
     "ulambda ?P \<oplus>\<^sub>p ?a =
      (\<lambda> x \<bullet> ?P x \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("utp_subst.usubst_ulambda",
     "?\<sigma> \<dagger> ulambda ?P =
      (\<lambda> x \<bullet> ?\<sigma> \<dagger> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("utp_dynlog.dBox_star_unfold",
     "\<^bold>[?P\<^sup>\<star>\<^bold>]?\<Phi> =
      (?\<Phi> \<and>
       \<^bold>[?P\<^bold>]\<^bold>[?P\<^sup>\<star>\<^bold>]?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))))),
    ("utp_alphabet.aext_upred_eq",
     "(?e =\<^sub>u ?f) \<oplus>\<^sub>p ?a =
      (?e \<oplus>\<^sub>p ?a =\<^sub>u ?f \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_and",
     "(?P \<and> ?Q) \<oplus>\<^sub>p ?x =
      (?P \<oplus>\<^sub>p ?x \<and> ?Q \<oplus>\<^sub>p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_or",
     "(?P \<or> ?Q) \<oplus>\<^sub>p ?x =
      (?P \<oplus>\<^sub>p ?x \<or> ?Q \<oplus>\<^sub>p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_iff",
     "(?P \<Leftrightarrow> ?Q) \<oplus>\<^sub>p ?x =
      (?P \<oplus>\<^sub>p ?x \<Leftrightarrow> ?Q \<oplus>\<^sub>p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_imp",
     "(?P \<Rightarrow> ?Q) \<oplus>\<^sub>p ?x =
      (?P \<oplus>\<^sub>p ?x \<Rightarrow> ?Q \<oplus>\<^sub>p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.arestr_and",
     "(?P \<and> ?Q) \<restriction>\<^sub>e ?x =
      (?P \<restriction>\<^sub>e ?x \<and> ?Q \<restriction>\<^sub>e ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.arestr_or",
     "(?P \<or> ?Q) \<restriction>\<^sub>e ?x =
      (?P \<restriction>\<^sub>e ?x \<or> ?Q \<restriction>\<^sub>e ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.arestr_imp",
     "(?P \<Rightarrow> ?Q) \<restriction>\<^sub>e ?x =
      (?P \<restriction>\<^sub>e ?x \<Rightarrow>
       ?Q \<restriction>\<^sub>e ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.upred_arestr_or",
     "(?P \<or> ?Q) \<restriction>\<^sub>p ?x =
      (?P \<restriction>\<^sub>p ?x \<or> ?Q \<restriction>\<^sub>p ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_dynlog.dBox_choice",
     "\<^bold>[?P \<sqinter> ?Q\<^bold>]?\<Phi> =
      (\<^bold>[?P\<^bold>]?\<Phi> \<and> \<^bold>[?Q\<^bold>]?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_dynlog.dDia_choice",
     "\<^bold><?P \<sqinter> ?Q\<^bold>>?\<Phi> =
      (\<^bold><?P\<^bold>>?\<Phi> \<or> \<^bold><?Q\<^bold>>?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.inf_sup_distrib1",
     "(?x \<and> (?y \<or> ?z)) = (?x \<and> ?y \<or> ?x \<and> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.inf_sup_distrib2",
     "((?y \<or> ?z) \<and> ?x) = (?y \<and> ?x \<or> ?z \<and> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.sup_inf_distrib1",
     "(?x \<or> ?y \<and> ?z) = ((?x \<or> ?y) \<and> (?x \<or> ?z))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.sup_inf_distrib2",
     "(?y \<and> ?z \<or> ?x) = ((?y \<or> ?x) \<and> (?z \<or> ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_eq_upred",
     "?\<sigma> \<dagger> (?x =\<^sub>u ?y) =
      (?\<sigma> \<dagger> ?x =\<^sub>u ?\<sigma> \<dagger> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_conj",
     "?\<sigma> \<dagger> (?P \<and> ?Q) =
      (?\<sigma> \<dagger> ?P \<and> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_disj",
     "?\<sigma> \<dagger> (?P \<or> ?Q) =
      (?\<sigma> \<dagger> ?P \<or> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_iff",
     "?\<sigma> \<dagger> (?P \<Leftrightarrow> ?Q) =
      (?\<sigma> \<dagger> ?P \<Leftrightarrow> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_impl",
     "?\<sigma> \<dagger> (?P \<Rightarrow> ?Q) =
      (?\<sigma> \<dagger> ?P \<Rightarrow> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_wp.wp_conj", "?P wp (?q \<and> ?r) = (?P wp ?q \<and> ?P wp ?r)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_wp.wp_choice",
     "?P \<sqinter> ?Q wp ?R = (?P wp ?R \<and> ?Q wp ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_alphabet.aext_shAll",
     "ushAll ?P \<oplus>\<^sub>p ?a =
      (\<^bold>\<forall> x \<bullet> ?P x \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.msubst_not",
     "(\<not> ?P x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (\<not> msubst ?P ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred_laws.shEx_lift_conj_2",
     "(?P \<and> ushEx ?Q) =
      (\<^bold>\<exists> x \<bullet> ?P \<and> ?Q x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.shEx_lift_conj_1",
     "(ushEx ?P \<and> ?Q) =
      (\<^bold>\<exists> x \<bullet> ?P x \<and> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.subst_shAll",
     "?\<sigma> \<dagger> ushAll ?P =
      (\<^bold>\<forall> x \<bullet> ?\<sigma> \<dagger> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.subst_shEx",
     "?\<sigma> \<dagger> ushEx ?P =
      (\<^bold>\<exists> x \<bullet> ?\<sigma> \<dagger> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.cond_conj_not",
     "(?P \<triangleleft> ?b \<triangleright> ?Q \<and> \<not> ?b) =
      (?Q \<and> \<not> ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 2)),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("utp_pred_laws.UINF_empty",
     "(\<Sqinter> i | \<guillemotleft>i\<guillemotright> \<in>\<^sub>u
                      {}\<^sub>u \<bullet> ?P i) =
      false",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.USUP_empty",
     "(\<Squnion> i | \<guillemotleft>i\<guillemotright> \<in>\<^sub>u
                      {}\<^sub>u \<bullet> ?P i) =
      true",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.conj_disj_distr",
     "(?P \<and> (?Q \<or> ?R)) = (?P \<and> ?Q \<or> ?P \<and> ?R)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.disj_conj_distr",
     "(?P \<or> ?Q \<and> ?R) = ((?P \<or> ?Q) \<and> (?P \<or> ?R))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_rel.RID_disj",
     "RID ?x (?P \<or> ?Q) = (RID ?x ?P \<or> RID ?x ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_rel_laws.antiframe_disj",
     "({?x}:\<lbrakk>?P\<rbrakk> \<or> {?x}:\<lbrakk>?Q\<rbrakk>) =
      {?x}:\<lbrakk>?P \<or> ?Q\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.seqr_inf_distr",
     "?P ;; ?Q \<sqinter> ?R = (?P ;; ?Q) \<sqinter> (?P ;; ?R)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_rel_laws.seqr_or_distr",
     "?P ;; (?Q \<or> ?R) = (?P ;; ?Q \<or> ?P ;; ?R)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_rel_laws.seqr_inf_distl",
     "?P \<sqinter> ?Q ;; ?R = (?P ;; ?R) \<sqinter> (?Q ;; ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.RA6", "(?P \<or> ?Q) ;; ?R = (?P ;; ?R \<or> ?Q ;; ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.not_convr", "(\<not> ?p)\<^sup>- = (\<not> ?p\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("utp_rel_laws.seqr_exists_right",
     "?P ;; (\<exists> $?x\<acute> \<bullet> ?Q) =
      (\<exists> $?x\<acute> \<bullet> ?P ;; ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("utp_rel_laws.shEx_lift_seq_2",
     "?P ;; ushEx ?Q = (\<^bold>\<exists> x \<bullet> ?P ;; ?Q x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_concurrency.par_by_merge_seq_add",
     "?P \<parallel>\<^bsub>?M\<^esub> ?Q ;; ?R =
      ?P \<parallel>\<^bsub>?M ;; ?R\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("utp_rel_laws.seqr_exists_left",
     "(\<exists> $?x \<bullet> ?P) ;; ?Q =
      (\<exists> $?x \<bullet> ?P ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.shEx_lift_seq_1",
     "ushEx ?P ;; ?Q = (\<^bold>\<exists> x \<bullet> ?P x ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_var.get_lens_plus",
     "get\<^bsub>?x +\<^sub>L ?y\<^esub> ?s =
      (get\<^bsub>?x\<^esub> ?s, get\<^bsub>?y\<^esub> ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_expr.bop_ueval",
     "\<lbrakk>bop ?f ?x ?y\<rbrakk>\<^sub>e ?b =
      ?f (\<lbrakk>?x\<rbrakk>\<^sub>e ?b)
       (\<lbrakk>?y\<rbrakk>\<^sub>e ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_var 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>bop ?x ?xa ?xb\<rbrakk>\<^sub>e =
      (%b. ?x (\<lbrakk>?xa\<rbrakk>\<^sub>e b)
            (\<lbrakk>?xb\<rbrakk>\<^sub>e b))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<forall> ?x \<bullet> ?xa\<rbrakk>\<^sub>e =
      (%b. ALL v.
              \<lbrakk>?xa\<rbrakk>\<^sub>e (put\<^bsub>?x\<^esub> b v))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>\<exists> ?x \<bullet> ?xa\<rbrakk>\<^sub>e =
      (%b. EX v. \<lbrakk>?xa\<rbrakk>\<^sub>e
                  (put\<^bsub>?x\<^esub> b v))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x \<restriction>\<^sub>v ?xa\<rbrakk>\<^sub>e =
      (%b. EX b'.
              \<lbrakk>?x\<rbrakk>\<^sub>e
               (b' \<triangleleft>\<^bsub>?xa\<^esub> b))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("utp_pred_laws.atLeastAtMost_eq_UNIV_iff",
     "(ord.atLeastAtMost (<=) ?x ?y = UNIV) =
      (?x = false \<and> ?y = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1),
           template_var 0),
         template_hole 4),
       template_dunno)),
    ("utp_pred_laws.conditional_iff",
     "((?P \<Rightarrow> ?Q) = (?P \<Rightarrow> ?R)) =
      `?P \<Rightarrow> ?Q \<Leftrightarrow> ?R`",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("utp_expr.lit_fun_simps",
     "\<guillemotleft>?h ?x ?y ?z\<guillemotright> =
      trop ?h \<guillemotleft>?x\<guillemotright>
       \<guillemotleft>?y\<guillemotright>
       \<guillemotleft>?z\<guillemotright>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_var 3, template_var 2), template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_rel_laws.while_bot_unfold",
     "while\<^sub>\<bottom> ?b do ?P od =
      ?P ;;
      while\<^sub>\<bottom> ?b do ?P od \<triangleleft> ?b \<triangleright>\<^sub>r
         II",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("utp_rel_laws.while_unfold",
     "while\<^sup>\<top> ?b do ?P od =
      ?P ;;
      while\<^sup>\<top> ?b do ?P od \<triangleleft> ?b \<triangleright>\<^sub>r
         II",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("utp_rel_laws.assigns_cond",
     "\<langle>?f\<rangle>\<^sub>a \<triangleleft> ?b \<triangleright>\<^sub>r
         \<langle>?g\<rangle>\<^sub>a =
      \<langle>?f \<triangleleft> ?b \<triangleright>\<^sub>s
                  ?g\<rangle>\<^sub>a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("utp_expr_insts.mkuexpr_pair",
     "mk\<^sub>e (%s. (?f s, ?g s)) =
      (mk\<^sub>e ?f, mk\<^sub>e ?g)\<^sub>u",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 3),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_var.var_update_in",
     "put\<^bsub>$?x\<^esub> (?A, ?A') ?v =
      (put\<^bsub>?x\<^esub> ?A ?v, ?A')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)),
         template_var 1))),
    ("utp_var.var_update_out",
     "put\<^bsub>$?x\<acute>\<^esub> (?A, ?A') ?v =
      (?A, put\<^bsub>?x\<^esub> ?A' ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("utp_subst.subst_upd_comp",
     "?\<rho>(?x \<mapsto>\<^sub>s ?v) o ?\<sigma> = (?\<rho> o ?\<sigma>)
      (?x \<mapsto>\<^sub>s ?\<sigma> \<dagger> ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_alphabet.aext_bop",
     "bop ?f ?u ?v \<oplus>\<^sub>p ?a =
      bop ?f (?u \<oplus>\<^sub>p ?a) (?v \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_bop",
     "?\<sigma> \<dagger> bop ?f ?u ?v =
      bop ?f (?\<sigma> \<dagger> ?u) (?\<sigma> \<dagger> ?v)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("utp_meta_subst.msubst_uop",
     "uop ?f (?v x)\<lbrakk>x\<rightarrow>?u\<rbrakk> =
      uop ?f (msubst ?v ?u)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("utp_pred_laws.cond_L6",
     "?P \<triangleleft> ?b \<triangleright>
         (?Q \<triangleleft> ?b \<triangleright> ?R) =
      ?P \<triangleleft> ?b \<triangleright> ?R",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 3),
           template_var 2),
         template_var 0))),
    ("utp_rel_laws.uop_convr", "uop ?f ?u\<^sup>- = uop ?f (?u\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2))))),
    ("utp_pred_laws.UINF_pred_ueq",
     "(\<Sqinter> x | \<guillemotleft>x\<guillemotright> =\<^sub>u
                      ?v \<bullet> ?P x) =
      msubst ?P ?v",
     template_equation
      (template_app (template_app (template_hole 3, t_empty), t_empty),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("utp_expr_funcs.uunion_insert",
     "insert\<^sub>u ?x ?A \<union>\<^sub>u ?B =
      insert\<^sub>u ?x (?A \<union>\<^sub>u ?B)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)))),
    ("utp_pred_laws.impl_adjoin",
     "((?P \<Rightarrow> ?Q) \<and> ?R) =
      ((?P \<and> ?R \<Rightarrow> ?Q \<and> ?R) \<and> ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0))),
    ("utp_pred_laws.not_UINF_ind",
     "(\<not> (\<Sqinter> i \<bullet> ?P i)) =
      (\<Squnion> i \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 3,
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.not_USUP_ind",
     "(\<not> (\<Squnion> i \<bullet> ?P i)) =
      (\<Sqinter> i \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 3,
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.shEx_commute",
     "(\<^bold>\<exists> x \<bullet> ushEx (?P x)) =
      (\<^bold>\<exists> y \<bullet> \<^bold>\<exists> x \<bullet> ?P x y)",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.shEx_one_point",
     "(\<^bold>\<exists> x \<bullet> \<guillemotleft>x\<guillemotright> =\<^sub>u
                                     ?v \<and>
                                     ?P x) =
      msubst ?P ?v",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("utp_rel_laws.while_star_form",
     "while\<^sup>\<top> ?b do ?P od =
      (?P \<triangleleft> ?b \<triangleright>\<^sub>r II)\<^sup>\<star> ;;
      ?[\<not> ?b]",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 1)),
                 template_var 0),
               template_hole 2))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("utp_rel_laws.skip_ra_unfold",
     "II\<^bsub>?x +\<^sub>L ?y\<^esub> =
      ($?x\<acute> =\<^sub>u $?x \<and> II\<^bsub>?y\<^esub>)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 1)))),
         template_app (template_hole 0, template_var 0)))),
    ("utp_concurrency.shEx_pbm_right",
     "?P \<parallel>\<^bsub>?M\<^esub> ushEx ?Q =
      (\<^bold>\<exists> x \<bullet> ?P \<parallel>\<^bsub>?M\<^esub> ?Q
                                 x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_concurrency.shEx_pbm_left",
     "ushEx ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      (\<^bold>\<exists> x \<bullet> ?P
x \<parallel>\<^bsub>?M\<^esub> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 1),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_rel_laws.seqr_pre_transfer'",
     "(?P \<and> \<lceil>?q\<rceil>\<^sub>>) ;; ?R =
      ?P ;; (\<lceil>?q\<rceil>\<^sub>< \<and> ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)))),
    ("utp_rel.subst_rel_lift_seq",
     "\<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger> (?P ;; ?Q) =
      \<lceil>?\<sigma>\<rceil>\<^sub>s \<dagger> ?P ;; ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 1)),
         template_var 0))),
    ("utp_rel_laws.seqr_post_var_out",
     "?P ;; (?Q \<and> $?x\<acute>) = (?P ;; ?Q \<and> $?x\<acute>)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("utp_rel_laws.seqr_pre_var_out",
     "($?x \<and> ?P) ;; ?Q = ($?x \<and> ?P ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_var 0)))),
    ("utp_rel.subst_drop_upd",
     "\<lfloor>?\<sigma>($?x \<mapsto>\<^sub>s ?v)\<rfloor>\<^sub>s =
      \<lfloor>?\<sigma>\<rfloor>\<^sub>s(?x \<mapsto>\<^sub>s
      \<lfloor>?v\<rfloor>\<^sub><)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app (template_hole 4, template_var 1)),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_hole 3)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_rel.subst_lift_upd",
     "\<lceil>?\<sigma>(?x \<mapsto>\<^sub>s ?v)\<rceil>\<^sub>s =
      \<lceil>?\<sigma>\<rceil>\<^sub>s($?x \<mapsto>\<^sub>s
      \<lceil>?v\<rceil>\<^sub><)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_hole 4)),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_pred_laws.UINF_as_Sup_image",
     "(\<Sqinter> P \<in> ?A \<bullet> ?f P) = \<Sqinter>(?f ` ?A)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.USUP_as_Inf_image",
     "(\<Squnion> P \<in> ?\<P> \<bullet> ?f P) = \<Squnion>(?f ` ?\<P>)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_rel_laws.iter_seqr_cons",
     "seqr_iter (?x # ?xs) ?P = ?P ?x ;; seqr_iter ?xs ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("utp_concurrency.par_by_merge_choice_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (?Q \<sqinter> ?R) =
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q \<sqinter>
      ?P \<parallel>\<^bsub>?M\<^esub> ?R",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_or_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (?Q \<or> ?R) =
      (?P \<parallel>\<^bsub>?M\<^esub> ?Q \<or>
       ?P \<parallel>\<^bsub>?M\<^esub> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_choice_left",
     "(?P \<sqinter> ?Q) \<parallel>\<^bsub>?M\<^esub> ?R =
      ?P \<parallel>\<^bsub>?M\<^esub> ?R \<sqinter>
      ?Q \<parallel>\<^bsub>?M\<^esub> ?R",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_or_left",
     "(?P \<or> ?Q) \<parallel>\<^bsub>?M\<^esub> ?R =
      (?P \<parallel>\<^bsub>?M\<^esub> ?R \<or>
       ?Q \<parallel>\<^bsub>?M\<^esub> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("utp_rel_laws.RA7",
     "(?P\<^sup>- ;; (\<not> ?P ;; ?Q) \<or> \<not> ?Q) = (\<not> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_rel_laws.upower_rep_eq",
     "\<lbrakk>power.power II (;;) ?P ?i\<rbrakk>\<^sub>e =
      (%b. b : {p. \<lbrakk>?P\<rbrakk>\<^sub>e p} ^^ ?i)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_var 1),
           template_var 0)),
       t_empty)),
    ("utp_expr.lit_fun_simps",
     "\<guillemotleft>?i ?x ?y ?z ?u\<guillemotright> =
      qtop ?i \<guillemotleft>?x\<guillemotright>
       \<guillemotleft>?y\<guillemotright>
       \<guillemotleft>?z\<guillemotright>
       \<guillemotleft>?u\<guillemotright>",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app (template_var 4, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app (template_hole 3, template_var 3)),
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.cond_conj",
     "?P \<triangleleft> ?b \<and> ?c \<triangleright> ?Q =
      ?P \<triangleleft> ?c \<triangleright>
         ?Q \<triangleleft> ?b \<triangleright>
         ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("utp_pred_laws.cond_L7",
     "?P \<triangleleft> ?b \<triangleright>
         (?P \<triangleleft> ?c \<triangleright> ?Q) =
      ?P \<triangleleft> ?b \<or> ?c \<triangleright> ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("utp_alphabet.aext_UINF_ind",
     "(\<Sqinter> x \<bullet> ?P x) \<oplus>\<^sub>p ?a =
      (\<Sqinter> x \<bullet> ?P x \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app (template_app (template_hole 3, t_empty), t_empty)),
         template_var 0),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred_laws.uset_mems",
     "(?x \<in>\<^sub>u ?A \<inter>\<^sub>u ?B) =
      (?x \<in>\<^sub>u ?A \<and> ?x \<in>\<^sub>u ?B)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.uset_mems",
     "(?x \<in>\<^sub>u ?A \<union>\<^sub>u ?B) =
      (?x \<in>\<^sub>u ?A \<or> ?x \<in>\<^sub>u ?B)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.uset_laws",
     "(?x \<in>\<^sub>u {?m..?n}\<^sub>u) =
      (?m \<le>\<^sub>u ?x \<and> ?x \<le>\<^sub>u ?n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_conj_distr",
     "(?P \<and> ?Q \<triangleleft> ?b \<triangleright> ?S) =
      (?P \<and> ?Q) \<triangleleft> ?b \<triangleright> (?P \<and> ?S)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("utp_pred_laws.cond_disj_distr",
     "(?P \<or> ?Q \<triangleleft> ?b \<triangleright> ?S) =
      (?P \<or> ?Q) \<triangleleft> ?b \<triangleright> (?P \<or> ?S)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("utp_pred_laws.spec_cond_dist",
     "(?P \<Rightarrow> ?Q \<triangleleft> ?b \<triangleright> ?R) =
      (?P \<Rightarrow> ?Q) \<triangleleft> ?b \<triangleright>
         (?P \<Rightarrow> ?R)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("utp_pred.msubst_shAll",
     "(\<^bold>\<forall> x \<bullet> ?P x
y)\<lbrakk>y\<rightarrow>?v\<rbrakk> =
      (\<^bold>\<forall> x \<bullet> msubst (?P x) ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.conj_UINF_ind_dist",
     "(?P \<and> (\<Sqinter> Q \<bullet> ?F Q)) =
      (\<Sqinter> Q \<bullet> ?P \<and> ?F Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_app (template_hole 1, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred_laws.cond_and_T_integrate",
     "(?P \<and> ?b \<or> ?Q \<triangleleft> ?b \<triangleright> ?R) =
      (?P \<or> ?Q) \<triangleleft> ?b \<triangleright> ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_var 0))),
    ("utp_rel_laws.rcond_rassume_expand",
     "?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q =
      (?[?b] ;; ?P) \<sqinter> (?[\<not> ?b] ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 0)))),
    ("utp_rel_laws.seq_SUP_distl",
     "?P ;; \<Or>(?Q ` ?A) = \<Or>((%i. ?P ;; ?Q i) ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("utp_rel_laws.seq_UINF_distl'",
     "?P ;; (\<Sqinter> Q \<bullet> ?F Q) =
      (\<Sqinter> Q \<bullet> ?P ;; ?F Q)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_app (template_hole 3, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_rel_laws.seq_SUP_distr",
     "\<Or>(?P ` ?A) ;; ?Q = \<Or>((%i. ?P i ;; ?Q) ` ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("utp_rel_laws.seq_UINF_distr'",
     "(\<Sqinter> P \<bullet> ?F P) ;; ?Q =
      (\<Sqinter> P \<bullet> ?F P ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app (template_app (template_hole 3, t_empty), t_empty)),
         template_var 0),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_hoare.approx_chain",
     "\<Or>range
            (%n. \<lceil>?p \<and>
                         ?v <\<^sub>u
                         \<guillemotleft>n\<guillemotright>\<rceil>\<^sub><) =
      \<lceil>?p\<rceil>\<^sub><",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty), template_hole 0)),
       template_app
        (template_app (template_hole 6, template_var 1), template_hole 1))),
    ("utp_expr.trop_ueval",
     "\<lbrakk>trop ?f ?x ?y ?z\<rbrakk>\<^sub>e ?b =
      ?f (\<lbrakk>?x\<rbrakk>\<^sub>e ?b) (\<lbrakk>?y\<rbrakk>\<^sub>e ?b)
       (\<lbrakk>?z\<rbrakk>\<^sub>e ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_var 4,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.Sup_power_expand",
     "?P 0 \<sqinter> (\<Sqinter>i. ?P (i + 1)) = \<Sqinter>range ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_var 0, template_hole 5)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>trop ?x ?xa ?xb ?xc\<rbrakk>\<^sub>e =
      (%b. ?x (\<lbrakk>?xa\<rbrakk>\<^sub>e b)
            (\<lbrakk>?xb\<rbrakk>\<^sub>e b)
            (\<lbrakk>?xc\<rbrakk>\<^sub>e b))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       t_empty)),
    ("utp_rel_laws.upower_rep_eq_alt",
     "\<lbrakk>power.power \<langle>id\<rangle>\<^sub>a (;;) ?P
                ?i\<rbrakk>\<^sub>e =
      (%b. b : {p. \<lbrakk>?P\<rbrakk>\<^sub>e p} ^^ ?i)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4)),
               template_hole 3),
             template_var 1),
           template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_transfer_extra",
     "(?x \<sharp> ?xa) =
      (ALL b v.
          \<lbrakk>?xa\<rbrakk>\<^sub>e (put\<^bsub>?x\<^esub> b v) =
          \<lbrakk>?xa\<rbrakk>\<^sub>e b)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("utp_tactics.uexpr_transfer_extra",
     "(?x \<natural> ?xa) =
      (ALL b b'.
          \<lbrakk>?xa\<rbrakk>\<^sub>e
           (b' \<triangleleft>\<^bsub>?x\<^esub> b) =
          \<lbrakk>?xa\<rbrakk>\<^sub>e b)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("utp_pred_laws.UINF_as_Sup_collect",
     "(\<Sqinter> P \<in> ?A \<bullet> ?f P) = \<Sqinter>(?f ` ?A)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("utp_pred_laws.UINF_mem_UNIV",
     "(\<Sqinter> x \<in> UNIV \<bullet> ?P x) =
      (\<Sqinter> x \<bullet> ?P x)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.USUP_as_Inf_collect",
     "(\<Squnion> P \<in> ?A \<bullet> ?f P) = \<Squnion>(?f ` ?A)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("utp_pred_laws.USUP_mem_UNIV",
     "(\<Squnion> x \<in> UNIV \<bullet> ?P x) =
      (\<Squnion> x \<bullet> ?P x)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_rel_laws.assign_r_comp",
     "?x := ?u ;; ?P = ?P\<lbrakk>\<lceil>?u\<rceil>\<^sub></$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app (template_hole 6, template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("utp_subst.subst_upd_lens_plus",
     "?\<sigma>(?x +\<^sub>L ?y \<mapsto>\<^sub>s
      \<guillemotleft>(?u, ?v)\<guillemotright>) = ?\<sigma>(?y 
      \<mapsto>\<^sub>s \<guillemotleft>?v\<guillemotright>, ?x 
      \<mapsto>\<^sub>s \<guillemotleft>?u\<guillemotright>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_app (template_hole 1, template_var 0))),
           template_var 3),
         template_app (template_hole 0, template_var 1)))),
    ("utp_subst.usubst_upd_comm_dash",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s ?v, $?x \<mapsto>\<^sub>s
      ?u) = ?\<sigma>($?x \<mapsto>\<^sub>s ?u, $?x\<acute> 
      \<mapsto>\<^sub>s ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 2)),
               template_var 1)),
           template_app (template_hole 0, template_var 2)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 0, template_var 2)),
               template_var 0)),
           template_app (template_hole 1, template_var 2)),
         template_var 1))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>?x ;; ?xa\<rbrakk>\<^sub>e =
      (%b. b : {p. \<lbrakk>?x\<rbrakk>\<^sub>e p} O
               {q. \<lbrakk>?xa\<rbrakk>\<^sub>e q})",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       t_empty)),
    ("utp_alphabet.aext_trop",
     "trop ?f ?u ?v ?w \<oplus>\<^sub>p ?a =
      trop ?f (?u \<oplus>\<^sub>p ?a) (?v \<oplus>\<^sub>p ?a)
       (?w \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_rel.aext_cond",
     "(?P \<triangleleft> ?b \<triangleright> ?Q) \<oplus>\<^sub>p ?a =
      ?P \<oplus>\<^sub>p
      ?a \<triangleleft> ?b \<oplus>\<^sub>p ?a \<triangleright>
         ?Q \<oplus>\<^sub>p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_trop",
     "?\<sigma> \<dagger> trop ?f ?u ?v ?w =
      trop ?f (?\<sigma> \<dagger> ?u) (?\<sigma> \<dagger> ?v)
       (?\<sigma> \<dagger> ?w)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 0)))),
    ("utp_rel.usubst_condr",
     "?\<sigma> \<dagger> (?P \<triangleleft> ?b \<triangleright> ?Q) =
      ?\<sigma> \<dagger>
      ?P \<triangleleft> ?\<sigma> \<dagger> ?b \<triangleright>
         ?\<sigma> \<dagger> ?Q",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_var 0)))),
    ("utp_subst.subst_case_prod",
     "?\<sigma> \<dagger> (case ?v of (x, y) => ?P x y) =
      (case ?v of (x, y) => ?\<sigma> \<dagger> ?P x y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("utp_pred_laws.subst_continuous",
     "?\<sigma> \<dagger> \<Sqinter>?A =
      \<Sqinter>{uu_. EX P. uu_ = ?\<sigma> \<dagger> P \<and> P : ?A}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("utp_pred.msubst_not_2",
     "(\<not> ?P x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (\<not> ?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_rel_laws.eq_convr",
     "(?p =\<^sub>u ?q)\<^sup>- = (?p\<^sup>- =\<^sub>u ?q\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2))))),
    ("utp_rel_laws.conj_convr",
     "(?p \<and> ?q)\<^sup>- = (?q\<^sup>- \<and> ?p\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("utp_rel_laws.RA5",
     "(?P \<or> ?Q)\<^sup>- = (?P\<^sup>- \<or> ?Q\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("utp_rel_laws.disj_convr",
     "(?p \<or> ?q)\<^sup>- = (?q\<^sup>- \<or> ?p\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1))))),
    ("utp_rel_laws.RA4", "(?P ;; ?Q)\<^sup>- = ?Q\<^sup>- ;; ?P\<^sup>-",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 11, template_hole 10),
           template_hole 9)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("utp_rel_laws.seqr_convr",
     "(?p ;; ?q)\<^sup>- = ?q\<^sup>- ;; ?p\<^sup>-",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 11, template_hole 10),
           template_hole 9)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("utp_rel_laws.comp_cond_left_distr",
     "(?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q) ;; ?R =
      ?P ;; ?R \<triangleleft> ?b \<triangleright>\<^sub>r ?Q ;; ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 3)),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 3),
             template_app (template_hole 0, template_var 3)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_USUP_ind_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (\<Sqinter> i \<bullet> ?Q i) =
      (\<Sqinter> i \<bullet> ?P \<parallel>\<^bsub>?M\<^esub> ?Q i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_app (template_hole 3, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_concurrency.par_by_merge_USUP_ind_left",
     "(\<Sqinter> i \<bullet> ?P i) \<parallel>\<^bsub>?M\<^esub> ?Q =
      (\<Sqinter> i \<bullet> ?P i \<parallel>\<^bsub>?M\<^esub> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), t_empty)),
           template_var 1),
         template_var 0),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred.msubst_conj",
     "(?P x \<and> ?Q x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (msubst ?P ?v \<and> msubst ?Q ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred.msubst_disj",
     "(?P x \<or> ?Q x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (msubst ?P ?v \<or> msubst ?Q ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred.msubst_implies",
     "(?P x \<Rightarrow> ?Q x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (msubst ?P ?v \<Rightarrow> msubst ?Q ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred_laws.cond_assoc",
     "?P \<triangleleft> ?b \<triangleright>
         ?Q \<triangleleft> ?c \<triangleright>
         ?R =
      ?P \<triangleleft> ?b \<and> ?c \<triangleright>
         (?Q \<triangleleft> ?c \<triangleright> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 1),
           template_var 0)))),
    ("utp_meta_subst.msubst_uop_2",
     "uop ?f (?v x y)\<lbrakk>(x, y)\<rightarrow>?u\<rbrakk> =
      uop ?f (?v x y\<lbrakk>(x, y)\<rightarrow>?u\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1, template_app (template_hole 0, t_empty)),
           template_var 0)))),
    ("utp_meta_subst.msubst_pair",
     "?P x y\<lbrakk>(x, y)\<rightarrow>(?e, ?f)\<^sub>u\<rbrakk> =
      ?P x
       y\<lbrakk>x\<rightarrow>?e\<rbrakk>\<lbrakk>y\<rightarrow>?f\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("utp_rel_laws.bop_convr",
     "bop ?f ?u ?v\<^sup>- = bop ?f (?u\<^sup>-) (?v\<^sup>-)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_hole 3)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3))))),
    ("utp_pred.subst_UINF",
     "?\<sigma> \<dagger> UINF ?P ?Q =
      (\<Sqinter> i | ?\<sigma> \<dagger>
                      ?P i \<bullet> ?\<sigma> \<dagger> ?Q i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred.subst_USUP",
     "?\<sigma> \<dagger> USUP ?P ?Q =
      (\<Squnion> i | ?\<sigma> \<dagger>
                      ?P i \<bullet> ?\<sigma> \<dagger> ?Q i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_wp.wp_cond",
     "(?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q) wp ?r =
      ((?b \<Rightarrow> ?P wp ?r) \<and>
       (\<not> ?b \<Rightarrow> ?Q wp ?r))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 3)),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))))),
    ("utp_pred_laws.cond_and_distr",
     "(?P \<and> ?Q) \<triangleleft> ?b \<triangleright> (?R \<and> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<and>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_or_distr",
     "(?P \<or> ?Q) \<triangleleft> ?b \<triangleright> (?R \<or> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<or>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_eq_distr",
     "(?P \<Leftrightarrow> ?Q) \<triangleleft> ?b \<triangleright>
         (?R \<Leftrightarrow> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<Leftrightarrow>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_imp_distr",
     "(?P \<Rightarrow> ?Q) \<triangleleft> ?b \<triangleright>
         (?R \<Rightarrow> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<Rightarrow>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.conj_conds",
     "(?P1.0 \<triangleleft> ?b \<triangleright> ?Q1.0 \<and>
       ?P2.0 \<triangleleft> ?b \<triangleright> ?Q2.0) =
      (?P1.0 \<and> ?P2.0) \<triangleleft> ?b \<triangleright>
         (?Q1.0 \<and> ?Q2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.disj_conds",
     "(?P1.0 \<triangleleft> ?b \<triangleright> ?Q1.0 \<or>
       ?P2.0 \<triangleleft> ?b \<triangleright> ?Q2.0) =
      (?P1.0 \<or> ?P2.0) \<triangleleft> ?b \<triangleright>
         (?Q1.0 \<or> ?Q2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_rel.bool_seqr_laws",
     "?\<sigma>($?x \<mapsto>\<^sub>s true) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P\<lbrakk>true/$?x\<rbrakk> ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 2)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_rel.zero_one_seqr_laws",
     "?\<sigma>($?x \<mapsto>\<^sub>s 0) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P\<lbrakk>0/$?x\<rbrakk> ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 2)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_rel.bool_seqr_laws",
     "?\<sigma>($?x \<mapsto>\<^sub>s false) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P\<lbrakk>false/$?x\<rbrakk> ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 2)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_rel.zero_one_seqr_laws",
     "?\<sigma>($?x \<mapsto>\<^sub>s 1) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P\<lbrakk>1/$?x\<rbrakk> ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 2)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_rel.bool_seqr_laws",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s true) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P ;; ?Q\<lbrakk>true/$?x\<acute>\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_rel.zero_one_seqr_laws",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s 0) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P ;; ?Q\<lbrakk>0/$?x\<acute>\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_rel.bool_seqr_laws",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s false) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P ;; ?Q\<lbrakk>false/$?x\<acute>\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_rel.zero_one_seqr_laws",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s 1) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P ;; ?Q\<lbrakk>1/$?x\<acute>\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 3),
               template_app (template_hole 7, template_var 2)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 3),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_pred_laws.subst_eq_replace",
     "(?p\<lbrakk>?u/?x\<rbrakk> \<and> ?u =\<^sub>u ?v) =
      (?p\<lbrakk>?v/?x\<rbrakk> \<and> ?u =\<^sub>u ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_rel.rel_aext_cond",
     "(?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q) \<oplus>\<^sub>r
      ?a =
      ?P \<oplus>\<^sub>r
      ?a \<triangleleft> ?b \<oplus>\<^sub>p ?a \<triangleright>\<^sub>r
         ?Q \<oplus>\<^sub>r ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 3)),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 4),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0))),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_var 0)))),
    ("utp_rel_laws.rel_frext_rcond",
     "?a:[?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q]\<^sup>+ =
      ?a:[?P]\<^sup>+ \<triangleleft> ?b \<oplus>\<^sub>p
?a \<triangleright>\<^sub>r
         ?a:[?Q]\<^sup>+",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 4),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3))),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_var 0)))),
    ("utp_theory.galois_comp",
     "?H\<^sub>2 \<Leftarrow>\<langle>?\<H>\<^sub>3,?\<H>\<^sub>4\<rangle>\<Rightarrow> ?H\<^sub>3 \<circ>\<^sub>g
      ?H\<^sub>1 \<Leftarrow>\<langle>?\<H>\<^sub>1,?\<H>\<^sub>2\<rangle>\<Rightarrow> ?H\<^sub>2 =
      ?H\<^sub>1 \<Leftarrow>\<langle>?\<H>\<^sub>1 o
?\<H>\<^sub>3,?\<H>\<^sub>4 o
              ?\<H>\<^sub>2\<rangle>\<Rightarrow> ?H\<^sub>3",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0),
           template_var 6)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 5)),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0)),
         template_var 3))),
    ("utp_expr.qtop_ueval",
     "\<lbrakk>qtop ?f ?x ?y ?z ?w\<rbrakk>\<^sub>e ?b =
      ?f (\<lbrakk>?x\<rbrakk>\<^sub>e ?b) (\<lbrakk>?y\<rbrakk>\<^sub>e ?b)
       (\<lbrakk>?z\<rbrakk>\<^sub>e ?b) (\<lbrakk>?w\<rbrakk>\<^sub>e ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_var 5,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_subst.usubst_cond_upd_1",
     "?\<sigma>(?x \<mapsto>\<^sub>s
         ?u) \<triangleleft> ?b \<triangleright>\<^sub>s ?\<rho>(?x 
         \<mapsto>\<^sub>s ?v) =
      (?\<sigma> \<triangleleft> ?b \<triangleright>\<^sub>s ?\<rho>)(?x 
      \<mapsto>\<^sub>s ?u \<triangleleft> ?b \<triangleright> ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 4),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 2),
               template_var 1)),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 3),
           template_var 0)))),
    ("utp_subst.subst_upd_in_lens_plus",
     "?\<sigma>($(?x +\<^sub>L ?y) \<mapsto>\<^sub>s
      \<guillemotleft>(?u, ?v)\<guillemotright>) = ?\<sigma>($?y 
      \<mapsto>\<^sub>s \<guillemotleft>?v\<guillemotright>, $?x 
      \<mapsto>\<^sub>s \<guillemotleft>?u\<guillemotright>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 4),
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2))),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_app (template_hole 3, template_var 2)),
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 1, template_var 3)),
         template_app (template_hole 0, template_var 1)))),
    ("utp_subst.subst_upd_out_lens_plus",
     "?\<sigma>($(?x +\<^sub>L ?y)\<acute> \<mapsto>\<^sub>s
      \<guillemotleft>(?u, ?v)\<guillemotright>) = ?\<sigma>($?y\<acute> 
      \<mapsto>\<^sub>s \<guillemotleft>?v\<guillemotright>, $?x\<acute> 
      \<mapsto>\<^sub>s \<guillemotleft>?u\<guillemotright>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 4),
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2))),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_app (template_hole 3, template_var 2)),
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 1, template_var 3)),
         template_app (template_hole 0, template_var 1)))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>UINF ?x ?xa\<rbrakk>\<^sub>e =
      (%b. \<Sqinter>{uu_.
                      EX x. uu_ = \<lbrakk>?xa x\<rbrakk>\<^sub>e b \<and>
                            \<lbrakk>?x x\<rbrakk>\<^sub>e b})",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>USUP ?x ?xa\<rbrakk>\<^sub>e =
      (%b. \<Squnion>{uu_.
                      EX x. uu_ = \<lbrakk>?xa x\<rbrakk>\<^sub>e b \<and>
                            \<lbrakk>?x x\<rbrakk>\<^sub>e b})",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       t_empty)),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>qtop ?x ?xa ?xb ?xc ?xd\<rbrakk>\<^sub>e =
      (%b. ?x (\<lbrakk>?xa\<rbrakk>\<^sub>e b)
            (\<lbrakk>?xb\<rbrakk>\<^sub>e b)
            (\<lbrakk>?xc\<rbrakk>\<^sub>e b)
            (\<lbrakk>?xd\<rbrakk>\<^sub>e b))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       t_empty)),
    ("utp_hoare.hoare_meaning",
     "\<lbrace>?P\<rbrace> ?S \<lbrace>?Q\<rbrace>\<^sub>u =
      (ALL s s'.
          \<lbrakk>?P\<rbrakk>\<^sub>e s \<and>
          \<lbrakk>?S\<rbrakk>\<^sub>e (s, s') -->
          \<lbrakk>?Q\<rbrakk>\<^sub>e s')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("utp_pred_laws.bdd_above_image_sup",
     "preorder.bdd_above (<=) ((%x. ?f x \<or> ?g x) ` ?A) =
      (preorder.bdd_above (<=) (?f ` ?A) \<and>
       preorder.bdd_above (<=) (?g ` ?A))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("utp_pred_laws.bdd_below_image_inf",
     "preorder.bdd_below (<=) ((%x. ?f x \<and> ?g x) ` ?A) =
      (preorder.bdd_below (<=) (?f ` ?A) \<and>
       preorder.bdd_below (<=) (?g ` ?A))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("utp_meta_subst.msubst_bop",
     "bop ?f (?v x) (?w x)\<lbrakk>x\<rightarrow>?u\<rbrakk> =
      bop ?f (msubst ?v ?u) (msubst ?w ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("utp_concurrency.U0_alpha_lift_bool_subst",
     "?\<sigma>($0-?x\<acute> \<mapsto>\<^sub>s false) \<dagger>
      \<lceil>?P\<rceil>\<^sub>0 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>false/$?x\<acute>\<rbrakk>\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U0_alpha_lift_bool_subst",
     "?\<sigma>($0-?x\<acute> \<mapsto>\<^sub>s true) \<dagger>
      \<lceil>?P\<rceil>\<^sub>0 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>true/$?x\<acute>\<rbrakk>\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U1_alpha_lift_bool_subst",
     "?\<sigma>($1-?x\<acute> \<mapsto>\<^sub>s false) \<dagger>
      \<lceil>?P\<rceil>\<^sub>1 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>false/$?x\<acute>\<rbrakk>\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U1_alpha_lift_bool_subst",
     "?\<sigma>($1-?x\<acute> \<mapsto>\<^sub>s true) \<dagger>
      \<lceil>?P\<rceil>\<^sub>1 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>true/$?x\<acute>\<rbrakk>\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U0_seq_subst",
     "(?P ;;
       U0)\<lbrakk>\<guillemotleft>?v\<guillemotright>/$0-?x\<acute>\<rbrakk> =
      ?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<acute>\<rbrakk> ;;
      U0",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 2))),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)),
         template_hole 5))),
    ("utp_concurrency.U1_seq_subst",
     "(?P ;;
       U1)\<lbrakk>\<guillemotleft>?v\<guillemotright>/$1-?x\<acute>\<rbrakk> =
      ?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<acute>\<rbrakk> ;;
      U1",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 2))),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)),
         template_hole 5))),
    ("utp_alphabet.aext_qtop",
     "qtop ?f ?u ?v ?w ?x \<oplus>\<^sub>p ?a =
      qtop ?f (?u \<oplus>\<^sub>p ?a) (?v \<oplus>\<^sub>p ?a)
       (?w \<oplus>\<^sub>p ?a) (?x \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 5),
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_subst.subst_qtop",
     "?\<sigma> \<dagger> qtop ?f ?u ?v ?w ?x =
      qtop ?f (?\<sigma> \<dagger> ?u) (?\<sigma> \<dagger> ?v)
       (?\<sigma> \<dagger> ?w) (?\<sigma> \<dagger> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 5),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 3)),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 5),
           template_var 0)))),
    ("utp_pred_laws.cond_distr",
     "?P \<triangleleft> ?b \<triangleright>
         (?Q \<triangleleft> ?c \<triangleright> ?R) =
      ?P \<triangleleft> ?b \<triangleright>
         ?Q \<triangleleft> ?c \<triangleright>
         (?P \<triangleleft> ?b \<triangleright> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 4),
             template_var 3),
           template_var 0)))),
    ("utp_lift.pre_var_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s
      \<guillemotleft>?v\<guillemotright>) \<dagger>
      \<lceil>?P\<rceil>\<^sub>< =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/&?x\<rbrakk>\<rceil>\<^sub><",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_app (template_hole 8, template_var 2)),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 10, template_var 3),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 0, template_var 1))),
               template_var 0)),
           template_hole 5)))),
    ("utp_pred.msubst_shAll_2",
     "(\<^bold>\<forall> x \<bullet> ?P x y z)\<lbrakk>(y,
      z)\<rightarrow>?v\<rbrakk> =
      (\<^bold>\<forall> x \<bullet> ?P x y z\<lbrakk>(y,
                                     z)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.USUP_ind_is_forall",
     "(\<Squnion> x \<in> ?A \<bullet> ?P x) =
      (\<^bold>\<forall> x \<bullet> \<guillemotleft>x\<guillemotright> \<in>\<^sub>u
                                     \<guillemotleft>?A\<guillemotright> \<Rightarrow>
                                     ?P x)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_hole 1, t_empty))),
    ("utp_pred_laws.UINF_list_conv",
     "(\<Sqinter> i \<in> dom\<^sub>l ?xs \<bullet> ?f (?xs ! i)) =
      foldr (\<or>) (map ?f ?xs) false",
     template_equation
      (template_app (template_app (template_hole 12, t_empty), t_empty),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("utp_pred_laws.USUP_list_conv",
     "(\<Squnion> i \<in> dom\<^sub>l ?xs \<bullet> ?f (?xs ! i)) =
      foldr (\<and>) (map ?f ?xs) true",
     template_equation
      (template_app (template_app (template_hole 12, t_empty), t_empty),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("utp_rel.numeral_seqr_laws",
     "?\<sigma>($?x \<mapsto>\<^sub>s numeral ?n) \<dagger> (?P ;; ?Q) =
      ?\<sigma> \<dagger> (?P\<lbrakk>numeral ?n/$?x\<rbrakk> ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_app (template_hole 6, template_var 2))),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_app (template_hole 0, template_var 2))),
               template_var 1)),
           template_var 0)))),
    ("utp_rel.numeral_seqr_laws",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s numeral ?n) \<dagger>
      (?P ;; ?Q) =
      ?\<sigma> \<dagger>
      (?P ;; ?Q\<lbrakk>numeral ?n/$?x\<acute>\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_app (template_hole 6, template_var 2))),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_app (template_hole 0, template_var 2))),
             template_var 0))))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s false) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>false/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s 0) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>0/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s true) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>true/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s 1) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>1/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_rel_laws.seqr_unfold",
     "?P ;; ?Q =
      (\<^bold>\<exists> v \<bullet> ?P\<lbrakk>\<guillemotleft>v\<guillemotright>/$\<^bold>v\<acute>\<rbrakk> \<and>
                                     ?Q\<lbrakk>\<guillemotleft>v\<guillemotright>/$\<^bold>v\<rbrakk>)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("utp_rel.msubst_seq",
     "(?P x ;;
       ?Q x)\<lbrakk>x\<rightarrow>\<guillemotleft>?v\<guillemotright>\<rbrakk> =
      msubst ?P \<guillemotleft>?v\<guillemotright> ;;
      msubst ?Q \<guillemotleft>?v\<guillemotright>",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("utp_pred_laws.UINF_image_eq",
     "(\<Sqinter> i \<in> ?f ` ?A \<bullet> ?g i) =
      (\<Sqinter> i \<in> ?A \<bullet> ?g (?f i))",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_var 0),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.USUP_image_eq",
     "(\<Squnion> i \<in> ?f ` ?A \<bullet> ?g i) =
      (\<Squnion> i \<in> ?A \<bullet> ?g (?f i))",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_var 0),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.UINF_all_nats",
     "(\<Sqinter> n \<bullet> \<Sqinter> i \<in> {0..n} \<bullet> ?P i) =
      (\<Sqinter> n \<bullet> ?P n)",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.USUP_all_nats",
     "(\<Squnion> n \<bullet> \<Squnion> i \<in> {0..n} \<bullet> ?P i) =
      (\<Squnion> n \<bullet> ?P n)",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.not_UINF",
     "(\<not> (\<Sqinter> i \<in> ?A \<bullet> ?P i)) =
      (\<Squnion> i \<in> ?A \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 6,
         template_app (template_app (template_hole 5, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.not_USUP",
     "(\<not> (\<Squnion> i \<in> ?A \<bullet> ?P i)) =
      (\<Sqinter> i \<in> ?A \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 6,
         template_app (template_app (template_hole 5, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_concurrency.lit_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s
      \<guillemotleft>?v\<guillemotright>) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_app (template_hole 7, template_var 4)),
             template_app (template_hole 6, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 5),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 4)),
                   template_app (template_hole 0, template_var 3))),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.numeral_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s numeral ?n) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>numeral
  ?n/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_app (template_hole 7, template_var 4)),
             template_app (template_hole 6, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 5),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 4)),
                   template_app (template_hole 0, template_var 3))),
               template_var 1)),
           template_var 0)))),
    ("utp_rel_opsem.hoare_opsem_link",
     "\<lbrace>?p\<rbrace> ?Q \<lbrace>?r\<rbrace>\<^sub>u =
      (ALL \<sigma>\<^sub>0 \<sigma>\<^sub>1.
          `\<sigma>\<^sub>0 \<dagger> ?p` \<and>
          (\<sigma>\<^sub>0, ?Q) \<rightarrow>\<^sub>u
          (\<sigma>\<^sub>1, II) -->
          `\<sigma>\<^sub>1 \<dagger> ?r`)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 7, t_empty))),
    ("utp_alphabet.aext_UINF_mem",
     "(\<Sqinter> x \<in> ?A \<bullet> ?P x) \<oplus>\<^sub>p ?a =
      (\<Sqinter> x \<in> ?A \<bullet> ?P x \<oplus>\<^sub>p ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app (template_app (template_hole 8, t_empty), t_empty)),
         template_var 0),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_pred_laws.UINF_atLeast_Suc",
     "(\<Sqinter> i \<in> {Suc ?m..} \<bullet> ?P i) =
      (\<Sqinter> i \<in> {?m..} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.USUP_atLeast_Suc",
     "(\<Squnion> i \<in> {Suc ?m..} \<bullet> ?P i) =
      (\<Squnion> i \<in> {?m..} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.conj_UINF_dist",
     "(?P \<and> (\<Sqinter> Q \<in> ?S \<bullet> ?F Q)) =
      (\<Sqinter> Q \<in> ?S \<bullet> ?P \<and> ?F Q)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_rel_laws.seq_UINF_distl",
     "?P ;; (\<Sqinter> Q \<in> ?A \<bullet> ?F Q) =
      (\<Sqinter> Q \<in> ?A \<bullet> ?P ;; ?F Q)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app (template_app (template_hole 8, t_empty), t_empty)),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_rel_laws.seq_UINF_distr",
     "(\<Sqinter> P \<in> ?A \<bullet> ?F P) ;; ?Q =
      (\<Sqinter> P \<in> ?A \<bullet> ?F P ;; ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app (template_app (template_hole 8, t_empty), t_empty)),
         template_var 0),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_pred_laws.UINF_insert",
     "(\<Sqinter> i \<in> insert ?x ?xs \<bullet> ?P i) =
      ?P ?x \<sqinter> (\<Sqinter> i \<in> ?xs \<bullet> ?P i)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_app (template_hole 6, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_insert",
     "(\<Squnion> i \<in> insert ?x ?xs \<bullet> ?P i) =
      ?P ?x \<squnion> (\<Squnion> i \<in> ?xs \<bullet> ?P i)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_app (template_hole 6, t_empty), t_empty)))),
    ("utp_pred_laws.UINF_atLeast_first",
     "?P ?n \<sqinter> (\<Sqinter> i \<in> {Suc ?n..} \<bullet> ?P i) =
      (\<Sqinter> i \<in> {?n..} \<bullet> ?P i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_var 1, template_var 0)),
         template_app (template_app (template_hole 6, t_empty), t_empty)),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.USUP_atLeast_first",
     "(?P ?n \<and> (\<Squnion> i \<in> {Suc ?n..} \<bullet> ?P i)) =
      (\<Squnion> i \<in> {?n..} \<bullet> ?P i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_var 1, template_var 0)),
         template_app (template_app (template_hole 6, t_empty), t_empty)),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_concurrency.par_by_merge_USUP_mem_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (\<Sqinter> i \<in> ?I \<bullet> ?Q
                                   i) =
      (\<Sqinter> i \<in> ?I \<bullet> ?P \<parallel>\<^bsub>?M\<^esub> ?Q
                                   i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 3), template_var 2),
         template_app (template_app (template_hole 8, t_empty), t_empty)),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_concurrency.par_by_merge_USUP_mem_left",
     "(\<Sqinter> i \<in> ?I \<bullet> ?P
  i) \<parallel>\<^bsub>?M\<^esub> ?Q =
      (\<Sqinter> i \<in> ?I \<bullet> ?P
  i \<parallel>\<^bsub>?M\<^esub> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, t_empty), t_empty)),
           template_var 1),
         template_var 0),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_pred_laws.UINF_Suc_shift",
     "(\<Sqinter> i \<in> {Suc 0..<Suc ?n} \<bullet> ?P i) =
      (\<Sqinter> i \<in> {0..<?n} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.USUP_Suc_shift",
     "(\<Squnion> i \<in> {Suc 0..<Suc ?n} \<bullet> ?P i) =
      (\<Squnion> i \<in> {0..<?n} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred.msubst_conj_2",
     "(?P x y \<and> ?Q x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> \<and>
       ?Q x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_pred.msubst_disj_2",
     "(?P x y \<or> ?Q x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> \<or>
       ?Q x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_pred.msubst_implies_2",
     "(?P x y \<Rightarrow> ?Q x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> \<Rightarrow>
       ?Q x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_pred_laws.shEx_insert",
     "(\<^bold>\<exists> x \<bullet> \<guillemotleft>x\<guillemotright> \<in>\<^sub>u
                                     insert\<^sub>u ?y ?A \<and>
                                     ?P x) =
      (msubst ?P ?y \<or>
       (\<^bold>\<exists> x \<bullet> \<guillemotleft>x\<guillemotright> \<in>\<^sub>u
?A \<and>
?P x))",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app (template_hole 8, t_empty)))),
    ("utp_pred_laws.UINF_upto_expand_last",
     "(\<Sqinter> i \<in> {0..<Suc ?n} \<bullet> ?P i) =
      ((\<Sqinter> i \<in> {0..<?n} \<bullet> ?P i) \<or> ?P ?n)",
     template_equation
      (template_app (template_app (template_hole 8, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app (template_app (template_hole 8, t_empty), t_empty)),
         template_app (template_var 0, template_var 1)))),
    ("utp_wp.wp_USUP_pre",
     "?P wp (\<Squnion> i \<in> {0::?'c..?n} \<bullet> ?Q i) =
      (\<Squnion> i \<in> {0::?'c..?n} \<bullet> ?P wp ?Q i)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app (template_app (template_hole 10, t_empty), t_empty)),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_rel_laws.Sup_upto_Suc",
     "\<Or>(power.power II (;;) ?P ` {0..Suc ?n}) =
      \<Or>(power.power II (;;) ?P ` {0..?n}) \<sqinter>
      power.power II (;;) ?P (Suc ?n)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("utp_meta_subst.msubst_bop_2",
     "bop ?f (?v x y) (?w x y)\<lbrakk>(x, y)\<rightarrow>?u\<rbrakk> =
      bop ?f (?v x y\<lbrakk>(x, y)\<rightarrow>?u\<rbrakk>)
       (?w x y\<lbrakk>(x, y)\<rightarrow>?u\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1, template_app (template_hole 0, t_empty)),
           template_var 0)))),
    ("utp_pred_laws.USUP_upto_expand_first",
     "(\<Squnion> i \<in> {0..<Suc ?n} \<bullet> ?P i) =
      (?P 0 \<and> (\<Squnion> i \<in> {1..<Suc ?n} \<bullet> ?P i))",
     template_equation
      (template_app (template_app (template_hole 9, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 0, template_hole 3)),
         template_app (template_app (template_hole 9, t_empty), t_empty)))),
    ("utp_tactics.uexpr_rep_eq_thms",
     "\<lbrakk>ZedSetCompr ?x ?xa\<rbrakk>\<^sub>e =
      (%b. {uu_.
            EX x. uu_ = snd (map_prod Rep_uexpr Rep_uexpr (?xa x)) b \<and>
                  x : \<lbrakk>?x\<rbrakk>\<^sub>e b \<and>
                  fst (map_prod Rep_uexpr Rep_uexpr (?xa x)) b})",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app (template_hole 11, template_var 1),
           template_var 0)),
       t_empty)),
    ("utp_concurrency.par_sep_swap",
     "(?P ;; U0 \<and>
       ?Q ;; U1 \<and> $\<Sigma>\<^sub><\<acute> =\<^sub>u $\<^bold>v) ;;
      swap\<^sub>m =
      (?Q ;; U0 \<and>
       ?P ;; U1 \<and> $\<Sigma>\<^sub><\<acute> =\<^sub>u $\<^bold>v)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_hole 8)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_hole 7)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)))),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_hole 2)))))),
         template_hole 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 0),
             template_hole 8)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_hole 5,
               template_app (template_hole 1, template_hole 2))))))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s 0) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>0/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>0/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>0/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s false) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>false/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>false/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>false/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s true) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>true/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>true/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>true/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s 1) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>1/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>1/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>1/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_pred_laws.UINF_impl",
     "(\<Sqinter> P \<in> ?A \<bullet> ?F P \<Rightarrow> ?G P) =
      ((\<Squnion> P \<in> ?A \<bullet> ?F P) \<Rightarrow>
       (\<Sqinter> P \<in> ?A \<bullet> ?G P))",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app (template_app (template_hole 0, t_empty), t_empty)),
         template_app (template_app (template_hole 6, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_conj_USUP",
     "((\<Squnion> P \<in> ?A \<bullet> ?F P) \<and>
       (\<Squnion> P \<in> ?A \<bullet> ?G P)) =
      (\<Squnion> P \<in> ?A \<bullet> ?F P \<and> ?G P)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.UINF_conj_UINF",
     "((\<Sqinter> i \<in> ?I \<bullet> ?P i) \<or>
       (\<Sqinter> i \<in> ?I \<bullet> ?Q i)) =
      (\<Sqinter> i \<in> ?I \<bullet> ?P i \<or> ?Q i)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_rel_laws.assign_rcond",
     "?x := ?e ;; (?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q) =
      ?x := ?e ;;
      ?P \<triangleleft> ?b\<lbrakk>?e/?x\<rbrakk> \<triangleright>\<^sub>r
         ?x := ?e ;; ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 4)),
               template_var 3))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 4),
                     template_var 3)),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 4)),
                   template_var 3))),
             template_var 1)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 4)),
                 template_var 3))),
           template_var 0)))),
    ("utp_concurrency.lit_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s
      \<guillemotleft>?v\<guillemotright>) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 5),
               template_app (template_hole 18, template_var 4)),
             template_app (template_hole 17, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 5),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 4)),
                     template_app (template_hole 11, template_var 3))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 4))),
                   template_app (template_hole 5, template_var 3))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 4)),
                 template_app (template_hole 0, template_var 3))),
             template_var 0))))),
    ("utp_concurrency.numeral_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s numeral ?n) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>numeral
                  ?n/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>numeral
                           ?n/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>numeral
                                 ?n/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 5),
               template_app (template_hole 18, template_var 4)),
             template_app (template_hole 17, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 5),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 4)),
                     template_app (template_hole 11, template_var 3))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 4))),
                   template_app (template_hole 5, template_var 3))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 4)),
                 template_app (template_hole 0, template_var 3))),
             template_var 0))))),
    ("utp_pred_laws.cond_UINF_dist",
     "(\<Sqinter> P \<in> ?S \<bullet> ?F
  P) \<triangleleft> ?b \<triangleright>
         (\<Sqinter> P \<in> ?S \<bullet> ?G P) =
      (\<Sqinter> P \<in> ?S \<bullet> ?F
  P \<triangleleft> ?b \<triangleright>
    ?G P)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 3),
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.cond_USUP_dist",
     "(\<Squnion> P \<in> ?S \<bullet> ?F
  P) \<triangleleft> ?b \<triangleright>
         (\<Squnion> P \<in> ?S \<bullet> ?G P) =
      (\<Squnion> P \<in> ?S \<bullet> ?F
  P \<triangleleft> ?b \<triangleright>
    ?G P)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 3),
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_concurrency.StateParallel_form",
     "?P |?a|?b|\<^sub>\<sigma> ?Q =
      (\<^bold>\<exists> (st\<^sub>0,
       st\<^sub>1) \<bullet> ?P\<lbrakk>\<guillemotleft>st\<^sub>0\<guillemotright>/$\<^bold>v\<acute>\<rbrakk> \<and>
                             ?Q\<lbrakk>\<guillemotleft>st\<^sub>1\<guillemotright>/$\<^bold>v\<acute>\<rbrakk> \<and>
                             $\<^bold>v\<acute> =\<^sub>u
                             bop (\<triangleleft>\<^bsub>&?b\<^esub>)
                              (bop (\<triangleleft>\<^bsub>&?a\<^esub>)
                                $\<^bold>v
                                \<guillemotleft>st\<^sub>0\<guillemotright>)
                              \<guillemotleft>st\<^sub>1\<guillemotright>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 3),
           template_app
            (template_app (template_hole 17, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 16, template_app (template_hole 15, t_empty))))]
