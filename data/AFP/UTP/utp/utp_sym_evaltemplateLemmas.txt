   [("utp_sym_eval.term_symeval",
     "terminated: ?\<Gamma> ;; ?P = ?\<Gamma> \<Turnstile> ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("utp_sym_eval.assigns_symeval",
     "?\<Gamma> \<Turnstile> \<langle>?\<sigma>\<rangle>\<^sub>a =
      terminated: (?\<sigma> o ?\<Gamma>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("utp_sym_eval.seq_symeval",
     "?\<Gamma> \<Turnstile> ?P ;; ?Q = (?\<Gamma> \<Turnstile> ?P) ;; ?Q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("utp_sym_eval.while_false_symeval",
     "?\<Gamma> \<dagger> ?b = false ==>
      ?\<Gamma> \<Turnstile> while\<^sup>\<top> ?b do ?P od =
      terminated: ?\<Gamma>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_hole 0)))),
    ("utp_sym_eval.while_inv_false_symeval",
     "?\<Gamma> \<dagger> ?b = false ==>
      ?\<Gamma> \<Turnstile> while ?b invr ?S do ?P od =
      terminated: ?\<Gamma>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_hole 0)))),
    ("utp_sym_eval.if_false_symeval",
     "?\<Gamma> \<dagger> ?b = false ==>
      ?\<Gamma> \<Turnstile>
      (?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q) =
      ?\<Gamma> \<Turnstile> ?Q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("utp_sym_eval.if_true_symeval",
     "?\<Gamma> \<dagger> ?b = true ==>
      ?\<Gamma> \<Turnstile>
      (?P \<triangleleft> ?b \<triangleright>\<^sub>r ?Q) =
      ?\<Gamma> \<Turnstile> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 1)))),
    ("utp_sym_eval.while_true_symeval",
     "?\<Gamma> \<dagger> ?b = true ==>
      ?\<Gamma> \<Turnstile> while\<^sup>\<top> ?b do ?P od =
      ?\<Gamma> \<Turnstile> ?P ;; while\<^sup>\<top> ?b do ?P od",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("utp_sym_eval.while_inv_true_symeval",
     "?\<Gamma> \<dagger> ?b = true ==>
      ?\<Gamma> \<Turnstile> while ?b invr ?S do ?P od =
      ?\<Gamma> \<Turnstile> ?P ;; while\<^sup>\<top> ?b do ?P od",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))))))]
