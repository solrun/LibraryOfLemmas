   [("utp_concurrency.left_uvar_indep_pre_uvar",
     "0-?x \<bowtie> ?y\<^sub><",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_concurrency.left_uvar_indep_right_uvar", "0-?x \<bowtie> 1-?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_concurrency.pre_uvar_indep_left_uvar",
     "?x\<^sub>< \<bowtie> 0-?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_concurrency.pre_uvar_indep_right_uvar",
     "?x\<^sub>< \<bowtie> 1-?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_concurrency.right_uvar_indep_left_uvar", "1-?x \<bowtie> 0-?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_concurrency.right_uvar_indep_pre_uvar",
     "1-?x \<bowtie> ?y\<^sub><",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_concurrency.par_by_merge_right_false",
     "?P \<parallel>\<^bsub>?M\<^esub> false = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("utp_concurrency.par_by_merge_false",
     "?P \<parallel>\<^bsub>false\<^esub> ?Q = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("utp_concurrency.par_by_merge_left_false",
     "false \<parallel>\<^bsub>?M\<^esub> ?Q = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("utp_concurrency.U0_as_alpha", "?P ;; U0 = \<lceil>?P\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("utp_concurrency.U1_as_alpha", "?P ;; U1 = \<lceil>?P\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("utp_concurrency.U0\<alpha>_comp_in_var",
     "$?x ;\<^sub>L U0\<alpha> = $?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_concurrency.U1\<alpha>_comp_in_var",
     "$?x ;\<^sub>L U1\<alpha> = $?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_concurrency.pre_uvar_mwb",
     "mwb_lens ?x ==> mwb_lens (?x\<^sub><)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.left_uvar_mwb", "mwb_lens ?x ==> mwb_lens (0-?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.right_uvar_mwb", "mwb_lens ?x ==> mwb_lens (1-?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.pre_uvar", "vwb_lens ?x ==> vwb_lens (?x\<^sub><)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.left_uvar", "vwb_lens ?x ==> vwb_lens (0-?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.right_uvar", "vwb_lens ?x ==> vwb_lens (1-?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.U0\<alpha>_comp_out_var",
     "$?x\<acute> ;\<^sub>L U0\<alpha> = $0-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_concurrency.U1\<alpha>_comp_out_var",
     "$?x\<acute> ;\<^sub>L U1\<alpha> = $1-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_concurrency.U1\<alpha>_indep_left_uvar",
     "vwb_lens ?x ==> U1\<alpha> \<bowtie> $0-?x\<acute>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("utp_concurrency.U0\<alpha>_indep_right_uvar",
     "vwb_lens ?x ==> U0\<alpha> \<bowtie> $1-?x\<acute>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("utp_concurrency.U0_alpha_out_var",
     "\<lceil>$?x\<acute>\<rceil>\<^sub>0 = $0-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("utp_concurrency.U1_alpha_out_var",
     "\<lceil>$?x\<acute>\<rceil>\<^sub>1 = $1-?x\<acute>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("utp_concurrency.pre_uvar_indep_pre_uvar",
     "?x \<bowtie> ?y ==> ?x\<^sub>< \<bowtie> ?y\<^sub><",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.left_uvar_indep_left_uvar",
     "?x \<bowtie> ?y ==> 0-?x \<bowtie> 0-?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.right_uvar_indep_right_uvar",
     "?x \<bowtie> ?y ==> 1-?x \<bowtie> 1-?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_concurrency.par_by_merge_commute_swap",
     "?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?Q \<parallel>\<^bsub>swap\<^sub>m ;; ?M\<^esub> ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 2))),
    ("utp_concurrency.U0_seqr",
     "\<lceil>?P ;; ?Q\<rceil>\<^sub>0 = ?P ;; \<lceil>?Q\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_concurrency.U1_seqr",
     "\<lceil>?P ;; ?Q\<rceil>\<^sub>1 = ?P ;; \<lceil>?Q\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("utp_concurrency.par_by_merge_seq_add",
     "?P \<parallel>\<^bsub>?M\<^esub> ?Q ;; ?R =
      ?P \<parallel>\<^bsub>?M ;; ?R\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("utp_concurrency.unrest_out_par_by_merge",
     "$?x\<acute> \<sharp> ?M ==>
      $?x\<acute> \<sharp> ?P \<parallel>\<^bsub>?M\<^esub> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("utp_concurrency.swap_StateMerge",
     "?a \<bowtie> ?b ==>
      swap\<^sub>m ;; M[?a|?b]\<^sub>\<sigma> = M[?b|?a]\<^sub>\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_concurrency.par_by_merge_mono_1",
     "?P\<^sub>1 \<sqsubseteq> ?P\<^sub>2 ==>
      ?P\<^sub>1 \<parallel>\<^bsub>?M\<^esub> ?Q \<sqsubseteq>
      ?P\<^sub>2 \<parallel>\<^bsub>?M\<^esub> ?Q",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_mono_2",
     "?Q\<^sub>1 \<sqsubseteq> ?Q\<^sub>2 ==>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q\<^sub>1 \<sqsubseteq>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q\<^sub>2",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("utp_concurrency.shEx_pbm_right",
     "?P \<parallel>\<^bsub>?M\<^esub> ushEx ?Q =
      (\<^bold>\<exists> x \<bullet> ?P \<parallel>\<^bsub>?M\<^esub> ?Q
                                 x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_concurrency.shEx_pbm_left",
     "ushEx ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      (\<^bold>\<exists> x \<bullet> ?P
x \<parallel>\<^bsub>?M\<^esub> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 1),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_concurrency.par_by_merge_choice_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (?Q \<sqinter> ?R) =
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q \<sqinter>
      ?P \<parallel>\<^bsub>?M\<^esub> ?R",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_or_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (?Q \<or> ?R) =
      (?P \<parallel>\<^bsub>?M\<^esub> ?Q \<or>
       ?P \<parallel>\<^bsub>?M\<^esub> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_choice_left",
     "(?P \<sqinter> ?Q) \<parallel>\<^bsub>?M\<^esub> ?R =
      ?P \<parallel>\<^bsub>?M\<^esub> ?R \<sqinter>
      ?Q \<parallel>\<^bsub>?M\<^esub> ?R",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_or_left",
     "(?P \<or> ?Q) \<parallel>\<^bsub>?M\<^esub> ?R =
      (?P \<parallel>\<^bsub>?M\<^esub> ?R \<or>
       ?Q \<parallel>\<^bsub>?M\<^esub> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("utp_concurrency.par_by_merge_commute",
     "?M is (;;) swap\<^sub>m ==>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?Q \<parallel>\<^bsub>?M\<^esub> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1)))),
    ("utp_concurrency.StateParallel_commute",
     "?a \<bowtie> ?b ==>
      ?P |?a|?b|\<^sub>\<sigma> ?Q = ?Q |?b|?a|\<^sub>\<sigma> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)),
           template_var 1)))),
    ("utp_concurrency.par_by_merge_USUP_ind_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (\<Sqinter> i \<bullet> ?Q i) =
      (\<Sqinter> i \<bullet> ?P \<parallel>\<^bsub>?M\<^esub> ?Q i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_app (template_hole 3, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_concurrency.par_by_merge_USUP_ind_left",
     "(\<Sqinter> i \<bullet> ?P i) \<parallel>\<^bsub>?M\<^esub> ?Q =
      (\<Sqinter> i \<bullet> ?P i \<parallel>\<^bsub>?M\<^esub> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), t_empty)),
           template_var 1),
         template_var 0),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_concurrency.par_by_merge_mono",
     "[| ?P\<^sub>1 \<sqsubseteq> ?P\<^sub>2;
         ?Q\<^sub>1 \<sqsubseteq> ?Q\<^sub>2 |]
      ==> ?P\<^sub>1 \<parallel>\<^bsub>?M\<^esub> ?Q\<^sub>1 \<sqsubseteq>
          ?P\<^sub>2 \<parallel>\<^bsub>?M\<^esub> ?Q\<^sub>2",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1)))),
    ("utp_concurrency.par_by_merge_skip",
     "[| ?P ;; true = true; ?Q ;; true = true |]
      ==> ?P \<parallel>\<^bsub>skip\<^sub>m\<^esub> ?Q = II",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 7),
          template_hole 7),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_var 0),
         template_hole 0))),
    ("utp_concurrency.U0_alpha_lift_bool_subst",
     "?\<sigma>($0-?x\<acute> \<mapsto>\<^sub>s false) \<dagger>
      \<lceil>?P\<rceil>\<^sub>0 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>false/$?x\<acute>\<rbrakk>\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U0_alpha_lift_bool_subst",
     "?\<sigma>($0-?x\<acute> \<mapsto>\<^sub>s true) \<dagger>
      \<lceil>?P\<rceil>\<^sub>0 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>true/$?x\<acute>\<rbrakk>\<rceil>\<^sub>0",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U1_alpha_lift_bool_subst",
     "?\<sigma>($1-?x\<acute> \<mapsto>\<^sub>s false) \<dagger>
      \<lceil>?P\<rceil>\<^sub>1 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>false/$?x\<acute>\<rbrakk>\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U1_alpha_lift_bool_subst",
     "?\<sigma>($1-?x\<acute> \<mapsto>\<^sub>s true) \<dagger>
      \<lceil>?P\<rceil>\<^sub>1 =
      ?\<sigma> \<dagger>
      \<lceil>?P\<lbrakk>true/$?x\<acute>\<rbrakk>\<rceil>\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1))),
             template_hole 7)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 1)),
                   template_hole 0)),
               template_var 0)),
           template_hole 5)))),
    ("utp_concurrency.U0_seq_subst",
     "(?P ;;
       U0)\<lbrakk>\<guillemotleft>?v\<guillemotright>/$0-?x\<acute>\<rbrakk> =
      ?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<acute>\<rbrakk> ;;
      U0",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 2))),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)),
         template_hole 5))),
    ("utp_concurrency.U1_seq_subst",
     "(?P ;;
       U1)\<lbrakk>\<guillemotleft>?v\<guillemotright>/$1-?x\<acute>\<rbrakk> =
      ?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<acute>\<rbrakk> ;;
      U1",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 2))),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)),
         template_hole 5))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s false) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>false/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s 0) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>0/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s true) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>true/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s 1) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>1/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 4),
               template_app (template_hole 7, template_var 3)),
             template_hole 6)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.lit_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s
      \<guillemotleft>?v\<guillemotright>) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_app (template_hole 7, template_var 4)),
             template_app (template_hole 6, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 5),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 4)),
                   template_app (template_hole 0, template_var 3))),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.numeral_pbm_subst",
     "?\<sigma>($?x\<acute> \<mapsto>\<^sub>s numeral ?n) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P \<parallel>\<^bsub>?M\<lbrakk>numeral
  ?n/$?x\<acute>\<rbrakk>\<^esub> ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 5),
               template_app (template_hole 7, template_var 4)),
             template_app (template_hole 6, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 9, template_var 5),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 4)),
                   template_app (template_hole 0, template_var 3))),
               template_var 1)),
           template_var 0)))),
    ("utp_concurrency.unrest_in_par_by_merge",
     "[| $?x \<sharp> ?P; $?x\<^sub>< \<sharp> ?M; $?x \<sharp> ?Q |]
      ==> $?x \<sharp> ?P \<parallel>\<^bsub>?M\<^esub> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("utp_concurrency.par_by_merge_assoc",
     "[| ?M is (;;) swap\<^sub>m; AssocMerge ?M |]
      ==> ?P \<parallel>\<^bsub>?M\<^esub> ?Q \<parallel>\<^bsub>?M\<^esub> ?R =
          ?P \<parallel>\<^bsub>?M\<^esub> (?Q \<parallel>\<^bsub>?M\<^esub> ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3), t_empty)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0))))),
    ("utp_concurrency.par_by_merge_USUP_mem_right",
     "?P \<parallel>\<^bsub>?M\<^esub> (\<Sqinter> i \<in> ?I \<bullet> ?Q
                                   i) =
      (\<Sqinter> i \<in> ?I \<bullet> ?P \<parallel>\<^bsub>?M\<^esub> ?Q
                                   i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 3), template_var 2),
         template_app (template_app (template_hole 8, t_empty), t_empty)),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_concurrency.par_by_merge_USUP_mem_left",
     "(\<Sqinter> i \<in> ?I \<bullet> ?P
  i) \<parallel>\<^bsub>?M\<^esub> ?Q =
      (\<Sqinter> i \<in> ?I \<bullet> ?P
  i \<parallel>\<^bsub>?M\<^esub> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, t_empty), t_empty)),
           template_var 1),
         template_var 0),
       template_app (template_app (template_hole 3, t_empty), t_empty))),
    ("utp_concurrency.StateParallel_frame",
     "[| vwb_lens ?a; vwb_lens ?b; ?a \<bowtie> ?b |]
      ==> {&?a, &?b}:[?P |?a|?b|\<^sub>\<sigma> ?Q] =
          ?P |?a|?b|\<^sub>\<sigma> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("utp_concurrency.par_sep_swap",
     "(?P ;; U0 \<and>
       ?Q ;; U1 \<and> $\<Sigma>\<^sub><\<acute> =\<^sub>u $\<^bold>v) ;;
      swap\<^sub>m =
      (?Q ;; U0 \<and>
       ?P ;; U1 \<and> $\<Sigma>\<^sub><\<acute> =\<^sub>u $\<^bold>v)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_hole 8)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_hole 7)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)))),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_hole 2)))))),
         template_hole 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 0),
             template_hole 8)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_hole 5,
               template_app (template_hole 1, template_hole 2))))))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s 0) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>0/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>0/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>0/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s false) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>false/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>false/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>false/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.bool_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s true) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>true/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>true/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>true/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.zero_one_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s 1) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>1/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>1/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>1/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 4),
               template_app (template_hole 18, template_var 3)),
             template_hole 17)),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 4),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 3)),
                     template_hole 11)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 3))),
                   template_hole 5)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_concurrency.StateParallel_hoare",
     "[| \<lbrace>?c\<rbrace> ?P \<lbrace>?d\<^sub>1\<rbrace>\<^sub>u;
         \<lbrace>?c\<rbrace> ?Q \<lbrace>?d\<^sub>2\<rbrace>\<^sub>u;
         ?a \<bowtie> ?b; ?a \<natural> ?d\<^sub>1;
         ?b \<natural> ?d\<^sub>2 |]
      ==> \<lbrace>?c\<rbrace> ?P |?a|?b|\<^sub>\<sigma> ?Q
          \<lbrace>?d\<^sub>1 \<and> ?d\<^sub>2\<rbrace>\<^sub>u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))
           ))),
    ("utp_concurrency.lit_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s
      \<guillemotleft>?v\<guillemotright>) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>\<guillemotleft>?v\<guillemotright>/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 5),
               template_app (template_hole 18, template_var 4)),
             template_app (template_hole 17, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 5),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 4)),
                     template_app (template_hole 11, template_var 3))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 4))),
                   template_app (template_hole 5, template_var 3))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 4)),
                 template_app (template_hole 0, template_var 3))),
             template_var 0))))),
    ("utp_concurrency.numeral_pbm_subst",
     "?\<sigma>($?x \<mapsto>\<^sub>s numeral ?n) \<dagger>
      ?P \<parallel>\<^bsub>?M\<^esub> ?Q =
      ?\<sigma> \<dagger>
      ?P\<lbrakk>numeral
                  ?n/$?x\<rbrakk> \<parallel>\<^bsub>?M\<lbrakk>numeral
                           ?n/$?x\<^sub><\<rbrakk>\<^esub> ?Q\<lbrakk>numeral
                                 ?n/$?x\<rbrakk>",
     template_equation
      (template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_app (template_hole 19, template_var 5),
               template_app (template_hole 18, template_var 4)),
             template_app (template_hole 17, template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 20, template_var 5),
         template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_app (template_hole 12, template_var 4)),
                     template_app (template_hole 11, template_var 3))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 4))),
                   template_app (template_hole 5, template_var 3))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 4)),
                 template_app (template_hole 0, template_var 3))),
             template_var 0))))),
    ("utp_concurrency.StateParallel_form'",
     "[| vwb_lens ?a; vwb_lens ?b; ?a \<bowtie> ?b |]
      ==> ?P |?a|?b|\<^sub>\<sigma> ?Q = {&?a,
          &?b}:[?P \<restriction>\<^sub>v
                ($\<^bold>v +\<^sub>L $?a\<acute>) \<and>
                ?Q \<restriction>\<^sub>v
                ($\<^bold>v +\<^sub>L $?b\<acute>)]",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 3)),
        template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 14, template_var 1),
             template_app
              (template_app (template_hole 13, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 3)),
               template_app (template_hole 9, template_var 2))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)),
                   template_app (template_hole 3, template_var 3)))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 5, template_hole 4)),
                 template_app (template_hole 0, template_var 2)))))))),
    ("utp_concurrency.StateParallel_form",
     "?P |?a|?b|\<^sub>\<sigma> ?Q =
      (\<^bold>\<exists> (st\<^sub>0,
       st\<^sub>1) \<bullet> ?P\<lbrakk>\<guillemotleft>st\<^sub>0\<guillemotright>/$\<^bold>v\<acute>\<rbrakk> \<and>
                             ?Q\<lbrakk>\<guillemotleft>st\<^sub>1\<guillemotright>/$\<^bold>v\<acute>\<rbrakk> \<and>
                             $\<^bold>v\<acute> =\<^sub>u
                             bop (\<triangleleft>\<^bsub>&?b\<^esub>)
                              (bop (\<triangleleft>\<^bsub>&?a\<^esub>)
                                $\<^bold>v
                                \<guillemotleft>st\<^sub>0\<guillemotright>)
                              \<guillemotleft>st\<^sub>1\<guillemotright>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 3),
           template_app
            (template_app (template_hole 17, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 16, template_app (template_hole 15, t_empty)))),
    ("utp_concurrency.StateParallel_frame_hoare",
     "[| vwb_lens ?a; vwb_lens ?b; ?a \<bowtie> ?b;
         ?a \<natural> ?d\<^sub>1; ?b \<natural> ?d\<^sub>2;
         ?a \<sharp> ?c\<^sub>1; ?b \<sharp> ?c\<^sub>1;
         \<lbrace>?c\<^sub>1 \<and> ?c\<^sub>2\<rbrace> ?P
         \<lbrace>?d\<^sub>1\<rbrace>\<^sub>u;
         \<lbrace>?c\<^sub>1 \<and> ?c\<^sub>2\<rbrace> ?Q
         \<lbrace>?d\<^sub>2\<rbrace>\<^sub>u |]
      ==> \<lbrace>?c\<^sub>1 \<and> ?c\<^sub>2\<rbrace>
          ?P |?a|?b|\<^sub>\<sigma> ?Q
          \<lbrace>?c\<^sub>1 \<and>
                   ?d\<^sub>1 \<and> ?d\<^sub>2\<rbrace>\<^sub>u",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 7)),
        template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 7),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_var 6)),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4)))
           )))]
