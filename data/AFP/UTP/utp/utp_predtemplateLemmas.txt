   [("utp_pred.unrest_false", "?x \<sharp> false",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("utp_pred.unrest_true", "?x \<sharp> true",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("utp_pred.unrest_closure", "?x \<sharp> [?P]\<^sub>u",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("utp_pred.top_uexpr_rep_eq",
     "\<lbrakk>\<top>\<rbrakk>\<^sub>e ?b = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_pred.bot_uexpr_rep_eq",
     "\<lbrakk>\<bottom>\<rbrakk>\<^sub>e ?b = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_pred.subst_false", "?\<sigma> \<dagger> false = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_pred.subst_true", "?\<sigma> \<dagger> true = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("utp_pred.msubst_false",
     "false\<lbrakk>x\<rightarrow>?v\<rbrakk> = false",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_hole 0)),
    ("utp_pred.msubst_true",
     "true\<lbrakk>x\<rightarrow>?v\<rbrakk> = true",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_hole 0)),
    ("utp_pred.subst_closure",
     "?\<sigma> \<dagger> [?P]\<^sub>u = [?P]\<^sub>u",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred.subst_not",
     "?\<sigma> \<dagger> (\<not> ?P) = (\<not> ?\<sigma> \<dagger> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_pred.unrest_not", "?x \<sharp> ?P ==> ?x \<sharp> \<not> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_pred.usedBy_not", "?x \<natural> ?P ==> ?x \<natural> \<not> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("utp_pred.unrest_var_res_diff",
     "?x \<bowtie> ?y ==> ?y \<sharp> ?P \<restriction>\<^sub>v ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("utp_pred.subst_mono",
     "?P \<sqsubseteq> ?Q ==>
      ?\<sigma> \<dagger> ?P \<sqsubseteq> ?\<sigma> \<dagger> ?Q",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred.upred_ref_iff",
     "(?P \<sqsubseteq> ?Q) =
      (ALL b.
          \<lbrakk>?Q\<rbrakk>\<^sub>e b -->
          \<lbrakk>?P\<rbrakk>\<^sub>e b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("utp_pred.subst_inf",
     "?\<sigma> \<dagger> (?P \<squnion> ?Q) =
      ?\<sigma> \<dagger> ?P \<squnion> ?\<sigma> \<dagger> ?Q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_sup",
     "?\<sigma> \<dagger> (?P \<sqinter> ?Q) =
      ?\<sigma> \<dagger> ?P \<sqinter> ?\<sigma> \<dagger> ?Q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_conj",
     "?\<sigma> \<dagger> (?P \<and> ?Q) =
      (?\<sigma> \<dagger> ?P \<and> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_disj",
     "?\<sigma> \<dagger> (?P \<or> ?Q) =
      (?\<sigma> \<dagger> ?P \<or> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_iff",
     "?\<sigma> \<dagger> (?P \<Leftrightarrow> ?Q) =
      (?\<sigma> \<dagger> ?P \<Leftrightarrow> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.subst_impl",
     "?\<sigma> \<dagger> (?P \<Rightarrow> ?Q) =
      (?\<sigma> \<dagger> ?P \<Rightarrow> ?\<sigma> \<dagger> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred.msubst_not",
     "(\<not> ?P x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (\<not> msubst ?P ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred.subst_shAll",
     "?\<sigma> \<dagger> ushAll ?P =
      (\<^bold>\<forall> x \<bullet> ?\<sigma> \<dagger> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.subst_shEx",
     "?\<sigma> \<dagger> ushEx ?P =
      (\<^bold>\<exists> x \<bullet> ?\<sigma> \<dagger> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.unrest_shAll",
     "(!!y. ?x \<sharp> ?P y) ==> ?x \<sharp> ushAll ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, t_empty))
           ))),
    ("utp_pred.unrest_shEx",
     "(!!y. ?x \<sharp> ?P y) ==> ?x \<sharp> ushEx ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, t_empty))
           ))),
    ("utp_pred.unrest_all_in",
     "[| mwb_lens ?y; ?x \<subseteq>\<^sub>L ?y |]
      ==> ?x \<sharp> (\<forall> ?y \<bullet> ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("utp_pred.unrest_ex_in",
     "[| mwb_lens ?y; ?x \<subseteq>\<^sub>L ?y |]
      ==> ?x \<sharp> (\<exists> ?y \<bullet> ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("utp_pred.unrest_all_diff",
     "[| ?x \<bowtie> ?y; ?y \<sharp> ?P |]
      ==> ?y \<sharp> (\<forall> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("utp_pred.unrest_ex_diff",
     "[| ?x \<bowtie> ?y; ?y \<sharp> ?P |]
      ==> ?y \<sharp> (\<exists> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("utp_pred.unrest_iff",
     "[| ?x \<sharp> ?P; ?x \<sharp> ?Q |]
      ==> ?x \<sharp> ?P \<Leftrightarrow> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.unrest_impl",
     "[| ?x \<sharp> ?P; ?x \<sharp> ?Q |]
      ==> ?x \<sharp> ?P \<Rightarrow> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.unrest_conj",
     "[| ?x \<sharp> ?P; ?x \<sharp> ?Q |] ==> ?x \<sharp> ?P \<and> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.unrest_disj",
     "[| ?x \<sharp> ?P; ?x \<sharp> ?Q |] ==> ?x \<sharp> ?P \<or> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.usedBy_conj",
     "[| ?x \<natural> ?P; ?x \<natural> ?Q |]
      ==> ?x \<natural> ?P \<and> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.usedBy_disj",
     "[| ?x \<natural> ?P; ?x \<natural> ?Q |]
      ==> ?x \<natural> ?P \<or> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.usedBy_iff",
     "[| ?x \<natural> ?P; ?x \<natural> ?Q |]
      ==> ?x \<natural> ?P \<Leftrightarrow> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.usedBy_impl",
     "[| ?x \<natural> ?P; ?x \<natural> ?Q |]
      ==> ?x \<natural> ?P \<Rightarrow> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred.subst_ex_unrest",
     "?x \<sharp> ?\<sigma> ==>
      ?\<sigma> \<dagger> (\<exists> ?x \<bullet> ?P) =
      (\<exists> ?x \<bullet> ?\<sigma> \<dagger> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("utp_pred.msubst_shAll",
     "(\<^bold>\<forall> x \<bullet> ?P x
y)\<lbrakk>y\<rightarrow>?v\<rbrakk> =
      (\<^bold>\<forall> x \<bullet> msubst (?P x) ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.subst_all_same",
     "mwb_lens ?x ==>
      ?\<sigma>(?x \<mapsto>\<^sub>s ?v) \<dagger>
      (\<forall> ?x \<bullet> ?P) =
      ?\<sigma> \<dagger> (\<forall> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("utp_pred.subst_ex_same",
     "mwb_lens ?x ==>
      ?\<sigma>(?x \<mapsto>\<^sub>s ?v) \<dagger>
      (\<exists> ?x \<bullet> ?P) =
      ?\<sigma> \<dagger> (\<exists> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("utp_pred.msubst_not_2",
     "(\<not> ?P x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (\<not> ?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_pred.unrest_var_res_in",
     "[| mwb_lens ?x; ?y \<subseteq>\<^sub>L ?x; ?y \<sharp> ?P |]
      ==> ?y \<sharp> ?P \<restriction>\<^sub>v ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("utp_pred.msubst_conj",
     "(?P x \<and> ?Q x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (msubst ?P ?v \<and> msubst ?Q ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred.msubst_disj",
     "(?P x \<or> ?Q x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (msubst ?P ?v \<or> msubst ?Q ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred.msubst_implies",
     "(?P x \<Rightarrow> ?Q x)\<lbrakk>x\<rightarrow>?v\<rbrakk> =
      (msubst ?P ?v \<Rightarrow> msubst ?Q ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("utp_pred.subst_ex_same'",
     "mwb_lens ?x ==>
      ?\<sigma>(?x \<mapsto>\<^sub>s ?v) \<dagger>
      (\<exists> &?x \<bullet> ?P) =
      ?\<sigma> \<dagger> (\<exists> &?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 0))))),
    ("utp_pred.subst_UINF",
     "?\<sigma> \<dagger> UINF ?P ?Q =
      (\<Sqinter> i | ?\<sigma> \<dagger>
                      ?P i \<bullet> ?\<sigma> \<dagger> ?Q i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred.subst_USUP",
     "?\<sigma> \<dagger> USUP ?P ?Q =
      (\<Squnion> i | ?\<sigma> \<dagger>
                      ?P i \<bullet> ?\<sigma> \<dagger> ?Q i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred.unrest_allE",
     "[| \<Sigma> \<sharp> ?P; ?P = true ==> ?Q; ?P = false ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("utp_pred.msubst_shAll_2",
     "(\<^bold>\<forall> x \<bullet> ?P x y z)\<lbrakk>(y,
      z)\<rightarrow>?v\<rbrakk> =
      (\<^bold>\<forall> x \<bullet> ?P x y z\<lbrakk>(y,
                                     z)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred.unrest_UINF",
     "[| !!i. ?x \<sharp> ?P i; !!i. ?x \<sharp> ?Q i |]
      ==> ?x \<sharp> UINF ?P ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, t_empty), t_empty))
           ))),
    ("utp_pred.unrest_USUP",
     "[| !!i. ?x \<sharp> ?P i; !!i. ?x \<sharp> ?Q i |]
      ==> ?x \<sharp> USUP ?P ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, t_empty), t_empty))
           ))),
    ("utp_pred.unrest_UINF_mem",
     "(!!i. i : ?A ==> ?x \<sharp> ?P i) ==>
      ?x \<sharp> (\<Sqinter> i \<in> ?A \<bullet> ?P i)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, t_empty), t_empty))
           ))),
    ("utp_pred.unrest_USUP_mem",
     "(!!i. i : ?A ==> ?x \<sharp> ?P i) ==>
      ?x \<sharp> (\<Squnion> i \<in> ?A \<bullet> ?P i)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, t_empty), t_empty))
           ))),
    ("utp_pred.subst_all_indep",
     "[| ?x \<bowtie> ?y; ?y \<sharp> ?v |]
      ==> (\<forall> ?y \<bullet> ?P)\<lbrakk>?v/?x\<rbrakk> =
          (\<forall> ?y \<bullet> ?P\<lbrakk>?v/?x\<rbrakk>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3),
                 template_var 1)),
             template_var 0))))),
    ("utp_pred.subst_ex_indep",
     "[| ?x \<bowtie> ?y; ?y \<sharp> ?v |]
      ==> (\<exists> ?y \<bullet> ?P)\<lbrakk>?v/?x\<rbrakk> =
          (\<exists> ?y \<bullet> ?P\<lbrakk>?v/?x\<rbrakk>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3),
                 template_var 1)),
             template_var 0))))),
    ("utp_pred.msubst_conj_2",
     "(?P x y \<and> ?Q x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> \<and>
       ?Q x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_pred.msubst_disj_2",
     "(?P x y \<or> ?Q x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> \<or>
       ?Q x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("utp_pred.msubst_implies_2",
     "(?P x y \<Rightarrow> ?Q x y)\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> =
      (?P x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk> \<Rightarrow>
       ?Q x y\<lbrakk>(x, y)\<rightarrow>?v\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0))))]
