   [("utp_recursion.mu_const", "(\<mu> X \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_recursion.nu_const", "(\<nu> X \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_recursion.chain0", "chain ?Y ==> ?Y 0 = false",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_var 0, template_hole 1), template_hole 0))),
    ("utp_recursion.chainI",
     "[| ?Y 0 = false; !!i. ?Y (Suc i) \<sqsubseteq> ?Y i |] ==> chain ?Y",
     template_implication
      ([template_equation
         (template_app (template_var 0, template_hole 5), template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("utp_recursion.chainE",
     "[| chain ?Y;
         !!i. [| ?Y 0 = false; ?Y (Suc i) \<sqsubseteq> ?Y i |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("utp_recursion.chain_pred_terminates",
     "[| constr ?F ?E; Monotonic ?F |]
      ==> (\<Or>range ?E \<and> \<mu> ?F) =
          (\<Or>range ?E \<and> \<nu> ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2))),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2))),
           template_app (template_hole 0, template_var 1))))),
    ("utp_recursion.L274",
     "ALL n. (?E n \<and> ?X) = (?E n \<and> ?Y) ==>
      (\<Or>range ?E \<and> ?X) = (\<Or>range ?E \<and> ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))),
           template_var 0)))),
    ("utp_recursion.constr_fp_uniq",
     "[| constr ?F ?E; Monotonic ?F; \<Or>range ?E = ?C |]
      ==> (?C \<and> \<mu> ?F) = (?C \<and> \<nu> ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("utp_recursion.mu_refine_intro",
     "[| (?C \<Rightarrow> ?S) \<sqsubseteq> ?F (?C \<Rightarrow> ?S);
         (?C \<and> \<mu> ?F) = (?C \<and> \<nu> ?F) |]
      ==> (?C \<Rightarrow> ?S) \<sqsubseteq> \<mu> ?F",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_var 2,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_app (template_hole 1, template_var 2)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_app (template_hole 0, template_var 2)))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("utp_recursion.constrI",
     "[| chain ?E;
         !!X n.
            (?F X \<and> ?E (n + 1)) =
            (?F (X \<and> ?E n) \<and> ?E (n + 1)) |]
      ==> constr ?F ?E",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("utp_recursion.refine_usubst_to_ueq",
     "vwb_lens ?E ==>
      ((?Pre \<Rightarrow>
        ?Post)\<lbrakk>\<guillemotleft>?st'\<guillemotright>/$?E\<rbrakk> \<sqsubseteq>
       ?f\<lbrakk>\<guillemotleft>?st'\<guillemotright>/$?E\<rbrakk>) =
      ((?Pre \<and>
        $?E =\<^sub>u \<guillemotleft>?st'\<guillemotright> \<Rightarrow>
        ?Post) \<sqsubseteq>
       ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 5, template_var 4)),
                   template_app (template_hole 4, template_var 3))),
               template_var 2)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 4)),
                 template_app (template_hole 4, template_var 3))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 5, template_var 4))),
                   template_app (template_hole 4, template_var 3)))),
             template_var 0))))),
    ("utp_recursion.mu_rec_total_utp_rule",
     "[| wf ?R; Monotonic ?B;
         !!st. (?Pre \<and>
                \<lceil>?e\<rceil>\<^sub>< =\<^sub>u
                \<guillemotleft>st\<guillemotright> \<Rightarrow>
                ?Post) \<sqsubseteq>
               ?B (?Pre \<and>
                   (\<lceil>?e\<rceil>\<^sub><,
                    \<guillemotleft>st\<guillemotright>)\<^sub>u \<in>\<^sub>u
                   \<guillemotleft>?R\<guillemotright> \<Rightarrow>
                   ?Post) |]
      ==> (?Pre \<Rightarrow> ?Post) \<sqsubseteq> \<mu> ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 4)),
        template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app
          (template_app (template_hole 11, template_var 2),
           template_var 0)))),
    ("utp_recursion.nu_rec_total_utp_rule",
     "[| wf ?R; Monotonic ?B;
         !!st. (?Pre \<and>
                \<lceil>?e\<rceil>\<^sub>< =\<^sub>u
                \<guillemotleft>st\<guillemotright> \<Rightarrow>
                ?Post) \<sqsubseteq>
               ?B (?Pre \<and>
                   (\<lceil>?e\<rceil>\<^sub><,
                    \<guillemotleft>st\<guillemotright>)\<^sub>u \<in>\<^sub>u
                   \<guillemotleft>?R\<guillemotright> \<Rightarrow>
                   ?Post) |]
      ==> (?Pre \<Rightarrow> ?Post) \<sqsubseteq> \<nu> ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 4)),
        template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app
          (template_app (template_hole 11, template_var 2),
           template_var 0)))),
    ("utp_recursion.mu_rec_total_pure_rule",
     "[| wf ?R; Monotonic ?B;
         !!f st.
            [| (?Pre \<and>
                (\<lceil>?e\<rceil>\<^sub><,
                 \<guillemotleft>st\<guillemotright>)\<^sub>u \<in>\<^sub>u
                \<guillemotleft>?R\<guillemotright> \<Rightarrow>
                ?Post) \<sqsubseteq>
               f;
               \<mu> ?B = f |]
            ==> (?Pre \<and>
                 \<lceil>?e\<rceil>\<^sub>< =\<^sub>u
                 \<guillemotleft>st\<guillemotright> \<Rightarrow>
                 ?Post) \<sqsubseteq>
                ?B f |]
      ==> (?Pre \<Rightarrow> ?Post) \<sqsubseteq> \<mu> ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 4)),
        template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 3),
         template_app
          (template_app (template_hole 12, template_var 2),
           template_var 0)))),
    ("utp_recursion.nu_rec_total_pure_rule",
     "[| wf ?R; Monotonic ?B;
         !!f st.
            [| (?Pre \<and>
                (\<lceil>?e\<rceil>\<^sub><,
                 \<guillemotleft>st\<guillemotright>)\<^sub>u \<in>\<^sub>u
                \<guillemotleft>?R\<guillemotright> \<Rightarrow>
                ?Post) \<sqsubseteq>
               f;
               \<nu> ?B = f |]
            ==> (?Pre \<and>
                 \<lceil>?e\<rceil>\<^sub>< =\<^sub>u
                 \<guillemotleft>st\<guillemotright> \<Rightarrow>
                 ?Post) \<sqsubseteq>
                ?B f |]
      ==> (?Pre \<Rightarrow> ?Post) \<sqsubseteq> \<nu> ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 4)),
        template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 3),
         template_app
          (template_app (template_hole 12, template_var 2),
           template_var 0)))),
    ("utp_recursion.wf_fixp_uinduct_pure_ueq_gen",
     "[| ?fp ?B = ?B (?fp ?B); wf ?R;
         !!f st.
            [| !!st'.
                  (st', st) : ?R ==>
                  (?Pre \<and>
                   \<lceil>?e\<rceil>\<^sub>< =\<^sub>u
                   \<guillemotleft>st'\<guillemotright> \<Rightarrow>
                   ?Post) \<sqsubseteq>
                  f;
               ?fp ?B = f |]
            ==> (?Pre \<and>
                 \<lceil>?e\<rceil>\<^sub>< =\<^sub>u
                 \<guillemotleft>st\<guillemotright> \<Rightarrow>
                 ?Post) \<sqsubseteq>
                ?B f |]
      ==> (?Pre \<Rightarrow> ?Post) \<sqsubseteq> ?fp ?B",
     template_implication
      ([template_equation
         (template_app (template_var 5, template_var 4),
          template_app
           (template_var 4, template_app (template_var 5, template_var 4))),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 5, template_var 4),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0))))]
