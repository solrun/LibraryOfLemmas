   [("utp_expr_insts.mkuexpr_lit",
     "mk\<^sub>e (%s. ?k) = \<guillemotleft>?k\<guillemotright>",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_insts.of_nat_uexpr_rep_eq",
     "\<lbrakk>of_nat ?x\<rbrakk>\<^sub>e ?b = of_nat ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("utp_expr_insts.mkuexpr_lens_get",
     "mk\<^sub>e get\<^bsub>?x\<^esub> = &?x",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("utp_expr_insts.mkuexpr_numeral",
     "mk\<^sub>e (%s. numeral ?n) = numeral ?n",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_expr_insts.lit_uminus",
     "\<guillemotleft>- ?x\<guillemotright> =
      - \<guillemotleft>?x\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.mkuexpr_uminus",
     "mk\<^sub>e (%s. - ?f s) = - mk\<^sub>e ?f",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_power",
     "\<guillemotleft>?x ^ ?n\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> ^ ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("utp_expr_insts.lit_minus",
     "\<guillemotleft>?x - ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> -
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_times",
     "\<guillemotleft>?x * ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> *
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_div",
     "\<guillemotleft>?x div ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> div
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.lit_divide",
     "\<guillemotleft>?x / ?y\<guillemotright> =
      \<guillemotleft>?x\<guillemotright> /
      \<guillemotleft>?y\<guillemotright>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.power_rep_eq",
     "\<lbrakk>?P ^ ?n\<rbrakk>\<^sub>e =
      (%b. \<lbrakk>?P\<rbrakk>\<^sub>e b ^ ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("utp_expr_insts.mkuexpr_plus",
     "mk\<^sub>e (%s. ?f s + ?g s) = mk\<^sub>e ?f + mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.mkuexpr_minus",
     "mk\<^sub>e (%s. ?f s - ?g s) = mk\<^sub>e ?f - mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.mkuexpr_times",
     "mk\<^sub>e (%s. ?f s * ?g s) = mk\<^sub>e ?f * mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.mkuexpr_divide",
     "mk\<^sub>e (%s. ?f s / ?g s) = mk\<^sub>e ?f / mk\<^sub>e ?g",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_expr_insts.mkuexpr_pair",
     "mk\<^sub>e (%s. (?f s, ?g s)) =
      (mk\<^sub>e ?f, mk\<^sub>e ?g)\<^sub>u",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 3),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0))))]
