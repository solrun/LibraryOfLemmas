Loading theory "Draft.utp_parser_utils" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_expr_funcs" via "Draft.utp_expr_insts" via "Draft.utp_expr" via "Draft.utp_var")
Loading theory "Draft.Templates" (required by "Draft.utp_pred_lawsTemplates" via "Draft.ExtrEqs")
signature UTP_PARSER_UTILS =
  sig
    val mk_char: string -> Ast.ast
    val mk_nib: int -> Ast.ast
    val mk_string: string list -> Ast.ast
    val string_ast_tr: Ast.ast list -> Ast.ast
  end
signature NAME_UTILS =
  sig
    val deep_unmark_const: term -> term
    val last_char_str: string -> string
    val mk_id: string -> term
    val repeat_char: char -> int -> string
    val right_crop_by: int -> string -> string
  end
structure Utp_Parser_Utils: UTP_PARSER_UTILS
structure Name_Utils: NAME_UTILS
### theory "Draft.utp_parser_utils"
### 0.041s elapsed time, 0.111s cpu time, 0.000s GC time
Loading theory "Draft.utp_var" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_expr_funcs" via "Draft.utp_expr_insts" via "Draft.utp_expr")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.180s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.utp_pred_lawsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.588s elapsed time, 1.184s cpu time, 0.097s GC time
### theory "Draft.utp_var"
### 0.687s elapsed time, 1.318s cpu time, 0.097s GC time
Loading theory "Draft.utp_expr" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_expr_funcs" via "Draft.utp_expr_insts")
instantiation
  uexpr :: (zero, type) zero
  zero_uexpr == zero_class.zero :: ('a, 'b) uexpr
instantiation
  uexpr :: (one, type) one
  one_uexpr == one_class.one :: ('a, 'b) uexpr
instantiation
  uexpr :: (plus, type) plus
  plus_uexpr == plus :: ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (ord, type) ord
  less_eq_uexpr == less_eq :: ('a, 'b) uexpr => ('a, 'b) uexpr => bool
  less_uexpr == less :: ('a, 'b) uexpr => ('a, 'b) uexpr => bool
### theory "Draft.utp_expr"
### 0.789s elapsed time, 0.819s cpu time, 0.054s GC time
Loading theory "Draft.utp_expr_insts" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_expr_funcs")
instantiation
  uexpr :: (uminus, type) uminus
  uminus_uexpr == uminus :: ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (minus, type) minus
  minus_uexpr == minus :: ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (times, type) times
  times_uexpr == times :: ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (divide, type) divide
  divide_uexpr == divide ::
    ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (inverse, type) inverse
  inverse_uexpr == inverse :: ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (modulo, type) modulo
  modulo_uexpr == modulo ::
    ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (sgn, type) sgn
  sgn_uexpr == sgn :: ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (abs, type) abs
  abs_uexpr == abs :: ('a, 'b) uexpr => ('a, 'b) uexpr
### theory "Draft.utp_expr_insts"
### 0.228s elapsed time, 0.228s cpu time, 0.000s GC time
Loading theory "Draft.utp_expr_funcs" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred")
Loading theory "Draft.utp_unrest" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_subst")
### theory "Draft.utp_expr_funcs"
### 0.150s elapsed time, 0.305s cpu time, 0.053s GC time
### theory "Draft.utp_unrest"
### 0.224s elapsed time, 0.379s cpu time, 0.053s GC time
Loading theory "Draft.utp_usedby" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_meta_subst" via "Draft.utp_tactics")
Loading theory "Draft.utp_subst" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred")
### theory "Draft.utp_usedby"
### 0.080s elapsed time, 0.160s cpu time, 0.000s GC time
Loading theory "Draft.utp_tactics" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred" via "Draft.utp_meta_subst")
signature UEXPR_REP_EQ =
  sig
    val get_uexpr_rep_eq_thms: theory -> thm list
    val read_uexpr_rep_eq_thms: theory -> theory
  end
structure uexpr_rep_eq: UEXPR_REP_EQ
val it = (): unit
### theory "Draft.utp_subst"
### 0.423s elapsed time, 0.845s cpu time, 0.049s GC time
structure List_Extra: sig val contains: ''a -> ''a list -> bool end
signature BASIC_TACTICS =
  sig
    val fast_transfer: Proof.context -> thm list -> context_tactic
    val interp_tac: Proof.context -> thm list -> context_tactic
    val slow_transfer: Proof.context -> thm list -> context_tactic
    val utp_auto_tac: Proof.context -> thm list -> context_tactic
    val utp_blast_tac: Proof.context -> thm list -> context_tactic
    val utp_simp_tac: Proof.context -> thm list -> context_tactic
  end
structure Basic_Tactics: BASIC_TACTICS
signature UTP_TACTICS =
  sig
    val inst_gen_pred_tac:
       utp_tac_args ->
         (Proof.context -> thm list -> context_tactic) ->
           Proof.context -> thm list -> context_tactic
    val inst_gen_rel_tac:
       utp_tac_args ->
         (Proof.context -> thm list -> context_tactic) ->
           Proof.context -> thm list -> context_tactic
    val no_interpN: string
    val robustN: string
    val scan_args: utp_tac_args parser
    type utp_tac_args
  end
structure UTP_Tactics: UTP_TACTICS
### theory "Draft.utp_tactics"
### 1.436s elapsed time, 1.853s cpu time, 0.087s GC time
Loading theory "Draft.utp_meta_subst" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws" via "Draft.utp_pred")
### theory "Draft.utp_meta_subst"
### 0.381s elapsed time, 0.447s cpu time, 0.037s GC time
Loading theory "Draft.utp_pred" (required by "Draft.utp_pred_lawsTemplates" via "Draft.utp_pred_laws")
instantiation
  uexpr :: (lattice, type) lattice
  inf_uexpr == inf :: ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
  sup_uexpr == sup :: ('a, 'b) uexpr => ('a, 'b) uexpr => ('a, 'b) uexpr
instantiation
  uexpr :: (bounded_lattice, type) bounded_lattice
  bot_uexpr == bot :: ('a, 'b) uexpr
  top_uexpr == top_class.top :: ('a, 'b) uexpr
instantiation
  uexpr :: (complete_lattice, type) complete_lattice
  Inf_uexpr == Inf :: ('a, 'b) uexpr set => ('a, 'b) uexpr
  Sup_uexpr == Sup :: ('a, 'b) uexpr set => ('a, 'b) uexpr
### Ignoring duplicate rewrite rule:
### ?X1 \<subseteq>\<^sub>L ?X1 == True
### Ignoring duplicate rewrite rule:
### wb_lens ?Y1 ==> ?X1 \<subseteq>\<^sub>L ?X1 +\<^sub>L ?Y1 == True
### theory "Draft.utp_pred"
### 1.408s elapsed time, 1.791s cpu time, 0.499s GC time
Loading theory "Draft.utp_pred_laws" (required by "Draft.utp_pred_lawsTemplates")
### Partially applied constant "utp_pred.conj_upred" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<and>) (ran\<^sub>l (?x # ?xs)) ==
### fold (\<and>) ?xs ?x
### Partially applied constant "utp_pred.disj_upred" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<or>) (ran\<^sub>l (?x # ?xs)) ==
### fold (\<or>) ?xs ?x
### theory "Draft.utp_pred_laws"
### 0.836s elapsed time, 0.889s cpu time, 0.100s GC time
Loading theory "Draft.utp_pred_lawsTemplates"
val templateLemmas =
   [("utp_pred_laws.bdd_above_top", "preorder.bdd_above (<=) ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("utp_pred_laws.bdd_below_bot", "preorder.bdd_below (<=) ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("utp_pred_laws.top_greatest", "true \<sqsubseteq> ?a",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("utp_pred_laws.bot_least", "?a \<sqsubseteq> false",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("utp_pred_laws.not_less_bot", "\<not> ?a < false",
     template_negation
      (template_inequation (less_than, template_var 0, template_hole 0))),
    ("utp_pred_laws.not_top_less", "\<not> true < ?a",
     template_negation
      (template_inequation (less_than, template_hole 0, template_var 0))),
    ("utp_pred_laws.true_inf", "?P \<squnion> true = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.true_inf", "true \<squnion> ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.false_sup", "?P \<sqinter> false = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.false_sup", "false \<sqinter> ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.eq_upred_refl", "(?x =\<^sub>u ?x) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.upred_eq_true", "(?p =\<^sub>u true) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.upred_true_eq", "(true =\<^sub>u ?p) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.all_zero", "(\<forall> \<emptyset> \<bullet> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.true_conj_zero", "(?P \<and> false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.true_conj_zero", "(false \<and> ?P) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.inf_bot_left", "(false \<and> ?x) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.inf_top_left", "(true \<and> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.inf_bot_right", "(?x \<and> false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.inf_top_right", "(?x \<and> true) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.inf_idem", "(?x \<and> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.true_disj_zero", "(?P \<or> true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.sup_bot_left", "(false \<or> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.true_disj_zero", "(true \<or> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.sup_top_left", "(true \<or> ?x) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.sup_bot_right", "(?x \<or> false) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.sup_top_right", "(?x \<or> true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.sup_idem", "(?x \<or> ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.C1", "(\<exists> ?x \<bullet> false) = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.ex_zero", "(\<exists> \<emptyset> \<bullet> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.p_iff_p", "(?P \<Leftrightarrow> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.true_iff", "(?P \<Leftrightarrow> true) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.p_imp_p", "(?P \<Rightarrow> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.imp_true", "(?p \<Rightarrow> true) = true",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.imp_vacuous", "(false \<Rightarrow> ?u) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("utp_pred_laws.true_imp", "(true \<Rightarrow> ?p) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.double_compl", "(\<not> \<not> ?x) = ?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_pred_laws.shAll_unbound",
     "(\<^bold>\<forall> x \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_pred_laws.shEx_unbound",
     "(\<^bold>\<exists> x \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("utp_pred_laws.var_res_all", "?P \<restriction>\<^sub>v \<Sigma> = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("utp_pred_laws.conj_idem", "(?P \<and> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.disj_idem", "(?P \<or> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("utp_pred_laws.double_negation", "(\<not> \<not> ?P) = ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("utp_pred_laws.sup_ge1", "(?x \<or> ?y) \<sqsubseteq> ?x",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.sup_ge2", "(?x \<or> ?y) \<sqsubseteq> ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.inf_le1", "?x \<sqsubseteq> (?x \<and> ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("utp_pred_laws.inf_le2", "?y \<sqsubseteq> (?x \<and> ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("utp_pred_laws.closure_all",
     "[?P]\<^sub>u = (\<forall> \<Sigma> \<bullet> ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("utp_pred_laws.upred_eq_false", "(?p =\<^sub>u false) = (\<not> ?p)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.upred_false_eq", "(false =\<^sub>u ?p) = (\<not> ?p)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.p_imp_false", "(?P \<Rightarrow> false) = (\<not> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.max_bot", "ord.max (<=) false ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.max_top", "ord.max (<=) true ?x = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.max_bot2", "ord.max (<=) ?x false = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("utp_pred_laws.max_top2", "ord.max (<=) ?x true = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.min_bot", "ord.min (<=) false ?x = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.min_top", "ord.min (<=) true ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.min_bot2", "ord.min (<=) ?x false = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("utp_pred_laws.min_top2", "ord.min (<=) ?x true = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("utp_pred_laws.p_and_not_p", "(?P \<and> \<not> ?P) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot", "(?x \<and> \<not> ?x) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.compl_inf_bot", "(\<not> ?x \<and> ?x) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.p_or_not_p", "(?P \<or> \<not> ?P) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_compl_top", "(?x \<or> \<not> ?x) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.compl_sup_top", "(\<not> ?x \<or> ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.le_pred_refl", "(?x \<le>\<^sub>u ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("utp_pred_laws.bot_unique", "(false \<sqsubseteq> ?a) = (?a = false)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("utp_pred_laws.top_unique", "(?a \<sqsubseteq> true) = (?a = true)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("utp_pred_laws.cond_idem",
     "?P \<triangleleft> ?b \<triangleright> ?P = ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.cond_unit_F",
     "?P \<triangleleft> false \<triangleright> ?Q = ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0),
       template_var 0)),
    ("utp_pred_laws.cond_unit_T",
     "?P \<triangleleft> true \<triangleright> ?Q = ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1),
         template_var 0),
       template_var 1)),
    ("utp_pred_laws.UINF_ind_const", "(\<Sqinter> i \<bullet> ?P) = ?P",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_var 0)),
    ("utp_pred_laws.eq_upred_sym", "(?x =\<^sub>u ?y) = (?y =\<^sub>u ?x)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.inf_commute", "(?x \<and> ?y) = (?y \<and> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.sup_commute", "(?x \<or> ?y) = (?y \<or> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.uset_laws", "(?x \<in>\<^sub>u {}\<^sub>u) = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_hole 0)),
    ("utp_pred_laws.cond_true_false",
     "true \<triangleleft> ?b \<triangleright> false = ?b",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0),
           template_hole 1),
         template_hole 0),
       template_var 0)),
    ("utp_pred_laws.inf_sup_absorb", "(?x \<and> (?x \<or> ?y)) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.sup_inf_absorb", "(?x \<or> ?x \<and> ?y) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.usup_and", "?P \<squnion> ?Q = (?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.uinf_or", "?P \<sqinter> ?Q = (?P \<or> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.conj_comm", "(?P \<and> ?Q) = (?Q \<and> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.disj_comm", "(?P \<or> ?Q) = (?Q \<or> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.uzero_le_laws", "(1 \<le>\<^sub>u numeral ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.uzero_le_laws", "(0 \<le>\<^sub>u numeral ?x) = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.conj_disj_abs", "(?P \<and> (?P \<or> ?Q)) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.disj_conj_abs", "(?P \<or> ?P \<and> ?Q) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("utp_pred_laws.bdd_above_finite",
     "finite ?A ==> preorder.bdd_above (<=) ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("utp_pred_laws.bdd_below_finite",
     "finite ?A ==> preorder.bdd_below (<=) ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("utp_pred_laws.refBy_order",
     "(?P \<sqsubseteq> ?Q) = `?Q \<Rightarrow> ?P`",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.bot_less", "(\<not> ?a = false) = (false < ?a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("utp_pred_laws.less_top", "(\<not> ?a = true) = (?a < true)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("utp_pred_laws.taut_iff_eq", "`?P \<Leftrightarrow> ?Q` = (?P = ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("utp_pred_laws.shAll_bool", "ushAll ?P = (?P True \<and> ?P False)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app (template_var 0, template_hole 0)))),
    ("utp_pred_laws.shEx_bool", "ushEx ?P = (?P True \<or> ?P False)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app (template_var 0, template_hole 0)))),
    ("utp_pred_laws.diff_eq", "diff_upred ?x ?y = (?x \<and> \<not> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.UINF_where_false",
     "(\<Sqinter> i | false \<bullet> ?P i) = false",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.UINF_false", "UINF ?P (%i. false) = false",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.USUP_where_false",
     "(\<Squnion> i | false \<bullet> ?P i) = true",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.USUP_true", "USUP ?F (%P. true) = true",
     template_equation
      (template_app (template_app (template_hole 1, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot_right",
     "(?x \<and> ?y \<and> \<not> ?x) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1))),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot_left2",
     "(?x \<and> \<not> ?x \<and> ?y) = false",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.inf_compl_bot_left1",
     "(\<not> ?x \<and> ?x \<and> ?y) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_compl_top_left2",
     "(?x \<or> \<not> ?x \<or> ?y) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_compl_top_left1",
     "(\<not> ?x \<or> ?x \<or> ?y) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.le_bot", "false \<sqsubseteq> ?a ==> ?a = false",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 1)],
       template_equation (template_var 0, template_hole 1))),
    ("utp_pred_laws.top_le", "?a \<sqsubseteq> true ==> ?a = true",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 0)],
       template_equation (template_var 0, template_hole 1))),
    ("utp_pred_laws.not_all_not",
     "\<not> (\<forall> ?x \<bullet> \<not> ?P) =
             (\<exists> ?x \<bullet> ?P)",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("utp_pred_laws.not_ex_not",
     "\<not> (\<exists> ?x \<bullet> \<not> ?P) =
             (\<forall> ?x \<bullet> ?P)",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("utp_pred_laws.obs_upred_refine_iff",
     "(?P \<sqsubseteq> ?Q) =
      (\<lbrakk>?Q\<rbrakk>\<^sub>o <= \<lbrakk>?P\<rbrakk>\<^sub>o)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.le_iff_inf",
     "(?y \<sqsubseteq> ?x) = ((?x \<and> ?y) = ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("utp_pred_laws.le_iff_sup",
     "(?y \<sqsubseteq> ?x) = ((?x \<or> ?y) = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.bdd_above_insert",
     "preorder.bdd_above (<=) (insert ?a ?A) = preorder.bdd_above (<=) ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("utp_pred_laws.bdd_below_insert",
     "preorder.bdd_below (<=) (insert ?a ?A) = preorder.bdd_below (<=) ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("utp_pred_laws.atLeast_eq_UNIV_iff",
     "(ord.atLeast (<=) ?x = UNIV) = (?x = false)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("utp_pred_laws.atMost_eq_UNIV_iff",
     "(ord.atMost (<=) ?x = UNIV) = (?x = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("utp_pred_laws.compl_eq_compl_iff",
     "((\<not> ?x) = (\<not> ?y)) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("utp_pred_laws.diff_shunt_var",
     "(diff_upred ?x ?y = false) = (?y \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.compl_less_compl_iff",
     "((\<not> ?x) < (\<not> ?y)) = (?y < ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("utp_pred_laws.compl_le_compl_iff",
     "((\<not> ?y) \<sqsubseteq> (\<not> ?x)) = (?x \<sqsubseteq> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("utp_pred_laws.impl_mp1",
     "(?P \<and> (?P \<Rightarrow> ?Q)) = (?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("utp_pred_laws.inf_left_idem",
     "(?x \<and> ?x \<and> ?y) = (?x \<and> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.inf_right_idem",
     "((?x \<and> ?y) \<and> ?y) = (?x \<and> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.impl_mp2",
     "((?P \<Rightarrow> ?Q) \<and> ?P) = (?Q \<and> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("utp_pred_laws.sup_left_idem",
     "(?x \<or> ?x \<or> ?y) = (?x \<or> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.C5", "(&?x =\<^sub>u &?x) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("utp_pred_laws.ex_weakens",
     "wb_lens ?x ==> (\<exists> ?x \<bullet> ?P) \<sqsubseteq> ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.all_strengthens",
     "wb_lens ?x ==> ?P \<sqsubseteq> (\<forall> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.taut_conj", "`?A \<and> ?B` = (`?A` \<and> `?B`)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.inf_shunt",
     "((?x \<and> ?y) = false) = ((\<not> ?y) \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.sup_shunt",
     "((?x \<or> ?y) = true) = (?y \<sqsubseteq> (\<not> ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("utp_pred_laws.compl_inf",
     "(\<not> (?x \<and> ?y)) = (\<not> ?x \<or> \<not> ?y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.compl_sup",
     "(\<not> (?x \<or> ?y)) = (\<not> ?x \<and> \<not> ?y)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.closure_conj_distr",
     "([?P]\<^sub>u \<and> [?Q]\<^sub>u) = [?P \<and> ?Q]\<^sub>u",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.inf_cancel_left1",
     "((?x \<and> ?a) \<and> \<not> ?x \<and> ?b) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.inf_cancel_left2",
     "((\<not> ?x \<and> ?a) \<and> ?x \<and> ?b) = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_cancel_left1",
     "((?x \<or> ?a) \<or> \<not> ?x \<or> ?b) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.sup_cancel_left2",
     "((\<not> ?x \<or> ?a) \<or> ?x \<or> ?b) = true",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_hole 0)),
    ("utp_pred_laws.not_conj_deMorgans",
     "(\<not> (?P \<and> ?Q)) = (\<not> ?P \<or> \<not> ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.not_disj_deMorgans",
     "(\<not> (?P \<or> ?Q)) = (\<not> ?P \<and> \<not> ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("utp_pred_laws.conj_disj_not_abs",
     "(?P \<and> (\<not> ?P \<or> ?Q)) = (?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("utp_pred_laws.C2",
     "wb_lens ?x ==> `?P \<Rightarrow> (\<exists> ?x \<bullet> ?P)`",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("utp_pred_laws.less_infI1", "?a < ?x ==> (?a \<and> ?b) < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("utp_pred_laws.less_infI2", "?b < ?x ==> (?a \<and> ?b) < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("utp_pred_laws.less_supI1", "?x < ?a ==> ?x < (?a \<or> ?b)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.less_supI2", "?x < ?b ==> ?x < (?a \<or> ?b)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.le_infI1",
     "?x \<sqsubseteq> ?a ==> ?x \<sqsubseteq> (?a \<and> ?b)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("utp_pred_laws.le_infI2",
     "?x \<sqsubseteq> ?b ==> ?x \<sqsubseteq> (?a \<and> ?b)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("utp_pred_laws.le_supI1",
     "?a \<sqsubseteq> ?x ==> (?a \<or> ?b) \<sqsubseteq> ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.le_supI2",
     "?b \<sqsubseteq> ?x ==> (?a \<or> ?b) \<sqsubseteq> ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.inf_absorb1",
     "?y \<sqsubseteq> ?x ==> (?x \<and> ?y) = ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("utp_pred_laws.sup_absorb2",
     "?y \<sqsubseteq> ?x ==> (?x \<or> ?y) = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.compl_mono",
     "?y \<sqsubseteq> ?x ==> (\<not> ?x) \<sqsubseteq> (\<not> ?y)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("utp_pred_laws.inf_absorb2",
     "?x \<sqsubseteq> ?y ==> (?x \<and> ?y) = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("utp_pred_laws.sup_absorb1",
     "?x \<sqsubseteq> ?y ==> (?x \<or> ?y) = ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("utp_pred_laws.all_unrest",
     "?x \<sharp> ?P ==> (\<forall> ?x \<bullet> ?P) = ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.ex_unrest",
     "?x \<sharp> ?P ==> (\<exists> ?x \<bullet> ?P) = ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.compl_less_swap1",
     "?y < (\<not> ?x) ==> ?x < (\<not> ?y)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 0, template_var 0))],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("utp_pred_laws.compl_less_swap2",
     "(\<not> ?y) < ?x ==> (\<not> ?x) < ?y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 0, template_var 1),
          template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("utp_pred_laws.compl_le_swap1",
     "(\<not> ?x) \<sqsubseteq> ?y ==> (\<not> ?y) \<sqsubseteq> ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 0, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("utp_pred_laws.compl_le_swap2",
     "?x \<sqsubseteq> (\<not> ?y) ==> ?y \<sqsubseteq> (\<not> ?x)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 0, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("utp_pred_laws.all_plus",
     "(\<forall> {?y, ?x} \<bullet> ?P) =
      (\<forall> ?x \<bullet> \<forall> ?y \<bullet> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.inf_left_commute",
     "(?x \<and> ?y \<and> ?z) = (?y \<and> ?x \<and> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.inf_assoc",
     "((?x \<and> ?y) \<and> ?z) = (?x \<and> ?y \<and> ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.sup_left_commute",
     "(?x \<or> ?y \<or> ?z) = (?y \<or> ?x \<or> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.sup_assoc",
     "((?x \<or> ?y) \<or> ?z) = (?x \<or> ?y \<or> ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.ex_plus",
     "(\<exists> {?y, ?x} \<bullet> ?P) =
      (\<exists> ?x \<bullet> \<exists> ?y \<bullet> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.UINF_is_exists",
     "(\<Sqinter> x \<bullet> ?P x) = ushEx ?P",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.USUP_is_forall",
     "(\<Squnion> x \<bullet> ?P x) = ushAll ?P",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.conj_assoc",
     "((?P \<and> ?Q) \<and> ?S) = (?P \<and> ?Q \<and> ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.disj_assoc",
     "((?P \<or> ?Q) \<or> ?S) = (?P \<or> ?Q \<or> ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.neg_conj_cancel1",
     "(\<not> ?P \<and> (?P \<or> ?Q)) = (\<not> ?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("utp_pred_laws.neg_conj_cancel2",
     "(\<not> ?Q \<and> (?P \<or> ?Q)) = (\<not> ?Q \<and> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("utp_pred_laws.closure_imp_distr",
     "`[?P \<Rightarrow> ?Q]\<^sub>u \<Rightarrow>
       [?P]\<^sub>u \<Rightarrow> [?Q]\<^sub>u`",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))
         )),
    ("utp_pred_laws.subsumption1",
     "`?P \<Rightarrow> ?Q` ==> (?P \<or> ?Q) = ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("utp_pred_laws.subsumption2",
     "`?Q \<Rightarrow> ?P` ==> (?P \<or> ?Q) = ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("utp_pred_laws.taut_refine_impl",
     "[| ?Q \<sqsubseteq> ?P; `?P` |] ==> `?Q`",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.sup_neg_inf",
     "((?q \<or> ?r) \<sqsubseteq> ?p) =
      (?r \<sqsubseteq> (?p \<and> \<not> ?q))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("utp_pred_laws.shunt1",
     "(?z \<sqsubseteq> (?x \<and> ?y)) =
      ((\<not> ?y \<or> ?z) \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("utp_pred_laws.shunt2",
     "(?z \<sqsubseteq> (?x \<and> \<not> ?y)) =
      ((?y \<or> ?z) \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.cond_symm",
     "?P \<triangleleft> ?b \<triangleright> ?Q =
      ?Q \<triangleleft> \<not> ?b \<triangleright> ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_var 1))),
    ("utp_pred_laws.UINF_pred_lit_eq",
     "(\<Sqinter> x | \<guillemotleft>x =
?v\<guillemotright> \<bullet> ?P x) =
      ?P ?v",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app (template_var 0, template_var 1))),
    ("utp_pred_laws.uset_mems",
     "(?x \<in>\<^sub>u {?y}\<^sub>u) = (?x =\<^sub>u ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0),
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.ulit_eq",
     "?x = ?y ==>
      (\<guillemotleft>?x\<guillemotright> =\<^sub>u
       \<guillemotleft>?y\<guillemotright>) =
      true",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("utp_pred_laws.conj_subst",
     "?P = ?R ==> (?P \<and> ?Q) = (?R \<and> ?Q)",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.disj_subst",
     "?P = ?R ==> (?P \<or> ?Q) = (?R \<or> ?Q)",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.all_equiv",
     "?x \<approx>\<^sub>L ?y ==>
      (\<forall> ?x \<bullet> ?P) = (\<forall> ?y \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.ex_equiv",
     "?x \<approx>\<^sub>L ?y ==>
      (\<exists> ?x \<bullet> ?P) = (\<exists> ?y \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.all_mono",
     "?P \<sqsubseteq> ?Q ==>
      (\<forall> ?x \<bullet> ?P) \<sqsubseteq>
      (\<forall> ?x \<bullet> ?Q)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.ex_mono",
     "?P \<sqsubseteq> ?Q ==>
      (\<exists> ?x \<bullet> ?P) \<sqsubseteq>
      (\<exists> ?x \<bullet> ?Q)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.taut_not",
     "\<Sigma> \<sharp> ?P ==> (\<not> `?P`) = `\<not> ?P`",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("utp_pred_laws.taut_shAll_intro", "ALL x. `?P x` ==> `ushAll ?P`",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty))
           ))),
    ("utp_pred_laws.spec_refine",
     "?Q \<sqsubseteq> (?P \<and> ?R) ==>
      (?P \<Rightarrow> ?Q) \<sqsubseteq> ?R",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.bdd_above_Un",
     "preorder.bdd_above (<=) (?A Un ?B) =
      (preorder.bdd_above (<=) ?A \<and> preorder.bdd_above (<=) ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("utp_pred_laws.bdd_below_Un",
     "preorder.bdd_below (<=) (?A Un ?B) =
      (preorder.bdd_below (<=) ?A \<and> preorder.bdd_below (<=) ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("utp_pred_laws.bot_eq_sup_iff",
     "(false = (?x \<or> ?y)) = (?x = false \<and> ?y = false)",
     template_bimplication
      (template_equation
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))
           ))),
    ("utp_pred_laws.top_eq_inf_iff",
     "(true = (?x \<and> ?y)) = (?x = true \<and> ?y = true)",
     template_bimplication
      (template_equation
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))
           ))),
    ("utp_pred_laws.inf_eq_top_iff",
     "((?x \<and> ?y) = true) = (?x = true \<and> ?y = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("utp_pred_laws.sup_eq_bot_iff",
     "((?x \<or> ?y) = false) = (?x = false \<and> ?y = false)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("utp_pred_laws.le_inf_iff",
     "((?y \<and> ?z) \<sqsubseteq> ?x) =
      (?y \<sqsubseteq> ?x \<and> ?z \<sqsubseteq> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.le_sup_iff",
     "(?z \<sqsubseteq> (?x \<or> ?y)) =
      (?z \<sqsubseteq> ?x \<and> ?z \<sqsubseteq> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.upred_eval_taut",
     "`?P\<lbrakk>\<guillemotleft>?b\<guillemotright>/&\<^bold>v\<rbrakk>` =
      \<lbrakk>?P\<rbrakk>\<^sub>e ?b",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_hole 2)),
               template_app (template_hole 1, template_var 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("utp_pred_laws.UINF_as_Sup_collect'",
     "(\<Sqinter> P \<bullet> ?f P) = \<Sqinter>range ?f",
     template_equation
      (template_app (template_app (template_hole 4, t_empty), t_empty),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("utp_pred_laws.USUP_as_Inf_collect'",
     "(\<Squnion> P \<bullet> ?f P) = \<Squnion>range ?f",
     template_equation
      (template_app (template_app (template_hole 4, t_empty), t_empty),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_hole 0)))),
    ("utp_pred_laws.UINF_as_Sup",
     "(\<Sqinter> P \<in> ?\<P> \<bullet> P) = \<Sqinter>?\<P>",
     template_equation
      (template_app (template_app (template_hole 5, t_empty), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.USUP_as_Inf",
     "(\<Squnion> P \<in> ?\<P> \<bullet> P) = \<Squnion>?\<P>",
     template_equation
      (template_app (template_app (template_hole 5, t_empty), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("utp_pred_laws.inf_sup_distrib1",
     "(?x \<and> (?y \<or> ?z)) = (?x \<and> ?y \<or> ?x \<and> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.inf_sup_distrib2",
     "((?y \<or> ?z) \<and> ?x) = (?y \<and> ?x \<or> ?z \<and> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.sup_inf_distrib1",
     "(?x \<or> ?y \<and> ?z) = ((?x \<or> ?y) \<and> (?x \<or> ?z))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.sup_inf_distrib2",
     "(?y \<and> ?z \<or> ?x) = ((?y \<or> ?x) \<and> (?z \<or> ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.shEx_lift_conj_2",
     "(?P \<and> ushEx ?Q) =
      (\<^bold>\<exists> x \<bullet> ?P \<and> ?Q x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.shEx_lift_conj_1",
     "(ushEx ?P \<and> ?Q) =
      (\<^bold>\<exists> x \<bullet> ?P x \<and> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.cond_conj_not",
     "(?P \<triangleleft> ?b \<triangleright> ?Q \<and> \<not> ?b) =
      (?Q \<and> \<not> ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 2)),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("utp_pred_laws.UINF_empty",
     "(\<Sqinter> i | \<guillemotleft>i\<guillemotright> \<in>\<^sub>u
                      {}\<^sub>u \<bullet> ?P i) =
      false",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.USUP_empty",
     "(\<Squnion> i | \<guillemotleft>i\<guillemotright> \<in>\<^sub>u
                      {}\<^sub>u \<bullet> ?P i) =
      true",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_hole 0)),
    ("utp_pred_laws.conj_disj_distr",
     "(?P \<and> (?Q \<or> ?R)) = (?P \<and> ?Q \<or> ?P \<and> ?R)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.disj_conj_distr",
     "(?P \<or> ?Q \<and> ?R) = ((?P \<or> ?Q) \<and> (?P \<or> ?R))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.distrib_sup_le",
     "((?x \<or> ?y) \<and> (?x \<or> ?z)) \<sqsubseteq>
      (?x \<or> ?y \<and> ?z)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.distrib_inf_le",
     "(?x \<and> (?y \<or> ?z)) \<sqsubseteq>
      (?x \<and> ?y \<or> ?x \<and> ?z)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.all_twice",
     "mwb_lens ?x ==>
      (\<forall> ?x \<bullet> \<forall> ?x \<bullet> ?P) =
      (\<forall> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.exists_twice",
     "mwb_lens ?x ==>
      (\<exists> ?x \<bullet> \<exists> ?x \<bullet> ?P) =
      (\<exists> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.var_res_twice",
     "mwb_lens ?x ==>
      ?P \<restriction>\<^sub>v ?x \<restriction>\<^sub>v ?x =
      ?P \<restriction>\<^sub>v ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.unrest_as_exists",
     "vwb_lens ?x ==>
      (?x \<sharp> ?P) = ((\<exists> ?x \<bullet> ?P) = ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)))),
    ("utp_pred_laws.ulit_neq",
     "\<not> ?x = ?y ==>
      (\<guillemotleft>?x\<guillemotright> =\<^sub>u
       \<guillemotleft>?y\<guillemotright>) =
      false",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("utp_pred_laws.cond_neg",
     "\<not> ?P \<triangleleft> ?b \<triangleright> ?Q =
             (\<not> ?P) \<triangleleft> ?b \<triangleright> (\<not> ?Q)",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("utp_pred_laws.atLeastAtMost_eq_UNIV_iff",
     "(ord.atLeastAtMost (<=) ?x ?y = UNIV) =
      (?x = false \<and> ?y = true)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1),
           template_var 0),
         template_hole 4),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("utp_pred_laws.conditional_iff",
     "((?P \<Rightarrow> ?Q) = (?P \<Rightarrow> ?R)) =
      `?P \<Rightarrow> ?Q \<Leftrightarrow> ?R`",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("utp_pred_laws.shAll_cong",
     "(!!x. ?P x = ?Q x) ==> ushAll ?P = ushAll ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.shEx_cong",
     "(!!x. ?P x = ?Q x) ==> ushEx ?P = ushEx ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("utp_pred_laws.cond_L6",
     "?P \<triangleleft> ?b \<triangleright>
         (?Q \<triangleleft> ?b \<triangleright> ?R) =
      ?P \<triangleleft> ?b \<triangleright> ?R",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 3),
           template_var 2),
         template_var 0))),
    ("utp_pred_laws.UINF_pred_ueq",
     "(\<Sqinter> x | \<guillemotleft>x\<guillemotright> =\<^sub>u
                      ?v \<bullet> ?P x) =
      msubst ?P ?v",
     template_equation
      (template_app (template_app (template_hole 3, t_empty), t_empty),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("utp_pred_laws.impl_adjoin",
     "((?P \<Rightarrow> ?Q) \<and> ?R) =
      ((?P \<and> ?R \<Rightarrow> ?Q \<and> ?R) \<and> ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0))),
    ("utp_pred_laws.not_UINF_ind",
     "(\<not> (\<Sqinter> i \<bullet> ?P i)) =
      (\<Squnion> i \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 3,
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.not_USUP_ind",
     "(\<not> (\<Squnion> i \<bullet> ?P i)) =
      (\<Sqinter> i \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 3,
         template_app (template_app (template_hole 2, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.shEx_commute",
     "(\<^bold>\<exists> x \<bullet> ushEx (?P x)) =
      (\<^bold>\<exists> y \<bullet> \<^bold>\<exists> x \<bullet> ?P x y)",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, t_empty))),
    ("utp_pred_laws.shEx_one_point",
     "(\<^bold>\<exists> x \<bullet> \<guillemotleft>x\<guillemotright> =\<^sub>u
                                     ?v \<and>
                                     ?P x) =
      msubst ?P ?v",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("utp_pred_laws.mono_inf",
     "order.mono (<=) ?f ==> ?f (?A \<and> ?B) <= ?f ?A \<squnion> ?f ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("utp_pred_laws.mono_sup",
     "order.mono (<=) ?f ==> ?f ?A \<sqinter> ?f ?B <= ?f (?A \<or> ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("utp_pred_laws.unumeral_le_2",
     "numeral ?j < numeral ?i ==>
      (numeral ?i \<le>\<^sub>u numeral ?j) = false",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("utp_pred_laws.unumeral_le_1",
     "numeral ?i <= numeral ?j ==>
      (numeral ?i \<le>\<^sub>u numeral ?j) = true",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 5),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("utp_pred_laws.le_supI",
     "[| ?x \<sqsubseteq> ?a; ?x \<sqsubseteq> ?b |]
      ==> ?x \<sqsubseteq> (?a \<or> ?b)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("utp_pred_laws.le_infI",
     "[| ?a \<sqsubseteq> ?x; ?b \<sqsubseteq> ?x |]
      ==> (?a \<and> ?b) \<sqsubseteq> ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.inf_greatest",
     "[| ?y \<sqsubseteq> ?x; ?z \<sqsubseteq> ?x |]
      ==> (?y \<and> ?z) \<sqsubseteq> ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.sup_least",
     "[| ?x \<sqsubseteq> ?y; ?x \<sqsubseteq> ?z |]
      ==> ?x \<sqsubseteq> (?y \<or> ?z)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("utp_pred_laws.eq_split",
     "[| `?P \<Rightarrow> ?Q`; `?Q \<Rightarrow> ?P` |] ==> ?P = ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_equation (template_var 1, template_var 0))),
    ("utp_pred_laws.UINF_as_Sup_image",
     "(\<Sqinter> P \<in> ?A \<bullet> ?f P) = \<Sqinter>(?f ` ?A)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.USUP_as_Inf_image",
     "(\<Squnion> P \<in> ?\<P> \<bullet> ?f P) = \<Squnion>(?f ` ?\<P>)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("utp_pred_laws.all_commute",
     "?x \<bowtie> ?y ==>
      (\<forall> ?x \<bullet> \<forall> ?y \<bullet> ?P) =
      (\<forall> ?y \<bullet> \<forall> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.C4b",
     "?x \<bowtie> ?y ==>
      (\<exists> ?x \<bullet> \<exists> ?y \<bullet> ?P) =
      (\<exists> ?y \<bullet> \<exists> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.C4a",
     "?x \<approx>\<^sub>L ?y ==>
      (\<exists> ?x \<bullet> \<exists> ?y \<bullet> ?P) =
      (\<exists> ?y \<bullet> \<exists> ?x \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.ex_conj_contr_left",
     "?x \<sharp> ?P ==>
      (\<exists> ?x \<bullet> ?P \<and> ?Q) =
      (?P \<and> (\<exists> ?x \<bullet> ?Q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.ex_conj_contr_right",
     "?x \<sharp> ?Q ==>
      (\<exists> ?x \<bullet> ?P \<and> ?Q) =
      ((\<exists> ?x \<bullet> ?P) \<and> ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("utp_pred_laws.UINF_refines'",
     "(!!i. ?P \<sqsubseteq> ?Q i) ==>
      ?P \<sqsubseteq> (\<Sqinter> i \<bullet> ?Q i)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app (template_app (template_hole 1, t_empty), t_empty),
         template_var 0))),
    ("utp_pred_laws.inf_Sup_absorb",
     "[| finite ?A; ?a : ?A |]
      ==> (?a \<and> semilattice_sup.Sup_fin (\<or>) ?A) = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0))),
    ("utp_pred_laws.sup_Inf_absorb",
     "[| finite ?A; ?a : ?A |]
      ==> (semilattice_inf.Inf_fin (\<and>) ?A \<or> ?a) = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0),
         template_var 0))),
    ("utp_pred_laws.cond_conj",
     "?P \<triangleleft> ?b \<and> ?c \<triangleright> ?Q =
      ?P \<triangleleft> ?c \<triangleright>
         ?Q \<triangleleft> ?b \<triangleright>
         ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("utp_pred_laws.cond_L7",
     "?P \<triangleleft> ?b \<triangleright>
         (?P \<triangleleft> ?c \<triangleright> ?Q) =
      ?P \<triangleleft> ?b \<or> ?c \<triangleright> ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("utp_pred_laws.uset_mems",
     "(?x \<in>\<^sub>u ?A \<inter>\<^sub>u ?B) =
      (?x \<in>\<^sub>u ?A \<and> ?x \<in>\<^sub>u ?B)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.uset_mems",
     "(?x \<in>\<^sub>u ?A \<union>\<^sub>u ?B) =
      (?x \<in>\<^sub>u ?A \<or> ?x \<in>\<^sub>u ?B)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.uset_laws",
     "(?x \<in>\<^sub>u {?m..?n}\<^sub>u) =
      (?m \<le>\<^sub>u ?x \<and> ?x \<le>\<^sub>u ?n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_conj_distr",
     "(?P \<and> ?Q \<triangleleft> ?b \<triangleright> ?S) =
      (?P \<and> ?Q) \<triangleleft> ?b \<triangleright> (?P \<and> ?S)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("utp_pred_laws.cond_disj_distr",
     "(?P \<or> ?Q \<triangleleft> ?b \<triangleright> ?S) =
      (?P \<or> ?Q) \<triangleleft> ?b \<triangleright> (?P \<or> ?S)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("utp_pred_laws.spec_cond_dist",
     "(?P \<Rightarrow> ?Q \<triangleleft> ?b \<triangleright> ?R) =
      (?P \<Rightarrow> ?Q) \<triangleleft> ?b \<triangleright>
         (?P \<Rightarrow> ?R)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("utp_pred_laws.conj_UINF_ind_dist",
     "(?P \<and> (\<Sqinter> Q \<bullet> ?F Q)) =
      (\<Sqinter> Q \<bullet> ?P \<and> ?F Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_app (template_hole 1, t_empty), t_empty)),
       template_app (template_app (template_hole 1, t_empty), t_empty))),
    ("utp_pred_laws.cond_and_T_integrate",
     "(?P \<and> ?b \<or> ?Q \<triangleleft> ?b \<triangleright> ?R) =
      (?P \<or> ?Q) \<triangleleft> ?b \<triangleright> ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_var 0))),
    ("utp_pred_laws.taut_split_subst",
     "vwb_lens ?x ==>
      `?P` =
      (ALL v. `?P\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk>`)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("utp_pred_laws.Inf_fin_le_Sup_fin",
     "[| finite ?A; \<not> ?A = {} |]
      ==> semilattice_sup.Sup_fin (\<or>) ?A \<sqsubseteq>
          semilattice_inf.Inf_fin (\<and>) ?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("utp_pred_laws.cond_monotonic",
     "[| mono ?P; mono ?Q |]
      ==> mono (%X. ?P X \<triangleleft> ?b \<triangleright> ?Q X)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("utp_pred_laws.inf_mono",
     "[| ?c \<sqsubseteq> ?a; ?d \<sqsubseteq> ?b |]
      ==> (?c \<and> ?d) \<sqsubseteq> (?a \<and> ?b)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.sup_mono",
     "[| ?c \<sqsubseteq> ?a; ?d \<sqsubseteq> ?b |]
      ==> (?c \<or> ?d) \<sqsubseteq> (?a \<or> ?b)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.taut_impl_intro",
     "[| \<Sigma> \<sharp> ?P; `?P` ==> `?Q` |] ==> `?P \<Rightarrow> ?Q`",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 1))],
          template_predicate
           (template_app (template_hole 1, template_var 0)))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("utp_pred_laws.UINF_as_Sup_collect",
     "(\<Sqinter> P \<in> ?A \<bullet> ?f P) = \<Sqinter>(?f ` ?A)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("utp_pred_laws.UINF_mem_UNIV",
     "(\<Sqinter> x \<in> UNIV \<bullet> ?P x) =
      (\<Sqinter> x \<bullet> ?P x)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.USUP_as_Inf_collect",
     "(\<Squnion> P \<in> ?A \<bullet> ?f P) = \<Squnion>(?f ` ?A)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("utp_pred_laws.USUP_mem_UNIV",
     "(\<Squnion> x \<in> UNIV \<bullet> ?P x) =
      (\<Squnion> x \<bullet> ?P x)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.UINF_mem_true",
     "\<not> ?A = {} ==> (\<Sqinter> i \<in> ?A \<bullet> true) = true",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app (template_app (template_hole 5, t_empty), t_empty),
         template_hole 0))),
    ("utp_pred_laws.USUP_mem_false",
     "\<not> ?I = {} ==> (\<Squnion> i \<in> ?I \<bullet> false) = false",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app (template_app (template_hole 5, t_empty), t_empty),
         template_hole 0))),
    ("utp_pred_laws.taut_shAll_intro_2",
     "ALL x y. `?P x y` ==> `\<^bold>\<forall> (x, y) \<bullet> ?P x y`",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty)))
           ))),
    ("utp_pred_laws.all_sub",
     "[| mwb_lens ?y; ?x \<subseteq>\<^sub>L ?y |]
      ==> (\<forall> ?x \<bullet> \<forall> ?y \<bullet> ?P) =
          (\<forall> ?y \<bullet> ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.exists_sub",
     "[| mwb_lens ?y; ?x \<subseteq>\<^sub>L ?y |]
      ==> (\<exists> ?x \<bullet> \<exists> ?y \<bullet> ?P) =
          (\<exists> ?y \<bullet> ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.taut_conj_elim",
     "[| `?A \<and> ?B`; [| `?A`; `?B` |] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 1, template_var 1))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("utp_pred_laws.impl_disjI",
     "[| `?P \<Rightarrow> ?R`; `?Q \<Rightarrow> ?R` |]
      ==> `?P \<or> ?Q \<Rightarrow> ?R`",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 1))
           ))),
    ("utp_pred_laws.compl_unique",
     "[| (?x \<and> ?y) = false; (?x \<or> ?y) = true |]
      ==> (\<not> ?x) = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("utp_pred_laws.subst_continuous",
     "?\<sigma> \<dagger> \<Sqinter>?A =
      \<Sqinter>{uu_. EX P. uu_ = ?\<sigma> \<dagger> P \<and> P : ?A}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("utp_pred_laws.C3",
     "mwb_lens ?x ==>
      (\<exists> ?x \<bullet> ?P \<and> (\<exists> ?x \<bullet> ?Q)) =
      ((\<exists> ?x \<bullet> ?P) \<and> (\<exists> ?x \<bullet> ?Q))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.impl_refine_intro",
     "[| ?Q\<^sub>1 \<sqsubseteq> ?P\<^sub>1;
         ?P\<^sub>2 \<sqsubseteq> (?P\<^sub>1 \<and> ?Q\<^sub>2) |]
      ==> (?P\<^sub>1 \<Rightarrow> ?P\<^sub>2) \<sqsubseteq>
          (?Q\<^sub>1 \<Rightarrow> ?Q\<^sub>2)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("utp_pred_laws.bdd_above_UN",
     "finite ?I ==>
      preorder.bdd_above (<=) (\<Union> (?A ` ?I)) =
      (ALL i:?I. preorder.bdd_above (<=) (?A i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("utp_pred_laws.bdd_below_UN",
     "finite ?I ==>
      preorder.bdd_below (<=) (\<Union> (?A ` ?I)) =
      (ALL i:?I. preorder.bdd_below (<=) (?A i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("utp_pred_laws.cond_assoc",
     "?P \<triangleleft> ?b \<triangleright>
         ?Q \<triangleleft> ?c \<triangleright>
         ?R =
      ?P \<triangleleft> ?b \<and> ?c \<triangleright>
         (?Q \<triangleleft> ?c \<triangleright> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 1),
           template_var 0)))),
    ("utp_pred_laws.cond_and_distr",
     "(?P \<and> ?Q) \<triangleleft> ?b \<triangleright> (?R \<and> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<and>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_or_distr",
     "(?P \<or> ?Q) \<triangleleft> ?b \<triangleright> (?R \<or> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<or>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_eq_distr",
     "(?P \<Leftrightarrow> ?Q) \<triangleleft> ?b \<triangleright>
         (?R \<Leftrightarrow> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<Leftrightarrow>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.cond_imp_distr",
     "(?P \<Rightarrow> ?Q) \<triangleleft> ?b \<triangleright>
         (?R \<Rightarrow> ?S) =
      (?P \<triangleleft> ?b \<triangleright> ?R \<Rightarrow>
       ?Q \<triangleleft> ?b \<triangleright> ?S)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("utp_pred_laws.conj_conds",
     "(?P1.0 \<triangleleft> ?b \<triangleright> ?Q1.0 \<and>
       ?P2.0 \<triangleleft> ?b \<triangleright> ?Q2.0) =
      (?P1.0 \<and> ?P2.0) \<triangleleft> ?b \<triangleright>
         (?Q1.0 \<and> ?Q2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.disj_conds",
     "(?P1.0 \<triangleleft> ?b \<triangleright> ?Q1.0 \<or>
       ?P2.0 \<triangleleft> ?b \<triangleright> ?Q2.0) =
      (?P1.0 \<or> ?P2.0) \<triangleleft> ?b \<triangleright>
         (?Q1.0 \<or> ?Q2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.subst_eq_replace",
     "(?p\<lbrakk>?u/?x\<rbrakk> \<and> ?u =\<^sub>u ?v) =
      (?p\<lbrakk>?v/?x\<rbrakk> \<and> ?u =\<^sub>u ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 3),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("utp_pred_laws.subst_bool_split",
     "vwb_lens ?x ==>
      `?P` =
      `?P\<lbrakk>false/?x\<rbrakk> \<and> ?P\<lbrakk>true/?x\<rbrakk>`",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 1),
                     template_hole 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1),
                   template_hole 0)),
               template_var 0)))))),
    ("utp_pred_laws.conj_pos_var_subst",
     "vwb_lens ?x ==>
      ($?x \<and> ?Q) = ($?x \<and> ?Q\<lbrakk>true/$?x\<rbrakk>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 4, template_var 1)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_pred_laws.cond_mono",
     "[| ?P\<^sub>1 \<sqsubseteq> ?P\<^sub>2;
         ?Q\<^sub>1 \<sqsubseteq> ?Q\<^sub>2 |]
      ==> ?P\<^sub>1 \<triangleleft> ?b \<triangleright>
             ?Q\<^sub>1 \<sqsubseteq>
          ?P\<^sub>2 \<triangleleft> ?b \<triangleright> ?Q\<^sub>2",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 3),
           template_var 1)))),
    ("utp_pred_laws.le_infE",
     "[| (?a \<and> ?b) \<sqsubseteq> ?x;
         [| ?a \<sqsubseteq> ?x; ?b \<sqsubseteq> ?x |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1)),
        template_implication
         ([template_inequation
            (less_equals, template_var 3, template_var 2)],
          template_implication
           ([template_inequation
              (less_equals, template_var 3, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("utp_pred_laws.le_supE",
     "[| ?x \<sqsubseteq> (?a \<or> ?b);
         [| ?x \<sqsubseteq> ?a; ?x \<sqsubseteq> ?b |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_var 1),
        template_implication
         ([template_inequation
            (less_equals, template_var 3, template_var 1)],
          template_implication
           ([template_inequation
              (less_equals, template_var 2, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("utp_pred_laws.refine_prop_intro",
     "[| \<Sigma> \<sharp> ?P; \<Sigma> \<sharp> ?Q; `?Q` ==> `?P` |]
      ==> ?P \<sqsubseteq> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 0))],
          template_predicate
           (template_app (template_hole 1, template_var 1)))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("utp_pred_laws.bdd_above_image_sup",
     "preorder.bdd_above (<=) ((%x. ?f x \<or> ?g x) ` ?A) =
      (preorder.bdd_above (<=) (?f ` ?A) \<and>
       preorder.bdd_above (<=) (?g ` ?A))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("utp_pred_laws.bdd_below_image_inf",
     "preorder.bdd_below (<=) ((%x. ?f x \<and> ?g x) ` ?A) =
      (preorder.bdd_below (<=) (?f ` ?A) \<and>
       preorder.bdd_below (<=) (?g ` ?A))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("utp_pred_laws.conj_var_subst",
     "vwb_lens ?x ==>
      (?P \<and> ?x =\<^sub>u ?v) =
      (?P\<lbrakk>?v/?x\<rbrakk> \<and> ?x =\<^sub>u ?v)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 2),
                   template_var 0)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_var 0))))),
    ("utp_pred_laws.cond_var_subst_right",
     "vwb_lens ?x ==>
      ?P \<triangleleft> ?x \<triangleright> ?Q\<lbrakk>false/?x\<rbrakk> =
      ?P \<triangleleft> ?x \<triangleright> ?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 2)),
             template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2),
                 template_hole 0)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("utp_pred_laws.cond_var_subst_left",
     "vwb_lens ?x ==>
      ?P\<lbrakk>true/?x\<rbrakk> \<triangleleft> ?x \<triangleright> ?Q =
      ?P \<triangleleft> ?x \<triangleright> ?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2),
                   template_hole 0)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("utp_pred_laws.cond_var_split",
     "vwb_lens ?x ==>
      ?P\<lbrakk>true/?x\<rbrakk> \<triangleleft> ?x \<triangleright>
         ?P\<lbrakk>false/?x\<rbrakk> =
      ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1),
                   template_hole 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1),
                 template_hole 0)),
             template_var 0)),
         template_var 0))),
    ("utp_pred_laws.UINF_all_cong",
     "(!!P. ?F P = ?G P) ==>
      (\<Sqinter> P \<bullet> ?F P) = (\<Sqinter> P \<bullet> ?G P)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_app (template_hole 1, t_empty), t_empty),
         template_app (template_app (template_hole 1, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_all_cong",
     "(!!P. ?F P = ?G P) ==>
      (\<Squnion> P \<bullet> ?F P) = (\<Squnion> P \<bullet> ?G P)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_app (template_hole 1, t_empty), t_empty),
         template_app (template_app (template_hole 1, t_empty), t_empty)))),
    ("utp_pred_laws.cond_distr",
     "?P \<triangleleft> ?b \<triangleright>
         (?Q \<triangleleft> ?c \<triangleright> ?R) =
      ?P \<triangleleft> ?b \<triangleright>
         ?Q \<triangleleft> ?c \<triangleright>
         (?P \<triangleleft> ?b \<triangleright> ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 4),
             template_var 3),
           template_var 0)))),
    ("utp_pred_laws.USUP_ind_is_forall",
     "(\<Squnion> x \<in> ?A \<bullet> ?P x) =
      (\<^bold>\<forall> x \<bullet> \<guillemotleft>x\<guillemotright> \<in>\<^sub>u
                                     \<guillemotleft>?A\<guillemotright> \<Rightarrow>
                                     ?P x)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_hole 1, t_empty))),
    ("utp_pred_laws.UINF_list_conv",
     "(\<Sqinter> i \<in> dom\<^sub>l ?xs \<bullet> ?f (?xs ! i)) =
      foldr (\<or>) (map ?f ?xs) false",
     template_equation
      (template_app (template_app (template_hole 12, t_empty), t_empty),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("utp_pred_laws.USUP_list_conv",
     "(\<Squnion> i \<in> dom\<^sub>l ?xs \<bullet> ?f (?xs ! i)) =
      foldr (\<and>) (map ?f ?xs) true",
     template_equation
      (template_app (template_app (template_hole 12, t_empty), t_empty),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("utp_pred_laws.conj_neg_var_subst",
     "vwb_lens ?x ==>
      (\<not> $?x \<and> ?Q) =
      (\<not> $?x \<and> ?Q\<lbrakk>false/$?x\<rbrakk>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)))),
           template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 4, template_var 1)),
                 template_hole 0)),
             template_var 0))))),
    ("utp_pred_laws.UINF_image_eq",
     "(\<Sqinter> i \<in> ?f ` ?A \<bullet> ?g i) =
      (\<Sqinter> i \<in> ?A \<bullet> ?g (?f i))",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_var 0),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.USUP_image_eq",
     "(\<Squnion> i \<in> ?f ` ?A \<bullet> ?g i) =
      (\<Squnion> i \<in> ?A \<bullet> ?g (?f i))",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_var 0),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.UINF_all_nats",
     "(\<Sqinter> n \<bullet> \<Sqinter> i \<in> {0..n} \<bullet> ?P i) =
      (\<Sqinter> n \<bullet> ?P n)",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.USUP_all_nats",
     "(\<Squnion> n \<bullet> \<Squnion> i \<in> {0..n} \<bullet> ?P i) =
      (\<Squnion> n \<bullet> ?P n)",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.one_point",
     "[| mwb_lens ?x; ?x \<sharp> ?v |]
      ==> (\<exists> ?x \<bullet> ?P \<and> ?x =\<^sub>u ?v) =
          ?P\<lbrakk>?v/?x\<rbrakk>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("utp_pred_laws.not_UINF",
     "(\<not> (\<Sqinter> i \<in> ?A \<bullet> ?P i)) =
      (\<Squnion> i \<in> ?A \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 6,
         template_app (template_app (template_hole 5, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.not_USUP",
     "(\<not> (\<Squnion> i \<in> ?A \<bullet> ?P i)) =
      (\<Sqinter> i \<in> ?A \<bullet> \<not> ?P i)",
     template_equation
      (template_app
        (template_hole 6,
         template_app (template_app (template_hole 5, t_empty), t_empty)),
       template_app (template_app (template_hole 0, t_empty), t_empty))),
    ("utp_pred_laws.eq_split_subst",
     "vwb_lens ?x ==>
      (?P = ?Q) =
      (ALL v.
          ?P\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk> =
          ?Q\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("utp_pred_laws.conj_eq_out_var_subst",
     "vwb_lens ?x ==>
      (?P \<and> $?x\<acute> =\<^sub>u ?v) =
      (?P\<lbrakk>?v/$?x\<acute>\<rbrakk> \<and> $?x\<acute> =\<^sub>u ?v)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_app (template_hole 3, template_var 2)),
                   template_var 0)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_var 0))))),
    ("utp_pred_laws.conj_eq_in_var_subst",
     "vwb_lens ?x ==>
      (?P \<and> $?x =\<^sub>u ?v) =
      (?P\<lbrakk>?v/$?x\<rbrakk> \<and> $?x =\<^sub>u ?v)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_app (template_hole 3, template_var 2)),
                   template_var 0)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2))),
             template_var 0))))),
    ("utp_pred_laws.cond_assign_subst",
     "vwb_lens ?x ==>
      ?P \<triangleleft> ?x =\<^sub>u ?v \<triangleright> ?Q =
      ?P\<lbrakk>?v/?x\<rbrakk> \<triangleleft> ?x =\<^sub>u
          ?v \<triangleright>
         ?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 3)),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 3)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("utp_pred_laws.UINF_refines",
     "(!!i. i : ?I ==> ?P \<sqsubseteq> ?Q i) ==>
      ?P \<sqsubseteq> (\<Sqinter> i \<in> ?I \<bullet> ?Q i)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app (template_app (template_hole 3, t_empty), t_empty),
         template_var 0))),
    ("utp_pred_laws.eq_split_substI",
     "[| vwb_lens ?x;
         !!v. ?P\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk> =
              ?Q\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk> |]
      ==> ?P = ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("utp_pred_laws.taut_shEx_elim",
     "[| `ushEx ?P`; !!x. \<Sigma> \<sharp> ?P x; !!x. `?P x` ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4, template_app (template_hole 3, t_empty))
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("utp_pred_laws.UINF_atLeast_Suc",
     "(\<Sqinter> i \<in> {Suc ?m..} \<bullet> ?P i) =
      (\<Sqinter> i \<in> {?m..} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.USUP_atLeast_Suc",
     "(\<Squnion> i \<in> {Suc ?m..} \<bullet> ?P i) =
      (\<Squnion> i \<in> {?m..} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.conj_UINF_dist",
     "(?P \<and> (\<Sqinter> Q \<in> ?S \<bullet> ?F Q)) =
      (\<Sqinter> Q \<in> ?S \<bullet> ?P \<and> ?F Q)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.UINF_insert",
     "(\<Sqinter> i \<in> insert ?x ?xs \<bullet> ?P i) =
      ?P ?x \<sqinter> (\<Sqinter> i \<in> ?xs \<bullet> ?P i)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_app (template_hole 6, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_insert",
     "(\<Squnion> i \<in> insert ?x ?xs \<bullet> ?P i) =
      ?P ?x \<squnion> (\<Squnion> i \<in> ?xs \<bullet> ?P i)",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app (template_app (template_hole 6, t_empty), t_empty)))),
    ("utp_pred_laws.UINF_subset_mono",
     "?A <= ?B ==>
      (\<Sqinter> P \<in> ?B \<bullet> ?F P) \<sqsubseteq>
      (\<Sqinter> P \<in> ?A \<bullet> ?F P)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app (template_app (template_hole 4, t_empty), t_empty),
         template_app (template_app (template_hole 4, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_subset_mono",
     "?A <= ?B ==>
      (\<Squnion> P \<in> ?A \<bullet> ?F P) \<sqsubseteq>
      (\<Squnion> P \<in> ?B \<bullet> ?F P)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app (template_app (template_hole 4, t_empty), t_empty),
         template_app (template_app (template_hole 4, t_empty), t_empty)))),
    ("utp_pred_laws.UINF_atLeast_first",
     "?P ?n \<sqinter> (\<Sqinter> i \<in> {Suc ?n..} \<bullet> ?P i) =
      (\<Sqinter> i \<in> {?n..} \<bullet> ?P i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_var 1, template_var 0)),
         template_app (template_app (template_hole 6, t_empty), t_empty)),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.USUP_atLeast_first",
     "(?P ?n \<and> (\<Squnion> i \<in> {Suc ?n..} \<bullet> ?P i)) =
      (\<Squnion> i \<in> {?n..} \<bullet> ?P i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_var 1, template_var 0)),
         template_app (template_app (template_hole 6, t_empty), t_empty)),
       template_app (template_app (template_hole 6, t_empty), t_empty))),
    ("utp_pred_laws.UINF_Suc_shift",
     "(\<Sqinter> i \<in> {Suc 0..<Suc ?n} \<bullet> ?P i) =
      (\<Sqinter> i \<in> {0..<?n} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.USUP_Suc_shift",
     "(\<Squnion> i \<in> {Suc 0..<Suc ?n} \<bullet> ?P i) =
      (\<Squnion> i \<in> {0..<?n} \<bullet> ?P (Suc i))",
     template_equation
      (template_app (template_app (template_hole 7, t_empty), t_empty),
       template_app (template_app (template_hole 7, t_empty), t_empty))),
    ("utp_pred_laws.shEx_insert",
     "(\<^bold>\<exists> x \<bullet> \<guillemotleft>x\<guillemotright> \<in>\<^sub>u
                                     insert\<^sub>u ?y ?A \<and>
                                     ?P x) =
      (msubst ?P ?y \<or>
       (\<^bold>\<exists> x \<bullet> \<guillemotleft>x\<guillemotright> \<in>\<^sub>u
?A \<and>
?P x))",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app (template_hole 8, t_empty)))),
    ("utp_pred_laws.UINF_upto_expand_last",
     "(\<Sqinter> i \<in> {0..<Suc ?n} \<bullet> ?P i) =
      ((\<Sqinter> i \<in> {0..<?n} \<bullet> ?P i) \<or> ?P ?n)",
     template_equation
      (template_app (template_app (template_hole 8, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app (template_app (template_hole 8, t_empty), t_empty)),
         template_app (template_var 0, template_var 1)))),
    ("utp_pred_laws.inf_Sup1_distrib",
     "[| finite ?A; \<not> ?A = {} |]
      ==> (?x \<and> semilattice_sup.Sup_fin (\<or>) ?A) =
          semilattice_sup.Sup_fin (\<or>)
           {uu_. EX a. uu_ = (?x \<and> a) \<and> a : ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, t_empty))))),
    ("utp_pred_laws.sup_Inf1_distrib",
     "[| finite ?A; \<not> ?A = {} |]
      ==> (?x \<or> semilattice_inf.Inf_fin (\<and>) ?A) =
          semilattice_inf.Inf_fin (\<and>)
           {uu_. EX a. uu_ = (?x \<or> a) \<and> a : ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, t_empty))))),
    ("utp_pred_laws.USUP_upto_expand_first",
     "(\<Squnion> i \<in> {0..<Suc ?n} \<bullet> ?P i) =
      (?P 0 \<and> (\<Squnion> i \<in> {1..<Suc ?n} \<bullet> ?P i))",
     template_equation
      (template_app (template_app (template_hole 9, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 0, template_hole 3)),
         template_app (template_app (template_hole 9, t_empty), t_empty)))),
    ("utp_pred_laws.conj_USUP_dist",
     "\<not> ?S = {} ==>
      (?P \<and> (\<Squnion> Q \<in> ?S \<bullet> ?F Q)) =
      (\<Squnion> Q \<in> ?S \<bullet> ?P \<and> ?F Q)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)))),
    ("utp_pred_laws.disj_UINF_dist",
     "\<not> ?S = {} ==>
      (?P \<or> (\<Sqinter> Q \<in> ?S \<bullet> ?F Q)) =
      (\<Sqinter> Q \<in> ?S \<bullet> ?P \<or> ?F Q)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)))),
    ("utp_pred_laws.distrib_imp1",
     "(!!x y z. (x \<and> (y \<or> z)) = (x \<and> y \<or> x \<and> z)) ==>
      (?x \<or> ?y \<and> ?z) = ((?x \<or> ?y) \<and> (?x \<or> ?z))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.distrib_imp2",
     "(!!x y z. (x \<or> y \<and> z) = ((x \<or> y) \<and> (x \<or> z))) ==>
      (?x \<and> (?y \<or> ?z)) = (?x \<and> ?y \<or> ?x \<and> ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("utp_pred_laws.C7",
     "[| weak_lens ?x; ?x \<bowtie> ?y |]
      ==> ((\<exists> ?x \<bullet> &?x =\<^sub>u &?y \<and> ?P) \<and>
           (\<exists> ?x \<bullet> &?x =\<^sub>u &?y \<and> \<not> ?P)) =
          false",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 2))),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)))),
                 template_var 0))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 2))),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)))),
               template_app (template_hole 1, template_var 0)))),
         template_hole 0))),
    ("utp_pred_laws.UINF_upto_expand_first",
     "?m < ?n ==>
      (\<Sqinter> i \<in> {?m..<?n} \<bullet> ?P i) =
      (?P ?m \<or> (\<Sqinter> i \<in> {Suc ?m..<?n} \<bullet> ?P i))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app (template_app (template_hole 7, t_empty), t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 0, template_var 2)),
           template_app
            (template_app (template_hole 7, t_empty), t_empty))))),
    ("utp_pred_laws.UINF_cong",
     "(!!P. P : ?A ==> ?F P = ?G P) ==>
      (\<Sqinter> P \<in> ?A \<bullet> ?F P) =
      (\<Sqinter> P \<in> ?A \<bullet> ?G P)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_app (template_hole 3, t_empty), t_empty),
         template_app (template_app (template_hole 3, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_cong",
     "(!!P. P : ?A ==> ?F P = ?G P) ==>
      (\<Squnion> P \<in> ?A \<bullet> ?F P) =
      (\<Squnion> P \<in> ?A \<bullet> ?G P)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_app (template_hole 3, t_empty), t_empty),
         template_app (template_app (template_hole 3, t_empty), t_empty)))),
    ("utp_pred_laws.UINF_cong_eq",
     "[| !!x. ?P\<^sub>1 x = ?P\<^sub>2 x;
         !!x. `?P\<^sub>1 x \<Rightarrow>
               ?Q\<^sub>1 x =\<^sub>u ?Q\<^sub>2 x` |]
      ==> UINF ?P\<^sub>1 ?Q\<^sub>1 = UINF ?P\<^sub>2 ?Q\<^sub>2",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_app (template_app (template_hole 0, t_empty), t_empty)))),
    ("utp_pred_laws.bool_eq_splitI",
     "[| vwb_lens ?x;
         ?P\<lbrakk>true/?x\<rbrakk> = ?Q\<lbrakk>true/?x\<rbrakk>;
         ?P\<lbrakk>false/?x\<rbrakk> = ?Q\<lbrakk>false/?x\<rbrakk> |]
      ==> ?P = ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_hole 1)),
            template_var 1),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_hole 1)),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_hole 0)),
            template_var 1),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_hole 0)),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("utp_pred_laws.UINF_impl",
     "(\<Sqinter> P \<in> ?A \<bullet> ?F P \<Rightarrow> ?G P) =
      ((\<Squnion> P \<in> ?A \<bullet> ?F P) \<Rightarrow>
       (\<Sqinter> P \<in> ?A \<bullet> ?G P))",
     template_equation
      (template_app (template_app (template_hole 6, t_empty), t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app (template_app (template_hole 0, t_empty), t_empty)),
         template_app (template_app (template_hole 6, t_empty), t_empty)))),
    ("utp_pred_laws.USUP_conj_USUP",
     "((\<Squnion> P \<in> ?A \<bullet> ?F P) \<and>
       (\<Squnion> P \<in> ?A \<bullet> ?G P)) =
      (\<Squnion> P \<in> ?A \<bullet> ?F P \<and> ?G P)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.UINF_conj_UINF",
     "((\<Sqinter> i \<in> ?I \<bullet> ?P i) \<or>
       (\<Sqinter> i \<in> ?I \<bullet> ?Q i)) =
      (\<Sqinter> i \<in> ?I \<bullet> ?P i \<or> ?Q i)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.C6",
     "[| wb_lens ?x; ?x \<bowtie> ?y; ?x \<bowtie> ?z |]
      ==> (&?y =\<^sub>u &?z) =
          (\<exists> ?x \<bullet> &?y =\<^sub>u &?x \<and>
                                  &?x =\<^sub>u &?z)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)))))))),
    ("utp_pred_laws.cond_UINF_dist",
     "(\<Sqinter> P \<in> ?S \<bullet> ?F
  P) \<triangleleft> ?b \<triangleright>
         (\<Sqinter> P \<in> ?S \<bullet> ?G P) =
      (\<Sqinter> P \<in> ?S \<bullet> ?F
  P \<triangleleft> ?b \<triangleright>
    ?G P)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 3),
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.cond_USUP_dist",
     "(\<Squnion> P \<in> ?S \<bullet> ?F
  P) \<triangleleft> ?b \<triangleright>
         (\<Squnion> P \<in> ?S \<bullet> ?G P) =
      (\<Squnion> P \<in> ?S \<bullet> ?F
  P \<triangleleft> ?b \<triangleright>
    ?G P)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 3),
           template_app (template_app (template_hole 4, t_empty), t_empty)),
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_app (template_hole 4, t_empty), t_empty))),
    ("utp_pred_laws.refine_by_obs",
     "[| ?x \<bowtie> ?y; bij_lens (?x +\<^sub>L ?y); ?y \<sharp> ?P;
         ?y \<sharp> ?Q;
         {v. `?P\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk>`}
         <= {v. `?Q\<lbrakk>\<guillemotleft>v\<guillemotright>/?x\<rbrakk>`} |]
      ==> ?Q \<sqsubseteq> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, t_empty),
          template_app (template_hole 6, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("utp_pred_laws.inf_Sup2_distrib",
     "[| finite ?A; \<not> ?A = {}; finite ?B; \<not> ?B = {} |]
      ==> (semilattice_sup.Sup_fin (\<or>) ?A \<and>
           semilattice_sup.Sup_fin (\<or>) ?B) =
          semilattice_sup.Sup_fin (\<or>)
           {uu_. EX a b. uu_ = (a \<and> b) \<and> a : ?A \<and> b : ?B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, t_empty))))),
    ("utp_pred_laws.sup_Inf2_distrib",
     "[| finite ?A; \<not> ?A = {}; finite ?B; \<not> ?B = {} |]
      ==> (semilattice_inf.Inf_fin (\<and>) ?A \<or>
           semilattice_inf.Inf_fin (\<and>) ?B) =
          semilattice_inf.Inf_fin (\<and>)
           {uu_. EX a b. uu_ = (a \<or> b) \<and> a : ?A \<and> b : ?B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, t_empty))))),
    ("utp_pred_laws.eq_cong_left",
     "[| vwb_lens ?x; $?x \<sharp> ?Q; $?x\<acute> \<sharp> ?Q;
         $?x \<sharp> ?R; $?x\<acute> \<sharp> ?R |]
      ==> (($?x\<acute> =\<^sub>u $?x \<and> ?Q) =
           ($?x\<acute> =\<^sub>u $?x \<and> ?R)) =
          (?Q = ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 5, template_var 2)),
              template_var 0)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 5, template_var 2))),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 6, template_var 2)))),
             template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 5, template_var 2))),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 6, template_var 2)))),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("utp_pred_laws.sup_unique",
     "[| !!x y. ?f x y \<sqsubseteq> x; !!x y. ?f x y \<sqsubseteq> y;
         !!x y z.
            [| x \<sqsubseteq> y; x \<sqsubseteq> z |]
            ==> x \<sqsubseteq> ?f y z |]
      ==> (?x \<or> ?y) = ?f ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_var 2, template_var 1),
           template_var 0)))),
    ("utp_pred_laws.inf_unique",
     "[| !!x y. x \<sqsubseteq> ?f x y; !!x y. y \<sqsubseteq> ?f x y;
         !!x y z.
            [| y \<sqsubseteq> x; z \<sqsubseteq> x |]
            ==> ?f y z \<sqsubseteq> x |]
      ==> (?x \<and> ?y) = ?f ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_var 2, template_var 1),
           template_var 0))))]:
   (string * thm * template) list
### theory "Draft.utp_pred_lawsTemplates"
### 0.958s elapsed time, 1.560s cpu time, 0.665s GC time
val it = (): unit
