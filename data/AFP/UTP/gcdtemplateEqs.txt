   [("GCD.gcd_1_int", "gcd ?m 1 = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("GCD.gcd_0_left_nat", "gcd 0 ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("GCD.gcd_1_nat", "gcd ?m 1 = 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("GCD.gcd_0_nat", "gcd ?x 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("GCD.gcd_idem_nat", "gcd ?x ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("GCD.gcd_0_left_int", "gcd 0 ?x = \<bar>?x\<bar>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("GCD.gcd_0_int", "gcd ?x 0 = \<bar>?x\<bar>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("GCD.gcd_idem_int", "gcd ?x ?x = \<bar>?x\<bar>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("GCD.gcd_Suc_0", "gcd ?m (Suc 0) = Suc 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("GCD.gcd_abs2_int", "gcd ?x \<bar>?y\<bar> = gcd ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("GCD.gcd_neg2_int", "gcd ?x (- ?y) = gcd ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("GCD.gcd_abs1_int", "gcd \<bar>?x\<bar> ?y = gcd ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("GCD.gcd_neg1_int", "gcd (- ?x) ?y = gcd ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("GCD.abs_gcd_int", "\<bar>gcd ?x ?y\<bar> = gcd ?x ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("GCD.gcd_red_int", "gcd ?x ?y = gcd ?y (?x mod ?y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_red_nat", "gcd ?x ?y = gcd ?y (?x mod ?y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_neg_numeral_2_int",
     "gcd ?x (- numeral ?n) = gcd ?x (numeral ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("GCD.gcd_int_int_eq", "gcd (int ?m) (int ?n) = int (gcd ?m ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_neg_numeral_1_int",
     "gcd (- numeral ?n) ?x = gcd (numeral ?n) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("GCD.prod_gcd_lcm_nat", "?m * ?n = gcd ?m ?n * lcm ?m ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_nat_abs_right_eq",
     "gcd ?n (nat \<bar>?k\<bar>) = nat (gcd (int ?n) ?k)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("GCD.gcd_nat_abs_left_eq",
     "gcd (nat \<bar>?k\<bar>) ?n = nat (gcd ?k (int ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("GCD.prod_gcd_lcm_int",
     "\<bar>?m\<bar> * \<bar>?n\<bar> = gcd ?m ?n * lcm ?m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_mult_distrib_nat", "?k * gcd ?m ?n = gcd (?k * ?m) (?k * ?n)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("GCD.gcd_mult_distrib_int",
     "\<bar>?k\<bar> * gcd ?m ?n = gcd (?k * ?m) (?k * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("GCD.gcd_pos_int",
     "(0 < gcd ?m ?n) = (\<not> ?m = 0 \<or> \<not> ?n = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("GCD.gcd_pos_nat",
     "(0 < gcd ?m ?n) = (\<not> ?m = 0 \<or> \<not> ?n = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("GCD.gcd_code_int",
     "gcd ?k ?l =
      \<bar>if ?l = 0 then ?k
            else gcd ?l (\<bar>?k\<bar> mod \<bar>?l\<bar>)\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("GCD.gcd_code_integer",
     "gcd ?k ?l =
      \<bar>if ?l = 0 then ?k
            else gcd ?l (\<bar>?k\<bar> mod \<bar>?l\<bar>)\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("GCD.gcd_unique_nat",
     "(?d dvd ?a \<and>
       ?d dvd ?b \<and> (ALL e. e dvd ?a \<and> e dvd ?b --> e dvd ?d)) =
      (?d = gcd ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 0)),
                template_app (template_hole 3, t_empty)))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GCD.gcd_unique_int",
     "(0 <= ?d \<and>
       ?d dvd ?a \<and>
       ?d dvd ?b \<and> (ALL e. e dvd ?a \<and> e dvd ?b --> e dvd ?d)) =
      (?d = gcd ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 0)),
                  template_app (template_hole 3, t_empty))))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0))))]
