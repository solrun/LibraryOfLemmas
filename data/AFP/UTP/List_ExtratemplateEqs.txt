   [("List_Extra.dist_concat_left_empty", "{} \<^sup>\<frown> ?ys = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("List_Extra.dist_concat_right_empty", "?xs \<^sup>\<frown> {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("List_Extra.minus_right_nil", "?xs - [] = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("List_Extra.minus_cancel", "?xs - ?xs = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("List_Extra.gcp_right", "gcp ?xs [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("List_Extra.seq_extract_Nil", "?A \<upharpoonleft>\<^sub>l [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("List_Extra.seq_extract_empty", "{} \<upharpoonleft>\<^sub>l ?xs = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("List_Extra.seq_filter_Nil", "[] \<restriction>\<^sub>l ?A = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("List_Extra.seq_filter_empty", "?xs \<restriction>\<^sub>l {} = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List_Extra.seq_filter_UNIV", "?xs \<restriction>\<^sub>l UNIV = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("List_Extra.last_single_element", "last [?e] = ?e",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("List_Extra.butlast_single_element", "butlast [?e] = []",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_hole 0)),
    ("List_Extra.append_minus", "?xs @ ?ys - ?xs = ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("List_Extra.seq_extract_ident",
     "dom\<^sub>l ?xs \<upharpoonleft>\<^sub>l ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_var 0)),
    ("List_Extra.nths_atLeastLessThan_0_take",
     "nths ?xs {0..<?m} = take ?m ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("List_Extra.nths_atLeastAtMost_0_take",
     "nths ?xs {0..?m} = take (Suc ?m) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("List_Extra.prefix_eq_exists", "prefix ?s ?t = (EX xs. ?s @ xs = ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("List_Extra.seq_filter_twice",
     "(?xs \<restriction>\<^sub>l ?A) \<restriction>\<^sub>l ?B =
      ?xs \<restriction>\<^sub>l (?A Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Extra.list_concat_minus_list_concat",
     "?s @ ?t - (?s @ ?z) = ?t - ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("List_Extra.seq_extract_length",
     "length (?A \<upharpoonleft>\<^sub>l ?xs) =
      card (?A Int dom\<^sub>l ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 5, template_var 0)))))),
    ("List_Extra.seq_extract_range",
     "?A \<upharpoonleft>\<^sub>l ?xs =
      (?A Int dom\<^sub>l ?xs) \<upharpoonleft>\<^sub>l ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))),
         template_var 0))),
    ("List_Extra.seq_filter_append",
     "(?xs @ ?ys) \<restriction>\<^sub>l ?A =
      ?xs \<restriction>\<^sub>l ?A @ ?ys \<restriction>\<^sub>l ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("List_Extra.gcp_append",
     "gcp (?xs @ ?ys) (?xs @ ?zs) = ?xs @ gcp ?ys ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("List_Extra.dist_concat_insert",
     "insert ?l ?ls1.0 \<^sup>\<frown> ?ls2.0 =
      (@) ?l ` ?ls2.0 Un ?ls1.0 \<^sup>\<frown> ?ls2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("List_Extra.strict_prefix_eq_exists",
     "strict_prefix ?s ?t = (EX xs. ?s @ xs = ?t & 0 < length xs)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app (template_hole 6, t_empty))),
    ("List_Extra.map_nth_Cons_atLeastLessThan",
     "map ((!) (?x # ?xs)) [Suc ?m..<?n] = map ((!) ?xs) [?m..<?n - 1]",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("List_Extra.seq_extract_append",
     "?A \<upharpoonleft>\<^sub>l (?xs @ ?ys) =
      ?A \<upharpoonleft>\<^sub>l ?xs @
      {j. j + length ?xs : ?A} \<upharpoonleft>\<^sub>l ?ys",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("List_Extra.seq_extract_Cons",
     "?A \<upharpoonleft>\<^sub>l (?x # ?xs) =
      (if 0 : ?A then [?x] else []) @
      {j. Suc j : ?A} \<upharpoonleft>\<^sub>l ?xs",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 2)),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("List_Extra.seq_append_as_extract",
     "(?xs = ?ys @ ?zs) =
      (EX i<=length ?xs.
          ?ys = {0..<i} \<upharpoonleft>\<^sub>l ?xs &
          ?zs = {i..<length ?xs} \<upharpoonleft>\<^sub>l ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty)))]
