   [("List_Extra.dist_concat_left_empty", "{} \<^sup>\<frown> ?ys = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("List_Extra.dist_concat_right_empty", "?xs \<^sup>\<frown> {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("List_Extra.minus_right_nil", "?xs - [] = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("List_Extra.minus_cancel", "?xs - ?xs = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("List_Extra.gcp_right", "gcp ?xs [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("List_Extra.seq_extract_Nil", "?A \<upharpoonleft>\<^sub>l [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("List_Extra.seq_extract_empty", "{} \<upharpoonleft>\<^sub>l ?xs = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("List_Extra.seq_filter_Nil", "[] \<restriction>\<^sub>l ?A = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("List_Extra.seq_filter_empty", "?xs \<restriction>\<^sub>l {} = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List_Extra.seq_filter_UNIV", "?xs \<restriction>\<^sub>l UNIV = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("List_Extra.gcp_lb1", "prefix (gcp ?xs ?ys) ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("List_Extra.gcp_lb2", "prefix (gcp ?xs ?ys) ?ys",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("List_Extra.last_single_element", "last [?e] = ?e",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("List_Extra.butlast_single_element", "butlast [?e] = []",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_hole 0)),
    ("List_Extra.append_minus", "?xs @ ?ys - ?xs = ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("List_Extra.sorted_is_sorted_list_of_set",
     "is_sorted_list_of_set ?A ?xs ==> distinct ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List_Extra.seq_extract_ident",
     "dom\<^sub>l ?xs \<upharpoonleft>\<^sub>l ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_var 0)),
    ("List_Extra.is_sorted_list_of_set",
     "finite ?A ==> is_sorted_list_of_set ?A (sorted_list_of_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("List_Extra.sorted_is_sorted_list_of_set",
     "is_sorted_list_of_set ?A ?xs ==> sorted ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("List_Extra.nths_atLeastLessThan_0_take",
     "nths ?xs {0..<?m} = take ?m ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("List_Extra.sorted_list_of_set_alt",
     "finite ?A ==> sorted_list_of_set_alt ?A = sorted_list_of_set ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("List_Extra.nths_atLeastAtMost_0_take",
     "nths ?xs {0..?m} = take (Suc ?m) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("List_Extra.butlast_prefix_suffix_not_empty",
     "strict_prefix (butlast ?xs) ?ys ==> ?ys ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("List_Extra.list_append_prefixD", "?x @ ?y <= ?z ==> ?x <= ?z",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("List_Extra.prefix_eq_exists", "prefix ?s ?t = (EX xs. ?s @ xs = ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("List_Extra.seq_filter_twice",
     "(?xs \<restriction>\<^sub>l ?A) \<restriction>\<^sub>l ?B =
      ?xs \<restriction>\<^sub>l (?A Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Extra.list_concat_minus_list_concat",
     "?s @ ?t - (?s @ ?z) = ?t - ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("List_Extra.strict_prefix_minus_not_empty",
     "strict_prefix ?xs ?ys ==> ?ys - ?xs ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("List_Extra.strict_prefix_lexord_rel",
     "strict_prefix ?xs ?ys ==> (?xs, ?ys) : lexord ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("List_Extra.seq_extract_length",
     "length (?A \<upharpoonleft>\<^sub>l ?xs) =
      card (?A Int dom\<^sub>l ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 5, template_var 0)))))),
    ("List_Extra.seq_extract_range",
     "?A \<upharpoonleft>\<^sub>l ?xs =
      (?A Int dom\<^sub>l ?xs) \<upharpoonleft>\<^sub>l ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))),
         template_var 0))),
    ("List_Extra.take_prefix", "?m <= ?n ==> take ?m ?xs <= take ?n ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Extra.prefix_concat_minus",
     "prefix ?xs ?ys ==> ?xs @ ?ys - ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("List_Extra.seq_filter_append",
     "(?xs @ ?ys) \<restriction>\<^sub>l ?A =
      ?xs \<restriction>\<^sub>l ?A @ ?ys \<restriction>\<^sub>l ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("List_Extra.gcp_append",
     "gcp (?xs @ ?ys) (?xs @ ?zs) = ?xs @ gcp ?ys ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("List_Extra.length_zero_last_concat",
     "length ?t = 0 ==> last (?s @ ?t) = last ?s",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("List_Extra.length_eq_zero_butlast_concat",
     "length ?ys = 0 ==> butlast (?xs @ ?ys) = butlast ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("List_Extra.length_gt_zero_last_concat",
     "0 < length ?t ==> last (?s @ ?t) = last ?t",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("List_Extra.sorted_prefix",
     "[| ?xs <= ?ys; sorted ?ys |] ==> sorted ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("List_Extra.dist_concat_insert",
     "insert ?l ?ls1.0 \<^sup>\<frown> ?ls2.0 =
      (@) ?l ` ?ls2.0 Un ?ls1.0 \<^sup>\<frown> ?ls2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("List_Extra.sorted_map",
     "[| sorted ?xs; mono ?f |] ==> sorted (map ?f ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List_Extra.length_minus_list",
     "?y <= ?x ==> length (?x - ?y) = length ?x - length ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("List_Extra.length_list_minus",
     "strict_prefix ?s ?t ==> length (?t - ?s) = length ?t - length ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("List_Extra.seq_filter_Cons_out",
     "?x ~: ?cs ==>
      (?x # ?xs) \<restriction>\<^sub>l ?cs =
      ?xs \<restriction>\<^sub>l ?cs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("List_Extra.length_gt_zero_butlast_concat",
     "0 < length ?ys ==> butlast (?xs @ ?ys) = ?xs @ butlast ?ys",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 1, template_var 1))))),
    ("List_Extra.nth_el_appendl",
     "?i < length ?xs ==>
      (?xs @ ?ys)\<langle>?i\<rangle>\<^sub>l =
      ?xs\<langle>?i\<rangle>\<^sub>l",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("List_Extra.list_augment_as_update",
     "?k < length ?xs ==> list_augment ?xs ?k ?x = ?xs[?k := ?x]",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("List_Extra.list_minus_first_tl",
     "[?x] <= ?xs ==> ?xs - [?x] = tl ?xs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_app (template_hole 0, template_var 0)))),
    ("List_Extra.seq_extract_out_of_range",
     "?A Int dom\<^sub>l ?xs = {} ==> ?A \<upharpoonleft>\<^sub>l ?xs = []",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app (template_hole 4, template_var 0))),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("List_Extra.is_sorted_list_of_set_by_mono",
     "[| ?R <= ?S; is_sorted_list_of_set_by ?R ?A ?xs |]
      ==> is_sorted_list_of_set_by ?S ?A ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("List_Extra.prefix_not_empty",
     "[| strict_prefix ?xs ?ys; ?xs ~= [] |] ==> ?ys ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("List_Extra.prefix_not_empty_length_gt_zero",
     "[| strict_prefix ?xs ?ys; ?xs ~= [] |] ==> 0 < length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("List_Extra.sorted_last",
     "[| ?x : ran\<^sub>l ?xs; sorted ?xs |] ==> ?x <= last ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("List_Extra.prefix_length_eq",
     "[| length ?xs = length ?ys; prefix ?xs ?ys |] ==> ?xs = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("List_Extra.strict_prefix_eq_exists",
     "strict_prefix ?s ?t = (EX xs. ?s @ xs = ?t & 0 < length xs)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app (template_hole 6, t_empty))),
    ("List_Extra.nths_atLeastAtMost_prefix",
     "?m <= ?n ==> nths ?xs {0..?m} <= nths ?xs {0..?n}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1))))),
    ("List_Extra.seq_filter_Cons_in",
     "?x : ?cs ==>
      (?x # ?xs) \<restriction>\<^sub>l ?cs =
      ?x # ?xs \<restriction>\<^sub>l ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("List_Extra.prefix_minus_concat",
     "prefix ?s ?t ==> (?t - ?s) @ ?z = ?t @ ?z - ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("List_Extra.nths_list_update_out",
     "?k ~: ?A ==> nths (?xs[?k := ?x]) ?A = nths ?xs ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("List_Extra.seq_extract_singleton",
     "?i < length ?xs ==> {?i} \<upharpoonleft>\<^sub>l ?xs = [?xs ! ?i]",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("List_Extra.prefix_and_concat_prefix_is_concat_prefix",
     "[| prefix ?s ?t; prefix (?e @ ?t) ?u |] ==> prefix (?e @ ?s) ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("List_Extra.strict_prefix_diff_minus",
     "[| prefix ?xs ?ys; ?xs ~= ?ys |] ==> ?ys - ?xs ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("List_Extra.map_nth_Cons_atLeastLessThan",
     "map ((!) (?x # ?xs)) [Suc ?m..<?n] = map ((!) ?xs) [?m..<?n - 1]",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("List_Extra.map_list_minus",
     "?xs <= ?ys ==> map ?f (?ys - ?xs) = map ?f ?ys - map ?f ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("List_Extra.nth_el_appendr",
     "length ?xs <= ?i ==>
      (?xs @ ?ys)\<langle>?i\<rangle>\<^sub>l =
      ?ys\<langle>?i - length ?xs\<rangle>\<^sub>l",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 4, template_var 2)))))),
    ("List_Extra.butlast_prefix_imp_length_not_gt",
     "[| 0 < length ?s; strict_prefix (butlast ?s) ?t |]
      ==> ~ length ?t < length ?s",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_negation
        (
           template_inequation
            (less_than, template_app (template_hole 3, template_var 0),
             template_app (template_hole 3, template_var 1))
           ))),
    ("List_Extra.length_takeWhile_less",
     "[| ?a : ran\<^sub>l ?xs; ~ ?P ?a |]
      ==> length (takeWhile ?P ?xs) < length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("List_Extra.tl_element",
     "[| ?x : ran\<^sub>l ?xs; ?x ~= hd ?xs |]
      ==> ?x : ran\<^sub>l (tl ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("List_Extra.prefix_drop",
     "[| drop (length ?xs) ?ys = ?zs; prefix ?xs ?ys |]
      ==> ?ys = ?xs @ ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2)),
            template_var 1),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Extra.dropWhile_sorted_le_above",
     "[| sorted ?xs; ?x : ran\<^sub>l (dropWhile (%x. x <= ?n) ?xs) |]
      ==> ?n < ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, t_empty), template_var 2)))
            )],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("List_Extra.seq_extract_append",
     "?A \<upharpoonleft>\<^sub>l (?xs @ ?ys) =
      ?A \<upharpoonleft>\<^sub>l ?xs @
      {j. j + length ?xs : ?A} \<upharpoonleft>\<^sub>l ?ys",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("List_Extra.seq_extract_split",
     "?i <= length ?xs ==>
      {0..<?i} \<upharpoonleft>\<^sub>l ?xs @
      {?i..<length ?xs} \<upharpoonleft>\<^sub>l ?xs =
      ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 5, template_var 0))),
             template_var 0)),
         template_var 0))),
    ("List_Extra.prefix_map_inj_eq",
     "inj_on ?f (ran\<^sub>l ?xs Un ran\<^sub>l ?ys) ==>
      prefix (map ?f ?xs) (map ?f ?ys) = prefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Extra.strict_prefix_map_inj_eq",
     "inj_on ?f (ran\<^sub>l ?xs Un ran\<^sub>l ?ys) ==>
      strict_prefix (map ?f ?xs) (map ?f ?ys) = strict_prefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List_Extra.tl_list_minus_butlast_eq_empty",
     "[| strict_prefix (butlast ?s) ?t; length ?s = length ?t |]
      ==> tl (?t - butlast ?s) = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 6, template_var 1))),
         template_hole 0))),
    ("List_Extra.sorted_nths_atLeastAtMost_0",
     "[| ?m <= ?n; sorted (nths ?xs {0..?n}) |]
      ==> sorted (nths ?xs {0..?m})",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("List_Extra.sorted_nths_atLeastLessThan_0",
     "[| ?m <= ?n; sorted (nths ?xs {0..<?n}) |]
      ==> sorted (nths ?xs {0..<?m})",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app
                 (template_app (template_hole 1, template_hole 0),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("List_Extra.prefix_map_inj",
     "[| inj_on ?f (ran\<^sub>l ?xs Un ran\<^sub>l ?ys);
         prefix (map ?f ?xs) (map ?f ?ys) |]
      ==> prefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 3, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("List_Extra.strict_prefix_map_inj",
     "[| inj_on ?f (ran\<^sub>l ?xs Un ran\<^sub>l ?ys);
         strict_prefix (map ?f ?xs) (map ?f ?ys) |]
      ==> strict_prefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 3, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("List_Extra.nths_list_augment_out",
     "[| ?k < length ?xs; ?k ~: ?A |]
      ==> nths (list_augment ?xs ?k ?x) ?A = nths ?xs ?A",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 5, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("List_Extra.list_minus_butlast_eq_butlast_list",
     "[| length ?t = length ?s; strict_prefix (butlast ?s) ?t |]
      ==> ?t - butlast ?s = [last ?t]",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_hole 0)))),
    ("List_Extra.seq_extract_Cons",
     "?A \<upharpoonleft>\<^sub>l (?x # ?xs) =
      (if 0 : ?A then [?x] else []) @
      {j. Suc j : ?A} \<upharpoonleft>\<^sub>l ?xs",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 2)),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("List_Extra.set_dropWhile_le",
     "sorted ?xs ==>
      ran\<^sub>l (dropWhile (%x. x <= ?n) ?xs) =
      {x: ran\<^sub>l ?xs. ?n < x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 1)),
         template_app (template_hole 3, t_empty)))),
    ("List_Extra.seq_extract_as_map",
     "[| ?m < ?n; ?n <= length ?xs |]
      ==> {?m..<?n} \<upharpoonleft>\<^sub>l ?xs = map ((!) ?xs) [?m..<?n]",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("List_Extra.butlast_strict_prefix_eq_butlast",
     "[| length ?s = length ?t; strict_prefix (butlast ?s) ?t |]
      ==> strict_prefix (butlast ?s) ?t = (butlast ?s = butlast ?t)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                template_var 0)
              )],
         template_equation
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("List_Extra.strict_prefix_lexord_left",
     "[| trans ?R; (?xs, ?ys) : lexord ?R; strict_prefix ?xs' ?xs |]
      ==> (?xs', ?ys) : lexord ?R",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app (template_hole 1, template_var 3))
           ))),
    ("List_Extra.prefix_lexord_right",
     "[| trans ?R; (?xs, ?ys) : lexord ?R; strict_prefix ?ys ?ys' |]
      ==> (?xs, ?ys') : lexord ?R",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 3))
           ))),
    ("List_Extra.listsum_update",
     "?i < length ?xs ==>
      list_sum (?xs[?i := ?v]) = list_sum ?xs - ?xs ! ?i + ?v",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 1),
                   template_hole 2)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_var 0)))),
    ("List_Extra.length_not_gt_iff_eq_length",
     "[| 0 < length ?s; strict_prefix (butlast ?s) ?t |]
      ==> (~ length ?s < length ?t) = (length ?s = length ?t)",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 5, template_var 1)),
                  template_app (template_hole 5, template_var 0)))
              )],
         template_equation
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 5, template_var 0))))),
    ("List_Extra.prefix_Cons_elim",
     "[| prefix (?x # ?xs) ?ys;
         !!ys'. [| ?ys = ?x # ys'; prefix ?xs ys' |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("List_Extra.strict_prefix_Cons_elim",
     "[| strict_prefix (?x # ?xs) ?ys;
         !!ys'. [| ?ys = ?x # ys'; strict_prefix ?xs ys' |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("List_Extra.set_takeWhile_less_sorted",
     "[| sorted ?I; ?x : ran\<^sub>l ?I; ?x < ?n |]
      ==> ?x : ran\<^sub>l (takeWhile (%x. x < ?n) ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("List_Extra.tl_list_minus_butlast_empty",
     "[| strict_prefix (butlast ?s) ?t; 0 < length ?s;
         length ?t = length ?s |]
      ==> tl (?t - butlast ?s) = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 8, template_var 1))),
         template_hole 0))),
    ("List_Extra.sorted_distinct",
     "[| sorted ?xs; distinct ?xs |]
      ==> ALL i<length ?xs - 1. ?xs ! i < ?xs ! (i + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("List_Extra.nth_le_takeWhile_ord",
     "[| sorted ?xs; length (takeWhile (%x. x <= ?n) ?xs) <= ?i;
         ?i < length ?xs |]
      ==> ?n <= ?xs ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, t_empty), template_var 2)),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List_Extra.tl_list_minus_butlast_not_empty",
     "[| strict_prefix (butlast ?s) ?t; 0 < length ?s;
         length ?s < length ?t |]
      ==> tl (?t - butlast ?s) ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 8, template_var 1))),
             template_hole 0)
           ))),
    ("List_Extra.length_tl_list_minus_butlast_gt_zero",
     "[| length ?s < length ?t; strict_prefix (butlast ?s) ?t;
         0 < length ?s |]
      ==> 0 < length (tl (?t - butlast ?s))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 5,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 3, template_var 1))))))),
    ("List_Extra.butlast_strict_prefix_length_lt_imp_last_tl_minus_butlast_eq_last",
     "[| 0 < length ?s; strict_prefix (butlast ?s) ?t;
         length ?s < length ?t |]
      ==> last (tl (?t - butlast ?s)) = last ?t",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 4, template_var 1)))),
         template_app (template_hole 2, template_var 0)))),
    ("List_Extra.seq_append_as_extract",
     "(?xs = ?ys @ ?zs) =
      (EX i<=length ?xs.
          ?ys = {0..<i} \<upharpoonleft>\<^sub>l ?xs &
          ?zs = {i..<length ?xs} \<upharpoonleft>\<^sub>l ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("List_Extra.nth_length_takeWhile_less",
     "[| sorted ?xs; distinct ?xs; EX a:ran\<^sub>l ?xs. ?n <= a |]
      ==> ?n <= ?xs ! length (takeWhile (%x. x < ?n) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_var 1)))))),
    ("List_Extra.seq_extract_Cons_atLeastLessThan",
     "?m < ?n ==>
      {?m..<?n} \<upharpoonleft>\<^sub>l (?x # ?xs) =
      (if ?m = 0 then ?x # {0..<?n - 1} \<upharpoonleft>\<^sub>l ?xs
       else {?m - 1..<?n - 1} \<upharpoonleft>\<^sub>l ?xs)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_hole 2),
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_hole 0))),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_hole 0)),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0))),
                 template_var 0))
             )))),
    ("List_Extra.lexord_append",
     "[| (?xs\<^sub>1 @ ?ys\<^sub>1, ?xs\<^sub>2 @ ?ys\<^sub>2) : lexord ?R;
         length ?xs\<^sub>1 = length ?xs\<^sub>2 |]
      ==> (?xs\<^sub>1, ?xs\<^sub>2) : lexord ?R |
          ?xs\<^sub>1 = ?xs\<^sub>2 &
          (?ys\<^sub>1, ?ys\<^sub>2) : lexord ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))),
              template_app (template_hole 5, template_var 0))
            ),
        template_equation
         (template_app (template_hole 3, template_var 4),
          template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 4),
                     template_var 2)),
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1)),
                 template_app (template_hole 5, template_var 0))))
           ))),
    ("List_Extra.butlast_eq_if_eq_length_and_prefix",
     "[| 0 < length ?s; 0 < length ?z; length ?s = length ?z;
         strict_prefix (butlast ?s) ?t; strict_prefix (butlast ?z) ?t |]
      ==> butlast ?s = butlast ?z",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 2)),
        template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 1, template_var 1)))),
    ("List_Extra.fin_set_lexord_mono",
     "(!!x y. ?f x y --> ?g x y) ==>
      (?xs, ?ys) : fin_set_lexord {(x, y). ?f x y} -->
      (?xs, ?ys) : fin_set_lexord {(x, y). ?g x y}",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, t_empty))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, t_empty)))))
           ))),
    ("List_Extra.lexord_mono'",
     "[| !!x y. ?f x y --> ?g x y; (?xs, ?ys) : lexord {(x, y). ?f x y} |]
      ==> (?xs, ?ys) : lexord {(x, y). ?g x y}",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app (template_hole 0, t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1, template_app (template_hole 0, t_empty))))
           ))),
    ("List_Extra.lexord_intro_elems",
     "[| ?i < length ?xs; ?i < length ?ys; (?xs ! ?i, ?ys ! ?i) : ?R;
         ALL j<?i. ?xs ! j = ?ys ! j |]
      ==> (?xs, ?ys) : lexord ?R",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 2),
                      template_var 3)),
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 3))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("List_Extra.lexord_eq_length",
     "[| (?xs, ?ys) : lexord ?R; length ?xs = length ?ys |]
      ==> EX i. (?xs ! i, ?ys ! i) : ?R &
                i < length ?xs & (ALL j<i. ?xs ! j = ?ys ! j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_app (template_hole 11, template_var 0))
            ),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 9, template_var 1))],
       template_predicate (template_app (template_hole 8, t_empty))))]
