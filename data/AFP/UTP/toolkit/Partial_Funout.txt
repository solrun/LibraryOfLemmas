Loading theory "Draft.Map_Extra" (required by "Draft.Partial_FunTemplates" via "Draft.Partial_Fun")
Loading theory "Draft.Templates" (required by "Draft.Partial_FunTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.174s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Partial_FunTemplates")
Found termination order: "{}"
### theory "Draft.Map_Extra"
### 0.609s elapsed time, 1.257s cpu time, 0.127s GC time
Loading theory "Draft.Partial_Fun" (required by "Draft.Partial_FunTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.569s elapsed time, 1.159s cpu time, 0.127s GC time
instantiation
  pfun :: (type, type) zero
  zero_pfun == zero_class.zero :: ('a, 'b) pfun
instantiation
  pfun :: (type, type) plus
  plus_pfun == plus :: ('a, 'b) pfun => ('a, 'b) pfun => ('a, 'b) pfun
instantiation
  pfun :: (type, type) minus
  minus_pfun == minus :: ('a, 'b) pfun => ('a, 'b) pfun => ('a, 'b) pfun
instantiation
  pfun :: (type, type) inf
  inf_pfun == inf :: ('a, 'b) pfun => ('a, 'b) pfun => ('a, 'b) pfun
instantiation
  pfun :: (type, type) order
  less_eq_pfun == less_eq :: ('a, 'b) pfun => ('a, 'b) pfun => bool
  less_pfun == less :: ('a, 'b) pfun => ('a, 'b) pfun => bool
### theory "Draft.Partial_Fun"
### 0.598s elapsed time, 0.658s cpu time, 0.060s GC time
Loading theory "Draft.Partial_FunTemplates"
val templateLemmas =
   [("Partial_Fun.pfun_lens_mwb", "mwb_lens (pfun_lens ?i)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Partial_Fun.pfun_subset_eq_least",
     "{}\<^sub>p \<subseteq>\<^sub>p ?f",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Partial_Function.antisymp_flat_ord", "antisymp (flat_ord ?a)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Partial_Fun.pdom_pId_on", "pdom (pId_on ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Partial_Fun.pran_pId_on", "pran (pId_on ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Partial_Fun.pfun_minus_zero", "{}\<^sub>p - ?f = {}\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Partial_Fun.pfun_minus_unit", "?f - {}\<^sub>p = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Partial_Fun.pfun_minus_self", "?f - ?f = {}\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Partial_Fun.pfun_graph_inv", "graph_pfun (pfun_graph ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Partial_Fun.pdom_res_zero",
     "?A \<lhd>\<^sub>p {}\<^sub>p = {}\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Partial_Fun.pdom_res_empty", "{} \<lhd>\<^sub>p ?f = {}\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Partial_Fun.pdom_res_UNIV", "UNIV \<lhd>\<^sub>p ?f = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Partial_Fun.pfun_entries_empty", "pfun_entries {} ?f = {}\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Partial_Fun.pran_res_zero",
     "{}\<^sub>p \<rhd>\<^sub>p ?A = {}\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Partial_Function.flat_interpretation",
     "partial_function_definitions (flat_ord ?b) (flat_lub ?b)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Partial_Function.partial_function_mono",
     "monotone ?ord tailrec_ord (%f. ?c)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_hole 0)),
           t_empty)
         )),
    ("Partial_Function.partial_function_mono",
     "monotone ?ord option_ord (%f. ?c)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_hole 0)),
           t_empty)
         )),
    ("Partial_Fun.pdom_graph_pfun", "pdom (graph_pfun ?R) = Domain ?R",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Partial_Fun.pfun_graph_pId_on", "pfun_graph (pId_on ?A) = Id_on ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Partial_Fun.pdom_res_pdom", "pdom ?f \<lhd>\<^sub>p ?f = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Partial_Fun.pfun_comp_right_id", "?f \<circ>\<^sub>p pId = ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Partial_Fun.pfun_comp_left_id", "pId \<circ>\<^sub>p ?f = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Partial_Function.call_mono",
     "monotone (fun_ord ?ord) ?ord (%f. f ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1),
           t_empty)
         )),
    ("Partial_Fun.pran_finite", "finite (pdom ?f) ==> finite (pran ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Partial_Fun.pdom_pfun_graph_finite",
     "finite (pdom ?f) ==> finite (pfun_graph ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Partial_Fun.pdom_pdom_res",
     "pdom (?A \<lhd>\<^sub>p ?f) = ?A Int pdom ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Partial_Fun.pran_pran_res",
     "pran (?f \<rhd>\<^sub>p ?A) = pran ?f Int ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Partial_Fun.pdom_plus", "pdom (?f + ?g) = pdom ?f Un pdom ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Partial_Fun.pdom_comp",
     "pdom (?g \<circ>\<^sub>p ?f) = pdom (?f \<rhd>\<^sub>p pdom ?g)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Partial_Fun.pran_comp",
     "pran (?g \<circ>\<^sub>p ?f) = pran (pran ?f \<lhd>\<^sub>p ?g)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Partial_Fun.pdom_upd",
     "pdom (?f(?k |-> ?v)\<^sub>p) = insert ?k (pdom ?f)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 2)))),
    ("Partial_Fun.pfun_lens_src",
     "\<S>\<^bsub>pfun_lens ?i\<^esub> = {f. ?i : pdom f}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Partial_Fun.pfun_graph_minus",
     "pfun_graph (?f - ?g) = pfun_graph ?f - pfun_graph ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Partial_Fun.pfun_graph_inter",
     "pfun_graph (?f \<inter>\<^sub>p ?g) =
      pfun_graph ?f Int pfun_graph ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Partial_Fun.pdom_inter",
     "pdom (?f \<inter>\<^sub>p ?g) <= pdom ?f Int pdom ?g",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Partial_Fun.pdom_pran_res_finite",
     "finite (pdom ?f) ==> finite (pdom (?f \<rhd>\<^sub>p ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Partial_Fun.psubseteq_dom_subset",
     "?f \<subseteq>\<^sub>p ?g ==> pdom ?f <= pdom ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Partial_Fun.psubseteq_ran_subset",
     "?f \<subseteq>\<^sub>p ?g ==> pran ?f <= pran ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Partial_Function.ccpo",
     "partial_function_definitions ?ord ?lb ==>
      class.ccpo ?lb ?ord (mk_less ?ord)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Partial_Function.partial_function_lift",
     "partial_function_definitions ?ord ?lb ==>
      partial_function_definitions (fun_ord ?ord) (fun_lub ?lb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Partial_Fun.pfun_plus_pos",
     "?x + ?y = {}\<^sub>p ==> ?x = {}\<^sub>p",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Partial_Fun.pdom_res_minus",
     "?A \<lhd>\<^sub>p (?f - ?g) = ?A \<lhd>\<^sub>p ?f - ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Partial_Fun.pdom_res_twice",
     "?A \<lhd>\<^sub>p (?B \<lhd>\<^sub>p ?f) =
      (?A Int ?B) \<lhd>\<^sub>p ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Partial_Fun.pdom_res_comp",
     "?A \<lhd>\<^sub>p (?g \<circ>\<^sub>p ?f) =
      ?g \<circ>\<^sub>p ?A \<lhd>\<^sub>p ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Partial_Fun.pfun_comp_assoc",
     "?f \<circ>\<^sub>p (?g \<circ>\<^sub>p ?h) =
      ?f \<circ>\<^sub>p ?g \<circ>\<^sub>p ?h",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Partial_Fun.pdom_res_swap",
     "?A \<lhd>\<^sub>p ?f \<rhd>\<^sub>p ?B =
      ?A \<lhd>\<^sub>p (?f \<rhd>\<^sub>p ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Partial_Fun.plambda_id",
     "(\<lambda> x | _var ?P x . x) = pId_on {x. ?P x}",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_app
        (template_hole 1, template_app (template_hole 0, t_empty)))),
    ("Partial_Fun.pfun_upd_twice",
     "?f(?x |-> ?u, ?x |-> ?v)\<^sub>p = ?f(?x |-> ?v)\<^sub>p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 0))),
    ("Partial_Fun.plambda_eta",
     "plambda (%x. x : pdom ?f) (pfun_app ?f) = ?f",
     template_equation
      (template_app (template_app (template_hole 3, t_empty), t_empty),
       template_var 0)),
    ("Partial_Fun.pfun_plus_minus",
     "?f \<subseteq>\<^sub>p ?g ==> ?g - ?f + ?f = ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("Partial_Fun.pdom_plamda", "pdom (plambda ?P ?f) = {x. ?P x}",
     template_equation
      (template_app
        (template_hole 2,
         template_app (template_app (template_hole 1, t_empty), t_empty)),
       template_app (template_hole 0, t_empty))),
    ("Partial_Fun.pdom_res_override",
     "?A \<lhd>\<^sub>p (?f + ?g) =
      ?A \<lhd>\<^sub>p ?f + ?A \<lhd>\<^sub>p ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Partial_Fun.pfun_override_dist_comp",
     "?f + ?g \<circ>\<^sub>p ?h =
      (?f \<circ>\<^sub>p ?h) + (?g \<circ>\<^sub>p ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Partial_Fun.pfun_upd_add",
     "?f + ?g(?x |-> ?v)\<^sub>p = (?f + ?g)(?x |-> ?v)\<^sub>p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Partial_Fun.pran_res_override",
     "(?f + ?g) \<rhd>\<^sub>p ?A \<subseteq>\<^sub>p
      ?f \<rhd>\<^sub>p ?A + ?g \<rhd>\<^sub>p ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Partial_Fun.pfun_app_upd_1",
     "?x = ?y ==> (?f(?x |-> ?v)\<^sub>p)(?y)\<^sub>p = ?v",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("Partial_Fun.pfun_entries_apply_1",
     "?x : ?d ==> pfun_entries ?d ?f(?x)\<^sub>p = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Partial_Fun.pdom_res_apply",
     "?x : ?A ==> (?A \<lhd>\<^sub>p ?f)(?x)\<^sub>p = ?f(?x)\<^sub>p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Partial_Fun.pfun_upd_ext",
     "?x : pdom ?f ==> ?f(?x |-> ?f(?x)\<^sub>p)\<^sub>p = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Partial_Fun.pfun_le_plus",
     "pdom ?x Int pdom ?y = {} ==> ?x \<subseteq>\<^sub>p ?x + ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Partial_Fun.pran_upd",
     "pran (?f(?k |-> ?v)\<^sub>p) =
      insert ?v (pran ((- {?k}) \<lhd>\<^sub>p ?f))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_var 2))))),
    ("Partial_Fun.pdom_minus",
     "?g \<subseteq>\<^sub>p ?f ==> pdom (?f - ?g) = pdom ?f - pdom ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("Partial_Fun.pfun_app_add",
     "?x : pdom ?g ==> (?f + ?g)(?x)\<^sub>p = ?g(?x)\<^sub>p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Partial_Function.flat_ordI",
     "(?x ~= ?a ==> ?x = ?y) ==> flat_ord ?a ?x ?y",
     template_implication
      ([template_implication
         ([template_negation
            (template_equation (template_var 2, template_var 1))],
          template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Partial_Function.flat_ord_antisym",
     "[| flat_ord ?a ?x ?y; flat_ord ?a ?y ?x |] ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Partial_Fun.plambda_app",
     "plambda ?P ?f(?v)\<^sub>p = (if ?P ?v then ?f ?v else undefined)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_app (template_hole 2, t_empty), t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app (template_var 1, template_var 0)),
         template_hole 0))),
    ("Partial_Fun.pfun_app_upd_2",
     "?x ~= ?y ==> (?f(?x |-> ?v)\<^sub>p)(?y)\<^sub>p = ?f(?y)\<^sub>p",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Partial_Fun.pdom_res_upd_out",
     "?k ~: ?A ==>
      ?A \<lhd>\<^sub>p ?f(?k |-> ?v)\<^sub>p = ?A \<lhd>\<^sub>p ?f",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Partial_Fun.pfun_app_minus",
     "?x ~: pdom ?g ==> (?f - ?g)(?x)\<^sub>p = ?f(?x)\<^sub>p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Partial_Fun.pfun_plus_commute",
     "pdom ?f Int pdom ?g = {} ==> ?f + ?g = ?g + ?f",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Partial_Fun.pfun_minus_plus",
     "pdom ?f Int pdom ?g = {} ==> ?f + ?g - ?g = ?f",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 4, template_var 0)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0),
         template_var 1))),
    ("Partial_Function.chain_fun",
     "Complete_Partial_Order.chain (fun_ord ?ord) ?A ==>
      Complete_Partial_Order.chain ?ord {y. EX f:?A. y = f ?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, t_empty))
           ))),
    ("Partial_Fun.pfun_sum_pdom_res",
     "finite (pdom ?f) ==>
      pfun_sum (?A \<lhd>\<^sub>p ?f) =
      pfun_sum ?f - pfun_sum ((- ?A) \<lhd>\<^sub>p ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0)),
               template_var 1)))))),
    ("Partial_Fun.pfun_sum_pdom_antires",
     "finite (pdom ?f) ==>
      pfun_sum ((- ?A) \<lhd>\<^sub>p ?f) =
      pfun_sum ?f - pfun_sum (?A \<lhd>\<^sub>p ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)))))),
    ("Partial_Fun.pdom_res_upd_in",
     "?k : ?A ==>
      ?A \<lhd>\<^sub>p ?f(?k |-> ?v)\<^sub>p = (?A \<lhd>\<^sub>p ?f)(?k 
      |-> ?v)\<^sub>p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0)))),
    ("Partial_Fun.pran_res_upd_1",
     "?v : ?A ==>
      ?f(?x |-> ?v)\<^sub>p \<rhd>\<^sub>p ?A = (?f \<rhd>\<^sub>p ?A)(?x 
      |-> ?v)\<^sub>p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_var 0),
           template_var 3)))),
    ("Partial_Fun.pdom_antires_insert_notin",
     "?k ~: pdom ?f ==>
      (- insert ?k ?A) \<lhd>\<^sub>p ?f = (- ?A) \<lhd>\<^sub>p ?f",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1)))),
    ("Partial_Fun.pdom_member_minus_iff",
     "?x ~: pdom ?g ==> (?x : pdom (?f - ?g)) = (?x : pdom ?f)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("Partial_Fun.psubseteq_pfun_upd2",
     "[| ?f \<subseteq>\<^sub>p ?g; ?x ~: pdom ?f |]
      ==> ?f \<subseteq>\<^sub>p ?g(?x |-> ?v)\<^sub>p",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 3))
                )
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Partial_Fun.psubseteq_pfun_upd1",
     "[| ?f \<subseteq>\<^sub>p ?g; ?x ~: pdom ?g |]
      ==> ?f \<subseteq>\<^sub>p ?g(?x |-> ?v)\<^sub>p",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Partial_Fun.psubseteq_pfun_upd3",
     "[| ?f \<subseteq>\<^sub>p ?g; ?g(?x)\<^sub>p = ?v |]
      ==> ?f \<subseteq>\<^sub>p ?g(?x |-> ?v)\<^sub>p",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Partial_Function.let_mono",
     "(!!x. monotone ?orda ?ordb (%f. ?b f x)) ==>
      monotone ?orda ?ordb (%f. Let ?t (?b f))",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Partial_Function.tailrec_admissible",
     "ccpo.admissible (fun_lub (flat_lub ?c)) (fun_ord (flat_ord ?c))
       (%a. ALL x. a x ~= ?c --> ?P x (a x))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1))),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           t_empty)
         )),
    ("Partial_Fun.pran_plamda", "pran (plambda ?P ?f) = {?f x |x. ?P x}",
     template_equation
      (template_app
        (template_hole 5,
         template_app (template_app (template_hole 4, t_empty), t_empty)),
       template_app (template_hole 3, t_empty))),
    ("Partial_Fun.pfun_member_minus",
     "((?x, ?y) \<in>\<^sub>p ?f - ?g) =
      ((?x, ?y) \<in>\<^sub>p ?f & ~ (?x, ?y) \<in>\<^sub>p ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("Partial_Fun.pfun_sums_upd_2",
     "finite (pdom ?m) ==>
      pfun_sum (?m(?k |-> ?v)\<^sub>p) =
      pfun_sum ((- {?k}) \<lhd>\<^sub>p ?m) + ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_hole 0))),
                 template_var 2))),
           template_var 0)))),
    ("Partial_Fun.pfun_upd_comm_linorder",
     "?x < ?y ==>
      ?f(?y |-> ?u, ?x |-> ?v)\<^sub>p = ?f(?x |-> ?v, ?y |-> ?u)\<^sub>p",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("Partial_Fun.pfun_upd_minus",
     "?x ~: pdom ?g ==>
      (?f - ?g)(?x |-> ?v)\<^sub>p = ?f(?x |-> ?v)\<^sub>p - ?g",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2)))),
    ("Partial_Fun.pfun_minus_plus_commute",
     "pdom ?g Int pdom ?h = {} ==> ?f - ?g + ?h = ?f + ?h - ?g",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_app (template_hole 4, template_var 1)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Partial_Fun.pfun_ext",
     "(!!x y. ((x, y) \<in>\<^sub>p ?f) = ((x, y) \<in>\<^sub>p ?g)) ==>
      ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Partial_Function.flat_lub_in_chain",
     "[| Complete_Partial_Order.chain (flat_ord ?b) ?A;
         flat_lub ?b ?A = ?a |]
      ==> ?a = ?b | ?a : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Partial_Function.option_admissible",
     "option.admissible (%f. ALL x y. f x = Some y --> ?P x y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 7))),
           t_empty)
         )),
    ("Partial_Fun.pfun_upd_comm",
     "?x ~= ?y ==>
      ?f(?y |-> ?u, ?x |-> ?v)\<^sub>p = ?f(?x |-> ?v, ?y |-> ?u)\<^sub>p",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("Partial_Fun.pran_res_upd_2",
     "?v ~: ?A ==>
      ?f(?x |-> ?v)\<^sub>p \<rhd>\<^sub>p ?A =
      (- {?x}) \<lhd>\<^sub>p ?f \<rhd>\<^sub>p ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_var 1)),
           template_var 2)))),
    ("Partial_Fun.pfun_minus_common_subset",
     "[| ?h \<subseteq>\<^sub>p ?f; ?h \<subseteq>\<^sub>p ?g |]
      ==> (?f - ?h = ?g - ?h) = (?f = ?g)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("Partial_Fun.pfun_sum_upd_1",
     "[| finite (pdom ?m); ?k ~: pdom ?m |]
      ==> pfun_sum (?m(?k |-> ?v)\<^sub>p) = pfun_sum ?m + ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 6, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 2)),
           template_var 0)))),
    ("Partial_Function.if_mono",
     "[| monotone ?orda ?ordb ?F; monotone ?orda ?ordb ?G |]
      ==> monotone ?orda ?ordb (%f. if ?c then ?F f else ?G f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             t_empty)
           ))),
    ("Partial_Fun.pfun_plus_commute_weak",
     "ALL k:pdom ?f Int pdom ?g. ?f(k)\<^sub>p = ?g(k)\<^sub>p ==>
      ?f + ?g = ?g + ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app (template_hole 4, template_var 0))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Partial_Fun.pfun_pdom_antires_upd",
     "?k : ?A ==>
      ((- ?A) \<lhd>\<^sub>p ?m)(?k |-> ?v)\<^sub>p =
      ((- (?A - {?k})) \<lhd>\<^sub>p ?m)(?k |-> ?v)\<^sub>p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_hole 0)))),
                 template_var 1)),
             template_var 3),
           template_var 0)))),
    ("Partial_Fun.pfun_member_plus",
     "((?x, ?y) \<in>\<^sub>p ?f + ?g) =
      (?x ~: pdom ?g & (?x, ?y) \<in>\<^sub>p ?f |
       (?x, ?y) \<in>\<^sub>p ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_var 0)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("Partial_Function.admissible_fun",
     "[| partial_function_definitions ?le ?lub;
         !!x. ccpo.admissible ?lub ?le (?Q x) |]
      ==> ccpo.admissible (fun_lub ?lub) (fun_ord ?le)
           (%f. ALL x. ?Q x (f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 1, template_var 2)),
             t_empty)
           ))),
    ("Partial_Fun.pfun_sum_dom_res_insert",
     "[| ?x : pdom ?f; ?x ~: ?A; finite ?A |]
      ==> pfun_sum (insert ?x ?A \<lhd>\<^sub>p ?f) =
          ?f(?x)\<^sub>p + pfun_sum (?A \<lhd>\<^sub>p ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 0)
                )
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)))))),
    ("Partial_Function.bind_mono",
     "[| monotone option.le_fun option_ord ?B;
         !!y. monotone option.le_fun option_ord (?C y) |]
      ==> monotone option.le_fun option_ord (%f. ?B f >>= (%y. ?C y f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7))),
                template_app (template_hole 6, template_hole 5)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7))),
               template_app (template_hole 2, template_hole 1)),
             t_empty)
           ))),
    ("Partial_Function.partial_function_image",
     "[| partial_function_definitions ?ord ?Lub;
         !!x y. ?f x = ?f y ==> x = y; !!x. ?f (?g x) = x |]
      ==> partial_function_definitions (img_ord ?f ?ord)
           (img_lub ?f ?g ?Lub)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Partial_Function.admissible_image",
     "[| partial_function_definitions ?le ?lub;
         ccpo.admissible ?lub ?le (?P o ?g); !!x y. ?f x = ?f y ==> x = y;
         !!x. ?f (?g x) = x |]
      ==> ccpo.admissible (img_lub ?f ?g ?lub) (img_ord ?f ?le) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 4),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4)),
             template_var 2)
           )))]:
   (string * thm * template) list
### theory "Draft.Partial_FunTemplates"
### 0.380s elapsed time, 0.518s cpu time, 0.062s GC time
val it = (): unit
