Loading theory "Draft.Map_Extra" (required by "Draft.Finite_FunTemplates" via "Draft.Finite_Fun")
Loading theory "Draft.FSet_Extra" (required by "Draft.Finite_FunTemplates" via "Draft.Finite_Fun")
Loading theory "Draft.Templates" (required by "Draft.Finite_FunTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.260s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Finite_FunTemplates")
"fBall"
  :: "'a fset => ('a => bool) => bool"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "{}"
### theory "Draft.FSet_Extra"
### 0.463s elapsed time, 1.375s cpu time, 0.123s GC time
### theory "Draft.Map_Extra"
### 0.616s elapsed time, 1.663s cpu time, 0.123s GC time
Loading theory "Draft.Partial_Fun" (required by "Draft.Finite_FunTemplates" via "Draft.Finite_Fun")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.611s elapsed time, 1.581s cpu time, 0.200s GC time
instantiation
  pfun :: (type, type) zero
  zero_pfun == zero_class.zero :: ('a, 'b) pfun
instantiation
  pfun :: (type, type) plus
  plus_pfun == plus :: ('a, 'b) pfun => ('a, 'b) pfun => ('a, 'b) pfun
instantiation
  pfun :: (type, type) minus
  minus_pfun == minus :: ('a, 'b) pfun => ('a, 'b) pfun => ('a, 'b) pfun
instantiation
  pfun :: (type, type) inf
  inf_pfun == inf :: ('a, 'b) pfun => ('a, 'b) pfun => ('a, 'b) pfun
instantiation
  pfun :: (type, type) order
  less_eq_pfun == less_eq :: ('a, 'b) pfun => ('a, 'b) pfun => bool
  less_pfun == less :: ('a, 'b) pfun => ('a, 'b) pfun => bool
### theory "Draft.Partial_Fun"
### 0.641s elapsed time, 0.756s cpu time, 0.136s GC time
Loading theory "Draft.Finite_Fun" (required by "Draft.Finite_FunTemplates")
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Partial_Fun.pfun" found.
instantiation
  ffun :: (type, type) zero
  zero_ffun == zero_class.zero :: ('a, 'b) ffun
instantiation
  ffun :: (type, type) plus
  plus_ffun == plus :: ('a, 'b) ffun => ('a, 'b) ffun => ('a, 'b) ffun
instantiation
  ffun :: (type, type) minus
  minus_ffun == minus :: ('a, 'b) ffun => ('a, 'b) ffun => ('a, 'b) ffun
instantiation
  ffun :: (type, type) inf
  inf_ffun == inf :: ('a, 'b) ffun => ('a, 'b) ffun => ('a, 'b) ffun
instantiation
  ffun :: (type, type) order
  less_eq_ffun == less_eq :: ('a, 'b) ffun => ('a, 'b) ffun => bool
  less_ffun == less :: ('a, 'b) ffun => ('a, 'b) ffun => bool
### theory "Draft.Finite_Fun"
### 0.541s elapsed time, 0.577s cpu time, 0.062s GC time
Loading theory "Draft.Finite_FunTemplates"
val templateLemmas =
   [("Finite_Fun.fdom_finite", "finite (fdom ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Finite_Fun.ffun_lens_mwb", "mwb_lens (ffun_lens ?i)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Finite_Fun.ffun_subset_eq_least", "{}\<^sub>f \<subseteq>\<^sub>f ?f",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Finite_Fun.fdom_res_zero",
     "?A \<lhd>\<^sub>f {}\<^sub>f = {}\<^sub>f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Finite_Fun.fdom_res_empty", "{} \<lhd>\<^sub>f ?f = {}\<^sub>f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Finite_Fun.fran_res_zero",
     "{}\<^sub>f \<rhd>\<^sub>f ?A = {}\<^sub>f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Finite_Fun.ffun_graph_inv", "graph_ffun (ffun_graph ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Finite_Fun.ffun_minus_zero", "{}\<^sub>f - ?f = {}\<^sub>f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Finite_Fun.ffun_minus_unit", "?f - {}\<^sub>f = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Finite_Fun.ffun_minus_self", "?f - ?f = {}\<^sub>f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Finite_Fun.fdom_res_fdom", "fdom ?f \<lhd>\<^sub>f ?f = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Finite_Fun.fdom_fdom_res",
     "fdom (?A \<lhd>\<^sub>f ?f) = ?A Int fdom ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Fun.fran_fran_res",
     "fran (?f \<rhd>\<^sub>f ?A) = fran ?f Int ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Finite_Fun.fdom_comp",
     "fdom (?g \<circ>\<^sub>f ?f) = fdom (?f \<rhd>\<^sub>f fdom ?g)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Finite_Fun.fdom_plus", "fdom (?f + ?g) = fdom ?f Un fdom ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Fun.fran_comp",
     "fran (?g \<circ>\<^sub>f ?f) = fran (fran ?f \<lhd>\<^sub>f ?g)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Finite_Fun.fdom_upd",
     "fdom (?f(?k |-> ?v)\<^sub>f) = insert ?k (fdom ?f)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 2)))),
    ("Finite_Fun.ffun_lens_src",
     "\<S>\<^bsub>ffun_lens ?i\<^esub> = {f. ?i : fdom f}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Finite_Fun.ffun_graph_minus",
     "ffun_graph (?f - ?g) = ffun_graph ?f - ffun_graph ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Fun.ffun_graph_inter",
     "ffun_graph (?f \<inter>\<^sub>f ?g) =
      ffun_graph ?f Int ffun_graph ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Fun.fdom_inter",
     "fdom (?f \<inter>\<^sub>f ?g) <= fdom ?f Int fdom ?g",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Finite_Fun.fsubseteq_dom_subset",
     "?f \<subseteq>\<^sub>f ?g ==> fdom ?f <= fdom ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Finite_Fun.fsubseteq_ran_subset",
     "?f \<subseteq>\<^sub>f ?g ==> fran ?f <= fran ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Finite_Fun.ffun_plus_pos", "?x + ?y = {}\<^sub>f ==> ?x = {}\<^sub>f",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("Finite_Fun.fdom_res_twice",
     "?A \<lhd>\<^sub>f (?B \<lhd>\<^sub>f ?f) =
      (?A Int ?B) \<lhd>\<^sub>f ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Finite_Fun.fdom_res_comp",
     "?A \<lhd>\<^sub>f (?g \<circ>\<^sub>f ?f) =
      ?g \<circ>\<^sub>f ?A \<lhd>\<^sub>f ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Finite_Fun.fdom_res_minus",
     "?A \<lhd>\<^sub>f (?f - ?g) = ?A \<lhd>\<^sub>f ?f - ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Finite_Fun.ffun_comp_assoc",
     "?f \<circ>\<^sub>f (?g \<circ>\<^sub>f ?h) =
      ?f \<circ>\<^sub>f ?g \<circ>\<^sub>f ?h",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Finite_Fun.fdom_res_swap",
     "?A \<lhd>\<^sub>f ?f \<rhd>\<^sub>f ?B =
      ?A \<lhd>\<^sub>f (?f \<rhd>\<^sub>f ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Finite_Fun.fdom_graph_ffun",
     "finite (Domain ?R) ==> fdom (graph_ffun ?R) = Domain ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Finite_Fun.ffun_upd_twice",
     "?f(?x |-> ?u, ?x |-> ?v)\<^sub>f = ?f(?x |-> ?v)\<^sub>f",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 0))),
    ("Finite_Fun.ffun_plus_minus",
     "?f \<subseteq>\<^sub>f ?g ==> ?g - ?f + ?f = ?g",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("Finite_Fun.fdom_res_override",
     "?A \<lhd>\<^sub>f (?f + ?g) =
      ?A \<lhd>\<^sub>f ?f + ?A \<lhd>\<^sub>f ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Finite_Fun.pfun_override_dist_comp",
     "?f + ?g \<circ>\<^sub>f ?h =
      (?f \<circ>\<^sub>f ?h) + (?g \<circ>\<^sub>f ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Finite_Fun.ffun_upd_add",
     "?f + ?g(?x |-> ?v)\<^sub>f = (?f + ?g)(?x |-> ?v)\<^sub>f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Finite_Fun.fran_res_override",
     "(?f + ?g) \<rhd>\<^sub>f ?A \<subseteq>\<^sub>f
      ?f \<rhd>\<^sub>f ?A + ?g \<rhd>\<^sub>f ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Finite_Fun.ffun_app_upd_1",
     "?x = ?y ==> (?f(?x |-> ?v)\<^sub>f)(?y)\<^sub>f = ?v",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("Finite_Fun.ffun_upd_ext",
     "?x : fdom ?f ==> ?f(?x |-> ?f(?x)\<^sub>f)\<^sub>f = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Finite_Fun.ffun_le_plus",
     "fdom ?x Int fdom ?y = {} ==> ?x \<subseteq>\<^sub>f ?x + ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Finite_Fun.fran_upd",
     "fran (?f(?k |-> ?v)\<^sub>f) =
      insert ?v (fran ((- {?k}) \<lhd>\<^sub>f ?f))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_var 2))))),
    ("Finite_Fun.ffun_app_add",
     "?x : fdom ?g ==> (?f + ?g)(?x)\<^sub>f = ?g(?x)\<^sub>f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Finite_Fun.ffun_app_upd_2",
     "?x ~= ?y ==> (?f(?x |-> ?v)\<^sub>f)(?y)\<^sub>f = ?f(?y)\<^sub>f",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Finite_Fun.pdom_res_upd_out",
     "?k ~: ?A ==>
      ?A \<lhd>\<^sub>f ?f(?k |-> ?v)\<^sub>f = ?A \<lhd>\<^sub>f ?f",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Finite_Fun.ffun_app_minus",
     "?x ~: fdom ?g ==> (?f - ?g)(?x)\<^sub>f = ?f(?x)\<^sub>f",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Finite_Fun.ffun_plus_commute",
     "fdom ?f Int fdom ?g = {} ==> ?f + ?g = ?g + ?f",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Finite_Fun.ffun_minus_plus",
     "fdom ?f Int fdom ?g = {} ==> ?f + ?g - ?g = ?f",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 4, template_var 0)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0),
         template_var 1))),
    ("Finite_Fun.pdom_res_upd_in",
     "?k : ?A ==>
      ?A \<lhd>\<^sub>f ?f(?k |-> ?v)\<^sub>f = (?A \<lhd>\<^sub>f ?f)(?k 
      |-> ?v)\<^sub>f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0)))),
    ("Finite_Fun.fran_res_upd_1",
     "?v : ?A ==>
      ?f(?x |-> ?v)\<^sub>f \<rhd>\<^sub>f ?A = (?f \<rhd>\<^sub>f ?A)(?x 
      |-> ?v)\<^sub>f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_var 0),
           template_var 3)))),
    ("Finite_Fun.fdom_member_minus_iff",
     "?x ~: fdom ?g ==> (?x : fdom (?f - ?g)) = (?x : fdom ?f)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("Finite_Fun.fsubseteq_ffun_upd2",
     "[| ?f \<subseteq>\<^sub>f ?g; ?x ~: fdom ?f |]
      ==> ?f \<subseteq>\<^sub>f ?g(?x |-> ?v)\<^sub>f",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 3))
                )
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Finite_Fun.fsubseteq_ffun_upd1",
     "[| ?f \<subseteq>\<^sub>f ?g; ?x ~: fdom ?g |]
      ==> ?f \<subseteq>\<^sub>f ?g(?x |-> ?v)\<^sub>f",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Finite_Fun.psubseteq_pfun_upd3",
     "[| ?f \<subseteq>\<^sub>f ?g; ?g(?x)\<^sub>f = ?v |]
      ==> ?f \<subseteq>\<^sub>f ?g(?x |-> ?v)\<^sub>f",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Finite_Fun.ffun_member_minus",
     "((?x, ?y) \<in>\<^sub>f ?f - ?g) =
      ((?x, ?y) \<in>\<^sub>f ?f & ~ (?x, ?y) \<in>\<^sub>f ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("Finite_Fun.ffun_upd_comm_linorder",
     "?x < ?y ==>
      ?f(?y |-> ?u, ?x |-> ?v)\<^sub>f = ?f(?x |-> ?v, ?y |-> ?u)\<^sub>f",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("Finite_Fun.ffun_upd_minus",
     "?x ~: fdom ?g ==>
      (?f - ?g)(?x |-> ?v)\<^sub>f = ?f(?x |-> ?v)\<^sub>f - ?g",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2)))),
    ("Finite_Fun.ffun_minus_plus_commute",
     "fdom ?g Int fdom ?h = {} ==> ?f - ?g + ?h = ?f + ?h - ?g",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_app (template_hole 4, template_var 1)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Finite_Fun.ffun_ext",
     "(!!x y. ((x, y) \<in>\<^sub>f ?f) = ((x, y) \<in>\<^sub>f ?g)) ==>
      ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Finite_Fun.ffun_upd_comm",
     "?x ~= ?y ==>
      ?f(?y |-> ?u, ?x |-> ?v)\<^sub>f = ?f(?x |-> ?v, ?y |-> ?u)\<^sub>f",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("Finite_Fun.fran_res_upd_2",
     "?v ~: ?A ==>
      ?f(?x |-> ?v)\<^sub>f \<rhd>\<^sub>f ?A =
      (- {?x}) \<lhd>\<^sub>f ?f \<rhd>\<^sub>f ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_var 1)),
           template_var 2)))),
    ("Finite_Fun.ffun_minus_common_subset",
     "[| ?h \<subseteq>\<^sub>f ?f; ?h \<subseteq>\<^sub>f ?g |]
      ==> (?f - ?h = ?g - ?h) = (?f = ?g)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("Finite_Fun.ffun_member_plus",
     "((?x, ?y) \<in>\<^sub>f ?f + ?g) =
      (?x ~: fdom ?g & (?x, ?y) \<in>\<^sub>f ?f |
       (?x, ?y) \<in>\<^sub>f ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_var 0)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Finite_FunTemplates"
### 0.571s elapsed time, 0.997s cpu time, 0.436s GC time
val it = (): unit
