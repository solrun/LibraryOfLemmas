Loading theory "Draft.FSet_Extra" (required by "Draft.Countable_Set_ExtraTemplates" via "Draft.Countable_Set_Extra")
Loading theory "Draft.List_Extra" (required by "Draft.Countable_Set_ExtraTemplates" via "Draft.Countable_Set_Extra" via "Draft.Sequence")
Loading theory "Draft.Templates" (required by "Draft.Countable_Set_ExtraTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.225s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Countable_Set_ExtraTemplates")
"fBall"
  :: "'a fset => ('a => bool) => bool"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale abel_semigroup
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
  assumes "abel_semigroup (\<^bold>*)"
consts
  nth_el :: "'a list => nat => 'a option"
### theory "Draft.FSet_Extra"
### 0.450s elapsed time, 1.333s cpu time, 0.117s GC time
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.578s elapsed time, 1.511s cpu time, 0.117s GC time
### Partially applied constant "List_Extra.gcp" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin gcp (set (?x # ?xs)) == fold gcp ?xs ?x
instantiation
  list :: (type) minus
  minus_list == minus :: 'a list => 'a list => 'a list
### theory "Draft.List_Extra"
### 0.819s elapsed time, 1.925s cpu time, 0.180s GC time
Loading theory "Draft.Sequence" (required by "Draft.Countable_Set_ExtraTemplates" via "Draft.Countable_Set_Extra")
instantiation
  seq :: (ord) ord
  less_eq_seq == less_eq :: 'a seq => 'a seq => bool
  less_seq == less :: 'a seq => 'a seq => bool
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "sorted_rel"
  Proving monotonicity ...
### theory "Draft.Sequence"
### 0.396s elapsed time, 0.452s cpu time, 0.072s GC time
Loading theory "Draft.Countable_Set_Extra" (required by "Draft.Countable_Set_ExtraTemplates")
### theory "Draft.Countable_Set_Extra"
### 0.484s elapsed time, 0.529s cpu time, 0.073s GC time
Loading theory "Draft.Countable_Set_ExtraTemplates"
val templateLemmas =
   [("Countable_Set_Extra.cset_count_inj_seq",
     "inj_on (cset_count ?A) (rcset ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Countable_Set_Extra.cset_seq_ran", "ran (cset_seq ?A) = rcset ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Countable_Set_Extra.CCollect_ext_Some",
     "CCollect_ext Some ?xs = CCollect ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Countable_Set_Extra.the_Some_image", "the ` Some ` ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Countable_Set_Extra.cset_mapM_Some_image",
     "cset_mapM (Some `\<^sub>c ?A) = Some ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Countable_Set_Extra.csets_finite", "finite ?A ==> finite (csets ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Countable_Set_Extra.csets_infinite",
     "infinite ?A ==> infinite (csets ?A)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Countable_Set_Extra.cset_CollectI",
     "?P ?a ==> ?a \<in>\<^sub>c {x. ?P x}\<^sub>c",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, t_empty))
           ))),
    ("Countable_Set_Extra.inj_on_image_csets",
     "inj_on ?f ?A ==> inj_on ((`\<^sub>c) ?f) (csets ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Countable_Set_Extra.cset_CollectD",
     "?a \<in>\<^sub>c {x. ?P x}\<^sub>c ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, t_empty))
            )],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Countable_Set_Extra.cset_Coll_equiv",
     "cset_Coll ?A ?P = {x. x \<in>\<^sub>c ?A & ?P x}\<^sub>c",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Countable_Set_Extra.cset_count_infinite_bij",
     "infinite (rcset ?A) ==> bij_betw (cset_count ?A) (rcset ?A) UNIV",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 3, template_var 0)),
             template_hole 0)
           ))),
    ("Countable_Set_Extra.infinite_cset_count_surj",
     "infinite (rcset ?A) ==> surj (cset_count ?A)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Countable_Set_Extra.nat_set_cset_bij",
     "(!!f. bij f ==> ?thesis) ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Countable_Set_Extra.countable_finite_power",
     "countable ?A ==> countable {B. B <= ?A & finite B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("Countable_Set_Extra.bij_betw_image_csets",
     "bij_betw ?f ?A ?B ==>
      bij_betw ((`\<^sub>c) ?f) (csets ?A) (csets ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Countable_Set_Extra.range_cset2seq",
     "?A ~= {}\<^sub>c ==>
      range (Sequence.seq.Rep_seq (cset2seq ?A)) = rcset ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Countable_Set_Extra.cset_CollI",
     "[| ?a \<in>\<^sub>c ?A; ?P ?a |]
      ==> ?a \<in>\<^sub>c cset_Coll ?A ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Countable_Set_Extra.nat_set_cset_partial_bij",
     "(!!f. bij_betw f {A. A ~= {}\<^sub>c} UNIV ==> ?thesis) ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Countable_Set_Extra.cset_Collect_cong",
     "(!!x. ?P x = ?Q x) ==> {x. ?P x}\<^sub>c = {x. ?Q x}\<^sub>c",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Countable_Set_Extra.image_csets_surj",
     "[| inj_on ?f ?A; ?f ` ?A = ?B |]
      ==> (`\<^sub>c) ?f ` csets ?A = csets ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Countable_Set_ExtraTemplates"
### 0.544s elapsed time, 0.995s cpu time, 0.489s GC time
val it = (): unit
