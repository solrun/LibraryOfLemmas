Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.147s elapsed time, 0.603s cpu time, 0.041s GC time
Loading theory "Amortized_Complexity.Amortized_Framework0" (required by "Draft.Tables_natMoreTemplates" via "Draft.Tables_nat" via "Draft.Tables_real")
### theory "HOL-Library.Set_Algebras"
### 0.191s elapsed time, 0.783s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
locale Amortized
  fixes init :: "'s"
    and nxt :: "'o => 's => 's"
    and inv :: "'s => bool"
    and T :: "'o => 's => real"
    and \<Phi> :: "'s => real"
    and U :: "'o => 's => real"
  assumes "Amortized init nxt inv T \<Phi> U"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale BinCounter
### theory "HOL-Library.Nat_Bijection"
### 0.335s elapsed time, 1.342s cpu time, 0.152s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "length <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "{}"
locale table_insert
  fixes a :: "real"
    and c :: "real"
  assumes "table_insert a c"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.006s elapsed time, 3.806s cpu time, 0.845s GC time
(SUM i<?n. T_incr (incr.state ?f i)) <= (SUM i<?n. 2)
(SUM i<?n. T_ins (local.ins.state ?f i)) <= (SUM i<?n. a + 1)
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.068s elapsed time, 3.894s cpu time, 0.790s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.112s elapsed time, 6.755s cpu time, 1.135s GC time
Loading theory "Draft.Templates" (required by "Draft.Tables_natMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.058s elapsed time, 0.136s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Tables_natMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.556s elapsed time, 1.192s cpu time, 0.141s GC time
Found termination order: "{}"
Found termination order: "{}"
### theory "Amortized_Complexity.Amortized_Framework0"
### 2.938s elapsed time, 7.874s cpu time, 1.282s GC time
Loading theory "Draft.Tables_real" (required by "Draft.Tables_natMoreTemplates" via "Draft.Tables_nat")
Found termination order: "{}"
### Ignoring duplicate rewrite rule:
### of_nat (Suc ?m1) == (1::?'a1) + of_nat ?m1
locale Table0
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
  assumes "Table0 f1 f2 f1' f2' e c"
locale Table
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
    and l0 :: "real"
  assumes "Table f1 f2 f1' f2' e c l0"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale Optimal
  fixes f2 :: "real"
    and c :: "real"
    and e :: "real"
    and l0 :: "nat"
  assumes "Optimal f2 c e l0"
### theory "Draft.Tables_real"
### 0.494s elapsed time, 0.568s cpu time, 0.061s GC time
Loading theory "Draft.Tables_nat" (required by "Draft.Tables_natMoreTemplates")
### Ignoring duplicate rewrite rule:
### ?x1 <= of_int \<lceil>?x1\<rceil> == True
locale TableInv
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
    and l0 :: "nat"
  assumes "TableInv f1 f2 f1' f2' e c l0"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale Table1
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
    and l0 :: "nat"
  assumes "Table1 f1 f2 f1' f2' e c l0"
Found termination order: "{}"
locale Table2_f1f2''
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
    and l0 :: "nat"
    and f1'' :: "real"
    and f2'' :: "real"
  assumes "Table2_f1f2'' f1 f2 f1' f2' e c l0"
locale Table2
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
    and l0 :: "nat"
    and f1'' :: "real"
    and f2'' :: "real"
  assumes "Table2 f1 f2 f1' f2' e c l0 f1'' f2''"
Found termination order: "{}"
locale Table3
  fixes f1 :: "real"
    and f2 :: "real"
    and f1' :: "real"
    and f2' :: "real"
    and e :: "real"
    and c :: "real"
    and l0 :: "nat"
    and f1'' :: "real"
    and f2'' :: "real"
  assumes "Table3 f1 f2 f1' f2' e c l0 f1'' f2''"
### theory "Draft.Tables_nat"
### 0.626s elapsed time, 0.716s cpu time, 0.107s GC time
Loading theory "Draft.Tables_natMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Tables_natMoreTemplates"
### 0.331s elapsed time, 0.486s cpu time, 0.052s GC time
val it = (): unit
