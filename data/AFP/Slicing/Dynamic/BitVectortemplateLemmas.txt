   [("BitVector.order_refl", "?x \<preceq>\<^sub>b ?x",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("BitVector.bv_leqs_refl", "?xs \<preceq>\<^sub>b ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("BitVector.less_irrefl", "~ ?x \<prec>\<^sub>b ?x",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)
             )
         )),
    ("BitVector.lexordp_eq_refl", "BitVector.lexordp_eq ?xs ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 0)
         )),
    ("BitVector.bdd_above_Iic", "BitVector.bdd_above (BitVector.atMost ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0))
         )),
    ("BitVector.bdd_above_Iio",
     "BitVector.bdd_above (BitVector.lessThan ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("BitVector.bdd_below_Ici",
     "BitVector.bdd_below (BitVector.atLeast ?a)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0))
         )),
    ("BitVector.bdd_below_Ioi",
     "BitVector.bdd_below (BitVector.greaterThan ?a)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("BitVector.lexordp_irreflexive'", "~ BitVector.lexordp ?xs ?xs",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               template_var 0)
             )
         )),
    ("BitVector.maximal_element",
     "?xs \<preceq>\<^sub>b replicate (length ?xs) True",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("BitVector.minimal_element",
     "replicate (length ?xs) False \<preceq>\<^sub>b ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)),
           template_var 0)
         )),
    ("BitVector.bdd_above_Icc",
     "BitVector.bdd_above (BitVector.atLeastAtMost ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_above_Ioo",
     "BitVector.bdd_above (BitVector.greaterThanLessThan ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_below_Icc",
     "BitVector.bdd_below (BitVector.atLeastAtMost ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_below_Ioo",
     "BitVector.bdd_below (BitVector.greaterThanLessThan ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.not_empty_eq_Ici_eq_empty", "{} ~= BitVector.atLeast ?l",
     template_negation
      (
         template_equation
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("BitVector.not_empty_eq_Iic_eq_empty", "{} ~= BitVector.atMost ?h",
     template_negation
      (
         template_equation
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("BitVector.not_Ici_eq_empty", "BitVector.atLeast ?l ~= {}",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_hole 0)
         )),
    ("BitVector.not_Iic_eq_empty", "BitVector.atMost ?h ~= {}",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_hole 0)
         )),
    ("BitVector.lexordp_simps", "BitVector.lexordp ?xs [] = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("BitVector.lexordp_eq_simps", "BitVector.lexordp_eq [] ?ys = True",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_hole 0)),
    ("BitVector.lexordp_eq_pref", "BitVector.lexordp_eq ?u (?u @ ?v)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_above_Ico",
     "BitVector.bdd_above (BitVector.atLeastLessThan ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 2),
                 template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_above_Ioc",
     "BitVector.bdd_above (BitVector.greaterThanAtMost ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 2),
                 template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_below_Ico",
     "BitVector.bdd_below (BitVector.atLeastLessThan ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 2),
                 template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bdd_below_Ioc",
     "BitVector.bdd_below (BitVector.greaterThanAtMost ?a ?b)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 2),
                 template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("BitVector.bv_rest", "[] \<preceq>\<^sub>b ?v # ?va = False",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("BitVector.bv_rest", "?v # ?va \<preceq>\<^sub>b [] = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("BitVector.Ioi_le_Ico",
     "BitVector.greaterThan ?a <= BitVector.atLeast ?a",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("BitVector.atLeastAtMost_singleton",
     "BitVector.atLeastAtMost ?a ?a = {?a}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("BitVector.lexordp_eq_simps",
     "BitVector.lexordp_eq ?xs [] = (?xs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("BitVector.lexordp_eq_simps",
     "BitVector.lexordp_eq (?x # ?xs) [] = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("BitVector.less_imp_le",
     "?x \<prec>\<^sub>b ?y ==> ?x \<preceq>\<^sub>b ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BitVector.eq_refl", "?x = ?y ==> ?x \<preceq>\<^sub>b ?y",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BitVector.strict_mono_mono",
     "BitVector.strict_mono ?f ==> BitVector.mono ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("BitVector.lexordp_simps", "BitVector.lexordp [] ?ys = (?ys ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 2)))),
    ("BitVector.atLeast_iff",
     "(?i : BitVector.atLeast ?k) = ?k \<preceq>\<^sub>b ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("BitVector.atMost_iff",
     "(?i : BitVector.atMost ?k) = ?i \<preceq>\<^sub>b ?k",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("BitVector.greaterThan_iff",
     "(?i : BitVector.greaterThan ?k) = ?k \<prec>\<^sub>b ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("BitVector.lessThan_iff",
     "(?i : BitVector.lessThan ?k) = ?i \<prec>\<^sub>b ?k",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("BitVector.leD", "?y \<preceq>\<^sub>b ?x ==> ~ ?x \<prec>\<^sub>b ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("BitVector.less_not_sym",
     "?x \<prec>\<^sub>b ?y ==> ~ ?y \<prec>\<^sub>b ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)
               )
           ))),
    ("BitVector.less_imp_neq", "?x \<prec>\<^sub>b ?y ==> ?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("BitVector.bv_length",
     "?xs \<preceq>\<^sub>b ?ys ==> length ?xs = length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("BitVector.less_imp_not_eq",
     "?x \<prec>\<^sub>b ?y ==> (?x = ?y) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("BitVector.less_imp_not_eq2",
     "?x \<prec>\<^sub>b ?y ==> (?y = ?x) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("BitVector.bdd_above_Int1",
     "BitVector.bdd_above ?A ==> BitVector.bdd_above (?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BitVector.bdd_above_Int2",
     "BitVector.bdd_above ?B ==> BitVector.bdd_above (?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BitVector.bdd_below_Int1",
     "BitVector.bdd_below ?A ==> BitVector.bdd_below (?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BitVector.bdd_below_Int2",
     "BitVector.bdd_below ?B ==> BitVector.bdd_below (?A Int ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BitVector.lexordp_into_lexordp_eq",
     "BitVector.lexordp ?xs ?ys ==> BitVector.lexordp_eq ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 1),
             template_var 0)
           ))),
    ("BitVector.le_less",
     "?x \<preceq>\<^sub>b ?y = (?x \<prec>\<^sub>b ?y | ?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BitVector.order_eq_iff",
     "(?x = ?y) = (?x \<preceq>\<^sub>b ?y & ?y \<preceq>\<^sub>b ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("BitVector.atLeastatMost_empty_iff2",
     "({} = BitVector.atLeastAtMost ?a ?b) = (~ ?a \<preceq>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("BitVector.atLeastatMost_empty_iff",
     "(BitVector.atLeastAtMost ?a ?b = {}) = (~ ?a \<preceq>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BitVector.greaterThanLessThan_empty",
     "?l \<preceq>\<^sub>b ?k ==> BitVector.greaterThanLessThan ?k ?l = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("BitVector.atLeastatMost_empty",
     "?b \<prec>\<^sub>b ?a ==> BitVector.atLeastAtMost ?a ?b = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("BitVector.less_imp_not_less",
     "?x \<prec>\<^sub>b ?y ==> (~ ?y \<prec>\<^sub>b ?x) = True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("BitVector.less_asym'",
     "[| ?a \<prec>\<^sub>b ?b; ?b \<prec>\<^sub>b ?a |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            )],
       template_predicate (template_var 0))),
    ("BitVector.greaterThanLessThan_eq",
     "BitVector.greaterThanLessThan ?a ?b =
      BitVector.greaterThan ?a Int BitVector.lessThan ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("BitVector.less_le_not_le",
     "?x \<prec>\<^sub>b ?y =
      (?x \<preceq>\<^sub>b ?y & ~ ?y \<preceq>\<^sub>b ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("BitVector.less_le",
     "?x \<prec>\<^sub>b ?y = (?x \<preceq>\<^sub>b ?y & ?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("BitVector.atLeastLessThan_empty_iff2",
     "({} = BitVector.atLeastLessThan ?a ?b) = (~ ?a \<prec>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("BitVector.greaterThanAtMost_empty_iff2",
     "({} = BitVector.greaterThanAtMost ?k ?l) = (~ ?k \<prec>\<^sub>b ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("BitVector.atLeastLessThan_empty_iff",
     "(BitVector.atLeastLessThan ?a ?b = {}) = (~ ?a \<prec>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BitVector.greaterThanAtMost_empty_iff",
     "(BitVector.greaterThanAtMost ?k ?l = {}) = (~ ?k \<prec>\<^sub>b ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BitVector.atLeastLessThan_empty",
     "?b \<preceq>\<^sub>b ?a ==> BitVector.atLeastLessThan ?a ?b = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 4),
               template_hole 1),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("BitVector.greaterThanAtMost_empty",
     "?l \<preceq>\<^sub>b ?k ==> BitVector.greaterThanAtMost ?k ?l = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 4),
               template_hole 1),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("BitVector.le_imp_less_or_eq",
     "?x \<preceq>\<^sub>b ?y ==> ?x \<prec>\<^sub>b ?y | ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BitVector.antisym_conv",
     "?y \<preceq>\<^sub>b ?x ==> ?x \<preceq>\<^sub>b ?y = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1)
              )],
         template_equation (template_var 0, template_var 1)))),
    ("BitVector.less_imp_triv",
     "?x \<prec>\<^sub>b ?y ==> (?y \<prec>\<^sub>b ?x --> ?P) = True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_var 0),
         template_hole 0))),
    ("BitVector.lexordp_append_rightI",
     "?ys ~= [] ==> BitVector.lexordp ?xs (?xs @ ?ys)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BitVector.nless_le",
     "(~ ?a \<prec>\<^sub>b ?b) = (~ ?a \<preceq>\<^sub>b ?b | ?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BitVector.antisym_conv2",
     "?x \<preceq>\<^sub>b ?y ==> (~ ?x \<prec>\<^sub>b ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0))
              )],
         template_equation (template_var 1, template_var 0)))),
    ("BitVector.atLeastAtMost_singleton'",
     "?a = ?b ==> BitVector.atLeastAtMost ?a ?b = {?a}",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("BitVector.antisym_conv1",
     "~ ?x \<prec>\<^sub>b ?y ==> ?x \<preceq>\<^sub>b ?y = (?x = ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0)
              )],
         template_equation (template_var 1, template_var 0)))),
    ("BitVector.lexordp_irreflexive",
     "ALL x. ~ x \<prec>\<^sub>b x ==> ~ BitVector.lexordp ?xs ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_hole 1),
                   template_var 0),
                 template_var 0)
               )
           ))),
    ("BitVector.ord_le_eq_trans",
     "[| ?a \<preceq>\<^sub>b ?b; ?b = ?c |] ==> ?a \<preceq>\<^sub>b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("BitVector.order_antisym",
     "[| ?x \<preceq>\<^sub>b ?y; ?y \<preceq>\<^sub>b ?x |] ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("BitVector.order_trans",
     "[| ?x \<preceq>\<^sub>b ?y; ?y \<preceq>\<^sub>b ?z |]
      ==> ?x \<preceq>\<^sub>b ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BitVector.le_less_trans",
     "[| ?x \<preceq>\<^sub>b ?y; ?y \<prec>\<^sub>b ?z |]
      ==> ?x \<prec>\<^sub>b ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BitVector.bv_leqs_antisym",
     "[| ?xs \<preceq>\<^sub>b ?ys; ?ys \<preceq>\<^sub>b ?xs |]
      ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("BitVector.bv_leqs_trans",
     "[| ?xs \<preceq>\<^sub>b ?ys; ?ys \<preceq>\<^sub>b ?zs |]
      ==> ?xs \<preceq>\<^sub>b ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BitVector.ord_less_eq_trans",
     "[| ?a \<prec>\<^sub>b ?b; ?b = ?c |] ==> ?a \<prec>\<^sub>b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("BitVector.less_le_trans",
     "[| ?x \<prec>\<^sub>b ?y; ?y \<preceq>\<^sub>b ?z |]
      ==> ?x \<prec>\<^sub>b ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("BitVector.less_trans",
     "[| ?x \<prec>\<^sub>b ?y; ?y \<prec>\<^sub>b ?z |]
      ==> ?x \<prec>\<^sub>b ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BitVector.bdd_above_mono",
     "[| BitVector.bdd_above ?B; ?A <= ?B |] ==> BitVector.bdd_above ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)
           ))),
    ("BitVector.bdd_below_mono",
     "[| BitVector.bdd_below ?B; ?A <= ?B |] ==> BitVector.bdd_below ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)
           ))),
    ("BitVector.ord_eq_le_trans",
     "[| ?a = ?b; ?b \<preceq>\<^sub>b ?c |] ==> ?a \<preceq>\<^sub>b ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BitVector.ord_eq_less_trans",
     "[| ?a = ?b; ?b \<prec>\<^sub>b ?c |] ==> ?a \<prec>\<^sub>b ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("BitVector.lexordp_antisym",
     "[| BitVector.lexordp ?xs ?ys; BitVector.lexordp ?ys ?xs |] ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0),
              template_var 1)
            )],
       template_predicate (template_hole 0))),
    ("BitVector.atLeastLessThan_eq_atLeastAtMost_diff",
     "BitVector.atLeastLessThan ?a ?b =
      BitVector.atLeastAtMost ?a ?b - {?b}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 5),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("BitVector.greaterThanAtMost_eq_atLeastAtMost_diff",
     "BitVector.greaterThanAtMost ?a ?b =
      BitVector.atLeastAtMost ?a ?b - {?a}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 5),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("BitVector.atLeastAtMost_iff",
     "(?i : BitVector.atLeastAtMost ?l ?u) =
      (?l \<preceq>\<^sub>b ?i & ?i \<preceq>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("BitVector.greaterThanLessThan_iff",
     "(?i : BitVector.greaterThanLessThan ?l ?u) =
      (?l \<prec>\<^sub>b ?i & ?i \<prec>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("BitVector.lexordp_append_leftI",
     "BitVector.lexordp ?us ?vs ==>
      BitVector.lexordp (?xs @ ?us) (?xs @ ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BitVector.le_neq_trans",
     "[| ?a \<preceq>\<^sub>b ?b; ?a ~= ?b |] ==> ?a \<prec>\<^sub>b ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BitVector.neq_le_trans",
     "[| ?a ~= ?b; ?a \<preceq>\<^sub>b ?b |] ==> ?a \<prec>\<^sub>b ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BitVector.bv_Cons",
     "?x # ?xs \<preceq>\<^sub>b ?y # ?ys =
      ((?x --> ?y) & ?xs \<preceq>\<^sub>b ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("BitVector.atLeastLessThan_iff",
     "(?i : BitVector.atLeastLessThan ?l ?u) =
      (?l \<preceq>\<^sub>b ?i & ?i \<prec>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("BitVector.greaterThanAtMost_iff",
     "(?i : BitVector.greaterThanAtMost ?l ?u) =
      (?l \<prec>\<^sub>b ?i & ?i \<preceq>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("BitVector.bdd_aboveI",
     "(!!x. x : ?A ==> x \<preceq>\<^sub>b ?M) ==> BitVector.bdd_above ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1)
           ))),
    ("BitVector.bdd_belowI",
     "(!!x. x : ?A ==> ?m \<preceq>\<^sub>b x) ==> BitVector.bdd_below ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1)
           ))),
    ("BitVector.less_asym",
     "[| ?x \<prec>\<^sub>b ?y; ~ ?P ==> ?y \<prec>\<^sub>b ?x |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_negation (template_predicate (template_var 0))],
          template_predicate
           (
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2)
              ))],
       template_predicate (template_var 0))),
    ("BitVector.antimonoD",
     "[| BitVector.antimono ?f; ?x \<preceq>\<^sub>b ?y |]
      ==> ?f ?y <= ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app (template_var 2, template_var 1)))),
    ("BitVector.monoD",
     "[| BitVector.mono ?f; ?x \<preceq>\<^sub>b ?y |] ==> ?f ?x <= ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("BitVector.strict_monoD",
     "[| BitVector.strict_mono ?f; ?x \<prec>\<^sub>b ?y |]
      ==> ?f ?x < ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("BitVector.Iio_Int_singleton",
     "BitVector.lessThan ?k Int {?x} =
      (if ?x \<prec>\<^sub>b ?k then {?x} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 1))),
    ("BitVector.atLeastAtMost_singleton_iff",
     "(BitVector.atLeastAtMost ?a ?b = {?c}) = (?a = ?b & ?b = ?c)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BitVector.Icc_subset_Ici_iff",
     "(BitVector.atLeastAtMost ?l ?h <= BitVector.atLeast ?l') =
      (~ ?l \<preceq>\<^sub>b ?h | ?l' \<preceq>\<^sub>b ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 2)))),
    ("BitVector.Icc_subset_Iic_iff",
     "(BitVector.atLeastAtMost ?l ?h <= BitVector.atMost ?h') =
      (~ ?l \<preceq>\<^sub>b ?h | ?h \<preceq>\<^sub>b ?h')",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("BitVector.lexordp_append_left_rightI",
     "?x \<prec>\<^sub>b ?y ==>
      BitVector.lexordp (?us @ ?x # ?xs) (?us @ ?y # ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("BitVector.bv_leqs_AppendI",
     "[| ?xs \<preceq>\<^sub>b ?ys; ?xs' \<preceq>\<^sub>b ?ys' |]
      ==> ?xs @ ?xs' \<preceq>\<^sub>b ?ys @ ?ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("BitVector.bdd_belowI2",
     "(!!x. x : ?A ==> ?m \<preceq>\<^sub>b ?f x) ==>
      BitVector.bdd_below (?f ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("BitVector.bdd_aboveI2",
     "(!!x. x : ?A ==> ?f x \<preceq>\<^sub>b ?M) ==>
      BitVector.bdd_above (?f ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("BitVector.lift_Suc_mono_less_iff",
     "(!!n. ?f n \<prec>\<^sub>b ?f (Suc n)) ==>
      ?f ?n \<prec>\<^sub>b ?f ?m = (?n < ?m)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("BitVector.Least1I",
     "EX! x. ?P x & (ALL y. ?P y --> x \<preceq>\<^sub>b y) ==>
      ?P (BitVector.Least ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 0))
           ))),
    ("BitVector.antimonoI",
     "(!!x y. x \<preceq>\<^sub>b y ==> ?f y <= ?f x) ==>
      BitVector.antimono ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0)
           ))),
    ("BitVector.monoI",
     "(!!x y. x \<preceq>\<^sub>b y ==> ?f x <= ?f y) ==>
      BitVector.mono ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0)
           ))),
    ("BitVector.strict_monoI",
     "(!!x y. x \<prec>\<^sub>b y ==> ?f x < ?f y) ==>
      BitVector.strict_mono ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0)
           ))),
    ("BitVector.acyclicI_order",
     "(!!a b. (a, b) : ?r ==> ?f b \<prec>\<^sub>b ?f a) ==> acyclic ?r",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BitVector.Greatest_equality",
     "[| ?P ?x; !!y. ?P y ==> y \<preceq>\<^sub>b ?x |]
      ==> BitVector.Greatest ?P = ?x",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 2), template_var 1),
         template_var 0))),
    ("BitVector.Least_equality",
     "[| ?P ?x; !!y. ?P y ==> ?x \<preceq>\<^sub>b y |]
      ==> BitVector.Least ?P = ?x",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 2), template_var 1),
         template_var 0))),
    ("BitVector.lift_Suc_mono_le",
     "[| !!n. ?f n \<preceq>\<^sub>b ?f (Suc n); ?n <= ?n' |]
      ==> ?f ?n \<preceq>\<^sub>b ?f ?n'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 2, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("BitVector.lift_Suc_antimono_le",
     "[| !!n. ?f (Suc n) \<preceq>\<^sub>b ?f n; ?n <= ?n' |]
      ==> ?f ?n' \<preceq>\<^sub>b ?f ?n",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 2, template_var 0)),
             template_app (template_var 2, template_var 1))
           ))),
    ("BitVector.lift_Suc_mono_less",
     "[| !!n. ?f n \<prec>\<^sub>b ?f (Suc n); ?n < ?n' |]
      ==> ?f ?n \<prec>\<^sub>b ?f ?n'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 2, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("BitVector.antimonoE",
     "[| BitVector.antimono ?f; ?x \<preceq>\<^sub>b ?y;
         ?f ?y <= ?f ?x ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_inequation
            (less_equals, template_app (template_var 3, template_var 1),
             template_app (template_var 3, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("BitVector.monoE",
     "[| BitVector.mono ?f; ?x \<preceq>\<^sub>b ?y;
         ?f ?x <= ?f ?y ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_inequation
            (less_equals, template_app (template_var 3, template_var 2),
             template_app (template_var 3, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("BitVector.lexordp_simps",
     "BitVector.lexordp (?x # ?xs) (?y # ?ys) =
      (?x \<prec>\<^sub>b ?y |
       ~ ?y \<prec>\<^sub>b ?x & BitVector.lexordp ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_var 0))))),
    ("BitVector.lexordp_eq_simps",
     "BitVector.lexordp_eq (?x # ?xs) (?y # ?ys) =
      (?x \<prec>\<^sub>b ?y |
       ~ ?y \<prec>\<^sub>b ?x & BitVector.lexordp_eq ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_var 0))))),
    ("BitVector.atLeastatMost_subset_iff",
     "(BitVector.atLeastAtMost ?a ?b <= BitVector.atLeastAtMost ?c ?d) =
      (~ ?a \<preceq>\<^sub>b ?b |
       ?c \<preceq>\<^sub>b ?a & ?b \<preceq>\<^sub>b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("BitVector.atLeastAtMost_subseteq_atLeastLessThan_iff",
     "(BitVector.atLeastAtMost ?a ?b <= BitVector.atLeastLessThan ?c ?d) =
      (?a \<preceq>\<^sub>b ?b -->
       ?c \<preceq>\<^sub>b ?a & ?b \<prec>\<^sub>b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 4),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("BitVector.lexordp_append_leftD",
     "[| BitVector.lexordp (?xs @ ?us) (?xs @ ?vs);
         ALL a. ~ a \<prec>\<^sub>b a |]
      ==> BitVector.lexordp ?us ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_var 0)
           ))),
    ("BitVector.finite_has_minimal",
     "[| finite ?A; ?A ~= {} |]
      ==> EX m:?A. ALL b:?A. b \<preceq>\<^sub>b m --> m = b",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("BitVector.finite_has_maximal",
     "[| finite ?A; ?A ~= {} |]
      ==> EX m:?A. ALL b:?A. m \<preceq>\<^sub>b b --> m = b",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("BitVector.bv_leqs_AppendD",
     "[| ?xs @ ?xs' \<preceq>\<^sub>b ?ys @ ?ys'; length ?xs = length ?ys |]
      ==> ?xs \<preceq>\<^sub>b ?ys & ?xs' \<preceq>\<^sub>b ?ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("BitVector.bv_leqs_eq",
     "?xs \<preceq>\<^sub>b ?ys =
      ((ALL i<length ?xs. ?xs ! i --> ?ys ! i) & length ?xs = length ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("BitVector.Least1_le",
     "[| EX! x. ?P x & (ALL y. ?P y --> x \<preceq>\<^sub>b y); ?P ?z |]
      ==> BitVector.Least ?P \<preceq>\<^sub>b ?z",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 1),
                 template_var 1)),
             template_var 0)
           ))),
    ("BitVector.finite_has_minimal2",
     "[| finite ?A; ?a : ?A |]
      ==> EX m:?A.
             m \<preceq>\<^sub>b ?a &
             (ALL b:?A. b \<preceq>\<^sub>b m --> m = b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("BitVector.finite_has_maximal2",
     "[| finite ?A; ?a : ?A |]
      ==> EX m:?A.
             ?a \<preceq>\<^sub>b m &
             (ALL b:?A. m \<preceq>\<^sub>b b --> m = b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("BitVector.Icc_eq_Icc",
     "(BitVector.atLeastAtMost ?l ?h = BitVector.atLeastAtMost ?l' ?h') =
      (?l = ?l' & ?h = ?h' |
       ~ ?l \<preceq>\<^sub>b ?h & ~ ?l' \<preceq>\<^sub>b ?h')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 2))),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0))))
           ))),
    ("BitVector.atLeastatMost_psubset_iff",
     "(BitVector.atLeastAtMost ?a ?b < BitVector.atLeastAtMost ?c ?d) =
      ((~ ?a \<preceq>\<^sub>b ?b |
        ?c \<preceq>\<^sub>b ?a &
        ?b \<preceq>\<^sub>b ?d &
        (?c \<prec>\<^sub>b ?a | ?b \<prec>\<^sub>b ?d)) &
       ?c \<preceq>\<^sub>b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("BitVector.GreatestI2_order",
     "[| ?P ?x; !!y. ?P y ==> y \<preceq>\<^sub>b ?x;
         !!x. [| ?P x; ALL y. ?P y --> y \<preceq>\<^sub>b x |] ==> ?Q x |]
      ==> ?Q (BitVector.Greatest ?P)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 2))
           ))),
    ("BitVector.LeastI2_order",
     "[| ?P ?x; !!y. ?P y ==> ?x \<preceq>\<^sub>b y;
         !!x. [| ?P x; ALL y. ?P y --> x \<preceq>\<^sub>b y |] ==> ?Q x |]
      ==> ?Q (BitVector.Least ?P)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 2))
           )))]
