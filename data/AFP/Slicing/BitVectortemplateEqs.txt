   [("BitVector.lexordp_simps", "BitVector.lexordp ?xs [] = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("BitVector.lexordp_eq_simps", "BitVector.lexordp_eq [] ?ys = True",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_hole 0)),
    ("BitVector.bv_rest", "[] \<preceq>\<^sub>b ?v # ?va = False",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("BitVector.bv_rest", "?v # ?va \<preceq>\<^sub>b [] = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("BitVector.atLeastAtMost_singleton",
     "BitVector.atLeastAtMost ?a ?a = {?a}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("BitVector.lexordp_eq_simps",
     "BitVector.lexordp_eq ?xs [] = (?xs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("BitVector.lexordp_eq_simps",
     "BitVector.lexordp_eq (?x # ?xs) [] = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("BitVector.lexordp_simps", "BitVector.lexordp [] ?ys = (?ys ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 2)))),
    ("BitVector.atLeast_iff",
     "(?i : BitVector.atLeast ?k) = ?k \<preceq>\<^sub>b ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("BitVector.atMost_iff",
     "(?i : BitVector.atMost ?k) = ?i \<preceq>\<^sub>b ?k",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("BitVector.greaterThan_iff",
     "(?i : BitVector.greaterThan ?k) = ?k \<prec>\<^sub>b ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("BitVector.lessThan_iff",
     "(?i : BitVector.lessThan ?k) = ?i \<prec>\<^sub>b ?k",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("BitVector.le_less",
     "?x \<preceq>\<^sub>b ?y = (?x \<prec>\<^sub>b ?y | ?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("BitVector.order_eq_iff",
     "(?x = ?y) = (?x \<preceq>\<^sub>b ?y & ?y \<preceq>\<^sub>b ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("BitVector.atLeastatMost_empty_iff2",
     "({} = BitVector.atLeastAtMost ?a ?b) = (~ ?a \<preceq>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("BitVector.atLeastatMost_empty_iff",
     "(BitVector.atLeastAtMost ?a ?b = {}) = (~ ?a \<preceq>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BitVector.greaterThanLessThan_eq",
     "BitVector.greaterThanLessThan ?a ?b =
      BitVector.greaterThan ?a Int BitVector.lessThan ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("BitVector.less_le_not_le",
     "?x \<prec>\<^sub>b ?y =
      (?x \<preceq>\<^sub>b ?y & ~ ?y \<preceq>\<^sub>b ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("BitVector.less_le",
     "?x \<prec>\<^sub>b ?y = (?x \<preceq>\<^sub>b ?y & ?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("BitVector.atLeastLessThan_empty_iff2",
     "({} = BitVector.atLeastLessThan ?a ?b) = (~ ?a \<prec>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("BitVector.greaterThanAtMost_empty_iff2",
     "({} = BitVector.greaterThanAtMost ?k ?l) = (~ ?k \<prec>\<^sub>b ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("BitVector.atLeastLessThan_empty_iff",
     "(BitVector.atLeastLessThan ?a ?b = {}) = (~ ?a \<prec>\<^sub>b ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BitVector.greaterThanAtMost_empty_iff",
     "(BitVector.greaterThanAtMost ?k ?l = {}) = (~ ?k \<prec>\<^sub>b ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BitVector.nless_le",
     "(~ ?a \<prec>\<^sub>b ?b) = (~ ?a \<preceq>\<^sub>b ?b | ?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("BitVector.atLeastLessThan_eq_atLeastAtMost_diff",
     "BitVector.atLeastLessThan ?a ?b =
      BitVector.atLeastAtMost ?a ?b - {?b}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 5),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("BitVector.greaterThanAtMost_eq_atLeastAtMost_diff",
     "BitVector.greaterThanAtMost ?a ?b =
      BitVector.atLeastAtMost ?a ?b - {?a}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 5),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("BitVector.atLeastAtMost_iff",
     "(?i : BitVector.atLeastAtMost ?l ?u) =
      (?l \<preceq>\<^sub>b ?i & ?i \<preceq>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("BitVector.greaterThanLessThan_iff",
     "(?i : BitVector.greaterThanLessThan ?l ?u) =
      (?l \<prec>\<^sub>b ?i & ?i \<prec>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("BitVector.bv_Cons",
     "?x # ?xs \<preceq>\<^sub>b ?y # ?ys =
      ((?x --> ?y) & ?xs \<preceq>\<^sub>b ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("BitVector.atLeastLessThan_iff",
     "(?i : BitVector.atLeastLessThan ?l ?u) =
      (?l \<preceq>\<^sub>b ?i & ?i \<prec>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("BitVector.greaterThanAtMost_iff",
     "(?i : BitVector.greaterThanAtMost ?l ?u) =
      (?l \<prec>\<^sub>b ?i & ?i \<preceq>\<^sub>b ?u)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("BitVector.Iio_Int_singleton",
     "BitVector.lessThan ?k Int {?x} =
      (if ?x \<prec>\<^sub>b ?k then {?x} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 1))),
    ("BitVector.atLeastAtMost_singleton_iff",
     "(BitVector.atLeastAtMost ?a ?b = {?c}) = (?a = ?b & ?b = ?c)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_dunno)),
    ("BitVector.Icc_subset_Ici_iff",
     "(BitVector.atLeastAtMost ?l ?h <= BitVector.atLeast ?l') =
      (~ ?l \<preceq>\<^sub>b ?h | ?l' \<preceq>\<^sub>b ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 2)))),
    ("BitVector.Icc_subset_Iic_iff",
     "(BitVector.atLeastAtMost ?l ?h <= BitVector.atMost ?h') =
      (~ ?l \<preceq>\<^sub>b ?h | ?h \<preceq>\<^sub>b ?h')",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("BitVector.lexordp_simps",
     "BitVector.lexordp (?x # ?xs) (?y # ?ys) =
      (?x \<prec>\<^sub>b ?y |
       ~ ?y \<prec>\<^sub>b ?x & BitVector.lexordp ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_var 0))))),
    ("BitVector.lexordp_eq_simps",
     "BitVector.lexordp_eq (?x # ?xs) (?y # ?ys) =
      (?x \<prec>\<^sub>b ?y |
       ~ ?y \<prec>\<^sub>b ?x & BitVector.lexordp_eq ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_var 0))))),
    ("BitVector.atLeastatMost_subset_iff",
     "(BitVector.atLeastAtMost ?a ?b <= BitVector.atLeastAtMost ?c ?d) =
      (~ ?a \<preceq>\<^sub>b ?b |
       ?c \<preceq>\<^sub>b ?a & ?b \<preceq>\<^sub>b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("BitVector.atLeastAtMost_subseteq_atLeastLessThan_iff",
     "(BitVector.atLeastAtMost ?a ?b <= BitVector.atLeastLessThan ?c ?d) =
      (?a \<preceq>\<^sub>b ?b -->
       ?c \<preceq>\<^sub>b ?a & ?b \<prec>\<^sub>b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 4),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("BitVector.bv_leqs_eq",
     "?xs \<preceq>\<^sub>b ?ys =
      ((ALL i<length ?xs. ?xs ! i --> ?ys ! i) & length ?xs = length ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("BitVector.Icc_eq_Icc",
     "(BitVector.atLeastAtMost ?l ?h = BitVector.atLeastAtMost ?l' ?h') =
      (?l = ?l' & ?h = ?h' |
       ~ ?l \<preceq>\<^sub>b ?h & ~ ?l' \<preceq>\<^sub>b ?h')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0)),
       template_dunno)),
    ("BitVector.atLeastatMost_psubset_iff",
     "(BitVector.atLeastAtMost ?a ?b < BitVector.atLeastAtMost ?c ?d) =
      ((~ ?a \<preceq>\<^sub>b ?b |
        ?c \<preceq>\<^sub>b ?a &
        ?b \<preceq>\<^sub>b ?d &
        (?c \<prec>\<^sub>b ?a | ?b \<prec>\<^sub>b ?d)) &
       ?c \<preceq>\<^sub>b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0))))]
