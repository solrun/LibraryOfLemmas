   [("WellFormed.While_CFGExit_wf_aux",
     "CFGExit_wf sourcenode targetnode kind (valid_edge ?prog) (_Entry_)
       (Defs ?prog) (Uses ?prog) id (_Exit_)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 10, t_empty), t_empty),
                       t_empty),
                     template_app (template_hole 5, template_var 0)),
                   template_hole 4),
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("WellFormed.WCFG_edge_no_Defs_equal",
     "[| ?prog \<turnstile> ?n -?et\<rightarrow> ?n'; ?V ~: Defs ?prog ?n |]
      ==> transfer ?et ?s ?V = ?s ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("WellFormed.rhs_interpret_eq",
     "[| interpret ?b ?s = Some ?v'; ALL V:rhs_aux ?b. ?s V = ?s' V |]
      ==> interpret ?b ?s' = Some ?v'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 0),
         template_app (template_hole 2, template_var 1)))),
    ("WellFormed.WCFG_edge_Uses_pred_eq",
     "[| ?prog \<turnstile> ?n -?et\<rightarrow> ?n';
         ALL V:Uses ?prog ?n. ?s V = ?s' V; pred ?et ?s |]
      ==> pred ?et ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 0)
           ))),
    ("WellFormed.WCFG_edge_transfer_uses_only_Uses",
     "[| ?prog \<turnstile> ?n -?et\<rightarrow> ?n';
         ALL V:Uses ?prog ?n. ?s V = ?s' V |]
      ==> ALL V:Defs ?prog ?n. transfer ?et ?s V = transfer ?et ?s' V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4)),
             t_empty)
           )))]
