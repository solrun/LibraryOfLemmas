   [("Semantics.step_red",
     "?prog \<turnstile> \<langle>?c,?s,?l\<rangle> \<leadsto>
      \<langle>?c',?s',?l'\<rangle> ==>
      \<langle>?c,?s\<rangle> \<rightarrow> \<langle>?c',?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Semantics.step_label_less",
     "?prog \<turnstile> \<langle>?c,?s,?l\<rangle> \<leadsto>
      \<langle>?c',?s',?l'\<rangle> ==>
      ?l < #:?prog & ?l' < #:?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 6))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 6)))
           ))),
    ("Semantics.red_step",
     "[| labels ?prog ?l ?c;
         \<langle>?c,?s\<rangle> \<rightarrow> \<langle>?c',?s'\<rangle> |]
      ==> EX l'.
             ?prog \<turnstile> \<langle>?c,?s,?l\<rangle> \<leadsto>
             \<langle>?c',?s',l'\<rangle> &
             labels ?prog l' ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Semantics.steps_reds",
     "?prog \<turnstile> \<langle>?c,?s,?l\<rangle> \<leadsto>*
      \<langle>?c',?s',?l'\<rangle> ==>
      \<langle>?c,?s\<rangle> \<rightarrow>* \<langle>?c',?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, t_empty)),
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Semantics.reds_steps_bisimulation",
     "labels ?prog ?l ?c ==>
      \<langle>?c,?s\<rangle> \<rightarrow>* \<langle>?c',?s'\<rangle> =
      (EX l'.
          ?prog \<turnstile> \<langle>?c,?s,?l\<rangle> \<leadsto>*
          \<langle>?c',?s',l'\<rangle> &
          labels ?prog l' ?c')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 5),
                template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 12, template_hole 11),
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0)),
         template_app (template_hole 9, t_empty)))),
    ("Semantics.reds_steps",
     "[| \<langle>?c,?s\<rangle> \<rightarrow>* \<langle>?c',?s'\<rangle>;
         labels ?prog ?l ?c |]
      ==> EX l'.
             ?prog \<turnstile> \<langle>?c,?s,?l\<rangle> \<leadsto>*
             \<langle>?c',?s',l'\<rangle> &
             labels ?prog l' ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_hole 12),
                template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0),
              template_var 5)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Semantics.converse_rtranclp_induct3",
     "[| ?r^** (?ax, ?ay, ?az) (?bx, ?by, ?bz); ?P ?bx ?by ?bz;
         !!a aa b ab ac ba.
            [| ?r (a, aa, b) (ab, ac, ba);
               ?r^** (ab, ac, ba) (?bx, ?by, ?bz); ?P ab ac ba |]
            ==> ?P a aa b |]
      ==> ?P ?ax ?ay ?az",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 7),
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4))),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 6),
               template_var 5),
             template_var 4)
           ))),
    ("Semantics.red_induct",
     "[| \<langle>?x1a,?x1b\<rangle> \<rightarrow>
         \<langle>?x2a,?x2b\<rangle>;
         !!V e s. ?P (V:=e) s Skip (s(V := interpret e s));
         !!c\<^sub>1 s c\<^sub>1' s' c\<^sub>2.
            [| \<langle>c\<^sub>1,s\<rangle> \<rightarrow>
               \<langle>c\<^sub>1',s'\<rangle>;
               ?P c\<^sub>1 s c\<^sub>1' s' |]
            ==> ?P (c\<^sub>1;; c\<^sub>2) s (c\<^sub>1';; c\<^sub>2) s';
         !!c\<^sub>2 s. ?P (Skip;; c\<^sub>2) s c\<^sub>2 s;
         !!b s c\<^sub>1 c\<^sub>2.
            interpret b s = Some true ==>
            ?P (if (b) c\<^sub>1 else c\<^sub>2) s c\<^sub>1 s;
         !!b s c\<^sub>1 c\<^sub>2.
            interpret b s = Some false ==>
            ?P (if (b) c\<^sub>1 else c\<^sub>2) s c\<^sub>2 s;
         !!b s c.
            interpret b s = Some true ==>
            ?P (while (b) c) s (c;; while (b) c) s;
         !!b s c.
            interpret b s = Some false ==> ?P (while (b) c) s Skip s |]
      ==> ?P ?x1a ?x1b ?x2a ?x2b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           )))]
