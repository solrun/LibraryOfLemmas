   [("WCFG.WCFG_intros",
     "?prog \<turnstile> (_Entry_) -(%s.
  False)\<^sub>\<surd>\<rightarrow> (_Exit_)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3),
             template_app (template_hole 2, t_empty)),
           template_hole 0)
         )),
    ("WCFG.WCFG_intros",
     "?prog \<turnstile> (_Entry_) -(%s.
  True)\<^sub>\<surd>\<rightarrow> (_ 0 _)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4),
             template_app (template_hole 3, t_empty)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("WCFG.WCFG_Exit_no_sourcenode",
     "?prog \<turnstile> (_Exit_) -?et\<rightarrow> ?n' ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("WCFG.WCFG_Entry_no_targetnode",
     "?prog \<turnstile> ?n -?et\<rightarrow> (_Entry_) ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate (template_hole 0))),
    ("WCFG.WCFG_intros",
     "?V:=?e \<turnstile> (_ 1 _) -\<Up>id\<rightarrow> (_Exit_)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app (template_hole 4, template_hole 3)),
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)
         )),
    ("WCFG.WCFG_intros",
     "while (?b) ?c' \<turnstile> (_ 1 _) -\<Up>id\<rightarrow> (_Exit_)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app (template_hole 4, template_hole 3)),
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)
         )),
    ("WCFG.Entry_label_incr",
     "(_Entry_) = ?n \<oplus> ?i ==> ?n = (_Entry_)",
     template_implication
      ([template_equation
         (template_hole 1,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 1, template_hole 1))),
    ("WCFG.Exit_label_incr", "(_Exit_) = ?n \<oplus> ?i ==> ?n = (_Exit_)",
     template_implication
      ([template_equation
         (template_hole 1,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 1, template_hole 1))),
    ("WCFG.label_incr_Entry",
     "?n \<oplus> ?i = (_Entry_) ==> ?n = (_Entry_)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("WCFG.label_incr_Exit", "?n \<oplus> ?i = (_Exit_) ==> ?n = (_Exit_)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("WCFG.label_incr_ge", "(_ ?l _) = ?n \<oplus> ?i ==> ?i <= ?l",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("WCFG.WCFG_targetlabel_less_num_nodes",
     "?prog \<turnstile> ?n -?et\<rightarrow> (_ ?l _) ==> ?l < #:?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 3)))),
    ("WCFG.WCFG_sourcelabel_less_num_nodes",
     "?prog \<turnstile> (_ ?l _) -?et\<rightarrow> ?n' ==> ?l < #:?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_var 2,
         template_app (template_hole 0, template_var 3)))),
    ("WCFG.label_incr_inj", "?n \<oplus> ?c = ?n' \<oplus> ?c ==> ?n = ?n'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("WCFG.label_incr_start_Node_smaller",
     "(_ ?l _) = ?n \<oplus> ?i ==> ?n = (_ ?l - ?i _)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("WCFG.label_incr_0",
     "[| (_ 0 _) = ?n \<oplus> ?i; 0 < ?i |] ==> False",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_hole 3),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate (template_hole 0))),
    ("WCFG.label_incr_0_rev",
     "[| ?n \<oplus> ?i = (_ 0 _); 0 < ?i |] ==> False",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_hole 2)),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate (template_hole 0))),
    ("WCFG.WCFG_intros",
     "?V:=?e \<turnstile> (_ 0 _) -\<Up>%s. s
     (?V := interpret ?e s)\<rightarrow> (_ 1 _)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)),
               template_app (template_hole 5, template_hole 4)),
             template_app (template_hole 3, t_empty)),
           template_app (template_hole 5, template_hole 0))
         )),
    ("WCFG.label_incr_simp",
     "?n \<oplus> ?i = ?m \<oplus> ?i + ?j ==> ?n = ?m \<oplus> ?j",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)))],
       template_equation
        (template_var 3,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("WCFG.label_incr_simp_rev",
     "?m \<oplus> ?j + ?i = ?n \<oplus> ?i ==> ?m \<oplus> ?j = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 0))),
    ("WCFG.WCFG_intros",
     "while (?b) ?c' \<turnstile> (_ 0 _) -(%s.
         interpret ?b s = Some false)\<^sub>\<surd>\<rightarrow> (_ 1 _)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0)),
               template_app (template_hole 8, template_hole 7)),
             template_app (template_hole 6, t_empty)),
           template_app (template_hole 8, template_hole 0))
         )),
    ("WCFG.WCFG_edge_det",
     "[| ?prog \<turnstile> ?n -?et\<rightarrow> ?n';
         ?prog \<turnstile> ?n -?et'\<rightarrow> ?n' |]
      ==> ?et = ?et'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("WCFG.WCFG_intros",
     "if (?b) ?c\<^sub>1
      else ?c\<^sub>2 \<turnstile> (_ 0 _) -(%s.
          interpret ?b s =
          Some true)\<^sub>\<surd>\<rightarrow> (_ 0 _) \<oplus> 1",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app (template_hole 10, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 9, template_hole 8)),
             template_app (template_hole 7, t_empty)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 9, template_hole 8)),
             template_hole 0))
         )),
    ("WCFG.WCFG_intros",
     "[| ?c\<^sub>1 \<turnstile> ?n -?et\<rightarrow> ?n';
         ?n' ~= (_Exit_) |]
      ==> ?c\<^sub>1;; ?c\<^sub>2 \<turnstile> ?n -?et\<rightarrow> ?n'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WCFG.WCFG_intros",
     "while (?b) ?c' \<turnstile> (_ 0 _) -(%s.
         interpret ?b s =
         Some true)\<^sub>\<surd>\<rightarrow> (_ 0 _) \<oplus> 2",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_var 0)),
               template_app (template_hole 11, template_hole 10)),
             template_app (template_hole 9, t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 11, template_hole 10)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))
         )),
    ("WCFG.less_num_nodes_edge_Exit",
     "(!!l et.
          [| l < #:?prog;
             ?prog \<turnstile> (_ l _) -et\<rightarrow> (_Exit_) |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("WCFG.WCFG_intros",
     "if (?b) ?c\<^sub>1
      else ?c\<^sub>2 \<turnstile> (_ 0 _) -(%s.
          interpret ?b s =
          Some
           false)\<^sub>\<surd>\<rightarrow> (_ 0 _) \<oplus> #:?c\<^sub>1 +
                        1",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_app (template_hole 12, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app (template_hole 11, template_hole 10)),
             template_app (template_hole 9, t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 11, template_hole 10)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_hole 0)))
         )),
    ("WCFG.less_num_nodes_edge",
     "?l < #:?prog ==>
      EX n et.
         ?prog \<turnstile> n -et\<rightarrow> (_ ?l _) |
         ?prog \<turnstile> (_ ?l _) -et\<rightarrow> n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("WCFG.WCFG_intros",
     "[| ?c\<^sub>1 \<turnstile> ?n -?et\<rightarrow> (_Exit_);
         ?n ~= (_Entry_) |]
      ==> ?c\<^sub>1;;
          ?c\<^sub>2 \<turnstile> ?n -?et\<rightarrow> (_ 0 _) \<oplus> #:?c\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1),
              template_hole 8)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 0)),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)),
               template_app (template_hole 0, template_var 3)))
           ))),
    ("WCFG.WCFG_intros",
     "[| ?c' \<turnstile> ?n -?et\<rightarrow> (_Exit_); ?n ~= (_Entry_) |]
      ==> while (?b) ?c' \<turnstile> ?n \<oplus> 2 -?et\<rightarrow> (_ 0 _)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2),
                template_var 1),
              template_hole 10)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_var 1),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("WCFG.WCFG_intros",
     "[| ?c\<^sub>1 \<turnstile> ?n -?et\<rightarrow> ?n';
         ?n ~= (_Entry_) |]
      ==> if (?b) ?c\<^sub>1
          else ?c\<^sub>2 \<turnstile> ?n \<oplus> 1 -?et\<rightarrow> ?n' \<oplus> 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 4, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 5),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_hole 0)),
               template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("WCFG.WCFG_intros",
     "[| ?c\<^sub>2 \<turnstile> ?n -?et\<rightarrow> ?n';
         ?n ~= (_Entry_) |]
      ==> ?c\<^sub>1;;
          ?c\<^sub>2 \<turnstile> ?n \<oplus> #:?c\<^sub>1 -?et\<rightarrow> ?n' \<oplus> #:?c\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_var 0))),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("WCFG.WCFG_EntryD",
     "?prog \<turnstile> (_Entry_) -?et\<rightarrow> ?n' ==>
      ?n' = (_Exit_) & ?et = (%s. False)\<^sub>\<surd> |
      ?n' = (_ 0 _) & ?et = (%s. True)\<^sub>\<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_hole 10),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_hole 6)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 4, t_empty)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 4, t_empty))))
           ))),
    ("WCFG.WCFG_intros",
     "[| ?c\<^sub>2 \<turnstile> ?n -?et\<rightarrow> ?n';
         ?n ~= (_Entry_) |]
      ==> if (?b) ?c\<^sub>1
          else ?c\<^sub>2 \<turnstile> ?n \<oplus> #:?c\<^sub>1 +
             1 -?et\<rightarrow> ?n' \<oplus> #:?c\<^sub>1 + 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 4, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 0),
                     template_var 5)),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0)),
                     template_hole 0))),
               template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)))
           ))),
    ("WCFG.WCFG_intros",
     "[| ?c' \<turnstile> ?n -?et\<rightarrow> ?n'; ?n ~= (_Entry_);
         ?n' ~= (_Exit_) |]
      ==> while (?b) ?c' \<turnstile> ?n \<oplus> 2 -?et\<rightarrow> ?n' \<oplus> 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 6)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))),
               template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("WCFG.WCFG_deterministic",
     "[| ?prog \<turnstile> ?n\<^sub>1 -?et\<^sub>1\<rightarrow> ?n\<^sub>1';
         ?prog \<turnstile> ?n\<^sub>2 -?et\<^sub>2\<rightarrow> ?n\<^sub>2';
         ?n\<^sub>1 = ?n\<^sub>2; ?n\<^sub>1' ~= ?n\<^sub>2' |]
      ==> EX Q Q'.
             ?et\<^sub>1 = (Q)\<^sub>\<surd> &
             ?et\<^sub>2 = (Q')\<^sub>\<surd> &
             (ALL s. (Q s --> ~ Q' s) & (Q' s --> ~ Q s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("WCFG.WCFG_induct",
     "[| ?x1a \<turnstile> ?x2a -?x3a\<rightarrow> ?x4a;
         !!prog. ?P prog (_Entry_) (%s. False)\<^sub>\<surd> (_Exit_);
         !!prog. ?P prog (_Entry_) (%s. True)\<^sub>\<surd> (_ 0 _);
         ?P Skip (_ 0 _) \<Up>id (_Exit_);
         !!V e. ?P (V:=e) (_ 0 _) \<Up>%s. s(V := interpret e s) (_ 1 _);
         !!V e. ?P (V:=e) (_ 1 _) \<Up>id (_Exit_);
         !!c\<^sub>1 n et n' c\<^sub>2.
            [| c\<^sub>1 \<turnstile> n -et\<rightarrow> n';
               ?P c\<^sub>1 n et n'; n' ~= (_Exit_) |]
            ==> ?P (c\<^sub>1;; c\<^sub>2) n et n';
         !!c\<^sub>1 n et c\<^sub>2.
            [| c\<^sub>1 \<turnstile> n -et\<rightarrow> (_Exit_);
               ?P c\<^sub>1 n et (_Exit_); n ~= (_Entry_) |]
            ==> ?P (c\<^sub>1;; c\<^sub>2) n et
                 ((_ 0 _) \<oplus> #:c\<^sub>1);
         !!c\<^sub>2 n et n' c\<^sub>1.
            [| c\<^sub>2 \<turnstile> n -et\<rightarrow> n';
               ?P c\<^sub>2 n et n'; n ~= (_Entry_) |]
            ==> ?P (c\<^sub>1;; c\<^sub>2) (n \<oplus> #:c\<^sub>1) et
                 (n' \<oplus> #:c\<^sub>1);
         !!b c\<^sub>1 c\<^sub>2.
            ?P (if (b) c\<^sub>1 else c\<^sub>2) (_ 0 _)
             (%s. interpret b s = Some true)\<^sub>\<surd>
             ((_ 0 _) \<oplus> 1);
         !!b c\<^sub>1 c\<^sub>2.
            ?P (if (b) c\<^sub>1 else c\<^sub>2) (_ 0 _)
             (%s. interpret b s = Some false)\<^sub>\<surd>
             ((_ 0 _) \<oplus> #:c\<^sub>1 + 1);
         !!c\<^sub>1 n et n' b c\<^sub>2.
            [| c\<^sub>1 \<turnstile> n -et\<rightarrow> n';
               ?P c\<^sub>1 n et n'; n ~= (_Entry_) |]
            ==> ?P (if (b) c\<^sub>1 else c\<^sub>2) (n \<oplus> 1) et
                 (n' \<oplus> 1);
         !!c\<^sub>2 n et n' b c\<^sub>1.
            [| c\<^sub>2 \<turnstile> n -et\<rightarrow> n';
               ?P c\<^sub>2 n et n'; n ~= (_Entry_) |]
            ==> ?P (if (b) c\<^sub>1 else c\<^sub>2)
                 (n \<oplus> #:c\<^sub>1 + 1) et
                 (n' \<oplus> #:c\<^sub>1 + 1);
         !!b c'.
            ?P (while (b) c') (_ 0 _)
             (%s. interpret b s = Some true)\<^sub>\<surd>
             ((_ 0 _) \<oplus> 2);
         !!b c'.
            ?P (while (b) c') (_ 0 _)
             (%s. interpret b s = Some false)\<^sub>\<surd> (_ 1 _);
         !!b c'. ?P (while (b) c') (_ 1 _) \<Up>id (_Exit_);
         !!c' n et n' b.
            [| c' \<turnstile> n -et\<rightarrow> n'; ?P c' n et n';
               n ~= (_Entry_); n' ~= (_Exit_) |]
            ==> ?P (while (b) c') (n \<oplus> 2) et (n' \<oplus> 2);
         !!c' n et b.
            [| c' \<turnstile> n -et\<rightarrow> (_Exit_);
               ?P c' n et (_Exit_); n ~= (_Entry_) |]
            ==> ?P (while (b) c') (n \<oplus> 2) et (_ 0 _) |]
      ==> ?P ?x1a ?x2a ?x3a ?x4a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 33, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 0, template_hole 24),
                  template_app (template_hole 26, template_hole 25)),
                template_app (template_hole 23, template_hole 22)),
              template_hole 28)
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty)),
        template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WCFG.WCFG_elims",
     "[| ?a1.0 \<turnstile> ?a2.0 -?a3.0\<rightarrow> ?a4.0;
         !!prog.
            [| ?a1.0 = prog; ?a2.0 = (_Entry_);
               ?a3.0 = (%s. False)\<^sub>\<surd>; ?a4.0 = (_Exit_) |]
            ==> ?P;
         !!prog.
            [| ?a1.0 = prog; ?a2.0 = (_Entry_);
               ?a3.0 = (%s. True)\<^sub>\<surd>; ?a4.0 = (_ 0 _) |]
            ==> ?P;
         [| ?a1.0 = Skip; ?a2.0 = (_ 0 _); ?a3.0 = \<Up>id;
            ?a4.0 = (_Exit_) |]
         ==> ?P;
         !!V e.
            [| ?a1.0 = V:=e; ?a2.0 = (_ 0 _);
               ?a3.0 = \<Up>%s. s(V := interpret e s); ?a4.0 = (_ 1 _) |]
            ==> ?P;
         !!V e.
            [| ?a1.0 = V:=e; ?a2.0 = (_ 1 _); ?a3.0 = \<Up>id;
               ?a4.0 = (_Exit_) |]
            ==> ?P;
         !!c\<^sub>1 n et n' c\<^sub>2.
            [| ?a1.0 = c\<^sub>1;; c\<^sub>2; ?a2.0 = n; ?a3.0 = et;
               ?a4.0 = n'; c\<^sub>1 \<turnstile> n -et\<rightarrow> n';
               n' ~= (_Exit_) |]
            ==> ?P;
         !!c\<^sub>1 n et c\<^sub>2.
            [| ?a1.0 = c\<^sub>1;; c\<^sub>2; ?a2.0 = n; ?a3.0 = et;
               ?a4.0 = (_ 0 _) \<oplus> #:c\<^sub>1;
               c\<^sub>1 \<turnstile> n -et\<rightarrow> (_Exit_);
               n ~= (_Entry_) |]
            ==> ?P;
         !!c\<^sub>2 n et n' c\<^sub>1.
            [| ?a1.0 = c\<^sub>1;; c\<^sub>2;
               ?a2.0 = n \<oplus> #:c\<^sub>1; ?a3.0 = et;
               ?a4.0 = n' \<oplus> #:c\<^sub>1;
               c\<^sub>2 \<turnstile> n -et\<rightarrow> n';
               n ~= (_Entry_) |]
            ==> ?P;
         !!b c\<^sub>1 c\<^sub>2.
            [| ?a1.0 = if (b) c\<^sub>1 else c\<^sub>2; ?a2.0 = (_ 0 _);
               ?a3.0 = (%s. interpret b s = Some true)\<^sub>\<surd>;
               ?a4.0 = (_ 0 _) \<oplus> 1 |]
            ==> ?P;
         !!b c\<^sub>1 c\<^sub>2.
            [| ?a1.0 = if (b) c\<^sub>1 else c\<^sub>2; ?a2.0 = (_ 0 _);
               ?a3.0 = (%s. interpret b s = Some false)\<^sub>\<surd>;
               ?a4.0 = (_ 0 _) \<oplus> #:c\<^sub>1 + 1 |]
            ==> ?P;
         !!c\<^sub>1 n et n' b c\<^sub>2.
            [| ?a1.0 = if (b) c\<^sub>1 else c\<^sub>2;
               ?a2.0 = n \<oplus> 1; ?a3.0 = et; ?a4.0 = n' \<oplus> 1;
               c\<^sub>1 \<turnstile> n -et\<rightarrow> n';
               n ~= (_Entry_) |]
            ==> ?P;
         !!c\<^sub>2 n et n' b c\<^sub>1.
            [| ?a1.0 = if (b) c\<^sub>1 else c\<^sub>2;
               ?a2.0 = n \<oplus> #:c\<^sub>1 + 1; ?a3.0 = et;
               ?a4.0 = n' \<oplus> #:c\<^sub>1 + 1;
               c\<^sub>2 \<turnstile> n -et\<rightarrow> n';
               n ~= (_Entry_) |]
            ==> ?P;
         !!b c'.
            [| ?a1.0 = while (b) c'; ?a2.0 = (_ 0 _);
               ?a3.0 = (%s. interpret b s = Some true)\<^sub>\<surd>;
               ?a4.0 = (_ 0 _) \<oplus> 2 |]
            ==> ?P;
         !!b c'.
            [| ?a1.0 = while (b) c'; ?a2.0 = (_ 0 _);
               ?a3.0 = (%s. interpret b s = Some false)\<^sub>\<surd>;
               ?a4.0 = (_ 1 _) |]
            ==> ?P;
         !!b c'.
            [| ?a1.0 = while (b) c'; ?a2.0 = (_ 1 _); ?a3.0 = \<Up>id;
               ?a4.0 = (_Exit_) |]
            ==> ?P;
         !!c' n et n' b.
            [| ?a1.0 = while (b) c'; ?a2.0 = n \<oplus> 2; ?a3.0 = et;
               ?a4.0 = n' \<oplus> 2; c' \<turnstile> n -et\<rightarrow> n';
               n ~= (_Entry_); n' ~= (_Exit_) |]
            ==> ?P;
         !!c' n et b.
            [| ?a1.0 = while (b) c'; ?a2.0 = n \<oplus> 2; ?a3.0 = et;
               ?a4.0 = (_ 0 _); c' \<turnstile> n -et\<rightarrow> (_Exit_);
               n ~= (_Entry_) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 35, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_implication
         ([template_equation (template_var 4, template_hole 23)],
          template_implication
           ([template_equation
              (template_var 3,
               template_app (template_hole 25, template_hole 24))],
            template_implication
             ([template_equation
                (template_var 2,
                 template_app (template_hole 22, template_hole 21))],
              template_implication
               ([template_equation (template_var 1, template_hole 27)],
                template_predicate (template_var 0))))),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty))],
       template_predicate (template_var 0)))]
