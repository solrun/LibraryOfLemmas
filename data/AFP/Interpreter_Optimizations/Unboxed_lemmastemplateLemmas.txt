   [("Unboxed_lemmas.is_dyn_operand_eq_typeof_Dyn",
     "is_dyn_operand ?x = (typeof ?x = None)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Unboxed_lemmas.typeof_unboxed_eq_const",
     "(typeof ?x = None) = (EX d. ?x = OpDyn d)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Unboxed_lemmas.cast_Dyn_eq_Some_imp_typeof",
     "cast_Dyn ?u = Some ?d ==> typeof ?u = None",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Unboxed_lemmas.cast_inversions",
     "cast_Dyn ?x = Some ?d ==> ?x = OpDyn ?d",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Unboxed_lemmas.cast_inversions",
     "cast_Ubx1 ?x = Some ?n ==> ?x = OpUbx1 ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Unboxed_lemmas.cast_inversions",
     "cast_Ubx2 ?x = Some ?b ==> ?x = OpUbx2 ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Unboxed_lemmas.typeof_unboxed_eq_const",
     "(typeof ?x = Some Ubx1) = (EX n. ?x = OpUbx1 n)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, template_hole 3)),
       template_app (template_hole 2, t_empty))),
    ("Unboxed_lemmas.typeof_unboxed_eq_const",
     "(typeof ?x = Some Ubx2) = (EX b. ?x = OpUbx2 b)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, template_hole 3)),
       template_app (template_hole 2, t_empty))),
    ("Unboxed_lemmas.typeof_unboxed_inversion",
     "typeof ?x = None ==> EX d. ?x = OpDyn d",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Unboxed_lemmas.typeof_unboxed_inversion",
     "typeof ?x = Some Ubx1 ==> EX n. ?x = OpUbx1 n",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Unboxed_lemmas.typeof_unboxed_inversion",
     "typeof ?x = Some Ubx2 ==> EX b. ?x = OpUbx2 b",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Unboxed_lemmas.ap_map_list_cast_Dyn_replicate",
     "ap_map_list cast_Dyn ?xs = Some ?ys ==>
      map typeof ?xs = replicate (length ?xs) None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_hole 0))))]
