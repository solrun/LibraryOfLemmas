   [("Env_list.get_empty", "Env_list.get Env_list.empty ?x = None",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Env_list.to_list_distinct",
     "distinct (map fst (Env_list.to_list ?e))",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Env_list.to_list_correct",
     "map_of (Env_list.to_list ?e) = Env_list.get ?e",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Env_list.set_to_list", "set (Env_list.to_list ?e) <= set ?e",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Env_list.get_add_eq",
     "Env_list.get (Env_list.add ?e ?x ?v) ?x = Some ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 1),
       template_app (template_hole 0, template_var 0))),
    ("Env_list.get_add_neq",
     "?x ~= ?y ==>
      Env_list.get (Env_list.add ?e ?x ?v) ?y = Env_list.get ?e ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Env_list.map_of_filter",
     "?x ~= ?y ==>
      map_of (filter (%z. fst z ~= ?y) ?zs) ?x = map_of ?zs ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2))))]
