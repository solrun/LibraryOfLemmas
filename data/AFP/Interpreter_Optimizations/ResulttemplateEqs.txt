   [("Result.bind_Ok", "?x >>= Ok = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Result.to_option_Some",
     "(Result.to_option ?r = Some ?x) = (?r = Ok ?x)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Result.of_option_eq_Ok",
     "(Result.of_option ?x ?y = Ok ?z) = (?y = Some ?z)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Result.of_option_injective",
     "(Result.of_option ?e ?x = Result.of_option ?e ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Result.if_then_else_Ok",
     "((if ?a then ?b else Error ?c) = Ok ?d) = (?a & ?b = Ok ?d)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_dunno)),
    ("Result.if_then_else_Error",
     "((if ?a then ?c else Ok ?b) = Error ?d) = (?a & ?c = Error ?d)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_dunno)),
    ("Result.if_then_else_Ok",
     "((if ?a then Error ?c else ?b) = Ok ?d) = (~ ?a & ?b = Ok ?d)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 3, template_var 2)),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_dunno)),
    ("Result.if_then_else_Error",
     "((if ?a then Ok ?b else ?c) = Error ?d) = (~ ?a & ?c = Error ?d)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 3, template_var 2)),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_dunno)),
    ("Result.bind_eq_Ok_conv",
     "(?x >>= ?f = Ok ?z) = (EX y. ?x = Ok y & ?f y = Ok ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Result.map_eq_Error_conv",
     "(map_result ?f ?g ?x = Error ?y) =
      (EX x'. ?x = Error x' & ?y = ?f x')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Result.map_eq_Ok_conv",
     "(map_result ?f ?g ?x = Ok ?y) = (EX x'. ?x = Ok x' & ?y = ?g x')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Result.bind_eq_Error_conv",
     "(?x >>= ?f = Error ?z) =
      (?x = Error ?z | (EX y. ?x = Ok y & ?f y = Error ?z))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_dunno))]
