   [("Inca_to_Ubx_compiler.monadic_fold_map_length",
     "monadic_fold_map ?f ?acc ?xs = Some (?acc', ?xs') ==>
      length ?xs = length ?xs'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Inca_to_Ubx_compiler.monadic_fold_map_list_all",
     "[| monadic_fold_map ?f ?acc ?xs = Some (?acc', ?ys);
         !!acc acc' x y. ?f acc x = Some (acc', y) ==> ?P y |]
      ==> list_all ?P ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Inca_to_Ubx_compiler.monadic_fold_map_list_all2",
     "[| monadic_fold_map ?f ?acc ?xs = Some (?acc', ?ys);
         !!acc acc' x y. ?f acc x = Some (acc', y) ==> ?P x y |]
      ==> list_all2 ?P ?xs ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)
           ))),
    ("Inca_to_Ubx_compiler.monadic_fold_map_eq_Some_conv'",
     "(monadic_fold_map ?f ?a (?x # ?xs) = Some ?p) =
      (EX y ys' b.
          ?f ?a ?x = Some (b, y) &
          monadic_fold_map ?f b ?xs = Some (fst ?p, ys') &
          snd ?p = y # ys')",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app
              (template_app (template_hole 14, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 13, template_var 2),
               template_var 1))),
         template_app (template_hole 12, template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Inca_to_Ubx_compiler.monadic_fold_map_eq_Some_conv",
     "(monadic_fold_map ?f ?a (?x # ?xs) = Some (?c, ?ys)) =
      (EX y ys' b.
          ?f ?a ?x = Some (b, y) &
          monadic_fold_map ?f b ?xs = Some (?c, ys') & ?ys = y # ys')",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_app (template_hole 12, template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 11, template_var 3),
               template_var 2))),
         template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0))),
       template_app (template_hole 8, t_empty))),
    ("Inca_to_Ubx_compiler.monadic_fold_map_ConsD",
     "monadic_fold_map ?f ?a (?x # ?xs) = Some (?c, ?ys) ==>
      EX y ys' b.
         ?ys = y # ys' &
         ?f ?a ?x = Some (b, y) &
         monadic_fold_map ?f b ?xs = Some (?c, ys')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)),
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 8, t_empty))))]
