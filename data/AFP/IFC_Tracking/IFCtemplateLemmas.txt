   [("IFC.mono_ge_id", "ALL i. ?f i < ?f (Suc i) ==> ?i <= ?f ?i",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_var 1, template_var 0)))),
    ("IFC.LeastBI_ex", "EX k<=?n. ?P k ==> ?P (LEAST k. ?P k)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, t_empty))
           ))),
    ("IFC.LeastBI_ex", "EX k<=?n. ?P k ==> (LEAST k. ?P k) <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, t_empty),
         template_var 1))),
    ("IFC.unbounded_nat_set_infinite",
     "ALL i. EX j>=i. j : ?A ==> infinite ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IFC.filter_sorted_list_of_set",
     "finite ?xs ==>
      filter ?P (sorted_list_of_set ?xs) =
      sorted_list_of_set {x: ?xs. ?P x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("IFC.GreatestBI", "EX k<=?n. ?P k ==> ?P (GREATEST k. k <= ?n & ?P k)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, t_empty))
           ))),
    ("IFC.GreatestB_le",
     "[| ?x <= ?n; ?P ?x |] ==> ?x <= (GREATEST k. k <= ?n & ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_inequation
        (less_equals, template_var 2,
         template_app (template_hole 1, t_empty)))),
    ("IFC.insort_greater",
     "ALL x:set ?ls. x < ?y ==> insort ?y ?ls = ?ls @ [?y]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("IFC.GreatestB",
     "EX k<=?n. ?P k ==> (GREATEST k. k <= ?n & ?P k) <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, t_empty),
         template_var 1))),
    ("IFC.allB_atLeastLessThan_lower",
     "[| ?i <= ?j; ALL x:{?i..<?n}. ?P x |] ==> ALL x:{?j..<?n}. ?P x",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("IFC.mod_bound_instance",
     "[| ?j < ?i; !!j'. [| ?k < j'; j' mod ?i = ?j |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("IFC.insort_append_first",
     "ALL y:set ?ys. ?x <= y ==>
      insort ?x (?xs @ ?ys) = insort ?x ?xs @ ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, t_empty), template_var 1),
               template_var 0)),
           template_var 2)))),
    ("IFC.filter_insort",
     "sorted ?xs ==>
      filter ?P (insort ?x ?xs) =
      (if ?P ?x then insort ?x (filter ?P ?xs) else filter ?P ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, t_empty), template_var 0),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2))),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("IFC.three_cases",
     "[| ?A | ?B | ?C; ?A ==> ?thesis; ?B ==> ?thesis; ?C ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate (template_var 2)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("IFC.infinite_ascending",
     "[| infinite ?A;
         !!f. [| range f = ?A; ALL i. f i < f (Suc i) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("IFC.sorted_list_of_set_map_mono",
     "[| ALL n m. n < m --> ?f n < ?f m; finite ?A |]
      ==> map ?f (sorted_list_of_set ?A) = sorted_list_of_set (?f ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IFC.sorted_list_of_set_append",
     "[| finite ?xs; finite ?ys; ALL x:?xs. ALL y:?ys. x < y |]
      ==> sorted_list_of_set (?xs Un ?ys) =
          sorted_list_of_set ?xs @ sorted_list_of_set ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("IFC.insort_map_mono",
     "ALL n m. n < m --> ?f n < ?f m ==>
      map ?f (insort ?n ?ns) = insort (?f ?n) (map ?f ?ns)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, t_empty),
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("IFC.nat_sym_cases",
     "[| !!a b. a < b ==> ?P a b; !!a. ?P a a; !!a b. ?P b a ==> ?P a b |]
      ==> ?P ?a ?b",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("IFC.option_neq_cases",
     "[| ?x ~= ?y; !!a. [| ?x = None; ?y = Some a |] ==> ?thesis;
         !!a. [| ?x = Some a; ?y = None |] ==> ?thesis;
         !!a b. [| ?x = Some a; ?y = Some b; a ~= b |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("IFC.list_neq_prefix_cases",
     "[| ?ls ~= ?ls'; ?ls ~= []; ?ls' ~= [];
         !!xs x x' ys ys'.
            [| ?ls = xs @ [x] @ ys; ?ls' = xs @ [x'] @ ys'; x ~= x' |]
            ==> ?thesis;
         !!xs. [| ?ls = ?ls' @ xs; xs ~= [] |] ==> ?thesis;
         !!xs. [| ?ls @ xs = ?ls'; xs ~= [] |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]
