   [("Utility.foldr_foldr_concat",
     "foldr (foldr ?f) ?m ?a = foldr ?f (concat ?m) ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Utility.all_less_two",
     "(ALL i<Suc (Suc 0). ?P i) = (?P 0 & ?P (Suc 0))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_hole 1)),
         template_app
          (template_var 0,
           template_app (template_hole 2, template_hole 1))))),
    ("Utility.map_upt_Suc",
     "map ?f [0..<Suc ?n] = ?f 0 # map (%i. ?f (Suc i)) [0..<?n]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 1, template_hole 2)),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("Utility.all_Suc_conv",
     "(ALL i<Suc ?n. ?P i) = (?P 0 & (ALL i<?n. ?P (Suc i)))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 0, template_hole 0)),
         template_app (template_hole 5, t_empty)))),
    ("Utility.ex_Suc_conv",
     "(EX i<Suc ?n. ?P i) = (?P 0 | (EX i<?n. ?P (Suc i)))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 0, template_hole 0)),
         template_app (template_hole 5, t_empty)))),
    ("Utility.max_list_set",
     "max_list ?xs =
      (if set ?xs = {} then 0
       else THE x. x : set ?xs & (ALL y:set ?xs. y <= x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_dunno)),
    ("Utility.map_upt_add",
     "map ?f [0..<?n + ?m] =
      map ?f [0..<?n] @ map (%i. ?f (i + ?n)) [0..<?m]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("Utility.sum_list_double_concat",
     "sum_list (concat (map (%i. map (%j. ?f i j + ?g i j) ?as) ?bs)) =
      sum_list (concat (map (%i. map (?f i) ?as) ?bs)) +
      sum_list (concat (map (%i. map (?g i) ?as) ?bs))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_var 0))))))]
