   [("Projection.projection_on_empty_trace", "[] \<upharpoonleft> ?X = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Projection.projection_to_emptyset_is_empty_trace",
     "?l \<upharpoonleft> {} = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Projection.projection_idempotent",
     "?l \<upharpoonleft> ?X = ?l \<upharpoonleft> ?X \<upharpoonleft> ?X",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Projection.projection_rev_commute",
     "rev (?l \<upharpoonleft> ?X) = rev ?l \<upharpoonleft> ?X",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Projection.list_subset_iff_projection_neutral",
     "(set ?l <= ?X) = (?l \<upharpoonleft> ?X = ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Projection.projection_commute",
     "?l \<upharpoonleft> ?X \<upharpoonleft> ?Y =
      ?l \<upharpoonleft> ?Y \<upharpoonleft> ?X",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Projection.projection_sequence",
     "?xs \<upharpoonleft> ?X \<upharpoonleft> ?Y =
      ?xs \<upharpoonleft> (?X Int ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projection.projection_concatenation_commute",
     "(?l1.0 @ ?l2.0) \<upharpoonleft> ?X =
      ?l1.0 \<upharpoonleft> ?X @ ?l2.0 \<upharpoonleft> ?X",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0))))]
