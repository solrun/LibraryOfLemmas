   [("Projective_Space.chart_last_domainP_chart_last_inv",
     "chart_last_domainP (chart_last_inv ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Projective_Space.open_chart_basis_domain",
     "open (Collect (chart_basis_domainP ?b))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Projective_Space.chart_last_inv_inverse",
     "chart_last (chart_last_inv ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective_Space.scaleR_one_nonzero", "1 *\<^sub>R ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Projective_Space.chart_basis_continuous",
     "continuous_on (Collect (chart_basis_domainP ?b)) (chart_basis ?b)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 0))
         )),
    ("Projective_Space.open_vimage_Proj_iff", "open (Proj -` ?T) = open ?T",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Projective_Space.open_ne_zero", "open {x. x ~= ?c}",
     template_predicate
      (
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))
         )),
    ("Projective_Space.Proj_open_map", "open ?X ==> open (Proj ` ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Projective_Space.open_vimage_ProjI", "open ?T ==> open (Proj -` ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Projective_Space.open_vimage_ProjD", "open (Proj -` ?T) ==> open ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Projective_Space.Proj_vimage_chart_basis_domainP",
     "Proj -` Collect (chart_basis_domainP ?b) =
      Collect (chart_basis_domain_nonzeroP ?b)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Projective_Space.bool_aux", "(?a & (?a --> ?b)) = (?a & ?b)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Projective_Space.chart_last_inverse",
     "chart_last_domainP ?x ==> chart_last_inv (chart_last ?x) = ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Projective_Space.b_neq0", "?b : Basis ==> ?b ~= (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Projective_Space.chart_basis_inv_continuous",
     "?b : Basis ==> continuous_on UNIV (chart_basis_inv ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Projective_Space.compat_last_chart",
     "?b : Basis ==> \<infinity>-smooth_compat last_chart (basis_chart ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Projective_Space.chart_basis_domainP_chart_basis_inv",
     "?b : Basis ==> chart_basis_domainP ?b (chart_basis_inv ?b ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Projective_Space.chart_basis_inv_inverse",
     "?b : Basis ==> chart_basis ?b (chart_basis_inv ?b ?x) = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Projective_Space.chart_last_nonzero_scaleR",
     "?c ~= 0 ==>
      chart_last_nonzero (?c *\<^sub>R ?n) = chart_last_nonzero ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Projective_Space.homeomorphism_chart_basis",
     "?b : Basis ==>
      homeomorphism (Collect (chart_basis_domainP ?b)) UNIV (chart_basis ?b)
       (chart_basis_inv ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0))),
                 template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Projective_Space.open_scaling_nonzero",
     "[| ?c ~= 0; open ?s |] ==> open ((*\<^sub>R) ?c ` ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Projective_Space.proj_rel_iff",
     "proj_rel ?a ?b = (EX c. c ~= 0 & ?b = c *\<^sub>R ?a)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Projective_Space.compat_basis_chart",
     "[| ?a : Basis; ?b : Basis |]
      ==> \<infinity>-smooth_compat (basis_chart ?a) (basis_chart ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Projective_Space.continuous_on_proj_spaceI",
     "[| continuous_on (Proj -` ?S) (?f o Proj); open ?S |]
      ==> continuous_on ?S ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 3))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Projective_Space.scaleR_scaleR_nonzero",
     "?b ~= 0 ==> ?a *\<^sub>R ?b *\<^sub>R ?x = (?a * ?b) *\<^sub>R ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Projective_Space.chart_basis_inverse",
     "[| ?b : Basis; chart_basis_domainP ?b ?x |]
      ==> chart_basis_inv ?b (chart_basis ?b ?x) = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Projective_Space.saturate_eq",
     "Proj -` Proj ` ?X = (UN c:UNIV - {0}. (*\<^sub>R) c ` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_hole 10),
         template_app
          (template_app (template_hole 9, template_hole 10),
           template_var 0)),
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)))))),
    ("Projective_Space.open_nonzero_openin_transfer",
     "is_equality ?A ==>
      (rel_set (pcr_nonzero ?A) ===> (=))
       (openin (top_of_set (Collect (Domainp (pcr_nonzero ?A))))) open",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_var 0))),
                 template_hole 7),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 8, template_var 0)))))),
             template_hole 0)
           ))),
    ("Projective_Space.proj_rel_parametric",
     "[| ((=) ===> pcr_nonzero ?A ===> pcr_nonzero ?A) (*\<^sub>R)
          (*\<^sub>R);
         bi_unique ?A |]
      ==> (pcr_nonzero ?A ===> pcr_nonzero ?A ===> (=)) proj_rel proj_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_var 0)),
                    template_app (template_hole 8, template_var 0))),
                template_hole 7),
              template_hole 6)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 8, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 8, template_var 0)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Projective_Space.smooth_on_basis_comp_inv",
     "[| ?a : Basis; ?b : Basis |]
      ==> smooth_on
           {x. (x + (1 - x \<bullet> ?a) *\<^sub>R ?a) \<bullet> ?b ~= 0}
           (chart_basis ?b o chart_basis_inv ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_hole 14)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_hole 14)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, template_hole 12),
               template_app (template_hole 11, t_empty)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Projective_Space.proj_rel_transfer",
     "[| ((=) ===> pcr_nonzero ?A ===> pcr_nonzero ?A) ?sr (*\<^sub>R);
         bi_unique ?A |]
      ==> (pcr_nonzero ?A ===> pcr_nonzero ?A ===> (=))
           (%x a. EX c. a = ?sr c x & c ~= 0) proj_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_var 1)),
                    template_app (template_hole 11, template_var 1))),
                template_var 0),
              template_hole 10)
            ),
        template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 11, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 11, template_var 1)),
                   template_hole 6)),
               t_empty),
             template_hole 0)
           )))]
