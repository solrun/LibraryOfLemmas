   [("Bump_Function.f_continuous", "continuous_on ?S Bump_Function.f",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Bump_Function.H_range", "0 <= H ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bump_Function.f_nonneg", "0 <= Bump_Function.f ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bump_Function.h_range", "0 <= h ?t",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bump_Function.H_range", "H ?x <= 1",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Bump_Function.h_range", "h ?t <= 1",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Bump_Function.f_higher_differentiable_on",
     "higher_differentiable_on ?S Bump_Function.f ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)
         )),
    ("Bump_Function.H_smooth_on", "?k-smooth_on UNIV H",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("Bump_Function.f_smooth_on", "?k-smooth_on ?S Bump_Function.f",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Bump_Function.continuous_on_real_polynomial_function",
     "real_polynomial_function ?p ==> continuous_on ?S ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Bump_Function.f_tendsto",
     "Bump_Function.f \<midarrow>?x\<rightarrow> Bump_Function.f ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Bump_Function.f_eq_zero_iff", "(Bump_Function.f ?x = 0) = (?x <= 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Bump_Function.f_pos_iff", "(0 < Bump_Function.f ?x) = (0 < ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Bump_Function.netlimit_at_right", "netlimit (at_right ?x) = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))),
         t_empty),
       template_var 0)),
    ("Bump_Function.netlimit_at_left", "netlimit (at_left ?x) = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))),
         t_empty),
       template_var 0)),
    ("Bump_Function.h_less_one", "1 < ?t ==> h ?t < 1",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_hole 1))),
    ("Bump_Function.h_eq_1", "?t <= 1 ==> h ?t = 1",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Bump_Function.f_nonpos", "?x <= 0 ==> Bump_Function.f ?x = 0",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Bump_Function.f_differentiable_at_neg",
     "?x < 0 ==> Bump_Function.f differentiable at ?x",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Bump_Function.h_pos", "?t < 2 ==> 0 < h ?t",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_hole 2)))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Bump_Function.h_eq_0", "2 <= ?t ==> h ?t = 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Bump_Function.H_eq_one", "?x : cball (0::?'a) 1 ==> H ?x = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Bump_Function.real_polynomial_function_tendsto",
     "real_polynomial_function ?p ==>
      (?p \<longlongrightarrow> ?p ?x) (at ?x within ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_hole 1,
                 template_app (template_var 2, template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Bump_Function.f_has_derivative_at_neg",
     "?x < 0 ==> (Bump_Function.f has_derivative (%x. 0)) (at ?x)",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2), t_empty),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Bump_Function.denominator_pos",
     "0 < Bump_Function.f (2 - ?t) + Bump_Function.f (?t - 1)",
     template_inequation
      (less_than, template_hole 7,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 0))))),
    ("Bump_Function.H_pos", "?x : ball (0::?'a) 2 ==> 0 < H ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))))
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Bump_Function.frechet_derivative_f_at_neg",
     "?x : {..<0} ==> frechet_derivative Bump_Function.f (at ?x) = (%x. 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_hole 5))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         t_empty))),
    ("Bump_Function.H_neq_zeroD", "H ?x ~= 0 ==> ?x : ball (0::?'a) 2",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("Bump_Function.H_eq_zero", "?x ~: ball (0::?'a) 2 ==> H ?x = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_hole 3))))
                )
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Bump_Function.denominator_nonzero",
     "(Bump_Function.f (2 - ?t) + Bump_Function.f (?t - 1) = 0) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_hole 3))),
                   template_var 0))),
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 2)))),
         template_hole 1),
       template_hole 0)),
    ("Bump_Function.exp_inv_limit_0_right_gen'",
     "((%t. inverse (t ^ ?k) / exp (inverse t)) \<longlongrightarrow> 0)
       (at_right 0)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 8, t_empty),
             template_app (template_hole 3, template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app (template_hole 0, template_hole 2)))
         )),
    ("Bump_Function.exp_inv_limit_0_right_gen",
     "((%t. exp (- inverse t) / t ^ ?k) \<longlongrightarrow> 0)
       (at_right 0)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 9, t_empty),
             template_app (template_hole 3, template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app (template_hole 0, template_hole 2)))
         )),
    ("Bump_Function.f_compose_smooth_on",
     "[| ?k-smooth_on ?S ?g; open ?S |]
      ==> ?k-smooth_on ?S (%x. Bump_Function.f (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Bump_Function.h_compose_smooth_on",
     "[| ?k-smooth_on ?S ?g; open ?S |] ==> ?k-smooth_on ?S (%x. h (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Bump_Function.H_compose_smooth_on",
     "[| ?k-smooth_on ?S ?g; open ?S |] ==> ?k-smooth_on ?S (%x. H (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Bump_Function.f_nth_derivative_lt_0",
     "higher_differentiable_on {..<0} Bump_Function.f ?k &
      (ALL t<0. nth_derivative ?k Bump_Function.f t 1 = 0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7)),
                 template_hole 6),
               template_var 0)),
           template_app (template_hole 5, t_empty))
         )),
    ("Bump_Function.has_derivative_at_left_at_right'",
     "[| (?g has_derivative ?g') (at ?x within {..?x});
         (?g has_derivative ?g') (at ?x within {?x..}) |]
      ==> (?g has_derivative ?g') (at ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 2, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 0))
           ))),
    ("Bump_Function.has_derivative_split_at",
     "[| (?g has_derivative ?g') (at_left ?x);
         (?g has_derivative ?g') (at_right ?x) |]
      ==> (?g has_derivative ?g') (at ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 2, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 0))
           ))),
    ("Bump_Function.f_nth_derivative_is_poly",
     "higher_differentiable_on {0<..} Bump_Function.f ?k &
      (EX p. real_polynomial_function p &
             (ALL t>0.
                 nth_derivative ?k Bump_Function.f t 1 =
                 p t / t ^ (2 * ?k) * exp (- inverse t)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app
                (template_app
                  (template_hole 21,
                   template_app (template_hole 20, template_hole 19)),
                 template_hole 18),
               template_var 0)),
           template_app (template_hole 17, t_empty))
         )),
    ("Bump_Function.f_nth_derivative_cases",
     "higher_differentiable_on UNIV Bump_Function.f ?k &
      (ALL t<=0. nth_derivative ?k Bump_Function.f t 1 = 0) &
      (EX p. real_polynomial_function p &
             (ALL t>0.
                 nth_derivative ?k Bump_Function.f t 1 =
                 p t / t ^ (2 * ?k) * exp (- inverse t)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app
                (template_app (template_hole 22, template_hole 21),
                 template_hole 20),
               template_var 0)),
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 19, t_empty)),
             template_app (template_hole 12, t_empty)))
         ))]
