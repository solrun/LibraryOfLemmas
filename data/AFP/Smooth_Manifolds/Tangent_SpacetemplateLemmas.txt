   [("Tangent_Space.smooth_on_inner_const",
     "?k-smooth_on UNIV (%x. x \<bullet> ?j)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           t_empty)
         )),
    ("Tangent_Space.span_idem", "subspace ?X ==> span ?X = ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Tangent_Space.extensional0_directional_derivative",
     "extensional0 (manifold_eucl.diff_fun_space ?k)
       (directional_derivative ?k ?a ?v)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1)),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Tangent_Space.dim_eucl_tangent_space",
     "dim (manifold_eucl.tangent_space \<infinity> ?a) = DIM(?'a)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3)),
             template_hole 2),
           template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Tangent_Space.linear_directional_derivative",
     "?k ~= 0 ==> linear (directional_derivative ?k ?a)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Tangent_Space.sum_apply", "sum ?f ?X ?i = (SUM x:?X. ?f x ?i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Tangent_Space.directional_derivative_in_span",
     "directional_derivative \<infinity> ?a ?x
      : span (directional_derivative \<infinity> ?a ` Basis)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1)),
               template_hole 0)))
         )),
    ("Tangent_Space.inj_on_directional_derivative",
     "?k ~= 0 ==> inj_on (directional_derivative ?k ?a) ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Tangent_Space.directional_derivative_inner",
     "directional_derivative ?k ?a ?x (%x. x \<bullet> ?j) =
      ?x \<bullet> ?j",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Tangent_Space.frechet_derivative_inner",
     "frechet_derivative (%x. x \<bullet> ?j) (at ?a) =
      (%x. x \<bullet> ?j)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       t_empty)),
    ("Tangent_Space.span_directional_derivative",
     "span (directional_derivative \<infinity> ?a ` Basis) =
      manifold_eucl.tangent_space \<infinity> ?a",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 0)),
           template_hole 4)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_hole 5),
         template_var 0))),
    ("Tangent_Space.independent_directional_derivative",
     "?k ~= 0 ==> independent (directional_derivative ?k ?a ` Basis)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_hole 0))
               )
           ))),
    ("Tangent_Space.smooth_on_imp_differentiable_on",
     "[| ?k-smooth_on ?S ?f; 0 < ?k |] ==> ?f differentiable_on ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 1, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Tangent_Space.extensional0_directional_derivative_le",
     "?k <= ?k' ==>
      extensional0 (manifold_eucl.diff_fun_space ?k)
       (directional_derivative ?k' ?a ?v)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 1)),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Tangent_Space.surj_directional_derivative",
     "?k = \<infinity> ==>
      range (directional_derivative ?k ?a) =
      manifold_eucl.tangent_space ?k ?a",
     template_implication
      ([template_equation (template_var 1, template_hole 8)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)),
             template_var 1),
           template_var 0)))),
    ("Tangent_Space.directional_derivative_in_tangent_space",
     "?k ~= 0 ==>
      directional_derivative ?k ?a ?x : manifold_eucl.tangent_space ?k ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0)),
                 template_var 2),
               template_var 1))
           ))),
    ("Tangent_Space.directional_derivative_eq_frechet_derivative",
     "?k-smooth_on UNIV ?f ==>
      directional_derivative ?k ?a ?v ?f =
      frechet_derivative ?f (at ?a) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_hole 4),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 4)),
           template_var 0)))),
    ("Tangent_Space.linear_imp_linear_on",
     "[| linear ?f; subspace ?A; subspace ?B |]
      ==> linear_on ?A ?B (*\<^sub>R) (*\<^sub>R) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0),
                 template_hole 1),
               template_hole 0),
             template_var 2)
           ))),
    ("Tangent_Space.directional_derivative_scaleR",
     "?k ~= 0 ==>
      directional_derivative ?k ?a (?c *\<^sub>R ?x) =
      ?c *\<^sub>R directional_derivative ?k ?a ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0))))),
    ("Tangent_Space.linear_on_directional_derivative",
     "?k ~= 0 ==>
      linear_on UNIV (manifold_eucl.tangent_space ?k ?a) (*\<^sub>R)
       (*\<^sub>R) (directional_derivative ?k ?a)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_hole 3)),
                       template_var 1),
                     template_var 0)),
                 template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Tangent_Space.directional_derivative_linear_on_diff_fun_space",
     "?k ~= 0 ==>
      linear_on (manifold_eucl.diff_fun_space ?k) UNIV (*\<^sub>R)
       (*\<^sub>R) (directional_derivative ?k ?a ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_hole 4)),
                       template_var 2)),
                   template_hole 3),
                 template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Tangent_Space.directional_derivative_add",
     "?k ~= 0 ==>
      directional_derivative ?k ?a (?x + ?y) =
      directional_derivative ?k ?a ?x + directional_derivative ?k ?a ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0))))),
    ("Tangent_Space.push_forward_compose",
     "[| ?X : c_manifold.tangent_space ?M1.0 ?k ?p;
         ?p : manifold.carrier ?M1.0; diff ?k ?M1.0 ?M2.0 ?f;
         diff ?k ?M2.0 ?M3.0 ?g |]
      ==> diff.push_forward ?k ?M2.0 ?M3.0 ?g
           (diff.push_forward ?k ?M1.0 ?M2.0 ?f ?X) =
          diff.push_forward ?k ?M1.0 ?M3.0 (?g o ?f) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 7),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app (template_hole 7, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 6),
                 template_var 3),
               template_var 2),
             template_var 7)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 6),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 7)))),
    ("Tangent_Space.directional_derivative_is_derivation",
     "[| ?f : manifold_eucl.diff_fun_space ?k;
         ?g : manifold_eucl.diff_fun_space ?k; ?k ~= 0 |]
      ==> directional_derivative ?k ?a ?x (?f * ?g) =
          ?f ?a * directional_derivative ?k ?a ?x ?g +
          ?g ?a * directional_derivative ?k ?a ?x ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_hole 8)),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_hole 8)),
                template_var 3))
            ),
        template_negation
         (template_equation (template_var 3, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 4, template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 1),
                   template_var 0),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 4))))))]
