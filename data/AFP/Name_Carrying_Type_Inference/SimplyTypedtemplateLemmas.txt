   [("PreSimplyTyped.ptrm_fvs_finite", "finite (ptrm_fvs ?X)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.fvs_finite", "finite (fvs ?M)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PreSimplyTyped.ptrm_alpha_equiv_reflexive", "?M \<approx> ?M",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("SimplyTyped.unit_not_fst", "Unit ~= Fst ?P",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.unit_not_snd", "Unit ~= Snd ?P",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.unit_not_var", "Unit ~= Var ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.trm_prm_apply_id", "\<epsilon> \<cdot> ?M = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("SimplyTyped.trm_prm_simp", "?\<pi> \<cdot> Unit = Unit",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("PreSimplyTyped.ptrm_prm_apply_id", "\<epsilon> \<bullet> ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("SimplyTyped.unit_not_app", "Unit ~= App ?A ?B",
     template_negation
      (
         template_equation
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.unit_not_pair", "Unit ~= SimplyTyped.Pair ?A ?B",
     template_negation
      (
         template_equation
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.fst_not_snd", "Fst ?P ~= Snd ?Q",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.var_not_fst", "Var ?x ~= Fst ?P",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.var_not_snd", "Var ?x ~= Snd ?P",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.fvs_simp", "fvs (Fst ?P) = fvs ?P",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SimplyTyped.fvs_simp", "fvs (Snd ?P) = fvs ?P",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SimplyTyped.depth_fst", "depth ?P < depth (Fst ?P)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("SimplyTyped.depth_snd", "depth ?P < depth (Snd ?P)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("SimplyTyped.unit_not_fn", "Unit ~= Fn ?x ?T ?A",
     template_negation
      (
         template_equation
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.var_not_app", "Var ?x ~= App ?A ?B",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.var_not_pair", "Var ?x ~= SimplyTyped.Pair ?A ?B",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.app_not_fst", "App ?A ?B ~= Fst ?P",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.app_not_snd", "App ?A ?B ~= Snd ?P",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.pair_not_fst", "SimplyTyped.Pair ?A ?B ~= Fst ?P",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.pair_not_snd", "SimplyTyped.Pair ?A ?B ~= Snd ?P",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("PreSimplyTyped.ptrm_size_prm", "size ?X = size (?\<pi> \<bullet> ?X)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SimplyTyped.depth_prm", "depth (?\<pi> \<cdot> ?A) = depth ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SimplyTyped.fvs_simp", "fvs (Var ?x) = {?x}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SimplyTyped.depth_app", "depth ?A < depth (App ?A ?B)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SimplyTyped.depth_pair", "depth ?A < depth (SimplyTyped.Pair ?A ?B)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SimplyTyped.depth_app", "depth ?B < depth (App ?A ?B)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SimplyTyped.depth_pair", "depth ?B < depth (SimplyTyped.Pair ?A ?B)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SimplyTyped.var_not_fn", "Var ?x ~= Fn ?y ?T ?A",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.app_not_pair", "App ?A ?B ~= SimplyTyped.Pair ?C ?D",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.fn_not_fst", "Fn ?x ?T ?A ~= Fst ?P",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.fn_not_snd", "Fn ?x ?T ?A ~= Snd ?P",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("SimplyTyped.depth_fn", "depth ?A < depth (Fn ?x ?T ?A)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 2),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("PreSimplyTyped.ptrm_alpha_equiv_symmetric",
     "?X \<approx> ?Y ==> ?Y \<approx> ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SimplyTyped.app_not_fn", "App ?A ?B ~= Fn ?y ?T ?X",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("SimplyTyped.fn_not_pair", "Fn ?x ?T ?A ~= SimplyTyped.Pair ?C ?D",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("PreSimplyTyped.ptrm_prm_fvs",
     "ptrm_fvs (?\<pi> \<bullet> ?X) = ?\<pi> {$} ptrm_fvs ?X",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("SimplyTyped.trm_prm_simp",
     "?\<pi> \<cdot> Fst ?P = Fst (?\<pi> \<cdot> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SimplyTyped.trm_prm_simp",
     "?\<pi> \<cdot> Snd ?P = Snd (?\<pi> \<cdot> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SimplyTyped.trm_prm_simp",
     "?\<pi> \<cdot> Var ?x = Var (?\<pi> $ ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SimplyTyped.var_prm_action",
     "[?a \<leftrightarrow> ?b] \<cdot> Var ?a = Var ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_app (template_hole 0, template_var 0))),
    ("SimplyTyped.fvs_simp", "fvs (App ?A ?B) = fvs ?A Un fvs ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SimplyTyped.fvs_simp",
     "fvs (SimplyTyped.Pair ?A ?B) = fvs ?A Un fvs ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PreSimplyTyped.ptrm_size_alpha_equiv",
     "?X \<approx> ?Y ==> size ?X = size ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PreSimplyTyped.ptrm_alpha_equiv_fvs",
     "?X \<approx> ?Y ==> ptrm_fvs ?X = ptrm_fvs ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SimplyTyped.trm_simp", "Var ?x = Var ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("SimplyTyped.trm_simp", "Fst ?P = Fst ?Q ==> ?P = ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("SimplyTyped.trm_simp", "Snd ?P = Snd ?Q ==> ?P = ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("SimplyTyped.trm_prm_apply_compose",
     "?\<pi> \<cdot> ?\<sigma> \<cdot> ?A =
      (?\<pi> \<diamondop> ?\<sigma>) \<cdot> ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("PreSimplyTyped.ptrm_prm_apply_compose",
     "?\<pi> \<bullet> ?\<sigma> \<bullet> ?X =
      (?\<pi> \<diamondop> ?\<sigma>) \<bullet> ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("SimplyTyped.fvs_simp", "fvs (Fn ?x ?T ?A) = fvs ?A - {?x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("PreSimplyTyped.ptrm_infer_type_alpha_equiv",
     "?X \<approx> ?Y ==>
      ptrm_infer_type ?\<Gamma> ?X = ptrm_infer_type ?\<Gamma> ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("PreSimplyTyped.ptrm_alpha_equiv_prm",
     "?X \<approx> ?Y ==>
      ?\<pi> \<bullet> ?X \<approx> ?\<pi> \<bullet> ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SimplyTyped.trm_simp", "App ?A ?B = App ?C ?D ==> ?A = ?C",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("SimplyTyped.trm_simp", "App ?A ?B = App ?C ?D ==> ?B = ?D",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("SimplyTyped.trm_simp",
     "SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D ==> ?A = ?C",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("SimplyTyped.trm_simp",
     "SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D ==> ?B = ?D",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("SimplyTyped.trm_prm_simp",
     "?\<pi> \<cdot> App ?A ?B =
      App (?\<pi> \<cdot> ?A) (?\<pi> \<cdot> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SimplyTyped.trm_prm_simp",
     "?\<pi> \<cdot> SimplyTyped.Pair ?A ?B =
      SimplyTyped.Pair (?\<pi> \<cdot> ?A) (?\<pi> \<cdot> ?B)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("PreSimplyTyped.ptrm_alpha_equiv_transitive",
     "[| ?X \<approx> ?Y; ?Y \<approx> ?Z |] ==> ?X \<approx> ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("PreSimplyTyped.unitE",
     "[| PUnit \<approx> ?Y; ?Y = PUnit ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PreSimplyTyped.ptrm_swp_transfer",
     "[?a \<leftrightarrow> ?b] \<bullet> ?X \<approx> ?Y =
      ?X \<approx> [?a \<leftrightarrow> ?b] \<bullet> ?Y",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("SimplyTyped.trm_prm_simp",
     "?\<pi> \<cdot> Fn ?x ?T ?A = Fn (?\<pi> $ ?x) ?T (?\<pi> \<cdot> ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("PreSimplyTyped.varE",
     "[| PVar ?x \<approx> ?Y; ?Y = PVar ?x ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("SimplyTyped.var_prm_inaction",
     "[| ?a ~= ?x; ?b ~= ?x |]
      ==> [?a \<leftrightarrow> ?b] \<cdot> Var ?x = Var ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("PreSimplyTyped.ptrm_prm_unit_inaction",
     "[| ?a ~: ptrm_fvs ?X; ?b ~: ptrm_fvs ?X |]
      ==> [?a \<leftrightarrow> ?b] \<bullet> ?X \<approx> ?X",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_var 1)
           ))),
    ("SimplyTyped.trm_prm_unit_inaction",
     "[| ?a ~: fvs ?X; ?b ~: fvs ?X |]
      ==> [?a \<leftrightarrow> ?b] \<cdot> ?X = ?X",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("PreSimplyTyped.ptrm_alpha_equiv_fvs_transfer",
     "[| ?A \<approx> [?a \<leftrightarrow> ?b] \<bullet> ?B;
         ?a ~: ptrm_fvs ?B |]
      ==> ?b ~: ptrm_fvs ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app (template_hole 0, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("PreSimplyTyped.ptrm_prm_agreement_equiv",
     "(!!a. a : ds ?\<pi> ?\<sigma> ==> a ~: ptrm_fvs ?M) ==>
      ?\<pi> \<bullet> ?M \<approx> ?\<sigma> \<bullet> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SimplyTyped.trm_prm_agreement_equiv",
     "(!!a. a : ds ?\<pi> ?\<sigma> ==> a ~: fvs ?M) ==>
      ?\<pi> \<cdot> ?M = ?\<sigma> \<cdot> ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PreSimplyTyped.fstE",
     "[| PFst ?P \<approx> ?Y;
         !!B. [| ?Y = PFst B; ?P \<approx> B |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("PreSimplyTyped.sndE",
     "[| PSnd ?P \<approx> ?Y;
         !!B. [| ?Y = PSnd B; ?P \<approx> B |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("SimplyTyped.fn_eq",
     "[| ?x ~= ?y; ?x ~: fvs ?B;
         ?A = [?x \<leftrightarrow> ?y] \<cdot> ?B |]
      ==> Fn ?x ?T ?A = Fn ?y ?T ?B",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app (template_hole 4, template_var 2))
                )
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3)),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("PreSimplyTyped.ptrm_infer_type_swp",
     "[| ?a ~= ?b; ?b ~: ptrm_fvs ?X |]
      ==> ptrm_infer_type (?\<Gamma>(?a |-> ?\<tau>)) ?X =
          ptrm_infer_type (?\<Gamma>(?b |-> ?\<tau>))
           ([?a \<leftrightarrow> ?b] \<bullet> ?X)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app (template_hole 6, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 4),
               template_app (template_hole 2, template_var 0))),
           template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 3),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)),
             template_var 2))))),
    ("PreSimplyTyped.appE",
     "[| PApp ?A ?B \<approx> ?Y;
         !!B D.
            [| ?Y = PApp B D; ?A \<approx> B; ?B \<approx> D |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("PreSimplyTyped.pairE",
     "[| PPair ?A ?B \<approx> ?Y;
         !!B D.
            [| ?Y = PPair B D; ?A \<approx> B; ?B \<approx> D |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("PreSimplyTyped.ptrm_infer_type_swp_types",
     "?a ~= ?b ==>
      ptrm_infer_type (?\<Gamma>(?a |-> ?T, ?b |-> ?S)) ?X =
      ptrm_infer_type (?\<Gamma>(?a |-> ?S, ?b |-> ?T))
       ([?a \<leftrightarrow> ?b] \<bullet> ?X)",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 5),
                     template_app (template_hole 2, template_var 2))),
                 template_var 4),
               template_app (template_hole 2, template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 5),
                     template_app (template_hole 2, template_var 1))),
                 template_var 4),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4)),
             template_var 0))))),
    ("SimplyTyped.trm_simp",
     "Fn ?x ?T ?A = Fn ?y ?S ?B ==>
      ?x = ?y & ?T = ?S & ?A = ?B |
      ?x ~= ?y &
      ?T = ?S & ?x ~: fvs ?B & ?A = [?x \<leftrightarrow> ?y] \<cdot> ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 10, template_var 3),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 6, template_var 5),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 5),
                         template_app (template_hole 2, template_var 0)))),
                   template_app
                    (template_app (template_hole 10, template_var 3),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 2)),
                       template_var 0))))))
           ))),
    ("PreSimplyTyped.fnE",
     "[| PFn ?x ?T ?A \<approx> ?Y;
         !!B. [| ?Y = PFn ?x ?T B; ?A \<approx> B |] ==> ?P;
         !!b B.
            [| ?Y = PFn b ?T B; ?x ~= b;
               ?A \<approx> [?x \<leftrightarrow> b] \<bullet> B;
               ?x ~: ptrm_fvs B |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("SimplyTyped.trm_induct",
     "[| ?P Unit; !!x. ?P (Var x); !!A B. [| ?P A; ?P B |] ==> ?P (App A B);
         !!x T A. ?P A ==> ?P (Fn x T A);
         !!A B. [| ?P A; ?P B |] ==> ?P (SimplyTyped.Pair A B);
         !!A. ?P A ==> ?P (Fst A); !!A. ?P A ==> ?P (Snd A) |]
      ==> ?P ?M",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 9)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("SimplyTyped.trm_cases",
     "[| ?M = Unit ==> ?P ?M; !!x. ?M = Var x ==> ?P ?M;
         !!A B. ?M = App A B ==> ?P ?M; !!x T A. ?M = Fn x T A ==> ?P ?M;
         !!A B. ?M = SimplyTyped.Pair A B ==> ?P ?M;
         !!A. ?M = Fst A ==> ?P ?M; !!A. ?M = Snd A ==> ?P ?M |]
      ==> ?P ?M",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 9)],
          template_predicate
           (template_app (template_var 0, template_var 1))),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("SimplyTyped.trm_depth_induct",
     "[| ?P Unit; !!x. ?P (Var x);
         !!A B. (!!K. depth K < depth (App A B) ==> ?P K) ==> ?P (App A B);
         !!M x T A.
            (!!K. depth K < depth (Fn x T A) ==> ?P K) ==> ?P (Fn x T A);
         !!A B.
            (!!K. depth K < depth (SimplyTyped.Pair A B) ==> ?P K) ==>
            ?P (SimplyTyped.Pair A B);
         !!A. (!!K. depth K < depth (Fst A) ==> ?P K) ==> ?P (Fst A);
         !!A. (!!K. depth K < depth (Snd A) ==> ?P K) ==> ?P (Snd A) |]
      ==> ?P ?M",
     template_implication
      ([template_predicate
         (template_app (template_var 1, template_hole 12)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
