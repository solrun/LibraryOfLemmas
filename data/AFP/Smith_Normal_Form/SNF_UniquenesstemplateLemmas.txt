   [("SNF_Uniqueness.dvd_associated1",
     "EX u. u dvd (1::?'a) & ?a = u * ?b ==> ?a dvd ?b & ?b dvd ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))
           ))),
    ("SNF_Uniqueness.dvd_associated",
     "?a ~= (0::?'a) ==>
      (?a dvd ?b & ?b dvd ?a) = (EX u. u dvd (1::?'a) & ?a = u * ?b)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("SNF_Uniqueness.diagonal_dvd_Gcd_minors",
     "[| ?A : carrier_mat ?n ?m; Smith_normal_form_mat ?A |]
      ==> (PROD i = 0..<?k. ?A $$ (i, i)) dvd Gcd (minors ?A ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("SNF_Uniqueness.dvd_associated2",
     "[| ?a dvd ?b; ?b dvd ?a; ?a ~= (0::?'a) |]
      ==> EX u. u dvd (1::?'a) & ?a = u * ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SNF_Uniqueness.Gcd_minors_dvd_diagonal",
     "[| ?A : carrier_mat ?n ?m; Smith_normal_form_mat ?A;
         ?k <= min ?n ?m |]
      ==> Gcd (minors ?A ?k) dvd (PROD i = 0..<?k. ?A $$ (i, i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 0))),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("SNF_Uniqueness.Gcd_minors_A_dvd_Gcd_minors_PAQ",
     "[| ?A : carrier_mat ?m ?n; ?P : carrier_mat ?m ?m;
         ?Q : carrier_mat ?n ?n |]
      ==> Gcd (minors ?A ?k) dvd Gcd (minors (?P * ?A * ?Q) ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 5)),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("SNF_Uniqueness.exists_inj_ge_index",
     "[| ?S <= {0..<?n}; card ?S = ?k |]
      ==> EX f. inj_on f {0..<?k} &
                f ` {0..<?k} = ?S & (ALL i:{0..<?k}. i <= f i)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 2), template_var 0)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("SNF_Uniqueness.Smith_prod_zero_imp_last_zero",
     "[| ?A : carrier_mat ?m ?n; Smith_normal_form_mat ?A;
         (PROD j = 0..<Suc ?i. ?A $$ (j, j)) = (0::?'a); ?i < min ?m ?n |]
      ==> ?A $$ (?i, ?i) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 8, t_empty),
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 0))),
          template_hole 2),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 0)),
         template_hole 2))),
    ("SNF_Uniqueness.Gcd_minors_PAQ_dvd_Gcd_minors_A",
     "[| ?A : carrier_mat ?m ?n; ?P : carrier_mat ?m ?m;
         ?Q : carrier_mat ?n ?n; invertible_mat ?P; invertible_mat ?Q |]
      ==> Gcd (minors (?P * ?A * ?Q) ?k) dvd Gcd (minors ?A ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_var 5)),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 0)))
           ))),
    ("SNF_Uniqueness.Smith_normal_form_wrt_uniqueness_HOL_Analysis",
     "[| invertible ?P; invertible ?Q; ?P ** ?A ** ?Q = ?S;
         Smith_normal_form_wrt ?S ?\<Q>; invertible ?P'; invertible ?Q';
         ?P' ** ?A ** ?Q' = ?S'; Smith_normal_form_wrt ?S' ?\<Q> |]
      ==> ?S = ?S'",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 7)),
        template_predicate (template_app (template_hole 4, template_var 6)),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 7),
                template_var 5)),
            template_var 6),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 5)),
            template_var 1),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_equation (template_var 4, template_var 0))),
    ("SNF_Uniqueness.Gcd_minors_dvd_diag_PAQ",
     "[| ?A : carrier_mat ?m ?n; ?P : carrier_mat ?m ?m;
         ?Q : carrier_mat ?n ?n; Smith_normal_form_mat (?P * ?A * ?Q);
         ?k <= min ?m ?n |]
      ==> Gcd (minors ?A ?k) dvd
          (PROD i = 0..<?k. (?P * ?A * ?Q) $$ (i, i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 5)),
                template_var 1))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 0))),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("SNF_Uniqueness.diag_PAQ_dvd_Gcd_minors",
     "[| ?A : carrier_mat ?m ?n; ?P : carrier_mat ?m ?m;
         ?Q : carrier_mat ?n ?n; invertible_mat ?P; invertible_mat ?Q;
         Smith_normal_form_mat (?P * ?A * ?Q) |]
      ==> (PROD i = 0..<?k. (?P * ?A * ?Q) $$ (i, i)) dvd
          Gcd (minors ?A ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 3))
            ),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_var 5)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 0)))
           ))),
    ("SNF_Uniqueness.Gcd_minors_dvd",
     "[| ?P * ?A * ?Q = ?B; ?P : carrier_mat ?m ?m; ?A : carrier_mat ?m ?n;
         ?Q : carrier_mat ?n ?n; ?I <= {0..<dim_row ?A};
         ?J <= {0..<dim_col ?A}; card ?I = ?k; card ?J = ?k |]
      ==> Gcd (minors ?A ?k) dvd Determinant.det (submatrix ?B ?I ?J)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 14, template_var 8),
                template_var 7)),
            template_var 6),
          template_var 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 8),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 7),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 6),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_var 3))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_app (template_hole 8, template_var 7))),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_app (template_hole 7, template_var 7))),
        template_equation
         (template_app (template_hole 5, template_var 2), template_var 0),
        template_equation
         (template_app (template_hole 5, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2),
                 template_var 1)))
           ))),
    ("SNF_Uniqueness.Smith_normal_form_uniqueness_HOL_Analysis",
     "[| invertible ?P; invertible ?Q; ?P ** ?A ** ?Q = ?B;
         Smith_normal_form ?B; invertible ?P'; invertible ?Q';
         ?P' ** ?A ** ?Q' = ?B'; Smith_normal_form ?B';
         ?i < min (nrows ?A) (ncols ?A) |]
      ==> EX u. is_unit u &
                ?B $h mod_type_class.from_nat ?i $h
                mod_type_class.from_nat ?i =
                u *
                ?B' $h mod_type_class.from_nat ?i $h
                mod_type_class.from_nat ?i",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 7)),
        template_predicate
         (template_app (template_hole 18, template_var 6)),
        template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 7),
                template_var 5)),
            template_var 6),
          template_var 4),
        template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_predicate
         (template_app (template_hole 19, template_var 3)),
        template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 3),
                template_var 5)),
            template_var 2),
          template_var 1),
        template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 5)),
            template_app (template_hole 10, template_var 5)))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("SNF_Uniqueness.diagonal_imp_submatrix_element_not0",
     "[| diagonal_mat ?A; ?A : carrier_mat ?n ?m; card ?I = ?k;
         card ?J = ?k; ?I <= {0..<?n}; ?J <= {0..<?m}; ?b < ?k;
         EX i<?k. submatrix ?A ?I ?J $$ (i, ?b) ~= (0::?'a) |]
      ==> EX! i. i < ?k & submatrix ?A ?I ?J $$ (i, ?b) ~= (0::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 6),
              template_app
               (template_app (template_hole 15, template_var 5),
                template_var 4))
            ),
        template_equation
         (template_app (template_hole 13, template_var 3), template_var 2),
        template_equation
         (template_app (template_hole 13, template_var 1), template_var 2),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 5)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 4)),
        template_inequation (less_than, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("SNF_Uniqueness.diagonal_imp_submatrix0",
     "[| diagonal_mat ?A; ?A : carrier_mat ?n ?m; card ?I = ?k;
         card ?J = ?k; ALL row_index:?I. row_index < ?n;
         ALL col_index:?J. col_index < ?m; ?a < ?k; ?b < ?k |]
      ==> submatrix ?A ?I ?J $$ (?a, ?b) = (0::?'a) |
          submatrix ?A ?I ?J $$ (?a, ?b) = ?A $$ (pick ?I ?a, pick ?I ?a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 7),
              template_app
               (template_app (template_hole 11, template_var 6),
                template_var 5))
            ),
        template_equation
         (template_app (template_hole 9, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 9, template_var 2), template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2), t_empty)
            ),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 7),
                           template_var 4),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0))),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 7),
                         template_var 4),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 4, template_var 7),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)))))
           ))),
    ("SNF_Uniqueness.submatrix_index_exists",
     "[| ?A : carrier_mat ?n ?m; card ?I = ?k; card ?J = ?k; ?a : ?I;
         ?b : ?J; 0 < ?k; ?I <= {0..<?n}; ?J <= {0..<?m} |]
      ==> EX a' b'.
             a' < ?k &
             b' < ?k &
             submatrix ?A ?I ?J $$ (a', b') = ?A $$ (?a, ?b) &
             ?a = pick ?I a' & ?b = pick ?J b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 7),
              template_app
               (template_app (template_hole 14, template_var 6),
                template_var 5))
            ),
        template_equation
         (template_app (template_hole 12, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 12, template_var 2), template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 9, template_var 3),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 7, template_hole 9),
            template_var 6)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 7, template_hole 9),
            template_var 5))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("SNF_Uniqueness.det_minors_diagonal2",
     "[| diagonal_mat ?A; ?A : carrier_mat ?n ?m; card ?I = ?k;
         card ?J = ?k; ?I <= {0..<?n}; ?J <= {0..<?m}; 0 < ?k |]
      ==> Determinant.det (submatrix ?A ?I ?J) = (0::?'a) |
          (EX S<={0..<min ?n ?m}.
              card S = ?k &
              S = ?I &
              (Determinant.det (submatrix ?A ?I ?J) =
               (PROD i:S. ?A $$ (i, i)) |
               Determinant.det (submatrix ?A ?I ?J) =
               - (PROD i:S. ?A $$ (i, i))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 5),
              template_app
               (template_app (template_hole 19, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 17, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 17, template_var 0), template_var 1),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 15, template_hole 14),
            template_var 4)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 15, template_hole 14),
            template_var 3)),
        template_inequation (less_than, template_hole 14, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_app (template_hole 9, template_var 5),
                         template_var 2),
                       template_var 0))),
                 template_hole 8)),
             template_app (template_hole 7, t_empty))
           ))),
    ("SNF_Uniqueness.Smith_normal_form_uniqueness",
     "[| ?A : carrier_mat ?m ?n; ?P : carrier_mat ?m ?m;
         ?Q : carrier_mat ?n ?n; invertible_mat ?P; invertible_mat ?Q;
         ?P * ?A * ?Q = ?B; Smith_normal_form_mat ?B;
         ?P' : carrier_mat ?m ?m; ?Q' : carrier_mat ?n ?n;
         invertible_mat ?P'; invertible_mat ?Q'; ?P' * ?A * ?Q' = ?B';
         Smith_normal_form_mat ?B'; ?i < min ?m ?n |]
      ==> EX u. is_unit u & ?B $$ (?i, ?i) = u * ?B' $$ (?i, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 9),
              template_app
               (template_app (template_hole 14, template_var 8),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 6),
              template_app
               (template_app (template_hole 14, template_var 8),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app (template_hole 14, template_var 7),
                template_var 7))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 6)),
        template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 11, template_var 6),
                template_var 9)),
            template_var 5),
          template_var 4),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_var 8),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_app (template_hole 14, template_var 7),
                template_var 7))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 9)),
            template_var 2),
          template_var 1),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 8),
            template_var 7))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("SNF_Uniqueness.det_minors_diagonal",
     "[| diagonal_mat ?A; ?A : carrier_mat ?n ?m; card ?I = ?k;
         card ?J = ?k; ?I <= {0..<?n}; ?J <= {0..<?m}; 0 < ?k |]
      ==> Determinant.det (submatrix ?A ?I ?J) = (0::?'a) |
          (EX xs.
              (Determinant.det (submatrix ?A ?I ?J) = prod_list xs |
               Determinant.det (submatrix ?A ?I ?J) = - prod_list xs) &
              set xs
              <= {?A $$ (i, i) |i.
                  i < min ?n ?m & ?A $$ (i, i) ~= (0::?'a)} &
              length xs = ?k)",
     template_implication
      ([template_predicate
         (template_app (template_hole 26, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 5),
              template_app
               (template_app (template_hole 24, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 22, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 22, template_var 0), template_var 1),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 20, template_hole 19),
            template_var 4)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 20, template_hole 19),
            template_var 3)),
        template_inequation (less_than, template_hole 19, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app (template_hole 14, template_var 5),
                         template_var 2),
                       template_var 0))),
                 template_hole 13)),
             template_app (template_hole 12, t_empty))
           ))),
    ("SNF_Uniqueness.mat_delete_submatrix_insert",
     "[| ?A : carrier_mat ?n ?m; card ?I = ?k; card ?J = ?k; ?I <= {0..<?n};
         ?J <= {0..<?m}; ?a < ?n; ?b < ?m; ?k < min ?n ?m; ?a ~: ?I;
         ?b ~: ?J; ?a' < Suc ?k; ?b' < Suc ?k; pick (insert ?a ?I) ?a' = ?a;
         pick (insert ?b ?J) ?b' = ?b |]
      ==> mat_delete (submatrix ?A (insert ?a ?I) (insert ?b ?J)) ?a' ?b' =
          submatrix ?A ?I ?J",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 9),
              template_app
               (template_app (template_hole 15, template_var 8),
                template_var 7))
            ),
        template_equation
         (template_app (template_hole 13, template_var 6), template_var 5),
        template_equation
         (template_app (template_hole 13, template_var 4), template_var 5),
        template_inequation
         (less_equals, template_var 6,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 8)),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 7)),
        template_inequation (less_than, template_var 3, template_var 8),
        template_inequation (less_than, template_var 2, template_var 7),
        template_inequation
         (less_than, template_var 5,
          template_app
           (template_app (template_hole 8, template_var 8),
            template_var 7)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 4)
                )
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 5)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 6)),
            template_var 1),
          template_var 3),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 4)),
            template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 9),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 6)),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 4))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 9),
             template_var 6),
           template_var 4)))),
    ("SNF_Uniqueness.Smith_normal_form_uniqueness_aux",
     "[| ?A : carrier_mat ?m ?n; ?P : carrier_mat ?m ?m;
         ?Q : carrier_mat ?n ?n; invertible_mat ?P; invertible_mat ?Q;
         ?P * ?A * ?Q = ?B; Smith_normal_form_mat ?B;
         ?P' : carrier_mat ?m ?m; ?Q' : carrier_mat ?n ?n;
         invertible_mat ?P'; invertible_mat ?Q'; ?P' * ?A * ?Q' = ?B';
         Smith_normal_form_mat ?B'; ?k < min ?m ?n |]
      ==> ALL i<=?k.
             ?B $$ (i, i) dvd ?B' $$ (i, i) &
             ?B' $$ (i, i) dvd ?B $$ (i, i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 9),
              template_app
               (template_app (template_hole 13, template_var 8),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_app
               (template_app (template_hole 13, template_var 8),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app (template_hole 13, template_var 7),
                template_var 7))
            ),
        template_predicate
         (template_app (template_hole 12, template_var 6)),
        template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 10, template_var 6),
                template_var 9)),
            template_var 5),
          template_var 4),
        template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app
               (template_app (template_hole 13, template_var 8),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 7),
                template_var 7))
            ),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 9)),
            template_var 2),
          template_var 1),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 7, template_var 8),
            template_var 7))],
       template_predicate (template_app (template_hole 6, t_empty))))]
