   [("Diagonal_To_Smith_JNF.diagonal_step_JNF_dim",
     "?A : carrier_mat ?m ?n ==>
      diagonal_step_JNF ?A ?i ?j ?d ?v : carrier_mat ?m ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 6),
              template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 4))
           ))),
    ("Diagonal_To_Smith_JNF.HMA_Diagonal_to_Smith_row_i_PQ",
     "?i < min CARD(?'nr) CARD(?'nc) ==>
      ((=) ===> HMA_M3 ===> HMA_M3) (Diagonal_to_Smith_row_i_PQ_JNF ?i)
       (Diagonal_to_Smith_row_i_PQ ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8)),
            template_app (template_hole 7, template_hole 6)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2)),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Diagonal_To_Smith_JNF.HMA_diagonal_to_Smith_aux_PQ_JNF",
     "ALL j:set ?xs. j < min CARD(?'nr) CARD(?'nc) ==>
      ((=) ===> HMA_M3 ===> HMA_M3) (diagonal_to_Smith_aux_PQ_JNF ?xs)
       (diagonal_to_Smith_aux_PQ ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2)),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_step_PQ_JNF_dim",
     "[| ?A : carrier_mat ?m ?n;
         diagonal_step_PQ_JNF ?A ?i ?j ?bezout = (?P, ?Q) |]
      ==> ?P : carrier_mat ?m ?m & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 2, template_var 7),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 6))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_app (template_hole 4, template_var 5),
                 template_var 5)))
           ))),
    ("Diagonal_To_Smith_JNF.HMA_diagonal_to_Smith_i_PQ",
     "[| ?i < min CARD(?'nr) CARD(?'nc);
         ALL j:set ?xs. j < min CARD(?'nr) CARD(?'nc) |]
      ==> ((=) ===> HMA_M3 ===> HMA_M3) (diagonal_to_Smith_i_PQ_JNF ?xs ?i)
           (diagonal_to_Smith_i_PQ ?xs ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10)),
            template_app (template_hole 9, template_hole 8))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_dim",
     "[| ?A : carrier_mat ?m ?n;
         diagonal_to_Smith_PQ_JNF ?A ?bezout = (?P, ?S, ?Q) |]
      ==> ?P : carrier_mat ?m ?m &
          ?S : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 6), template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 5))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app
                    (template_app (template_hole 5, template_var 5),
                     template_var 4))),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 4))))
           ))),
    ("Diagonal_To_Smith_JNF.HMA_diagonal_step",
     "[| ?i < min CARD(?'nr) CARD(?'nc); ?j < min CARD(?'nr) CARD(?'nc) |]
      ==> (Mod_Type_Connect.HMA_M ===>
           (=) ===> (=) ===> Mod_Type_Connect.HMA_M)
           (%A. diagonal_step_JNF A ?i ?j) (%B. diagonal_step B ?i ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9)),
            template_app (template_hole 8, template_hole 7))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9)),
            template_app (template_hole 8, template_hole 7)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 3),
                     template_hole 5))),
               t_empty),
             t_empty)
           ))),
    ("Diagonal_To_Smith_JNF.type_to_set1",
     "[| EX Rep Abs. type_definition Rep Abs {0..<int ?m};
         EX Rep Abs. type_definition Rep Abs {0..<int ?n}; 1 < ?m; 1 < ?n |]
      ==> class.nontriv TYPE(?'b)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (template_app (template_hole 1, template_hole 0)))),
    ("Diagonal_To_Smith_JNF.type_to_set2",
     "[| EX Rep Abs. type_definition Rep Abs {0..<int ?m};
         EX Rep Abs. type_definition Rep Abs {0..<int ?n}; 1 < ?m; 1 < ?n |]
      ==> class.nontriv TYPE(?'c)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (template_app (template_hole 1, template_hole 0)))),
    ("Diagonal_To_Smith_JNF.HMA_diagonal_step_PQ",
     "[| ?i < min CARD(?'nr) CARD(?'nc); ?k < min CARD(?'nr) CARD(?'nc) |]
      ==> (Mod_Type_Connect.HMA_M ===>
           (=) ===> rel_prod Mod_Type_Connect.HMA_M Mod_Type_Connect.HMA_M)
           (%A. diagonal_step_PQ_JNF A ?i ?k)
           (%A. diagonal_step_PQ A ?i ?k)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_hole 11)),
            template_app (template_hole 10, template_hole 9))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_hole 11)),
            template_app (template_hole 10, template_hole 9)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 2))),
               t_empty),
             t_empty)
           ))),
    ("Diagonal_To_Smith_JNF.type_to_set1",
     "[| EX Rep Abs. type_definition Rep Abs {0..<int ?m};
         EX Rep Abs. type_definition Rep Abs {0..<int ?n}; 1 < ?m; 1 < ?n |]
      ==> ?m = CARD(?'b)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("Diagonal_To_Smith_JNF.type_to_set2",
     "[| EX Rep Abs. type_definition Rep Abs {0..<int ?m};
         EX Rep Abs. type_definition Rep Abs {0..<int ?n}; 1 < ?m; 1 < ?n |]
      ==> ?n = CARD(?'c)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("Diagonal_To_Smith_JNF.Diagonal_to_Smith_row_i_PQ_JNF_dim",
     "[| ?P' : carrier_mat ?m ?m &
         ?A' : carrier_mat ?m ?n & ?Q' : carrier_mat ?n ?n;
         Diagonal_to_Smith_row_i_PQ_JNF ?i ?bezout (?P', ?A', ?Q') =
         (?P, ?A, ?Q) |]
      ==> ?P : carrier_mat ?m ?m &
          ?A : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 8))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 7),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_var 6))),
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 6))))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_app
             (template_app (template_hole 1, template_var 9),
              template_app
               (template_app (template_hole 0, template_var 7),
                template_var 5))),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 8),
                   template_var 8))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 8),
                     template_var 6))),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 6))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_aux_PQ_JNF_dim",
     "[| ?P' : carrier_mat ?m ?m &
         ?A' : carrier_mat ?m ?n & ?Q' : carrier_mat ?n ?n;
         diagonal_to_Smith_aux_PQ_JNF ?xs ?bezout (?P', ?A', ?Q') =
         (?P, ?A, ?Q) |]
      ==> ?P : carrier_mat ?m ?m &
          ?A : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 9),
                  template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 8))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 7),
                    template_app
                     (template_app (template_hole 4, template_var 8),
                      template_var 6))),
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 6))))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_app
             (template_app (template_hole 1, template_var 9),
              template_app
               (template_app (template_hole 0, template_var 7),
                template_var 5))),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 8),
                   template_var 8))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 8),
                     template_var 6))),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 6))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_i_PQ_JNF_dim",
     "[| ?P' : carrier_mat ?m ?m &
         ?A' : carrier_mat ?m ?n & ?Q' : carrier_mat ?n ?n;
         diagonal_to_Smith_i_PQ_JNF ?xs ?i ?bezout (?P', ?A', ?Q') =
         (?P, ?A, ?Q) |]
      ==> ?P : carrier_mat ?m ?m &
          ?A : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 10),
                  template_app
                   (template_app (template_hole 4, template_var 9),
                    template_var 9))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 8),
                    template_app
                     (template_app (template_hole 4, template_var 9),
                      template_var 7))),
                template_app
                 (template_app (template_hole 5, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 7))))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_var 3),
            template_app
             (template_app (template_hole 1, template_var 10),
              template_app
               (template_app (template_hole 0, template_var 8),
                template_var 6))),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 9),
                   template_var 9))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 9),
                     template_var 7))),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 7),
                   template_var 7))))
           ))),
    ("Diagonal_To_Smith_JNF.HMA_diagonal_to_Smith_i_PQ_aux",
     "[| ?i < min CARD(?'nr) CARD(?'nc);
         ALL j:set ?xs. j < min CARD(?'nr) CARD(?'nc);
         HMA_M3 (?P, ?A, ?Q) (?P', ?A', ?Q') |]
      ==> HMA_M3 (diagonal_to_Smith_i_PQ_JNF ?xs ?i ?bezout (?P, ?A, ?Q))
           (diagonal_to_Smith_i_PQ ?xs ?i ?bezout (?P', ?A', ?Q'))",
     template_implication
      ([template_inequation
         (less_than, template_var 8,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_hole 11)),
            template_app (template_hole 10, template_hole 9))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 7)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4))),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 7),
                     template_var 8),
                   template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4)))),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 7),
                   template_var 8),
                 template_var 0),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF",
     "[| isDiagonal_mat ?A; is_bezout_ext ?bezout; ?A : carrier_mat ?m ?n;
         (?P, ?S, ?Q) = diagonal_to_Smith_PQ_JNF ?A ?bezout; 1 < ?n;
         1 < ?m |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P &
          invertible_mat ?Q &
          Smith_normal_form_mat ?S &
          ?P : carrier_mat ?m ?m &
          ?S : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 6)),
        template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 6),
              template_app
               (template_app (template_hole 11, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 7, template_var 6),
            template_var 5)),
        template_inequation (less_than, template_hole 5, template_var 3),
        template_inequation (less_than, template_hole 5, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 6)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 12, template_var 2),
                         template_app
                          (template_app (template_hole 11, template_var 4),
                           template_var 4))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 12, template_var 1),
                           template_app
                            (template_app
                              (template_hole 11, template_var 4),
                             template_var 3))),
                       template_app
                        (template_app (template_hole 12, template_var 0),
                         template_app
                          (template_app (template_hole 11, template_var 3),
                           template_var 3))))))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_with_types",
     "[| ?A : carrier_mat CARD(?'nr) CARD(?'nc);
         ?S : carrier_mat CARD(?'nr) CARD(?'nc);
         ?P : carrier_mat CARD(?'nr) CARD(?'nr);
         ?Q : carrier_mat CARD(?'nc) CARD(?'nc);
         diagonal_to_Smith_PQ_JNF ?A ?bezout = (?P, ?S, ?Q);
         isDiagonal_mat ?A; is_bezout_ext ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P & invertible_mat ?Q & Smith_normal_form_mat ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 14, template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 12, template_hole 11)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 0),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1))),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_mod_ring_with_types",
     "[| ?A : carrier_mat CARD(?'nr mod_ring) CARD(?'nc mod_ring);
         ?S : carrier_mat CARD(?'nr mod_ring) CARD(?'nc mod_ring);
         ?P : carrier_mat CARD(?'nr mod_ring) CARD(?'nr mod_ring);
         ?Q : carrier_mat CARD(?'nc mod_ring) CARD(?'nc mod_ring);
         diagonal_to_Smith_PQ_JNF ?A ?bezout = (?P, ?S, ?Q);
         isDiagonal_mat ?A; is_bezout_ext ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P & invertible_mat ?Q & Smith_normal_form_mat ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 14, template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 12, template_hole 11)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 0),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1))),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_internalized_first",
     "[| class.nontriv TYPE(?'a); ?A : carrier_mat CARD(?'a) CARD(?'nc);
         ?S : carrier_mat CARD(?'a) CARD(?'nc);
         ?P : carrier_mat CARD(?'a) CARD(?'a);
         ?Q : carrier_mat CARD(?'nc) CARD(?'nc);
         diagonal_to_Smith_PQ_JNF ?A ?bezout = (?P, ?S, ?Q);
         isDiagonal_mat ?A; is_bezout_ext ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P & invertible_mat ?Q & Smith_normal_form_mat ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_hole 17)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 14, template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 12, template_hole 11)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 0),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1))),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_internalized",
     "[| class.nontriv TYPE(?'c); class.nontriv TYPE(?'a);
         ?A : carrier_mat CARD(?'a) CARD(?'c);
         ?S : carrier_mat CARD(?'a) CARD(?'c);
         ?P : carrier_mat CARD(?'a) CARD(?'a);
         ?Q : carrier_mat CARD(?'c) CARD(?'c);
         diagonal_to_Smith_PQ_JNF ?A ?bezout = (?P, ?S, ?Q);
         isDiagonal_mat ?A; is_bezout_ext ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P & invertible_mat ?Q & Smith_normal_form_mat ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_hole 19)),
        template_predicate
         (template_app (template_hole 18, template_hole 17)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 14, template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 12, template_hole 11)),
                template_app (template_hole 12, template_hole 11)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 0),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1))),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_canceled_both",
     "[| {0..<int ?n} ~= {}; {0..<int ?m} ~= {}; 1 < ?m; 1 < ?n;
         isDiagonal_mat ?A; is_bezout_ext ?bezout; ?A : carrier_mat ?m ?n;
         (?P, ?S, ?Q) = diagonal_to_Smith_PQ_JNF ?A ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P &
          invertible_mat ?Q &
          Smith_normal_form_mat ?S &
          ?P : carrier_mat ?m ?m &
          ?S : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 18, template_hole 17),
                template_app (template_hole 16, template_var 6)),
              template_hole 15)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 18, template_hole 17),
                template_app (template_hole 16, template_var 5)),
              template_hole 15)
            ),
        template_inequation (less_than, template_hole 13, template_var 5),
        template_inequation (less_than, template_hole 13, template_var 6),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_var 6))
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 10, template_var 2),
                         template_app
                          (template_app (template_hole 9, template_var 5),
                           template_var 5))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_app
                            (template_app (template_hole 9, template_var 5),
                             template_var 6))),
                       template_app
                        (template_app (template_hole 10, template_var 0),
                         template_app
                          (template_app (template_hole 9, template_var 6),
                           template_var 6))))))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_canceled_first",
     "[| EX Rep Abs. type_definition Rep Abs {0..<int ?n};
         {0..<int ?m} ~= {}; 1 < ?m; 1 < ?n; isDiagonal_mat ?A;
         is_bezout_ext ?bezout; ?A : carrier_mat ?m ?n;
         (?P, ?S, ?Q) = diagonal_to_Smith_PQ_JNF ?A ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P &
          invertible_mat ?Q &
          Smith_normal_form_mat ?S &
          ?P : carrier_mat ?m ?m &
          ?S : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 20, template_hole 19),
                template_app (template_hole 18, template_var 5)),
              template_hole 15)
            ),
        template_inequation (less_than, template_hole 13, template_var 5),
        template_inequation (less_than, template_hole 13, template_var 6),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_var 6))
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 10, template_var 2),
                         template_app
                          (template_app (template_hole 9, template_var 5),
                           template_var 5))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_app
                            (template_app (template_hole 9, template_var 5),
                             template_var 6))),
                       template_app
                        (template_app (template_hole 10, template_var 0),
                         template_app
                          (template_app (template_hole 9, template_var 6),
                           template_var 6))))))))
           ))),
    ("Diagonal_To_Smith_JNF.diagonal_to_Smith_PQ_JNF_local_typedef",
     "[| EX Rep Abs. type_definition Rep Abs {0..<int ?m};
         EX Rep Abs. type_definition Rep Abs {0..<int ?n}; 1 < ?m; 1 < ?n;
         isDiagonal_mat ?A; is_bezout_ext ?bezout; ?A : carrier_mat ?m ?n;
         (?P, ?S, ?Q) = diagonal_to_Smith_PQ_JNF ?A ?bezout |]
      ==> ?S = ?P * ?A * ?Q &
          invertible_mat ?P &
          invertible_mat ?Q &
          Smith_normal_form_mat ?S &
          ?P : carrier_mat ?m ?m &
          ?S : carrier_mat ?m ?n & ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_inequation (less_than, template_hole 13, template_var 6),
        template_inequation (less_than, template_hole 13, template_var 5),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 6),
                template_var 5))
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 4)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 10, template_var 2),
                         template_app
                          (template_app (template_hole 9, template_var 6),
                           template_var 6))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_app
                            (template_app (template_hole 9, template_var 6),
                             template_var 5))),
                       template_app
                        (template_app (template_hole 10, template_var 0),
                         template_app
                          (template_app (template_hole 9, template_var 5),
                           template_var 5))))))))
           )))]
