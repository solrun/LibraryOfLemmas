   [("Rings2_Extended.bezout_imp_all_fin_gen_ideals_are_principal",
     "finitely_generated_ideal ?I ==> principal_ideal ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Rings2_Extended.ideal_generated_subset2",
     "ALL b:?B. b : ideal_generated ?A ==>
      ideal_generated ?B <= ideal_generated ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Rings2_Extended.ideal_generated_minus",
     "?a : ideal_generated (?S - {?a}) ==>
      ideal_generated ?S = ideal_generated (?S - {?a})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 1))))
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)))))),
    ("Rings2_Extended.ideal_generated_dvd_eq",
     "[| ?a dvd ?b; ?a : ?S; ?a ~= ?b |]
      ==> ideal_generated ?S = ideal_generated (?S - {?b})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("Rings2_Extended.ideal_generated_dvd_eq_diff_set",
     "[| ?i : ?I; ?i ~: ?J; ALL j:?J. ?i dvd j; finite ?J |]
      ==> ideal_generated ?I = ideal_generated (?I - ?J)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0), t_empty)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Rings2_Extended.sum_two_elements'",
     "[| (SUM i:{?a, ?b}. ?f i * i) = ?d;
         !!p q. ?d = p * ?a + q * ?b ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, t_empty),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2))),
          template_var 1),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0)))]
