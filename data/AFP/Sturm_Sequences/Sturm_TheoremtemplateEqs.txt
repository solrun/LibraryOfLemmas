   [("Sturm_Theorem.count_roots_correct",
     "count_roots ?p = card {x. poly ?p x = 0}",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Sturm_Theorem.count_roots_above_correct",
     "count_roots_above ?p ?a = card {x. ?a < x & poly ?p x = 0}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Sturm_Theorem.count_roots_below_correct",
     "count_roots_below ?p ?a = card {x. x <= ?a & poly ?p x = 0}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Sturm_Theorem.count_roots_code",
     "count_roots ?p =
      (if ?p = 0 then 0
       else let ps = sturm ?p
            in sign_changes_neg_inf ps - sign_changes_inf ps)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_dunno)),
    ("Sturm_Theorem.count_roots_between_correct",
     "count_roots_between ?p ?a ?b =
      card {x. ?a < x & x <= ?b & poly ?p x = 0}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("Sturm_Theorem.count_roots_above_code",
     "count_roots_above ?p ?a =
      (let q = pderiv ?p
       in if ?p = 0 then 0
          else if poly ?p ?a ~= 0 | poly q ?a ~= 0
               then let ps = sturm ?p
                    in sign_changes ps ?a - sign_changes_inf ps
               else let ps = sturm_squarefree ?p
                    in sign_changes ps ?a - sign_changes_inf ps)",
     template_equation
      (template_app
        (template_app (template_hole 17, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 1)),
         t_empty))),
    ("Sturm_Theorem.count_roots_below_code",
     "count_roots_below ?p ?a =
      (let q = pderiv ?p
       in if ?p = 0 then 0
          else if poly ?p ?a ~= 0 | poly q ?a ~= 0
               then let ps = sturm ?p
                    in sign_changes_neg_inf ps - sign_changes ps ?a
               else let ps = sturm_squarefree ?p
                    in sign_changes_neg_inf ps - sign_changes ps ?a)",
     template_equation
      (template_app
        (template_app (template_hole 17, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 1)),
         t_empty))),
    ("Sturm_Theorem.count_roots_between",
     "count_roots_between ?p ?a ?b =
      (let q = pderiv ?p
       in if ?b < ?a | ?p = 0 then 0
          else if (poly ?p ?a ~= 0 | poly q ?a ~= 0) &
                  (poly ?p ?b ~= 0 | poly q ?b ~= 0)
               then let ps = sturm ?p
                    in sign_changes ps ?a - sign_changes ps ?b
               else let ps = sturm_squarefree ?p
                    in sign_changes ps ?a - sign_changes ps ?b)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 17,
           template_app (template_hole 16, template_var 2)),
         t_empty)))]
