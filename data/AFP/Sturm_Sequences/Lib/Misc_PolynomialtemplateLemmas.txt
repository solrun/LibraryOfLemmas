   [("Misc_Polynomial.unit_factor_field", "unit_factor ?x = ?x",
     template_equation
      (template_app (template_hole 0, template_var 0), template_var 0)),
    ("Misc_Polynomial.poly_inf_0_iff",
     "(poly_inf ?p = (0::?'a)) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Misc_Polynomial.poly_inf_0_iff",
     "(poly_neg_inf ?p = (0::?'a)) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Misc_Polynomial.normalize_field",
     "normalize ?x = (if ?x = (0::?'a) then 0::?'a else (1::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 1)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Misc_Polynomial.poly_lim_inf",
     "\<forall>\<^sub>F x in at_top. sgn (poly ?p x) = poly_inf ?p",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)
         )),
    ("Misc_Polynomial.poly_lim_neg_inf",
     "\<forall>\<^sub>F x in at_bot. sgn (poly ?p x) = poly_neg_inf ?p",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)
         )),
    ("Misc_Polynomial.poly_inf_mult",
     "poly_inf (?p * ?q) = poly_inf ?p * poly_inf ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc_Polynomial.poly_inf_mult",
     "poly_neg_inf (?p * ?q) = poly_neg_inf ?p * poly_neg_inf ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc_Polynomial.normalize_field_eq_1",
     "?x ~= (0::?'a) ==> normalize ?x = (1::?'a)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Misc_Polynomial.poly_neq_0_at_infinity",
     "?p ~= 0 ==> \<forall>\<^sub>F x in at_infinity. poly ?p x ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0)
           ))),
    ("Misc_Polynomial.poly_limit_aux",
     "((%x. poly ?p x / x ^ degree ?p) \<longlongrightarrow> lead_coeff ?p)
       at_infinity",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 3, template_var 0)))),
           template_hole 0)
         )),
    ("Misc_Polynomial.coprime_imp_no_common_roots",
     "coprime ?p ?q ==> ~ (poly ?p ?x = (0::?'a) & poly ?q ?x = (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 0)),
                     template_hole 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_hole 0))
               )
           ))),
    ("Misc_Polynomial.poly_neighbourhood_without_roots",
     "?p ~= 0 ==> \<forall>\<^sub>F x in at ?x\<^sub>0. poly ?p x ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Misc_Polynomial.poly_different_sign_imp_root'",
     "sgn (poly ?p ?a) ~= sgn (poly ?p ?b) ==> EX x. poly ?p x = 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Misc_Polynomial.poly_div_gcd_squarefree",
     "?p ~= 0 ==>
      coprime (?p div gcd ?p (pderiv ?p))
       (pderiv (?p div gcd ?p (pderiv ?p)))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 0)))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Misc_Polynomial.poly_pos",
     "(ALL x. 0 < poly ?p x) = (poly_inf ?p = 1 & (ALL x. poly ?p x ~= 0))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             template_app (template_hole 8, t_empty))
           ))),
    ("Misc_Polynomial.poly_div_gcd_squarefree_aux",
     "pderiv ?p ~= 0 ==>
      coprime (?p div gcd ?p (pderiv ?p))
       (pderiv (?p div gcd ?p (pderiv ?p)))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app (template_hole 4, template_var 0)))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app (template_hole 4, template_var 0)))))
           ))),
    ("Misc_Polynomial.poly_at_top_at_top",
     "[| 1 <= degree ?p; 0 < lead_coeff ?p |]
      ==> filterlim (poly ?p) at_top at_top",
     template_implication
      ([template_inequation
         (less_equals, template_hole 7,
          template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app (template_hole 6, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_hole 0),
             template_hole 0)
           ))),
    ("Misc_Polynomial.poly_at_bot_at_top",
     "[| 1 <= degree ?p; lead_coeff ?p < 0 |]
      ==> filterlim (poly ?p) at_bot at_top",
     template_implication
      ([template_inequation
         (less_equals, template_hole 8,
          template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app (template_hole 7, template_var 0)),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_hole 1),
             template_hole 0)
           ))),
    ("Misc_Polynomial.poly_div_gcd_squarefree",
     "?p ~= 0 ==>
      (poly (?p div gcd ?p (pderiv ?p)) ?x = (0::?'a)) =
      (poly ?p ?x = (0::?'a))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 1, template_var 1)))),
             template_var 0),
           template_hole 0),
         template_equation
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0),
           template_hole 0)))),
    ("Misc_Polynomial.poly_neighbourhood_same_sign",
     "poly ?p ?x\<^sub>0 ~= 0 ==>
      \<forall>\<^sub>F x in at ?x\<^sub>0.
         sgn (poly ?p x) = sgn (poly ?p ?x\<^sub>0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Misc_Polynomial.poly_div_gcd_squarefree_aux",
     "pderiv ?p ~= 0 ==>
      (poly (?p div gcd ?p (pderiv ?p)) ?x = (0::?'a)) =
      (poly ?p ?x = (0::?'a))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 7, template_var 1)))),
             template_var 0),
           template_hole 0),
         template_equation
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_hole 0)))),
    ("Misc_Polynomial.pderiv_div",
     "[| ?q dvd ?p; ?q ~= 0 |]
      ==> ?q * ?q dvd ?q * pderiv ?p - ?p * pderiv ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Misc_Polynomial.poly_div",
     "[| poly ?q ?x ~= (0::?'a); ?q dvd ?p |]
      ==> poly (?p div ?q) ?x = poly ?p ?x / poly ?q ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1))))),
    ("Misc_Polynomial.poly_pos_less",
     "(ALL x<?a. 0 < poly ?p x) =
      (poly_neg_inf ?p = 1 & (ALL x<?a. poly ?p x ~= 0))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             template_app (template_hole 9, t_empty))
           ))),
    ("Misc_Polynomial.poly_pos_greater",
     "(ALL x>?a. 0 < poly ?p x) =
      (poly_inf ?p = 1 & (ALL x>?a. poly ?p x ~= 0))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             template_app (template_hole 9, t_empty))
           ))),
    ("Misc_Polynomial.poly_pos_leq",
     "(ALL x<=?a. 0 < poly ?p x) =
      (poly_neg_inf ?p = 1 & (ALL x<=?a. poly ?p x ~= 0))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             template_app (template_hole 10, t_empty))
           ))),
    ("Misc_Polynomial.poly_pos_geq",
     "(ALL x>=?a. 0 < poly ?p x) =
      (poly_inf ?p = 1 & (ALL x>=?a. poly ?p x ~= 0))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             template_app (template_hole 10, t_empty))
           ))),
    ("Misc_Polynomial.pderiv_div",
     "[| ?q dvd ?p; ?q ~= 0 |]
      ==> pderiv (?p div ?q) =
          (?q * pderiv ?p - ?p * pderiv ?q) div (?q * ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 3, template_var 1)))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1))))),
    ("Misc_Polynomial.poly_at_top_or_bot_at_bot",
     "[| 1 <= degree ?p; 0 < lead_coeff ?p |]
      ==> filterlim (poly ?p) (if even (degree ?p) then at_top else at_bot)
           at_bot",
     template_implication
      ([template_inequation
         (less_equals, template_hole 13,
          template_app (template_hole 12, template_var 0)),
        template_inequation
         (less_than, template_hole 10,
          template_app
           (template_app (template_hole 9, template_var 0),
            template_app (template_hole 12, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty),
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3, template_hole 2))),
                       template_app (template_hole 12, template_var 0))),
                   template_hole 1),
                 template_hole 0)),
             template_hole 0)
           ))),
    ("Misc_Polynomial.poly_at_bot_or_top_at_bot",
     "[| 1 <= degree ?p; lead_coeff ?p < 0 |]
      ==> filterlim (poly ?p) (if even (degree ?p) then at_bot else at_top)
           at_bot",
     template_implication
      ([template_inequation
         (less_equals, template_hole 13,
          template_app (template_hole 12, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 10, template_var 0),
            template_app (template_hole 12, template_var 0)),
          template_hole 9)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty),
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3, template_hole 2))),
                       template_app (template_hole 12, template_var 0))),
                   template_hole 1),
                 template_hole 0)),
             template_hole 1)
           ))),
    ("Misc_Polynomial.poly_different_sign_imp_root",
     "[| ?a < ?b; sgn (poly ?p ?a) ~= sgn (poly ?p ?b) |]
      ==> EX x>=?a. x <= ?b & poly ?p x = 0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 1)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Misc_Polynomial.no_roots_inbetween_imp_same_sign",
     "[| ?a < ?b; ALL x. ?a <= x & x <= ?b --> poly ?p x ~= 0 |]
      ==> sgn (poly ?p ?a) = sgn (poly ?p ?b)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Misc_Polynomial.fun_eq_in_ivl",
     "[| ?a <= ?b;
         ALL x.
            ?a <= x & x <= ?b -->
            (\<forall>\<^sub>F \<xi> in at x. ?f \<xi> = ?f x) |]
      ==> ?f ?a = ?f ?b",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_var 0, template_var 2),
         template_app (template_var 0, template_var 1)))),
    ("Misc_Polynomial.poly_pos_between_less_leq",
     "(ALL x. ?a < x & x <= ?b --> 0 < poly ?p x) =
      ((?b <= ?a | 0 < poly ?p ?b) &
       (ALL x. ?a < x & x <= ?b --> poly ?p x ~= 0))",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1)))),
         template_app (template_hole 9, t_empty)))),
    ("Misc_Polynomial.poly_pos_between_leq_less",
     "(ALL x. ?a <= x & x < ?b --> 0 < poly ?p x) =
      ((?b <= ?a | 0 < poly ?p ?a) &
       (ALL x. ?a <= x & x < ?b --> poly ?p x ~= 0))",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)))),
         template_app (template_hole 9, t_empty)))),
    ("Misc_Polynomial.poly_pos_between_leq_leq",
     "(ALL x. ?a <= x & x <= ?b --> 0 < poly ?p x) =
      ((?b < ?a | 0 < poly ?p ?a) &
       (ALL x. ?a <= x & x <= ?b --> poly ?p x ~= 0))",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)))),
         template_app (template_hole 9, t_empty)))),
    ("Misc_Polynomial.poly_pos_between_less_less",
     "(ALL x. ?a < x & x < ?b --> 0 < poly ?p x) =
      ((?b <= ?a | 0 < poly ?p ((?a + ?b) / 2)) &
       (ALL x. ?a < x & x < ?b --> poly ?p x ~= 0))",
     template_equation
      (template_app (template_hole 14, t_empty),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 1)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))))))),
         template_app (template_hole 14, t_empty)))),
    ("Misc_Polynomial.poly_lhopital",
     "[| poly ?p ?x = 0; poly ?q ?x = 0; ?q ~= 0;
         (%x. poly (pderiv ?p) x / poly (pderiv ?q) x) \<midarrow>?x
         \<rightarrow> ?y |]
      ==> (%x. poly ?p x / poly ?q x) \<midarrow>?x\<rightarrow> ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_var 2),
          template_hole 9),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 1),
            template_var 2),
          template_hole 9),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty),
                template_app (template_hole 2, template_var 0)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("Misc_Polynomial.poly_roots_bounds",
     "[| ?p ~= 0;
         !!l u.
            [| l <= u; poly ?p l ~= 0; poly ?p u ~= 0;
               {x. l < x & x <= u & poly ?p x = 0} = {x. poly ?p x = 0};
               !!x. x <= l ==> sgn (poly ?p x) = sgn (poly ?p l);
               !!x. u <= x ==> sgn (poly ?p x) = sgn (poly ?p u) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Misc_Polynomial.polys_inf_sign_thresholds",
     "[| finite ?ps;
         !!l u.
            [| l <= u;
               !!p. [| p : ?ps; p ~= 0 |]
                    ==> {x. l < x & x <= u & poly p x = 0} =
                        {x. poly p x = 0};
               !!p x. [| p : ?ps; u <= x |] ==> sgn (poly p x) = poly_inf p;
               !!p x.
                  [| p : ?ps; x <= l |]
                  ==> sgn (poly p x) = poly_neg_inf p |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_var 0)))]
