   [("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. 1 / ?b) = (%x. inverse ?b)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. ?a / ?b) = (%x. ?a / ?b)",
     template_equation (template_app (template_hole 1, t_empty), t_empty)),
    ("Sturm_Method.PR_TAG_intro_prio0", "PR_TAG (%x. ?a) = poly [:?a:]",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("Sturm_Method.PR_TAG_intro_prio0", "PR_TAG (poly ?p) = poly ?p",
     template_equation (template_app (template_hole 1, t_empty), t_empty)),
    ("Sturm_Method.sturm_id_PR_prio0", "{x. ?P x} = {x. PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Sturm_Theorem.count_roots_correct",
     "count_roots ?p = card {x. poly ?p x = 0}",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Sturm_Method.poly_card_roots",
     "card {x. poly ?p x = 0} = count_roots ?p",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Sturm_Method.PR_TAG_intro_prio1",
     "PR_TAG (%x. x ^ ?n) = poly (monom 1 ?n)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. ?a * x ^ ?n) = poly (monom ?a ?n)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. x ^ ?n * ?a) = poly (monom ?a ?n)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("Sturm_Method.sturm_id_PR_prio0",
     "(ALL x. ?P x) = (ALL x. ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. x ^ ?n / ?a) = poly (monom (inverse ?a) ?n)",
     template_equation (template_app (template_hole 5, t_empty), t_empty)),
    ("Sturm_Theorem.count_roots_above_correct",
     "count_roots_above ?p ?a = card {x. ?a < x & poly ?p x = 0}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Sturm_Theorem.count_roots_below_correct",
     "count_roots_below ?p ?a = card {x. x <= ?a & poly ?p x = 0}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Sturm_Method.poly_card_roots_greater",
     "card {x. ?a < x & poly ?p x = 0} = count_roots_above ?p ?a",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Sturm_Method.poly_card_roots_leq",
     "card {x. x <= ?a & poly ?p x = 0} = count_roots_below ?p ?a",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Sturm_Theorem.count_roots_code",
     "count_roots ?p =
      (if ?p = 0 then 0
       else let ps = sturm ?p
            in sign_changes_neg_inf ps - sign_changes_inf ps)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_dunno)),
    ("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. ?a / ?b * x ^ ?n) = poly (monom (?a / ?b) ?n)",
     template_equation (template_app (template_hole 5, t_empty), t_empty)),
    ("Sturm_Method.PR_TAG_intro_prio2",
     "PR_TAG (%x. x ^ ?n * ?a / ?b) = poly (monom (?a / ?b) ?n)",
     template_equation (template_app (template_hole 5, t_empty), t_empty)),
    ("Sturm_Method.sturm_id_PR_prio1",
     "{x. x < ?a & ?P x} = {x. x < ?a & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "{x. ?b < x & ?P x} = {x. ?b < x & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "{x. x <= ?a & ?P x} = {x. x <= ?a & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "{x. ?b <= x & ?P x} = {x. ?b <= x & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio0",
     "(ALL x. ?f x < ?g x) = (ALL x. PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Sturm_Method.poly_no_roots",
     "(ALL x. poly ?p x ~= 0) = (?p ~= 0 & count_roots ?p = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_dunno)),
    ("Sturm_Method.sturm_imp_conv",
     "(?a < ?x --> ?x < ?b --> ?c) = (?a < ?x & ?x < ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?a < ?x --> ?x <= ?b --> ?c) = (?a < ?x & ?x <= ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?x < ?b --> ?a < ?x --> ?c) = (?a < ?x & ?x < ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?x < ?b --> ?a <= ?x --> ?c) = (?a <= ?x & ?x < ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?a <= ?x --> ?x < ?b --> ?c) = (?a <= ?x & ?x < ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?a <= ?x --> ?x <= ?b --> ?c) = (?a <= ?x & ?x <= ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?x <= ?b --> ?a < ?x --> ?c) = (?a < ?x & ?x <= ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2))),
         template_var 0))),
    ("Sturm_Method.sturm_imp_conv",
     "(?x <= ?b --> ?a <= ?x --> ?c) = (?a <= ?x & ?x <= ?b --> ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))),
         template_var 0))),
    ("Sturm_Theorem.count_roots_between_correct",
     "count_roots_between ?p ?a ?b =
      card {x. ?a < x & x <= ?b & poly ?p x = 0}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("Sturm_Method.poly_card_roots_less_leq",
     "card {x. ?a < x & x <= ?b & poly ?p x = 0} =
      count_roots_between ?p ?a ?b",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Sturm_Method.poly_pos",
     "(ALL x. 0 < poly ?p x) =
      (?p ~= 0 & poly_inf ?p = 1 & count_roots ?p = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_dunno)),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x<?a. ?P x) = (ALL x<?a. ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x>?a. ?P x) = (ALL x>?a. ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x<=?a. ?P x) = (ALL x<=?a. ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x>=?a. ?P x) = (ALL x>=?a. ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.poly_no_roots_greater",
     "(ALL x>?a. poly ?p x ~= 0) = (?p ~= 0 & count_roots_above ?p ?a = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_no_roots_leq",
     "(ALL x<=?a. poly ?p x ~= 0) =
      (?p ~= 0 & count_roots_below ?p ?a = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_dunno)),
    ("Sturm_Method.sturm_id_PR_prio2",
     "{x. ?a < x & x < ?b & ?P x} = {x. ?a < x & x < ?b & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "{x. ?a < x & x <= ?b & ?P x} = {x. ?a < x & x <= ?b & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "{x. ?a <= x & x < ?b & ?P x} = {x. ?a <= x & x < ?b & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "{x. ?a <= x & x <= ?b & ?P x} = {x. ?a <= x & x <= ?b & PR_TAG ?P x}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x<?a. ?f x < ?g x) = (ALL x<?a. PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x>?a. ?f x < ?g x) = (ALL x>?a. PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x<=?a. ?f x < ?g x) = (ALL x<=?a. PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio1",
     "(ALL x>=?a. ?f x < ?g x) = (ALL x>=?a. PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Sturm_Method.poly_pos_greater",
     "(ALL x>?a. 0 < poly ?p x) =
      (?p ~= 0 & poly_inf ?p = 1 & count_roots_above ?p ?a = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_pos_leq",
     "(ALL x<=?a. 0 < poly ?p x) =
      (?p ~= 0 & poly_neg_inf ?p = 1 & count_roots_below ?p ?a = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_card_roots_less",
     "card {x. x < ?a & poly ?p x = 0} =
      count_roots_below ?p ?a -
      (if poly ?p ?a = 0 & ?p ~= 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14, template_app (template_hole 13, t_empty))
            )],
       template_dunno)),
    ("Sturm_Method.poly_card_roots_geq",
     "card {x. ?a <= x & poly ?p x = 0} =
      count_roots_above ?p ?a +
      (if poly ?p ?a = 0 & ?p ~= 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14, template_app (template_hole 13, t_empty))
            )],
       template_dunno)),
    ("Sturm_Method.poly_no_roots_less",
     "(ALL x<?a. poly ?p x ~= 0) =
      (?p ~= 0 &
       count_roots_below ?p ?a = (if poly ?p ?a = 0 then 1 else 0))",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_no_roots_geq",
     "(ALL x>=?a. poly ?p x ~= 0) =
      (?p ~= 0 & poly ?p ?a ~= 0 & count_roots_above ?p ?a = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_dunno)),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a < x & x < ?b --> ?P x) =
      (ALL x. ?a < x & x < ?b --> ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app (template_hole 5, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a < x & x <= ?b --> ?P x) =
      (ALL x. ?a < x & x <= ?b --> ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a <= x & x < ?b --> ?P x) =
      (ALL x. ?a <= x & x < ?b --> ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a <= x & x <= ?b --> ?P x) =
      (ALL x. ?a <= x & x <= ?b --> ~ PR_TAG (%x. ~ ?P x) x)",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app (template_hole 5, t_empty))),
    ("Sturm_Method.poly_no_roots_less_leq",
     "(ALL x. ?a < x & x <= ?b --> poly ?p x ~= 0) =
      (?b <= ?a | ?p ~= 0 & count_roots_between ?p ?a ?b = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_pos_less",
     "(ALL x<?a. 0 < poly ?p x) =
      (?p ~= 0 &
       poly_neg_inf ?p = 1 &
       count_roots_below ?p ?a = (if poly ?p ?a = 0 then 1 else 0))",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_pos_geq",
     "(ALL x>=?a. 0 < poly ?p x) =
      (?p ~= 0 &
       poly_inf ?p = 1 & poly ?p ?a ~= 0 & count_roots_above ?p ?a = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty))],
       template_dunno)),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a < x & x < ?b --> ?f x < ?g x) =
      (ALL x. ?a < x & x < ?b --> PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app (template_hole 5, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a < x & x <= ?b --> ?f x < ?g x) =
      (ALL x. ?a < x & x <= ?b --> PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a <= x & x < ?b --> ?f x < ?g x) =
      (ALL x. ?a <= x & x < ?b --> PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Sturm_Method.sturm_id_PR_prio2",
     "(ALL x. ?a <= x & x <= ?b --> ?f x < ?g x) =
      (ALL x. ?a <= x & x <= ?b --> PR_TAG (%x. ?f x < ?g x) x)",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app (template_hole 5, t_empty))),
    ("Sturm_Method.poly_pos_between_less_leq",
     "(ALL x. ?a < x & x <= ?b --> 0 < poly ?p x) =
      (?b <= ?a |
       ?p ~= 0 & 0 < poly ?p ?b & count_roots_between ?p ?a ?b = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_pos_between_leq_leq",
     "(ALL x. ?a <= x & x <= ?b --> 0 < poly ?p x) =
      (?b < ?a |
       ?p ~= 0 & 0 < poly ?p ?a & count_roots_between ?p ?a ?b = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_card_roots_less_less",
     "card {x. ?a < x & x < ?b & poly ?p x = 0} =
      count_roots_between ?p ?a ?b -
      (if poly ?p ?b = 0 & ?a < ?b & ?p ~= 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14, template_app (template_hole 13, t_empty))
            )],
       template_dunno)),
    ("Sturm_Method.poly_no_roots_less_less",
     "(ALL x. ?a < x & x < ?b --> poly ?p x ~= 0) =
      (?b <= ?a |
       ?p ~= 0 &
       count_roots_between ?p ?a ?b = (if poly ?p ?b = 0 then 1 else 0))",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_no_roots_leq_leq",
     "(ALL x. ?a <= x & x <= ?b --> poly ?p x ~= 0) =
      (?b < ?a |
       ?p ~= 0 & poly ?p ?a ~= 0 & count_roots_between ?p ?a ?b = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_dunno)),
    ("Sturm_Theorem.count_roots_above_code",
     "count_roots_above ?p ?a =
      (let q = pderiv ?p
       in if ?p = 0 then 0
          else if poly ?p ?a ~= 0 | poly q ?a ~= 0
               then let ps = sturm ?p
                    in sign_changes ps ?a - sign_changes_inf ps
               else let ps = sturm_squarefree ?p
                    in sign_changes ps ?a - sign_changes_inf ps)",
     template_equation
      (template_app
        (template_app (template_hole 17, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 1)),
         t_empty))),
    ("Sturm_Theorem.count_roots_below_code",
     "count_roots_below ?p ?a =
      (let q = pderiv ?p
       in if ?p = 0 then 0
          else if poly ?p ?a ~= 0 | poly q ?a ~= 0
               then let ps = sturm ?p
                    in sign_changes_neg_inf ps - sign_changes ps ?a
               else let ps = sturm_squarefree ?p
                    in sign_changes_neg_inf ps - sign_changes ps ?a)",
     template_equation
      (template_app
        (template_app (template_hole 17, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 1)),
         t_empty))),
    ("Sturm_Method.poly_card_roots_leq_leq",
     "card {x. ?a <= x & x <= ?b & poly ?p x = 0} =
      count_roots_between ?p ?a ?b +
      (if ?a <= ?b & poly ?p ?a = 0 & ?p ~= 0 | ?a = ?b & ?p = 0 then 1
       else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15, template_app (template_hole 14, t_empty))
            )],
       template_dunno)),
    ("Sturm_Method.poly_pos_between_leq_less",
     "(ALL x. ?a <= x & x < ?b --> 0 < poly ?p x) =
      (?b <= ?a |
       ?p ~= 0 &
       0 < poly ?p ?a &
       count_roots_between ?p ?a ?b =
       (if ?a < ?b & poly ?p ?b = 0 then 1 else 0))",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_pos_between_less_less",
     "(ALL x. ?a < x & x < ?b --> 0 < poly ?p x) =
      (?b <= ?a |
       ?p ~= 0 &
       0 < poly ?p ((?a + ?b) / 2) &
       count_roots_between ?p ?a ?b = (if poly ?p ?b = 0 then 1 else 0))",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_no_roots_leq_less",
     "(ALL x. ?a <= x & x < ?b --> poly ?p x ~= 0) =
      (?b <= ?a |
       ?p ~= 0 &
       poly ?p ?a ~= 0 &
       count_roots_between ?p ?a ?b =
       (if ?a < ?b & poly ?p ?b = 0 then 1 else 0))",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_dunno)),
    ("Sturm_Method.poly_card_roots_leq_less",
     "card {x. ?a <= x & x < ?b & poly ?p x = 0} =
      count_roots_between ?p ?a ?b +
      (if ?p ~= 0 & ?a < ?b & poly ?p ?a = 0 then 1 else 0) -
      (if ?p ~= 0 & ?a < ?b & poly ?p ?b = 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16, template_app (template_hole 15, t_empty))
            )],
       template_dunno)),
    ("Sturm_Theorem.count_roots_between",
     "count_roots_between ?p ?a ?b =
      (let q = pderiv ?p
       in if ?b < ?a | ?p = 0 then 0
          else if (poly ?p ?a ~= 0 | poly q ?a ~= 0) &
                  (poly ?p ?b ~= 0 | poly q ?b ~= 0)
               then let ps = sturm ?p
                    in sign_changes ps ?a - sign_changes ps ?b
               else let ps = sturm_squarefree ?p
                    in sign_changes ps ?a - sign_changes ps ?b)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 17,
           template_app (template_hole 16, template_var 2)),
         t_empty)))]
