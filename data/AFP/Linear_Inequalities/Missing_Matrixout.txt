Loading theory "Draft.Missing_Matrix" (required by "Draft.Missing_MatrixTemplates")
Loading theory "Draft.Templates" (required by "Draft.Missing_MatrixTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.183s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Missing_MatrixTemplates")
### theory "Draft.Missing_Matrix"
### 0.258s elapsed time, 0.544s cpu time, 0.059s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.525s elapsed time, 0.711s cpu time, 0.059s GC time
Loading theory "Draft.Missing_MatrixTemplates"
val templateLemmas =
   [("Missing_Matrix.finite_elements_mat", "finite (elements_mat ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Missing_Matrix.finite_vec_set", "finite (set\<^sub>v ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Missing_Matrix.mat_of_col_dim", "dim_col (mat_of_col ?v) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Missing_Matrix.vec_of_scal_dim", "dim_vec (vec_of_scal ?x) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Missing_Matrix.vec_of_scal_dim", "vec_of_scal ?x : carrier_vec 1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Missing_Matrix.index_vec_of_scal", "vec_of_scal ?x $ 0 = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Missing_Matrix.mat_of_col_dim",
     "dim_row (mat_of_col ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Matrix.mat_col_first_dim",
     "dim_col (mat_col_first ?A ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Missing_Matrix.mat_col_last_dim", "dim_col (mat_col_last ?A ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Missing_Matrix.mat_row_first_dim",
     "dim_row (mat_row_first ?A ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Missing_Matrix.mat_row_last_dim", "dim_row (mat_row_last ?A ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Missing_Matrix.elements_mat_mat_of_row",
     "elements_mat (mat_of_row ?v) = set\<^sub>v ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Matrix.elements_mat_transpose_mat",
     "elements_mat ?A\<^sup>T = elements_mat ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Missing_Matrix.elements_mat_mat_of_col",
     "elements_mat (mat_of_col ?v) = set\<^sub>v ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Matrix.col_mat_of_col", "col (mat_of_col ?v) 0 = ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Missing_Matrix.mat_row_first_dim",
     "dim_col (mat_row_first ?A ?n) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Missing_Matrix.mat_row_last_dim",
     "dim_col (mat_row_last ?A ?n) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Missing_Matrix.mat_col_first_dim",
     "dim_row (mat_col_first ?A ?n) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Missing_Matrix.mat_col_last_dim",
     "dim_row (mat_col_last ?A ?n) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Missing_Matrix.mat_of_col_dim",
     "mat_of_col ?v : carrier_mat (dim_vec ?v) 1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("Missing_Matrix.elements_mat_uminus",
     "elements_mat (- ?A) = uminus ` elements_mat ?A",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Missing_Matrix.vec_set_uminus",
     "set\<^sub>v (- ?A) = uminus ` set\<^sub>v ?A",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Missing_Matrix.mat_col_first_carrier",
     "mat_col_first ?A ?n : carrier_mat (dim_row ?A) ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))
         )),
    ("Missing_Matrix.mat_col_last_carrier",
     "mat_col_last ?A ?n : carrier_mat (dim_row ?A) ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))
         )),
    ("Missing_Matrix.mat_row_first_carrier",
     "mat_row_first ?A ?n : carrier_mat ?n (dim_col ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))
         )),
    ("Missing_Matrix.mat_row_last_carrier",
     "mat_row_last ?A ?n : carrier_mat ?n (dim_col ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))
         )),
    ("Missing_Matrix.mult_mat_of_row_vec_of_scal",
     "mat_of_col ?v *\<^sub>v vec_of_scal ?x = ?x \<cdot>\<^sub>v ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Missing_Matrix.vec_set_append_vec",
     "set\<^sub>v (?v @\<^sub>v ?w) = set\<^sub>v ?v Un set\<^sub>v ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Missing_Matrix.vec_le_iff_diff_le_0",
     "(?a <= ?b) = (?a - ?b <= 0\<^sub>v (dim_vec ?a))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Missing_Matrix.mat_of_col_dim_col_1",
     "(dim_col ?A = 1) = (?A = mat_of_col (col ?A 0))",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Missing_Matrix.mat_of_row_dim_row_1",
     "(dim_row ?A = 1) = (?A = mat_of_row (row ?A 0))",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Missing_Matrix.vec_of_scal_dim_1",
     "(?v : carrier_vec 1) = (?v = vec_of_scal (?v $ 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_hole 4))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Missing_Matrix.vec_first_zero",
     "?m <= ?n ==> vec_first (0\<^sub>v ?n) ?m = 0\<^sub>v ?m",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Missing_Matrix.diff_smult_distrib_vec",
     "(?x - ?y) \<cdot>\<^sub>v ?v =
      ?x \<cdot>\<^sub>v ?v - ?y \<cdot>\<^sub>v ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Missing_Matrix.vec_first_append",
     "?v : carrier_vec ?n ==> vec_first (?v @\<^sub>v ?w) ?n = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_var 2))),
    ("Missing_Matrix.mat_row_first_nth",
     "?i < ?n ==> row (mat_row_first ?A ?n) ?i = row ?A ?i",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Missing_Matrix.zero_mat_mult_vector",
     "?x : carrier_vec ?nc ==>
      0\<^sub>m ?nr ?nc *\<^sub>v ?x = 0\<^sub>v ?nr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Missing_Matrix.row_mat_of_col",
     "?i < dim_vec ?v ==> row (mat_of_col ?v) ?i = vec_of_scal (?v $ ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Missing_Matrix.distinct_smult_nonneg",
     "[| ?c ~= (0::?'a); distinct ?lC |]
      ==> distinct (map ((\<cdot>\<^sub>v) ?c) ?lC)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Missing_Matrix.smult_pos_vec",
     "(0::?'a) < ?l ==>
      (?l \<cdot>\<^sub>v ?v <= 0\<^sub>v ?n) = (?v <= 0\<^sub>v ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Missing_Matrix.smult_vec_nonneg_eq",
     "?c ~= (0::?'a) ==>
      (?c \<cdot>\<^sub>v ?x = ?c \<cdot>\<^sub>v ?y) = (?x = ?y)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Missing_Matrix.mat_col_first_last_append",
     "dim_col ?A = ?m + ?n ==>
      mat_col_first ?A ?m @\<^sub>c mat_col_last ?A ?n = ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 2))),
    ("Missing_Matrix.mat_row_first_last_append",
     "dim_row ?A = ?m + ?n ==>
      mat_row_first ?A ?m @\<^sub>r mat_row_last ?A ?n = ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 2))),
    ("Missing_Matrix.smult_nneg_npos_vec",
     "[| (0::?'a) <= ?l; ?v <= 0\<^sub>v ?n |]
      ==> ?l \<cdot>\<^sub>v ?v <= 0\<^sub>v ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Missing_Matrix.mat_of_row_last_nth",
     "?i < ?n ==>
      row (mat_row_last ?A ?n) ?i = row ?A (dim_row ?A - ?n + ?i)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_var 2))))),
    ("Missing_Matrix.add_diff_cancel_right_vec",
     "[| ?a : carrier_vec ?n; ?b : carrier_vec ?n |] ==> ?a + ?b - ?b = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 0),
         template_var 2))),
    ("Missing_Matrix.mat_col_first_nth",
     "[| ?i < ?n; ?i < dim_col ?A |]
      ==> col (mat_col_first ?A ?n) ?i = col ?A ?i",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Missing_Matrix.vec_first_index",
     "[| ?n <= dim_vec ?v; ?i < ?n |] ==> vec_first ?v ?n $ ?i = ?v $ ?i",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Missing_Matrix.exists_vec_append",
     "(EX x:carrier_vec (?n + ?m). ?P x) =
      (EX x1:carrier_vec ?n. EX x2:carrier_vec ?m. ?P (x1 @\<^sub>v x2))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         t_empty))),
    ("Missing_Matrix.vec_first_smult",
     "[| ?m <= ?n; ?x : carrier_vec ?n |]
      ==> vec_first (?c \<cdot>\<^sub>v ?x) ?m =
          ?c \<cdot>\<^sub>v vec_first ?x ?m",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3))))),
    ("Missing_Matrix.mult_mat_of_col",
     "[| ?A : carrier_mat ?nr ?nc; ?v : carrier_vec ?nc |]
      ==> ?A * mat_of_col ?v = mat_of_col (?A *\<^sub>v ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Missing_Matrix.carrier_append_cols",
     "[| ?A : carrier_mat ?nr ?nc1.0; ?B : carrier_mat ?nr ?nc2.0 |]
      ==> ?A @\<^sub>c ?B : carrier_mat ?nr (?nc1.0 + ?nc2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Missing_Matrix.lesseq_vecD",
     "[| ?w : carrier_vec ?n; ?v <= ?w; ?i < ?n |] ==> ?v $ ?i <= ?w $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Missing_Matrix.elements_mat_append_cols",
     "[| ?A : carrier_mat ?n ?nc; ?B : carrier_mat ?n ?nc1.0 |]
      ==> elements_mat (?A @\<^sub>c ?B) =
          elements_mat ?A Un elements_mat ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 4)),
           template_app (template_hole 2, template_var 1))))),
    ("Missing_Matrix.elements_mat_append_rows",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?nr2.0 ?n |]
      ==> elements_mat (?A @\<^sub>r ?B) =
          elements_mat ?A Un elements_mat ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 4)),
           template_app (template_hole 2, template_var 1))))),
    ("Missing_Matrix.vec_last_index",
     "[| ?v : carrier_vec (?n + ?m); ?i < ?m |]
      ==> vec_last ?v ?m $ ?i = ?v $ (?n + ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0))))),
    ("Missing_Matrix.vec_add_mono",
     "[| dim_vec ?b = dim_vec ?d; ?a <= ?b; ?c <= ?d |]
      ==> ?a + ?c <= ?b + ?d",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("Missing_Matrix.mat_of_col_last_nth",
     "[| ?i < ?n; ?i < dim_col ?A |]
      ==> col (mat_col_last ?A ?n) ?i = col ?A (dim_col ?A - ?n + ?i)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 5, template_var 0)),
                 template_var 1)),
             template_var 2))))),
    ("Missing_Matrix.vec_first_add",
     "[| ?n <= dim_vec ?x; ?n <= dim_vec ?y |]
      ==> vec_first (?x + ?y) ?n = vec_first ?x ?n + vec_first ?y ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2))))),
    ("Missing_Matrix.orthogonalD'",
     "[| orthogonal ?vs; ?v : set ?vs; ?w : set ?vs |]
      ==> (?v \<bullet> ?w = (0::?'a)) = (?v ~= ?w)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_hole 2),
         template_negation
          (template_equation (template_var 1, template_var 0))))),
    ("Missing_Matrix.append_cols_nth",
     "[| ?A : carrier_mat ?nr ?nc1.0; ?B : carrier_mat ?nr ?nc2.0;
         ?i < ?nc1.0 |]
      ==> col (?A @\<^sub>c ?B) ?i = col ?A ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 5),
           template_var 0)))),
    ("Missing_Matrix.append_rows_nth",
     "[| ?A : carrier_mat ?nr1.0 ?nc; ?B : carrier_mat ?nr2.0 ?nc;
         ?i < ?nr1.0 |]
      ==> row (?A @\<^sub>r ?B) ?i = row ?A ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3))
            ),
        template_inequation (less_than, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 5),
           template_var 0)))),
    ("Missing_Matrix.add_diff_eq_vec",
     "[| ?y : carrier_vec ?n; ?x : carrier_vec ?n; ?z : carrier_vec ?n |]
      ==> ?y + (?x - ?z) = ?y + ?x - ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Missing_Matrix.lesseq_vecI",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n;
         !!i. i < ?n ==> ?v $ i <= ?w $ i |]
      ==> ?v <= ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Missing_Matrix.append_cols_nth",
     "[| ?A : carrier_mat ?nr ?nc1.0; ?B : carrier_mat ?nr ?nc2.0;
         ?nc1.0 <= ?i; ?i < ?nc1.0 + ?nc2.0 |]
      ==> col (?A @\<^sub>c ?B) ?i = col ?B (?i - ?nc1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("Missing_Matrix.append_rows_nth",
     "[| ?A : carrier_mat ?nr1.0 ?nc; ?B : carrier_mat ?nr2.0 ?nc;
         ?nr1.0 <= ?i; ?i < ?nr1.0 + ?nr2.0 |]
      ==> row (?A @\<^sub>r ?B) ?i = row ?B (?i - ?nr1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 3))
            ),
        template_inequation (less_equals, template_var 4, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4))))),
    ("Missing_Matrix.mat_mult_append_cols",
     "[| ?A : carrier_mat ?nr ?nc1.0; ?B : carrier_mat ?nr ?nc2.0;
         ?v1.0 : carrier_vec ?nc1.0; ?v2.0 : carrier_vec ?nc2.0 |]
      ==> (?A @\<^sub>c ?B) *\<^sub>v (?v1.0 @\<^sub>v ?v2.0) =
          ?A *\<^sub>v ?v1.0 + ?B *\<^sub>v ?v2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 5),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 6),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 6),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0))))),
    ("Missing_Matrix.elements_four_block_mat_id",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> elements_mat (four_block_mat ?A ?B ?C ?D) =
          elements_mat ?A Un elements_mat ?B Un elements_mat ?C Un
          elements_mat ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 2, template_var 7)),
                   template_app (template_hole 2, template_var 4))),
               template_app (template_hole 2, template_var 2))),
           template_app (template_hole 2, template_var 0)))))]:
   (string * thm * template) list
### theory "Draft.Missing_MatrixTemplates"
### 0.526s elapsed time, 0.687s cpu time, 0.090s GC time
val it = (): unit
