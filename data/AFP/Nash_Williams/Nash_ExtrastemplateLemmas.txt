   [("Nash_Extras.less_sets_irrefl", "(?A \<lless> ?A) = (?A = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Nash_Extras.less_sets_imp_disjnt", "?A \<lless> ?B ==> disjnt ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Nash_Extras.less_sets_UN2",
     "(?A \<lless> \<Union> ?\<B>) = (ALL B:?\<B>. ?A \<lless> B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Nash_Extras.less_sets_UN1",
     "(\<Union> ?\<A> \<lless> ?B) = (ALL A:?\<A>. A \<lless> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Nash_Extras.strict_sorted_imp_less_sets",
     "strict_sorted (?as @ ?bs) ==> set ?as \<lless> set ?bs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Nash_Extras.less_sets_Un2",
     "(?A \<lless> ?B Un ?B') = (?A \<lless> ?B & ?A \<lless> ?B')",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Nash_Extras.less_sets_Un1",
     "(?A Un ?A' \<lless> ?B) = (?A \<lless> ?B & ?A' \<lless> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Nash_Extras.less_sets_weaken2",
     "[| ?A \<lless> ?B'; ?B <= ?B' |] ==> ?A \<lless> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Nash_Extras.less_sets_weaken1",
     "[| ?A' \<lless> ?B; ?A <= ?A' |] ==> ?A \<lless> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Nash_Extras.Sup_nat_less_sets_singleton",
     "[| Sup ?T < ?n; finite ?T |] ==> ?T \<lless> {?n}",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_var 0),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Nash_Extras.less_setsD",
     "[| ?A \<lless> ?B; ?a : ?A; ?b : ?B |] ==> ?a < ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Nash_Extras.less_sets_trans",
     "[| ?A \<lless> ?B; ?B \<lless> ?C; ?B ~= {} |] ==> ?A \<lless> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           )))]
