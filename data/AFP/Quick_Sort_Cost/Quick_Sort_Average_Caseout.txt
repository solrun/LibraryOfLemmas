Loading theory "Draft.Randomised_Quick_Sort" (required by "Draft.Quick_Sort_Average_CaseTemplates" via "Draft.Quick_Sort_Average_Case")
Loading theory "Draft.Templates" (required by "Draft.Quick_Sort_Average_CaseTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.BigO" (required by "Draft.Quick_Sort_Average_CaseTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.084s elapsed time, 0.288s cpu time, 0.000s GC time
### theory "HOL-Library.BigO"
### 0.651s elapsed time, 1.446s cpu time, 0.091s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Quick_Sort_Average_CaseTemplates")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.511s elapsed time, 1.064s cpu time, 0.110s GC time
### Ignoring duplicate rewrite rule:
### measure_pmf.expectation (pair_pmf ?p1 ?q1) (%x. ?f1 (fst x)) ==
### measure_pmf.expectation ?p1 ?f1
### Ignoring duplicate rewrite rule:
### measure_pmf.expectation (pair_pmf ?p1 ?q1) (%x. ?f1 (snd x)) ==
### measure_pmf.expectation ?q1 ?f1
### theory "Draft.Randomised_Quick_Sort"
### 1.475s elapsed time, 2.832s cpu time, 0.201s GC time
Loading theory "Draft.Quick_Sort_Average_Case" (required by "Draft.Quick_Sort_Average_CaseTemplates")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.Quick_Sort_Average_Case"
### 0.625s elapsed time, 0.913s cpu time, 0.393s GC time
Loading theory "Draft.Quick_Sort_Average_CaseTemplates"
val templateLemmas =
   [("Quick_Sort_Average_Case.set_quicksort",
     "set (quicksort ?R ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Quick_Sort_Average_Case.mset_quicksort",
     "mset (quicksort ?R ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Quick_Sort_Average_Case.snd_quicksort'",
     "snd (quicksort' ?R ?xs) = qs_cost ?R ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Quick_Sort_Average_Case.fst_quicksort'",
     "fst (quicksort' ?R ?xs) = quicksort ?R ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Quick_Sort_Average_Case.sorted_wrt_quicksort'",
     "[| linorder_on ?A ?R; set ?xs <= ?A |]
      ==> Linorder_Relations.sorted_wrt ?R (quicksort ?R ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Quick_Sort_Average_Case.qs_cost_average_conv_rqs_cost",
     "[| finite ?A; linorder_on ?B ?R; ?A <= ?B |]
      ==> map_pmf (qs_cost ?R) (pmf_of_set (permutations_of_set ?A)) =
          rqs_cost (card ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("Quick_Sort_Average_Case.expectation_qs_cost",
     "[| finite ?A; linorder_on ?B ?R; ?A <= ?B |]
      ==> measure_pmf.expectation
           (map_pmf (qs_cost ?R) (pmf_of_set (permutations_of_set ?A)))
           real =
          rqs_cost_exp (card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2))))),
           template_hole 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("Quick_Sort_Average_Case.sorted_wrt_quicksort",
     "[| trans ?R; total_on (set ?xs) ?R;
         !!x. x : set ?xs ==> (x, x) : ?R |]
      ==> Linorder_Relations.sorted_wrt ?R (quicksort ?R ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.Quick_Sort_Average_CaseTemplates"
### 1.287s elapsed time, 1.564s cpu time, 0.163s GC time
val it = (): unit
