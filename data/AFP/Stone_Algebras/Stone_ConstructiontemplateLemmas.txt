   [("Stone_Construction.simp_dense", "dense (Rep_dense ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Stone_Construction.simp_regular", "in_p_image (Rep_regular ?x)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Stone_Construction.stone_phi_base_filter",
     "ord_class.filter (stone_phi_base ?x)",
     template_predicate
      (
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))
         )),
    ("Stone_Construction.simp_lifted_pair",
     "ALL f. Rep_lifted_pair ?pf f : triple.pairs (Rep_phi f)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Stone_Construction.stone_phi_embed_strict_order_isomorphism",
     "(?x < ?y) = (stone_phi_embed ?x < stone_phi_embed ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Stone_Construction.stone_phi_embed_order_injective",
     "stone_phi_embed ?x <= stone_phi_embed ?y ==> ?x <= ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Stone_Construction.phi_iso_filter",
     "ord_class.filter
       ((%qf. Rep_lifted_distrib_lattice_top (dl_iso qf) ?f) `
        Filters.filter.Rep_filter (stone_phi ?pf))",
     template_predicate
      (
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Stone_Construction.dl_iso_inv_lifted_pair",
     "(top, up_filter (Rep_lifted_distrib_lattice_top ?xf ?f))
      : triple.pairs (Rep_phi ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, t_empty)))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Stone_Construction.ba_iso_inv_lifted_pair",
     "(Rep_lifted_boolean_algebra ?xf ?f,
       Rep_phi ?f (- Rep_lifted_boolean_algebra ?xf ?f))
      : triple.pairs (Rep_phi ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0))))),
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)))
         )),
    ("Stone_Construction.get_dense_char",
     "Rep_lifted_pair (Rep_dense ?pf) ?f =
      (top, up_filter (get_dense ?pf ?f))",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Stone_Construction.dl_iso_inv_dense",
     "dense
       (Abs_lifted_pair
         (%f. (top, up_filter (Rep_lifted_distrib_lattice_top ?xf f))))",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_hole 0)),
    ("Stone_Construction.up_dense_stone_phi",
     "up_filter (Abs_dense (?x \<squnion> - ?x))
      <= stone_phi (Abs_regular (- - ?x))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app (template_hole 2, template_var 0)))))),
    ("Stone_Construction.dl_iso_left_invertible",
     "dl_iso_inv (dl_iso ?pf) = ?pf",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, t_empty)),
       template_var 0)),
    ("Stone_Construction.dl_iso_right_invertible",
     "dl_iso (dl_iso_inv ?xf) = ?xf",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty)))),
       template_var 0)),
    ("Stone_Construction.stone_phi_embed_triple_pair",
     "(if Rep_phi ?f = stone_phi then Rep_stone_phi_pair ?x
       else triple.pairs_uminus (Rep_phi ?f)
             (triple.pairs_uminus (Rep_phi ?f) (Rep_stone_phi_pair ?x)))
      : triple.pairs (Rep_phi ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 1)),
                     template_hole 3)),
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 4, template_var 1)),
                   template_app (template_hole 2, template_var 0))))),
           template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)))
         )),
    ("Stone_Construction.up_filter_dense_antitone_dense",
     "dense (?x \<squnion> - ?x \<squnion> ?y) &
      dense (?x \<squnion> - ?x \<squnion> ?y \<squnion> ?z)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_app (template_hole 2, template_var 2))),
                     template_var 1))),
               template_hole 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_app (template_hole 2, template_var 2))),
                       template_var 1)),
                   template_var 0))),
             template_hole 0))
         )),
    ("Stone_Construction.ba_iso_right_invertible",
     "ba_iso (ba_iso_inv ?xf) = ?xf",
     template_equation
      (template_app (template_hole 9, t_empty), template_var 0)),
    ("Stone_Construction.phi_iso",
     "Rep_phi ?f (Rep_lifted_boolean_algebra (ba_iso ?pf) ?f) =
      filter_map (%qf. Rep_lifted_distrib_lattice_top (dl_iso qf) ?f)
       (stone_phi ?pf)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1),
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_var 1)),
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Stone_Construction.sa_iso_triple_pair",
     "(Abs_regular (- - ?x),
       stone_phi (Abs_regular (- ?x)) \<squnion>
       up_filter (Abs_dense (?x \<squnion> - ?x)))
      : stone_phi.pairs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 8, template_var 0)))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 0)))),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty))))),
           template_app (template_hole 0, template_hole 6))
         )),
    ("Stone_Construction.stone_phi_complement",
     "complement (stone_phi (Abs_regular (- ?x)))
       (stone_phi (Abs_regular (- - ?x)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_var 0)))),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3, template_var 0)))))),
               template_hole 2)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0)))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 3, template_var 0)))))),
             template_hole 0))
         )),
    ("Stone_Construction.ba_iso_left_invertible",
     "ba_iso_inv (ba_iso ?pf) = ?pf",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, t_empty)),
       template_var 0)),
    ("Stone_Construction.ba_iso_inv_regular",
     "regular
       (Abs_lifted_pair
         (%f. (Rep_lifted_boolean_algebra ?xf f,
               Rep_phi f (- Rep_lifted_boolean_algebra ?xf f))))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_hole 0,
         template_app
          (template_hole 0, template_app (template_hole 5, t_empty))))),
    ("Stone_Construction.up_filter_dense_antitone",
     "up_filter (Abs_dense (?x \<squnion> - ?x \<squnion> ?y \<squnion> ?z))
      <= up_filter (Abs_dense (?x \<squnion> - ?x \<squnion> ?y))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Stone_Construction.stone_phi_inf_dense",
     "stone_phi (Abs_regular (- ?x)) \<sqinter>
      up_filter (Abs_dense (?y \<squnion> - ?y))
      <= up_filter (Abs_dense (?y \<squnion> - ?y \<squnion> ?x))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)))),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Stone_Construction.simp_phi",
     "bounded_lattice_homomorphism (Rep_phi ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 10, t_empty)),
                   template_app (template_hole 10, t_empty))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_hole 3)),
                 template_hole 2))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 1)),
             template_hole 0))
         )),
    ("Stone_Construction.sa_iso_left_invertible",
     "sa_iso_inv (sa_iso ?x) = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9, template_var 0)))),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9, template_var 0)))),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, t_empty))))))))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 7),
             template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 9, template_var 0)))),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_var 0)))),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, t_empty))))))))),
       template_var 0)),
    ("Stone_Construction.sa_iso_right_invertible",
     "sa_iso (sa_iso_inv ?p) = ?p",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_var 0)))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_app
                          (template_hole 9, template_var 0)))))))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 14,
                   template_app
                    (template_hole 13,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9, template_var 0)))),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_hole 6),
                           template_app
                            (template_hole 9, template_var 0)))))))),
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))))),
       template_var 0))]
