   [("Trivia.these_map_Some", "these (map (Some o ?f) ?xs) = map ?f ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Trivia.list_all_map",
     "list_all (?h o ?i) ?l = list_all ?h (map ?i ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Trivia.never_list_ex", "never ?pred ?tr = (~ list_ex ?pred ?tr)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Trivia.list_ex_find", "list_ex ?P ?xs ==> find ?P ?xs ~= None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Trivia.not_list_ex_filter", "~ list_ex ?P ?xs ==> filter ?P ?xs = []",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Trivia.two_singl_Rcons", "[?a, ?b] = [?a] ## ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)))),
    ("Trivia.notNil_list_all_list_ex",
     "[| ?xs ~= []; list_all ?pred ?xs |] ==> list_ex ?pred ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Trivia.fun_upd2_absorb",
     "fun_upd2 (fun_upd2 ?f ?a ?b ?c) ?a ?b ?c' = fun_upd2 ?f ?a ?b ?c'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 2),
         template_var 0))),
    ("Trivia.cmap_empty_singl_filter",
     "cmap (%x. if ?pred x then [x] else []) ?xl = filter ?pred ?xl",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Trivia.map_const_eq",
     "length ?xs = length ?xs' ==> map (%x. ?a) ?xs = map (%x. ?a) ?xs'",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty), template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Trivia.set_map_fst",
     "set ?as <= set ?bs ==> set (map fst ?as) <= set (map fst ?bs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Trivia.set_map_snd",
     "set ?as <= set ?bs ==> set (map snd ?as) <= set (map snd ?bs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Trivia.right_cons_left",
     "?i < length ?as ==> (?as ## ?a) ! ?i = ?as ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 2)))),
    ("Trivia.list_ex_cmap",
     "list_ex ?P (cmap ?f ?xs) =
      (EX x. x \<in>\<in> ?xs & list_ex ?P (?f x))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app (template_hole 3, t_empty))),
    ("Trivia.cmap_insort_empty",
     "?ff ?x = [] ==> cmap ?ff (insort_key ?f ?x ?xs) = cmap ?ff ?xs",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2), template_hole 3)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Trivia.filter_cong_empty",
     "ALL x. ~ ?pred1.0 x & ~ ?pred2.0 x ==>
      filter ?pred1.0 ?xl1.0 = filter ?pred2.0 ?xl2.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Trivia.cmap_empty",
     "ALL x. x \<in>\<in> ?xl --> ?ff x = [] ==> cmap ?ff ?xl = []",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_hole 2))),
    ("Trivia.fun_upd2_eq_but_a_b",
     "?a' ~= ?a | ?b' ~= ?b ==> fun_upd2 ?f ?a ?b ?c ?a' ?b' = ?f ?a' ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4),
                 template_var 2),
               template_var 0),
             template_var 5),
           template_var 3),
         template_app
          (template_app (template_var 1, template_var 5),
           template_var 3)))),
    ("Trivia.cmap_cong_empty",
     "ALL x. ?ff x = [] & ?gg x = [] ==> cmap ?ff ?xl = cmap ?gg ?yl",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Trivia.length_gt_1_Cons_snoc",
     "[| 1 < length ?ys; !!x1 xs x2. ?ys = x1 # xs ## x2 ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Trivia.cmap_cong",
     "[| ?xs = ?ys; !!x. x \<in>\<in> ?xs ==> ?ff x = ?gg x |]
      ==> cmap ?ff ?xs = cmap ?gg ?ys",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Trivia.measure_induct2",
     "(!!x1 x2.
          (!!y1 y2. ?meas y1 y2 < ?meas x1 x2 ==> ?S y1 y2) ==>
          ?S x1 x2) ==>
      ?S ?x1.0 ?x2.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Trivia.fun_upd2_comm",
     "?a' = ?a & ?b' = ?b --> ?c' = ?c ==>
      fun_upd2 (fun_upd2 ?f ?a ?b ?c) ?a' ?b' ?c' =
      fun_upd2 (fun_upd2 ?f ?a' ?b' ?c') ?a ?b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3))),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 5),
                     template_var 3),
                   template_var 1)),
               template_var 6),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 6),
                     template_var 4),
                   template_var 2)),
               template_var 5),
             template_var 3),
           template_var 1)))),
    ("Trivia.map_prod_cong",
     "[| map (fst o ?f) ?xys = map (fst o ?f2.0) ?xys';
         map (snd o ?f) ?xys = map (snd o ?f2.0) ?xys' |]
      ==> map ?f ?xys = map ?f2.0 ?xys'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 11),
                template_var 1)),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_hole 5),
                template_var 1)),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Trivia.list_ex_list_all_inj",
     "[| list_ex (?Q ?u) ?l; list_all (?Q ?v) ?l;
         !!u v x. [| ?Q u x; ?Q v x |] ==> u = v |]
      ==> ?u = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_var 3, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_var 3, template_var 0)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 2, template_var 0))),
    ("Trivia.append_ex_unique_list_ex",
     "[| EX! i. i < length ?as & ?pred (?as ! i);
         ?as = ?as1.0 @ [?a] @ ?as2.0; ?pred ?a |]
      ==> ~ list_ex ?pred ?as1.0 & ~ list_ex ?pred ?as2.0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0))),
        template_predicate (template_app (template_var 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("Trivia.cmap_insort_empty_cong",
     "[| ?xs = ?ys; !!x. x \<in>\<in> ?xs ==> ?ff x = ?gg x; ?ff ?x = [] |]
      ==> cmap ?ff (insort_key ?f ?x ?xs) = cmap ?gg ?ys",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app (template_var 3, template_var 1), template_hole 3)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 5))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 4))))),
    ("Trivia.cmap_filter_cong",
     "[| !!x u. [| x \<in>\<in> ?xs; u \<in>\<in> ?ff x |] ==> ?q x = ?p u;
         !!x. [| x \<in>\<in> ?xs; ?q x |] ==> ?gg x = ?ff x |]
      ==> cmap (filter ?p o ?ff) ?xs = cmap ?gg (filter ?q ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 3)),
             template_var 4)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 4)))))),
    ("Trivia.subliteq_induct",
     "[| subseq ?xs ?ys; !!ys. ?\<phi> [] ys;
         !!xs ys y.
            [| subseq xs ys; ?\<phi> xs ys |] ==> ?\<phi> xs (y # ys);
         !!xs ys x.
            [| subseq xs ys; ?\<phi> xs ys |]
            ==> ?\<phi> (x # xs) (x # ys) |]
      ==> ?\<phi> ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           )))]
