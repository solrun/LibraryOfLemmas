   [("Library_Additions.less_sets_alLeast",
     "(?A \<lless> {?a..}) = (ALL x:?A. x < ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Library_Additions.less_sets_atMost",
     "({..?a} \<lless> ?A) = (ALL x:?A. ?a < x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Library_Additions.less_sets_singleton2",
     "(?A \<lless> {?a}) = (ALL x:?A. x < ?a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Library_Additions.less_sets_singleton1",
     "({?a} \<lless> ?A) = (ALL x:?A. ?a < x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Library_Additions.pair_less_iff1",
     "(((?x, ?y), ?x, ?z) : pair_less) = (?y < ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Library_Additions.nat_infinite_iff",
     "infinite ?N = (EX f. ?N = range f & strict_mono f)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty)))]
