Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Equipollence")
### theory "HOL-Cardinals.Fun_More"
### 0.068s elapsed time, 0.307s cpu time, 0.000s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Cardinals.Order_Union"
### 0.143s elapsed time, 0.597s cpu time, 0.045s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
### theory "HOL-Library.Function_Algebras"
### 0.106s elapsed time, 0.416s cpu time, 0.045s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.131s elapsed time, 0.510s cpu time, 0.104s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.281s elapsed time, 1.126s cpu time, 0.149s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.029s elapsed time, 0.121s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.135s elapsed time, 0.528s cpu time, 0.059s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.FuncSet"
### 0.477s elapsed time, 1.902s cpu time, 0.208s GC time
Loading theory "HOL-Library.Equipollence" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Library.Infinite_Set"
### 0.323s elapsed time, 1.261s cpu time, 0.163s GC time
Loading theory "HOL-Library.Ramsey" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.174s elapsed time, 0.683s cpu time, 0.099s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
### theory "HOL-Library.Nat_Bijection"
### 0.355s elapsed time, 1.396s cpu time, 0.158s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Equipollence"
### 0.292s elapsed time, 1.146s cpu time, 0.210s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
consts
  choice :: "('a => bool) => ('a * 'a) set => nat => 'a"
### theory "HOL-Library.Ramsey"
### 0.610s elapsed time, 2.289s cpu time, 0.899s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.257s elapsed time, 1.004s cpu time, 0.176s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.663s elapsed time, 2.495s cpu time, 0.864s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.867s elapsed time, 3.282s cpu time, 1.093s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.208s elapsed time, 4.633s cpu time, 1.352s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 0.807s elapsed time, 3.175s cpu time, 0.594s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.234s elapsed time, 0.907s cpu time, 0.168s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.306s elapsed time, 5.130s cpu time, 0.958s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 0.894s elapsed time, 3.499s cpu time, 0.581s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinals"
### 0.262s elapsed time, 1.038s cpu time, 0.126s GC time
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Set"
### 0.463s elapsed time, 1.675s cpu time, 0.193s GC time
Loading theory "Nash_Williams.Nash_Extras" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "Nash_Williams.Nash_Williams")
Loading theory "ZFC_in_HOL.ZFC_Library" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.834s elapsed time, 3.129s cpu time, 0.395s GC time
### theory "HOL-Library.Tree"
### 2.109s elapsed time, 8.052s cpu time, 1.275s GC time
Loading theory "Draft.Templates" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.ExtrEqs")
### theory "Nash_Williams.Nash_Extras"
### 0.345s elapsed time, 1.227s cpu time, 0.196s GC time
Loading theory "Nash_Williams.Nash_Williams" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.081s elapsed time, 0.268s cpu time, 0.072s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Erdos_MilnerMoreTemplates")
### theory "ZFC_in_HOL.ZFC_Library"
### 0.489s elapsed time, 1.673s cpu time, 0.261s GC time
Loading theory "ZFC_in_HOL.ZFC_in_HOL" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals")
### theory "Nash_Williams.Nash_Williams"
### 0.188s elapsed time, 0.578s cpu time, 0.065s GC time
instantiation
  V :: zero
  zero_V == zero_class.zero :: V
instantiation
  V :: one
  one_V == one_class.one :: V
instantiation
  V :: distrib_lattice
  inf_V == inf :: V => V => V
  sup_V == sup :: V => V => V
  less_eq_V == less_eq :: V => V => bool
  less_V == less :: V => V => bool
instantiation
  V :: Sup
  Sup_V == Sup :: V set => V
instantiation
  V :: Inf
  Inf_V == Inf :: V set => V
instantiation
  V :: conditionally_complete_lattice
instantiation
  V :: zero_neq_one
instantiation
  V :: zero_less_one
consts
  ord_of_nat :: "nat => V"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.976s elapsed time, 2.770s cpu time, 1.476s GC time
### theory "ZFC_in_HOL.ZFC_in_HOL"
### 0.893s elapsed time, 2.370s cpu time, 1.410s GC time
Loading theory "ZFC_in_HOL.ZFC_Cardinals" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby")
### theory "ZFC_in_HOL.ZFC_Cardinals"
### 0.727s elapsed time, 0.856s cpu time, 0.179s GC time
Loading theory "ZFC_in_HOL.Kirby" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp")
Loading theory "ZFC_in_HOL.ZFC_Typeclasses" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions")
instantiation
  V :: plus
  plus_V == plus :: V => V => V
instantiation
  V :: monoid_add
instantiation
  V :: times
  times_V == times :: V => V => V
instantiation
  V :: monoid_mult
### Additional type variable(s) in locale specification "embeddable": 'a
### theory "ZFC_in_HOL.Kirby"
### 0.724s elapsed time, 2.112s cpu time, 1.455s GC time
Loading theory "ZFC_in_HOL.Ordinal_Exp" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions" via "Draft.Library_Additions")
class embeddable = type +
  assumes "ex_inj": "EX V_of. inj V_of"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
### theory "ZFC_in_HOL.Ordinal_Exp"
### 0.140s elapsed time, 0.321s cpu time, 0.082s GC time
Loading theory "Draft.Library_Additions" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions")
Loading theory "ZFC_in_HOL.Cantor_NF" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner" via "Draft.Partitions")
consts
  V_of_list :: "('a => V) => 'a list => V"
### Additional type variable(s) in locale specification "small": 'a
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
class small = type +
  assumes "small": "small UNIV"
Found termination order: "length <*mlex*> {}"
### Ignoring duplicate rewrite rule:
### ((?x1, ?y1), ?x1, ?z1) : pair_less == ?y1 < ?z1
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
class countable = embeddable +
  assumes "ex_inj": "EX to_nat. inj to_nat"
### theory "Draft.Library_Additions"
### 0.370s elapsed time, 1.160s cpu time, 0.179s GC time
### theory "ZFC_in_HOL.Cantor_NF"
### 0.439s elapsed time, 1.281s cpu time, 0.179s GC time
### theory "ZFC_in_HOL.ZFC_Typeclasses"
### 1.479s elapsed time, 4.036s cpu time, 1.825s GC time
Loading theory "Draft.Partitions" (required by "Draft.Erdos_MilnerMoreTemplates" via "Draft.Erdos_Milner")
### theory "Draft.Partitions"
### 0.576s elapsed time, 0.640s cpu time, 0.084s GC time
Loading theory "Draft.Erdos_Milner" (required by "Draft.Erdos_MilnerMoreTemplates")
### theory "Draft.Erdos_Milner"
### 0.139s elapsed time, 0.233s cpu time, 0.125s GC time
Loading theory "Draft.Erdos_MilnerMoreTemplates"
val templateLemmas =
   [("Erdos_Milner.Theorem_3_2",
     "partn_lst_VWF (\<omega> \<up> ord_of_nat (?n * ?k))
       [\<omega> \<up> ord_of_nat ?n, ord_of_nat ?k] 2",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app (template_hole 6, template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 0)),
                 template_hole 3))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))
         )),
    ("Erdos_Milner.remark_3",
     "partn_lst_VWF (\<omega> \<up> ord_of_nat (Suc (4 * ?k)))
       [ord_of_nat 4, \<omega> \<up> ord_of_nat (Suc (2 * ?k))] 2",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3, template_hole 2)))),
                         template_var 0)))))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 3, template_hole 2))))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2))),
                           template_var 0))))),
                 template_hole 0))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))
         )),
    ("Erdos_Milner.Erdos_Milner",
     "?\<nu> : elts \<omega>1 ==>
      partn_lst_VWF (\<omega> \<up> (1 + ?\<nu> * ord_of_nat ?n))
       [ord_of_nat (2 ^ ?n), \<omega> \<up> (1 + ?\<nu>)] 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_hole 15,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app
                      (template_app (template_hole 8, template_hole 13),
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_app
                          (template_hole 6, template_var 0)))))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_app
                        (template_app (template_hole 8, template_hole 13),
                         template_var 1))),
                   template_hole 0))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))
           ))),
    ("Erdos_Milner.Erdos_Milner_aux",
     "[| partn_lst_VWF ?\<alpha> [ord_of_nat ?k, ?\<gamma>] 2;
         indecomposable ?\<alpha>; 1 < ?k; Ord ?\<gamma>;
         ?\<beta> : elts \<omega>1 |]
      ==> partn_lst_VWF (?\<alpha> * ?\<beta>)
           [ord_of_nat (2 * ?k), min ?\<gamma> (\<omega> * ?\<beta>)] 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_app (template_hole 17, template_var 3)),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2)),
                  template_app
                   (template_app (template_hole 16, template_var 1),
                    template_hole 14))),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_hole 11)))
            ),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_inequation (less_than, template_hole 8, template_var 2),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 17,
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 19, template_hole 18),
                 template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12, template_hole 11))),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 3, template_hole 0),
                         template_var 0))),
                   template_hole 14))),
             template_app
              (template_hole 13,
               template_app (template_hole 12, template_hole 11)))
           ))),
    ("Erdos_Milner.indecomposable_imp_Ex_less_sets",
     "[| indecomposable ?\<alpha>; \<omega> <= ?\<alpha>; tp ?A = ?\<alpha>;
         small ?A; ?A <= ON; ?x : ?A; tp ?A1.0 = ?\<alpha>; ?A1.0 <= ?A;
         !!A2. [| tp A2 = ?\<alpha>; A2 <= ?A1.0; {?x} \<lless> A2 |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_inequation (less_equals, template_hole 12, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_hole 9),
          template_var 4),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 6, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 1),
            template_hole 9),
          template_var 4),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Erdos_Milner.strong_ordertype_eq",
     "[| ?D <= elts ?\<beta>; Ord ?\<beta>;
         !!L. [| \<Union> (list.set L) = ?D;
                 !!X. X : list.set L ==> indecomposable (tp X);
                 !!M. [| M <= ?D;
                         !!X. X : list.set L ==> tp X <= tp (M Int X) |]
                      ==> tp M = tp ?D |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Erdos_MilnerMoreTemplates"
### 0.854s elapsed time, 2.319s cpu time, 1.879s GC time
val it = (): unit
