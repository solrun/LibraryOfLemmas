Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Equipollence")
### theory "HOL-Cardinals.Fun_More"
### 0.069s elapsed time, 0.297s cpu time, 0.000s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "HOL-Cardinals.Order_Union"
### 0.111s elapsed time, 0.457s cpu time, 0.058s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.117s elapsed time, 0.458s cpu time, 0.058s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.072s elapsed time, 0.288s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.209s elapsed time, 0.842s cpu time, 0.058s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.064s elapsed time, 0.241s cpu time, 0.122s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.139s elapsed time, 0.544s cpu time, 0.071s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
### theory "HOL-Library.FuncSet"
### 0.425s elapsed time, 1.683s cpu time, 0.250s GC time
Loading theory "HOL-Library.Equipollence" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Library.Infinite_Set"
### 0.284s elapsed time, 1.113s cpu time, 0.193s GC time
Loading theory "HOL-Library.Ramsey" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions")
### theory "HOL-Library.Nat_Bijection"
### 0.324s elapsed time, 1.270s cpu time, 0.193s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.185s elapsed time, 0.726s cpu time, 0.110s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
### theory "HOL-Library.Equipollence"
### 0.260s elapsed time, 1.026s cpu time, 0.110s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
consts
  choice :: "('a => bool) => ('a * 'a) set => nat => 'a"
### theory "HOL-Library.Ramsey"
### 0.642s elapsed time, 2.375s cpu time, 0.881s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.663s elapsed time, 2.458s cpu time, 0.863s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.236s elapsed time, 0.931s cpu time, 0.091s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.850s elapsed time, 3.198s cpu time, 0.947s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.192s elapsed time, 4.541s cpu time, 1.193s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  left :: "'a tree => 'a tree"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 0.793s elapsed time, 3.116s cpu time, 0.540s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.237s elapsed time, 0.935s cpu time, 0.188s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 1.203s elapsed time, 4.547s cpu time, 1.637s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Library.Countable"
### 1.584s elapsed time, 6.050s cpu time, 1.858s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinals"
### 0.235s elapsed time, 0.931s cpu time, 0.033s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Set"
### 0.436s elapsed time, 1.551s cpu time, 0.124s GC time
Loading theory "Nash_Williams.Nash_Extras" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "Nash_Williams.Nash_Williams")
Loading theory "ZFC_in_HOL.ZFC_Library" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.096s elapsed time, 3.967s cpu time, 1.280s GC time
### theory "Nash_Williams.Nash_Extras"
### 0.323s elapsed time, 1.182s cpu time, 0.135s GC time
Loading theory "Nash_Williams.Nash_Williams" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions")
### theory "HOL-Library.Tree"
### 2.412s elapsed time, 9.003s cpu time, 2.150s GC time
Loading theory "Draft.Templates" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.091s elapsed time, 0.314s cpu time, 0.083s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Library_AdditionsMoreTemplates")
### theory "ZFC_in_HOL.ZFC_Library"
### 0.472s elapsed time, 1.675s cpu time, 0.217s GC time
Loading theory "ZFC_in_HOL.ZFC_in_HOL" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby" via "ZFC_in_HOL.ZFC_Cardinals")
### theory "Nash_Williams.Nash_Williams"
### 0.198s elapsed time, 0.637s cpu time, 0.083s GC time
instantiation
  V :: zero
  zero_V == zero_class.zero :: V
instantiation
  V :: one
  one_V == one_class.one :: V
instantiation
  V :: distrib_lattice
  inf_V == inf :: V => V => V
  sup_V == sup :: V => V => V
  less_eq_V == less_eq :: V => V => bool
  less_V == less :: V => V => bool
instantiation
  V :: Sup
  Sup_V == Sup :: V set => V
instantiation
  V :: Inf
  Inf_V == Inf :: V set => V
instantiation
  V :: conditionally_complete_lattice
instantiation
  V :: zero_neq_one
instantiation
  V :: zero_less_one
consts
  ord_of_nat :: "nat => V"
### theory "ZFC_in_HOL.ZFC_in_HOL"
### 0.879s elapsed time, 2.419s cpu time, 1.392s GC time
Loading theory "ZFC_in_HOL.ZFC_Cardinals" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp" via "ZFC_in_HOL.Kirby")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.991s elapsed time, 2.726s cpu time, 1.503s GC time
### theory "ZFC_in_HOL.ZFC_Cardinals"
### 0.743s elapsed time, 0.992s cpu time, 0.299s GC time
Loading theory "ZFC_in_HOL.Kirby" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions" via "ZFC_in_HOL.Ordinal_Exp")
instantiation
  V :: plus
  plus_V == plus :: V => V => V
instantiation
  V :: monoid_add
instantiation
  V :: times
  times_V == times :: V => V => V
instantiation
  V :: monoid_mult
### theory "ZFC_in_HOL.Kirby"
### 0.323s elapsed time, 0.424s cpu time, 0.135s GC time
Loading theory "ZFC_in_HOL.Ordinal_Exp" (required by "Draft.Library_AdditionsMoreTemplates" via "Draft.Library_Additions")
### theory "ZFC_in_HOL.Ordinal_Exp"
### 0.090s elapsed time, 0.090s cpu time, 0.000s GC time
Loading theory "Draft.Library_Additions" (required by "Draft.Library_AdditionsMoreTemplates")
### Ignoring duplicate rewrite rule:
### ((?x1, ?y1), ?x1, ?z1) : pair_less == ?y1 < ?z1
### theory "Draft.Library_Additions"
### 0.292s elapsed time, 0.395s cpu time, 0.138s GC time
Loading theory "Draft.Library_AdditionsMoreTemplates"
val templateLemmas =
   [("Library_Additions.less_sets_empty2", "?A \<lless> {}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Library_Additions.less_sets_empty1", "{} \<lless> ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Library_Additions.strict_mono_enum",
     "infinite ?N ==> strict_mono (enum ?N)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Library_Additions.less_sets_Suc_Max",
     "finite ?A ==> ?A \<lless> {Suc (Max ?A)..}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Library_Additions.sorted_list_of_set_set_of",
     "strict_sorted ?l ==> sorted_list_of_set (list.set ?l) = ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Library_Additions.less_sets_alLeast",
     "(?A \<lless> {?a..}) = (ALL x:?A. x < ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Library_Additions.less_sets_atMost",
     "({..?a} \<lless> ?A) = (ALL x:?A. ?a < x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Library_Additions.infinite_nat_greaterThan",
     "infinite ?N ==> infinite (?N Int {?m<..})",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("Library_Additions.enum_0_eq_Inf",
     "infinite ?N ==> enum ?N 0 = \<Sqinter> ?N",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Library_Additions.range_enum", "infinite ?N ==> range (enum ?N) = ?N",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0),
         template_var 0))),
    ("Library_Additions.less_sets_singleton2",
     "(?A \<lless> {?a}) = (ALL x:?A. x < ?a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Library_Additions.less_sets_singleton1",
     "({?a} \<lless> ?A) = (ALL x:?A. ?a < x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Library_Additions.pair_less_iff1",
     "(((?x, ?y), ?x, ?z) : pair_less) = (?y < ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Library_Additions.strict_mono_sets_subset",
     "[| strict_mono_sets ?B ?f; ?A <= ?B |] ==> strict_mono_sets ?A ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Library_Additions.nat_infinite_iff",
     "infinite ?N = (EX f. ?N = range f & strict_mono f)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Library_Additions.strict_mono_sets_imp_disjoint",
     "strict_mono_sets ?A ?f ==> pairwise (%x y. disjnt (?f x) (?f y)) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Library_Additions.enum_works",
     "infinite ?N ==> ?N = range (enum ?N) & strict_mono (enum ?N)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 1))),
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Library_Additions.sorted_le_last",
     "[| sorted ?xs; ?x : list.set ?xs |] ==> ?x <= last ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("Library_Additions.sorted_hd_le",
     "[| sorted ?xs; ?x : list.set ?xs |] ==> hd ?xs <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Library_Additions.hd_list_of",
     "[| finite ?A; ?A ~= {} |] ==> hd (sorted_list_of_set ?A) = Min ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Library_Additions.enum_0_eq_Inf_finite",
     "[| finite ?N; ?N ~= {} |] ==> enum ?N 0 = \<Sqinter> ?N",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Library_Additions.sorted_hd_le_last",
     "[| sorted ?xs; ?xs ~= [] |] ==> hd ?xs <= last ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Library_Additions.atLeast_le_enum",
     "[| ?N <= {?x..}; infinite ?N |] ==> ?x <= enum ?N ?i",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Library_Additions.greaterThan_less_enum",
     "[| ?N <= {?x<..}; infinite ?N |] ==> ?x < enum ?N ?i",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Library_Additions.atLeast_less_sets",
     "[| ?A \<lless> {?x}; ?B <= {?x..} |] ==> ?A \<lless> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Library_Additions.enum_works_finite",
     "finite ?N ==>
      ?N = enum ?N ` {..<card ?N} & strict_mono_on (enum ?N) {..<card ?N}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0))))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))))
           ))),
    ("Library_Additions.sorted_list_of_set_insert_remove_cons",
     "[| finite ?A; {?a} \<lless> ?A |]
      ==> sorted_list_of_set (insert ?a ?A) = ?a # sorted_list_of_set ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 1, template_var 1))))),
    ("Library_Additions.range_strict_mono_ext",
     "[| range ?f = range ?g; strict_mono ?f; strict_mono ?g |]
      ==> ?f = ?g",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Library_Additions.strict_mono_on_o",
     "[| strict_mono_on ?r ?A; strict_mono_on ?s ?B; ?s ` ?B <= ?A |]
      ==> strict_mono_on (?r o ?s) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Library_Additions.sorted_list_of_set_Un",
     "[| ?A \<lless> ?B; finite ?A; finite ?B |]
      ==> sorted_list_of_set (?A Un ?B) =
          sorted_list_of_set ?A @ sorted_list_of_set ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Library_Additions.strict_mono_setsD",
     "[| strict_mono_sets ?A ?f; ?x < ?y; ?x : ?A; ?y : ?A |]
      ==> ?f ?x \<lless> ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Library_Additions.hd_lex",
     "[| hd ?ms < hd ?ns; length ?ms = length ?ns; ?ns ~= [] |]
      ==> (?ms, ?ns) : lex less_than",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Library_Additions.less_sets_imp_strict_mono_sets",
     "[| !!i. ?A i \<lless> ?A (Suc i); !!i. 0 < i ==> ?A i ~= {} |]
      ==> strict_mono_sets UNIV ?A",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Library_Additions.finite_enumerate_Diff_singleton",
     "[| finite ?S; ?i < card ?S; enum ?S ?i < ?x |]
      ==> enum (?S - {?x}) ?i = enum ?S ?i",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 1),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Library_Additions.strict_mono_less_sets_Min",
     "[| strict_mono_sets ?I ?f; finite ?I; ?I ~= {} |]
      ==> ?f (Min ?I) \<lless> \<Union> (?f ` (?I - {Min ?I}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_var 0,
                 template_app (template_hole 4, template_var 1))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 1)),
                     template_hole 6)))))
           ))),
    ("Library_Additions.enum_obtain_index_finite",
     "[| ?x : ?N; finite ?N;
         !!i. [| i < card ?N; ?x = enum ?N i |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Library_Additions.sorted_list_of_set_UN_atMost",
     "[| strict_mono_sets {..?k} ?A; !!i. i <= ?k ==> finite (?A i) |]
      ==> sorted_list_of_set (\<Union> (?A ` {..?k})) =
          concat
           (map (sorted_list_of_set o ?A) (sorted_list_of_set {..?k}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 11, template_var 1)))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 11, template_var 1))))))),
    ("Library_Additions.sorted_list_of_set_UN_lessThan",
     "[| strict_mono_sets {..<?k} ?A; !!i. i < ?k ==> finite (?A i) |]
      ==> sorted_list_of_set (\<Union> (?A ` {..<?k})) =
          concat
           (map (sorted_list_of_set o ?A) (sorted_list_of_set {..<?k}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 11, template_var 1)))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 11, template_var 1))))))),
    ("Library_Additions.infinite_finite_Inter",
     "[| finite ?\<A>; ?\<A> ~= {}; !!A. A : ?\<A> ==> infinite A;
         !!A B. [| A : ?\<A>; B : ?\<A> |] ==> A Int B : ?\<A> |]
      ==> infinite (\<Inter> ?\<A>)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0))
               )
           )))]:
   (string * thm * template) list
### theory "Draft.Library_AdditionsMoreTemplates"
### 0.368s elapsed time, 0.525s cpu time, 0.098s GC time
val it = (): unit
