   [("Omega_Omega.USigma_empty", "USigma {} ?B = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Omega_Omega.Nil", "omega_sum_aux 0 ?uu = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Omega_Omega.Suc", "omega_sum_aux (Suc ?n) [] = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Omega_Omega.length_acc_lengths",
     "length (acc_lengths ?acc ?ls) = length ?ls",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Omega_Omega.length_into_WW", "length (into_WW ?x ?ns) = length ?ns",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Omega_Omega.from_into_WW", "from_WW ?k (into_WW ?k ?ns) = ?ns",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Omega_Omega.grab_0", "grab ?N 0 = ({}, ?N)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Omega_Omega.normal_Cons_iff", "normal (?m # ?ms) = (0 < ?m)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 1))),
    ("Omega_Omega.finite_grab_iff", "finite (snd (grab ?N ?n)) = finite ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app (template_hole 2, template_var 1))),
    ("Omega_Omega.acc_lengths_eq_Nil_iff",
     "(acc_lengths ?acc ?ls = []) = (?ls = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Omega_Omega.interact_sing", "interact [?x] ?ys = ?x @ concat ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.ordertype_WW_seg",
     "ordertype (WW_seg ?n) (lenlex less_than) =
      \<omega> \<up> ord_of_nat ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, template_hole 3)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.hd_acc_lengths",
     "hd (acc_lengths ?acc (?l # ?ls)) = ?acc + length ?l",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Omega_Omega.set_interact",
     "list.set (interact ?xs ?ys) =
      list.set (concat ?xs) Un list.set (concat ?ys)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("Omega_Omega.acc_lengths_plus",
     "acc_lengths (?m + ?n) ?as = map ((+) ?m) (acc_lengths ?n ?as)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Omega_Omega.prev_eq_None_iff",
     "(prev ?j ?i = None) = (?j <= Suc 0 & ?i = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_dunno)),
    ("Omega_Omega.ordertype_list_seg",
     "ordertype {l. length l = ?n} (lenlex less_than) =
      \<omega> \<up> ord_of_nat ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app (template_hole 4, template_hole 3)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.initial_segment_Cons",
     "initial_segment (?x # ?xs) (?y # ?ys) =
      (?x = ?y & initial_segment ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Omega_Omega.mem_lists_non_Nil",
     "(?xss : lists (- {[]})) = (ALL x:list.set ?xss. x ~= [])",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4)))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty))),
    ("Omega_Omega.strict_sorted_append_iff",
     "strict_sorted (?xs @ ?ys) =
      (?xs < ?ys & strict_sorted ?xs & strict_sorted ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Omega_Omega.Null1",
     "merge [] ?bs ?us ?vs = (?bs = [] & ?us = [] & ?vs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Omega_Omega.into_WW_lenlex_iff",
     "((into_WW ?k ?ms, into_WW ?k ?ns) : lenlex less_than) =
      ((?ms, ?ns) : lenlex less_than)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app (template_hole 1, template_hole 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Omega_Omega.acc_lengths_append",
     "acc_lengths ?acc (?xs @ ?ys) =
      acc_lengths ?acc ?xs @
      acc_lengths (?acc + sum_list (map length ?xs)) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)))),
           template_var 0)))),
    ("Omega_Omega.Cons",
     "omega_sum_aux (Suc ?n) (?m # ?ms) =
      \<omega> \<up> ord_of_nat ?n * ord_of_nat ?m + omega_sum_aux ?n ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("Omega_Omega.omega_sum_drop",
     "omega_sum (dropWhile (%n. n = 0) ?ns) = omega_sum ?ns",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 0))),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_var 0))),
    ("Omega_Omega.IJ_iff",
     "(?u : IJ ?k) = (EX j i. ?u = (j, i) & i < j & j <= ?k)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Omega_Omega.omega_sum_less_iff",
     "(((length ?ms, omega_sum ?ms), length ?ns, omega_sum ?ns)
       : less_than <*lex*> VWF) =
      ((?ms, ?ns) : lenlex less_than)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 7, template_var 1)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 7, template_var 0)),
                 template_var 0)))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_hole 4)))),
    ("Omega_Omega.Null2",
     "merge ?as [] ?us ?vs =
      (?as = [] & ?us = [] & ?vs = [] |
       ?us = [concat ?as] & ?vs = [] & ?as ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Omega_Omega.lenlex_nsets_2_eq",
     "[?A]\<^bsup>2\<^esup> =
      {{x, y} |x y. x : ?A & y : ?A & (x, y) : lenlex less_than}",
     template_equation
      (template_app
        (template_app (template_hole 14, template_var 0),
         template_app
          (template_hole 13,
           template_app (template_hole 12, template_hole 11))),
       template_app (template_hole 10, t_empty))),
    ("Omega_Omega.omega_sum_lex_less_iff_cases",
     "(((length ?ms, omega_sum (?m # ?ms)), length ?ns,
        omega_sum (?n # ?ns))
       : less_than <*lex*> VWF) =
      (length ?ms < length ?ns |
       length ?ms = length ?ns & ?m < ?n |
       ?m = ?n &
       ((length ?ms, omega_sum ?ms), length ?ns, omega_sum ?ns)
       : less_than <*lex*> VWF)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 7, template_var 2),
                              template_var 3))),
                        template_app
                         (template_app (template_hole 7, template_var 2),
                          template_var 3)))),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_var 1)),
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_app (template_hole 7, template_var 0),
                            template_var 1))),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_var 1))))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            )],
       template_dunno))]
