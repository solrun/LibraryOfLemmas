   [("Omega_Omega.finite_IJ", "finite (IJ ?k)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Omega_Omega.initial_segment_Nil", "initial_segment [] ?ys",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Omega_Omega.less_Nil", "[] < ?xs",
     template_inequation (less_than, template_hole 0, template_var 0)),
    ("Omega_Omega.less_Nil", "?xs < []",
     template_inequation (less_than, template_var 0, template_hole 0)),
    ("Omega_Omega.inj_into_WW", "inj (into_WW ?k)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Omega_Omega.WW_seg_subset_WW", "WW_seg ?n <= WW",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Omega_Omega.total_llt", "total_on ?A (lenlex less_than)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Omega_Omega.Ord_omega_sum_aux", "Ord (omega_sum_aux ?k ?ms)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Omega_Omega.finite_grab", "finite (fst (grab ?N ?n))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Omega_Omega.USigma_empty", "USigma {} ?B = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Omega_Omega.Nil", "omega_sum_aux 0 ?uu = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Omega_Omega.strict_sorted_into_WW", "strict_sorted (into_WW ?x ?ns)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Omega_Omega.nxt_subset", "nxt ?N ?n <= ?N",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("Omega_Omega.Ord_omega_sum", "Ord (omega_sum ?ms)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0))
         )),
    ("Omega_Omega.Suc", "omega_sum_aux (Suc ?n) [] = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Omega_Omega.fst_grab_subset", "fst (grab ?N ?n) <= ?N",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Omega_Omega.snd_grab_subset", "snd (grab ?N ?n) <= ?N",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Omega_Omega.length_acc_lengths",
     "length (acc_lengths ?acc ?ls) = length ?ls",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Omega_Omega.length_into_WW", "length (into_WW ?x ?ns) = length ?ns",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Omega_Omega.from_into_WW", "from_WW ?k (into_WW ?k ?ns) = ?ns",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Omega_Omega.grab_0", "grab ?N 0 = ({}, ?N)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Omega_Omega.normal_drop", "normal (dropWhile (%n. n = 0) ?ns)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))
         )),
    ("Omega_Omega.normal_Cons_iff", "normal (?m # ?ms) = (0 < ?m)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 1))),
    ("Omega_Omega.finite_grab_iff", "finite (snd (grab ?N ?n)) = finite ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app (template_hole 2, template_var 1))),
    ("Omega_Omega.omega_sum_aux_less",
     "omega_sum_aux ?k ?ms < \<omega> \<up> ord_of_nat ?k",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 1)))),
    ("Omega_Omega.omega_sum_less_\<omega>\<omega>",
     "omega_sum ?ms < \<omega> \<up> \<omega>",
     template_inequation
      (less_than,
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_hole 0))),
    ("Omega_Omega.acc_lengths_eq_Nil_iff",
     "(acc_lengths ?acc ?ls = []) = (?ls = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Omega_Omega.interact_sing", "interact [?x] ?ys = ?x @ concat ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.ordertype_WW_seg",
     "ordertype (WW_seg ?n) (lenlex less_than) =
      \<omega> \<up> ord_of_nat ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, template_hole 3)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.omega_sum_less",
     "omega_sum ?ms < \<omega> \<up> ord_of_nat (length ?ms)",
     template_inequation
      (less_than,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("Omega_Omega.infinite_nxtN", "infinite ?N ==> infinite (nxt ?N ?n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Omega_Omega.less_sets_imp_list_less",
     "list.set ?xs \<lless> list.set ?ys ==> ?xs < ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Omega_Omega.hd_acc_lengths",
     "hd (acc_lengths ?acc (?l # ?ls)) = ?acc + length ?l",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Omega_Omega.inj_enum_nxt",
     "infinite ?N ==> inj_on (enum (nxt ?N ?a)) ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("Omega_Omega.less_sets_fst_grab",
     "?A \<lless> ?N ==> ?A \<lless> fst (grab ?N ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Omega_Omega.nxt_subset_atLeast", "?m <= ?n ==> nxt ?N ?n <= {?m..}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("Omega_Omega.nxt_subset_greaterThan",
     "?m <= ?n ==> nxt ?N ?n <= {?m<..}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("Omega_Omega.Form_Body_WW",
     "Form_Body ?ka ?kb ?xs ?ys ?zs ==> ?zs : WW",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Omega_Omega.less_hd_imp_less", "?xs < [hd ?ys] ==> ?xs < ?ys",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0)),
            template_hole 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Omega_Omega.into_WW_imp_ge",
     "?y : list.set (into_WW ?x ?ns) ==> ?x <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_inequation (less_equals, template_var 1, template_var 2))),
    ("Omega_Omega.normal_Cantor_\<omega>\<omega>",
     "?\<gamma> : elts (\<omega> \<up> \<omega>) ==>
      normal (Cantor_\<omega>\<omega> ?\<gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Omega_Omega.inj_omega_sum", "inj_on omega_sum {l. length l = ?n}",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 1, t_empty))
         )),
    ("Omega_Omega.set_interact",
     "list.set (interact ?xs ?ys) =
      list.set (concat ?xs) Un list.set (concat ?ys)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("Omega_Omega.acc_lengths_plus",
     "acc_lengths (?m + ?n) ?as = map ((+) ?m) (acc_lengths ?n ?as)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Omega_Omega.card_grab",
     "infinite ?N ==> card (fst (grab ?N ?n)) = ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("Omega_Omega.enum_nxt_ge", "infinite ?N ==> ?a <= enum (nxt ?N ?a) ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Omega_Omega.into_from_WW",
     "strict_sorted ?ns ==> into_WW 0 (from_WW 0 ?ns) = ?ns",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0)),
         template_var 0))),
    ("Omega_Omega.merge_length_less2",
     "merge ?as ?bs ?us ?vs ==> length ?vs <= length ?as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 3)))),
    ("Omega_Omega.merge_length_le",
     "merge ?as ?bs ?us ?vs ==> length ?vs <= length ?us",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Omega_Omega.Form_Body_nonempty",
     "Form_Body ?ka ?kb ?xs ?ys ?zs ==> 0 < length ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.sum_sorted_list_of_set_map",
     "finite ?I ==> sum_list (map ?f (list_of ?I)) = sum ?f ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Omega_Omega.length_hd_le_concat",
     "?as ~= [] ==> length (hd ?as) <= length (concat ?as)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Omega_Omega.merge_length_le_Suc",
     "merge ?as ?bs ?us ?vs ==> length ?us <= Suc (length ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Omega_Omega.Form_Body_length",
     "Form_Body ?ka ?kb ?xs ?ys ?zs ==> length ?xs < length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Omega_Omega.prev_eq_None_iff",
     "(prev ?j ?i = None) = (?j <= Suc 0 & ?i = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 1))
           ))),
    ("Omega_Omega.ordertype_list_seg",
     "ordertype {l. length l = ?n} (lenlex less_than) =
      \<omega> \<up> ord_of_nat ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app (template_hole 4, template_hole 3)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.omega_sum_0_iff",
     "normal ?ns ==> (omega_sum ?ns = 0) = (?ns = [])",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_var 0),
           template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Omega_Omega.less_sets_grab",
     "infinite ?N ==> fst (grab ?N ?n) \<lless> snd (grab ?N ?n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Omega_Omega.lemma_3_11",
     "0 < ?l ==> thin (inter_scheme ?l ` {U. Form ?l U})",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 1, t_empty)))
           ))),
    ("Omega_Omega.length_hd_merge2",
     "merge ?as ?bs ?us ?vs ==> length (hd ?bs) <= length (hd ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Omega_Omega.strict_sorted_acc_lengths",
     "?ls : lists (- {[]}) ==> strict_sorted (acc_lengths ?acc ?ls)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Omega_Omega.initial_segment_Cons",
     "initial_segment (?x # ?xs) (?y # ?ys) =
      (?x = ?y & initial_segment ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Omega_Omega.acc_lengths_shift",
     "NO_MATCH (0::?'a) ?acc ==>
      acc_lengths ?acc ?as = map ((+) ?acc) (acc_lengths 0 ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 0))))),
    ("Omega_Omega.prev_pair_less",
     "prev ?j ?i = Some ?ji' ==> (?ji', ?j, ?i) : pair_less",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_hole 0)
           ))),
    ("Omega_Omega.length_concat_ge",
     "?as : lists (- {[]}) ==> length ?as <= length (concat ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4))))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Omega_Omega.inter_scheme_strict_sorted",
     "[| Form ?l ?U; 0 < ?l |] ==> strict_sorted (inter_scheme ?l ?U)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Omega_Omega.initial_segment_length_eq",
     "[| initial_segment ?xs ?ys; length ?xs = length ?ys |] ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Omega_Omega.mem_lists_non_Nil",
     "(?xss : lists (- {[]})) = (ALL x:list.set ?xss. x ~= [])",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4)))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty))),
    ("Omega_Omega.grab_Un_eq",
     "infinite ?N ==> fst (grab ?N ?n) Un snd (grab ?N ?n) = ?N",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 1))),
    ("Omega_Omega.length_concat_acc_lengths",
     "?ls ~= [] ==>
      ?k + length (concat ?ls) : list.set (acc_lengths ?k ?ls)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Omega_Omega.strict_sorted_interact_imp_concat",
     "strict_sorted (interact ?as ?bs) ==>
      strict_sorted (concat ?as) & strict_sorted (concat ?bs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Omega_Omega.acc_lengths_merge1",
     "merge ?as ?bs ?us ?vs ==>
      list.set (acc_lengths ?k ?us) <= list.set (acc_lengths ?k ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4))))),
    ("Omega_Omega.acc_lengths_merge2",
     "merge ?as ?bs ?us ?vs ==>
      list.set (acc_lengths ?k ?vs) <= list.set (acc_lengths ?k ?bs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("Omega_Omega.Cantor_\<omega>\<omega>",
     "?\<gamma> : elts (\<omega> \<up> \<omega>) ==>
      omega_sum (Cantor_\<omega>\<omega> ?\<gamma>) = ?\<gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 4)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Omega_Omega.set_acc_lengths",
     "?ls : lists (- {[]}) ==>
      list.set (acc_lengths ?acc ?ls) <= {?acc<..}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.strict_sorted_append_iff",
     "strict_sorted (?xs @ ?ys) =
      (?xs < ?ys & strict_sorted ?xs & strict_sorted ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Omega_Omega.Null1",
     "merge [] ?bs ?us ?vs = (?bs = [] & ?us = [] & ?vs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_hole 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 2)))
           ))),
    ("Omega_Omega.into_WW_lenlex_iff",
     "((into_WW ?k ?ms, into_WW ?k ?ns) : lenlex less_than) =
      ((?ms, ?ns) : lenlex less_than)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app (template_hole 1, template_hole 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Omega_Omega.last_acc_lengths",
     "?ls ~= [] ==>
      last (acc_lengths ?acc ?ls) = ?acc + sum_list (map length ?ls)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)))))),
    ("Omega_Omega.merge_length1_gt_0",
     "[| merge ?as ?bs ?us ?vs; ?as ~= [] |] ==> 0 < length ?us",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 1)))),
    ("Omega_Omega.acc_lengths_append",
     "acc_lengths ?acc (?xs @ ?ys) =
      acc_lengths ?acc ?xs @
      acc_lengths (?acc + sum_list (map length ?xs)) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)))),
           template_var 0)))),
    ("Omega_Omega.Cons",
     "omega_sum_aux (Suc ?n) (?m # ?ms) =
      \<omega> \<up> ord_of_nat ?n * ord_of_nat ?m + omega_sum_aux ?n ?ms",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("Omega_Omega.singleton_less_list_iff",
     "sorted ?xs ==> ([?n] < ?xs) = ({..?n} Int list.set ?xs = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 1)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_hole 5)),
                template_var 1)
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_hole 0)))),
    ("Omega_Omega.merge_preserves",
     "merge ?as ?bs ?us ?vs ==>
      concat ?as = concat ?us & concat ?bs = concat ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Omega_Omega.take_initial_segment",
     "[| initial_segment ?xs ?ys; ?k <= length ?xs |]
      ==> take ?k ?xs = take ?k ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Omega_Omega.prev_Some_less",
     "[| prev ?j ?i = Some (?j', ?i'); ?i <= ?j |] ==> ?i' < ?j'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0))),
        template_inequation (less_equals, template_var 2, template_var 3)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Omega_Omega.less_sets_imp_sorted_list_of_set",
     "[| ?A \<lless> ?B; finite ?A; finite ?B |]
      ==> list_of ?A < list_of ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Omega_Omega.omega_sum_drop",
     "omega_sum (dropWhile (%n. n = 0) ?ns) = omega_sum ?ns",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 0))),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_var 0))),
    ("Omega_Omega.less_list_iff_less_sets",
     "[| sorted ?xs; sorted ?ys |]
      ==> (?xs < ?ys) = (list.set ?xs \<lless> list.set ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Omega_Omega.init_segment_iff_initial_segment",
     "[| strict_sorted ?xs; strict_sorted ?ys |]
      ==> init_segment (list.set ?xs) (list.set ?ys) =
          initial_segment ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Omega_Omega.acc_lengths_concat_injective",
     "[| concat ?as' = concat ?as;
         acc_lengths ?n ?as' = acc_lengths ?n ?as |]
      ==> ?as' = ?as",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 1))),
    ("Omega_Omega.omega_sum_ge",
     "?m ~= 0 ==>
      \<omega> \<up> ord_of_nat (length ?ms) <= omega_sum (?m # ?ms)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Omega_Omega.partition_\<omega>\<omega>_aux",
     "?\<alpha> : elts \<omega> ==>
      Partitions.partn_lst (lenlex less_than) WW
       [\<omega> \<up> \<omega>, ?\<alpha>] 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, template_hole 10))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7)),
                 template_hole 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 10),
                     template_hole 10)),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 3))),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("Omega_Omega.eq_omega_sum_eq_iff",
     "length ?ms = length ?ns ==>
      (omega_sum ?ms = omega_sum ?ns) = (?ms = ?ns)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 0)),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Omega_Omega.omega_sum_length_less",
     "[| normal ?ns; length ?ms < length ?ns |]
      ==> omega_sum ?ms < omega_sum ?ns",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 1)))),
    ("Omega_Omega.omega_sum_length_leD",
     "[| omega_sum ?ms <= omega_sum ?ns; normal ?ms |]
      ==> length ?ms <= length ?ns",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_var 1),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0)),
            template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Omega_Omega.sorted_list_of_set_imp_less_sets",
     "[| ?xs < ?ys; sorted ?xs; sorted ?ys |]
      ==> list.set ?xs \<lless> list.set ?ys",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Omega_Omega.into_from_WW_aux",
     "[| strict_sorted ?ns; ALL n:list.set ?ns. ?k <= n |]
      ==> into_WW ?k (from_WW ?k ?ns) = ?ns",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Omega_Omega.initial_segment_ne",
     "[| initial_segment ?xs ?ys; ?xs ~= [] |]
      ==> ?ys ~= [] & hd ?ys = hd ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Omega_Omega.hd_interact",
     "[| ?xs ~= []; hd ?xs ~= [] |]
      ==> hd (interact ?xs ?ys) = hd (hd ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 4, template_var 1))))),
    ("Omega_Omega.IJ_iff",
     "(?u : IJ ?k) = (EX j i. ?u = (j, i) & i < j & j <= ?k)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Omega_Omega.partition_\<omega>\<omega>",
     "?\<alpha> : elts \<omega> ==>
      partn_lst_VWF (\<omega> \<up> \<omega>)
       [\<omega> \<up> \<omega>, ?\<alpha>] 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, template_hole 8))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 5, template_hole 8),
                     template_hole 8))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 5, template_hole 8),
                     template_hole 8)),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("Omega_Omega.Ex_omega_sum",
     "?\<gamma> : elts (\<omega> \<up> ord_of_nat ?n) ==>
      EX ns. ?\<gamma> = omega_sum ns & length ns = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 0))))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Omega_Omega.inter_scheme_simple",
     "[| Form ?l ?U; 0 < ?l |]
      ==> inter_scheme ?l ?U : WW & 0 < length (inter_scheme ?l ?U)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 5, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_hole 1)),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))))
           ))),
    ("Omega_Omega.merge_length1_nonempty",
     "[| merge ?as ?bs ?us ?vs; ?as : lists (- {[]}) |]
      ==> ?us : lists (- {[]})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))))
           ))),
    ("Omega_Omega.merge_length2_nonempty",
     "[| merge ?as ?bs ?us ?vs; ?bs : lists (- {[]}) |]
      ==> ?vs : lists (- {[]})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_hole 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))))
           ))),
    ("Omega_Omega.eq_omega_sum_less_iff",
     "length ?ms = length ?ns ==>
      ((omega_sum ?ms, omega_sum ?ns) : VWF) =
      ((?ms, ?ns) : lenlex less_than)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 9, template_var 1)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 9, template_var 0)),
                 template_var 0))),
           template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app (template_hole 1, template_hole 0))))),
    ("Omega_Omega.omega_sum_1_less",
     "(?ms, ?ns) : lenlex less_than ==>
      omega_sum (1 # ?ms) < omega_sum (1 # ?ns)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_hole 5))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Omega_Omega.omega_sum_less_iff",
     "(((length ?ms, omega_sum ?ms), length ?ns, omega_sum ?ns)
       : less_than <*lex*> VWF) =
      ((?ms, ?ns) : lenlex less_than)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 7, template_var 1)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 7, template_var 0)),
                 template_var 0)))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_hole 4)))),
    ("Omega_Omega.omega_sum_\<omega>\<omega>",
     "[| ?\<gamma> : elts (\<omega> \<up> \<omega>);
         !!ns. [| ?\<gamma> = omega_sum ns; normal ns |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_hole 5)))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.ordertype_\<omega>\<omega>",
     "(!!j. ordertype (?F j) (lenlex less_than) =
            \<omega> \<up> ord_of_nat j) ==>
      ordertype (\<Union> (range ?F)) (lenlex less_than) =
      \<omega> \<up> \<omega>",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_hole 0))),
           template_app (template_hole 7, template_hole 6)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_hole 4)))),
    ("Omega_Omega.nth_acc_lengths",
     "[| ?ls ~= []; ?k < length ?ls |]
      ==> acc_lengths ?acc ?ls ! ?k =
          ?acc + sum_list (map length (take (Suc ?k) ?ls))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 11)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2))))))),
    ("Omega_Omega.inter_scheme_injective",
     "[| Form ?l ?U; Form ?l ?U'; 0 < ?l;
         inter_scheme ?l ?U' = inter_scheme ?l ?U |]
      ==> ?U' = ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 0),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_equation (template_var 0, template_var 1))),
    ("Omega_Omega.length_interact_ge",
     "[| ?xs : lists (- {[]}); ?ys : lists (- {[]}) |]
      ==> length ?xs + length ?ys <= length (interact ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Omega_Omega.Form_Body_unique",
     "[| Form_Body ?ka ?kb ?xs ?ys ?zs; Form_Body ?ka ?kb ?xs ?ys ?zs';
         ?kb <= ?ka; ?ka <= Suc ?kb |]
      ==> ?zs' = ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 4, template_var 5),
        template_inequation
         (less_equals, template_var 5,
          template_app (template_hole 1, template_var 4))],
       template_equation (template_var 0, template_var 1))),
    ("Omega_Omega.interact_eq_Nil_iff",
     "[| ?xs : lists (- {[]}); ?ys : lists (- {[]}) |]
      ==> (interact ?xs ?ys = []) = (?xs = [] & ?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_hole 6))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_hole 6))))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_hole 7),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))
             )))),
    ("Omega_Omega.sorted_list_of_set_UN_eq_concat",
     "[| strict_mono_sets ?I ?f; finite ?I; !!i. finite (?f i) |]
      ==> list_of (\<Union> (?f ` ?I)) =
          concat (map (list_of o ?f) (list_of ?I))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_var 0)),
             template_app (template_hole 0, template_var 1)))))),
    ("Omega_Omega.merge_single",
     "[| concat ?as < concat ?bs; concat ?as ~= []; concat ?bs ~= [] |]
      ==> merge ?as ?bs [concat ?as] [concat ?bs]",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 1),
              template_hole 3)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 6, template_var 1)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 6, template_var 0)),
               template_hole 0))
           ))),
    ("Omega_Omega.Null2",
     "merge ?as [] ?us ?vs =
      (?as = [] & ?us = [] & ?vs = [] |
       ?us = [concat ?as] & ?vs = [] & ?as ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 6)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_hole 6)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 6)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)),
                     template_hole 6))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 6)),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 6)))))
           ))),
    ("Omega_Omega.set_takeWhile",
     "[| strict_sorted (concat ?as); ?as : lists (- {[]}) |]
      ==> list.set (takeWhile (%x. x < ?y) ?as) =
          {x: list.set ?as. x < ?y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_app (template_hole 13, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_hole 7))))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("Omega_Omega.merge_interact",
     "[| merge ?as ?bs ?us ?vs; strict_sorted (concat ?as);
         strict_sorted (concat ?bs); ?bs : lists (- {[]}) |]
      ==> strict_sorted (interact ?us ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Omega_Omega.lenlex_nsets_2_eq",
     "[?A]\<^bsup>2\<^esup> =
      {{x, y} |x y. x : ?A & y : ?A & (x, y) : lenlex less_than}",
     template_equation
      (template_app
        (template_app (template_hole 14, template_var 0),
         template_app
          (template_hole 13,
           template_app (template_hole 12, template_hole 11))),
       template_app (template_hole 10, t_empty))),
    ("Omega_Omega.acc_lengths_interact_injective",
     "[| interact ?as' ?bs' = interact ?as ?bs;
         acc_lengths ?a ?as' = acc_lengths ?a ?as;
         acc_lengths ?b ?bs' = acc_lengths ?b ?bs |]
      ==> ?as' = ?as & ?bs' = ?bs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 5),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 4),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))
           ))),
    ("Omega_Omega.Form_0_cases_raw",
     "[| Form 0 ?u;
         !!xs ys.
            [| ?u = {xs, ys}; length xs = length ys; xs ~= ys |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.Form_elim_upair",
     "[| Form ?l ?U;
         !!xs ys.
            [| xs ~= ys; ?U = {xs, ys}; length xs <= length ys |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.merge_less_sets_hd",
     "[| merge ?as ?bs ?us ?vs; strict_sorted (concat ?as);
         strict_sorted (concat ?bs); ?bs : lists (- {[]}) |]
      ==> list.set (hd ?us) \<lless> list.set (concat ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app (template_hole 9, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_hole 3))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_hole 1,
               template_app (template_hole 9, template_var 0)))
           ))),
    ("Omega_Omega.pair_less_prev",
     "[| (?u, ?j, ?i) : pair_less; ?u : IJ ?k |]
      ==> prev ?j ?i = Some ?u |
          (EX x. (?u, x) : pair_less & prev ?j ?i = Some x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app (template_hole 9, template_var 2),
                    template_var 1))),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_app (template_hole 2, template_var 3))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Omega_Omega.grab_eqD",
     "[| grab ?N ?n = (?A, ?M); infinite ?N |]
      ==> ?A \<lless> ?M &
          finite ?A & card ?A = ?n & infinite ?M & ?A <= ?N & ?M <= ?N",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3))))))
           ))),
    ("Omega_Omega.prev_maximal",
     "[| prev ?j ?i = Some (?j', ?i'); (?ji'', ?j, ?i) : pair_less;
         ?ji'' : IJ ?k |]
      ==> (?ji'', ?j', ?i') : pair_less | ?ji'' = (?j', ?i')",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 5), template_var 4),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4))),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_var 2))),
                 template_hole 4)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2)))
           ))),
    ("Omega_Omega.Form_Body_imp_inter_scheme",
     "[| Form_Body ?ka ?kb ?xs ?ys ?zs; 0 < ?kb; ?kb <= ?ka;
         ?ka <= Suc ?kb |]
      ==> ?zs = inter_scheme (?ka + ?kb - Suc 0) {?xs, ?ys}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 8, template_var 3),
        template_inequation (less_equals, template_var 3, template_var 4),
        template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 6, template_var 3))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3)),
               template_app (template_hole 6, template_hole 8))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("Omega_Omega.ordertype_eq_ordertype_iso_ll",
     "[| Field (Restr (lenlex less_than) ?A) = ?A;
         Field (Restr (lenlex less_than) ?B) = ?B |]
      ==> (ordertype ?A (lenlex less_than) =
           ordertype ?B (lenlex less_than)) =
          (EX f. iso_ll ?A ?B f)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6)),
              template_app
               (template_app (template_hole 5, template_var 1), t_empty))),
          template_var 1),
        template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6)),
              template_app
               (template_app (template_hole 5, template_var 0), t_empty))),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 7, template_hole 6))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 7, template_hole 6))),
         template_app (template_hole 1, t_empty)))),
    ("Omega_Omega.strict_sorted_interact_hd",
     "[| strict_sorted (interact ?cs ?ds); ?cs ~= []; ?ds ~= [];
         hd ?cs ~= []; hd ?ds ~= [] |]
      ==> hd (hd ?cs) < hd (hd ?ds)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Omega_Omega.form_cases",
     "[| ?l = 0 ==> ?thesis;
         !!ka kb.
            [| ?l = ka + kb - 1; 0 < kb; kb <= ka; ka <= Suc kb |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 7)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.omega_sum_less_eqlen_iff_cases",
     "length ?ms = length ?ns ==>
      (omega_sum (?m # ?ms) < omega_sum (?n # ?ns)) =
      (?m < ?n | ?m = ?n & omega_sum ?ms < omega_sum ?ns)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 7, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 3, template_var 1),
                          template_var 3))),
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 3))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 3, template_var 0),
                        template_var 2))),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_var 2)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 7, template_var 3)),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 7, template_var 2)),
                     template_var 2))))
             )))),
    ("Omega_Omega.USigma_iff",
     "(!!I j. I : ?\<I> ==> I \<lless> ?J I & finite I) ==>
      (?x : USigma ?\<I> ?J) =
      usplit (%I j. I : ?\<I> & j : ?J I & ?x = insert j I) ?x",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 0),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Omega_Omega.total_order_nsets_2_eq",
     "[| total_on ?A ?r; irrefl ?r |]
      ==> [?A]\<^bsup>2\<^esup> =
          {{x, y} |x y. x : ?A & y : ?A & (x, y) : ?r}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 1),
           template_app
            (template_hole 11,
             template_app (template_hole 10, template_hole 9))),
         template_app (template_hole 8, t_empty)))),
    ("Omega_Omega.strict_sorted_concat_I",
     "[| !!x. x : list.set ?xs ==> strict_sorted x;
         !!n. Suc n < length ?xs ==> ?xs ! n < ?xs ! Suc n;
         ?xs : lists (- {[]}) |]
      ==> strict_sorted (concat ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 14, template_hole 13),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Omega_Omega.lemma_3_7",
     "[| infinite ?N; 0 < ?l;
         !!M. [| M : [WW]\<^bsup>?m\<^esup>;
                 !!U. U : [M]\<^bsup>2\<^esup> ==>
                      Form ?l U & list.set (inter_scheme ?l U) <= ?N |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 14, template_var 3))
            ),
        template_inequation (less_than, template_hole 12, template_var 2),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.omega_sum_less_iff_cases",
     "[| 0 < ?m; 0 < ?n |]
      ==> (omega_sum (?m # ?ms) < omega_sum (?n # ?ns)) =
          (length ?ms < length ?ns |
           length ?ms = length ?ns & ?m < ?n |
           length ?ms = length ?ns &
           ?m = ?n & omega_sum ?ms < omega_sum ?ns)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 3),
        template_inequation (less_than, template_hole 8, template_var 2)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 1))),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 1))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 0))),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 0)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 4, template_var 1)),
                   template_app (template_hole 4, template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_hole 4, template_var 1)),
                         template_app (template_hole 4, template_var 0))),
                     template_app
                      (template_app (template_hole 9, template_var 3),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 4, template_var 1)),
                       template_app (template_hole 4, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4, template_var 1)),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 0)),
                         template_var 0))))))
             )))),
    ("Omega_Omega.lemma_3_8",
     "[| infinite ?N;
         !!X. [| X <= WW;
                 ordertype X (lenlex less_than) = \<omega> \<up> \<omega>;
                 !!u. u : [X]\<^bsup>2\<^esup> ==>
                      EX l. Form l u &
                            (0 < l -->
                             [enum ?N l] < inter_scheme l u &
                             list.set (inter_scheme l u) <= ?N) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 27, template_var 1))
            ),
        template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.interact",
     "[| Form ?l ?U; 0 < ?l;
         !!ka kb xs ys zs.
            [| ?l = ka + kb - 1; ?U = {xs, ys}; Form_Body ka kb xs ys zs;
               0 < kb; kb <= ka; ka <= Suc kb |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 12, template_var 2),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.inter_scheme",
     "[| Form ?l ?U; 0 < ?l;
         !!ka kb xs ys.
            [| ?l = ka + kb - 1; ?U = {xs, ys};
               Form_Body ka kb xs ys (inter_scheme ?l ?U); 0 < kb; kb <= ka;
               ka <= Suc kb |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 13, template_var 2),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.omega_sum_lex_less_iff_cases",
     "(((length ?ms, omega_sum (?m # ?ms)), length ?ns,
        omega_sum (?n # ?ns))
       : less_than <*lex*> VWF) =
      (length ?ms < length ?ns |
       length ?ms = length ?ns & ?m < ?n |
       ?m = ?n &
       ((length ?ms, omega_sum ?ms), length ?ns, omega_sum ?ns)
       : less_than <*lex*> VWF)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 3)),
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 7, template_var 2),
                              template_var 3))),
                        template_app
                         (template_app (template_hole 7, template_var 2),
                          template_var 3)))),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_var 1)),
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_app (template_hole 7, template_var 0),
                            template_var 1))),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_var 1))))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 9, template_var 3)),
                 template_app (template_hole 9, template_var 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 9, template_var 3)),
                       template_app (template_hole 9, template_var 1))),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9, template_var 3)),
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_hole 9, template_var 3)),
                             template_var 3))),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 9, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 9, template_var 1)),
                           template_var 1)))),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_hole 4)))))
           ))),
    ("Omega_Omega.Nash_Williams_WW",
     "[| infinite ?M; ?h ` {l: ?A. list.set l <= ?M} <= {..<2}; thin ?A;
         ?A <= WW;
         !!i N.
            [| i < 2; infinite N; N <= ?M;
               ?h ` {l: ?A. list.set l <= N} <= {i} |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 18, template_var 3))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 16, template_var 2),
            template_app (template_hole 15, t_empty)),
          template_app
           (template_hole 11,
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8)))),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 1, template_hole 5),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.lemma_3_6",
     "[| ?g : [WW]\<^bsup>2\<^esup> \<rightarrow> {0, 1};
         !!N j.
            [| infinite N;
               !!k u.
                  [| 0 < k; u : [WW]\<^bsup>2\<^esup>; Form k u;
                     [enum N k] < inter_scheme k u;
                     list.set (inter_scheme k u) <= N |]
                  ==> ?g u = j k |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 1),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_app (template_hole 25, template_hole 24),
                    template_app
                     (template_hole 23,
                      template_app (template_hole 22, template_hole 21)))),
                t_empty))
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_var 0))),
    ("Omega_Omega.merge_exists",
     "[| strict_sorted (concat ?as); strict_sorted (concat ?bs);
         ?as : lists (- {[]}); ?bs : lists (- {[]}); hd ?as < hd ?bs;
         ?as ~= []; ?bs ~= [];
         !!a b.
            [| a : list.set ?as; b : list.set ?bs |] ==> a < b | b < a |]
      ==> EX us vs. merge ?as ?bs us vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_app (template_hole 17, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_app (template_hole 17, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_hole 11))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_hole 11))))
            ),
        template_inequation
         (less_than, template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Omega_Omega.strict_sorted_interact_I",
     "[| length ?ys <= length ?xs; length ?xs <= Suc (length ?ys);
         !!x. x : list.set ?xs ==> strict_sorted x;
         !!y. y : list.set ?ys ==> strict_sorted y;
         !!n. n < length ?ys ==> ?xs ! n < ?ys ! n;
         !!n. Suc n < length ?xs ==> ?ys ! n < ?xs ! Suc n;
         ?xs : lists (- {[]}); ?ys : lists (- {[]}) |]
      ==> strict_sorted (interact ?xs ?ys)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 17, template_var 1),
          template_app (template_hole 17, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 17, template_var 0),
          template_app
           (template_hole 16,
            template_app (template_hole 17, template_var 1))),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_hole 11),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Omega_Omega.ordertype_append_image_IJ",
     "[| !!i j. [| i : ?\<I>; j : ?J i |] ==> length (?B j) = ?c;
         !!i j. [| i : ?\<I>; j : ?J i |] ==> ?A i < ?B j;
         !!i. i : ?\<I> ==> i \<lless> ?J i & finite i;
         !!i. i : ?\<I> ==>
              ordertype (?B ` ?J i) (lenlex less_than) = ?\<beta>;
         inj_on ?A ?\<I> |]
      ==> ordertype (usplit (%i j. ?A i @ ?B j) ` USigma ?\<I> ?J)
           (lenlex less_than) =
          ?\<beta> * ordertype (?A ` ?\<I>) (lenlex less_than)",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4))),
           template_app (template_hole 7, template_hole 6)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 5)),
             template_app (template_hole 7, template_hole 6)))))),
    ("Omega_Omega.interaction_scheme_unique_aux",
     "[| concat ?as = concat ?as'; concat ?bs = concat ?bs';
         ?as : lists (- {[]}); ?bs : lists (- {[]});
         strict_sorted (interact ?as ?bs); length ?bs <= length ?as;
         length ?as <= Suc (length ?bs); ?as' : lists (- {[]});
         ?bs' : lists (- {[]}); strict_sorted (interact ?as' ?bs');
         length ?bs' <= length ?as'; length ?as' <= Suc (length ?bs');
         length ?as = length ?as'; length ?bs = length ?bs' |]
      ==> ?as = ?as' & ?bs = ?bs'",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 3),
          template_app (template_hole 15, template_var 2)),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_app (template_hole 15, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_hole 9))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_hole 9))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_app
           (template_hole 3,
            template_app (template_hole 4, template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_hole 9))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_hole 9))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app (template_hole 4, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app
           (template_hole 3,
            template_app (template_hole 4, template_var 0))),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           )))]
