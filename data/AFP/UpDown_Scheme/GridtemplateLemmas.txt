   [("Grid.lgrid_finite", "finite (lgrid ?b ?ds ?lm)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Grid.parents_finite", "finite (parents ?d ?b ?p)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Grid_Point.level_start_0", "level (start ?dm) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Grid_Point.start_length", "length (start ?dm) = ?dm",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Grid_Point.inv_inv", "Grid_Point.inv (Grid_Point.inv ?dir) = ?dir",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Grid.gridgen_distinct", "distinct (gridgen ?p ?ds ?l)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Grid_Point.sgn_inv",
     "Grid_Point.sgn (Grid_Point.inv ?dir) = - Grid_Point.sgn ?dir",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Grid.grid_empty_ds", "grid ?b {} = {?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Grid.lgrid_empty", "lgrid ?p ?ds (level ?p) = {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, template_var 1)),
       template_hole 0)),
    ("Grid_Point.child_length", "length (child ?p ?dir ?d) = length ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Grid.parents_single", "parents ?d ?b ?b = {?b}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Grid_Point.child_level_gt", "level ?p <= level (child ?p ?dir ?d)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 2),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Grid.sparsegrid'_length", "?b : sparsegrid' ?dm ==> length ?b = ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Grid_Point.start_ix", "?d < ?dm ==> ix (start ?dm) ?d = 1",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Grid_Point.start_lv", "?d < ?dm ==> lv (start ?dm) ?d = 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Grid.base_empty", "?p : sparsegrid' ?dm ==> base {} ?p = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 1))),
    ("Grid.sparsegrid_length",
     "?p : sparsegrid ?dm ?lm ==> length ?p = ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Grid.sparsegridE", "?p : sparsegrid ?dm ?lm ==> level ?p < ?lm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 2),
         template_var 0))),
    ("Grid.sparsegrid_subset",
     "?p : sparsegrid ?dm ?lm ==> ?p : sparsegrid' ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Grid_Point.child_ex_neighbour",
     "EX b'. child ?b ?dir ?d = child b' (Grid_Point.inv ?dir) ?d",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Grid.lgrid_empty'", "?lm <= level ?p ==> lgrid ?p ?ds ?lm = {}",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2),
         template_hole 0))),
    ("Grid.child_out", "length ?p <= ?d ==> child ?p ?dir ?d = ?p",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 2))),
    ("Grid.base_length",
     "?p : sparsegrid' ?dm ==> length (base ?ds ?p) = ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("Grid.grid_level", "?p : grid ?b ?ds ==> level ?b <= level ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("Grid.grid_length", "?p' : grid ?p ?ds ==> length ?p' = length ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Grid.sparsegrid'_start",
     "?b : grid (start ?dm) ?ds ==> ?b : sparsegrid' ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Grid.gridp_grid_eq", "gridp ?b (%x. x : ?ds) = (%x. x : grid ?b ?ds)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), t_empty),
       t_empty)),
    ("Grid.gridgen_lgrid_eq",
     "set (gridgen ?p ?ds ?l) = lgrid ?p ?ds (level ?p + ?l)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Grid.baseE", "?p : sparsegrid' ?dm ==> ?p : grid (base ?ds ?p) ?ds",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 0))
           ))),
    ("Grid.parents_subset_lgrid",
     "parents ?d ?b ?p <= lgrid ?b {?d} (level ?p + 1)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Grid.base_grid",
     "?p : sparsegrid' ?dm ==> grid (base ?ds ?p) ?ds <= sparsegrid' ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Grid.sparsegrid_start",
     "?b : lgrid (start ?dm) ?ds ?lm ==> ?b : sparsegrid ?dm ?lm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Grid.grid_union_eq",
     "(UN p:grid ?b ?ds. grid p ?ds') = grid ?b (?ds' Un ?ds)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Grid.grid_not_child",
     "?d < length ?p ==> ?p ~: grid (child ?p ?dir ?d) ?ds",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1),
                       template_var 3)),
                   template_var 0))
               )
           ))),
    ("Grid.grid_subset_alldim",
     "?p : grid ?b ?ds ==> ?p : grid ?b {0..<length ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Grid.base_start_eq",
     "?p : sparsegrid ?dm ?lm ==> start ?dm = base {0..<?dm} ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 2)))),
    ("Grid.grid_dim_remove_outer",
     "grid ?b ?ds = grid ?b {d: ?ds. d < length ?b}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, t_empty)))),
    ("Grid_Point.child_other",
     "?d ~= ?d' ==> child ?p ?dir ?d ! ?d' = ?p ! ?d'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Grid_Point.child_lv_other",
     "?d' ~= ?d ==> lv (child ?p ?dir ?d') ?d = lv ?p ?d",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Grid.parents_no_parent",
     "?d < length ?b ==> ?b ~: parents ?d (child ?b ?dir ?d) ?p",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1),
                       template_var 3)),
                   template_var 0))
               )
           ))),
    ("Grid_Point.child_level",
     "?d < length ?p ==> level (child ?p ?dir ?d) = level ?p + 1",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_hole 0)))),
    ("Grid_Point.child_single_level",
     "?d < length ?p ==> lv ?p ?d < lv (child ?p ?dir ?d) ?d",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2)),
           template_var 2)))),
    ("Grid.base_in_grid",
     "?p : sparsegrid' ?dm ==> base ?ds ?p : grid (start ?dm) {0..<?dm}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)))
           ))),
    ("Grid_Point.child_odd",
     "?d < length ?p ==> odd (ix (child ?p ?dir ?d) ?d)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0),
                       template_var 2)),
                   template_var 2))
               )
           ))),
    ("Grid.base_base",
     "?p : sparsegrid' ?dm ==>
      base ?ds (base ?ds' ?p) = base (?ds Un ?ds') ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3)))),
    ("Grid.grid_union_dims",
     "[| ?ds <= ?ds'; ?p : grid ?b ?ds |] ==> ?p : grid ?b ?ds'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Grid.sparsegrid'I",
     "[| ?b : sparsegrid' ?dm; ?p : grid ?b ?ds |]
      ==> ?p : sparsegrid' ?dm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Grid.sparsegridI",
     "[| ?p : sparsegrid' ?dm; level ?p < ?lm |]
      ==> ?p : sparsegrid ?dm ?lm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Grid.grid_Start",
     "[| ?p : grid ?b ?ds; level ?p = level ?b |] ==> ?p = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 2, template_var 1))),
    ("Grid_Point.child_lv",
     "?d < length ?p ==> lv (child ?p ?dir ?d) ?d = lv ?p ?d + 1",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0),
               template_var 2)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_hole 0)))),
    ("Grid.baseE",
     "?p : sparsegrid' ?dm ==>
      base ?ds ?p : grid (start ?dm) ({0..<?dm} - ?ds)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("Grid.grid_change_dim",
     "?p : grid ?b ?ds ==> ?p[?d := ?X] : grid (?b[?d := ?X]) ?ds",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("Grid.grid_base_base",
     "?b : sparsegrid' ?dm ==>
      base ?ds' ?b : grid (base ?ds (base ?ds' ?b)) (?ds Un ?ds')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 3))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Grid.grid_split",
     "?p : grid ?b (?ds' Un ?ds) ==> EX x:grid ?b ?ds. ?p : grid x ?ds'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             t_empty)
           ))),
    ("Grid.lgridI",
     "[| ?p : grid ?b ?ds; level ?p < ?lm |] ==> ?p : lgrid ?b ?ds ?lm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Grid.grid_child",
     "[| ?d : ?ds; ?p : grid (child ?b ?dir ?d) ?ds |]
      ==> ?p : grid ?b ?ds",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app
                     (template_app (template_hole 0, template_var 1),
                      template_var 0),
                    template_var 4)),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3))
           ))),
    ("Grid.grid_single_level",
     "[| ?p : grid ?b ?ds; ?d < length ?b |] ==> lv ?b ?d <= lv ?p ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Grid.grid_child_without_parent",
     "[| ?p : grid (child ?b ?dir ?d) ?ds; ?d < length ?b |] ==> ?p ~= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_var 0))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 3))],
       template_negation
        (template_equation (template_var 4, template_var 3)))),
    ("Grid.grid_disjunct",
     "?d < length ?p ==>
      grid (child ?p dir.left ?d) ?ds Int grid (child ?p dir.right ?d) ?ds =
      {}",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 2),
                   template_var 2)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 1),
                 template_var 2)),
             template_var 0)),
         template_hole 0))),
    ("Grid_Point.child_invariant",
     "?d' < length ?p ==>
      (child ?p ?dir ?d ! ?d' = ?p ! ?d') = (?d ~= ?d')",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 3)),
         template_negation
          (template_equation (template_var 0, template_var 3))))),
    ("Grid_Point.child_ix_left",
     "?d < length ?p ==> ix (child ?p dir.left ?d) ?d = 2 * ix ?p ?d - 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6),
               template_var 1)),
           template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_hole 0)))),
    ("Grid_Point.child_ix_right",
     "?d < length ?p ==> ix (child ?p dir.right ?d) ?d = 2 * ix ?p ?d + 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6),
               template_var 1)),
           template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_hole 0)))),
    ("Grid.lgridI_child",
     "[| ?d : ?ds; ?p : lgrid (child ?b ?dir ?d) ?ds ?lm |]
      ==> ?p : lgrid ?b ?ds ?lm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1),
                      template_var 5)),
                  template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 4),
               template_var 0))
           ))),
    ("Grid_Point.child_ix",
     "?d < length ?p ==>
      ix (child ?p ?dir ?d) ?d = 2 * ix ?p ?d + Grid_Point.sgn ?dir",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0),
               template_var 2)),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 2))),
           template_app (template_hole 0, template_var 0))))),
    ("Grid.grid_child_level",
     "[| ?d < length ?b; ?p : grid (child ?b ?dir ?d) ?ds |]
      ==> lv ?b ?d < lv ?p ?d",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 1),
                    template_var 4)),
                template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 4)))),
    ("Grid.gridgen_dim_restrict",
     "[| ?p : grid ?b (?ds' Un ?ds); ALL d:?ds'. length ?b <= d |]
      ==> ?p : grid ?b ?ds",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("Grid_Point.child_eq",
     "?p ! ?d = (?l, ?i) ==>
      EX j. child ?p ?dir ?d = ?p[?d := (?l + 1, j)]",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_var 1))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Grid.grid_change_dim_child",
     "[| ?p : grid ?b ?ds; ?d ~: ?ds |]
      ==> child ?p ?dir ?d : grid (child ?b ?dir ?d) ?ds",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0),
                   template_var 1)),
               template_var 2))
           ))),
    ("Grid.grid_level_eq",
     "[| ALL d:?ds. lv ?p d = lv ?b d; ?p : grid ?b ?ds |]
      ==> level ?p = level ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 2))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Grid.baseI",
     "[| ?x : grid (start ?dm) ({0..<?dm} - ?ds); ?p : grid ?x ?ds |]
      ==> base ?ds ?p = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 2)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 2)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 3))),
    ("Grid.lgridE",
     "[| ?p : lgrid ?b ?ds ?lm;
         [| ?p : grid ?b ?ds; level ?p < ?lm |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2))
               )],
          template_implication
           ([template_inequation
              (less_than, template_app (template_hole 0, template_var 4),
               template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Grid.grid_grid_inj_on",
     "?ds Int ?ds' = {} ==>
      inj_on snd (UN p':grid ?b ?ds. UN p'':grid p' ?ds'. {(p', p'')})",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_hole 8)],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("Grid.base_in",
     "[| ?d < ?dm; ?d : ?ds; ?p : sparsegrid' ?dm |]
      ==> base ?ds ?p ! ?d = start ?dm ! ?d",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 2)),
           template_var 3)))),
    ("Grid.base_out",
     "[| ?d < ?dm; ?d ~: ?ds; ?p : sparsegrid' ?dm |]
      ==> base ?ds ?p ! ?d = ?p ! ?d",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 3)))),
    ("Grid.grid_invariant",
     "[| ?d < length ?b; ?d ~: ?ds; ?p : grid ?b ?ds |]
      ==> ?p ! ?d = ?b ! ?d",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 3)))),
    ("Grid.grid_partition",
     "grid ?p {?d} =
      {?p} Un grid (child ?p dir.left ?d) {?d} Un
      grid (child ?p dir.right ?d) {?d}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0),
               template_var 0)),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6))))),
    ("Grid_Point.child_neighbour",
     "child ?p (Grid_Point.inv ?dir) ?d = child ?ps ?dir ?d ==>
      ?ps = ?p[?d := (lv ?p ?d, ix ?p ?d - Grid_Point.sgn ?dir)]",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 7, template_var 0),
              template_var 2),
            template_var 1))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app (template_hole 0, template_var 2))))))),
    ("Grid.grid_base_dim_add",
     "[| ?ds' <= ?ds; ?b : sparsegrid' ?dm; ?p : grid (base ?ds' ?b) ?ds' |]
      ==> ?p : grid (base ?ds ?b) ?ds",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 4),
                    template_var 2)),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 3))
           ))),
    ("Grid.parents_split",
     "?p : grid (child ?b ?dir ?d) {?d} ==>
      parents ?d ?b ?p = {?b} Un parents ?d (child ?b ?dir ?d) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 2),
                      template_var 1),
                    template_var 0)),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3))))),
    ("Grid.grid_level_d",
     "[| ?d < length ?b; ?p : grid ?b {?d}; ?p ~= ?b |]
      ==> lv ?b ?d < lv ?p ?d",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3)))
            ),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Grid.grid_split1",
     "[| ?p : grid ?b (?ds' Un ?ds); ?ds Int ?ds' = {} |]
      ==> EX! x. x : grid ?b ?ds & ?p : grid x ?ds'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_hole 2)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Grid_Point.level_all_eq",
     "[| !!d. d < length ?p ==> lv ?p d = lv ?p' d;
         length ?p = length ?p' |]
      ==> level ?p' = level ?p",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Grid.grid_transitive",
     "[| ?a : grid ?b ?ds; ?b : grid ?c ?ds'; ?ds' <= ?ds''; ?ds <= ?ds'' |]
      ==> ?a : grid ?c ?ds''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Grid.grid_dim_remove",
     "[| ?p : grid ?b ({?d} Un ?ds); ?d < length ?b ==> ?p ! ?d = ?b ! ?d |]
      ==> ?p : grid ?b ?ds",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_hole 4)),
                  template_var 0)))
            ),
        template_implication
         ([template_inequation
            (less_than, template_var 1,
             template_app (template_hole 2, template_var 2))],
          template_equation
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 1),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 3),
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 0))
           ))),
    ("Grid.grid_odd",
     "[| ?d < length ?b; ?p ! ?d ~= ?b ! ?d; ?p : grid ?b ?ds |]
      ==> odd (ix ?p ?d)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3))
               )
           ))),
    ("Grid.grid_onedim_split",
     "grid ?b (?ds Un {?d}) =
      grid ?b ?ds Un grid (child ?b dir.left ?d) (?ds Un {?d}) Un
      grid (child ?b dir.right ?d) (?ds Un {?d})",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4))))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0),
               template_var 0)),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 4)))))),
    ("Grid.grid_base_out",
     "[| ?d < ?dm; ?d ~: ?ds; ?b : sparsegrid' ?dm;
         ?p : grid (base ?ds ?b) ?ds |]
      ==> ?p ! ?d = ?b ! ?d",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1)),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 4)))),
    ("Grid.grid_base_union",
     "[| ?b : sparsegrid' ?dm; ?p : grid (base ?ds ?b) ?ds;
         ?x : grid (base ?ds' ?p) ?ds' |]
      ==> ?x : grid (base (?ds Un ?ds') ?b) (?ds Un ?ds')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 5)),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 0),
                    template_var 3)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0)),
                   template_var 5)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Grid.grid_shift_base",
     "[| ?ds Int ?ds' = {}; ?b : sparsegrid' ?dm;
         ?p : grid (base (?ds' Un ?ds) ?b) (?ds' Un ?ds) |]
      ==> base ?ds' ?p : grid (base (?ds Un ?ds') ?b) ?ds",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 4), template_var 3),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 3),
                        template_var 4)),
                    template_var 2)),
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3)),
                   template_var 2)),
               template_var 4))
           ))),
    ("Grid.grid_disjunct'",
     "[| ?p : grid ?b ?ds; ?p' : grid ?b ?ds; ?x : grid ?p ?ds'; ?p ~= ?p';
         ?ds Int ?ds' = {} |]
      ==> ?x ~: grid ?p' ?ds'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 0),
          template_hole 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0))
               )
           ))),
    ("Grid.parent_sum",
     "[| ?p : grid (child ?b ?dir ?d) {?d}; ?d < length ?b |]
      ==> sum ?F (parents ?d ?b ?p) =
          ?F ?b + sum ?F (parents ?d (child ?b ?dir ?d) ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6)))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 4)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 0, template_var 3)),
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 8, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_var 4)))))),
    ("Grid.grid_replace_dim",
     "[| ?d < length ?b'; ?d < length ?b; ?p : grid ?b ?ds;
         ?p' : grid ?b' ?ds |]
      ==> ?p[?d := ?p' ! ?d] : grid (?b[?d := ?b' ! ?d]) ?ds",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 4, template_var 4)),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 5))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 5))),
               template_var 1))
           ))),
    ("Grid.sparsegrid",
     "sparsegrid ?dm ?lm =
      {p. length p = ?dm &
          level p < ?lm &
          (ALL d<?dm.
              odd (ix p d) & 0 < ix p d & ix p d < 2 ^ (lv p d + 1))}",
     template_equation
      (template_app
        (template_app (template_hole 20, template_var 1), template_var 0),
       template_app (template_hole 19, t_empty))),
    ("Grid.lgrid_sum",
     "[| ?d < length ?b; level ?b < ?lm |]
      ==> sum ?F (lgrid ?b {?d} ?lm) =
          sum ?F (lgrid (child ?b dir.left ?d) {?d} ?lm) +
          sum ?F (lgrid (child ?b dir.right ?d) {?d} ?lm) +
          ?F ?b",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 9, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_hole 4)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, t_empty),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_app (template_hole 2, template_var 2),
                             template_hole 1),
                           template_var 3)),
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_hole 4)),
                     template_var 1))),
               template_app
                (template_app (template_hole 7, t_empty),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app (template_hole 2, template_var 2),
                           template_hole 0),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_hole 4)),
                   template_var 1)))),
           template_app (template_var 0, template_var 2))))),
    ("Grid.grid_estimate",
     "[| ?d < length ?b; ?p : grid ?b ?ds |]
      ==> ix ?p ?d < (ix ?b ?d + 1) * 2 ^ (lv ?p ?d - lv ?b ?d) &
          (ix ?b ?d - 1) * 2 ^ (lv ?p ?d - lv ?b ?d) < ix ?p ?d",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 15, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_app (template_hole 13, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 10, template_var 2),
                           template_var 3)),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_hole 3))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 3)),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 3)))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 10, template_var 2),
                           template_var 3)),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_hole 3))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 3)),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 3))))),
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 3)))
           ))),
    ("Grid.grid_single_dimensional_specification",
     "[| ?d < length ?b; odd ?i; lv ?b ?d + ?l' = ?l;
         ?i < (ix ?b ?d + 1) * 2 ^ ?l'; (ix ?b ?d - 1) * 2 ^ ?l' < ?i |]
      ==> ?b[?d := (?l, ?i)] : grid ?b {?d}",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 21, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_hole 18,
                      template_app (template_hole 17, template_hole 16))),
                  template_var 2)
                )
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_var 3),
                template_var 4)),
            template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 4)),
                template_hole 8)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_hole 16))),
              template_var 1))),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 4)),
                template_hole 8)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_hole 16))),
              template_var 1)),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_hole 0)))
           ))),
    ("Grid.grid_part",
     "[| ?d < length ?b; ?p : grid ?b {?d}; ?p' : grid ?b {?d};
         lv ?p ?d <= lv ?p' ?d;
         ix ?p' ?d <= (ix ?p ?d + 1) * 2 ^ (lv ?p' ?d - lv ?p ?d);
         (ix ?p ?d - 1) * 2 ^ (lv ?p' ?d - lv ?p ?d) <= ix ?p' ?d |]
      ==> ?p' : grid ?p {?d}",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app (template_hole 15, template_var 2),
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_app (template_hole 15, template_var 2),
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_hole 13)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 11, template_var 1),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 0),
            template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 0), template_var 3),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_var 3)),
                template_hole 6)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2))),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 11, template_var 0),
                    template_var 3)),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 3))))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 0,
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_var 3)),
                template_hole 6)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2))),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 11, template_var 0),
                    template_var 3)),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 3)))),
          template_app
           (template_app (template_hole 9, template_var 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, template_var 0),
             template_app
              (template_app (template_hole 15, template_var 1),
               template_app
                (template_app (template_hole 14, template_var 3),
                 template_hole 13)))
           ))),
    ("Grid_Point.child_estimate_child",
     "[| ?d < length ?p; ?l <= lv ?p ?d;
         ix ?p ?d < (?i + 1) * 2 ^ (lv ?p ?d - ?l) &
         (?i - 1) * 2 ^ (lv ?p ?d - ?l) < ix ?p ?d;
         ?p' = child ?p ?dir ?d |]
      ==> ix ?p' ?d < (?i + 1) * 2 ^ (lv ?p' ?d - ?l) &
          (?i - 1) * 2 ^ (lv ?p' ?d - ?l) < ix ?p' ?d",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 16, template_var 4)),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 14, template_var 4),
            template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 4),
                      template_var 5)),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_hole 8)),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_hole 6,
                          template_app (template_hole 5, template_hole 4))),
                      template_app
                       (template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 14, template_var 4),
                            template_var 5)),
                        template_var 3))))),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 2, template_var 2),
                        template_hole 8)),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_hole 6,
                          template_app (template_hole 5, template_hole 4))),
                      template_app
                       (template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 14, template_var 4),
                            template_var 5)),
                        template_var 3)))),
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 5)))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_app (template_hole 0, template_var 4),
              template_var 0),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, template_var 1),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 2),
                       template_hole 8)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 14, template_var 1),
                           template_var 5)),
                       template_var 3))))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_hole 8)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 14, template_var 1),
                           template_var 5)),
                       template_var 3)))),
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_var 5)))
           ))),
    ("Grid.lift",
     "[| ?d < ?dm; ?p : sparsegrid ?dm ?lm;
         !!l b p \<alpha>.
            [| b : lgrid (start ?dm) ({0..<?dm} - {?d}) ?lm;
               l + level b = ?lm; p : sparsegrid ?dm ?lm |]
            ==> ?F ?d l b \<alpha> p =
                (if b = base {?d} p
                 then SUM p':lgrid b {?d} ?lm. ?S (\<alpha> p') p p'
                 else \<alpha> p) |]
      ==> lift ?F ?dm ?lm ?d ?\<alpha> ?p =
          (SUM p':lgrid (base {?d} ?p) {?d} ?lm. ?S (?\<alpha> p') ?p p')",
     template_implication
      ([template_inequation (less_than, template_var 6, template_var 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_app
               (template_app (template_hole 19, template_var 5),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 3),
               template_var 6),
             template_var 0),
           template_var 4),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 10, template_var 6),
                       template_hole 9)),
                   template_var 4)),
               template_app
                (template_app (template_hole 10, template_var 6),
                 template_hole 9)),
             template_var 3))))),
    ("Grid.grid_multi_dimensional_specification",
     "[| ?dm <= length ?b; length ?p = length ?b;
         !!d. d < ?dm ==>
              odd (ix ?p d) &
              lv ?b d <= lv ?p d &
              ix ?p d < (ix ?b d + 1) * 2 ^ (lv ?p d - lv ?b d) &
              (ix ?b d - 1) * 2 ^ (lv ?p d - lv ?b d) < ix ?p d;
         !!d. [| ?dm <= d; d < length ?b |] ==> ?p ! d = ?b ! d |]
      ==> ?p : grid ?b {0..<?dm}",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 24, template_var 1)),
        template_equation
         (template_app (template_hole 24, template_var 0),
          template_app (template_hole 24, template_var 1)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           )))]
