   [("Imperative_HOL_Add.addr_of_array_alloc",
     "addr_of_array (fst (Array.alloc ?x ?h)) = heap.lim ?h",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Imperative_HOL_Add.addr_of_ref_alloc",
     "addr_of_ref (fst (Ref.alloc ?x ?h)) = heap.lim ?h",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Imperative_HOL_Add.lim_Array_set",
     "heap.lim (Array.set ?a ?xs ?h) = heap.lim ?h",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Imperative_HOL_Add.lim_Ref_alloc",
     "heap.lim (snd (Ref.alloc ?x ?h)) = Suc (heap.lim ?h)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Imperative_HOL_Add.lim_Array_alloc",
     "heap.lim (snd (Array.alloc ?x ?h)) = Suc (heap.lim ?h)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Imperative_HOL_Add.lim_Array_update",
     "heap.lim (Array.update ?a ?i ?x ?h) = heap.lim ?h",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Imperative.copy_array",
     "<?a \<mapsto>\<^sub>a ?xs> copy_array ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs * r \<mapsto>\<^sub>a ?xs>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 1)),
           t_empty)
         )),
    ("Imperative_HOL_Add.effect_ref",
     "[| effect (ref ?x) ?h ?h' ?r;
         [| ?r = fst (Ref.alloc ?x ?h); ?h' = snd (Ref.alloc ?x ?h) |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3)))],
          template_implication
           ([template_equation
              (template_var 2,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3)))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Imperative.sum_array",
     "length ?xs = length ?ys ==>
      <?a \<mapsto>\<^sub>a ?xs * ?b \<mapsto>\<^sub>a ?ys> sum_array ?a ?b
      <%r. ?a \<mapsto>\<^sub>a map2 (+) ?xs ?ys *
           ?b \<mapsto>\<^sub>a ?ys>",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 8, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("Imperative.zipWithA",
     "length ?xs = length ?ys ==>
      <?a \<mapsto>\<^sub>a ?xs * ?b \<mapsto>\<^sub>a ?ys>
      zipWithA ?f ?a ?b
      <%r. ?a \<mapsto>\<^sub>a map2 ?f ?xs ?ys * ?b \<mapsto>\<^sub>a ?ys *
           \<up> (?a = r)>",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 4),
          template_app (template_hole 9, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 3))),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 2),
                 template_var 1)),
             t_empty)
           )))]
