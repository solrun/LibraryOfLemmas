   [("Gauss_Sums_Auxiliary.multiplicative_ind_coprime",
     "multiplicative_function (ind (coprime ?N))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Gauss_Sums_Auxiliary.comp_to_mult",
     "completely_multiplicative_function ?f ==> multiplicative_function ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Gauss_Sums_Auxiliary.dirichlet_prod_neutral_left_neutral",
     "0 < ?n ==> dirichlet_prod dirichlet_prod_neutral ?f ?n = ?f ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Gauss_Sums_Auxiliary.dirichlet_prod_neutral_right_neutral",
     "0 < ?n ==> dirichlet_prod ?f dirichlet_prod_neutral ?n = ?f ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Gauss_Sums_Auxiliary.moebius_prod_not_coprime",
     "~ coprime ?N ?d ==> moebius_mu (?N * ?d) = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Gauss_Sums_Auxiliary.I_right_neutral_0",
     "?f 0 = 0 ==> dirichlet_prod ?f dirichlet_prod_neutral ?n = ?f ?n",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 3), template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Gauss_Sums_Auxiliary.coprime_iff_prime_factors_disjoint",
     "[| ?x ~= (0::?'a); ?y ~= (0::?'a) |]
      ==> coprime ?x ?y = (prime_factors ?x Int prime_factors ?y = {})",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("Gauss_Sums_Auxiliary.completely_multiplicative_nonzero",
     "[| completely_multiplicative_function ?f; ?d ~= 0;
         !!p. prime p ==> ?f p ~= 0 |]
      ==> ?f ?d ~= 0",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 0), template_hole 0)
           ))),
    ("Gauss_Sums_Auxiliary.p_div_set",
     "{p. p :# prime_factorization ?a & ~ p dvd ?N} =
      {p. p :# prime_factorization (?a * ?N)} -
      {p. p :# prime_factorization ?N}",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 8, t_empty)),
         template_app (template_hole 8, t_empty)))),
    ("Gauss_Sums_Auxiliary.dirichlet_prod_neutral_intro",
     "(SUM k | k : {1..?n} & coprime k ?n. ?f k ?n) =
      (SUM k = 1..?n. ?f k ?n * dirichlet_prod_neutral (gcd k ?n))",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 8, t_empty)),
       template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)))),
    ("Gauss_Sums_Auxiliary.sum_divisors_moebius_mu_times_multiplicative",
     "[| multiplicative_function ?f; 0 < ?n |]
      ==> (SUM d | d dvd ?n. moebius_mu d * ?f d) =
          (PROD p:prime_factors ?n. (1::?'a) - ?f p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_inequation (less_than, template_hole 11, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 9, t_empty),
           template_app (template_hole 6, t_empty)),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Gauss_Sums.residue_mult_group_kernel_partition",
     "[| 1 < ?m; 0 < ?n; ?m dvd ?n |]
      ==> Congruence.partition (carrier (residue_mult_group ?n))
           (rcosets\<^bsub>residue_mult_group ?n\<^esub> kernel
                    (residue_mult_group ?n) (residue_mult_group ?m)
                    (%k. k mod ?m))",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 3, template_var 0)),
                   template_app (template_hole 3, template_var 1)),
                 t_empty)))
           ))),
    ("Gauss_Sums.residue_mult_group_kernel_partition",
     "[| 1 < ?m; 0 < ?n; ?m dvd ?n |]
      ==> card
           (kernel (residue_mult_group ?n) (residue_mult_group ?m)
             (%k. k mod ?m)) =
          totient ?n div totient ?m",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 8, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 3, template_var 1)),
             t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Gauss_Sums.residue_mult_group_kernel_partition",
     "[| 1 < ?m; 0 < ?n; ?m dvd ?n |]
      ==> card
           (rcosets\<^bsub>residue_mult_group ?n\<^esub> kernel
                    (residue_mult_group ?n) (residue_mult_group ?m)
                    (%k. k mod ?m)) =
          totient ?m",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 8, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 3, template_var 1)),
               t_empty))),
         template_app (template_hole 0, template_var 1)))),
    ("Gauss_Sums.induced_modulus_altdef2_lemma",
     "[| 0 < ?n; coprime ?a ?d |]
      ==> coprime (?a + \<Prod>{p. prime p & p dvd ?n & ~ p dvd ?a} * ?d)
           ?n",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, t_empty),
                       template_app (template_hole 4, t_empty))),
                   template_var 0))),
             template_var 2)
           ))),
    ("Gauss_Sums.induced_modulus_altdef2_lemma",
     "[| 0 < ?n; coprime ?a ?d |]
      ==> [?a +
           \<Prod>{p. prime p & p dvd ?n & ~ p dvd ?a} * ?d = ?a] (mod ?d)",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, t_empty),
                         template_app (template_hole 4, t_empty))),
                     template_var 0))),
               template_var 1),
             template_var 0)
           ))),
    ("Gauss_Sums.residue_mult_group_kernel_partition",
     "[| 1 < ?m; 0 < ?n; ?m dvd ?n;
         ?b : rcosets\<^bsub>residue_mult_group ?n\<^esub> kernel
                      (residue_mult_group ?n) (residue_mult_group ?m)
                      (%k. k mod ?m) |]
      ==> ?b ~= {}",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_inequation (less_than, template_hole 9, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_app
                 (template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 5, template_var 1)),
                    template_app (template_hole 5, template_var 2)),
                  t_empty)))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Gauss_Sums_Auxiliary.sum_div_reduce",
     "[| ?d dvd ?k; 0 < ?d |]
      ==> (SUM n | n : {1..?k} & ?d dvd n. ?f n) =
          (SUM c = 1..?k div ?d. ?f (c * ?d))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 9, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 6, t_empty)),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("Gauss_Sums_Auxiliary.multipl_div_mono",
     "[| completely_multiplicative_function ?f; ?d dvd ?k; 0 < ?d;
         !!p. prime p ==> ?f p ~= 0 |]
      ==> ?f (?k div ?d) = ?f ?k / ?f ?d",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 7, template_var 1),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 0)),
           template_app (template_var 2, template_var 1))))),
    ("Gauss_Sums_Auxiliary.multipl_div",
     "[| multiplicative_function ?f; ?d1.0 dvd ?m; ?d2.0 dvd ?k;
         coprime ?m ?k |]
      ==> ?f (?m * ?k div (?d1.0 * ?d2.0)) =
          ?f (?m div ?d1.0) * ?f (?k div ?d2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_var 4,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_var 4,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3))),
           template_app
            (template_var 4,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)))))),
    ("Gauss_Sums_Auxiliary.reindex_product_bij",
     "coprime ?a ?k ==>
      bij_betw (%(d1, d2). d1 * d2)
       {(d1, d2). d1 dvd gcd ?a ?m & d2 dvd gcd ?k ?b}
       {d. d dvd gcd ?a ?m * gcd ?k ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_hole 5, template_app (template_hole 4, t_empty))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Gauss_Sums_Auxiliary.prod_div_sub",
     "[| finite ?A; ?B <= ?A; ALL b:?B. ?f b ~= 0 |]
      ==> prod ?f (?A - ?B) = prod ?f ?A / prod ?f ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, t_empty), template_var 2)),
           template_app
            (template_app (template_hole 2, t_empty), template_var 1))))),
    ("Gauss_Sums.residue_mult_group_kernel_partition",
     "[| 1 < ?m; 0 < ?n; ?m dvd ?n |]
      ==> bij_betw (%b. the_elem ((%k. k mod ?m) ` b))
           (rcosets\<^bsub>residue_mult_group ?n\<^esub> kernel
                    (residue_mult_group ?n) (residue_mult_group ?m)
                    (%k. k mod ?m))
           (carrier (residue_mult_group ?m))",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 1),
        template_inequation (less_than, template_hole 9, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 2, template_var 0)),
                     template_app (template_hole 2, template_var 1)),
                   t_empty))),
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)))
           ))),
    ("Gauss_Sums.residue_mult_group_coset",
     "[| ?b : rcosets\<^bsub>residue_mult_group ?n\<^esub> kernel
                      (residue_mult_group ?n) (residue_mult_group ?m)
                      (%k. k mod ?m);
         ?m1.0 : ?b; ?m2.0 : ?b; 1 < ?n; ?m dvd ?n |]
      ==> ?m1.0 mod ?m = ?m2.0 mod ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 3)),
                template_app
                 (template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 7, template_var 3)),
                    template_app (template_hole 7, template_var 2)),
                  t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 4)
            ),
        template_inequation (less_than, template_hole 2, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_var 2)))),
    ("Gauss_Sums.residue_mult_group_kernel_partition",
     "[| 1 < ?m; 0 < ?n; ?m dvd ?n;
         ?b : rcosets\<^bsub>residue_mult_group ?n\<^esub> kernel
                      (residue_mult_group ?n) (residue_mult_group ?m)
                      (%k. k mod ?m) |]
      ==> card
           (kernel (residue_mult_group ?n) (residue_mult_group ?m)
             (%k. k mod ?m)) =
          card ?b",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app
                 (template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 4, template_var 1)),
                    template_app (template_hole 4, template_var 2)),
                  t_empty)))
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 4, template_var 2)),
             t_empty)),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Sums_Auxiliary.linear_gcd",
     "[| 0 < ?a; 0 < ?b; 0 < ?c; 0 < ?d; coprime ?a ?c; coprime ?b ?d |]
      ==> gcd (?a * ?b) (?c * ?d) = gcd ?a ?d * gcd ?b ?c",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 3),
        template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("Gauss_Sums_Auxiliary.sum_divisors_moebius_mu_times_multiplicative_revisited",
     "[| multiplicative_function ?f; 0 < ?n; 0 < ?N |]
      ==> (SUM d | d dvd ?n & coprime ?N d. moebius_mu d * ?f d) =
          (PROD p:{p. p :# prime_factorization ?n & ~ p dvd ?N}.
               (1::?'a) - ?f p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_inequation (less_than, template_hole 15, template_var 1),
        template_inequation (less_than, template_hole 15, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 13, t_empty),
           template_app (template_hole 10, t_empty)),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 10, t_empty))))),
    ("Gauss_Sums_Auxiliary.coprime_cong_prime_factors",
     "[| ?x ~= (0::?'a); ?y ~= (0::?'a); ?x' ~= (0::?'a); ?y' ~= (0::?'a);
         prime_factors ?x = prime_factors ?x';
         prime_factors ?y = prime_factors ?y' |]
      ==> coprime ?x ?y = coprime ?x' ?y'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 3)),
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1))),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)),
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Gauss_Sums.primitive_iff_separable_lemma",
     "[| (ALL n. ?\<chi> n = ?\<Phi> n * ?\<chi>\<^sub>1 n) &
         primitive_dchar ?d ?\<Phi>;
         1 < ?d; 0 < ?k; ?d dvd ?k; 1 < ?k |]
      ==> (SUM m | m : {1..?k} & coprime m ?k.
              ?\<Phi> m * unity_root ?d (int m)) =
          of_nat (totient ?k div totient ?d) *
          (SUM m | m : {1..?d} & coprime m ?d.
              ?\<Phi> m * unity_root ?d (int m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18, template_app (template_hole 17, t_empty)),
              template_app
               (template_app (template_hole 14, template_var 1),
                template_var 3))
            ),
        template_inequation (less_than, template_hole 12, template_var 1),
        template_inequation (less_than, template_hole 11, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 12, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 9, t_empty),
           template_app (template_hole 6, t_empty)),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 0, template_var 1)))),
           template_app
            (template_app (template_hole 9, t_empty),
             template_app (template_hole 6, t_empty))))))]
