   [("HOL_Base.nn_create", "?A ==> ~ ~ ?A",
     template_implication
      ([template_predicate (template_var 0)],
       template_negation
        (template_negation (template_predicate (template_var 0))))),
    ("HOL_Base.or_intro1", "~ (?P | ?Q) ==> ~ ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)
                )
            )],
       template_negation (template_predicate (template_var 1)))),
    ("HOL_Base.or_intro2", "~ (?P | ?Q) ==> ~ ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)
                )
            )],
       template_negation (template_predicate (template_var 0)))),
    ("HOL_Base.contra_triv", "[| ~ ?A; ?A |] ==> False",
     template_implication
      ([template_negation (template_predicate (template_var 0)),
        template_predicate (template_var 0)],
       template_predicate (template_hole 0))),
    ("HOL_Base.or_cancel2", "~ ?P ==> (?P | ?Q) = ?Q",
     template_implication
      ([template_negation (template_predicate (template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("HOL_Base.or_cancel1", "~ ?Q ==> (?P | ?Q) = ?P",
     template_implication
      ([template_negation (template_predicate (template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("HOL_Base.inv_backward", "[| ?A = ?B; ~ ?A |] ==> ~ ?B",
     template_implication
      ([template_equation (template_var 1, template_var 0),
        template_negation (template_predicate (template_var 1))],
       template_negation (template_predicate (template_var 0)))),
    ("HOL_Base.iffD", "?A = ?B ==> (?A --> ?B) & (?B --> ?A)",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("HOL_Base.swap_ex_conj", "(?P & (EX x. ?Q x)) = (EX x. ?P & ?Q x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("HOL_Base.swap_all_disj", "(?P | (ALL x. ?Q x)) = (ALL x. ?P | ?Q x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)),
       template_app (template_hole 0, t_empty))),
    ("HOL_Base.exE'", "[| !!x. ?P x ==> ?Q; EX x. ?P x |] ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0)))]
