Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.555s cpu time, 0.054s GC time
Loading theory "Draft.Automaton" (required by "Draft.Position_AutosTemplates" via "Draft.Position_Autos")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.234s elapsed time, 0.955s cpu time, 0.054s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs")
consts
  add_atoms :: "'a rexp => 'a list => 'a list"
locale rexp_DA
  fixes init :: "'a rexp => 's"
    and delta :: "'a => 's => 's"
    and final :: "'s => bool"
    and L :: "'s => 'a list set"
  assumes "rexp_DA init delta final L"
### theory "HOL-Library.Nat_Bijection"
### 0.341s elapsed time, 1.369s cpu time, 0.157s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs")
locale rexp_DFA
  fixes init :: "'a rexp => 'b"
    and delta :: "'a => 'b => 'b"
    and final :: "'b => bool"
    and L :: "'b => 'a list set"
  assumes "rexp_DFA init delta final L"
### theory "Draft.Automaton"
### 0.284s elapsed time, 1.121s cpu time, 0.103s GC time
Loading theory "Draft.Position_Autos" (required by "Draft.Position_AutosTemplates")
consts
  mrexps :: "'a rexp => (bool * 'a) rexp set"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "{}"
### theory "HOL-Library.BigO"
### 0.963s elapsed time, 3.664s cpu time, 0.965s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.028s elapsed time, 3.775s cpu time, 0.862s GC time
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (final_b p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.015s elapsed time, 6.578s cpu time, 1.242s GC time
Loading theory "Draft.Templates" (required by "Draft.Position_AutosTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.203s cpu time, 0.067s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Position_AutosTemplates")
Found termination order: "(%p. size (fst (final_b p))) <*mlex*> {}"
### theory "Draft.Position_Autos"
### 1.700s elapsed time, 5.155s cpu time, 1.152s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.461s elapsed time, 0.499s cpu time, 0.000s GC time
Loading theory "Draft.Position_AutosTemplates"
val templateLemmas =
   [("Position_Autos.finite_mrexps", "finite (mrexps ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Position_Autos.Nil_notin_Lm", "[] ~: Lm ?r",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Position_Autos.hom_init", "hom_ab (init_a ?r) = init_b ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Position_Autos.nonfinal_empty_mrexp", "~ final (empty_mrexp ?r)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), template_var 0))
             )
         )),
    ("Position_Autos.init_a_mrexps", "init_a ?r : UNIV \<times> mrexps ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1), t_empty))
         )),
    ("Position_Autos.init_b_mrexps", "init_b ?r : mrexps ?r \<times> UNIV",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty))
         )),
    ("Position_Autos.Lm_empty", "Lm (empty_mrexp ?r) = {}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_hole 0)),
    ("Position_Autos.strip_mrexps", "strip ` mrexps ?r = {?r}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Position_Autos.reachable_ab",
     "reachable_b ?as ?r = hom_ab ` reachable_a ?as ?r",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Position_Autos.strip_follow", "strip (follow ?m ?r) = strip ?r",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Position_Autos.hom_delta",
     "hom_ab (delta_a ?x ?br) = delta_b ?x (hom_ab ?br)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Position_Autos.card_reachable_ab",
     "card (reachable_b ?as ?r) <= card (reachable_a ?as ?r)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Position_Autos.empty_mrexp_mrexps", "empty_mrexp ?r : mrexps ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Position_Autos.nullable_empty_mrexp",
     "nullable (empty_mrexp ?r) = nullable ?r",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Position_Autos.Nil_in_tl_Lm_if_final", "final ?r ==> [] : tl ` Lm ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Position_Autos.Nil_in_lang_strip",
     "([] : lang ?r) = ([] : lang (strip ?r))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Position_Autos.hom_deltas",
     "hom_ab (fold delta_a ?w ?br) = fold delta_b ?w (hom_ab ?br)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("Position_Autos.fold_delta_a_init_a_mrexps",
     "fold delta_a ?w (init_a ?s) : UNIV \<times> mrexps ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app (template_hole 2, template_hole 1), t_empty))
         )),
    ("Position_Autos.fold_delta_b_init_b_mrexps",
     "fold delta_b ?w (init_b ?s) : mrexps ?s \<times> UNIV",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty))
         )),
    ("Position_Autos.Nil_notin_tl_if_not_final",
     "~ final ?r ==> [] ~: tl ` Lm ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("Position_Autos.follow_mrexps",
     "?r : mrexps ?s ==> follow ?b ?r : mrexps ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Position_Autos.tl_eq_Cons_iff",
     "(tl ?ys = ?x # ?xs) = (EX y. ?ys = y # ?x # ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Position_Autos.Cons_eq_tl_iff",
     "(?x # ?xs = tl ?ys) = (EX y. ?ys = y # ?x # ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Position_Autos.nullable_read", "nullable (read ?c ?r) = nullable ?r",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)),
       template_app (template_hole 5, template_var 0))),
    ("Position_Autos.final_read_final1",
     "final (read ?c ?r) = final1 ?r ?c",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Position_Autos.tl_conc",
     "[] ~: ?A ==> tl ` (?A @@ ?B) = tl ` ?A @@ ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)))),
    ("Position_Autos.strip_read", "strip (read ?a ?r) = strip ?r",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_hole 5), template_var 0))),
    ("Position_Autos.delta_a_mrexps",
     "?br : UNIV \<times> mrexps ?r ==>
      delta_a ?a ?br : UNIV \<times> mrexps ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_hole 2), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 3, template_hole 2), t_empty))
           ))),
    ("Position_Autos.delta_b_mrexps",
     "?rb : mrexps ?r \<times> UNIV ==>
      delta_b ?a ?rb : mrexps ?r \<times> UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 5, template_var 1)),
               t_empty))
           ))),
    ("Position_Autos.move_follow_read",
     "move ?c ?r ?m = follow ?m (read ?c ?r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 1)))),
    ("Position_Autos.shift_read_follow",
     "Position_Autos.shift ?m ?r ?x = read ?x (follow ?m ?r)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Position_Autos.final_read_Lm", "final (read ?a ?r) = ([?a] : Lm ?r)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Position_Autos.Lm_follow",
     "Lm (follow ?m ?r) =
      tl ` Lm ?r Un (if ?m then lang (strip ?r) else {}) - {[]}",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app (template_hole 11, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app (template_hole 12, template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0))),
               template_hole 2))),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_hole 2)))),
    ("Position_Autos.read_mrexps",
     "?r : mrexps ?s ==> read ?a ?r : mrexps ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 2)),
             template_app (template_hole 5, template_var 1))
           ))),
    ("Position_Autos.Lm_read",
     "Lm (read ?a ?r) = {w: Lm ?r. w ~= [] & hd w = ?a}",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_hole 10, template_app (template_hole 9, t_empty)),
           template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Position_Autos.conc_lemma",
     "[] ~: ?A ==>
      {w: ?A @@ ?B. w ~= [] & ?P (hd w)} =
      {w: ?A. w ~= [] & ?P (hd w)} @@ ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 2)
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_var 1))))]:
   (string * thm * template) list
### theory "Draft.Position_AutosTemplates"
### 0.347s elapsed time, 0.532s cpu time, 0.065s GC time
val it = (): unit
