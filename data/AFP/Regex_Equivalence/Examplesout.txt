Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.143s elapsed time, 0.587s cpu time, 0.045s GC time
Loading theory "Draft.Automaton" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence" via "Draft.Deriv_Autos")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.228s elapsed time, 0.924s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs")
consts
  add_atoms :: "'a rexp => 'a list => 'a list"
### theory "HOL-Library.Nat_Bijection"
### 0.329s elapsed time, 1.307s cpu time, 0.142s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs")
locale rexp_DA
  fixes init :: "'a rexp => 's"
    and delta :: "'a => 's => 's"
    and final :: "'s => bool"
    and L :: "'s => 'a list set"
  assumes "rexp_DA init delta final L"
locale rexp_DFA
  fixes init :: "'a rexp => 'b"
    and delta :: "'a => 'b => 'b"
    and final :: "'b => bool"
    and L :: "'b => 'a list set"
  assumes "rexp_DFA init delta final L"
### theory "Draft.Automaton"
### 0.280s elapsed time, 1.104s cpu time, 0.098s GC time
Loading theory "Draft.Position_Autos" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence")
consts
  mrexps :: "'a rexp => (bool * 'a) rexp set"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "{}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.088s elapsed time, 4.108s cpu time, 0.964s GC time
Loading theory "Draft.Derivatives_Finite" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence" via "Draft.Deriv_Autos" via "Draft.Deriv_PDeriv")
Found termination order: "{}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Stream"
### 1.174s elapsed time, 4.452s cpu time, 0.960s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
consts
  ACI_norm :: "'a rexp => 'a rexp"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (final_b p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.443s elapsed time, 8.745s cpu time, 2.192s GC time
Loading theory "Draft.Templates" (required by "Draft.ExamplesTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.247s cpu time, 0.035s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ExamplesTemplates")
Found termination order: "(%p. size (fst (final_b p))) <*mlex*> {}"
### theory "Draft.Position_Autos"
### 2.174s elapsed time, 7.561s cpu time, 2.084s GC time
Loading theory "Draft.After2" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence")
Loading theory "Draft.Before2" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.667s elapsed time, 2.583s cpu time, 0.229s GC time
consts
  final3 :: "'a mrexp3 => bool"
consts
  mrexps3 :: "'a rexp => 'a mrexp3 set"
consts
  follow3 :: "bool => 'a mrexp3 => 'a mrexp3"
consts
  empty_mrexp3 :: "'a rexp => 'a mrexp3"
consts
  move3 :: "'a => 'a mrexp3 => bool => 'a mrexp3"
consts
  strip3 :: "'a mrexp3 => (bool * 'a) rexp"
Found termination order:
  "(%p. size (fst p)) <*mlex*> (%p. size (snd p)) <*mlex*> {}"
consts
  mrexps2 :: "'a rexp => 'a mrexp2 set"
consts
  ok3 :: "'a mrexp3 => bool"
consts
  empty_mrexp2 :: "'a rexp => 'a mrexp2"
consts
  shift2 :: "bool => 'a mrexp2 => 'a => 'a mrexp2"
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Before2.mrexp3" found.
consts
  strip2 :: "'a mrexp2 => (bool * 'a) rexp"
consts
  ACI_norm_alt :: "'a rexp => 'a rexp"
consts
  ok2 :: "'a mrexp2 => bool"
instantiation
  ok_mrexp3 :: (equal) equal
  equal_ok_mrexp3 == equal_class.equal ::
    'a ok_mrexp3 => 'a ok_mrexp3 => bool
Proofs for inductive predicate(s) "ACI"
  Proving monotonicity ...
### theory "Draft.Derivatives_Finite"
### 3.006s elapsed time, 10.165s cpu time, 2.685s GC time
Loading theory "Draft.Deriv_PDeriv" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence" via "Draft.Deriv_Autos")
instantiation
  ok_mrexp2 :: (equal) equal
  equal_ok_mrexp2 == equal_class.equal ::
    'a ok_mrexp2 => 'a ok_mrexp2 => bool
consts
  pset :: "'a rexp => 'a rexp set"
Found termination order:
  "(%p. size (fst p)) <*mlex*> (%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  pnorm_alt :: "'a rexp => 'a rexp"
consts
  pnderiv :: "'a => 'a rexp => 'a rexp"
### theory "Draft.Deriv_PDeriv"
### 1.935s elapsed time, 6.907s cpu time, 0.561s GC time
Loading theory "Draft.Deriv_Autos" (required by "Draft.ExamplesTemplates" via "Draft.Examples" via "Draft.Regex_Equivalence")
instantiation
  ACI_rexp :: ({equal,linorder}) {equal,linorder}
  less_eq_ACI_rexp == less_eq :: 'a ACI_rexp => 'a ACI_rexp => bool
  less_ACI_rexp == less :: 'a ACI_rexp => 'a ACI_rexp => bool
  equal_ACI_rexp == equal_class.equal :: 'a ACI_rexp => 'a ACI_rexp => bool
### theory "Draft.Deriv_Autos"
### 0.811s elapsed time, 2.458s cpu time, 0.353s GC time
Found termination order: "(%p. size (final_b p)) <*mlex*> {}"
### Ignoring duplicate rewrite rule:
### eq_mrexp3 (Atom3 ?v1 ?va1) One3 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 (Plus3 ?v1 ?va1 ?vb1 ?vc1) One3 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 (Times3 ?v1 ?va1 ?vb1 ?vc1) One3 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 (Star3 ?v1 ?va1) One3 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 One3 (Atom3 ?v1 ?va1) == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 One3 (Plus3 ?v1 ?va1 ?vb1 ?vc1) == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 One3 (Times3 ?v1 ?va1 ?vb1 ?vc1) == False
### Ignoring duplicate rewrite rule:
### eq_mrexp3 One3 (Star3 ?v1 ?va1) == False
### theory "Draft.Before2"
### 5.060s elapsed time, 16.528s cpu time, 2.426s GC time
Found termination order: "(%p. size (final_b p)) <*mlex*> {}"
### Ignoring duplicate rewrite rule:
### eq_mrexp2 (Atom2 ?v1 ?va1) One2 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 (Plus2 ?v1 ?va1 ?vb1 ?vc1) One2 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 (Times2 ?v1 ?va1 ?vb1 ?vc1) One2 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 (Star2 ?v1 ?va1) One2 == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 One2 (Atom2 ?v1 ?va1) == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 One2 (Plus2 ?v1 ?va1 ?vb1 ?vc1) == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 One2 (Times2 ?v1 ?va1 ?vb1 ?vc1) == False
### Ignoring duplicate rewrite rule:
### eq_mrexp2 One2 (Star2 ?v1 ?va1) == False
### theory "Draft.After2"
### 5.269s elapsed time, 16.746s cpu time, 2.426s GC time
Loading theory "Draft.Regex_Equivalence" (required by "Draft.ExamplesTemplates" via "Draft.Examples")
See theory exports
### theory "Draft.Regex_Equivalence"
### 1.121s elapsed time, 1.300s cpu time, 0.140s GC time
Loading theory "Draft.Examples" (required by "Draft.ExamplesTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (final_b p)) <*mlex*> {}"
### theory "Draft.Examples"
### 0.170s elapsed time, 0.174s cpu time, 0.000s GC time
Loading theory "Draft.ExamplesTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.ExamplesTemplates"
### 0.418s elapsed time, 0.536s cpu time, 0.000s GC time
val it = (): unit
