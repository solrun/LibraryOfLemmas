   [("Anonymity.parts_idem", "parts (parts ?H) = parts ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Anonymity.parts_msg_agrkey", "parts_msg (AgrKey ?K) = {AgrKey ?K}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Anonymity.parts_msg_hash", "parts_msg (Hash ?X) = {Hash ?X}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Anonymity.parts_union", "parts (?H Un ?H') = parts ?H Un parts ?H'",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Anonymity.parts_insert",
     "parts (insert ?X ?H) = parts_msg ?X Un parts ?H",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Anonymity.parts_msg_idinfo",
     "parts_msg \<langle>?n, ?X\<rangle> = {\<langle>?n, ?X\<rangle>}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Anonymity.parts_union_1",
     "parts (?H Un ?H') <= parts ?H Un parts ?H'",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Anonymity.parts_union_2",
     "parts ?H Un parts ?H' <= parts (?H Un ?H')",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Anonymity.parts_mono", "?H <= ?H' ==> parts ?H <= parts ?H'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Anonymity.parts_msg_mono", "?X : ?H ==> parts_msg ?X <= parts ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Anonymity.parts_msg_crypt",
     "parts_msg (Crypt ?K ?X) = insert (Crypt ?K ?X) (parts_msg ?X)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Anonymity.state_subset", "?s \<Turnstile> ?s' ==> ?s <= ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Anonymity.parts_msg_mpair",
     "parts_msg \<lbrace>?X, ?Y\<rbrace> =
      insert \<lbrace>?X, ?Y\<rbrace> (parts_msg ?X Un parts_msg ?Y)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Anonymity.parts_crypt_1",
     "parts {Crypt ?K ?X} <= insert (Crypt ?K ?X) (parts {?X})",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))))),
    ("Anonymity.parts_crypt_2",
     "insert (Crypt ?K ?X) (parts {?X}) <= parts {Crypt ?K ?X}",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("Anonymity.parts_msg_parts",
     "[| (?A, ?X) : ?s; ?Y : parts_msg ?X |] ==> ?Y : parts (used ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Anonymity.spied_subset",
     "?s \<Turnstile> ?s' ==> spied ?s <= spied ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_hole 5))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Anonymity.parts_mpair_1",
     "parts {\<lbrace>?X, ?Y\<rbrace>}
      <= insert \<lbrace>?X, ?Y\<rbrace> (parts {?X} Un parts {?Y})",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1)))))),
    ("Anonymity.parts_mpair_2",
     "insert \<lbrace>?X, ?Y\<rbrace> (parts {?X} Un parts {?Y})
      <= parts {\<lbrace>?X, ?Y\<rbrace>}",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 0))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("Anonymity.sec_prik_eq",
     "{Tok_PriK ?n, Sec_PriK ?m, Rev_PriK} =
      {Tok_PriK ?n, Sec_PriK ?m', Rev_PriK} ==>
      ?m' = ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 3, template_var 1)),
              template_app
               (template_app (template_hole 5, template_hole 2),
                template_hole 1))),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 5, template_hole 2),
                template_hole 1))))],
       template_equation (template_var 0, template_var 1))),
    ("Anonymity.rtrancl_start",
     "[| (?x, ?y) : ?r^*; ?P ?y; ~ ?P ?x |]
      ==> EX u v.
             (?x, u) : ?r^* & (u, v) : ?r & (v, ?y) : ?r^* & ~ ?P u & ?P v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_var 0, template_var 2)),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 3))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Anonymity.prikey_crypt",
     "[| (Spy, Crypt ?K (AgrKey (PriK ?K'))) : ?s;
         insert (Spy, AgrKey (PubK {}))
          (insert (Spy, AgrKey (PubK {Rev_PriK}))
            ({Spy} \<times>
             ((%x. EncKey (SigK x)) ` bad_sigk Un
              (%x. AgrKey (PriK (Sec_PriK x))) ` bad_sec_prik Un
              (%x. AgrKey (PriK (Tok_PriK x))) ` bad_tok_prik Un
              range (%x. EncKey (VerK x)) Un
              range (%x. AgrKey (PubK {Sec_PriK x, Rev_PriK})) Un
              range (%x. AgrKey (PubK {Tok_PriK x})) Un
              range
               (%(n, m).
                   AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK})) Un
              range
               (%(n, m).
                   Hash
                    (AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK}))) Un
              range (%x. \<langle>x, AgrKey (PubK {Tok_PriK x})\<rangle>) Un
              {\<langle>n, AgrKey (PriK (Tok_PriK n))\<rangle> |n.
               n : bad_tok_prik} Un
              {\<langle>n,
                 AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK})\<rangle> |
               n m. (n, m) : bad_id} Un
              {\<langle>n,
                 Hash
                  (AgrKey
                    (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK}))\<rangle> |
               n m. (n, m) : bad_id}))) \<Turnstile>
         ?s |]
      ==> (Spy, AgrKey (PriK ?K')) : ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 41,
                template_app
                 (template_app (template_hole 40, template_hole 39),
                  template_app
                   (template_app (template_hole 38, template_var 2),
                    template_app
                     (template_hole 37,
                      template_app (template_hole 36, template_var 1))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_app
                   (template_hole 34,
                    template_app
                     (template_app
                       (template_hole 33,
                        template_app
                         (template_app (template_hole 40, template_hole 39),
                          template_app
                           (template_hole 37,
                            template_app
                             (template_hole 32, template_hole 31)))),
                      template_app
                       (template_app
                         (template_hole 33,
                          template_app
                           (template_app
                             (template_hole 40, template_hole 39),
                            template_app
                             (template_hole 37,
                              template_app
                               (template_hole 32,
                                template_app
                                 (template_app
                                   (template_hole 30, template_hole 29),
                                  template_hole 31))))),
                        template_app
                         (template_app
                           (template_hole 28,
                            template_app
                             (template_app
                               (template_hole 27, template_hole 39),
                              template_hole 26)),
                          t_empty)))),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 41,
               template_app
                (template_app (template_hole 40, template_hole 39),
                 template_app
                  (template_hole 37,
                   template_app (template_hole 36, template_var 1)))),
             template_var 0)
           ))),
    ("Anonymity.prikey_mpair_snd",
     "[| (Spy, \<lbrace>?Y, AgrKey (PriK ?K)\<rbrace>) : ?s;
         insert (Spy, AgrKey (PubK {}))
          (insert (Spy, AgrKey (PubK {Rev_PriK}))
            ({Spy} \<times>
             ((%x. EncKey (SigK x)) ` bad_sigk Un
              (%x. AgrKey (PriK (Sec_PriK x))) ` bad_sec_prik Un
              (%x. AgrKey (PriK (Tok_PriK x))) ` bad_tok_prik Un
              range (%x. EncKey (VerK x)) Un
              range (%x. AgrKey (PubK {Sec_PriK x, Rev_PriK})) Un
              range (%x. AgrKey (PubK {Tok_PriK x})) Un
              range
               (%(n, m).
                   AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK})) Un
              range
               (%(n, m).
                   Hash
                    (AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK}))) Un
              range (%x. \<langle>x, AgrKey (PubK {Tok_PriK x})\<rangle>) Un
              {\<langle>n, AgrKey (PriK (Tok_PriK n))\<rangle> |n.
               n : bad_tok_prik} Un
              {\<langle>n,
                 AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK})\<rangle> |
               n m. (n, m) : bad_id} Un
              {\<langle>n,
                 Hash
                  (AgrKey
                    (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK}))\<rangle> |
               n m. (n, m) : bad_id}))) \<Turnstile>
         ?s |]
      ==> (Spy, AgrKey (PriK ?K)) : ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 41,
                template_app
                 (template_app (template_hole 40, template_hole 39),
                  template_app
                   (template_app (template_hole 38, template_var 2),
                    template_app
                     (template_hole 37,
                      template_app (template_hole 36, template_var 1))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_app
                   (template_hole 34,
                    template_app
                     (template_app
                       (template_hole 33,
                        template_app
                         (template_app (template_hole 40, template_hole 39),
                          template_app
                           (template_hole 37,
                            template_app
                             (template_hole 32, template_hole 31)))),
                      template_app
                       (template_app
                         (template_hole 33,
                          template_app
                           (template_app
                             (template_hole 40, template_hole 39),
                            template_app
                             (template_hole 37,
                              template_app
                               (template_hole 32,
                                template_app
                                 (template_app
                                   (template_hole 30, template_hole 29),
                                  template_hole 31))))),
                        template_app
                         (template_app
                           (template_hole 28,
                            template_app
                             (template_app
                               (template_hole 27, template_hole 39),
                              template_hole 26)),
                          t_empty)))),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 41,
               template_app
                (template_app (template_hole 40, template_hole 39),
                 template_app
                  (template_hole 37,
                   template_app (template_hole 36, template_var 1)))),
             template_var 0)
           ))),
    ("Anonymity.prikey_mpair_fst",
     "[| (Spy, \<lbrace>AgrKey (PriK ?K), ?Y\<rbrace>) : ?s;
         insert (Spy, AgrKey (PubK {}))
          (insert (Spy, AgrKey (PubK {Rev_PriK}))
            ({Spy} \<times>
             ((%x. EncKey (SigK x)) ` bad_sigk Un
              (%x. AgrKey (PriK (Sec_PriK x))) ` bad_sec_prik Un
              (%x. AgrKey (PriK (Tok_PriK x))) ` bad_tok_prik Un
              range (%x. EncKey (VerK x)) Un
              range (%x. AgrKey (PubK {Sec_PriK x, Rev_PriK})) Un
              range (%x. AgrKey (PubK {Tok_PriK x})) Un
              range
               (%(n, m).
                   AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK})) Un
              range
               (%(n, m).
                   Hash
                    (AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK}))) Un
              range (%x. \<langle>x, AgrKey (PubK {Tok_PriK x})\<rangle>) Un
              {\<langle>n, AgrKey (PriK (Tok_PriK n))\<rangle> |n.
               n : bad_tok_prik} Un
              {\<langle>n,
                 AgrKey (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK})\<rangle> |
               n m. (n, m) : bad_id} Un
              {\<langle>n,
                 Hash
                  (AgrKey
                    (PubK {Tok_PriK n, Sec_PriK m, Rev_PriK}))\<rangle> |
               n m. (n, m) : bad_id}))) \<Turnstile>
         ?s |]
      ==> (Spy, AgrKey (PriK ?K)) : ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 41,
                template_app
                 (template_app (template_hole 40, template_hole 39),
                  template_app
                   (template_app
                     (template_hole 38,
                      template_app
                       (template_hole 37,
                        template_app (template_hole 36, template_var 2))),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_app
                   (template_hole 34,
                    template_app
                     (template_app
                       (template_hole 33,
                        template_app
                         (template_app (template_hole 40, template_hole 39),
                          template_app
                           (template_hole 37,
                            template_app
                             (template_hole 32, template_hole 31)))),
                      template_app
                       (template_app
                         (template_hole 33,
                          template_app
                           (template_app
                             (template_hole 40, template_hole 39),
                            template_app
                             (template_hole 37,
                              template_app
                               (template_hole 32,
                                template_app
                                 (template_app
                                   (template_hole 30, template_hole 29),
                                  template_hole 31))))),
                        template_app
                         (template_app
                           (template_hole 28,
                            template_app
                             (template_app
                               (template_hole 27, template_hole 39),
                              template_hole 26)),
                          t_empty)))),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 41,
               template_app
                (template_app (template_hole 40, template_hole 39),
                 template_app
                  (template_hole 37,
                   template_app (template_hole 36, template_var 2)))),
             template_var 0)
           ))),
    ("Anonymity.rev_prikey_secret",
     "s\<^sub>0 \<Turnstile> ?s ==> Rev_PriKey ~: spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 48,
                template_app
                 (template_app
                   (template_hole 47,
                    template_app
                     (template_app
                       (template_hole 46,
                        template_app
                         (template_app (template_hole 45, template_hole 44),
                          template_hole 43)),
                      t_empty)),
                  template_var 0)),
              template_app (template_hole 4, template_hole 3))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 28, template_hole 39),
                       template_hole 27),
                     template_hole 35)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_app (template_hole 45, template_hole 44),
                     template_hole 43)))
               )
           ))),
    ("Anonymity.sec_prikey_secret",
     "[| s\<^sub>0 \<Turnstile> ?s; ?n ~: bad_sec_prik |]
      ==> Sec_PriKey ?n ~: spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 48,
                template_app
                 (template_app
                   (template_hole 47,
                    template_app
                     (template_app
                       (template_hole 46,
                        template_app
                         (template_app (template_hole 45, template_hole 44),
                          template_hole 43)),
                      t_empty)),
                  template_var 1)),
              template_app (template_hole 4, template_hole 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_hole 25)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 28, template_hole 39),
                       template_hole 27),
                     template_app (template_hole 26, template_var 0))),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app (template_hole 45, template_hole 44),
                     template_hole 43)))
               )
           ))),
    ("Anonymity.tok_prikey_secret",
     "[| s\<^sub>0 \<Turnstile> ?s; ?n ~: bad_tok_prik |]
      ==> Tok_PriKey ?n ~: spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 48,
                template_app
                 (template_app
                   (template_hole 47,
                    template_app
                     (template_app
                       (template_hole 46,
                        template_app
                         (template_app (template_hole 45, template_hole 44),
                          template_hole 43)),
                      t_empty)),
                  template_var 1)),
              template_app (template_hole 4, template_hole 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_hole 23)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 28, template_hole 39),
                       template_hole 27),
                     template_app (template_hole 24, template_var 0))),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app (template_hole 45, template_hole 44),
                     template_hole 43)))
               )
           ))),
    ("Anonymity.idinfo_spied",
     "[| s\<^sub>0 \<Turnstile> ?s;
         \<langle>?n, ?X\<rangle> : parts (used ?s) |]
      ==> \<langle>?n, ?X\<rangle> : spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 49,
                template_app
                 (template_app
                   (template_hole 48,
                    template_app
                     (template_app
                       (template_hole 47,
                        template_app
                         (template_app (template_hole 46, template_hole 45),
                          template_hole 44)),
                      t_empty)),
                  template_var 2)),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 14, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 46, template_hole 45),
                 template_hole 44)))
           ))),
    ("Anonymity.idinfo_crypt",
     "[| (Spy, Crypt ?K \<langle>?n, ?X\<rangle>) : ?s;
         s\<^sub>0 \<Turnstile> ?s |]
      ==> \<langle>?n, ?X\<rangle> : spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app (template_hole 49, template_hole 48),
                  template_app
                   (template_app (template_hole 47, template_var 3),
                    template_app
                     (template_app (template_hole 46, template_var 2),
                      template_var 1)))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 45,
                template_app
                 (template_app
                   (template_hole 44,
                    template_app
                     (template_app
                       (template_hole 43,
                        template_app
                         (template_app (template_hole 42, template_hole 48),
                          template_hole 41)),
                      t_empty)),
                  template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 46, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 42, template_hole 48),
                 template_hole 41)))
           ))),
    ("Anonymity.idinfo_mpair_snd",
     "[| (Spy, \<lbrace>?Y, \<langle>?n, ?X\<rangle>\<rbrace>) : ?s;
         s\<^sub>0 \<Turnstile> ?s |]
      ==> \<langle>?n, ?X\<rangle> : spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app (template_hole 49, template_hole 48),
                  template_app
                   (template_app (template_hole 47, template_var 3),
                    template_app
                     (template_app (template_hole 46, template_var 2),
                      template_var 1)))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 45,
                template_app
                 (template_app
                   (template_hole 44,
                    template_app
                     (template_app
                       (template_hole 43,
                        template_app
                         (template_app (template_hole 42, template_hole 48),
                          template_hole 41)),
                      t_empty)),
                  template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 46, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 42, template_hole 48),
                 template_hole 41)))
           ))),
    ("Anonymity.idinfo_mpair_fst",
     "[| (Spy, \<lbrace>\<langle>?n, ?X\<rangle>, ?Y\<rbrace>) : ?s;
         s\<^sub>0 \<Turnstile> ?s |]
      ==> \<langle>?n, ?X\<rangle> : spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app (template_hole 49, template_hole 48),
                  template_app
                   (template_app
                     (template_hole 47,
                      template_app
                       (template_app (template_hole 46, template_var 3),
                        template_var 2)),
                    template_var 1))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 45,
                template_app
                 (template_app
                   (template_hole 44,
                    template_app
                     (template_app
                       (template_hole 43,
                        template_app
                         (template_app (template_hole 42, template_hole 48),
                          template_hole 41)),
                      t_empty)),
                  template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 46, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 42, template_hole 48),
                 template_hole 41)))
           ))),
    ("Anonymity.prikey_spied",
     "[| s\<^sub>0 \<Turnstile> ?s; PriKey ?K : parts (used ?s) |]
      ==> PriKey ?K : spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 49,
                template_app
                 (template_app
                   (template_hole 48,
                    template_app
                     (template_app
                       (template_hole 47,
                        template_app
                         (template_app (template_hole 46, template_hole 45),
                          template_hole 44)),
                      t_empty)),
                  template_var 1)),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 29, template_hole 40),
                    template_hole 28),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 29, template_hole 40),
                   template_hole 28),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 46, template_hole 45),
                 template_hole 44)))
           ))),
    ("Anonymity.idinfo_hash_hash",
     "[| (Spy, \<langle>?n, Hash (Hash ?X)\<rangle>) : ?s;
         s\<^sub>0 \<Turnstile> ?s |]
      ==> \<langle>?n, Hash ?X\<rangle> : spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 49,
                template_app
                 (template_app (template_hole 48, template_hole 47),
                  template_app
                   (template_app (template_hole 46, template_var 2),
                    template_app
                     (template_hole 45,
                      template_app (template_hole 45, template_var 1))))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 44,
                template_app
                 (template_app
                   (template_hole 43,
                    template_app
                     (template_app
                       (template_hole 42,
                        template_app
                         (template_app (template_hole 41, template_hole 47),
                          template_hole 40)),
                      t_empty)),
                  template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 46, template_var 2),
                 template_app (template_hole 45, template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 41, template_hole 47),
                 template_hole 40)))
           ))),
    ("Anonymity.id_identified",
     "[| s\<^sub>0 \<Turnstile> ?s; (?n, ?m) ~: bad_id; ?n ~: bad_tok_prik;
         \<langle>?n, Hash (ID ?n (Sec_PubKey ?m))\<rangle> : spied ?s |]
      ==> ?m : bad_sec_prik &
          (EX m'. m' ~= ?m & m' : bad_sec_prik & (?n, m') : bad_id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 49,
                template_app
                 (template_app
                   (template_hole 48,
                    template_app
                     (template_app
                       (template_hole 47,
                        template_app
                         (template_app (template_hole 46, template_hole 45),
                          template_hole 44)),
                      t_empty)),
                  template_var 2)),
              template_app (template_hole 5, template_hole 4))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_var 0)),
                  template_hole 6)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 24)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app (template_hole 19, t_empty),
                                t_empty),
                              t_empty),
                            t_empty),
                          t_empty),
                        t_empty),
                      template_app
                       (template_app
                         (template_app (template_hole 41, template_hole 40),
                          template_hole 39),
                        template_app
                         (template_app
                           (template_hole 37,
                            template_app
                             (template_hole 27, template_var 0)),
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 38))))))),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 46, template_hole 45),
                  template_hole 44)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_hole 26)),
             template_app (template_hole 12, t_empty))
           ))),
    ("Anonymity.id_anonymous",
     "[| s\<^sub>0 \<Turnstile> ?s; (?n, ?m) ~: bad_id; ?n ~: bad_tok_prik;
         ?m ~: bad_sec_prik |
         (\<nexists>m'. m' ~= ?m & m' : bad_sec_prik & (?n, m') : bad_id) |]
      ==> \<langle>?n, Hash (ID ?n (Sec_PubKey ?m))\<rangle> ~: spied ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 50,
                template_app
                 (template_app
                   (template_hole 49,
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, template_hole 46),
                          template_hole 45)),
                      t_empty)),
                  template_var 2)),
              template_app (template_hole 6, template_hole 5))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_var 0)),
                  template_hole 7)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_hole 25)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_hole 27))),
              template_app
               (template_hole 4, template_app (template_hole 13, t_empty)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 15, template_var 1),
                     template_app
                      (template_hole 16,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app (template_hole 20, t_empty),
                                   t_empty),
                                 t_empty),
                               t_empty),
                             t_empty),
                           t_empty),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 42, template_hole 41),
                             template_hole 40),
                           template_app
                            (template_app
                              (template_hole 38,
                               template_app
                                (template_hole 28, template_var 0)),
                             template_app
                              (template_app
                                (template_hole 38, template_hole 37),
                               template_hole 39))))))),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 47, template_hole 46),
                     template_hole 45)))
               )
           )))]
