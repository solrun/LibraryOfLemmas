   [("Number_Partition.finite_partitions", "finite {p. p partitions ?n}",
     template_predicate
      (
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))
         )),
    ("Number_Partition.partitions_zero",
     "(?p partitions 0) = (?p = (%i. 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, t_empty))),
    ("Number_Partition.count_partitions_iff",
     "(count ?N partitions ?n) = number_partition ?n ?N",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Number_Partition.partitions_bounds",
     "?p partitions ?n ==> ?p ?i <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_var 1))),
    ("Number_Partition.partitions_parts_bounded",
     "?p partitions ?n ==> sum ?p {..?n} <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Number_Partition.partitions_one",
     "(?p partitions Suc 0) = (?p = (%i. 0)(1 := 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_hole 0),
           template_hole 0)))),
    ("Number_Partition.partitions_imp_finite_elements",
     "?p partitions ?n ==> finite {i. 0 < ?p i}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Number_Partition.finite_partitions_k_parts",
     "finite {p. p partitions ?n & sum p {..?n} = ?k}",
     template_predicate
      (
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))
         )),
    ("Number_Partition.size_nat_multiset_eq",
     "number_partition ?n ?N ==> size ?N = sum (count ?N) {..?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Number_Partition.partitions_iff_Abs_multiset",
     "(?p partitions ?n) =
      (finite {x. 0 < ?p x} & number_partition ?n (Abs_multiset ?p))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Number_Partition.partitions_insert1",
     "[| ?p partitions ?n; 0 < ?k |]
      ==> ?p(?k := ?p ?k + 1) partitions ?n + ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 2, template_var 0)),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Number_Partition.partitions_remove1",
     "[| ?p partitions ?n; 0 < ?p ?k |]
      ==> ?p(?k := ?p ?k - 1) partitions ?n - ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_hole 3,
          template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 2, template_var 0)),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Number_Partition.partitions_increase1",
     "[| ?p partitions ?m - ?k; sum ?p {..?m - ?k} = ?k |]
      ==> (%i. ?p (i - 1)) partitions ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)
           ))),
    ("Number_Partition.count_insert1",
     "?p partitions ?n ==>
      sum (?p(?k := ?p ?k + 1)) {..?n + ?k} = sum ?p {..?n} + 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 2, template_var 0)),
                 template_hole 1))),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 0, template_var 1))),
           template_hole 1)))),
    ("Number_Partition.count_increase1",
     "[| ?p partitions ?m - ?k; sum ?p {..?m - ?k} = ?k |]
      ==> (SUM i<=?m. ?p (i - 1)) = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Number_Partition.partitions_remaining_Max_part",
     "[| ?p partitions ?n; 0 < ?p ?k |]
      ==> ALL i. ?n - ?k < i & i ~= ?k --> ?p i = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_var 2, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Number_Partition.partitions_decrease1",
     "[| ?p partitions ?m; sum ?p {..?m} = ?k; ?p 1 = 0 |]
      ==> (%i. ?p (i + 1)) partitions ?m - ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 1)),
          template_var 0),
        template_equation
         (template_app (template_var 2, template_hole 3), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Number_Partition.count_decrease1",
     "[| ?p partitions ?m; sum ?p {..?m} = ?k; ?p 1 = 0 |]
      ==> (SUM i<=?m - ?k. ?p (i + 1)) = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 1)),
          template_var 0),
        template_equation
         (template_app (template_var 2, template_hole 3), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0))),
    ("Number_Partition.partitionsI",
     "[| !!i. ?p i ~= 0 ==> 1 <= i & i <= ?n; (SUM i<=?n. ?p i * i) = ?n |]
      ==> ?p partitions ?n",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, t_empty),
            template_app (template_hole 1, template_var 0)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Number_Partition.partitions_remove1_bounds",
     "[| ?p partitions ?n; 0 < ?p ?k; (?p(?k := ?p ?k - 1)) ?i ~= 0 |]
      ==> 1 <= ?i & ?i <= ?n - ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_hole 7,
          template_app (template_var 3, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 1),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_var 3, template_var 1)),
                    template_hole 2)),
                template_var 0),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)))
           ))),
    ("Number_Partition.count_remove1",
     "[| ?p partitions ?n; 0 < ?p ?k |]
      ==> sum (?p(?k := ?p ?k - 1)) {..?n - ?k} = sum ?p {..?n} - 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 0, template_var 1))),
           template_hole 1)))),
    ("Number_Partition.partitionsE",
     "[| ?p partitions ?n;
         [| !!i. ?p i ~= 0 ==> 1 <= i & i <= ?n;
            (SUM i<=?n. ?p i * i) = ?n |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 9, t_empty))],
          template_implication
           ([template_equation
              (template_app
                (template_app (template_hole 2, t_empty),
                 template_app (template_hole 0, template_var 1)),
               template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0)))]
