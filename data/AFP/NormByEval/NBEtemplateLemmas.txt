   [("NBE.atomic_tm_head_tm", "atomic_tm (head_tm ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("NBE.pattern_Lam", "~ pattern (\<Lambda> ?t)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("NBE.not_pure_term", "~ pure (term ?v)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("NBE.args_tm_head_tm", "args_tm (head_tm ?t) = []",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("NBE.Reds_tm_list_refl", "?ts \<rightarrow>* ?ts",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("NBE.comp_pat_V", "comp_pat (V ?X) = V\<^sub>M\<^sub>L ?X",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("NBE.head_tm_idem", "head_tm (head_tm ?t) = head_tm ?t",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("NBE.C_normal_term",
     "C_normal (term ?v) = C_normal\<^sub>M\<^sub>L ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("NBE.pure_Lam", "pure (\<Lambda> ?t) = pure ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("NBE.comp_pat_C_Nil", "comp_pat (C ?nm) = C\<^sub>U ?nm []",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("NBE.size'_lift_ML", "size' (lift\<^sub>M\<^sub>L ?k ?v) = size' ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("NBE.size'_lift", "size' (lift ?i ?v) = size' ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("NBE.C_normal_ML_lift_ML",
     "C_normal\<^sub>M\<^sub>L (lift\<^sub>M\<^sub>L ?k ?v) =
      C_normal\<^sub>M\<^sub>L ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("NBE.C_normal_ML_comp_open",
     "pure ?t ==> C_normal\<^sub>M\<^sub>L (comp_open ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("NBE.eta_head_args", "?t = head_tm ?t \<bullet>\<bullet> args_tm ?t",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.head_tm_foldl_At",
     "head_tm (?s \<bullet>\<bullet> ?ts) = head_tm ?s",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("NBE.dterm_pure", "pure ?t ==> dterm ?t = ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("NBE.kernel_pure", "pure ?t ==> ?t! = ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("NBE.lift_Pure_tms", "pure ?t ==> pure (lift ?k ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("NBE.pure_kernel", "closed\<^sub>M\<^sub>L 0 ?v ==> pure (?v!)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("NBE.if_cong0", "(if ?x then ?y else ?z) = (if ?x then ?y else ?z)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("NBE.map_dterm_term",
     "map dterm (map term ?vs) = map dterm\<^sub>M\<^sub>L ?vs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 0), template_var 0))),
    ("NBE.subst_V", "pure ?t ==> subst V ?t = ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 0))),
    ("NBE.pure_At", "pure (?s \<bullet> ?t) = (pure ?s & pure ?t)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("NBE.no_match_ML_lift_ML",
     "no_match\<^sub>M\<^sub>L ?ps (map (lift\<^sub>M\<^sub>L ?k) ?vs) =
      no_match\<^sub>M\<^sub>L ?ps ?vs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("NBE.args_tm_foldl_At",
     "args_tm (?s \<bullet>\<bullet> ?ts) = args_tm ?s @ ?ts",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("NBE.no_match_ML_lift",
     "no_match\<^sub>M\<^sub>L ?ps ?vs -->
      no_match\<^sub>M\<^sub>L ?ps (map (lift ?k) ?vs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1)))
         )),
    ("NBE.linpats_pattern", "linpats ?ts ==> patterns ?ts",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("NBE.fv_ML_comp_pat",
     "pattern ?t ==> fv\<^sub>M\<^sub>L (comp_pat ?t) = fv ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.fv_ML_comp_open",
     "pure ?t ==> fv\<^sub>M\<^sub>L (comp_open ?t) = fv ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.subst_ML_id2",
     "closed\<^sub>M\<^sub>L 0 ?v ==>
      subst\<^sub>M\<^sub>L ?\<sigma> ?v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("NBE.lift_ML_id",
     "closed\<^sub>M\<^sub>L ?k ?v ==> lift\<^sub>M\<^sub>L ?k ?v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("NBE.closed_ML_lift",
     "closed\<^sub>M\<^sub>L ?k ?v ==>
      closed\<^sub>M\<^sub>L ?k (lift ?m ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("NBE.lift_ML_subst_ml",
     "lift\<^sub>M\<^sub>L ?k (subst_ml ?\<sigma> ?v) =
      subst_ml ?\<sigma> (lift\<^sub>M\<^sub>L ?k ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("NBE.lift_lift_ML_comm",
     "lift ?j (lift\<^sub>M\<^sub>L ?i ?v) =
      lift\<^sub>M\<^sub>L ?i (lift ?j ?v)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("NBE.subst_ml_comp",
     "subst_ml ?\<sigma> (subst_ml ?\<sigma>' ?v) =
      subst_ml (?\<sigma> o ?\<sigma>') ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("NBE.depth_At_foldl",
     "depth_At (?s \<bullet>\<bullet> ?ts) = depth_At ?s + length ?ts",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.closed_ML_Suc",
     "closed\<^sub>M\<^sub>L ?n ?v ==>
      closed\<^sub>M\<^sub>L (Suc ?n) (lift\<^sub>M\<^sub>L ?k ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("NBE.no_match_take",
     "no_match ?ps ?ts ==> no_match ?ps (take (length ?ps) ?ts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("NBE.pattern_AtD12",
     "pattern (?s \<bullet> ?t) ==> pattern ?s & pattern ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("NBE.C_normal_compR_rhs",
     "(?nm, ?vs, ?v) : compR ==> C_normal\<^sub>M\<^sub>L ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NBE.subst_ML_comp",
     "subst\<^sub>M\<^sub>L ?\<sigma>
       (subst\<^sub>M\<^sub>L ?\<sigma>' ?v) =
      subst\<^sub>M\<^sub>L (subst\<^sub>M\<^sub>L ?\<sigma> o ?\<sigma>')
       ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_var 0))),
    ("NBE.size_tm_foldl_At",
     "NBE.size_tm (?t \<bullet>\<bullet> ?ts) =
      NBE.size_tm ?t + size_list NBE.size_tm ?ts",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 0, template_hole 4),
           template_var 0)))),
    ("NBE.subst_V_kernel",
     "closed\<^sub>M\<^sub>L 0 ?v ==> subst V (?v!) = ?v!",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.size_args_less_size_tm",
     "?s : set (args_tm ?t) ==> size ?s < size ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.Red_ml_list_length",
     "?vs \<Rightarrow> ?vs' ==> length ?vs = length ?vs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.comp_pat_C",
     "comp_pat (C ?nm \<bullet>\<bullet> ?ts) =
      C\<^sub>U ?nm (map comp_pat (rev ?ts))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 6),
           template_app (template_hole 0, template_var 0))))),
    ("NBE.dterm_foldl_At",
     "dterm (?t \<bullet>\<bullet> ?ts) =
      dterm ?t \<bullet>\<bullet> map dterm ?ts",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("NBE.kernel_foldl_At",
     "?s \<bullet>\<bullet> ?ts! = ?s! \<bullet>\<bullet> map kernelt ?ts",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("NBE.foldl_At_eq",
     "(?s \<bullet>\<bullet> ?ts = ?s \<bullet>\<bullet> ?ts') =
      (?ts = ?ts')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("NBE.C_normal_ML_subst_ML",
     "C_normal\<^sub>M\<^sub>L (subst\<^sub>M\<^sub>L ?\<sigma> ?v) ==>
      ALL x:fv\<^sub>M\<^sub>L ?v. C_normal\<^sub>M\<^sub>L (?\<sigma> x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("NBE.pattern_At_vecD",
     "pattern (?s \<bullet>\<bullet> ?ts) ==> patterns ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("NBE.closed_ML_subst_ML",
     "ALL i. closed\<^sub>M\<^sub>L ?k (?\<sigma> i) ==>
      closed\<^sub>M\<^sub>L ?k (subst\<^sub>M\<^sub>L ?\<sigma> ?v)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NBE.map_dterm_pure", "ALL t:set ?ts. pure t ==> map dterm ?ts = ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 0))),
    ("NBE.C_normal_ML_inv",
     "[| ?v \<Rightarrow> ?v'; C_normal\<^sub>M\<^sub>L ?v |]
      ==> C_normal\<^sub>M\<^sub>L ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NBE.subst_cons_lift",
     "subst\<^sub>M\<^sub>L (V\<^sub>M\<^sub>L 0 ## ?\<sigma>) o
      lift\<^sub>M\<^sub>L 0 =
      lift\<^sub>M\<^sub>L 0 o subst\<^sub>M\<^sub>L ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)),
               template_var 0))),
         template_app (template_hole 0, template_hole 1)),
       template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 0, template_hole 1)),
         template_app (template_hole 4, template_var 0)))),
    ("NBE.lift_subst_ML",
     "lift ?k (subst\<^sub>M\<^sub>L ?\<sigma> ?v) =
      subst\<^sub>M\<^sub>L (lift ?k o ?\<sigma>) (lift ?k ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("NBE.subst_ml_subst_ML",
     "subst_ml ?\<sigma> (subst\<^sub>M\<^sub>L ?\<sigma>' ?v) =
      subst\<^sub>M\<^sub>L (subst_ml ?\<sigma> o ?\<sigma>')
       (subst_ml ?\<sigma> ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("NBE.size_foldl_At",
     "size (C ?nm \<bullet>\<bullet> ?ts) =
      length ?ts + sum_list (map size ?ts)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 7),
             template_var 0))))),
    ("NBE.kernel_lift_tm",
     "closed\<^sub>M\<^sub>L 0 ?v ==> lift ?i ?v! = lift ?i (?v!)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("NBE.no_match",
     "no_match ?ps ?ts ==>
      \<nexists>\<sigma>. map (subst \<sigma>) ?ps = ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_predicate (template_app (template_hole 3, t_empty))))),
    ("NBE.no_match_coincide",
     "no_match\<^sub>M\<^sub>L ?ps ?vs ==>
      no_match (map dterm\<^sub>M\<^sub>L (rev ?ps))
       (map dterm\<^sub>M\<^sub>L (rev ?vs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("NBE.sum_list_size'",
     "?v : set ?vs ==> size' ?v < Suc (sum_list (map size' ?vs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 0)))))),
    ("NBE.Red_tm_rev",
     "?ts \<rightarrow>* ?ts' ==> rev ?ts \<rightarrow>* rev ?ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_hole 1)
           ))),
    ("NBE.lift_o_shift",
     "lift ?k o V\<^sub>M\<^sub>L 0 ## ?\<sigma> =
      V\<^sub>M\<^sub>L 0 ## (lift ?k o ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("NBE.lift_is_subst_ml",
     "lift ?k ?v = subst_ml (%n. if n < ?k then n else n + 1) ?v",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, t_empty), template_var 0))),
    ("NBE.pure_foldl_At",
     "pure (?s \<bullet>\<bullet> ?ts) =
      (pure ?s & (ALL t:set ?ts. pure t))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("NBE.pattern_R", "(?nm, ?ts, ?t') : R ==> patterns ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             t_empty)
           ))),
    ("NBE.C_normal_ML_compile",
     "[| pure ?t; ALL i. C_normal\<^sub>M\<^sub>L (?\<sigma> i) |]
      ==> C_normal\<^sub>M\<^sub>L (compile ?t ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NBE.Red_ml_list_pres_no_match",
     "[| no_match\<^sub>M\<^sub>L ?ps ?vs; ?vs \<Rightarrow> ?vs' |]
      ==> no_match\<^sub>M\<^sub>L ?ps ?vs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("NBE.apply_cons_ML",
     "(?v ## ?\<sigma>) ?i =
      (if ?i = 0 then ?v else lift\<^sub>M\<^sub>L 0 (?\<sigma> (?i - 1)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_hole 3),
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("NBE.apply_cons",
     "(?t ## ?\<sigma>) ?i =
      (if ?i = 0 then ?t else lift 0 (?\<sigma> (?i - 1)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_hole 3),
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("NBE.lift_foldl_At",
     "lift ?k (?s \<bullet>\<bullet> ?ts) =
      lift ?k ?s \<bullet>\<bullet> map (lift ?k) ?ts",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 2)),
           template_var 0)))),
    ("NBE.subst_foldl",
     "subst ?\<sigma> (?s \<bullet>\<bullet> ?ts) =
      subst ?\<sigma> ?s \<bullet>\<bullet> map (subst ?\<sigma>) ?ts",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 2)),
           template_var 0)))),
    ("NBE.fv_head_C",
     "fv (?t \<bullet>\<bullet> ?ts) = fv ?t Un \<Union> (fv ` set ?ts)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 6, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("NBE.Lam_eq_foldl_At",
     "(\<Lambda> ?s = ?t \<bullet>\<bullet> ?ts) =
      (?t = \<Lambda> ?s & ?ts = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app (template_hole 5, template_var 2))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("NBE.term_eq_foldl_At",
     "(term ?v = ?t \<bullet>\<bullet> ?ts) = (?t = term ?v & ?ts = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app (template_hole 5, template_var 2))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("NBE.foldl_At_eq_Lam",
     "(?t \<bullet>\<bullet> ?ts = \<Lambda> ?s) =
      (?t = \<Lambda> ?s & ?ts = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("NBE.C_normal_ML_subst_ML_iff",
     "C_normal\<^sub>M\<^sub>L ?v ==>
      C_normal\<^sub>M\<^sub>L (subst\<^sub>M\<^sub>L ?\<sigma> ?v) =
      (ALL x:fv\<^sub>M\<^sub>L ?v.
          C_normal\<^sub>M\<^sub>L (?\<sigma> x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           t_empty)))),
    ("NBE.subst_ML_compile",
     "pure ?t ==>
      subst\<^sub>M\<^sub>L ?\<sigma>' (compile ?t ?\<sigma>) =
      compile ?t (subst\<^sub>M\<^sub>L ?\<sigma>' o ?\<sigma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_var 0))))),
    ("NBE.cor_sum_list_size'",
     "?v : set ?vs ==> size' ?v < Suc (?m + sum_list (map size' ?vs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            )],
       template_inequation
        (less_than, template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 4),
                 template_var 1))))))),
    ("NBE.redts_term_cong",
     "?v \<Rightarrow>* ?v' ==> term ?v \<Rightarrow>* term ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_hole 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("NBE.red_Lam",
     "?t \<rightarrow>* ?t' ==> \<Lambda> ?t \<rightarrow>* \<Lambda> ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("NBE.subst_ML_ext",
     "ALL i. ?\<sigma> i = ?\<sigma>' i ==>
      subst\<^sub>M\<^sub>L ?\<sigma> ?v =
      subst\<^sub>M\<^sub>L ?\<sigma>' ?v",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("NBE.subst_ext",
     "ALL i. ?\<sigma> i = ?\<sigma>' i ==>
      subst ?\<sigma> ?v = subst ?\<sigma>' ?v",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("NBE.foldl_At_eq_length",
     "?s \<bullet>\<bullet> ?ts = ?s \<bullet>\<bullet> ?ts' ==>
      length ?ts = length ?ts'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NBE.pattern_At'D12",
     "[| pattern ?r; ?r = ?s \<bullet> ?t |] ==> pattern ?s & pattern ?t",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 3, template_var 0))
           ))),
    ("NBE.subst_kernel",
     "closed\<^sub>M\<^sub>L 0 ?v ==>
      subst (%n. V (?\<sigma> n)) (?v!) = subst_ml ?\<sigma> ?v!",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("NBE.pattern_At_decomp",
     "pattern (?s \<bullet> ?t) ==>
      EX nm ss. ?s = C nm \<bullet>\<bullet> ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("NBE.closed_ML_compile",
     "[| pure ?t; ALL i. closed\<^sub>M\<^sub>L ?n (?\<sigma> i) |]
      ==> closed\<^sub>M\<^sub>L ?n (compile ?t ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("NBE.eq_Red_tm_trans",
     "[| ?s = ?t; ?t \<rightarrow> ?t' |] ==> ?s \<rightarrow> ?t'",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("NBE.no_match_ML_swap_rev",
     "[| length ?ps = length ?vs; no_match\<^sub>M\<^sub>L ?ps (rev ?vs) |]
      ==> no_match\<^sub>M\<^sub>L (rev ?ps) ?vs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("NBE.closed_tm_ML_foldl_At",
     "closed\<^sub>M\<^sub>L ?k (?t \<bullet>\<bullet> ?ts) =
      (closed\<^sub>M\<^sub>L ?k ?t &
       (ALL t:set ?ts. closed\<^sub>M\<^sub>L ?k t))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("NBE.lift_subst",
     "pure ?t ==>
      lift 0 (subst ?\<sigma> ?t) = subst (V 0 ## ?\<sigma>) (lift 0 ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 3)),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1))))),
    ("NBE.red_At2",
     "?t \<rightarrow>* ?t' ==>
      ?s \<bullet> ?t \<rightarrow>* ?s \<bullet> ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("NBE.red_At1",
     "?t \<rightarrow>* ?t' ==>
      ?t \<bullet> ?s \<rightarrow>* ?t' \<bullet> ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("NBE.pure_R",
     "(?nm, ?ts, ?t) : R ==> (ALL t:set ?ts. pure t) & pure ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 t_empty)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("NBE.size'_subst_ML",
     "ALL i j. size' (?\<sigma> i) = 1 ==>
      size' (subst\<^sub>M\<^sub>L ?\<sigma> ?v) = size' ?v",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("NBE.lift_lift_ML",
     "?i < ?k + 1 ==>
      lift\<^sub>M\<^sub>L (Suc ?k) (lift\<^sub>M\<^sub>L ?i ?v) =
      lift\<^sub>M\<^sub>L ?i (lift\<^sub>M\<^sub>L ?k ?v)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("NBE.lift_lift_ml",
     "?i < ?k + 1 ==> lift (Suc ?k) (lift ?i ?v) = lift ?i (lift ?k ?v)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("NBE.lift_lift_tm",
     "?i < ?k + 1 ==> lift (Suc ?k) (lift ?i ?t) = lift ?i (lift ?k ?t)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("NBE.nbe_C_normal_ML",
     "[| term ?v \<Rightarrow>* ?t'; C_normal\<^sub>M\<^sub>L ?v;
         pure ?t' |]
      ==> normal ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_var 0)),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NBE.lift_compile",
     "pure ?t ==>
      ALL \<sigma> k.
         lift k (compile ?t \<sigma>) = compile ?t (lift k o \<sigma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("NBE.subst_ML_comp2",
     "ALL i.
         ?\<sigma>'' i = subst\<^sub>M\<^sub>L ?\<sigma> (?\<sigma>' i) ==>
      subst\<^sub>M\<^sub>L ?\<sigma>
       (subst\<^sub>M\<^sub>L ?\<sigma>' ?v) =
      subst\<^sub>M\<^sub>L ?\<sigma>'' ?v",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("NBE.C_normal_subterms",
     "[| C_normal ?t; dterm ?t = C ?nm \<bullet>\<bullet> ?ts |]
      ==> ?ts = map dterm (C\<^sub>U_args ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 1)),
            template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_hole 6),
           template_app (template_hole 0, template_var 2))))),
    ("NBE.kernel_compile",
     "[| pure ?t; ALL i. ?\<sigma> i = V\<^sub>U i [] |]
      ==> compile ?t ?\<sigma>! = ?t",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("NBE.closed_ML_subst_ML2",
     "[| closed\<^sub>M\<^sub>L ?k ?v;
         ALL i<?k. closed\<^sub>M\<^sub>L ?l (?\<sigma> i) |]
      ==> closed\<^sub>M\<^sub>L ?l (subst\<^sub>M\<^sub>L ?\<sigma> ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("NBE.lift_is_CUD",
     "lift\<^sub>M\<^sub>L ?k ?v = C\<^sub>U ?nm ?vs' ==>
      EX vs.
         ?v = C\<^sub>U ?nm vs & ?vs' = map (lift\<^sub>M\<^sub>L ?k) vs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("NBE.kernel_subst_ML",
     "[| pure ?t; ALL i. closed\<^sub>M\<^sub>L 0 (?\<sigma> i) |]
      ==> subst\<^sub>M\<^sub>L ?\<sigma> (comp_open ?t)! =
          subst (kernel o ?\<sigma>) ?t",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_var 0)),
           template_var 1)))),
    ("NBE.subst_ML_id",
     "[| closed\<^sub>M\<^sub>L ?k ?v;
         ALL i<?k. ?\<sigma> i = V\<^sub>M\<^sub>L i |]
      ==> subst\<^sub>M\<^sub>L ?\<sigma> ?v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("NBE.Red_tm_append",
     "[| ?rs \<rightarrow>* ?rs'; ?ts \<rightarrow>* ?ts' |]
      ==> ?rs @ ?ts \<rightarrow>* ?rs' @ ?ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_hole 1)
           ))),
    ("NBE.fv_compR",
     "[| (?nm, ?vs, ?v) : compR; ?x : fv\<^sub>M\<^sub>L ?v |]
      ==> EX u:set ?vs. ?x : fv\<^sub>M\<^sub>L u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             t_empty)
           ))),
    ("NBE.fv_R",
     "[| (?nm, ?ts, ?t) : R; ?X : fv ?t |] ==> EX t':set ?ts. ?X : fv t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             t_empty)
           ))),
    ("NBE.C_normal_subterm",
     "[| C_normal ?t; dterm ?t = C ?nm \<bullet>\<bullet> ?ts;
         ?s : set (C\<^sub>U_args ?t) |]
      ==> C_normal ?s",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 2)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 3)))
            )],
       template_predicate
        (template_app (template_hole 8, template_var 0)))),
    ("NBE.foldl_At_eq_lemma",
     "length ?ts = length ?ts' ==>
      (?s \<bullet>\<bullet> ?ts = ?s' \<bullet>\<bullet> ?ts') =
      (?s = ?s' & ?ts = ?ts')",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0),
             template_var 2)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2))
             )))),
    ("NBE.Lam_Red_term_itE",
     "(\<Lambda> ?t, ?t') : Red_term ^^ ?i ==>
      EX t''. ?t' = \<Lambda> t'' & (?t, t'') : Red_term ^^ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("NBE.dterm_ML_comp_patD",
     "[| pattern ?t;
         dterm\<^sub>M\<^sub>L (comp_pat ?t) =
         C ?nm \<bullet>\<bullet> ?rs |]
      ==> EX ts. ?t = C ?nm \<bullet>\<bullet> ts",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 2)),
          template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_app (template_hole 1, template_var 1)),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("NBE.pattern_subst_ML_coincidence",
     "[| pattern ?t; ALL i:fv ?t. ?\<sigma> i = ?\<sigma>' i |]
      ==> subst\<^sub>M\<^sub>L ?\<sigma> (comp_pat ?t) =
          subst\<^sub>M\<^sub>L ?\<sigma>' (comp_pat ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("NBE.Red_ml_sound",
     "[| ?v \<Rightarrow> ?v'; closed\<^sub>M\<^sub>L 0 ?v |]
      ==> ?v! \<rightarrow>* ?v'! & closed\<^sub>M\<^sub>L 0 ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_app (template_hole 2, template_var 0))),
                 template_app (template_hole 1, template_hole 0))),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0))
           ))),
    ("NBE.Red_term_sound",
     "[| ?t \<Rightarrow> ?t'; closed\<^sub>M\<^sub>L 0 ?t |]
      ==> ?t! \<rightarrow>* ?t'! & closed\<^sub>M\<^sub>L 0 ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 2, template_var 1)),
                     template_app (template_hole 2, template_var 0))),
                 template_app (template_hole 1, template_hole 0))),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0))
           ))),
    ("NBE.no_match_R_coincide_aux",
     "[| !!x. x : set ?ts ==> pattern x;
         no_match (map (dterm\<^sub>M\<^sub>L o comp_pat) ?ts) ?rs |]
      ==> no_match ?ts ?rs",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_hole 0)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), template_var 0)
           ))),
    ("NBE.nbe_normal",
     "[| pure ?t; term (comp_fixed ?t) \<Rightarrow>* ?t'; pure ?t' |]
      ==> normal ?t'",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        t_empty))),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("NBE.eq_lists_iff_eq_nth",
     "length ?xs = length ?ys ==>
      (?xs = ?ys) = (ALL i<length ?xs. ?xs ! i = ?ys ! i)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("NBE.tm_eq_iff",
     "[| atomic_tm (head_tm ?s); atomic_tm (head_tm ?t) |]
      ==> (?s = ?t) = (head_tm ?s = head_tm ?t & args_tm ?s = args_tm ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_bimplication
        (template_equation (template_var 1, template_var 0),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 5, template_var 1)),
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0)))
             )))),
    ("NBE.subst_ML_coincidence",
     "[| closed\<^sub>M\<^sub>L ?k ?v;
         ALL i<?k. ?\<sigma> i = ?\<sigma>' i |]
      ==> subst\<^sub>M\<^sub>L ?\<sigma> ?v =
          subst\<^sub>M\<^sub>L ?\<sigma>' ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("NBE.termination_no_match_ML",
     "[| ?i < length ?ps; rev ?ps ! ?i = C\<^sub>U ?nm ?vs |]
      ==> sum_list (map size ?vs) < sum_list (map size ?ps)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2))))),
    ("NBE.kernel_inv",
     "[| ?t \<Rightarrow>* ?t'; closed\<^sub>M\<^sub>L 0 ?t |]
      ==> ?t! \<rightarrow>* ?t'! & closed\<^sub>M\<^sub>L 0 ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_hole 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 1, template_var 0))),
                 template_app (template_hole 6, template_hole 0))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0))
           ))),
    ("NBE.fv_compR_aux",
     "[| (?nm, ?ts, ?t') : R; ?x : fv\<^sub>M\<^sub>L (comp_open ?t') |]
      ==> EX t:set ?ts. ?x : fv\<^sub>M\<^sub>L (comp_pat t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1))),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             t_empty)
           ))),
    ("NBE.termination_no_match",
     "[| ?i < length ?ss; ?ss ! ?i = C ?nm \<bullet>\<bullet> ?ts |]
      ==> sum_list (map NBE.size_tm ?ts) < sum_list (map NBE.size_tm ?ss)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 3),
          template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 1)),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2))))),
    ("NBE.Reds_tm_list_foldl_At",
     "[| ?ts \<rightarrow>* ?ts'; ?s \<rightarrow>* ?s' |]
      ==> ?s \<bullet>\<bullet> ?ts \<rightarrow>*
          ?s' \<bullet>\<bullet> ?ts'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 1),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0),
                   template_var 2))),
             template_app (template_hole 3, template_hole 2))
           ))),
    ("NBE.kernel_subst_ML_pat",
     "[| pure ?t; pattern ?t;
         ALL i. closed\<^sub>M\<^sub>L 0 (?\<sigma> i) |]
      ==> subst\<^sub>M\<^sub>L ?\<sigma> (comp_pat ?t)! =
          subst (kernel o ?\<sigma>) ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_var 0)),
           template_var 1)))),
    ("NBE.nbe_correct",
     "[| pure ?t; term (comp_fixed ?t) \<Rightarrow>* ?t'; pure ?t' |]
      ==> ?t \<rightarrow>* ?t'",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        t_empty))),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0)),
             template_app (template_hole 2, template_hole 0))
           ))),
    ("NBE.subst_comp",
     "[| pure ?t; ALL i. pure (?\<sigma>' i);
         ?\<sigma>'' = (%i. subst ?\<sigma> (?\<sigma>' i)) |]
      ==> subst ?\<sigma> (subst ?\<sigma>' ?t) = subst ?\<sigma>'' ?t",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_equation (template_var 1, t_empty)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 3)))),
    ("NBE.At_eq_foldl_At",
     "(?r \<bullet> ?s = ?t \<bullet>\<bullet> ?ts) =
      (if ?ts = [] then ?t = ?r \<bullet> ?s
       else ?s = last ?ts & ?r = ?t \<bullet>\<bullet> butlast ?ts)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 7, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 7),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_hole 7),
                     template_var 1),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("NBE.foldl_At_eq_At",
     "(?t \<bullet>\<bullet> ?ts = ?r \<bullet> ?s) =
      (if ?ts = [] then ?t = ?r \<bullet> ?s
       else ?s = last ?ts & ?r = ?t \<bullet>\<bullet> butlast ?ts)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 3)),
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_app (template_hole 1, template_var 2))),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 3),
                   template_app (template_hole 0, template_var 2)))))
           ))),
    ("NBE.Red_ml_list_nth",
     "?vs \<Rightarrow> ?vs' ==>
      EX v' k.
         k < length ?vs & ?vs ! k \<Rightarrow> v' & ?vs' = ?vs[k := v']",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 0)),
              template_hole 11)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("NBE.lift_ML_subst_ML",
     "lift\<^sub>M\<^sub>L ?k (subst\<^sub>M\<^sub>L ?\<sigma> ?v) =
      subst\<^sub>M\<^sub>L
       (%i. if i < ?k then lift\<^sub>M\<^sub>L ?k (?\<sigma> i)
            else if i = ?k then V\<^sub>M\<^sub>L ?k
                 else lift\<^sub>M\<^sub>L ?k (?\<sigma> (i - 1)))
       (lift\<^sub>M\<^sub>L ?k ?v)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_var 0)))),
    ("NBE.no_match_compR_Cons",
     "no_match_compR ?nm ?vs ==> no_match_compR ?nm (?v # ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app (template_hole 5, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app (template_hole 5, t_empty))
           ))),
    ("NBE.termination_linpats",
     "[| ?i < length ?ts; ?ts ! ?i = C ?nm \<bullet>\<bullet> ?ts' |]
      ==> length ?ts' + sum_list (map size ?ts')
          < length ?ts + sum_list (map size ?ts)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_hole 5),
              template_app (template_hole 4, template_var 1)),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 2)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)))))),
    ("NBE.no_match_ML_subst_ML",
     "[| !!v x.
            [| v : set ?vs; x : fv\<^sub>M\<^sub>L v |]
            ==> C_normal\<^sub>M\<^sub>L (?\<sigma> x);
         no_match\<^sub>M\<^sub>L ?ps ?vs |]
      ==> no_match\<^sub>M\<^sub>L ?ps
           (map (subst\<^sub>M\<^sub>L ?\<sigma>) ?vs)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 2))
           ))),
    ("NBE.no_match_compR_lift",
     "no_match_compR ?nm ?vs ==> no_match_compR ?nm (map (lift ?k) ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app (template_hole 6, t_empty))
           ))),
    ("NBE.no_match_R_coincide",
     "no_match_compR ?nm (rev ?vs) ==>
      no_match_R ?nm (map dterm\<^sub>M\<^sub>L ?vs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_hole 13),
              template_app (template_hole 12, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, t_empty))
           ))),
    ("NBE.pure_foldl",
     "[| pure ?t; ALL t:set ?ts. pure t;
         !!s t. [| pure s; pure t |] ==> pure (?f s t) |]
      ==> pure (foldl ?f ?t ?ts)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("NBE.Red_term_pres_no_match",
     "[| ?i < length ?ts; ?ts ! ?i \<Rightarrow> ?t'; no_match ?ps ?dts;
         ?dts = map dterm ?ts |]
      ==> no_match ?ps (map dterm (?ts[?i := ?t']))",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 4)),
                  template_var 2)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 4),
                 template_var 2)))
           ))),
    ("NBE.compR_Red_tm",
     "[| (?nm, ?vs, ?v) : compR;
         ALL i. closed\<^sub>M\<^sub>L 0 (?\<sigma> i) |]
      ==> C ?nm \<bullet>\<bullet>
          map (subst\<^sub>M\<^sub>L ?\<sigma>) (rev ?vs)! \<rightarrow>*
          subst\<^sub>M\<^sub>L ?\<sigma> ?v!",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_app
                   (template_app (template_hole 16, template_var 2),
                    template_var 1))),
              template_hole 15)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_app (template_hole 7, template_var 3)),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 0)),
                         template_app (template_hole 2, template_var 2))))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 1)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("NBE.no_match_ML_aux",
     "[| ALL v:set ?cvs. C\<^sub>Us v; linpats ?ps;
         length ?ps = length ?cvs;
         ALL \<sigma>.
            map (subst\<^sub>M\<^sub>L \<sigma>) (map comp_pat ?ps) ~=
            ?cvs |]
      ==> no_match\<^sub>M\<^sub>L (map comp_pat ?ps) ?cvs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              t_empty)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("NBE.lift_comp_subst_decr",
     "lift 0 o subst_decr_ML ?k ?v = subst_decr_ML ?k (lift 0 ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6)),
         t_empty),
       t_empty)),
    ("NBE.Red_term_pres_no_match_star",
     "[| ALL i<length ?ts. ?ts ! i \<Rightarrow>* ?ts' ! i;
         length ?ts' = length ?ts; no_match ?ps (map dterm ?ts) |]
      ==> no_match ?ps (map dterm ?ts')",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("NBE.kernel_subst_ML_pat_map",
     "[| ALL t:set ?ts. pure t; patterns ?ts;
         ALL i. closed\<^sub>M\<^sub>L 0 (?\<sigma> i) |]
      ==> map (subst\<^sub>M\<^sub>L ?\<sigma>) (map comp_pat ?ts)! =
          map (subst (kernel o ?\<sigma>)) ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 1)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 7),
                 template_var 0))),
           template_var 1)))),
    ("NBE.V_ML_cons_ML_subst_decr",
     "V\<^sub>M\<^sub>L 0 ## subst_decr_ML ?k ?v =
      subst_decr_ML (Suc ?k) (lift\<^sub>M\<^sub>L 0 ?v)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app (template_hole 8, template_hole 7)),
         t_empty),
       t_empty)),
    ("NBE.shift_subst_decr",
     "V 0 ## subst_decr ?k ?t = subst_decr (Suc ?k) (lift 0 ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app (template_hole 8, template_hole 7)),
         t_empty),
       t_empty)),
    ("NBE.lift_subst_ML1",
     "ALL v k. lift 0 (?u[v/k]) = lift 0 ?u[lift 0 v/k]",
     template_predicate (template_app (template_hole 11, t_empty))),
    ("NBE.tm_vector_cases",
     "(EX n ts. ?t = V n \<bullet>\<bullet> ts) |
      (EX nm ts. ?t = C nm \<bullet>\<bullet> ts) |
      (EX t' ts. ?t = \<Lambda> t' \<bullet>\<bullet> ts) |
      (EX v ts. ?t = term v \<bullet>\<bullet> ts)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12, template_app (template_hole 11, t_empty)),
           template_app
            (template_app
              (template_hole 12, template_app (template_hole 5, t_empty)),
             template_app
              (template_app
                (template_hole 12, template_app (template_hole 3, t_empty)),
               template_app (template_hole 1, t_empty))))
         )),
    ("NBE.Red_term_pres_no_match_it",
     "[| ALL i<length ?ts. (?ts ! i, ?ts' ! i) : Red_term ^^ ?ns ! i;
         length ?ts' = length ?ts; length ?ns = length ?ts;
         no_match ?ps (map dterm ?ts) |]
      ==> no_match ?ps (map dterm ?ts')",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 11, template_var 3)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2))
           ))),
    ("NBE.no_match_preserved",
     "[| ALL t:set ?ts. C_normal t;
         length ?ts = length ?ts' &
         (ALL i<length ?ts. ?ts ! i \<Rightarrow>* ?ts' ! i);
         no_match ?ps ?os; ?os = map dterm ?ts |]
      ==> no_match ?ps (map dterm ?ts')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 3)),
                  template_app (template_hole 12, template_var 2))),
              template_app (template_hole 11, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2))
           ))),
    ("NBE.lift_subst_aux",
     "[| pure ?t; ALL i<?k. ?\<sigma>' i = lift ?k (?\<sigma> i);
         ALL i>=?k. ?\<sigma>' (Suc i) = lift ?k (?\<sigma> i);
         ?\<sigma>' ?k = V ?k |]
      ==> lift ?k (subst ?\<sigma> ?t) = subst ?\<sigma>' (lift ?k ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app (template_var 1, template_var 2),
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 3))))),
    ("NBE.C_Red_term_it",
     "(C ?nm \<bullet>\<bullet> ?rs, ?r) : Red_term ^^ ?i ==>
      EX ts is.
         ?r = C ?nm \<bullet>\<bullet> ts &
         length ts = length ?rs &
         length is = length ?rs &
         (ALL j<length ts.
             (?rs ! j, ts ! j) : Red_term ^^ is ! j & is ! j <= ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_app (template_hole 15, template_var 3)),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 14, template_var 0),
                template_hole 13))
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("NBE.Red_term_it",
     "(V ?x \<bullet>\<bullet> ?rs, ?r) : Red_term ^^ ?i ==>
      EX ts is.
         ?r = V ?x \<bullet>\<bullet> ts &
         length ts = length ?rs &
         length is = length ?rs &
         (ALL j<length ts.
             (?rs ! j, ts ! j) : Red_term ^^ is ! j & is ! j <= ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_app (template_hole 15, template_var 3)),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 14, template_var 0),
                template_hole 13))
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("NBE.C_redt",
     "[| ?t \<Rightarrow> ?t'; C_normal ?t |]
      ==> C_normal ?t' &
          (dterm ?t = C ?nm \<bullet>\<bullet> ?ts -->
           (EX ts'.
               ts' = map dterm (C\<^sub>U_args ?t') &
               dterm ?t' = C ?nm \<bullet>\<bullet> ts' &
               length (C\<^sub>U_args ?t) = length (C\<^sub>U_args ?t') &
               (ALL i<length (C\<^sub>U_args ?t).
                   C\<^sub>U_args ?t ! i \<Rightarrow>*
                   C\<^sub>U_args ?t' ! i)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 3),
                  template_var 2)),
              template_hole 18)
            ),
        template_predicate
         (template_app (template_hole 17, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app (template_hole 17, template_var 2)),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app (template_hole 13, template_var 3)),
                   template_app
                    (template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_app (template_hole 10, template_var 1)),
                     template_var 0))),
               template_app (template_hole 9, t_empty)))
           ))),
    ("NBE.C_redts",
     "[| ?t \<Rightarrow>* ?t'; C_normal ?t |]
      ==> C_normal ?t' &
          (dterm ?t = C ?nm \<bullet>\<bullet> ?ts -->
           (EX ts'.
               dterm ?t' = C ?nm \<bullet>\<bullet> ts' &
               (length (C\<^sub>U_args ?t) = length (C\<^sub>U_args ?t') &
                (ALL i<length (C\<^sub>U_args ?t).
                    C\<^sub>U_args ?t ! i \<Rightarrow>*
                    C\<^sub>U_args ?t' ! i)) &
               ts' = map dterm (C\<^sub>U_args ?t')))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 3),
                  template_var 2)),
              template_app (template_hole 18, template_hole 17))
            ),
        template_predicate
         (template_app (template_hole 16, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app (template_hole 16, template_var 2)),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 3)),
                   template_app
                    (template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_app (template_hole 9, template_var 1)),
                     template_var 0))),
               template_app (template_hole 8, t_empty)))
           ))),
    ("NBE.kernel_subst1",
     "[| closed\<^sub>M\<^sub>L 0 ?v; closed\<^sub>M\<^sub>L (Suc 0) ?u |]
      ==> ?u[?v/0]! = lift 0 ?u[V\<^sub>U 0 []/0]![?v!/0]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 15, template_hole 16)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_app (template_hole 0, template_hole 16),
                 template_var 0))))))),
    ("NBE.C_Red_term_ML",
     "[| ?v \<Rightarrow> ?v'; C_normal\<^sub>M\<^sub>L ?v;
         dterm\<^sub>M\<^sub>L ?v = C ?nm \<bullet>\<bullet> ?ts |]
      ==> dterm\<^sub>M\<^sub>L ?v' =
          C ?nm \<bullet>\<bullet> map dterm (C\<^sub>U_args (term ?v')) &
          (length (C\<^sub>U_args (term ?v)) =
           length (C\<^sub>U_args (term ?v')) &
           (ALL i<length (C\<^sub>U_args (term ?v)).
               C\<^sub>U_args (term ?v) ! i \<Rightarrow>*
               C\<^sub>U_args (term ?v') ! i)) &
          ?ts = map dterm (C\<^sub>U_args (term ?v))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app (template_hole 23, template_var 3),
                  template_var 2)),
              template_hole 22)
            ),
        template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_equation
         (template_app (template_hole 19, template_var 3),
          template_app
           (template_app
             (template_app (template_hole 18, template_hole 17),
              template_app (template_hole 16, template_var 1)),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 20,
                   template_app (template_hole 19, template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 18, template_hole 17),
                     template_app (template_hole 16, template_var 1)),
                   template_app
                    (template_app (template_hole 14, template_hole 13),
                     template_app
                      (template_hole 12,
                       template_app (template_hole 11, template_var 2)))))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11, template_var 3)))),
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 11, template_var 2))))),
                   template_app (template_hole 8, t_empty))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_app
                    (template_hole 12,
                     template_app (template_hole 11, template_var 3))))))
           ))),
    ("NBE.ml_induct",
     "[| !!i nm. ?P (C\<^sub>M\<^sub>L nm); !!i X. ?P (V\<^sub>M\<^sub>L X);
         !!i v vs.
            [| ?P v; !!x. x : set vs ==> ?P x |]
            ==> ?P (A\<^sub>M\<^sub>L v vs);
         !!i v. ?P v ==> ?P (Lam\<^sub>M\<^sub>L v);
         !!i nm vs. (!!x. x : set vs ==> ?P x) ==> ?P (C\<^sub>U nm vs);
         !!i x vs. (!!xa. xa : set vs ==> ?P xa) ==> ?P (V\<^sub>U x vs);
         !!i v vs n.
            [| ?P v; !!x. x : set vs ==> ?P x |] ==> ?P (Clo v vs n);
         !!i u v. [| ?P u; ?P v |] ==> ?P (apply u v) |]
      ==> ?P ?a1.0",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("NBE.Red_term_hnf_induct",
     "[| ?t \<Rightarrow> ?t';
         !!nm vs ts.
            ?P (term (C\<^sub>U nm vs) \<bullet>\<bullet> ts)
             ((C nm \<bullet>\<bullet> map term (rev vs)) \<bullet>\<bullet>
              ts);
         !!x vs ts.
            ?P (term (V\<^sub>U x vs) \<bullet>\<bullet> ts)
             ((V x \<bullet>\<bullet> map term (rev vs)) \<bullet>\<bullet>
              ts);
         !!vf vs n ts.
            ?P (term (Clo vf vs n) \<bullet>\<bullet> ts)
             (\<Lambda>
               (term
                 (apply (lift 0 (Clo vf vs n))
                   (V\<^sub>U 0 []))) \<bullet>\<bullet>
              ts);
         !!t t' ts.
            [| t \<Rightarrow> t'; ?P t t' |]
            ==> ?P (\<Lambda> t \<bullet>\<bullet> ts)
                 (\<Lambda> t' \<bullet>\<bullet> ts);
         !!v v' ts.
            v \<Rightarrow> v' ==>
            ?P (term v \<bullet>\<bullet> ts)
             (term v' \<bullet>\<bullet> ts);
         !!x i t' ts.
            [| i < length ts; ts ! i \<Rightarrow> t'; ?P (ts ! i) t' |]
            ==> ?P (V x \<bullet>\<bullet> ts)
                 (V x \<bullet>\<bullet> ts[i := t']);
         !!nm i t' ts.
            [| i < length ts; ts ! i \<Rightarrow> t'; ?P (ts ! i) t' |]
            ==> ?P (C nm \<bullet>\<bullet> ts)
                 (C nm \<bullet>\<bullet> ts[i := t']);
         !!t i t' ts.
            [| i < length ts; ts ! i \<Rightarrow> t'; ?P (ts ! i) t' |]
            ==> ?P (\<Lambda> t \<bullet>\<bullet> ts)
                 (\<Lambda> t \<bullet>\<bullet> ts[i := t']);
         !!v i t' ts.
            [| i < length ts; ts ! i \<Rightarrow> t'; ?P (ts ! i) t' |]
            ==> ?P (term v \<bullet>\<bullet> ts)
                 (term v \<bullet>\<bullet> ts[i := t']) |]
      ==> ?P ?t ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_var 2),
                  template_var 1)),
              template_hole 28)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("NBE.Red_term_hnf_cases",
     "[| ?t \<Rightarrow> ?t';
         !!nm vs ts.
            [| ?t = term (C\<^sub>U nm vs) \<bullet>\<bullet> ts;
               ?t' =
               (C nm \<bullet>\<bullet>
                map term (rev vs)) \<bullet>\<bullet>
               ts |]
            ==> ?P;
         !!x vs ts.
            [| ?t = term (V\<^sub>U x vs) \<bullet>\<bullet> ts;
               ?t' =
               (V x \<bullet>\<bullet> map term (rev vs)) \<bullet>\<bullet>
               ts |]
            ==> ?P;
         !!vf vs n ts.
            [| ?t = term (Clo vf vs n) \<bullet>\<bullet> ts;
               ?t' =
               \<Lambda>
                (term
                  (apply (lift 0 (Clo vf vs n))
                    (V\<^sub>U 0 []))) \<bullet>\<bullet>
               ts |]
            ==> ?P;
         !!s s' ts.
            [| ?t = \<Lambda> s \<bullet>\<bullet> ts;
               ?t' = \<Lambda> s' \<bullet>\<bullet> ts;
               s \<Rightarrow> s' |]
            ==> ?P;
         !!v v' ts.
            [| ?t = term v \<bullet>\<bullet> ts;
               ?t' = term v' \<bullet>\<bullet> ts; v \<Rightarrow> v' |]
            ==> ?P;
         !!x i r' ts.
            [| i < length ts; ts ! i \<Rightarrow> r';
               ?t = V x \<bullet>\<bullet> ts;
               ?t' = V x \<bullet>\<bullet> ts[i := r'] |]
            ==> ?P;
         !!nm i r' ts.
            [| i < length ts; ts ! i \<Rightarrow> r';
               ?t = C nm \<bullet>\<bullet> ts;
               ?t' = C nm \<bullet>\<bullet> ts[i := r'] |]
            ==> ?P;
         !!s i r' ts.
            [| i < length ts; ts ! i \<Rightarrow> r';
               ?t = \<Lambda> s \<bullet>\<bullet> ts;
               ?t' = \<Lambda> s \<bullet>\<bullet> ts[i := r'] |]
            ==> ?P;
         !!v i r' ts.
            [| i < length ts; ts ! i \<Rightarrow> r';
               ?t = term v \<bullet>\<bullet> ts;
               ?t' = term v \<bullet>\<bullet> ts[i := r'] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app (template_hole 30, template_var 2),
                  template_var 1)),
              template_hole 29)
            ),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0)))]
