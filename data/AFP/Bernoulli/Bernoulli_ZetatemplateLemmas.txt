   [("Bernoulli_Zeta.bernoulli_even_nonzero",
     "even ?n ==> bernoulli ?n ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Bernoulli_Zeta.bernoulli_zero_iff",
     "(bernoulli ?n = 0) = (odd ?n & ?n ~= 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 9, template_var 0), template_hole 8),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_var 0))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Bernoulli_Zeta.bernoulli'_zero_iff",
     "(bernoulli' ?n = 0) = (?n ~= 1 & odd ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 9, template_var 0), template_hole 8),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4))),
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 0)))
           ))),
    ("Bernoulli_Zeta.linepath_cong",
     "[| ?a = ?a'; ?b = ?b' |] ==> linepath ?a ?b = linepath ?a' ?b'",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Bernoulli_Zeta.joinpaths_cong",
     "[| ?f = ?f'; ?g = ?g' |] ==> ?f +++ ?g = ?f' +++ ?g'",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Bernoulli_Zeta.sgn_bernoulli_even",
     "0 < ?n ==> sgn (bernoulli (2 * ?n)) = (- 1) ^ Suc ?n",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 0)],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Bernoulli_Zeta.bernoulli_pos_iff",
     "(0 < bernoulli ?n) = (?n = 0 | ?n mod 4 = 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 1, template_hole 0))))),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("Bernoulli_Zeta.bernoulli_neg_iff",
     "(bernoulli ?n < 0) = (?n = 1 | 0 < ?n & 4 dvd ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 0)),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 1, template_hole 0)))),
                 template_var 0)))
           ))),
    ("Bernoulli_Zeta.sgn_bernoulli",
     "sgn (bernoulli ?n) =
      (if ?n = 0 then 1
       else if ?n = 1 then - 1
            else if odd ?n then 0 else (- 1) ^ Suc (?n div 2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_hole 12)),
               template_hole 11),
             template_app
              (template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_var 0),
                     template_hole 10)),
                 template_app (template_hole 9, template_hole 11)),
               template_app
                (template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_var 0))),
                   template_hole 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 9, template_hole 11)),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5, template_hole 4))))))))
           ))),
    ("Bernoulli_Zeta.residue_bernoulli",
     "?n ~= 0 ==>
      residue (%z. 1 / (z ^ ?m * (exp z - 1)))
       (complex_of_real (2 * pi * real_of_int ?n) * \<i>) =
      1 / (complex_of_real (2 * pi * real_of_int ?n) * \<i>) ^ ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 16))],
       template_equation
        (template_app
          (template_app (template_hole 14, t_empty),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4, template_hole 3))),
                       template_hole 2)),
                   template_app (template_hole 1, template_var 1)))),
             template_hole 0)),
         template_app
          (template_app (template_hole 13, template_hole 12),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 4, template_hole 3))),
                           template_hole 2)),
                       template_app (template_hole 1, template_var 1)))),
                 template_hole 0)),
             template_var 0))))),
    ("Bernoulli_Zeta.nat_even_power_sums_real",
     "0 < ?n' ==>
      (%k. 1 / real (Suc k) ^ (2 * ?n')) sums
      ((- 1) ^ Suc ?n' * bernoulli (2 * ?n') * (2 * pi) ^ (2 * ?n') /
       (2 * fact (2 * ?n')))",
     template_implication
      ([template_inequation (less_than, template_hole 16, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 15, t_empty),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_hole 4, template_hole 13)),
                           template_app
                            (template_hole 10, template_var 0))),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7, template_hole 6))),
                           template_var 0)))),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 7, template_hole 6))),
                         template_hole 1)),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7, template_hole 6))),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 7, template_hole 6))),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6))),
                     template_var 0)))))
           ))),
    ("Bernoulli_Zeta.nat_even_power_sums_complex",
     "0 < ?n' ==>
      (%k. 1 / of_nat (Suc k) ^ (2 * ?n')) sums
      complex_of_real
       ((- 1) ^ Suc ?n' * bernoulli (2 * ?n') * (2 * pi) ^ (2 * ?n') /
        (2 * fact (2 * ?n')))",
     template_implication
      ([template_inequation (less_than, template_hole 20, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 19, t_empty),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5, template_hole 4)),
                             template_app
                              (template_hole 14, template_var 0))),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 13,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 11, template_hole 10))),
                             template_var 0)))),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 11, template_hole 10))),
                           template_hole 1)),
                       template_app
                        (template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11, template_hole 10))),
                         template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 11, template_hole 10))),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 11, template_hole 10))),
                       template_var 0))))))
           )))]
