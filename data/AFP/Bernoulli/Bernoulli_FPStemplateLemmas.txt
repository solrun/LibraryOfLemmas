   [("Bernoulli_FPS.squarefree_bernoulli_denom",
     "squarefree (bernoulli_denom ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Bernoulli_FPS.bernoulli_denom_pos", "0 < bernoulli_denom ?n",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Bernoulli_FPS.bernoulli_denom_nonzero", "bernoulli_denom ?n ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_0",
     "gen_akiyama_tanigawa ?f 0 = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Bernoulli_FPS.fps_XD'_1", "fps_XD' ?a 1 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Bernoulli_FPS.fps_XD'_0", "fps_XD' ?a 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Bernoulli_FPS.bernoulli'_conv_akiyama_tanigawa",
     "bernoulli' ?n = akiyama_tanigawa ?n 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Bernoulli_FPS.bernoulli_odd_numeral_eq_0",
     "bernoulli (numeral (num.Bit1 ?n)) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("Bernoulli_FPS.bernoulli'_odd_numeral_eq_0",
     "bernoulli' (numeral (num.Bit1 ?n)) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("Bernoulli_FPS.fps_XD'_fps_of_int", "fps_XD' ?a (of_int ?b) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Bernoulli_FPS.fps_XD'_fps_const", "fps_XD' ?a (fps_const ?b) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Bernoulli_FPS.fps_XD'_fps_of_nat", "fps_XD' ?a (of_nat ?b) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Bernoulli_FPS.fps_XD'_fps_numeral", "fps_XD' ?a (numeral ?b) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Bernoulli_FPS.coprime_bernoulli_num_denom",
     "coprime (bernoulli_num ?n) (int (bernoulli_denom ?n))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Bernoulli_FPS.length_akiyama_tanigawa_step_aux",
     "length (akiyama_tanigawa_step_aux ?m ?xs) = length ?xs - 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Bernoulli_FPS.length_akiyama_tanigawa_row",
     "length (akiyama_tanigawa_row ?n ?l ?u) = ?u - ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Bernoulli_FPS.eval_bernpoly",
     "fact (numeral ?k) = numeral ?k * fact (pred_numeral ?k)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 0, template_var 0))))),
    ("Bernoulli_FPS.fps_nth_bernoulli'_fps",
     "bernoulli'_fps $ ?n = of_real (bernoulli' ?n) / fact ?n",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.fps_nth_bernoulli_fps",
     "bernoulli_fps $ ?n = of_real (bernoulli ?n) / fact ?n",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.Stirling_n_0",
     "Stirling ?n 0 = (if ?n = 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 2)),
               template_hole 0),
             template_hole 2)
           ))),
    ("Bernoulli_FPS.length_gen_akiyama_tanigawa_row",
     "length (gen_akiyama_tanigawa_row ?f ?n ?l ?u) = ?u - ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Bernoulli_FPS.eval_bernpoly",
     "{..numeral ?k} = insert (numeral ?k) {..pred_numeral ?k}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("Bernoulli_FPS.akiyama_tanigawa_row_eq_Nil_iff",
     "(akiyama_tanigawa_row ?n ?l ?u = []) = (?u <= ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Bernoulli_FPS.bernoulli_conv_num_denom",
     "bernoulli ?n =
      real_of_int (bernoulli_num ?n) / real (bernoulli_denom ?n)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Bernoulli_FPS.akiyama_tanigawa_code",
     "akiyama_tanigawa ?n ?k = hd (akiyama_tanigawa_row ?n ?k (Suc ?k))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_row_eq_Nil_iff",
     "(gen_akiyama_tanigawa_row ?f ?n ?l ?u = []) = (?u <= ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_row_0",
     "gen_akiyama_tanigawa_row ?f 0 ?l ?u = map ?f [?l..<?u]",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_hole 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Bernoulli_FPS.akiyama_tanigawa_step_aux_eq_Nil_iff",
     "(akiyama_tanigawa_step_aux ?m ?xs = []) = (length ?xs < 2)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_code",
     "gen_akiyama_tanigawa ?f ?n ?k =
      hd (gen_akiyama_tanigawa_row ?f ?n ?k (Suc ?k))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Bernoulli_FPS.Stirling_fps_nth",
     "Stirling_fps ?m $ ?n = real (Stirling ?n ?m) / fact ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.Stirling_fps_altdef",
     "Stirling_fps ?m = Abs_fps (%n. real (Stirling n ?m) / fact n)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Bernoulli_FPS.Ints_real_of_nat_divide",
     "?b dvd ?a ==> real ?a / real ?b : \<int>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 1, template_var 1))),
             template_hole 0)
           ))),
    ("Bernoulli_FPS.bernoulli_conv_akiyama_tanigawa",
     "bernoulli ?n = akiyama_tanigawa ?n 0 - (if ?n = 1 then 1 else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 5)),
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)),
                 template_hole 1),
               template_hole 0))
           ))),
    ("Bernoulli_FPS.fps_XD'_minus",
     "fps_XD' ?a (?b - ?c) = fps_XD' ?a ?b - fps_XD' ?a ?c",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Bernoulli_FPS.fps_XD'_add",
     "fps_XD' ?a (?b + ?c) = fps_XD' ?a ?b + fps_XD' ?a ?c",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Bernoulli_FPS.fps_XD'_sum",
     "fps_XD' ?a (sum ?f ?A) = (SUM x:?A. fps_XD' ?a (?f x))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Bernoulli_FPS.AT_fps_Suc",
     "??.Bernoulli_FPS.AT_fps ?f (Suc ?n) =
      (fps_X - 1) * fps_deriv (??.Bernoulli_FPS.AT_fps ?f ?n)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))))),
    ("Bernoulli_FPS.cong_int",
     "[?a = ?b] (mod ?m) ==> [int ?a = int ?b] (mod int ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Bernoulli_FPS.akiyama_tanigawa_row_0",
     "akiyama_tanigawa_row 0 ?l ?u =
      map (%n. inverse (real (Suc n))) [?l..<?u]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Bernoulli_FPS.akiyama_tanigawa_row_Suc",
     "akiyama_tanigawa_row (Suc ?n) ?l ?u =
      akiyama_tanigawa_step_aux (Suc ?l)
       (akiyama_tanigawa_row ?n ?l (Suc ?u))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Bernoulli_FPS.bernoulli_denom_dvd",
     "bernoulli_denom ?n dvd 2 * (2 ^ ?n - 1)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_hole 3))),
                   template_var 0)),
               template_hole 0)))
         )),
    ("Bernoulli_FPS.akiyama_tanigawa_row_numeral",
     "akiyama_tanigawa_row (numeral ?n) ?l ?u =
      akiyama_tanigawa_step_aux (Suc ?l)
       (akiyama_tanigawa_row (pred_numeral ?n) ?l (Suc ?u))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Bernoulli_FPS.eval_bernpoly",
     "?i < ?j ==> [?i..<?j] = ?i # [Suc ?i..<?j]",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Bernoulli_FPS.eval_bernpoly",
     "?p ^ ?m = (if ?m = 0 then 1::?'a else ?p * ?p ^ (?m - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_row_Suc",
     "gen_akiyama_tanigawa_row ?f (Suc ?n) ?l ?u =
      akiyama_tanigawa_step_aux (Suc ?l)
       (gen_akiyama_tanigawa_row ?f ?n ?l (Suc ?u))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Bernoulli_FPS.finite_bernoulli_denom_set",
     "0 < ?n ==> finite {p. prime p & p - 1 dvd ?n}",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_row_numeral",
     "gen_akiyama_tanigawa_row ?f (numeral ?n) ?l ?u =
      akiyama_tanigawa_step_aux (Suc ?l)
       (gen_akiyama_tanigawa_row ?f (pred_numeral ?n) ?l (Suc ?u))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 3, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Bernoulli_FPS.fps_XD'_prod",
     "fps_XD' ?a (?b * ?c) = fps_XD' ?a ?b * ?c + ?b * fps_XD' ?a ?c",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Bernoulli_FPS.sum_Stirling_binomial",
     "Stirling (Suc ?n) (Suc ?m) =
      (SUM i = 0..?n. Stirling i ?m * (?n choose i))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Bernoulli_FPS.fps_XD'_power",
     "fps_XD' ?a (?b ^ ?n) = of_nat ?n * ?b ^ (?n - 1) * fps_XD' ?a ?b",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 1)))),
    ("Bernoulli_FPS.fps_XD'_power_Suc",
     "fps_XD' ?a (?b ^ Suc ?n) = of_nat (Suc ?n) * ?b ^ ?n * fps_XD' ?a ?b",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Bernoulli_FPS.sum_in_Ints",
     "(!!x. x : ?A ==> ?f x : \<int>) ==> sum ?f ?A : \<int>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Bernoulli_FPS.bernoulli_denom_odd",
     "[| ?n ~= 1; odd ?n |] ==> bernoulli_denom ?n = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_hole 1))),
                  template_var 0)
                )
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 5))),
    ("Bernoulli_FPS.bernoulli_odd_eq_0",
     "[| ?n ~= 1; odd ?n |] ==> bernoulli ?n = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_hole 3))),
                  template_var 0)
                )
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Bernoulli_FPS.bernoulli'_odd_eq_0",
     "[| ?n ~= 1; odd ?n |] ==> bernoulli' ?n = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_hole 3))),
                  template_var 0)
                )
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Bernoulli_FPS.Stirling_fps_aux",
     "(fps_exp 1 - 1) ^ ?m $ ?n * fact ?n =
      fact ?m * real (Stirling ?n ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)),
                     template_hole 3)),
                 template_var 1)),
             template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Bernoulli_FPS.bernoulli_bound",
     "0 < ?n ==> bernoulli_denom ?n <= 2 * (2 ^ ?n - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 0)),
             template_hole 0))))),
    ("Bernoulli_FPS.nth_akiyama_tanigawa_row",
     "?i < ?u - ?l ==>
      akiyama_tanigawa_row ?n ?l ?u ! ?i = akiyama_tanigawa ?n (?i + ?l)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1),
               template_var 2)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Bernoulli_FPS.six_divides_bernoulli_denom",
     "[| even ?n; 0 < ?n |] ==> 6 dvd bernoulli_denom ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_hole 4)))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Bernoulli_FPS.AT_fps_0_nth",
     "??.Bernoulli_FPS.AT_fps ?f 0 $ ?n =
      (if ?n = 0 then - ?f 0 else ?f (?n - 1) - ?f ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 6)),
               template_app
                (template_hole 3,
                 template_app (template_var 1, template_hole 6))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_var 1,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_app (template_var 1, template_var 0)))
           ))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_fps",
     "Abs_fps (%n. gen_akiyama_tanigawa ?f n 0 / fact n) =
      fps_exp 1 * (Abs_fps ?f oo 1 - fps_exp 1)",
     template_equation
      (template_app (template_hole 10, t_empty),
       template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 10, template_var 0)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 4, template_hole 3)))))),
    ("Bernoulli_FPS.eval_bernpoly",
     "?k <= ?n ==>
      of_nat (?n choose ?k) = fact ?n / (fact ?k * fact (?n - ?k))",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))))),
    ("Bernoulli_FPS.nth_gen_akiyama_tanigawa_row",
     "?i < ?u - ?l ==>
      gen_akiyama_tanigawa_row ?f ?n ?l ?u ! ?i =
      gen_akiyama_tanigawa ?f ?n (?i + ?l)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0),
                 template_var 2),
               template_var 3)),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2))))),
    ("Bernoulli_FPS.eval_bernpoly",
     "bernpoly ?n =
      (%x. SUM k<=?n.
           of_nat (?n choose k) * of_real (bernoulli k) * x ^ (?n - k))",
     template_equation
      (template_app (template_hole 9, template_var 0), t_empty)),
    ("Bernoulli_FPS.bernoulli_conv_Stirling",
     "bernoulli ?n =
      (SUM k<=?n.
       (- 1) ^ k * fact k / real (k + 1) * real (Stirling ?n k))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app
        (template_app (template_hole 11, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.bernoulli_denom_correct",
     "(!!a. [| coprime a (int (bernoulli_denom ?m));
               bernoulli ?m = real_of_int a / real (bernoulli_denom ?m) |]
            ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Bernoulli_FPS.gen_akiyama_tanigawa_n_0",
     "gen_akiyama_tanigawa ?f ?n 0 =
      (SUM k<=?n.
       (- 1) ^ k * fact k * real (Stirling (Suc ?n) (Suc k)) * ?f k)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 1), template_var 0),
         template_hole 10),
       template_app
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.AT_fps_altdef",
     "??.Bernoulli_FPS.AT_fps ?f ?n =
      (SUM m<=?n.
       fps_const (real (Stirling ?n m)) * (fps_X - 1) ^ m *
       (fps_deriv ^^ m) (??.Bernoulli_FPS.AT_fps ?f 0))",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 12, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.bernoulli_denom_prime_nonprime",
     "[| prime ?p; ~ prime (2 * ?p + 1) |]
      ==> bernoulli_denom (2 * ?p) = 6",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_hole 6,
                            template_app
                             (template_hole 5, template_hole 4))),
                        template_var 0)),
                    template_hole 3))
                )
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_var 0)),
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_hole 4)))))),
    ("Bernoulli_FPS.nth_akiyama_tanigawa_step_aux",
     "?n < length ?xs - 1 ==>
      akiyama_tanigawa_step_aux ?m ?xs ! ?n =
      real (?m + ?n) * (?xs ! ?n - ?xs ! Suc ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1)),
            template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app (template_hole 0, template_var 2))))))),
    ("Bernoulli_FPS.bernoulli_denom_prime_nonprime",
     "[| prime ?p; ~ prime (2 * ?p + 1) |]
      ==> [bernoulli_num (2 * ?p) = 1] (mod 6)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7, template_hole 6))),
                        template_var 0)),
                    template_hole 5))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6))),
                     template_var 0))),
               template_hole 2),
             template_app
              (template_hole 1,
               template_app
                (template_hole 7,
                 template_app (template_hole 0, template_hole 6))))
           ))),
    ("Bernoulli_FPS.bernoulli'_code",
     "bernoulli' ?n =
      (if ?n = 0 then 1
       else if ?n = 1 then 1 / 2
            else if odd ?n then 0 else akiyama_tanigawa ?n 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 0),
                   template_hole 11)),
               template_hole 10),
             template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_var 0),
                     template_hole 9)),
                 template_app
                  (template_app (template_hole 8, template_hole 10),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 6, template_hole 5))),
                         template_var 0))),
                   template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 11))))
           ))),
    ("Bernoulli_FPS.Stirling_closed_form",
     "real (Stirling ?n ?k) =
      (SUM j<=?k. (- 1) ^ (?k - j) * real (?k choose j) * real j ^ ?n) /
      fact ?k",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.bernoulli_denom_even",
     "[| 0 < ?n; even ?n |]
      ==> bernoulli_denom ?n = \<Prod>{p. prime p & p - 1 dvd ?n}",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_hole 8))),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 4, t_empty))))),
    ("Bernoulli_FPS.bernoulli_altdef",
     "bernoulli ?n =
      (SUM m<=?n.
       SUM k<=m.
       (- 1) ^ k * real (m choose k) * real k ^ ?n / real (Suc m))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Bernoulli_FPS.bernoulli_code",
     "bernoulli ?n =
      (if ?n = 0 then 1
       else if ?n = 1 then - 1 / 2
            else if odd ?n then 0 else akiyama_tanigawa ?n 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_hole 12)),
               template_hole 11),
             template_app
              (template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_var 0),
                     template_hole 10)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 11)),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 6, template_hole 5))),
                         template_var 0))),
                   template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 12))))
           ))),
    ("Bernoulli_FPS.fps_XD'_funpow_affine",
     "fps_deriv ?G = 1 ==>
      (fps_XD' ?G ^^ ?n) ?H =
      (SUM m<=?n.
       fps_const (real (Stirling ?n m)) * ?G ^ m * (fps_deriv ^^ m) ?H)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_hole 9)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_app (template_hole 7, template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("Bernoulli_FPS.bernoulli_denom_prime_nonprime",
     "[| prime ?p; ~ prime (2 * ?p + 1) |]
      ==> bernoulli (2 * ?p) - 1 / 6 : \<int>",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_hole 11,
                            template_app
                             (template_hole 10, template_hole 9))),
                        template_var 0)),
                    template_hole 8))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 10, template_hole 9))),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 1, template_hole 9)))))),
             template_hole 0)
           ))),
    ("Bernoulli_FPS.product_dvd_fact",
     "[| 1 < ?a; 1 < ?b; ?a = ?b --> 2 < ?a |]
      ==> ?a * ?b dvd fact (?a * ?b - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 9, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_hole 9)))
           ))),
    ("Bernoulli_FPS.eval_bernoulli'",
     "bernoulli' (numeral ?n) =
      (if numeral ?n = 0 then 1
       else if numeral ?n = 1 then 1 / 2
            else if odd (numeral ?n) then 0
                 else akiyama_tanigawa (numeral ?n) 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 13, template_var 0)),
                   template_hole 10)),
               template_hole 9),
             template_app
              (template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 13, template_var 0)),
                     template_hole 8)),
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_app (template_hole 13, template_var 0)))),
                   template_hole 1),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 13, template_var 0)),
                   template_hole 10))))
           ))),
    ("Bernoulli_FPS.Rats_int_div_natE",
     "[| ?x : \<rat>;
         !!m n.
            [| 0 < n; ?x = of_int m / of_nat n; coprime m (int n) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Bernoulli_FPS.bernoulli_denom_code",
     "bernoulli_denom ?n =
      (if ?n = 1 then 2
       else if ?n = 0 | odd ?n then 1
            else prod_list
                  (filter (%p. p - 1 dvd ?n) (primes_upto (?n + 1))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 15, template_var 0),
                   template_hole 12)),
               template_app
                (template_hole 11,
                 template_app (template_hole 10, template_hole 9))),
             template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 15, template_var 0),
                         template_hole 7)),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_hole 9))),
                         template_var 0)))),
                 template_hole 12),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_hole 12))))))
           ))),
    ("Bernoulli_FPS.eval_bernpoly",
     "bernoulli (numeral ?n) =
      (if numeral ?n = 0 then 1
       else if numeral ?n = 1 then - 1 / 2
            else if odd (numeral ?n) then 0
                 else akiyama_tanigawa (numeral ?n) 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app (template_hole 14, template_var 0)),
                   template_hole 11)),
               template_hole 10),
             template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app (template_hole 14, template_var 0)),
                     template_hole 9)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 10)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_app (template_hole 14, template_var 0)))),
                   template_hole 1),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 14, template_var 0)),
                   template_hole 11))))
           ))),
    ("Bernoulli_FPS.vonStaudt_Clausen",
     "0 < ?n ==>
      bernoulli (2 * ?n) + (SUM p | prime p & p - 1 dvd 2 * ?n. 1 / real p)
      : \<int>",
     template_implication
      ([template_inequation (less_than, template_hole 18, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12, template_hole 11))),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 10, t_empty),
                   template_app (template_hole 6, t_empty)))),
             template_hole 0)
           ))),
    ("Bernoulli_FPS.composite_imp_factors_nat",
     "[| 1 < ?m; ~ prime ?m |]
      ==> EX n k. ?m = n * k & 1 < n & n < ?m & 1 < k & k < ?m",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0),
        template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Bernoulli_FPS.sum_prime_inverses_fraction_coprime",
     "[| finite ?A; !!x. x : ?A ==> prime (?f x); inj_on ?f ?A |]
      ==> coprime (SUM x:?A. prod ?f (?A - {x})) (prod ?f ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty), template_var 1)),
             template_app
              (template_app (template_hole 3, t_empty), template_var 1))
           ))),
    ("Bernoulli_FPS.sum_inverses_conv_fraction",
     "[| !!x. x : ?A ==> ?f x ~= (0::?'b); finite ?A |]
      ==> (SUM x:?A. (1::?'b) / ?f x) =
          (SUM x:?A. prod ?f (?A - {x})) / prod ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 6, t_empty), template_var 1)),
           template_app
            (template_app (template_hole 3, t_empty), template_var 1))))),
    ("Bernoulli_FPS.vonStaudt_Clausen_lemma",
     "[| 0 < ?n; prime ?p |]
      ==> [SUM m<?p.
           (- 1) ^ m * int (?p - 1 choose m) *
           int m ^
           (2 * ?n) = if ?p - 1 dvd 2 * ?n then - 1 else 0] (mod int ?p)",
     template_implication
      ([template_inequation (less_than, template_hole 19, template_var 1),
        template_predicate
         (template_app (template_hole 18, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, t_empty),
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 9, template_var 0),
                           template_hole 8)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_var 1))),
                   template_app (template_hole 13, template_hole 12)),
                 template_hole 0)),
             template_app (template_hole 11, template_var 0))
           )))]
