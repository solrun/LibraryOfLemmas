   [("Normal_Form_Complexity.sf_finite", "finite (sf ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Normal_Form_Complexity.size_gr_0", "0 < size ?\<phi>",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= X\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 0, template_app (template_hole 0, template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "X\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Normal_Form_Complexity.normal_form_length_upper_bound",
     "normal_form_with_flatten_pi_2_length ?\<phi>
      <= normal_form_length_upper_bound ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Normal_Form_Complexity.normal_form_length_upper_bound",
     "normal_form_with_flatten_sigma_2_length ?\<phi>
      <= normal_form_length_upper_bound ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Normal_Form_Complexity.sf_subset_subfrmlsn",
     "sf ?\<phi> <= subfrmlsn ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<phi> and\<^sub>n ?\<psi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<psi> and\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<phi> or\<^sub>n ?\<psi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<psi> or\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<phi> R\<^sub>n ?\<psi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<psi> R\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<phi> M\<^sub>n ?\<psi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<psi> M\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<phi> U\<^sub>n ?\<psi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<psi> U\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<phi> W\<^sub>n ?\<psi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> ~= ?\<psi> W\<^sub>n ?\<phi>",
     template_negation
      (
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> and\<^sub>n ?\<psi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<psi> and\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> or\<^sub>n ?\<psi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<psi> or\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> R\<^sub>n ?\<psi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<psi> R\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> M\<^sub>n ?\<psi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<psi> M\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> U\<^sub>n ?\<psi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<psi> U\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<phi> W\<^sub>n ?\<psi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Normal_Form_Complexity.ltln_not_idempotent",
     "?\<psi> W\<^sub>n ?\<phi> ~= ?\<phi>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Normal_Form_Complexity.flatten_sigma_1_length",
     "size (?\<phi>[?N]\<^sub>\<Sigma>\<^sub>1) <= size ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Normal_Form_Complexity.flatten_pi_1_length",
     "size (?\<phi>[?M]\<^sub>\<Pi>\<^sub>1) <= size ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Normal_Form_Complexity.subfrmlsn_sf_subset",
     "?\<psi> : subfrmlsn ?\<phi> ==> sf ?\<psi> <= sf ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Normal_Form_Complexity.sf_size",
     "?\<psi> : sf ?\<phi> ==> size ?\<psi> <= size ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Normal_Form_Complexity.sf_sf_subset",
     "?\<psi> : sf ?\<phi> ==> sf ?\<psi> <= sf ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Normal_Form_Complexity.flatten_pi_2_length",
     "size ?\<phi>[?N]\<^sub>\<Pi>\<^sub>2 <= 2 ^ (size ?\<phi> + 1)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 1)),
           template_hole 0)))),
    ("Normal_Form_Complexity.flatten_sigma_2_length",
     "size ?\<phi>[?M]\<^sub>\<Sigma>\<^sub>2 <= 2 ^ (size ?\<phi> + 1)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 1)),
           template_hole 0)))),
    ("Normal_Form_Complexity.flatten_sigma_2_card_sf",
     "card (sf ?\<phi>[?M]\<^sub>\<Sigma>\<^sub>2)
      <= 3 * card (sf ?\<phi>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 1))))),
    ("Normal_Form_Complexity.flatten_card_sf",
     "card (UN \<psi>:sf ?\<phi>. sf (\<psi>[?M]\<^sub>\<Sigma>\<^sub>1))
      <= card (sf ?\<phi>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 4, template_app (template_hole 1, template_var 0)))),
    ("Normal_Form_Complexity.flatten_card_sf",
     "card (UN \<psi>:sf ?\<phi>. sf (\<psi>[?M]\<^sub>\<Pi>\<^sub>1))
      <= card (sf ?\<phi>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 4, template_app (template_hole 1, template_var 0)))),
    ("Normal_Form_Complexity.flatten_sigma_1_sf_subset",
     "sf (?\<phi>[?M]\<^sub>\<Sigma>\<^sub>1)
      <= (UN \<phi>:sf ?\<phi>. sf (\<phi>[?M]\<^sub>\<Sigma>\<^sub>1))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 3, template_var 1))))),
    ("Normal_Form_Complexity.flatten_pi_1_sf_subset",
     "sf (?\<phi>[?M]\<^sub>\<Pi>\<^sub>1)
      <= (UN \<phi>:sf ?\<phi>. sf (\<phi>[?M]\<^sub>\<Pi>\<^sub>1))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 3, template_var 1))))),
    ("Normal_Form_Complexity.flatten_sigma_2_sf_subset",
     "sf ?\<phi>[?M]\<^sub>\<Sigma>\<^sub>2
      <= (UN \<psi>:sf ?\<phi>. sf \<psi>[?M]\<^sub>\<Sigma>\<^sub>2)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 3, template_var 1))))),
    ("Normal_Form_Complexity.flatten_card_sf",
     "card
       (sf ?\<phi>[?M]\<^sub>\<Sigma>\<^sub>2 Un
        sf (?\<phi>[?M]\<^sub>\<Pi>\<^sub>1))
      <= 3 * card (sf ?\<phi>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_hole 8,
           template_app (template_hole 6, template_var 1))))),
    ("Normal_Form_Complexity.inequality_1",
     "0 < ?y ==> ?y + 3 <= 2 ^ (?y + 1)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 5,
               template_app (template_hole 1, template_hole 3))),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 0))))),
    ("Normal_Form_Complexity.sum_associative",
     "finite ?X ==> (SUM x:?X. ?f x + ?c) = sum ?f ?X + card ?X * ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, t_empty), template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("Normal_Form_Complexity.sf_set1",
     "sf ?\<phi>[?M]\<^sub>\<Sigma>\<^sub>2 Un
      sf (?\<phi>[?M]\<^sub>\<Pi>\<^sub>1)
      <= (UN \<psi>:sf ?\<phi>.
             sf \<psi>[?M]\<^sub>\<Sigma>\<^sub>2 Un
             sf (\<psi>[?M]\<^sub>\<Pi>\<^sub>1))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 4, template_var 1))))),
    ("Normal_Form_Complexity.sf_subset_insert",
     "[| sf ?\<phi> <= insert ?\<phi> ?X; ?\<psi> : subfrmlsn ?\<phi>;
         ?\<phi> ~= ?\<psi> |]
      ==> sf ?\<psi> <= ?X",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 5, template_var 0),
         template_var 1))),
    ("Normal_Form_Complexity.inequality_2",
     "[| 0 < ?x; 0 < ?y |]
      ==> 2 ^ (?x + 1) + 2 ^ (?y + 1) <= 2 ^ (?x + ?y + 1)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 0))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("Normal_Form_Complexity.normal_form_disjunct_length_upper_bound",
     "[| ?M <= subformulas\<^sub>\<mu> ?\<phi>;
         ?N <= subformulas\<^sub>\<nu> ?\<phi> |]
      ==> normal_form_disjunct_with_flatten_pi_2_length ?\<phi> ?M ?N
          <= 2 ^ (size ?\<phi> + 1) + 2 * (size ?\<phi> + 2)\<^sup>2",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 2, template_var 1)),
                 template_hole 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 2, template_var 1)),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)))),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)))))))),
    ("Normal_Form_Complexity.normal_form_disjunct_length_upper_bound",
     "[| ?M <= subformulas\<^sub>\<mu> ?\<phi>;
         ?N <= subformulas\<^sub>\<nu> ?\<phi> |]
      ==> normal_form_disjunct_with_flatten_sigma_2_length ?\<phi> ?M ?N
          <= 2 ^ (size ?\<phi> + 1) + 2 * (size ?\<phi> + 2)\<^sup>2",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 2, template_var 1)),
                 template_hole 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 2, template_var 1)),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)))),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)))))))),
    ("Normal_Form_Complexity.flatten_card_sf_induct",
     "[| finite ?X; !!x. x : ?X ==> sf x <= ?X |]
      ==> card (UN \<phi>:?X. sf (\<phi>[?N]\<^sub>\<Sigma>\<^sub>1))
          <= card ?X &
          card (UN \<phi>:?X. sf (\<phi>[?M]\<^sub>\<Pi>\<^sub>1))
          <= card ?X &
          card
           (UN \<phi>:?X.
               sf \<phi>[?M]\<^sub>\<Sigma>\<^sub>2 Un
               sf (\<phi>[?M]\<^sub>\<Pi>\<^sub>1))
          <= 3 * card ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, t_empty),
                         template_var 2)))),
                 template_app (template_hole 10, template_var 2))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, t_empty),
                           template_var 2)))),
                   template_app (template_hole 10, template_var 2))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, t_empty),
                         template_var 2)))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0))),
                   template_app (template_hole 10, template_var 2)))))
           )))]
