   [("Hermite.echelon_form_echelon_form_upt_row",
     "echelon_form ?A = echelon_form_upt_row ?A (nrows ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Hermite.upper_triangular_adjugate",
     "upper_triangular ?A ==> upper_triangular (adjugate ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hermite.coeff_dvd_poly", "[:lead_coeff ?a:] dvd ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 0))),
               template_hole 0)),
           template_var 0)
         )),
    ("Hermite.ass_function_Complete_set_non_associates",
     "ass_function ?f ==> Complete_set_non_associates (range ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Hermite.add_left_neutral", "(?a + ?b = ?a) = (?b = (0::?'n))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 1),
       template_equation (template_var 0, template_hole 0))),
    ("Hermite.res_function_Complete_set_residues",
     "res_function ?f ==> Complete_set_residues (%c. range (?f c))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Hermite.exists_k_mod", "EX k. ?a mod ?c = ?a + k * ?c",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Hermite.Hermite_Hermite_upt_row",
     "Hermite ?ass ?res ?A = Hermite_upt_row ?A (nrows ?A) ?ass ?res",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)),
           template_var 2),
         template_var 1))),
    ("Hermite.upper_triangular_inverse",
     "[| upper_triangular ?A; invertible ?A |]
      ==> upper_triangular (matrix_inv ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hermite.ass_function_0",
     "ass_function ?ass ==> (?ass ?x = (0::?'a)) = (?x = (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_bimplication
        (template_equation
          (template_app (template_var 1, template_var 0), template_hole 0),
         template_equation (template_var 0, template_hole 0)))),
    ("Hermite.upper_triangular_mult",
     "[| upper_triangular ?A; upper_triangular ?B |]
      ==> upper_triangular (?A ** ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Hermite.ass_function_0'",
     "ass_function ?ass ==> (?ass ?x div ?x = (0::?'a)) = (?x = (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_var 0),
           template_hole 0),
         template_equation (template_var 0, template_hole 0)))),
    ("Hermite.invertible_Hermite_of_row_i",
     "ass_function ?ass ==>
      EX P. invertible P & Hermite_of_row_i ?ass ?res ?A ?i = P ** ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 3))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Hermite.invertible_Hermite_of_upt_row_i",
     "ass_function ?ass ==>
      EX P. invertible P & Hermite_of_upt_row_i ?A ?k ?ass ?res = P ** ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 3))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Hermite.echelon_form_Hermite_of_upt_row_i",
     "[| echelon_form ?A; ass_function ?ass; res_function ?res |]
      ==> echelon_form (Hermite_of_upt_row_i ?A ?k ?ass ?res)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Hermite.echelon_form_Hermite_of_row",
     "[| ass_function ?ass; res_function ?res; echelon_form ?A |]
      ==> echelon_form (Hermite_of_row_i ?ass ?res ?A ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Hermite.echelon_form_Hermite_of",
     "[| ass_function ?ass; res_function ?res; is_bezout_ext ?bezout |]
      ==> echelon_form (Hermite_of ?A ?ass ?res ?bezout)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Hermite.is_unit_diagonal",
     "[| upper_triangular ?U; is_unit (det ?U) |]
      ==> ALL i. is_unit (?U $ i $ i)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Hermite.Hermite_of_row_preserves_below",
     "?i < ?a ==>
      Hermite_of_row_i ?ass ?res ?A ?i $ ?a $ ?b = ?A $ ?a $ ?b",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5)),
               template_var 4)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 4)),
           template_var 0)))),
    ("Hermite.dvd_minus_eq_mod",
     "[| ?c ~= (0::?'a); ?c dvd ?a - ?b |] ==> ?a mod ?c = ?b mod ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Hermite.eq_mod_dvd_minus",
     "[| ?c ~= (0::?'a); ?a mod ?c = ?b mod ?c |] ==> ?c dvd ?a - ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Hermite.Hermite_of_upt_row_preserves_nonzero_rows_ge",
     "[| ~ is_zero_row ?i ?A; ?k <= mod_type_class.to_nat ?i |]
      ==> ~ is_zero_row ?i (Hermite_of_upt_row_i ?A ?k ?ass ?res)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)
                )
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 4))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0))
               )
           ))),
    ("Hermite.Hermite_of_upt_row_preserves_below",
     "?k <= mod_type_class.to_nat ?a ==>
      Hermite_of_upt_row_i ?A ?k ?ass ?res $ ?a $ ?b = ?A $ ?a $ ?b",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 5),
                     template_var 2),
                   template_var 1)),
               template_var 4)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 4)),
           template_var 0)))),
    ("Hermite.invertible_Hermite_reduce_above",
     "?n <= mod_type_class.to_nat ?i ==>
      EX P. invertible P & Hermite_reduce_above ?A ?n ?i ?j ?res = P ** ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 6, template_var 3))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Hermite.diagonal_in_associates",
     "[| Hermite ?associates ?residues ?H; invertible ?H;
         upper_triangular ?H |]
      ==> ?H $ ?i $ ?i : ?associates",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 0)),
             template_var 3)
           ))),
    ("Hermite.Hermite_reduce_above_preserves",
     "?n <= mod_type_class.to_nat ?a ==>
      Hermite_reduce_above ?A ?n ?i ?j ?res $ ?a $ ?b = ?A $ ?a $ ?b",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 4, template_var 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 6),
                       template_var 3),
                     template_var 2),
                   template_var 1)),
               template_var 5)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 5)),
           template_var 0)))),
    ("Hermite.invertible_Hermite_of",
     "[| ass_function ?ass; is_bezout_ext ?bezout |]
      ==> EX P. invertible P & Hermite_of ?A ?ass ?res ?bezout = P ** ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Hermite.echelon_form_fold_Hermite_of_row_i",
     "[| echelon_form ?A; ass_function ?ass; res_function ?res |]
      ==> echelon_form
           (foldl (Hermite_of_row_i ?ass ?res) ?A
             (map mod_type_class.from_nat [0..<?k]))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)),
                 template_var 3),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))))
           ))),
    ("Hermite.diff_mod_cong_0",
     "[| ?xa mod ?c ~= ?xb mod ?c; ?c dvd ?xa mod ?c - ?xb mod ?c |]
      ==> ?c = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Hermite.Hermite_of_upt_row_preserves_zero_rows_ge",
     "[| is_zero_row ?i ?A; ?k <= nrows ?A;
         ?k <= mod_type_class.to_nat ?i |]
      ==> is_zero_row ?i (Hermite_of_upt_row_i ?A ?k ?ass ?res)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 1, template_var 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Hermite.unit_prod",
     "finite ?S ==>
      is_unit (PROD i:?S. ?U $ i $ i) = (ALL i:?S. is_unit (?U $ i $ i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty), template_var 1)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Hermite.Hermite_Hermite_of",
     "[| ass_function ?ass; res_function ?res; is_bezout_ext ?bezout |]
      ==> Hermite (range ?ass) (%c. range (?res c))
           (Hermite_of ?A ?ass ?res ?bezout)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1)),
               t_empty),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Hermite.cong_diff_mod",
     "[| ?xa ~= ?xb; ?c dvd ?xa - ?xb; ?xa = ?xa mod ?c |]
      ==> ?xb ~= ?xb mod ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_negation
        (
           template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Hermite.diagonal_least_nonzero",
     "[| Hermite ?associates ?residues ?H; invertible ?H;
         upper_triangular ?H |]
      ==> (LEAST n. ?H $ ?i $ n ~= (0::?'a)) = ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty), template_var 0))),
    ("Hermite.in_Ass_not_associated",
     "[| Complete_set_non_associates ?S; ?x : ?S; ?y : ?S; ?x ~= ?y |]
      ==> normalize ?x ~= normalize ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hermite.echelon_form_upt_row_condition1_explicit_neg",
     "[| echelon_form_upt_row ?A ?k; ~ is_zero_row ?i ?A; ?ia < ?i;
         mod_type_class.to_nat ?i < ?k |]
      ==> ~ is_zero_row ?ia ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 3)
                )
            ),
        template_inequation (less_than, template_var 0, template_var 1),
        template_inequation
         (less_than, template_app (template_hole 0, template_var 1),
          template_var 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 3)
               )
           ))),
    ("Hermite.Hermite_of_preserves_zero_rows",
     "[| is_zero_row ?i (echelon_form_of ?A ?bezout); ass_function ?ass;
         res_function ?res; is_bezout_ext ?bezout |]
      ==> is_zero_row ?i (Hermite_of ?A ?ass ?res ?bezout)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Hermite.upper_triangular_mult_diagonal",
     "[| upper_triangular ?A; upper_triangular ?B |]
      ==> (?A ** ?B) $ ?i $ ?i = ?A $ ?i $ ?i * ?B $ ?i $ ?i",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_var 0))))),
    ("Hermite.poly_dvd_antisym2",
     "[| ?p dvd ?q; ?q dvd ?p |]
      ==> ?p div [:lead_coeff ?p:] = ?q div [:lead_coeff ?q:]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_var 1))),
             template_hole 0)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 0))),
             template_hole 0))))),
    ("Hermite.in_Res_not_congruent",
     "[| Complete_set_residues ?g; ?x : ?g ?b; ?y : ?g ?b; ?x ~= ?y |]
      ==> ~ cong ?x ?y ?b",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_var 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_var 3, template_var 1))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Hermite.dvd_cong_not_eq_mod",
     "[| ?xa mod ?c ~= ?xb; ?c dvd ?xa mod ?c - ?xb; ?c ~= (0::?'a) |]
      ==> ?xb mod ?c ~= ?xb",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1),
             template_var 0)
           ))),
    ("Hermite.echelon_form_upt_row_condition1_explicit'",
     "[| echelon_form_upt_row ?A ?k; mod_type_class.to_nat ?i < ?k;
         is_zero_row ?i ?A; ?i <= ?j; mod_type_class.to_nat ?j < ?k |]
      ==> is_zero_row ?j ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 3)
           ))),
    ("Hermite.Hermite_of_upt_row_preserves_zero_rows",
     "[| is_zero_row ?i ?A; echelon_form ?A; ass_function ?ass;
         res_function ?res; ?k <= nrows ?A |]
      ==> is_zero_row ?i (Hermite_of_upt_row_i ?A ?k ?ass ?res)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 4),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Hermite.echelon_form_upt_row_condition1_explicit",
     "[| echelon_form_upt_row ?A ?k; mod_type_class.to_nat ?i < ?k;
         is_zero_row ?i ?A |]
      ==> ~ (EX j>?i. mod_type_class.to_nat j < ?k & ~ is_zero_row j ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 0),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_negation
        (template_predicate (template_app (template_hole 2, t_empty))))),
    ("Hermite.Hermite_of_upt_row_preserves_nonzero_rows",
     "[| ~ is_zero_row ?i ?A; echelon_form ?A; ass_function ?ass;
         res_function ?res; ?k <= nrows ?A |]
      ==> ~ is_zero_row ?i (Hermite_of_upt_row_i ?A ?k ?ass ?res)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)
                )
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0),
                     template_var 2),
                   template_var 1))
               )
           ))),
    ("Hermite.Hermite_of_upt_row_i_Least_ge",
     "[| ~ is_zero_row ?i ?A; ?k <= mod_type_class.to_nat ?i |]
      ==> (LEAST n.
              Hermite_of_upt_row_i ?A ?k ?ass ?res $ ?i $ n ~= (0::?'b)) =
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)
                )
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 7, template_var 4))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Hermite.Least_Hermite_of_row_i",
     "[| ~ is_zero_row ?i ?A; echelon_form ?A; ass_function ?ass |]
      ==> (LEAST n. Hermite_of_row_i ?ass ?res ?A ?i $ ?i $ n ~= (0::?'b)) =
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)
                )
            ),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Hermite.Hermite_of_row_preserves_previous_cols",
     "[| ?b < (LEAST n. ?A $ ?i $ n ~= (0::?'b)); ~ is_zero_row ?i ?A;
         echelon_form ?A |]
      ==> Hermite_of_row_i ?ass ?res ?A ?i $ ?a $ ?b = ?A $ ?a $ ?b",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 8, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 4)
                )
            ),
        template_predicate
         (template_app (template_hole 1, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 4),
                   template_var 3)),
               template_var 0)),
           template_var 5),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 0)),
           template_var 5)))),
    ("Hermite.in_ass_Hermite_of_row",
     "[| ass_function ?ass; res_function ?res; ~ is_zero_row ?i ?A |]
      ==> Hermite_of_row_i ?ass ?res ?A ?i $ ?i $
          (LEAST n. Hermite_of_row_i ?ass ?res ?A ?i $ ?i $ n ~= (0::?'a))
          : range ?ass",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 5, template_var 3),
                             template_var 2),
                           template_var 0),
                         template_var 1)),
                     template_var 1)),
                 template_app (template_hole 4, t_empty))),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0))
           ))),
    ("Hermite.Hermite",
     "[| ass_function ?ass; res_function ?res; is_bezout_ext ?bezout |]
      ==> EX P. invertible P &
                Hermite_of ?A ?ass ?res ?bezout = P ** ?A &
                Hermite (range ?ass) (%c. range (?res c))
                 (Hermite_of ?A ?ass ?res ?bezout)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Hermite.Hermite_unique",
     "[| ?A = ?P ** ?H; ?A = ?Q ** ?K; invertible ?A; invertible ?P;
         invertible ?Q; Hermite ?associates ?residues ?H;
         Hermite ?associates ?residues ?K |]
      ==> ?H = ?K",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 3, template_var 5),
            template_var 4)),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 6)),
        template_predicate (template_app (template_hole 2, template_var 5)),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_equation (template_var 4, template_var 2))),
    ("Hermite.Least_Hermite_of_row_i2",
     "[| ~ is_zero_row ?i ?A; ~ is_zero_row ?k ?A; echelon_form ?A;
         ass_function ?ass |]
      ==> (LEAST n. Hermite_of_row_i ?ass ?res ?A ?k $ ?i $ n ~= (0::?'b)) =
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 3)
                )
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Hermite.in_associates_Hermite_of",
     "[| ass_function ?ass; res_function ?res; is_bezout_ext ?bezout;
         ~ is_zero_row ?i (Hermite_of ?A ?ass ?res ?bezout) |]
      ==> Hermite_of ?A ?ass ?res ?bezout $ ?i $
          (LEAST n. Hermite_of ?A ?ass ?res ?bezout $ ?i $ n ~= (0::?'a))
          : range ?ass",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 0),
                        template_var 4),
                      template_var 3),
                    template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 8, template_var 0),
                             template_var 4),
                           template_var 3),
                         template_var 2)),
                     template_var 1)),
                 template_app (template_hole 4, t_empty))),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_hole 0))
           ))),
    ("Hermite.above_diagonal_in_residues",
     "[| Hermite ?associates ?residues ?H; invertible ?H;
         upper_triangular ?H; ?j < ?i |]
      ==> ?H $ ?j $ (LEAST n. ?H $ ?i $ n ~= (0::?'a))
          : ?residues (?H $ ?i $ (LEAST n. ?H $ ?i $ n ~= (0::?'a)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)),
                 template_app (template_hole 3, t_empty))),
             template_app
              (template_var 3,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0)),
                 template_app (template_hole 3, t_empty))))
           ))),
    ("Hermite.Hermite_of_Least",
     "[| ~ is_zero_row ?i (Hermite_of ?A ?ass ?res ?bezout);
         ass_function ?ass; res_function ?res; is_bezout_ext ?bezout |]
      ==> (LEAST n. Hermite_of ?A ?ass ?res ?bezout $ ?i $ n ~= (0::?'a)) =
          (LEAST n. echelon_form_of ?A ?bezout $ ?i $ n ~= (0::?'a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))
                )
            ),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Hermite.echelon_form_upt_row_condition2_explicit",
     "[| echelon_form_upt_row ?A ?k; ?ia < ?j;
         mod_type_class.to_nat ?j < ?k; ~ is_zero_row ?ia ?A;
         ~ is_zero_row ?j ?A |]
      ==> (LEAST n. ?A $ ?ia $ n ~= (0::?'a))
          < (LEAST n. ?A $ ?j $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 0),
          template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 3)
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Hermite.Hermite_of_upt_row_i_Least",
     "[| ~ is_zero_row ?i ?A; echelon_form ?A; ass_function ?ass;
         res_function ?res; ?k <= nrows ?A |]
      ==> (LEAST n.
              Hermite_of_upt_row_i ?A ?k ?ass ?res $ ?i $ n ~= (0::?'b)) =
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3)
                )
            ),
        template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 7, template_var 3))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Hermite.Hermite_of_upt_row_i_in_range",
     "[| ~ is_zero_row ?i ?A; echelon_form ?A; ass_function ?ass;
         res_function ?res; mod_type_class.to_nat ?i < ?k; ?k <= nrows ?A |]
      ==> Hermite_of_upt_row_i ?A ?k ?ass ?res $ ?i $
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))
          : range ?ass",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 16, template_var 4),
                  template_var 3)
                )
            ),
        template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 11, template_var 4),
          template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 9, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 5, template_var 3),
                             template_var 0),
                           template_var 2),
                         template_var 1)),
                     template_var 4)),
                 template_app (template_hole 4, t_empty))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("Hermite.Hermite_of_row_i_works2",
     "~ is_zero_row ?i ?A ==>
      Hermite_of_row_i ?ass ?res ?A ?i $ ?i $ ?b =
      mult_row ?A ?i
       (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
        ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) $
      ?i $
      ?b",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 1),
                     template_var 3),
                   template_var 4)),
               template_var 4)),
           template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 4),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_var 2,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_var 3),
                               template_var 4)),
                           template_app (template_hole 1, t_empty)))),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 3),
                           template_var 4)),
                       template_app (template_hole 1, t_empty))))),
               template_var 4)),
           template_var 0)))),
    ("Hermite.Hermite_reduce_above_works",
     "[| ?n <= mod_type_class.to_nat ?i; mod_type_class.to_nat ?a < ?n |]
      ==> Hermite_reduce_above ?A ?n ?i ?j ?res $ ?a $ ?b =
          row_add ?A ?a ?i
           ((?res (?A $ ?i $ ?j) (?A $ ?a $ ?j) - ?A $ ?a $ ?j) div
            ?A $ ?i $ ?j) $
          ?a $
          ?b",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 8, template_var 5)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 4),
          template_var 6)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 3),
                         template_var 6),
                       template_var 5),
                     template_var 2),
                   template_var 1)),
               template_var 4)),
           template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 4),
                     template_var 5),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_var 1,
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 4, template_var 3),
                                     template_var 5)),
                                 template_var 2)),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_hole 4, template_var 3),
                                   template_var 4)),
                               template_var 2))),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_hole 4, template_var 3),
                               template_var 4)),
                           template_var 2))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 5)),
                       template_var 2)))),
               template_var 4)),
           template_var 0)))),
    ("Hermite.Hermite_of_row_i_range_res",
     "[| ?j < ?i; ~ is_zero_row ?i ?A; res_function ?res |]
      ==> Hermite_of_row_i ?ass ?res ?A ?i $ ?j $
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))
          : range
             (?res
               (Hermite_of_row_i ?ass ?res ?A ?i $ ?i $
                (LEAST n. ?A $ ?i $ n ~= (0::?'b))))",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)
                )
            ),
        template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 5, template_var 0),
                             template_var 1),
                           template_var 2),
                         template_var 3)),
                     template_var 4)),
                 template_app (template_hole 4, t_empty))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_var 1,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_var 0),
                                 template_var 1),
                               template_var 2),
                             template_var 3)),
                         template_var 3)),
                     template_app (template_hole 4, t_empty)))),
               template_hole 0))
           ))),
    ("Hermite.row_zero_A_imp_row_zero_H",
     "[| echelon_form ?A; ~ is_zero_row ?i ?A; is_zero_row ?j ?A |]
      ==> is_zero_row ?j
           (Hermite_reduce_above
             (mult_row ?A ?i
               (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
             (mod_type_class.to_nat ?i) ?i
             (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 4)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_app (template_hole 7, template_var 4),
                           template_var 3),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_var 1,
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 4, template_var 4),
                                     template_var 3)),
                                 template_app (template_hole 3, t_empty)))),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 4, template_var 4),
                                 template_var 3)),
                             template_app (template_hole 3, t_empty))))),
                     template_app (template_hole 0, template_var 3)),
                   template_var 3),
                 template_app (template_hole 3, t_empty)),
               template_var 0))
           ))),
    ("Hermite.in_residues_Hermite_of",
     "[| ass_function ?ass; res_function ?res; is_bezout_ext ?bezout;
         ~ is_zero_row ?i (Hermite_of ?A ?ass ?res ?bezout); ?j < ?i |]
      ==> Hermite_of ?A ?ass ?res ?bezout $ ?j $
          (LEAST n. Hermite_of ?A ?ass ?res ?bezout $ ?i $ n ~= (0::?'a))
          : range
             (?res
               (Hermite_of ?A ?ass ?res ?bezout $ ?i $
                (LEAST n.
                    Hermite_of ?A ?ass ?res ?bezout $ ?i $ n ~=
                    (0::?'a))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 5)),
        template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_var 1),
                        template_var 5),
                      template_var 4),
                    template_var 3))
                )
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 9, template_var 1),
                             template_var 5),
                           template_var 4),
                         template_var 3)),
                     template_var 0)),
                 template_app (template_hole 4, t_empty))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_var 4,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 9, template_var 1),
                                 template_var 5),
                               template_var 4),
                             template_var 3)),
                         template_var 2)),
                     template_app (template_hole 4, t_empty)))),
               template_hole 0))
           ))),
    ("Hermite.Hermite_of_upt_row_i_in_range_res",
     "[| ~ is_zero_row ?i ?A; echelon_form ?A; ass_function ?ass;
         res_function ?res; mod_type_class.to_nat ?i < ?k; ?k <= nrows ?A;
         ?j < ?i |]
      ==> Hermite_of_upt_row_i ?A ?k ?ass ?res $ ?j $
          (LEAST n. ?A $ ?i $ n ~= (0::?'b))
          : range
             (?res
               (Hermite_of_upt_row_i ?A ?k ?ass ?res $ ?i $
                (LEAST n. ?A $ ?i $ n ~= (0::?'b))))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 5),
                  template_var 4)
                )
            ),
        template_predicate
         (template_app (template_hole 16, template_var 4)),
        template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 12, template_var 5),
          template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 10, template_var 4)),
        template_inequation (less_than, template_var 0, template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 5, template_var 4),
                             template_var 1),
                           template_var 3),
                         template_var 2)),
                     template_var 0)),
                 template_app (template_hole 4, t_empty))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_var 2,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_var 4),
                                 template_var 1),
                               template_var 3),
                             template_var 2)),
                         template_var 5)),
                     template_app (template_hole 4, t_empty)))),
               template_hole 0))
           ))),
    ("Hermite.not_zero_Hermite_reduce_above",
     "[| ~ is_zero_row ?a ?A; ~ is_zero_row ?i ?A; echelon_form ?A;
         ass_function ?ass; ?n <= mod_type_class.to_nat ?i |]
      ==> ~ is_zero_row ?a
             (Hermite_reduce_above
               (mult_row ?A ?i
                 (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                  ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
               ?n ?i (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 4)
                )
            ),
        template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 12, template_var 5),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 6, template_var 4),
                               template_var 3),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_var 2,
                                   template_app
                                    (template_app
(template_hole 4,
 template_app
  (template_app (template_hole 3, template_var 4), template_var 3)),
                                     template_app
(template_hole 2, t_empty)))),
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_app
(template_hole 3, template_var 4),
                                     template_var 3)),
                                 template_app
                                  (template_hole 2, t_empty))))),
                         template_var 1),
                       template_var 3),
                     template_app (template_hole 2, t_empty)),
                   template_var 0))
               )
           ))),
    ("Hermite.Hermite_reduce_above_Least_eq",
     "[| ass_function ?ass; ~ is_zero_row ?i ?A |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a)) =
          (LEAST n.
              Hermite_reduce_above
               (mult_row ?A ?i
                 (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                  ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
               (mod_type_class.to_nat ?i) ?i
               (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res $
              ?i $
              n ~=
              (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app (template_hole 8, t_empty),
         template_app (template_hole 8, t_empty)))),
    ("Hermite.echelon_form_upt_row_intro",
     "[| ALL i.
            mod_type_class.to_nat i < ?k & is_zero_row i ?A -->
            ~ (EX j>i. mod_type_class.to_nat j < ?k & ~ is_zero_row j ?A);
         ALL i j.
            i < j &
            mod_type_class.to_nat j < ?k &
            ~ is_zero_row i ?A & ~ is_zero_row j ?A -->
            (LEAST n. ?A $ i $ n ~= (0::?'b))
            < (LEAST n. ?A $ j $ n ~= (0::?'b)) |]
      ==> echelon_form_upt_row ?A ?k",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Hermite.Hermite_intro",
     "[| Complete_set_non_associates ?associates;
         Complete_set_residues ?residues; echelon_form ?A;
         ALL i.
            ~ is_zero_row i ?A -->
            ?A $ i $ (LEAST n. ?A $ i $ n ~= (0::?'a)) : ?associates;
         ALL i.
            ~ is_zero_row i ?A -->
            (ALL j<i.
                ?A $ j $ (LEAST n. ?A $ i $ n ~= (0::?'a))
                : ?residues (?A $ i $ (LEAST n. ?A $ i $ n ~= (0::?'a)))) |]
      ==> Hermite ?associates ?residues ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Hermite.echelon_form_Hermite_of_condition1",
     "[| echelon_form ?A; ass_function ?ass; ~ is_zero_row ?i ?A;
         is_zero_row ?ia
          (Hermite_reduce_above
            (mult_row ?A ?i
              (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
               ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
            (mod_type_class.to_nat ?i) ?i (LEAST n. ?A $ ?i $ n ~= (0::?'a))
            ?res);
         ?ia < ?j |]
      ==> is_zero_row ?j
           (Hermite_reduce_above
             (mult_row ?A ?i
               (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
             (mod_type_class.to_nat ?i) ?i
             (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_app (template_hole 8, template_var 5),
                            template_var 3),
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_var 4,
                                template_app
                                 (template_app
                                   (template_hole 6,
                                    template_app
                                     (template_app
 (template_hole 5, template_var 5),
template_var 3)),
                                  template_app
                                   (template_hole 4, t_empty)))),
                            template_app
                             (template_app
                               (template_hole 6,
                                template_app
                                 (template_app
                                   (template_hole 5, template_var 5),
                                  template_var 3)),
                              template_app (template_hole 4, t_empty))))),
                      template_app (template_hole 1, template_var 3)),
                    template_var 3),
                  template_app (template_hole 4, t_empty)),
                template_var 1))
            ),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 5),
                           template_var 3),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_var 4,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_app
(template_hole 5, template_var 5),
                                     template_var 3)),
                                 template_app (template_hole 4, t_empty)))),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 5),
                                 template_var 3)),
                             template_app (template_hole 4, t_empty))))),
                     template_app (template_hole 1, template_var 3)),
                   template_var 3),
                 template_app (template_hole 4, t_empty)),
               template_var 1))
           ))),
    ("Hermite.Hermite_reduce_above_Least_eq_le",
     "[| ?i < ?ia;
         ~ is_zero_row ?ia
            (Hermite_reduce_above
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
              (mod_type_class.to_nat ?i) ?i
              (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res) |]
      ==> (LEAST n. ?A $ ?ia $ n ~= (0::?'a)) =
          (LEAST n.
              Hermite_reduce_above
               (mult_row ?A ?i
                 (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                  ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
               (mod_type_class.to_nat ?i) ?i
               (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res $
              ?ia $
              n ~=
              (0::?'a))",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 8, template_var 2),
                                template_var 4),
                              template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_var 1,
                                    template_app
                                     (template_app
 (template_hole 6,
  template_app
   (template_app (template_hole 5, template_var 2), template_var 4)),
template_app (template_hole 4, t_empty)))),
                                template_app
                                 (template_app
                                   (template_hole 6,
                                    template_app
                                     (template_app
 (template_hole 5, template_var 2),
template_var 4)),
                                  template_app
                                   (template_hole 4, t_empty))))),
                          template_app (template_hole 1, template_var 4)),
                        template_var 4),
                      template_app (template_hole 4, t_empty)),
                    template_var 0))
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Hermite.Hermite_reduce_above_Least",
     "[| echelon_form ?A; ass_function ?ass; ~ is_zero_row ?i ?A;
         ~ is_zero_row ?ia ?A;
         ~ is_zero_row ?ia
            (Hermite_reduce_above
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
              (mod_type_class.to_nat ?i) ?i
              (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res) |]
      ==> (LEAST n.
              Hermite_reduce_above
               (mult_row ?A ?i
                 (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                  ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
               (mod_type_class.to_nat ?i) ?i
               (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res $
              ?ia $
              n ~=
              (0::?'a)) =
          (LEAST n. ?A $ ?ia $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 8, template_var 4),
                                template_var 2),
                              template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_var 3,
                                    template_app
                                     (template_app
 (template_hole 6,
  template_app
   (template_app (template_hole 5, template_var 4), template_var 2)),
template_app (template_hole 4, t_empty)))),
                                template_app
                                 (template_app
                                   (template_hole 6,
                                    template_app
                                     (template_app
 (template_hole 5, template_var 4),
template_var 2)),
                                  template_app
                                   (template_hole 4, t_empty))))),
                          template_app (template_hole 1, template_var 2)),
                        template_var 2),
                      template_app (template_hole 4, t_empty)),
                    template_var 0))
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Hermite.Hermite_reduce_above_Least_eq_ge",
     "[| echelon_form ?A; ~ is_zero_row ?i ?A; ~ is_zero_row ?ia ?A;
         ~ is_zero_row ?ia
            (Hermite_reduce_above
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
              (mod_type_class.to_nat ?i) ?i
              (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res);
         ?ia < ?i |]
      ==> (LEAST n.
              Hermite_reduce_above
               (mult_row ?A ?i
                 (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                  ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
               (mod_type_class.to_nat ?i) ?i
               (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res $
              ?ia $
              n ~=
              (0::?'a)) =
          (LEAST n. ?A $ ?ia $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 9, template_var 4),
                                template_var 3),
                              template_app
                               (template_app
                                 (template_hole 8,
                                  template_app
                                   (template_var 1,
                                    template_app
                                     (template_app
 (template_hole 7,
  template_app
   (template_app (template_hole 6, template_var 4), template_var 3)),
template_app (template_hole 5, t_empty)))),
                                template_app
                                 (template_app
                                   (template_hole 7,
                                    template_app
                                     (template_app
 (template_hole 6, template_var 4),
template_var 3)),
                                  template_app
                                   (template_hole 5, t_empty))))),
                          template_app (template_hole 2, template_var 3)),
                        template_var 3),
                      template_app (template_hole 5, t_empty)),
                    template_var 0))
                )
            ),
        template_inequation (less_than, template_var 2, template_var 3)],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("Hermite.echelon_form_Hermite_of_condition2",
     "[| echelon_form ?A; ass_function ?ass; ~ is_zero_row ?i ?A; ?ia < ?j;
         ~ is_zero_row ?ia
            (Hermite_reduce_above
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
              (mod_type_class.to_nat ?i) ?i
              (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res);
         ~ is_zero_row ?j
            (Hermite_reduce_above
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
              (mod_type_class.to_nat ?i) ?i
              (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res) |]
      ==> (LEAST n.
              Hermite_reduce_above
               (mult_row ?A ?i
                 (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                  ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
               (mod_type_class.to_nat ?i) ?i
               (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res $
              ?ia $
              n ~=
              (0::?'a))
          < (LEAST n.
                Hermite_reduce_above
                 (mult_row ?A ?i
                   (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))) div
                    ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'a))))
                 (mod_type_class.to_nat ?i) ?i
                 (LEAST n. ?A $ ?i $ n ~= (0::?'a)) ?res $
                ?j $
                n ~=
                (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 5)),
        template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 5)
                )
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 8, template_var 5),
                                template_var 3),
                              template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_var 4,
                                    template_app
                                     (template_app
 (template_hole 6,
  template_app
   (template_app (template_hole 5, template_var 5), template_var 3)),
template_app (template_hole 4, t_empty)))),
                                template_app
                                 (template_app
                                   (template_hole 6,
                                    template_app
                                     (template_app
 (template_hole 5, template_var 5),
template_var 3)),
                                  template_app
                                   (template_hole 4, t_empty))))),
                          template_app (template_hole 1, template_var 3)),
                        template_var 3),
                      template_app (template_hole 4, t_empty)),
                    template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 8, template_var 5),
                                template_var 3),
                              template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_var 4,
                                    template_app
                                     (template_app
 (template_hole 6,
  template_app
   (template_app (template_hole 5, template_var 5), template_var 3)),
template_app (template_hole 4, t_empty)))),
                                template_app
                                 (template_app
                                   (template_hole 6,
                                    template_app
                                     (template_app
 (template_hole 5, template_var 5),
template_var 3)),
                                  template_app
                                   (template_hole 4, t_empty))))),
                          template_app (template_hole 1, template_var 3)),
                        template_var 3),
                      template_app (template_hole 4, t_empty)),
                    template_var 0))
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Hermite.Hermite_of_row_i_works",
     "[| ?a < ?i; ~ is_zero_row ?i ?A |]
      ==> Hermite_of_row_i ?ass ?res ?A ?i $ ?a $ ?b =
          row_add
           (mult_row ?A ?i
             (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
              ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))))
           ?a ?i
           ((?res
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) $
               ?i $
               (LEAST n. ?A $ ?i $ n ~= (0::?'b)))
              (mult_row ?A ?i
                (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
                 ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) $
               ?a $
               (LEAST n. ?A $ ?i $ n ~= (0::?'b))) -
             mult_row ?A ?i
              (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
               ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) $
             ?a $
             (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
            mult_row ?A ?i
             (?ass (?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) div
              ?A $ ?i $ (LEAST n. ?A $ ?i $ n ~= (0::?'b))) $
            ?i $
            (LEAST n. ?A $ ?i $ n ~= (0::?'b))) $
          ?a $
          ?b",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 1),
                     template_var 3),
                   template_var 4)),
               template_var 5)),
           template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app (template_hole 4, template_var 3),
                             template_var 4),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_var 2,
                                 template_app
                                  (template_app
                                    (template_hole 8,
                                     template_app
(template_app (template_hole 7, template_var 3), template_var 4)),
                                   template_app
                                    (template_hole 2, t_empty)))),
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 7, template_var 3),
                                   template_var 4)),
                               template_app (template_hole 2, t_empty))))),
                       template_var 5),
                     template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_var 1,
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app
                                    (template_app
(template_hole 7,
 template_app
  (template_app
    (template_app (template_hole 4, template_var 3), template_var 4),
   template_app
    (template_app
      (template_hole 3,
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 4)),
           template_app (template_hole 2, t_empty)))),
     template_app
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 3), template_var 4)),
       template_app (template_hole 2, t_empty))))),
                                     template_var 4)),
                                 template_app (template_hole 2, t_empty))),
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 7,
                                     template_app
(template_app
  (template_app (template_hole 4, template_var 3), template_var 4),
 template_app
  (template_app
    (template_hole 3,
     template_app
      (template_var 2,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 3),
             template_var 4)),
         template_app (template_hole 2, t_empty)))),
   template_app
    (template_app
      (template_hole 8,
       template_app
        (template_app (template_hole 7, template_var 3), template_var 4)),
     template_app (template_hole 2, t_empty))))),
                                   template_var 5)),
                               template_app (template_hole 2, t_empty)))),
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_var 3),
                                     template_var 4),
                                   template_app
                                    (template_app
(template_hole 3,
 template_app
  (template_var 2,
   template_app
    (template_app
      (template_hole 8,
       template_app
        (template_app (template_hole 7, template_var 3), template_var 4)),
     template_app (template_hole 2, t_empty)))),
                                     template_app
(template_app
  (template_hole 8,
   template_app
    (template_app (template_hole 7, template_var 3), template_var 4)),
 template_app (template_hole 2, t_empty))))),
                               template_var 5)),
                           template_app (template_hole 2, t_empty)))),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 4, template_var 3),
                                 template_var 4),
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_var 2,
                                     template_app
(template_app
  (template_hole 8,
   template_app
    (template_app (template_hole 7, template_var 3), template_var 4)),
 template_app (template_hole 2, t_empty)))),
                                 template_app
                                  (template_app
                                    (template_hole 8,
                                     template_app
(template_app (template_hole 7, template_var 3), template_var 4)),
                                   template_app
                                    (template_hole 2, t_empty))))),
                           template_var 4)),
                       template_app (template_hole 2, t_empty))))),
               template_var 5)),
           template_var 0))))]
