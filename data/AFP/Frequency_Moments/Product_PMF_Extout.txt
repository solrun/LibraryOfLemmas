Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Product_PMF_ExtTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Product_PMF_ExtTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Frequency_Moments_Preliminary_Results" (required by "Draft.Product_PMF_ExtTemplates" via "Draft.Product_PMF_Ext" via "Draft.Probability_Ext")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.088s elapsed time, 0.311s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.402s cpu time, 0.061s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Product_PMF_ExtTemplates" via "Draft.ExtrEqs")
### theory "Draft.Frequency_Moments_Preliminary_Results"
### 0.671s elapsed time, 1.517s cpu time, 0.145s GC time
Loading theory "Draft.Probability_Ext" (required by "Draft.Product_PMF_ExtTemplates" via "Draft.Product_PMF_Ext")
### theory "HOL-Library.BigO"
### 0.656s elapsed time, 1.383s cpu time, 0.205s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Product_PMF_ExtTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.503s elapsed time, 1.027s cpu time, 0.079s GC time
locale prob_space
  fixes M :: "'a measure"
  assumes "prob_space M"
### theory "Draft.Probability_Ext"
### 0.816s elapsed time, 1.534s cpu time, 0.242s GC time
Loading theory "Draft.Product_PMF_Ext" (required by "Draft.Product_PMF_ExtTemplates")
### theory "Draft.Product_PMF_Ext"
### 0.403s elapsed time, 0.405s cpu time, 0.000s GC time
Loading theory "Draft.Product_PMF_ExtTemplates"
val templateLemmas =
   [("Product_PMF_Ext.restrict_dfl_iter",
     "restrict_dfl (restrict_dfl ?f ?I ?d) ?J ?d =
      restrict_dfl ?f (?I Int ?J) ?d",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_var 1),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Product_PMF_Ext.set_prod_pmf",
     "finite ?I ==>
      set_pmf (prod_pmf ?I ?M) = Pi\<^sub>E ?I (set_pmf o ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Product_PMF_Ext.pmf_prod_pmf",
     "finite ?I ==>
      pmf (prod_pmf ?I ?M) ?x =
      (if ?x : extensional ?I then PROD i:?I. pmf (?M i) (?x i) else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_hole 6),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app (template_hole 2, t_empty), template_var 2)),
           template_hole 0)))),
    ("Product_PMF_Ext.integrable_Pi_pmf_slice",
     "[| finite ?I; ?i : ?I; integrable (measure_pmf (?M ?i)) ?f |]
      ==> integrable (measure_pmf (Pi_pmf ?I ?d ?M)) (%x. ?f (x ?i))",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_var 2, template_var 3))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0),
                   template_var 2))),
             t_empty)
           ))),
    ("Product_PMF_Ext.indep_vars_restrict'",
     "finite ?I ==>
      prob_space.indep_vars (measure_pmf (Pi_pmf ?I ?d ?M)) (%_. discrete)
       (%i \<omega>. restrict_dfl \<omega> (?f -` {i} Int ?I) ?d)
       (?f ` ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_app (template_hole 8, template_var 3),
                         template_var 2),
                       template_var 1))),
                 t_empty),
               t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("Product_PMF_Ext.prob_prod_pmf'",
     "[| finite ?I; ?J <= ?I |]
      ==> measure_pmf.prob (Pi_pmf ?I ?d ?M) (Pi ?J ?A) =
          (PROD i:?J. measure_pmf.prob (?M i) (?A i))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_inequation (less_equals, template_var 3, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 3)))),
    ("Product_PMF_Ext.prob_prod_pmf_slice",
     "[| finite ?I; ?i : ?I |]
      ==> measure_pmf.prob (prod_pmf ?I ?M) {\<omega>. ?P (\<omega> ?i)} =
          measure_pmf.prob (?M ?i) {\<omega>. ?P \<omega>}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_hole 4),
                 template_var 1))),
           template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_var 1, template_var 2))),
           template_app (template_hole 0, t_empty))))),
    ("Product_PMF_Ext.expectation_Pi_pmf_slice",
     "[| finite ?I; ?i : ?I; integrable (measure_pmf (?M ?i)) ?f |]
      ==> measure_pmf.expectation (Pi_pmf ?I ?d ?M) (%x. ?f (x ?i)) =
          measure_pmf.expectation (?M ?i) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_var 2, template_var 3))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_var 2))),
           t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 5,
               template_app (template_var 2, template_var 3))),
           template_var 1)))),
    ("Product_PMF_Ext.Pi_pmf_bind_return",
     "finite ?I ==>
      Pi_pmf ?I ?d (%i. ?M i >>= (%x. return_pmf (?f i x))) =
      Pi_pmf ?I ?d' ?M >>=
      (%x. return_pmf (%i. if i : ?I then ?f i (x i) else ?d))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3),
           t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 0),
               template_var 2)),
           t_empty)))),
    ("Product_PMF_Ext.pi_pmf_decompose",
     "finite ?I ==>
      Pi_pmf ?I ?d ?M =
      map_pmf (%\<omega>. restrict_dfl (%i. \<omega> (?f i) i) ?I ?d)
       (Pi_pmf (?f ` ?I) (%_. ?d) (%j. Pi_pmf (?f -` {j} Int ?I) ?d ?M))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 3)),
               t_empty),
             t_empty))))),
    ("Product_PMF_Ext.expectation_prod_Pi_pmf",
     "[| finite ?I;
         !!i. i : ?I ==> integrable (measure_pmf (?M i)) (?f i) |]
      ==> measure_pmf.expectation (Pi_pmf ?I ?d ?M)
           (%x. PROD i:?I. ?f i (x i)) =
          (PROD i:?I. measure_pmf.expectation (?M i) (?f i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0),
                 template_var 2))),
           t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 3)))),
    ("Product_PMF_Ext.variance_prod_pmf_slice",
     "[| ?i : ?I; finite ?I;
         integrable (measure_pmf (?M ?i))
          (%\<omega>. (?f \<omega>)\<^sup>2) |]
      ==> measure_pmf.expectation (Pi_pmf ?I ?d ?M)
           (%x. (?f (x ?i) -
                 measure_pmf.expectation (Pi_pmf ?I ?d ?M)
                  (%\<omega>. ?f (\<omega> ?i)))\<^sup>2) =
          measure_pmf.expectation (?M ?i)
           (%x. (?f x - measure_pmf.expectation (?M ?i) ?f)\<^sup>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_var 2, template_var 4))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0),
                 template_var 2))),
           t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 10,
               template_app (template_var 2, template_var 4))),
           t_empty)))),
    ("Product_PMF_Ext.indep_vars_restrict_intro'",
     "[| finite ?I;
         !!i \<omega>.
            i : ?J ==>
            ?X' i \<omega> =
            ?X' i (restrict_dfl \<omega> (?f -` {i} Int ?I) ?d);
         ?J = ?f ` ?I;
         !!\<omega> i. i : ?J ==> ?X' i \<omega> : space (?M' i) |]
      ==> prob_space.indep_vars (measure_pmf (Pi_pmf ?I ?d ?p)) ?M' ?X' ?J",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 6)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 6)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 2),
                       template_var 0))),
                 template_var 1),
               t_empty),
             template_var 5)
           )))]:
   (string * thm * template) list
### theory "Draft.Product_PMF_ExtTemplates"
### 1.777s elapsed time, 2.450s cpu time, 0.693s GC time
val it = (): unit
