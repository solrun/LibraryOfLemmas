Loading theory "HOL-Library.Function_Algebras" (required by "Draft.K_SmallestTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Frequency_Moments_Preliminary_Results" (required by "Draft.K_SmallestTemplates" via "Draft.K_Smallest")
Loading theory "Draft.Templates" (required by "Draft.K_SmallestTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.071s elapsed time, 0.257s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.147s elapsed time, 0.412s cpu time, 0.051s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.K_SmallestTemplates" via "Draft.ExtrEqs")
### theory "Draft.Frequency_Moments_Preliminary_Results"
### 0.682s elapsed time, 1.505s cpu time, 0.123s GC time
Loading theory "Draft.K_Smallest" (required by "Draft.K_SmallestTemplates")
### theory "HOL-Library.BigO"
### 0.614s elapsed time, 1.248s cpu time, 0.072s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.K_SmallestTemplates")
### theory "Draft.K_Smallest"
### 0.484s elapsed time, 1.008s cpu time, 0.172s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.542s elapsed time, 0.984s cpu time, 0.172s GC time
Loading theory "Draft.K_SmallestTemplates"
val templateLemmas =
   [("K_Smallest.least_subset", "K_Smallest.least ?k ?S <= ?S",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("K_Smallest.rank_strict_mono",
     "finite ?S ==> strict_mono_on (%x. rank_of x ?S) ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("K_Smallest.card_least",
     "finite ?S ==> card (K_Smallest.least ?k ?S) = min ?k (card ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("K_Smallest.rank_of_image",
     "finite ?S ==> (%x. rank_of x ?S) ` ?S = {0..<card ?S}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("K_Smallest.rank_mono",
     "[| finite ?S; ?x <= ?y |] ==> rank_of ?x ?S <= rank_of ?y ?S",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("K_Smallest.rank_mono_2",
     "[| finite ?S; ?S' <= ?S |] ==> rank_of ?x ?S' <= rank_of ?x ?S",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("K_Smallest.least_insert",
     "finite ?S ==>
      K_Smallest.least ?k (insert ?x (K_Smallest.least ?k ?S)) =
      K_Smallest.least ?k (insert ?x ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("K_Smallest.nth_mset_bound_right",
     "[| ?k < size ?M; ?k < count_le ?x ?M |] ==> nth_mset ?k ?M <= ?x",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("K_Smallest.nth_mset_bound_left_excl",
     "[| ?k < size ?M; count_le ?x ?M <= ?k |] ==> ?x < nth_mset ?k ?M",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_var 2)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("K_Smallest.nth_mset_bound_left",
     "[| ?k < size ?M; count_less ?x ?M <= ?k |] ==> ?x <= nth_mset ?k ?M",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_var 2)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("K_Smallest.least_mono_commute",
     "[| finite ?S; strict_mono_on ?f ?S |]
      ==> ?f ` K_Smallest.least ?k ?S = K_Smallest.least ?k (?f ` ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("K_Smallest.nth_mset_commute_mono",
     "[| mono ?f; ?k < size ?M |]
      ==> ?f (nth_mset ?k ?M) = nth_mset ?k (image_mset ?f ?M)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("K_Smallest.rank_mono_commute",
     "[| finite ?S; ?S <= ?T; strict_mono_on ?f ?T; ?x : ?T |]
      ==> rank_of ?x ?S = rank_of (?f ?x) (?f ` ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("K_Smallest.nth_mset_max",
     "[| ?k < size ?A; !!x. x <= nth_mset ?k ?A ==> count ?A x <= 1 |]
      ==> nth_mset ?k ?A = Max (K_Smallest.least (?k + 1) (set_mset ?A))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 11, template_var 0)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 5)),
             template_app (template_hole 0, template_var 0)))))),
    ("K_Smallest.nth_mset_max",
     "[| ?k < size ?A; !!x. x <= nth_mset ?k ?A ==> count ?A x <= 1 |]
      ==> card (K_Smallest.least (?k + 1) (set_mset ?A)) = ?k + 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 11, template_var 0)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 5)),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 5)))),
    ("K_Smallest.least_eq_iff",
     "[| finite ?B; ?A <= ?B;
         !!x. [| x : ?B; rank_of x ?B < ?k |] ==> x : ?A |]
      ==> K_Smallest.least ?k ?A = K_Smallest.least ?k ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2))))]:
   (string * thm * template) list
### theory "Draft.K_SmallestTemplates"
### 0.939s elapsed time, 1.529s cpu time, 0.611s GC time
val it = (): unit
