Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Landau_Ext" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.Frequency_Moment_k")
Loading theory "Draft.Templates" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Frequency_Moments_Preliminary_Results" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.Frequency_Moment_k" via "Draft.Frequency_Moments")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.107s elapsed time, 0.415s cpu time, 0.051s GC time
instantiation
  rat :: linorder_topology
  open_rat == open :: rat set => bool
### theory "Draft.Landau_Ext"
### 0.146s elapsed time, 0.530s cpu time, 0.051s GC time
### theory "HOL-Library.Function_Algebras"
### 0.156s elapsed time, 0.550s cpu time, 0.051s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.ExtrEqs")
### theory "Draft.Frequency_Moments_Preliminary_Results"
### 0.690s elapsed time, 1.654s cpu time, 0.147s GC time
Loading theory "Draft.Frequency_Moments" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.Frequency_Moment_k")
Loading theory "Draft.Probability_Ext" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.Frequency_Moment_k" via "Draft.Product_PMF_Ext")
### theory "HOL-Library.BigO"
### 0.663s elapsed time, 1.480s cpu time, 0.194s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Frequency_Moment_kTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.586s elapsed time, 1.734s cpu time, 0.162s GC time
### theory "Draft.Frequency_Moments"
### 0.725s elapsed time, 2.130s cpu time, 0.260s GC time
locale prob_space
  fixes M :: "'a measure"
  assumes "prob_space M"
### theory "Draft.Probability_Ext"
### 1.053s elapsed time, 2.819s cpu time, 0.745s GC time
Loading theory "Draft.Product_PMF_Ext" (required by "Draft.Frequency_Moment_kTemplates" via "Draft.Frequency_Moment_k")
### theory "Draft.Product_PMF_Ext"
### 0.466s elapsed time, 0.484s cpu time, 0.037s GC time
Loading theory "Draft.Frequency_Moment_k" (required by "Draft.Frequency_Moment_kTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Frequency_Moment_k"
### 3.877s elapsed time, 4.032s cpu time, 0.287s GC time
Loading theory "Draft.Frequency_Moment_kTemplates"
### theory "Draft.Frequency_Moment_kTemplates"
### 0.249s elapsed time, 0.277s cpu time, 0.050s GC time
*** Clash of specifications for plus:
***   "Functional_Spaces.plus_fun_inst.plus_fun_def" (line 22 of "$AFP/Lp/Functional_Spaces.thy")
***   "Function_Algebras.plus_fun_inst.plus_fun_def" (line 16 of "~~/src/HOL/Library/Function_Algebras.thy")
*** At command "theory" (line 1 of "~/ResearchIdeas/templateAnalysis/Isabelle/GeneratedThys/DebugAFP/Frequency_Moments/Frequency_Moment_kTemplates.thy")
Exception- TOPLEVEL_ERROR raised
