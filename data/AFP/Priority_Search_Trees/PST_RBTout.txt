Loading theory "HOL-Data_Structures.Cmp" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT")
Loading theory "HOL-Data_Structures.Less_False" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Isin2" via "HOL-Data_Structures.Set_Specs" via "HOL-Data_Structures.List_Ins_Del" via "HOL-Data_Structures.Sorted_Less")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "HOL-Data_Structures.Less_False"
### 0.041s elapsed time, 0.201s cpu time, 0.000s GC time
Loading theory "HOL-Data_Structures.Sorted_Less" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Isin2" via "HOL-Data_Structures.Set_Specs" via "HOL-Data_Structures.List_Ins_Del")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Data_Structures.Sorted_Less"
### 0.066s elapsed time, 0.250s cpu time, 0.034s GC time
Loading theory "HOL-Data_Structures.AList_Upd_Del" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Lookup2" via "HOL-Data_Structures.Map_Specs")
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.523s cpu time, 0.034s GC time
Loading theory "HOL-Data_Structures.List_Ins_Del" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Isin2" via "HOL-Data_Structures.Set_Specs")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.315s elapsed time, 1.267s cpu time, 0.113s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Data_Structures.Cmp"
### 0.323s elapsed time, 1.302s cpu time, 0.113s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Data_Structures.List_Ins_Del"
### 0.244s elapsed time, 0.952s cpu time, 0.078s GC time
Loading theory "HOL-Data_Structures.Set_Specs" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Isin2")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
locale Set
  fixes empty :: "'s"
    and insert :: "'a => 's => 's"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
  assumes "Set empty insert delete isin set invar"
locale Set_by_Ordered
  fixes empty :: "'t"
    and insert :: "'a => 't => 't"
    and delete :: "'a => 't => 't"
    and isin :: "'t => 'a => bool"
    and inorder :: "'t => 'a list"
    and inv :: "'t => bool"
  assumes "Set_by_Ordered empty insert delete isin inorder inv"
locale Set2
  fixes empty :: "'s"
    and delete :: "'a => 's => 's"
    and isin :: "'s => 'a => bool"
    and set :: "'s => 'a set"
    and invar :: "'s => bool"
    and insert :: "'a => 's => 's"
    and union :: "'s => 's => 's"
    and inter :: "'s => 's => 's"
    and diff :: "'s => 's => 's"
  assumes "Set2 empty delete isin set invar insert union inter diff"
### theory "HOL-Data_Structures.Set_Specs"
### 0.121s elapsed time, 0.473s cpu time, 0.091s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Data_Structures.AList_Upd_Del"
### 0.417s elapsed time, 1.641s cpu time, 0.169s GC time
Loading theory "HOL-Data_Structures.Map_Specs" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Lookup2")
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.821s cpu time, 0.091s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs")
locale Map
  fixes empty :: "'m"
    and update :: "'a => 'b => 'm => 'm"
    and delete :: "'a => 'm => 'm"
    and lookup :: "'m => 'a => 'b option"
    and invar :: "'m => bool"
  assumes "Map empty update delete lookup invar"
locale Map_by_Ordered
  fixes empty :: "'t"
    and update :: "'a => 'b => 't => 't"
    and delete :: "'a => 't => 't"
    and lookup :: "'t => 'a => 'b option"
    and inorder :: "'t => ('a * 'b) list"
    and inv :: "'t => bool"
  assumes "Map_by_Ordered empty update delete lookup inorder inv"
### theory "HOL-Data_Structures.Map_Specs"
### 0.077s elapsed time, 0.305s cpu time, 0.000s GC time
Loading theory "Draft.Prio_Map_Specs" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "Draft.PST_General")
locale PrioMap
  fixes empty :: "'m"
    and update :: "'a => 'b => 'm => 'm"
    and delete :: "'a => 'm => 'm"
    and invar :: "'m => bool"
    and lookup :: "'m => 'a => 'b option"
    and is_empty :: "'m => bool"
    and getmin :: "'m => 'a * 'b"
  assumes "PrioMap empty update delete invar lookup is_empty getmin"
locale PrioMap_by_Ordered
  fixes empty :: "'t"
    and update :: "'a => 'b => 't => 't"
    and delete :: "'a => 't => 't"
    and inorder :: "'t => ('a * 'b) list"
    and inv :: "'t => bool"
    and lookup :: "'t => 'a => 'b option"
    and is_empty :: "'t => bool"
    and getmin :: "'t => 'a * 'b"
  assumes
    "PrioMap_by_Ordered empty update delete inorder inv lookup is_empty
      getmin"
### theory "Draft.Prio_Map_Specs"
### 0.130s elapsed time, 0.515s cpu time, 0.112s GC time
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.053s elapsed time, 3.578s cpu time, 0.827s GC time
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.979s elapsed time, 3.018s cpu time, 0.736s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.788s elapsed time, 4.070s cpu time, 0.877s GC time
Loading theory "HOL-Data_Structures.Tree2" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT" via "HOL-Data_Structures.Isin2")
Loading theory "Draft.Templates" (required by "Draft.PST_RBTMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.181s cpu time, 0.048s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PST_RBTMoreTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Data_Structures.Tree2"
### 0.214s elapsed time, 0.463s cpu time, 0.048s GC time
Loading theory "Draft.PST_General" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT")
Loading theory "HOL-Data_Structures.Isin2" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT")
Loading theory "HOL-Data_Structures.Lookup2" (required by "Draft.PST_RBTMoreTemplates" via "Draft.PST_RBT")
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### pst_getmin \<langle>\<rangle> = undefined
Found termination order: "{}"
### theory "Draft.PST_General"
### 0.396s elapsed time, 1.559s cpu time, 0.149s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.568s elapsed time, 1.950s cpu time, 0.149s GC time
### theory "HOL-Data_Structures.Isin2"
### 0.432s elapsed time, 1.674s cpu time, 0.149s GC time
### theory "HOL-Data_Structures.Lookup2"
### 0.442s elapsed time, 1.688s cpu time, 0.149s GC time
Loading theory "Draft.PST_RBT" (required by "Draft.PST_RBTMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order:
  "(%p. size (snd p)) <*mlex*> (%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.PST_RBT"
### 4.562s elapsed time, 6.633s cpu time, 2.253s GC time
Loading theory "Draft.PST_RBTMoreTemplates"
val templateLemmas =
   [("PST_RBT.color_paint_Black", "color (paint Black ?t) = Black",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_hole 0)),
    ("PST_RBT.invc2I", "invc ?t ==> invc2 ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("PST_RBT.rbt_is_empty", "rbt_is_empty ?t = (Tree2.inorder ?t = [])",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("PST_RBT.invpst_paint", "invpst (paint ?c ?t) = invpst ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PST_RBT.inorder_paint",
     "Tree2.inorder (paint ?c ?t) = Tree2.inorder ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("PST_RBT.color_mkNode", "color (mkNode ?c ?l ?a ?r) = ?c",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 3)),
    ("PST_RBT.invpst_del", "invpst ?t ==> invpst (del ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc_paint_Black", "invc2 ?t ==> invc (paint Black ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("PST_RBT.paint_invc2", "invc2 ?t ==> invc2 (paint ?c ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invh_paint", "invh ?t ==> invh (paint ?c ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.rbt_delete", "rbt ?t ==> rbt (delete ?k ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.bheight_mkRB", "bheight (mkR ?l ?a ?r) = bheight ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 2))),
    ("PST_RBT.invpst_upd", "invpst ?t ==> invpst (upd ?x ?y ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("PST_RBT.invc_upd", "invc ?t ==> invc2 (upd ?x ?y ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("PST_RBT.invh_upd", "invh ?t ==> invh (upd ?x ?y ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("PST_RBT.rbt_update", "rbt ?t ==> rbt (update ?x ?y ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("PST_RBT.bheight_mkRB", "bheight (mkB ?l ?a ?r) = Suc (bheight ?l)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 2)))),
    ("PST_RBT.inorder_combine",
     "Tree2.inorder (combine ?l ?r) = Tree2.inorder ?l @ Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PST_RBT.invc_mkRB", "invc (mkB ?l ?a ?r) = (invc ?l & invc ?r)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 2)),
         template_app (template_hole 3, template_var 0)))),
    ("PST_RBT.invh_upd", "invh ?t ==> bheight (upd ?x ?y ?t) = bheight ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_app (template_hole 1, template_var 2)))),
    ("PST_RBT.invpst_combine",
     "[| invpst ?l; invpst ?r |] ==> invpst (combine ?l ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PST_RBT.invc_combine",
     "[| invc ?l; invc ?r |] ==> invc2 (combine ?l ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PST_RBT.inorder_baldL",
     "Tree2.inorder (baldL ?l ?a ?r) =
      Tree2.inorder ?l @ ?a # Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("PST_RBT.inorder_baldR",
     "Tree2.inorder (baldR ?l ?a ?r) =
      Tree2.inorder ?l @ ?a # Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("PST_RBT.inorder_baliL",
     "Tree2.inorder (baliL ?l ?a ?r) =
      Tree2.inorder ?l @ ?a # Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("PST_RBT.inorder_baliR",
     "Tree2.inorder (baliR ?l ?a ?r) =
      Tree2.inorder ?l @ ?a # Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("PST_RBT.invpst_baldL",
     "[| invpst ?l; invpst ?r |] ==> invpst (baldL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invpst_baldR",
     "[| invpst ?l; invpst ?r |] ==> invpst (baldR ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invpst_baliL",
     "[| invpst ?l; invpst ?r |] ==> invpst (baliL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invpst_baliR",
     "[| invpst ?l; invpst ?r |] ==> invpst (baliR ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc_baliR",
     "[| invc ?l; invc2 ?r |] ==> invc (baliR ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc2_baldR",
     "[| invc ?l; invc2 ?r |] ==> invc2 (baldR ?l ?x ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc_baliL",
     "[| invc2 ?l; invc ?r |] ==> invc (baliL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc2_baldL",
     "[| invc2 ?l; invc ?r |] ==> invc2 (baldL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.inorder_mkNode",
     "Tree2.inorder (mkNode ?c ?l ?a ?r) =
      Tree2.inorder ?l @ ?a # Tree2.inorder ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("PST_RBT.bheight_paint_Red",
     "color ?t = Black ==> bheight (paint Red ?t) = bheight ?t - 1",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_hole 0)))),
    ("PST_RBT.invc_upd",
     "[| invc ?t; color ?t = Black |] ==> invc (upd ?x ?y ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 2, template_var 2), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("PST_RBT.rbt_getmin_ismin",
     "[| rbt ?t; ?t ~= \<langle>\<rangle> |]
      ==> is_min2 (pst_getmin ?t) (Tree2.set_tree ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("PST_RBT.bheight_baliL",
     "bheight ?l = bheight ?r ==>
      bheight (baliL ?l ?a ?r) = Suc (bheight ?l)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 2))))),
    ("PST_RBT.bheight_baliR",
     "bheight ?l = bheight ?r ==>
      bheight (baliR ?l ?a ?r) = Suc (bheight ?l)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 2))))),
    ("PST_RBT.inorder_del",
     "sorted1 (Tree2.inorder ?t) ==>
      Tree2.inorder (del ?x ?t) =
      AList_Upd_Del.del_list ?x (Tree2.inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 1))))),
    ("PST_RBT.inorder_delete",
     "sorted1 (Tree2.inorder ?t) ==>
      Tree2.inorder (delete ?x ?t) =
      AList_Upd_Del.del_list ?x (Tree2.inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 1))))),
    ("PST_RBT.invh_mkNode",
     "invh (mkNode ?c ?l ?a ?r) =
      (invh ?l & invh ?r & bheight ?l = bheight ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("PST_RBT.inorder_upd",
     "sorted1 (Tree2.inorder ?t) ==>
      Tree2.inorder (upd ?x ?y ?t) = upd_list ?x ?y (Tree2.inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 3, template_var 2))))),
    ("PST_RBT.inorder_update",
     "sorted1 (Tree2.inorder ?t) ==>
      Tree2.inorder (update ?x ?y ?t) = upd_list ?x ?y (Tree2.inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 3, template_var 2))))),
    ("PST_RBT.invc_baldR",
     "[| invc ?a; invc2 ?b; color ?a = Black |] ==> invc (baldR ?a ?x ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 2), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc_baldL",
     "[| invc2 ?l; invc ?r; color ?r = Black |] ==> invc (baldL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invh_baliL",
     "[| invh ?l; invh ?r; bheight ?l = bheight ?r |]
      ==> invh (baliL ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invh_baliR",
     "[| invh ?l; invh ?r; bheight ?l = bheight ?r |]
      ==> invh (baliR ?l ?a ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("PST_RBT.invc_mkRB",
     "invc (mkR ?l ?a ?r) =
      (invc ?l & invc ?r & color ?l = Black & color ?r = Black)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)),
                     template_hole 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0))))
           ))),
    ("PST_RBT.neq_LeafD",
     "?t ~= \<langle>\<rangle> ==>
      EX l x c r. ?t = \<langle>l, (x, c), r\<rangle>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("PST_RBT.invc_combine",
     "[| invc ?l; invc ?r; color ?l = Black; color ?r = Black |]
      ==> invc (combine ?l ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1),
        template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PST_RBT.invh_combine",
     "[| invh ?l; invh ?r; bheight ?l = bheight ?r |]
      ==> invh (combine ?l ?r) & bheight (combine ?l ?r) = bheight ?l",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 1)))
           ))),
    ("PST_RBT.invh_baldR_invc",
     "[| invh ?l; invh ?r; bheight ?l = bheight ?r + 1; invc ?l |]
      ==> invh (baldR ?l ?a ?r) & bheight (baldR ?l ?a ?r) = bheight ?l",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 5, template_var 1)),
            template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0),
                     template_var 1))),
               template_app (template_hole 5, template_var 2)))
           ))),
    ("PST_RBT.invh_baldL_invc",
     "[| invh ?l; invh ?r; bheight ?l + 1 = bheight ?r; invc ?r |]
      ==> invh (baldL ?l ?a ?r) &
          bheight (baldL ?l ?a ?r) = bheight ?l + 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_hole 3),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 2)),
                 template_hole 3)))
           ))),
    ("PST_RBT.invh_baldL_Black",
     "[| invh ?l; invh ?r; bheight ?l + 1 = bheight ?r; color ?r = Black |]
      ==> invh (baldL ?l ?a ?r) & bheight (baldL ?l ?a ?r) = bheight ?r",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2)),
            template_hole 5),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0),
                     template_var 1))),
               template_app (template_hole 6, template_var 1)))
           ))),
    ("PST_RBT.del_invc_invh",
     "[| invh ?t; invc ?t |]
      ==> invh (del ?x ?t) &
          (color ?t = Red &
           bheight (del ?x ?t) = bheight ?t & invc (del ?x ?t) |
           color ?t = Black &
           bheight (del ?x ?t) = bheight ?t - 1 & invc2 (del ?x ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 10, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 1)),
                       template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 10, template_var 0),
                               template_var 1))),
                         template_app (template_hole 4, template_var 1))),
                     template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 10, template_var 0),
                         template_var 1))))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 1)),
                     template_hole 3)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 10, template_var 0),
                             template_var 1))),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 4, template_var 1)),
                         template_hole 1))),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 10, template_var 0),
                       template_var 1))))))
           )))]:
   (string * thm * template) list
### theory "Draft.PST_RBTMoreTemplates"
### 0.330s elapsed time, 0.503s cpu time, 0.000s GC time
val it = (): unit
