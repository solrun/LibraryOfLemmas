   [("Multisets_Extras.size_cartesian_product_empty",
     "size (?A \<times># {#}) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), t_empty)),
       template_hole 0)),
    ("Multisets_Extras.partition_on_mset_empty",
     "partition_on_mset {#} ?P = (?P = {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Multisets_Extras.repeat_mset_size",
     "size (repeat_mset ?n ?A) = ?n * size ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Multisets_Extras.size_big_union_sum",
     "size (\<Sum>\<^sub># ?M) = \<Sum>\<^sub># (image_mset size ?M)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Multisets_Extras.size_cartesian_product_singleton_right",
     "size (?A \<times># {#?b#}) = size ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app (template_hole 0, template_var 1))),
    ("Multisets_Extras.size_cartesian_product_singleton",
     "size ({#?a#} \<times># ?B) = size ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Multisets_Extras.mset_nempty_set_nempty",
     "(?A ~= {#}) = (set_mset ?A ~= {})",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 3)),
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Multisets_Extras.size_cartesian_product",
     "size (?A \<times># ?B) = size ?A * size ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.count_size_set_repr",
     "size {#x :# ?A. x = ?g#} = count ?A ?g",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multisets_Extras.mset_union_size",
     "size (?A \<union># ?B) = size ?A + size (?B - ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Multisets_Extras.set_self_img_compr", "{a |a. a : ?A} = ?A",
     template_equation
      (template_app (template_hole 4, t_empty), template_var 0)),
    ("Multisets_Extras.filter_mset_image_mset",
     "filter_mset ?P (image_mset ?f ?A) =
      image_mset ?f {#x :# ?A. ?P (?f x)#}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Multisets_Extras.mset_union_size_inter",
     "size (?A \<union># ?B) = size ?A + size ?B - size (?A \<inter># ?B)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.mset_set_size_card_count",
     "(SUM x:#?A. x) = (SUM x:set_mset ?A. x * count ?A x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.image_image_mset",
     "image_mset ?f (image_mset ?g ?A) = {#?f (?g x). x :# ?A#}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Multisets_Extras.size_filter_neg",
     "size (filter_mset ?P ?A) = size ?A - size {#a :# ?A. ~ ?P a#}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Multisets_Extras.cart_product_add_1",
     "add_mset ?a ?A \<times># ?B = {#?a#} \<times># ?B + ?A \<times># ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)))),
    ("Multisets_Extras.set_mset_filter",
     "set_mset (image_mset ?f ?A) = {?f a |a. a :# ?A}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Multisets_Extras.mset_inter_filter",
     "{#a :# ?A. ?P a & ?Q a#} =
      filter_mset ?P ?A \<inter># filter_mset ?Q ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Multisets_Extras.mset_bunion_filter",
     "{#a :# ?A. ?P a | ?Q a#} =
      filter_mset ?P ?A \<union># filter_mset ?Q ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Multisets_Extras.multiset_add_filter_size",
     "size (filter_mset ?P (?A1.0 + ?A2.0)) =
      size (filter_mset ?P ?A1.0) + size (filter_mset ?P ?A2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Multisets_Extras.sum_mset_add_diff_int",
     "(SUM x:#?A. ?f x - ?g x) =
      \<Sum>\<^sub># (image_mset ?f ?A) -
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Multisets_Extras.set_filter_diff",
     "{a: ?A. ?P a} - {?x} = {a: ?A - {?x}. ?P a}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app (template_hole 4, t_empty))),
    ("Multisets_Extras.cart_product_singleton_right",
     "{#m :# ?N \<times># {#?b#}. fst m : snd m#} =
      {#n :# ?N. n : ?b#} \<times># {#?b#}",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         t_empty))),
    ("Multisets_Extras.cart_product_singleton_left",
     "{#m :# {#?a#} \<times># ?N. fst m : snd m#} =
      {#?a#} \<times># filter_mset ((:) ?a) ?N",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         t_empty))),
    ("Multisets_Extras.filter_filter_mset_ss_member",
     "filter_mset ((<=) {?x, ?y}) ?A =
      filter_mset ((<=) {?x, ?y}) (filter_mset ((:) ?x) ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)))),
    ("Multisets_Extras.set_filter_diff_card",
     "card ({a: ?A. ?P a} - {?x}) = card {a: ?A - {?x}. ?P a}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_hole 6, template_app (template_hole 4, t_empty)))),
    ("Multisets_Extras.set_break_down_left",
     "{#m :# ?M \<times># ?N. fst m : snd m#} =
      (SUM m:#?M. {#m#} \<times># filter_mset ((:) m) ?N)",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 1)))),
    ("Multisets_Extras.set_break_down_right",
     "{#x :# ?M \<times># ?N. fst x : snd x#} =
      (SUM n:#?N. {#m :# ?M. m : n#} \<times># {#n#})",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Multisets_Extras.cart_product_add_1_filter2",
     "filter_mset ?P (?M \<times># add_mset ?b ?N) =
      filter_mset ?P (?M \<times># ?N) +
      filter_mset ?P (?M \<times># {#?b#})",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 3, template_var 2), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 2), t_empty))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty))))),
    ("Multisets_Extras.cart_product_add_1_filter",
     "filter_mset ?P (add_mset ?a ?M \<times># ?N) =
      filter_mset ?P (?M \<times># ?N) +
      filter_mset ?P ({#?a#} \<times># ?N)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 1), t_empty))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             t_empty))))),
    ("Multisets_Extras.mset_size_partition_dep",
     "size {#a :# ?A. ?P a | ?Q a#} =
      size (filter_mset ?P ?A) + size (filter_mset ?Q ?A) -
      size {#a :# ?A. ?P a & ?Q a#}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, t_empty),
                   template_var 0))),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_var 0)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Multisets_Extras.cart_product_add_1_filter_eq_mirror",
     "{#m :# ?M \<times># add_mset ?b ?N. fst m : snd m#} =
      {#m :# ?M \<times># ?N. fst m : snd m#} +
      {#n :# ?M. n : ?b#} \<times># {#?b#}",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 4, template_var 2), t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_var 2), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2)),
           t_empty)))),
    ("Multisets_Extras.cart_product_add_1_filter_eq",
     "{#m :# add_mset ?a ?M \<times># ?N. fst m : snd m#} =
      {#m :# ?M \<times># ?N. fst m : snd m#} +
      {#?a#} \<times># filter_mset ((:) ?a) ?N",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_var 1), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 1)),
           t_empty))))]
