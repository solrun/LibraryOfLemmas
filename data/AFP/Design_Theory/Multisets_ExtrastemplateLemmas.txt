   [("Multisets_Extras.size_cartesian_product_empty",
     "size (?A \<times># {#}) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), t_empty)),
       template_hole 0)),
    ("Multisets_Extras.partition_on_mset_empty",
     "partition_on_mset {#} ?P = (?P = {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Multisets_Extras.partition_on_mset_singletons",
     "partition_on_mset ?A {#{#x#}. x :# ?A#}",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))
         )),
    ("Multisets_Extras.repeat_mset_size",
     "size (repeat_mset ?n ?A) = ?n * size ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Multisets_Extras.partition_on_msetD1",
     "partition_on_mset ?A ?P ==> \<Sum>\<^sub># ?P = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multisets_Extras.size_big_union_sum",
     "size (\<Sum>\<^sub># ?M) = \<Sum>\<^sub># (image_mset size ?M)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Multisets_Extras.size_cartesian_product_singleton_right",
     "size (?A \<times># {#?b#}) = size ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app (template_hole 0, template_var 1))),
    ("Multisets_Extras.size_cartesian_product_singleton",
     "size ({#?a#} \<times># ?B) = size ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Multisets_Extras.mset_nempty_set_nempty",
     "(?A ~= {#}) = (set_mset ?A ~= {})",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 3)),
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Multisets_Extras.partition_on_msetD2",
     "partition_on_mset ?A ?P ==> {#} ~:# ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Multisets_Extras.partition_on_mset_card",
     "partition_on_mset ?A ?P ==> size ?P <= size ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Multisets_Extras.size_cartesian_product",
     "size (?A \<times># ?B) = size ?A * size ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.count_size_set_repr",
     "size {#x :# ?A. x = ?g#} = count ?A ?g",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multisets_Extras.partition_on_mset_all",
     "?A ~= {#} ==> partition_on_mset ?A {#?A#}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Multisets_Extras.mset_size_ne0_set_card",
     "0 < size ?A ==> 0 < card (set_mset ?A)",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than, template_hole 3,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Multisets_Extras.partition_on_mset_split",
     "partition_on_mset ?A (?P + ?Q) ==>
      partition_on_mset (\<Sum>\<^sub># ?P) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Multisets_Extras.set_count_size_min",
     "?n <= count ?A ?a ==> ?n <= size ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app (template_hole 0, template_var 1)))),
    ("Multisets_Extras.partition_on_mset_distinct",
     "[| partition_on_mset ?A ?P; distinct_mset ?A |] ==> distinct_mset ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.mset_union_size",
     "size (?A \<union># ?B) = size ?A + size (?B - ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Multisets_Extras.elem_in_repeat_in_original",
     "?a :# repeat_mset ?n ?A ==> ?a :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Multisets_Extras.set_self_img_compr", "{a |a. a : ?A} = ?A",
     template_equation
      (template_app (template_hole 4, t_empty), template_var 0)),
    ("Multisets_Extras.cart_prod_distinct_mset",
     "[| distinct_mset ?A; distinct_mset ?B |]
      ==> distinct_mset (?A \<times># ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Multisets_Extras.partition_on_mset_eq_imp_eq_carrier",
     "[| partition_on_mset ?A ?P; partition_on_mset ?B ?P |] ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Multisets_Extras.filter_mset_image_mset",
     "filter_mset ?P (image_mset ?f ?A) =
      image_mset ?f {#x :# ?A. ?P (?f x)#}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Multisets_Extras.partition_on_mset_sum_size_eq",
     "partition_on_mset ?A ?P ==>
      \<Sum>\<^sub># (image_mset size ?P) = size ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Multisets_Extras.partition_on_mset_add_single",
     "partition_on_mset ?A ?P ==>
      partition_on_mset (add_mset ?a ?A) (add_mset {#?a#} ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Multisets_Extras.partition_on_mset_subsets",
     "[| partition_on_mset ?A ?P; ?x :# ?P |] ==> ?x <=# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Multisets_Extras.mset_union_size_inter",
     "size (?A \<union># ?B) = size ?A + size ?B - size (?A \<inter># ?B)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.mset_set_size_card_count",
     "(SUM x:#?A. x) = (SUM x:set_mset ?A. x * count ?A x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.card_inter_lt_single",
     "[| finite ?A; finite ?B |] ==> card (?A Int ?B) <= card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Multisets_Extras.card_subset_not_gt_card",
     "[| finite ?A; card ?A < card ?ps |] ==> ~ ?ps <= ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_inequation (less_equals, template_var 0, template_var 1)
           ))),
    ("Multisets_Extras.partition_on_mset_not_empty",
     "[| ?A ~= {#}; partition_on_mset ?A ?P |] ==> ?P ~= {#}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Multisets_Extras.image_image_mset",
     "image_mset ?f (image_mset ?g ?A) = {#?f (?g x). x :# ?A#}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Multisets_Extras.partition_on_set_mset",
     "[| partition_on_mset ?A ?P; distinct_mset ?A |]
      ==> partition_on (set_mset ?A) (set_mset (image_mset set_mset ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0)))
           ))),
    ("Multisets_Extras.partition_on_msetI",
     "[| \<Sum>\<^sub># ?P = ?A; {#} ~:# ?P |] ==> partition_on_mset ?A ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_var 0),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Multisets_Extras.size_filter_neg",
     "size (filter_mset ?P ?A) = size ?A - size {#a :# ?A. ~ ?P a#}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_mset_combine",
     "[| partition_on_mset ?A ?P; partition_on_mset ?B ?Q |]
      ==> partition_on_mset (?A + ?B) (?P + ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multisets_Extras.repeat_mset_not_empty",
     "[| 0 < ?n; ?A ~= {#} |] ==> repeat_mset ?n ?A ~= {#}",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Multisets_Extras.elem_in_original_in_repeat",
     "[| 0 < ?n; ?a :# ?A |] ==> ?a :# repeat_mset ?n ?A",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Multisets_Extras.elem_exists_non_empty_set",
     "[| 0 < card ?A; !!x. x : ?A ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.cart_product_add_1",
     "add_mset ?a ?A \<times># ?B = {#?a#} \<times># ?B + ?A \<times># ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)))),
    ("Multisets_Extras.mset_exists_imply",
     "?x :# image_mset ?f ?A ==> \<exists>y:#?A. ?x = ?f y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("Multisets_Extras.partition_on_mset_set",
     "[| finite ?A; partition_on ?A ?P |]
      ==> partition_on_mset (mset_set ?A) (mset_set (mset_set ` ?P))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 0)))
           ))),
    ("Multisets_Extras.partition_on_mset_diff",
     "[| partition_on_mset ?A ?P; ?Q <=# ?P |]
      ==> partition_on_mset (?A - \<Sum>\<^sub># ?Q) (?P - ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Multisets_Extras.card_Pow_filter_one",
     "finite ?A ==> card {x: Pow ?A. card x = 1} = card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 1, template_var 0)))),
    ("Multisets_Extras.filter_filter_mset_cond_simp",
     "(!!a. ?P a ==> ?Q a) ==>
      filter_mset ?P ?A = filter_mset ?P (filter_mset ?Q ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.multiset_image_do_nothing",
     "(!!x. x :# ?A ==> ?f x = x) ==> image_mset ?f ?A = ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Multisets_Extras.set_mset_filter",
     "set_mset (image_mset ?f ?A) = {?f a |a. a :# ?A}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Multisets_Extras.mset_inter_filter",
     "{#a :# ?A. ?P a & ?Q a#} =
      filter_mset ?P ?A \<inter># filter_mset ?Q ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Multisets_Extras.mset_bunion_filter",
     "{#a :# ?A. ?P a | ?Q a#} =
      filter_mset ?P ?A \<union># filter_mset ?Q ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Multisets_Extras.size_Union_distinct_cart_prod",
     "distinct_mset ?M ==>
      size (SUM p:#?M. {#p#} \<times># ?B) = size ?M * size ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty), template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Multisets_Extras.card_size_filter_eq",
     "finite ?A ==>
      card {a: ?A. ?P a} = size (filter_mset ?P (mset_set ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("Multisets_Extras.cart_product_single_intersect",
     "?x1.0 ~= ?x2.0 ==>
      {#?x1.0#} \<times># ?A \<inter># {#?x2.0#} \<times># ?B = {#}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1)),
               t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             t_empty)),
         template_hole 0))),
    ("Multisets_Extras.partition_on_mset_elems",
     "[| partition_on_mset ?A ?P; ?p1.0 :# ?P; ?x :# ?p1.0 |] ==> ?x :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Multisets_Extras.multiset_add_filter_size",
     "size (filter_mset ?P (?A1.0 + ?A2.0)) =
      size (filter_mset ?P ?A1.0) + size (filter_mset ?P ?A2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_mset_count_eq",
     "[| partition_on_mset ?A ?P; ?a :# ?A |]
      ==> (SUM x:#?P. count x ?a) = count ?A ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Multisets_Extras.sum_mset_add_diff_int",
     "(SUM x:#?A. ?f x - ?g x) =
      \<Sum>\<^sub># (image_mset ?f ?A) -
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_msetI2",
     "[| \<Sum>\<^sub># ?P = ?A; !!p. p :# ?P ==> p ~= {#} |]
      ==> partition_on_mset ?A ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1), template_var 0),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Multisets_Extras.partition_on_mset_add_part",
     "[| partition_on_mset ?A ?P; ?X ~= {#}; ?A + ?X = ?A' |]
      ==> partition_on_mset ?A' (add_mset ?X ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Multisets_Extras.set_filter_diff",
     "{a: ?A. ?P a} - {?x} = {a: ?A - {?x}. ?P a}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app (template_hole 4, t_empty))),
    ("Multisets_Extras.cart_product_singleton_right",
     "{#m :# ?N \<times># {#?b#}. fst m : snd m#} =
      {#n :# ?N. n : ?b#} \<times># {#?b#}",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         t_empty))),
    ("Multisets_Extras.cart_product_singleton_left",
     "{#m :# {#?a#} \<times># ?N. fst m : snd m#} =
      {#?a#} \<times># filter_mset ((:) ?a) ?N",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         t_empty))),
    ("Multisets_Extras.mset_big_union_obtain",
     "[| ?x :# \<Sum>\<^sub># ?A; !!a. [| a :# ?A; ?x :# a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.filter_filter_mset_ss_member",
     "filter_mset ((<=) {?x, ?y}) ?A =
      filter_mset ((<=) {?x, ?y}) (filter_mset ((:) ?x) ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)))),
    ("Multisets_Extras.set_filter_diff_card",
     "card ({a: ?A. ?P a} - {?x}) = card {a: ?A - {?x}. ?P a}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_hole 6, template_app (template_hole 4, t_empty)))),
    ("Multisets_Extras.set_break_down_left",
     "{#m :# ?M \<times># ?N. fst m : snd m#} =
      (SUM m:#?M. {#m#} \<times># filter_mset ((:) m) ?N)",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 1)))),
    ("Multisets_Extras.set_break_down_right",
     "{#x :# ?M \<times># ?N. fst x : snd x#} =
      (SUM n:#?N. {#m :# ?M. m : n#} \<times># {#n#})",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Multisets_Extras.set_card_diff_ge_zero",
     "[| finite ?A; finite ?B; ?A ~= ?B; card ?A = card ?B |]
      ==> 0 < card (?A - ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.size_add_elem_step_eq",
     "size (?A \<times># ?B) = size ?A * size ?B ==>
      size (add_mset ?x ?A \<times># ?B) = size (add_mset ?x ?A) * size ?B",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2)),
            template_app (template_hole 1, template_var 1)))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2))),
           template_app (template_hole 1, template_var 1))))),
    ("Multisets_Extras.sum_over_fun_eq",
     "(!!x. x :# ?A ==> ?f x = ?g x) ==>
      \<Sum>\<^sub># (image_mset ?f ?A) =
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Multisets_Extras.size_multiset_set_mset_const_count",
     "[| card (set_mset ?A) = ?ca; !!p. p :# ?A ==> count ?A p = ?ca2.0 |]
      ==> size ?A = ?ca * ?ca2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 2)),
          template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multisets_Extras.sigma_over_set_partition_count",
     "[| finite ?A; partition_on ?A ?P;
         ?x :# \<Sum>\<^sub># (mset_set (mset_set ` ?P)) |]
      ==> count (\<Sum>\<^sub># (mset_set (mset_set ` ?P))) ?x = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 1)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1)))),
           template_var 0),
         template_hole 0))),
    ("Multisets_Extras.partition_on_mset_elem_exists_part",
     "[| partition_on_mset ?A ?P; ?x :# ?A;
         !!p. [| p :# ?P; ?x :# p |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.partition_on_mset_add",
     "[| partition_on_mset ?A ?P; ?X :# ?P; add_mset ?a ?X = ?X' |]
      ==> partition_on_mset (add_mset ?a ?A)
           (add_mset ?X' (remove1_mset ?X ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 0))))
           ))),
    ("Multisets_Extras.bij_betw_inter_subsets",
     "[| bij_betw ?f ?A ?B; ?a1.0 <= ?A; ?a2.0 <= ?A |]
      ==> ?f ` (?a1.0 Int ?a2.0) = ?f ` ?a1.0 Int ?f ` ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 0))))),
    ("Multisets_Extras.repeat_mset_subset_in",
     "[| !!a. a :# ?A ==> a <= ?B; ?X :# repeat_mset ?n ?A; ?x : ?X |]
      ==> ?x : ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Multisets_Extras.set_diff_non_empty_not_subset",
     "[| ?A <= ?B - ?C; ?C ~= {}; ?A ~= {}; ?B ~= {} |] ==> ~ ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 0)),
        template_negation
         (template_equation (template_var 2, template_hole 0)),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_negation
        (
           template_inequation (less_equals, template_var 2, template_var 0)
           ))),
    ("Multisets_Extras.cart_product_add_1_filter2",
     "filter_mset ?P (?M \<times># add_mset ?b ?N) =
      filter_mset ?P (?M \<times># ?N) +
      filter_mset ?P (?M \<times># {#?b#})",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 3, template_var 2), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 2), t_empty))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty))))),
    ("Multisets_Extras.cart_product_add_1_filter",
     "filter_mset ?P (add_mset ?a ?M \<times># ?N) =
      filter_mset ?P (?M \<times># ?N) +
      filter_mset ?P ({#?a#} \<times># ?N)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 1), t_empty))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             t_empty))))),
    ("Multisets_Extras.partition_on_mset_distinct_disjoint",
     "[| partition_on_mset ?A ?P; distinct_mset ?A; ?p1.0 :# ?P;
         ?p2.0 :# remove1_mset ?p1.0 ?P |]
      ==> ?p1.0 \<inter># ?p2.0 = {#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multisets_Extras.size_multiset_int_count",
     "[| int (card (set_mset ?A)) = ?ca;
         !!p. p :# ?A ==> int (count ?A p) = ?ca2.0 |]
      ==> int (size ?A) = ?ca * ?ca2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2))),
          template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multisets_Extras.partition_on_mset_distinct_inter",
     "[| partition_on_mset ?A ?P; distinct_mset ?A; ?p1.0 :# ?P;
         ?p2.0 :# ?P; ?p1.0 ~= ?p2.0 |]
      ==> ?p1.0 \<inter># ?p2.0 = {#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multisets_Extras.mset_size_partition_dep",
     "size {#a :# ?A. ?P a | ?Q a#} =
      size (filter_mset ?P ?A) + size (filter_mset ?Q ?A) -
      size {#a :# ?A. ?P a & ?Q a#}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, t_empty),
                   template_var 0))),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_var 0)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_remove_pt",
     "partition_on ?A ?G ==>
      partition_on (?A - {?x}) {g - {?x} |g. g : ?G & g ~= {?x}}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6))),
             template_app (template_hole 5, t_empty))
           ))),
    ("Multisets_Extras.obtain_subset_with_card_int_n",
     "[| ?n <= int (card ?S); 0 <= ?n;
         !!T. [| T <= ?S; int (card T) = ?n; finite T |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1))),
        template_inequation (less_equals, template_hole 4, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.size_union_distinct_cart_prod",
     "?x1.0 ~= ?x2.0 ==>
      size ({#?x1.0#} \<times># ?A \<union># {#?x2.0#} \<times># ?B) =
      size ({#?x1.0#} \<times># ?A) + size ({#?x2.0#} \<times># ?B)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_hole 1)),
                 t_empty)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               t_empty))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_hole 1)),
                 t_empty))),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               t_empty)))))),
    ("Multisets_Extras.partition_on_set_mset_distinct",
     "[| partition_on_mset ?A ?P; distinct_mset ?A;
         ?p :# image_mset set_mset ?P; ?p' :# image_mset set_mset ?P;
         ?p ~= ?p' |]
      ==> ?p Int ?p' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multisets_Extras.cart_product_add_1_filter_eq_mirror",
     "{#m :# ?M \<times># add_mset ?b ?N. fst m : snd m#} =
      {#m :# ?M \<times># ?N. fst m : snd m#} +
      {#n :# ?M. n : ?b#} \<times># {#?b#}",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 4, template_var 2), t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_var 2), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2)),
           t_empty)))),
    ("Multisets_Extras.cart_product_add_1_filter_eq",
     "{#m :# add_mset ?a ?M \<times># ?N. fst m : snd m#} =
      {#m :# ?M \<times># ?N. fst m : snd m#} +
      {#?a#} \<times># filter_mset ((:) ?a) ?N",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_var 1), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 1)),
           t_empty)))),
    ("Multisets_Extras.sum_mset_add_diff_nat",
     "(!!x. x :# ?A ==> ?g x <= ?f x) ==>
      (SUM x:#?A. ?f x - ?g x) =
      \<Sum>\<^sub># (image_mset ?f ?A) -
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 2))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_var 2)))))),
    ("Multisets_Extras.cart_prod_singleton_right_gen",
     "(!!x. x :# ?A \<times># {#?b#} ==> ?P x = ?Q (fst x)) ==>
      filter_mset ?P (?A \<times># {#?b#}) =
      filter_mset ?Q ?A \<times># {#?b#}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 7, template_var 3), t_empty)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, t_empty), template_var 3)),
           t_empty)))),
    ("Multisets_Extras.cart_prod_singleton_left_gen",
     "(!!x. x :# {#?a#} \<times># ?B ==> ?P x = ?Q (snd x)) ==>
      filter_mset ?P ({#?a#} \<times># ?B) =
      {#?a#} \<times># filter_mset ?Q ?B",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_hole 5)),
             t_empty)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_hole 5)),
           t_empty)))),
    ("Multisets_Extras.partition_on_cart_prod",
     "[| 0 < card ?I; ?A ~= {}; ?G ~= {}; partition_on ?A ?G |]
      ==> partition_on (?A \<times> ?I) {g \<times> ?I |g. g : ?G}",
     template_implication
      ([template_inequation
         (less_than, template_hole 14,
          template_app (template_hole 13, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_negation
         (template_equation (template_var 0, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1), t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Multisets_Extras.size_Union_distinct_cart_prod_filter",
     "[| distinct_mset ?M;
         !!p. p :# ?M ==> size (filter_mset (?P p) ?B) = ?c |]
      ==> size (SUM p:#?M. {#p#} \<times># filter_mset (?P p) ?B) =
          size ?M * ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 3))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0)))),
    ("Multisets_Extras.size_Union_distinct_cart_prod_filter2",
     "[| distinct_mset ?V; !!b. b :# ?B ==> size {#v :# ?V. ?P v b#} = ?c |]
      ==> size (SUM b:#?B. {#v :# ?V. ?P v b#} \<times># {#b#}) =
          size ?B * ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Multisets_Extras.transform_filter_img_empty_rm",
     "(!!g. g : ?G ==> g ~= {}) ==>
      {g - {?x} |g. g : ?G & g ~= {?x}} = {g - {?x} |g. g : ?G} - {{}}",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 7, t_empty)),
           template_app
            (template_app (template_hole 1, template_hole 9),
             template_hole 0)))))]
