Loading theory "HOL-Library.FuncSet" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras" via "Card_Partitions.Set_Partition" via "HOL-Library.Disjoint_Sets")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.510s cpu time, 0.042s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.316s elapsed time, 1.277s cpu time, 0.121s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.221s elapsed time, 0.874s cpu time, 0.078s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras" via "Nested_Multisets_Ordinals.Multiset_More")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.471s elapsed time, 1.885s cpu time, 0.207s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras")
### theory "HOL-Library.FuncSet"
### 0.470s elapsed time, 1.873s cpu time, 0.207s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras" via "Card_Partitions.Set_Partition")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  prefixes :: "'a list => 'a list list"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "HOL-Library.Disjoint_Sets"
### 0.262s elapsed time, 1.032s cpu time, 0.162s GC time
Loading theory "Card_Partitions.Set_Partition" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Card_Partitions.Set_Partition"
### 0.305s elapsed time, 1.069s cpu time, 0.553s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### theory "HOL-Library.Stream"
### 1.009s elapsed time, 3.829s cpu time, 0.963s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs")
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Sublist"
### 1.513s elapsed time, 5.816s cpu time, 1.283s GC time
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.109s elapsed time, 3.921s cpu time, 1.288s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.138s elapsed time, 6.642s cpu time, 1.723s GC time
Loading theory "Draft.Templates" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Multisets_ExtrasMoreTemplates")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.546s elapsed time, 1.150s cpu time, 0.131s GC time
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.573s elapsed time, 10.290s cpu time, 2.650s GC time
Loading theory "HOL-Library.Multiset_Order" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras" via "Nested_Multisets_Ordinals.Multiset_More")
class preorder = ord +
  assumes "less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
    and "order_refl": "!!x. x <= x"
    and "order_trans": "!!x y z. [| x <= y; y <= z |] ==> x <= z"
instantiation
  multiset :: (preorder) ordered_ab_semigroup_monoid_add_imp_le
instantiation
  multiset :: (wellorder) wellorder
instantiation
  multiset :: (preorder) order_bot
  bot_multiset == bot :: 'a multiset
instantiation
  multiset :: (linorder) distrib_lattice
  inf_multiset == inf :: 'a multiset => 'a multiset => 'a multiset
  sup_multiset == sup :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Multiset_Order"
### 0.164s elapsed time, 0.226s cpu time, 0.000s GC time
Loading theory "Nested_Multisets_Ordinals.Multiset_More" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras")
### theory "Nested_Multisets_Ordinals.Multiset_More"
### 0.886s elapsed time, 1.803s cpu time, 1.198s GC time
Loading theory "Nested_Multisets_Ordinals.Duplicate_Free_Multiset" (required by "Draft.Multisets_ExtrasMoreTemplates" via "Draft.Multisets_Extras")
### theory "Nested_Multisets_Ordinals.Duplicate_Free_Multiset"
### 0.091s elapsed time, 0.091s cpu time, 0.000s GC time
Loading theory "Draft.Multisets_Extras" (required by "Draft.Multisets_ExtrasMoreTemplates")
class ordered_semiring = ordered_comm_monoid_add + semiring +
  assumes
    "mult_left_mono":
      "!!a b c. [| a <= b; (0::'a) <= c |] ==> c * a <= c * b"
  assumes
    "mult_right_mono":
      "!!a b c. [| a <= b; (0::'a) <= c |] ==> a * c <= b * c"
### theory "Draft.Multisets_Extras"
### 0.557s elapsed time, 0.701s cpu time, 0.195s GC time
Loading theory "Draft.Multisets_ExtrasMoreTemplates"
val templateLemmas =
   [("Multisets_Extras.size_cartesian_product_empty",
     "size (?A \<times># {#}) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), t_empty)),
       template_hole 0)),
    ("Multisets_Extras.partition_on_mset_empty",
     "partition_on_mset {#} ?P = (?P = {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Multisets_Extras.partition_on_mset_singletons",
     "partition_on_mset ?A {#{#x#}. x :# ?A#}",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))
         )),
    ("Multisets_Extras.repeat_mset_size",
     "size (repeat_mset ?n ?A) = ?n * size ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Multisets_Extras.partition_on_msetD1",
     "partition_on_mset ?A ?P ==> \<Sum>\<^sub># ?P = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multisets_Extras.size_big_union_sum",
     "size (\<Sum>\<^sub># ?M) = \<Sum>\<^sub># (image_mset size ?M)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Multisets_Extras.size_cartesian_product_singleton_right",
     "size (?A \<times># {#?b#}) = size ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app (template_hole 0, template_var 1))),
    ("Multisets_Extras.size_cartesian_product_singleton",
     "size ({#?a#} \<times># ?B) = size ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Multisets_Extras.mset_nempty_set_nempty",
     "(?A ~= {#}) = (set_mset ?A ~= {})",
     template_bimplication
      (template_negation
        (template_equation (template_var 0, template_hole 3)),
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Multisets_Extras.partition_on_msetD2",
     "partition_on_mset ?A ?P ==> {#} ~:# ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Multisets_Extras.partition_on_mset_card",
     "partition_on_mset ?A ?P ==> size ?P <= size ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Multisets_Extras.size_cartesian_product",
     "size (?A \<times># ?B) = size ?A * size ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.count_size_set_repr",
     "size {#x :# ?A. x = ?g#} = count ?A ?g",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Multisets_Extras.partition_on_mset_all",
     "?A ~= {#} ==> partition_on_mset ?A {#?A#}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Multisets_Extras.mset_size_ne0_set_card",
     "0 < size ?A ==> 0 < card (set_mset ?A)",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than, template_hole 3,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Multisets_Extras.partition_on_mset_split",
     "partition_on_mset ?A (?P + ?Q) ==>
      partition_on_mset (\<Sum>\<^sub># ?P) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Multisets_Extras.set_count_size_min",
     "?n <= count ?A ?a ==> ?n <= size ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app (template_hole 0, template_var 1)))),
    ("Multisets_Extras.partition_on_mset_distinct",
     "[| partition_on_mset ?A ?P; distinct_mset ?A |] ==> distinct_mset ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.mset_union_size",
     "size (?A \<union># ?B) = size ?A + size (?B - ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Multisets_Extras.elem_in_repeat_in_original",
     "?a :# repeat_mset ?n ?A ==> ?a :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Multisets_Extras.set_self_img_compr", "{a |a. a : ?A} = ?A",
     template_equation
      (template_app (template_hole 4, t_empty), template_var 0)),
    ("Multisets_Extras.cart_prod_distinct_mset",
     "[| distinct_mset ?A; distinct_mset ?B |]
      ==> distinct_mset (?A \<times># ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Multisets_Extras.partition_on_mset_eq_imp_eq_carrier",
     "[| partition_on_mset ?A ?P; partition_on_mset ?B ?P |] ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Multisets_Extras.filter_mset_image_mset",
     "filter_mset ?P (image_mset ?f ?A) =
      image_mset ?f {#x :# ?A. ?P (?f x)#}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Multisets_Extras.partition_on_mset_sum_size_eq",
     "partition_on_mset ?A ?P ==>
      \<Sum>\<^sub># (image_mset size ?P) = size ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Multisets_Extras.partition_on_mset_add_single",
     "partition_on_mset ?A ?P ==>
      partition_on_mset (add_mset ?a ?A) (add_mset {#?a#} ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Multisets_Extras.partition_on_mset_subsets",
     "[| partition_on_mset ?A ?P; ?x :# ?P |] ==> ?x <=# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Multisets_Extras.mset_union_size_inter",
     "size (?A \<union># ?B) = size ?A + size ?B - size (?A \<inter># ?B)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.mset_set_size_card_count",
     "(SUM x:#?A. x) = (SUM x:set_mset ?A. x * count ?A x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Multisets_Extras.card_inter_lt_single",
     "[| finite ?A; finite ?B |] ==> card (?A Int ?B) <= card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Multisets_Extras.card_subset_not_gt_card",
     "[| finite ?A; card ?A < card ?ps |] ==> ~ ?ps <= ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_inequation (less_equals, template_var 0, template_var 1)
           ))),
    ("Multisets_Extras.partition_on_mset_not_empty",
     "[| ?A ~= {#}; partition_on_mset ?A ?P |] ==> ?P ~= {#}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Multisets_Extras.image_image_mset",
     "image_mset ?f (image_mset ?g ?A) = {#?f (?g x). x :# ?A#}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Multisets_Extras.partition_on_set_mset",
     "[| partition_on_mset ?A ?P; distinct_mset ?A |]
      ==> partition_on (set_mset ?A) (set_mset (image_mset set_mset ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0)))
           ))),
    ("Multisets_Extras.partition_on_msetI",
     "[| \<Sum>\<^sub># ?P = ?A; {#} ~:# ?P |] ==> partition_on_mset ?A ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_var 0),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Multisets_Extras.size_filter_neg",
     "size (filter_mset ?P ?A) = size ?A - size {#a :# ?A. ~ ?P a#}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_mset_combine",
     "[| partition_on_mset ?A ?P; partition_on_mset ?B ?Q |]
      ==> partition_on_mset (?A + ?B) (?P + ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multisets_Extras.repeat_mset_not_empty",
     "[| 0 < ?n; ?A ~= {#} |] ==> repeat_mset ?n ?A ~= {#}",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Multisets_Extras.elem_in_original_in_repeat",
     "[| 0 < ?n; ?a :# ?A |] ==> ?a :# repeat_mset ?n ?A",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Multisets_Extras.elem_exists_non_empty_set",
     "[| 0 < card ?A; !!x. x : ?A ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.cart_product_add_1",
     "add_mset ?a ?A \<times># ?B = {#?a#} \<times># ?B + ?A \<times># ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)))),
    ("Multisets_Extras.mset_exists_imply",
     "?x :# image_mset ?f ?A ==> \<exists>y:#?A. ?x = ?f y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("Multisets_Extras.partition_on_mset_set",
     "[| finite ?A; partition_on ?A ?P |]
      ==> partition_on_mset (mset_set ?A) (mset_set (mset_set ` ?P))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 0)))
           ))),
    ("Multisets_Extras.partition_on_mset_diff",
     "[| partition_on_mset ?A ?P; ?Q <=# ?P |]
      ==> partition_on_mset (?A - \<Sum>\<^sub># ?Q) (?P - ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Multisets_Extras.card_Pow_filter_one",
     "finite ?A ==> card {x: Pow ?A. card x = 1} = card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 1, template_var 0)))),
    ("Multisets_Extras.filter_filter_mset_cond_simp",
     "(!!a. ?P a ==> ?Q a) ==>
      filter_mset ?P ?A = filter_mset ?P (filter_mset ?Q ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.multiset_image_do_nothing",
     "(!!x. x :# ?A ==> ?f x = x) ==> image_mset ?f ?A = ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Multisets_Extras.set_mset_filter",
     "set_mset (image_mset ?f ?A) = {?f a |a. a :# ?A}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Multisets_Extras.mset_inter_filter",
     "{#a :# ?A. ?P a & ?Q a#} =
      filter_mset ?P ?A \<inter># filter_mset ?Q ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Multisets_Extras.mset_bunion_filter",
     "{#a :# ?A. ?P a | ?Q a#} =
      filter_mset ?P ?A \<union># filter_mset ?Q ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Multisets_Extras.size_Union_distinct_cart_prod",
     "distinct_mset ?M ==>
      size (SUM p:#?M. {#p#} \<times># ?B) = size ?M * size ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty), template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Multisets_Extras.card_size_filter_eq",
     "finite ?A ==>
      card {a: ?A. ?P a} = size (filter_mset ?P (mset_set ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("Multisets_Extras.cart_product_single_intersect",
     "?x1.0 ~= ?x2.0 ==>
      {#?x1.0#} \<times># ?A \<inter># {#?x2.0#} \<times># ?B = {#}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1)),
               t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             t_empty)),
         template_hole 0))),
    ("Multisets_Extras.partition_on_mset_elems",
     "[| partition_on_mset ?A ?P; ?p1.0 :# ?P; ?x :# ?p1.0 |] ==> ?x :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Multisets_Extras.multiset_add_filter_size",
     "size (filter_mset ?P (?A1.0 + ?A2.0)) =
      size (filter_mset ?P ?A1.0) + size (filter_mset ?P ?A2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_mset_count_eq",
     "[| partition_on_mset ?A ?P; ?a :# ?A |]
      ==> (SUM x:#?P. count x ?a) = count ?A ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Multisets_Extras.sum_mset_add_diff_int",
     "(SUM x:#?A. ?f x - ?g x) =
      \<Sum>\<^sub># (image_mset ?f ?A) -
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_msetI2",
     "[| \<Sum>\<^sub># ?P = ?A; !!p. p :# ?P ==> p ~= {#} |]
      ==> partition_on_mset ?A ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1), template_var 0),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Multisets_Extras.partition_on_mset_add_part",
     "[| partition_on_mset ?A ?P; ?X ~= {#}; ?A + ?X = ?A' |]
      ==> partition_on_mset ?A' (add_mset ?X ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Multisets_Extras.set_filter_diff",
     "{a: ?A. ?P a} - {?x} = {a: ?A - {?x}. ?P a}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app (template_hole 4, t_empty))),
    ("Multisets_Extras.cart_product_singleton_right",
     "{#m :# ?N \<times># {#?b#}. fst m : snd m#} =
      {#n :# ?N. n : ?b#} \<times># {#?b#}",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         t_empty))),
    ("Multisets_Extras.cart_product_singleton_left",
     "{#m :# {#?a#} \<times># ?N. fst m : snd m#} =
      {#?a#} \<times># filter_mset ((:) ?a) ?N",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         t_empty))),
    ("Multisets_Extras.mset_big_union_obtain",
     "[| ?x :# \<Sum>\<^sub># ?A; !!a. [| a :# ?A; ?x :# a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.filter_filter_mset_ss_member",
     "filter_mset ((<=) {?x, ?y}) ?A =
      filter_mset ((<=) {?x, ?y}) (filter_mset ((:) ?x) ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)))),
    ("Multisets_Extras.set_filter_diff_card",
     "card ({a: ?A. ?P a} - {?x}) = card {a: ?A - {?x}. ?P a}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_hole 6, template_app (template_hole 4, t_empty)))),
    ("Multisets_Extras.set_break_down_left",
     "{#m :# ?M \<times># ?N. fst m : snd m#} =
      (SUM m:#?M. {#m#} \<times># filter_mset ((:) m) ?N)",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 1)))),
    ("Multisets_Extras.set_break_down_right",
     "{#x :# ?M \<times># ?N. fst x : snd x#} =
      (SUM n:#?N. {#m :# ?M. m : n#} \<times># {#n#})",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Multisets_Extras.set_card_diff_ge_zero",
     "[| finite ?A; finite ?B; ?A ~= ?B; card ?A = card ?B |]
      ==> 0 < card (?A - ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Multisets_Extras.size_add_elem_step_eq",
     "size (?A \<times># ?B) = size ?A * size ?B ==>
      size (add_mset ?x ?A \<times># ?B) = size (add_mset ?x ?A) * size ?B",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2)),
            template_app (template_hole 1, template_var 1)))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2))),
           template_app (template_hole 1, template_var 1))))),
    ("Multisets_Extras.sum_over_fun_eq",
     "(!!x. x :# ?A ==> ?f x = ?g x) ==>
      \<Sum>\<^sub># (image_mset ?f ?A) =
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Multisets_Extras.size_multiset_set_mset_const_count",
     "[| card (set_mset ?A) = ?ca; !!p. p :# ?A ==> count ?A p = ?ca2.0 |]
      ==> size ?A = ?ca * ?ca2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 2)),
          template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multisets_Extras.sigma_over_set_partition_count",
     "[| finite ?A; partition_on ?A ?P;
         ?x :# \<Sum>\<^sub># (mset_set (mset_set ` ?P)) |]
      ==> count (\<Sum>\<^sub># (mset_set (mset_set ` ?P))) ?x = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 1)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1)))),
           template_var 0),
         template_hole 0))),
    ("Multisets_Extras.partition_on_mset_elem_exists_part",
     "[| partition_on_mset ?A ?P; ?x :# ?A;
         !!p. [| p :# ?P; ?x :# p |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.partition_on_mset_add",
     "[| partition_on_mset ?A ?P; ?X :# ?P; add_mset ?a ?X = ?X' |]
      ==> partition_on_mset (add_mset ?a ?A)
           (add_mset ?X' (remove1_mset ?X ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 0))))
           ))),
    ("Multisets_Extras.bij_betw_inter_subsets",
     "[| bij_betw ?f ?A ?B; ?a1.0 <= ?A; ?a2.0 <= ?A |]
      ==> ?f ` (?a1.0 Int ?a2.0) = ?f ` ?a1.0 Int ?f ` ?a2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 0))))),
    ("Multisets_Extras.repeat_mset_subset_in",
     "[| !!a. a :# ?A ==> a <= ?B; ?X :# repeat_mset ?n ?A; ?x : ?X |]
      ==> ?x : ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Multisets_Extras.set_diff_non_empty_not_subset",
     "[| ?A <= ?B - ?C; ?C ~= {}; ?A ~= {}; ?B ~= {} |] ==> ~ ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 0)),
        template_negation
         (template_equation (template_var 2, template_hole 0)),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_negation
        (
           template_inequation (less_equals, template_var 2, template_var 0)
           ))),
    ("Multisets_Extras.cart_product_add_1_filter2",
     "filter_mset ?P (?M \<times># add_mset ?b ?N) =
      filter_mset ?P (?M \<times># ?N) +
      filter_mset ?P (?M \<times># {#?b#})",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 3, template_var 2), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 2), t_empty))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty))))),
    ("Multisets_Extras.cart_product_add_1_filter",
     "filter_mset ?P (add_mset ?a ?M \<times># ?N) =
      filter_mset ?P (?M \<times># ?N) +
      filter_mset ?P ({#?a#} \<times># ?N)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 1), t_empty))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             t_empty))))),
    ("Multisets_Extras.partition_on_mset_distinct_disjoint",
     "[| partition_on_mset ?A ?P; distinct_mset ?A; ?p1.0 :# ?P;
         ?p2.0 :# remove1_mset ?p1.0 ?P |]
      ==> ?p1.0 \<inter># ?p2.0 = {#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multisets_Extras.size_multiset_int_count",
     "[| int (card (set_mset ?A)) = ?ca;
         !!p. p :# ?A ==> int (count ?A p) = ?ca2.0 |]
      ==> int (size ?A) = ?ca * ?ca2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2))),
          template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Multisets_Extras.partition_on_mset_distinct_inter",
     "[| partition_on_mset ?A ?P; distinct_mset ?A; ?p1.0 :# ?P;
         ?p2.0 :# ?P; ?p1.0 ~= ?p2.0 |]
      ==> ?p1.0 \<inter># ?p2.0 = {#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multisets_Extras.mset_size_partition_dep",
     "size {#a :# ?A. ?P a | ?Q a#} =
      size (filter_mset ?P ?A) + size (filter_mset ?Q ?A) -
      size {#a :# ?A. ?P a & ?Q a#}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, t_empty),
                   template_var 0))),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_var 0)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Multisets_Extras.partition_on_remove_pt",
     "partition_on ?A ?G ==>
      partition_on (?A - {?x}) {g - {?x} |g. g : ?G & g ~= {?x}}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6))),
             template_app (template_hole 5, t_empty))
           ))),
    ("Multisets_Extras.obtain_subset_with_card_int_n",
     "[| ?n <= int (card ?S); 0 <= ?n;
         !!T. [| T <= ?S; int (card T) = ?n; finite T |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1))),
        template_inequation (less_equals, template_hole 4, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Multisets_Extras.size_union_distinct_cart_prod",
     "?x1.0 ~= ?x2.0 ==>
      size ({#?x1.0#} \<times># ?A \<union># {#?x2.0#} \<times># ?B) =
      size ({#?x1.0#} \<times># ?A) + size ({#?x2.0#} \<times># ?B)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_hole 1)),
                 t_empty)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               t_empty))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_hole 1)),
                 t_empty))),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               t_empty)))))),
    ("Multisets_Extras.partition_on_set_mset_distinct",
     "[| partition_on_mset ?A ?P; distinct_mset ?A;
         ?p :# image_mset set_mset ?P; ?p' :# image_mset set_mset ?P;
         ?p ~= ?p' |]
      ==> ?p Int ?p' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multisets_Extras.cart_product_add_1_filter_eq_mirror",
     "{#m :# ?M \<times># add_mset ?b ?N. fst m : snd m#} =
      {#m :# ?M \<times># ?N. fst m : snd m#} +
      {#n :# ?M. n : ?b#} \<times># {#?b#}",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 4, template_var 2), t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_var 2), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2)),
           t_empty)))),
    ("Multisets_Extras.cart_product_add_1_filter_eq",
     "{#m :# add_mset ?a ?M \<times># ?N. fst m : snd m#} =
      {#m :# ?M \<times># ?N. fst m : snd m#} +
      {#?a#} \<times># filter_mset ((:) ?a) ?N",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           t_empty)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 4, template_var 1), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 1)),
           t_empty)))),
    ("Multisets_Extras.sum_mset_add_diff_nat",
     "(!!x. x :# ?A ==> ?g x <= ?f x) ==>
      (SUM x:#?A. ?f x - ?g x) =
      \<Sum>\<^sub># (image_mset ?f ?A) -
      \<Sum>\<^sub># (image_mset ?g ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 2))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_var 2)))))),
    ("Multisets_Extras.cart_prod_singleton_right_gen",
     "(!!x. x :# ?A \<times># {#?b#} ==> ?P x = ?Q (fst x)) ==>
      filter_mset ?P (?A \<times># {#?b#}) =
      filter_mset ?Q ?A \<times># {#?b#}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 7, template_var 3), t_empty)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, t_empty), template_var 3)),
           t_empty)))),
    ("Multisets_Extras.cart_prod_singleton_left_gen",
     "(!!x. x :# {#?a#} \<times># ?B ==> ?P x = ?Q (snd x)) ==>
      filter_mset ?P ({#?a#} \<times># ?B) =
      {#?a#} \<times># filter_mset ?Q ?B",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_hole 5)),
             t_empty)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_hole 5)),
           t_empty)))),
    ("Multisets_Extras.partition_on_cart_prod",
     "[| 0 < card ?I; ?A ~= {}; ?G ~= {}; partition_on ?A ?G |]
      ==> partition_on (?A \<times> ?I) {g \<times> ?I |g. g : ?G}",
     template_implication
      ([template_inequation
         (less_than, template_hole 14,
          template_app (template_hole 13, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_negation
         (template_equation (template_var 0, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1), t_empty)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Multisets_Extras.size_Union_distinct_cart_prod_filter",
     "[| distinct_mset ?M;
         !!p. p :# ?M ==> size (filter_mset (?P p) ?B) = ?c |]
      ==> size (SUM p:#?M. {#p#} \<times># filter_mset (?P p) ?B) =
          size ?M * ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 3))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0)))),
    ("Multisets_Extras.size_Union_distinct_cart_prod_filter2",
     "[| distinct_mset ?V; !!b. b :# ?B ==> size {#v :# ?V. ?P v b#} = ?c |]
      ==> size (SUM b:#?B. {#v :# ?V. ?P v b#} \<times># {#b#}) =
          size ?B * ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Multisets_Extras.transform_filter_img_empty_rm",
     "(!!g. g : ?G ==> g ~= {}) ==>
      {g - {?x} |g. g : ?G & g ~= {?x}} = {g - {?x} |g. g : ?G} - {{}}",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 7, t_empty)),
           template_app
            (template_app (template_hole 1, template_hole 9),
             template_hole 0)))))]:
   (string * thm * template) list
### theory "Draft.Multisets_ExtrasMoreTemplates"
### 0.449s elapsed time, 0.704s cpu time, 0.081s GC time
val it = (): unit
