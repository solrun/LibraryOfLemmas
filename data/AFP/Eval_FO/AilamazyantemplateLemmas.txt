   [("Ailamazyan.finite_SP", "finite (SP ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Ailamazyan.distinct_rremdups", "distinct (rremdups ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Ailamazyan.ad_agr_list_refl", "ad_agr_list ?X ?xs ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Ailamazyan.d_pos", "1 <= d ?\<phi>",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Ailamazyan.ad_equiv_pair_refl", "ad_equiv_pair ?X (?a, ?a)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Ailamazyan.fo_nmlz_sound", "fo_nmlzd ?AD (fo_nmlz ?AD ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Ailamazyan.fo_nmlz_Nil", "fo_nmlz ?AD [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Ailamazyan.merge_Nil2", "merge ?nxs [] = ?nxs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Ailamazyan.SP_fv", "SP ?\<phi> <= fv_fo_fmla ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Ailamazyan.fo_nmlz_ad_agr", "ad_agr_list ?AD ?xs (fo_nmlz ?AD ?xs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Ailamazyan.eval_bool", "fo_wf (Bool ?b) ?I (eval_bool ?b)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0),
           template_app (template_hole 0, template_var 1))
         )),
    ("Ailamazyan.nfv_card", "nfv ?\<phi> = card (fv_fo_fmla ?\<phi>)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Ailamazyan.rremdups_set", "set (rremdups ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Ailamazyan.SP_list_set", "set (SP_list ?\<phi>) = SP ?\<phi>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Ailamazyan.fv_fo_terms_list_Var",
     "fv_fo_terms_list_rec (map Var ?ns) = ?ns",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Ailamazyan.card_SP_d", "card (SP ?\<phi>) <= d ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Ailamazyan.length_rremdups", "length (rremdups ?xs) = card (set ?xs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Ailamazyan.fo_nmlz_length", "length (fo_nmlz ?AD ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Ailamazyan.sp_equiv_pair_comm",
     "sp_equiv_pair ?x ?y = sp_equiv_pair ?y ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Ailamazyan.map_projl_Inl", "map projl (map Inl ?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Ailamazyan.Ball_fo_nmlzd", "Ball (fo_nmlz ?AD ` ?X) (fo_nmlzd ?AD)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_app (template_hole 0, template_var 1))
         )),
    ("Ailamazyan.eval_eq", "fo_wf (Eqa ?t ?t') ?I (eval_eq ?t ?t')",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))
         )),
    ("Ailamazyan.sorted_distinct_SP_list",
     "sorted_distinct (SP_list ?\<phi>)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))
         )),
    ("Ailamazyan.nall_tuples_code",
     "nall_tuples ?AD ?n = nall_tuples_rec ?AD 0 ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Ailamazyan.card_set_minus", "card (set ?xs - ?X) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Ailamazyan.card_Inr_vimage_le_length",
     "card (Inr -` set ?xs) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Ailamazyan.nall_tuples_finite",
     "finite ?AD ==> finite (nall_tuples ?AD ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ailamazyan.all_tuples_finite",
     "finite ?xs ==> finite (all_tuples ?xs ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ailamazyan.finite_Inl", "finite ?X ==> finite (Inl -` ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Ailamazyan.sp_equiv_list_comm",
     "sp_equiv_list ?xs ?ys ==> sp_equiv_list ?ys ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Ailamazyan.fo_nmlz_rec_length",
     "length (fo_nmlz_rec ?i ?m ?AD ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Ailamazyan.fo_nmlzd_code",
     "fo_nmlzd ?AD ?xs = (fo_nmlz ?AD ?xs = ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Ailamazyan.filter_rremdups",
     "filter ?P (rremdups ?xs) = rremdups (filter ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Ailamazyan.fv_fo_fmla_list_Pred",
     "remdups_adj (sort (fv_fo_terms_list ?ts)) = fv_fo_terms_list ?ts",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Ailamazyan.eval_eterms_map_Var",
     "?\<sigma> \<odot>e map Var ?ns = map ?\<sigma> ?ns",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Ailamazyan.proj_tuple_idle",
     "proj_tuple (map fst ?nxs) ?nxs = map snd ?nxs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Ailamazyan.finite_act_edom",
     "wf_fo_intp ?\<phi> ?I ==> finite (act_edom ?\<phi> ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ailamazyan.fo_nmlzd_take",
     "fo_nmlzd ?AD ?xs ==> fo_nmlzd ?AD (take ?i ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Ailamazyan.fo_nmlz_idem",
     "fo_nmlzd ?AD ?ys ==> fo_nmlz ?AD ?ys = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Ailamazyan.ad_agr_list_comm",
     "ad_agr_list ?X ?xs ?ys ==> ad_agr_list ?X ?ys ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Ailamazyan.ad_equiv_list_comm",
     "ad_equiv_list ?X ?xs ?ys ==> ad_equiv_list ?X ?ys ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Ailamazyan.fo_nmlz_map",
     "EX \<tau>. fo_nmlz ?AD (map ?\<sigma> ?ns) = map \<tau> ?ns",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Ailamazyan.rremdups_take",
     "EX j. rremdups (take ?i ?xs) = take j (rremdups ?xs)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Ailamazyan.fun_upd_id_map",
     "id_map ?i(Inr ?i |-> ?i) = id_map (Suc ?i)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 3, template_app (template_hole 0, template_var 0)))),
    ("Ailamazyan.proj_fmla_map",
     "proj_fmla ?\<phi> ?R =
      (%\<tau>. map \<tau> (fv_fo_fmla_list ?\<phi>)) ` ?R",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("Ailamazyan.ad_equiv_pair_comm",
     "ad_equiv_pair ?X (?a, ?a') = ad_equiv_pair ?X (?a', ?a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Ailamazyan.eval_terms_eterms",
     "map Inl (?\<sigma> \<odot> ?ts) = (Inl o ?\<sigma>) \<odot>e ?ts",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1)),
         template_var 0))),
    ("Ailamazyan.fo_nmlz_take",
     "take ?n (fo_nmlz ?AD ?xs) = fo_nmlz ?AD (take ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Ailamazyan.fo_nmlz_proj_sub",
     "fo_nmlz ?AD ` proj_fmla ?\<phi> ?R <= nall_tuples ?AD (nfv ?\<phi>)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Ailamazyan.fo_wf_eval_abs",
     "wf_fo_intp ?\<phi> ?I ==> fo_wf ?\<phi> ?I (eval_abs ?\<phi> ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ailamazyan.ad_agr_list_length",
     "ad_agr_list ?X ?xs ?ys ==> length ?xs = length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Ailamazyan.all_tuples_setD",
     "?vs : all_tuples ?xs ?n ==> set ?vs <= ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_var 1))),
    ("Ailamazyan.id_mapD", "id_map ?j (Inr ?i) = None ==> ?j <= ?i",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Ailamazyan.fo_nmlzd_all_AD",
     "set ?xs <= Inl ` ?AD ==> fo_nmlzd ?AD ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Ailamazyan.set_map_filter_sum",
     "set (List.map_filter (case_sum Map.empty Some) ?xs) = Inr -` set ?xs",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_hole 3)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Ailamazyan.proj_sat_fmla",
     "proj_sat ?\<phi> ?I =
      proj_fmla ?\<phi> {\<sigma>. sat ?\<phi> ?I \<sigma>}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)))),
    ("Ailamazyan.fo_nmlz_eq",
     "(fo_nmlz ?AD ?vs = fo_nmlz ?AD ?vs') = ad_agr_list ?AD ?vs ?vs'",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Ailamazyan.ad_agr_close_empty",
     "fo_nmlzd ?X ?xs ==> ad_agr_close {} ?xs = {?xs}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Ailamazyan.fo_rep",
     "fo_wf ?\<phi> ?I ?t ==> fo_rep ?t = proj_sat ?\<phi> ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Ailamazyan.fo_fin",
     "fo_wf ?\<phi> ?I ?t ==> fo_fin ?t = finite (fo_rep ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Ailamazyan.pos_complete", "pos ?a ?xs = None ==> ?a ~: set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Ailamazyan.pos_length", "pos ?a ?xs = Some ?i ==> ?i < length ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("Ailamazyan.pos_set", "pos ?a ?xs = Some ?i ==> ?a : set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Ailamazyan.nall_tuples_rec_length",
     "?xs : nall_tuples_rec ?AD ?i ?n ==> length ?xs = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 3), template_var 0))),
    ("Ailamazyan.unify_vals_terms_extends",
     "unify_vals_terms ?vs ?ts ?\<sigma> = Some ?\<sigma>' ==>
      extends_subst ?\<sigma> ?\<sigma>'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Ailamazyan.filter_take",
     "EX j. filter ?P (take ?i ?xs) = take j (filter ?P ?xs)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Ailamazyan.map_filter_take",
     "EX j. List.map_filter ?f (take ?i ?xs) =
            take j (List.map_filter ?f ?xs)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Ailamazyan.merge_length",
     "length (merge ?nxs ?mys) = length (map fst ?nxs @ map fst ?mys)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Ailamazyan.proj_sat_vals",
     "proj_sat ?\<phi> ?I =
      proj_vals {\<sigma>. sat ?\<phi> ?I \<sigma>}
       (fv_fo_fmla_list ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app (template_hole 0, template_var 1)))),
    ("Ailamazyan.sp_equiv_list_link",
     "sp_equiv_list (map ?\<sigma> ?ns) (map ?\<tau> ?ns) =
      sp_equiv ?\<sigma> ?\<tau> (set ?ns)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Ailamazyan.nall_tuples_rec_fo_nmlz",
     "(?xs : nall_tuples_rec ?AD 0 (length ?xs)) = (fo_nmlz ?AD ?xs = ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3),
                template_app (template_hole 2, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Ailamazyan.fv_fo_fmla_list_exists",
     "fv_fo_fmla_list (Exists ?n ?\<phi>) =
      filter ((~=) ?n) (fv_fo_fmla_list ?\<phi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 4, template_var 0)))),
    ("Ailamazyan.fv_fo_fmla_list_forall",
     "fv_fo_fmla_list (Forall ?n ?\<phi>) =
      filter ((~=) ?n) (fv_fo_fmla_list ?\<phi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 4, template_var 0)))),
    ("Ailamazyan.fo_rep_eval_abs",
     "wf_fo_intp ?\<phi> ?I ==>
      fo_rep (eval_abs ?\<phi> ?I) = proj_sat ?\<phi> ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Ailamazyan.fo_nmlz_eqI",
     "ad_agr_list ?AD ?vs ?vs' ==> fo_nmlz ?AD ?vs = fo_nmlz ?AD ?vs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Ailamazyan.fo_nmlz_eqD",
     "fo_nmlz ?AD ?vs = fo_nmlz ?AD ?vs' ==> ad_agr_list ?AD ?vs ?vs'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.sp_equiv_list_trans",
     "[| sp_equiv_list ?xs ?ys; sp_equiv_list ?ys ?zs |]
      ==> sp_equiv_list ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Ailamazyan.fo_nmlzd_mono_sub",
     "[| ?X <= ?X'; fo_nmlzd ?X ?xs |] ==> fo_nmlzd ?X' ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Ailamazyan.eval_table",
     "eval_table ?ts ?X =
      proj_vals {\<sigma>. \<sigma> \<odot>e ?ts : ?X}
       (fv_fo_terms_list ?ts)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 0, template_var 1)))),
    ("Ailamazyan.nall_tuples_set",
     "nall_tuples ?AD ?n = {ys. length ys = ?n & fo_nmlzd ?AD ys}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Ailamazyan.eval_neg",
     "fo_wf ?\<phi> ?I ?t ==>
      fo_wf (Neg ?\<phi>) ?I (eval_neg (fv_fo_fmla_list ?\<phi>) ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Ailamazyan.rem_nth_add_nth",
     "?i <= length ?zs ==> rem_nth ?i (add_nth ?i ?z ?zs) = ?zs",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)),
         template_var 1))),
    ("Ailamazyan.ad_agr_sets_comm",
     "ad_agr_sets ?FV ?S ?X ?\<sigma> ?\<tau> ==>
      ad_agr_sets ?FV ?S ?X ?\<tau> ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Ailamazyan.nall_tuples_rec_Inl",
     "?vs : nall_tuples_rec ?AD ?i ?n ==> Inl -` set ?vs <= ?AD",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 3)),
         template_var 2))),
    ("Ailamazyan.ad_agr_close_rec_length",
     "?ys : ad_agr_close_rec ?i ?m ?AD ?xs ==> length ?xs = length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 4)))),
    ("Ailamazyan.all_tuples_set",
     "all_tuples ?xs ?n = {ys. length ys = ?n & set ys <= ?xs}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Ailamazyan.ad_agr_close_set_nmlz_eq",
     "ad_agr_close_set ?AD (fo_nmlz ?AD' ` ?X) =
      \<Union> (ad_agr_close ?AD ` fo_nmlz ?AD' ` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0))))),
    ("Ailamazyan.fo_nmlz_rec_take",
     "take ?n (fo_nmlz_rec ?i ?m ?AD ?xs) =
      fo_nmlz_rec ?i ?m ?AD (take ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_var 0)))),
    ("Ailamazyan.rem_nth_length",
     "?i < length ?xs ==> length (rem_nth ?i ?xs) = length ?xs - 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_hole 0)))),
    ("Ailamazyan.add_nth_length",
     "?i <= length ?zs ==> length (add_nth ?i ?z ?zs) = Suc (length ?zs)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 1))))),
    ("Ailamazyan.ad_agr_close_set_eq",
     "Ball ?X (fo_nmlzd ?AD') ==>
      ad_agr_close_set ?AD ?X = \<Union> (ad_agr_close ?AD ` ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 2))))),
    ("Ailamazyan.fv_ex_all",
     "pos ?i (fv_fo_fmla_list ?\<phi>) = None ==>
      fv_fo_fmla_list (Exists ?i ?\<phi>) = fv_fo_fmla_list ?\<phi>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Ailamazyan.fv_ex_all",
     "pos ?i (fv_fo_fmla_list ?\<phi>) = None ==>
      fv_fo_fmla_list (Forall ?i ?\<phi>) = fv_fo_fmla_list ?\<phi>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Ailamazyan.ad_agr_list_mono",
     "[| ?X <= ?Y; ad_agr_list ?Y ?ys ?xs |] ==> ad_agr_list ?X ?ys ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.ad_equiv_list_mono",
     "[| ?X <= ?Y; ad_equiv_list ?Y ?xs ?ys |]
      ==> ad_equiv_list ?X ?xs ?ys",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.sp_equiv_mono",
     "[| ?I <= ?J; sp_equiv ?\<sigma> ?\<tau> ?J |]
      ==> sp_equiv ?\<sigma> ?\<tau> ?I",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Ailamazyan.filter_rremdups_filter",
     "filter ?P (rremdups (filter ?Q ?xs)) =
      rremdups (filter (%x. ?P x & ?Q x) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Ailamazyan.ex_out", "finite ?X ==> EX k. k ~: ?X & k < Suc (card ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Ailamazyan.ext_tuple_set_mono",
     "?A <= ?B ==>
      ext_tuple_set ?AD ?ns ?ns' ?A <= ext_tuple_set ?AD ?ns ?ns' ?B",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3)))),
    ("Ailamazyan.eval_exists",
     "fo_wf ?\<phi> ?I ?t ==>
      fo_wf (Exists ?i ?\<phi>) ?I
       (eval_exists ?i (fv_fo_fmla_list ?\<phi>) ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 3)),
               template_var 1))
           ))),
    ("Ailamazyan.eval_forall",
     "fo_wf ?\<phi> ?I ?t ==>
      fo_wf (Forall ?i ?\<phi>) ?I
       (eval_forall ?i (fv_fo_fmla_list ?\<phi>) ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 3)),
               template_var 1))
           ))),
    ("Ailamazyan.add_nth_rem_nth_self",
     "?i < length ?xs ==> add_nth ?i (?xs ! ?i) (rem_nth ?i ?xs) = ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Ailamazyan.all_tuplesD",
     "?vs : all_tuples ?xs ?n ==> length ?vs = ?n & set ?vs <= ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1))
           ))),
    ("Ailamazyan.unify_vals_terms_sound",
     "unify_vals_terms ?vs ?ts ?\<sigma> = Some ?\<sigma>' ==>
      (the o ?\<sigma>') \<odot>e ?ts = ?vs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 2),
         template_var 3))),
    ("Ailamazyan.id_mapD",
     "id_map ?j (Inr ?i) = Some ?x ==> ?i < ?j & ?i = ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 1)),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ailamazyan.fo_nmlz_set_rev",
     "set (fo_nmlz ?AD ?xs) <= Inl ` ?AD ==> set ?xs <= Inl ` ?AD",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Ailamazyan.ad_agr_list_trans",
     "[| ad_agr_list ?X ?xs ?ys; ad_agr_list ?X ?ys ?zs |]
      ==> ad_agr_list ?X ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Ailamazyan.ad_equiv_list_trans",
     "[| ad_equiv_list ?X ?xs ?ys; ad_equiv_list ?X ?ys ?zs |]
      ==> ad_equiv_list ?X ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Ailamazyan.fo_res_infin",
     "[| fo_wf ?\<phi> ?I ?t; infinite (fo_rep ?t) |]
      ==> fo_res ?t = Infin",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Ailamazyan.nall_tuplesI",
     "[| length ?vs = ?n; fo_nmlzd ?AD ?vs |] ==> ?vs : nall_tuples ?AD ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2), template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Ailamazyan.fo_nmlzd_mono",
     "[| Inl -` set ?xs <= ?AD; fo_nmlzd ?AD' ?xs |] ==> fo_nmlzd ?AD ?xs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app (template_hole 1, template_var 2)),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("Ailamazyan.insert_Inr",
     "insert (Inr ?i) (?X Un Inr ` {..<?i}) = ?X Un Inr ` {..<Suc ?i}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 4),
             template_app (template_hole 1, template_var 1)))),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("Ailamazyan.ad_agr_list_link",
     "ad_agr_sets (set ?ns) (set ?ns) ?AD ?\<sigma> ?\<tau> =
      ad_agr_list ?AD (map ?\<sigma> ?ns) (map ?\<tau> ?ns)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 3)),
               template_app (template_hole 2, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Ailamazyan.sat_esat_conv",
     "wf_fo_intp ?\<phi> ?I ==>
      sat ?\<phi> ?I ?\<sigma> = esat ?\<phi> ?I (Inl o ?\<sigma>) UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_hole 0)))),
    ("Ailamazyan.nfv_ex_all",
     "pos ?i (fv_fo_fmla_list ?\<phi>) = Some ?j ==>
      nfv ?\<phi> = Suc (nfv (Exists ?i ?\<phi>))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 5, template_var 1)),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Ailamazyan.nfv_ex_all",
     "pos ?i (fv_fo_fmla_list ?\<phi>) = Some ?j ==>
      nfv ?\<phi> = Suc (nfv (Forall ?i ?\<phi>))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 5, template_var 1)),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Ailamazyan.nall_tuples_rec_fo_nmlz_rec_complete",
     "fo_nmlz_rec ?j (id_map ?j) ?AD ?xs = ?xs ==>
      ?xs : nall_tuples_rec ?AD ?j (length ?xs)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 2)),
              template_var 1),
            template_var 0),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Ailamazyan.ad_agr_sets_restrict",
     "ad_agr_sets (set (fv_fo_fmla_list ?\<phi>))
       (set (fv_fo_fmla_list ?\<phi>)) ?AD ?\<sigma> ?\<tau> ==>
      ad_agr ?\<phi> ?AD ?\<sigma> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app (template_hole 1, template_var 3))),
                    template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 3))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.ad_equiv_pair_mono",
     "[| ?X <= ?Y; ad_equiv_pair ?Y (?a, ?a') |]
      ==> ad_equiv_pair ?X (?a, ?a')",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Ailamazyan.fo_res_fin",
     "[| fo_wf ?\<phi> ?I ?t; finite (fo_rep ?t) |]
      ==> fo_res ?t = Fin (fo_rep ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("Ailamazyan.all_tuplesI",
     "[| length ?vs = ?n; set ?vs <= ?xs |] ==> ?vs : all_tuples ?xs ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Ailamazyan.set_zip_map",
     "set (zip (map ?\<sigma> ?ns) (map ?\<tau> ?ns)) =
      (%n. (?\<sigma> n, ?\<tau> n)) ` set ?ns",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Ailamazyan.rem_nth_take_drop",
     "?i < length ?xs ==> rem_nth ?i ?xs = take ?i ?xs @ drop (Suc ?i) ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Ailamazyan.pos_sound",
     "pos ?a ?xs = Some ?i ==> ?i < length ?xs & ?xs ! ?i = ?a",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("Ailamazyan.sp_equiv_list_fv_list",
     "sp_equiv_list (?\<sigma> \<odot>e ?ts) (?\<tau> \<odot>e ?ts) ==>
      sp_equiv_list (map ?\<sigma> (fv_fo_terms_list ?ts))
       (map ?\<tau> (fv_fo_terms_list ?ts))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Ailamazyan.set_zip_comm",
     "(?x, ?y) : set (zip ?xs ?ys) ==> (?y, ?x) : set (zip ?ys ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Ailamazyan.fo_nmlz_rec_set_rev",
     "set (fo_nmlz_rec ?i ?m ?AD ?xs) <= Inl ` ?AD ==>
      set ?xs <= Inl ` ?AD",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Ailamazyan.exists_map",
     "[| length ?xs = length ?ys; distinct ?xs |]
      ==> EX f. ?ys = map f ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Ailamazyan.rremdups_app",
     "rremdups (?xs @ [?x]) =
      rremdups ?xs @ (if ?x : set ?xs then [] else [?x])",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 6, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))),
             template_hole 3),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))))),
    ("Ailamazyan.ad_agr_sets_mono",
     "[| ?X <= ?Y; ad_agr_sets ?FV ?S ?Y ?\<sigma> ?\<tau> |]
      ==> ad_agr_sets ?FV ?S ?X ?\<sigma> ?\<tau>",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 5),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.ad_agr_sets_mono'",
     "[| ?S <= ?S'; ad_agr_sets ?FV ?S' ?X ?\<sigma> ?\<tau> |]
      ==> ad_agr_sets ?FV ?S ?X ?\<sigma> ?\<tau>",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 5),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.ad_agr_list_eq",
     "[| set ?ys <= ?AD; ad_agr_list ?AD (map Inl ?xs) (map Inl ?ys) |]
      ==> ?xs = ?ys",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2))
            )],
       template_equation (template_var 0, template_var 2))),
    ("Ailamazyan.ad_agr_list_fo_nmlzd",
     "[| ad_agr_list ?AD ?vs ?vs'; fo_nmlzd ?AD ?vs; fo_nmlzd ?AD ?vs' |]
      ==> ?vs = ?vs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Ailamazyan.ad_equiv_list_link",
     "(ALL i:set ?ns. ad_equiv_pair ?X (?\<sigma> i, ?\<tau> i)) =
      ad_equiv_list ?X (map ?\<sigma> ?ns) (map ?\<tau> ?ns)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Ailamazyan.map_filter_app",
     "List.map_filter ?f (?xs @ [?x]) =
      List.map_filter ?f ?xs @ (case ?f ?x of None => [] | Some y => [y])",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1), t_empty),
           template_app (template_var 2, template_var 0))))),
    ("Ailamazyan.add_nth_take_drop",
     "?i <= length ?zs ==>
      add_nth ?i ?v ?zs = take ?i ?zs @ ?v # drop ?i ?zs",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Ailamazyan.set_zip_mapI",
     "?x : set ?xs ==>
      (?f ?x, ?g ?x) : set (zip (map ?f ?xs) (map ?g ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 1, template_var 3)),
                 template_app (template_var 0, template_var 3))),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("Ailamazyan.eval_pred",
     "finite (?I (?r, length ?ts)) ==>
      fo_wf (Pred ?r ?ts) ?I (eval_pred ?ts (?I (?r, length ?ts)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_var 2,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_var 2,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app (template_hole 3, template_var 0)))))
           ))),
    ("Ailamazyan.ad_agr_list_fv_list",
     "ad_agr_list ?X (?\<sigma> \<odot>e ?ts) (?\<tau> \<odot>e ?ts) ==>
      ad_agr_list ?X (map ?\<sigma> (fv_fo_terms_list ?ts))
       (map ?\<tau> (fv_fo_terms_list ?ts))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Ailamazyan.fo_nmlz_mono",
     "[| ?AD <= ?AD'; Inl -` set ?xs <= ?AD |]
      ==> fo_nmlz ?AD' ?xs = fo_nmlz ?AD ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app (template_hole 2, template_var 0)),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Ailamazyan.eval_eterms_fv_fo_terms_set",
     "[| ?\<sigma> \<odot>e ?ts = ?\<sigma>' \<odot>e ?ts;
         ?n : fv_fo_terms_set ?ts |]
      ==> ?\<sigma> ?n = ?\<sigma>' ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Ailamazyan.nall_tuples_rec_fo_nmlz_rec_sound",
     "[| ?i <= ?j; ?xs : nall_tuples_rec ?AD ?i ?n |]
      ==> fo_nmlz_rec ?j (id_map ?j) ?AD ?xs = ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 4),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app (template_hole 0, template_var 3)),
             template_var 1),
           template_var 2),
         template_var 2))),
    ("Ailamazyan.map_map_of",
     "[| length ?xs = length ?ys; distinct ?xs |]
      ==> ?ys = map (the o map_of (zip ?xs ?ys)) ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_var 1)))),
    ("Ailamazyan.Inr_in_tuple",
     "[| fo_nmlz ?AD ?zs = ?zs; ?n < card (Inr -` set ?zs) |]
      ==> Inr ?n : set ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_app (template_hole 1, template_var 1))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Ailamazyan.ext_tuple_set_eq",
     "Ball ?X (fo_nmlzd ?AD) ==>
      ext_tuple_set ?AD ?ns ?ns' ?X =
      fo_nmlz ?AD ` \<Union> (ext_tuple ?AD ?ns ?ns' ` ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_var 3)))))),
    ("Ailamazyan.fo_wf_eval_table",
     "fo_wf ?\<phi> ?I (?AD, ?n, ?X) ==>
      ?X = fo_nmlz ?AD ` eval_table (map Var [0..<?n]) ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1))),
             template_var 0))))),
    ("Ailamazyan.eval_eterm_cong",
     "(!!n. n : fv_fo_term_set ?t ==> ?\<sigma> n = ?\<sigma>' n) ==>
      ?\<sigma> \<cdot>e ?t = ?\<sigma>' \<cdot>e ?t",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Ailamazyan.eval_eterms_cong",
     "(!!n. n : fv_fo_terms_set ?ts ==> ?\<sigma> n = ?\<sigma>' n) ==>
      ?\<sigma> \<odot>e ?ts = ?\<sigma>' \<odot>e ?ts",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Ailamazyan.fo_nmlz_add_rem",
     "?i <= length ?zs ==>
      EX z'.
         fo_nmlz ?AD (add_nth ?i ?z ?zs) =
         fo_nmlz ?AD (add_nth ?i z' (fo_nmlz ?AD ?zs))",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, template_var 2))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ailamazyan.fo_nmlz_add_rem'",
     "?i <= length ?zs ==>
      EX z'.
         fo_nmlz ?AD (add_nth ?i ?z (fo_nmlz ?AD ?zs)) =
         fo_nmlz ?AD (add_nth ?i z' ?zs)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, template_var 2))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ailamazyan.fo_nmlz_idem_isl",
     "(!!x. x : set ?xs ==> case x of Inl z => z : ?X | Inr b => False) ==>
      fo_nmlz ?X ?xs = ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Ailamazyan.sp_equiv_list_subset",
     "[| set ?ms <= set ?ns;
         sp_equiv_list (map ?\<sigma> ?ns) (map ?\<sigma>' ?ns) |]
      ==> sp_equiv_list (map ?\<sigma> ?ms) (map ?\<sigma>' ?ms)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("Ailamazyan.ad_agr_list_set",
     "[| ad_agr_list ?X ?xs ?ys; ?y : ?X; Inl ?y : set ?ys |]
      ==> Inl ?y : set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Ailamazyan.ad_agr_list_take_drop",
     "ad_agr_list ?AD ?xs ?ys ==>
      ad_agr_list ?AD (take ?i ?xs @ drop (Suc ?i) ?xs)
       (take ?i ?ys @ drop (Suc ?i) ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0)),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))
           ))),
    ("Ailamazyan.fo_wf_X",
     "fo_wf ?\<phi> ?I (?AD, ?n, ?X) ==>
      ?X =
      fo_nmlz ?AD `
      proj_fmla ?\<phi> {\<sigma>. esat ?\<phi> ?I \<sigma> UNIV}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app (template_hole 2, t_empty)))))),
    ("Ailamazyan.fo_rep_norm",
     "fo_wf ?\<phi> ?I (?AD, ?n, ?X) ==>
      ?X = fo_nmlz ?AD ` map Inl ` fo_rep (?AD, ?n, ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0)))))))),
    ("Ailamazyan.eval_conj",
     "[| fo_wf ?\<phi> ?I ?t\<phi>; fo_wf ?\<psi> ?I ?t\<psi> |]
      ==> fo_wf (Conj ?\<phi> ?\<psi>) ?I
           (eval_conj (fv_fo_fmla_list ?\<phi>) ?t\<phi>
             (fv_fo_fmla_list ?\<psi>) ?t\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 4)),
                   template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Ailamazyan.eval_disj",
     "[| fo_wf ?\<phi> ?I ?t\<phi>; fo_wf ?\<psi> ?I ?t\<psi> |]
      ==> fo_wf (Disj ?\<phi> ?\<psi>) ?I
           (eval_disj (fv_fo_fmla_list ?\<phi>) ?t\<phi>
             (fv_fo_fmla_list ?\<psi>) ?t\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 4)),
                   template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Ailamazyan.ad_agr_close_set_length",
     "[| ?z : ad_agr_close_set ?AD ?X; !!x. x : ?X ==> length x = ?n |]
      ==> length ?z = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 3), template_var 0))),
    ("Ailamazyan.ad_agr_list_eval",
     "[| \<Union> (set (map set_fo_term ?ts)) <= ?AD;
         ad_agr_list ?AD (?\<sigma> \<odot>e ?ts) ?zs |]
      ==> EX \<tau>. ?zs = \<tau> \<odot>e ?ts",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3))),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Ailamazyan.fo_nmlz_set",
     "set (fo_nmlz ?AD ?xs) =
      set ?xs Int Inl ` ?AD Un
      Inr ` {..<min (length ?xs) (card (set ?xs - Inl ` ?AD))}",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app (template_hole 11, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 12, template_var 0)),
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 1))),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 12, template_var 0)),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_var 1))))))))),
    ("Ailamazyan.fo_nmlz_set_card",
     "fo_nmlz ?AD ?xs = ?xs ==>
      set ?xs = set ?xs Int Inl ` ?AD Un Inr ` {..<card (Inr -` set ?xs)}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0),
          template_var 0)],
       template_equation
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 9, template_var 0)),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 1))),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 3),
                   template_app (template_hole 9, template_var 0))))))))),
    ("Ailamazyan.eval_ajoin",
     "[| fo_wf ?\<phi> ?I ?t\<phi>; fo_wf ?\<psi> ?I ?t\<psi> |]
      ==> fo_wf (Conj ?\<phi> (Neg ?\<psi>)) ?I
           (eval_ajoin (fv_fo_fmla_list ?\<phi>) ?t\<phi>
             (fv_fo_fmla_list ?\<psi>) ?t\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app (template_hole 2, template_var 1))),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 4)),
                   template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Ailamazyan.esat_UNIV_cong",
     "[| ad_agr ?\<phi> ?AD ?\<sigma> ?\<tau>; act_edom ?\<phi> ?I <= ?AD |]
      ==> esat ?\<phi> ?I ?\<sigma> UNIV = esat ?\<phi> ?I ?\<tau> UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 4), template_var 0),
          template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 0),
             template_var 2),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Ailamazyan.fo_nmlz_rem_nth_add_nth",
     "[| fo_nmlz ?AD ?zs = ?zs; ?i <= length ?zs |]
      ==> fo_nmlz ?AD (rem_nth ?i (fo_nmlz ?AD (add_nth ?i ?z ?zs))) = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)))),
         template_var 2))),
    ("Ailamazyan.ad_agr_list_subset",
     "[| set ?ms <= set ?ns;
         ad_agr_list ?X (map ?\<sigma> ?ns) (map ?\<sigma>' ?ns) |]
      ==> ad_agr_list ?X (map ?\<sigma> ?ms) (map ?\<sigma>' ?ms)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 4),
          template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4))
           ))),
    ("Ailamazyan.exists_fo_nmlzd",
     "[| length ?xs = length ?ys; distinct ?xs; fo_nmlzd ?AD ?ys |]
      ==> EX f. ?ys = fo_nmlz ?AD (map f ?xs)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ailamazyan.fo_nmlz_Cons",
     "fo_nmlz ?AD [?x] =
      (case ?x of Inl x => if x : ?AD then [Inl x] else [Inr 0]
       | Inr b => [Inr 0])",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app
        (template_app (template_app (template_hole 5, t_empty), t_empty),
         template_var 0))),
    ("Ailamazyan.fo_nmlzd_set",
     "fo_nmlzd ?AD ?xs ==>
      set ?xs =
      set ?xs Int Inl ` ?AD Un
      Inr ` {..<min (length ?xs) (card (Inr -` set ?xs))}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 11, template_var 0),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 1))),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_hole 5),
                     template_app
                      (template_hole 11, template_var 0)))))))))),
    ("Ailamazyan.esat_fv_cong",
     "(!!n. n : fv_fo_fmla ?\<phi> ==> ?\<sigma> n = ?\<sigma>' n) ==>
      esat ?\<phi> ?I ?\<sigma> ?X = esat ?\<phi> ?I ?\<sigma>' ?X",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 2),
           template_var 0)))),
    ("Ailamazyan.esat_exists_not_fv",
     "[| ?n ~: fv_fo_fmla ?\<phi>; ?X ~= {} |]
      ==> esat (Exists ?n ?\<phi>) ?I ?\<sigma> ?X =
          esat ?\<phi> ?I ?\<sigma> ?X",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app (template_hole 5, template_var 3))
                )
            ),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0),
           template_var 2)))),
    ("Ailamazyan.esat_forall_not_fv",
     "[| ?n ~: fv_fo_fmla ?\<phi>; ?X ~= {} |]
      ==> esat (Forall ?n ?\<phi>) ?I ?\<sigma> ?X =
          esat ?\<phi> ?I ?\<sigma> ?X",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app (template_hole 5, template_var 3))
                )
            ),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0),
           template_var 2)))),
    ("Ailamazyan.nall_tuples_rec_filter",
     "[| ?xs : nall_tuples_rec ?AD ?n (length ?xs);
         ?ys = filter (%x. ~ isl x) ?xs |]
      ==> ?ys : nall_tuples_rec {} ?n (length ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_app (template_hole 5, template_var 3)))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, t_empty), template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 0),
                 template_var 1),
               template_app (template_hole 5, template_var 0)))
           ))),
    ("Ailamazyan.nall_tuplesD",
     "?vs : nall_tuples ?AD ?n ==>
      length ?vs = ?n &
      set ?vs <= Inl ` ?AD Un Inr ` {..<?n} & fo_nmlzd ?AD ?vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 9, template_var 2)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app (template_hole 1, template_var 0))))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)))
           ))),
    ("Ailamazyan.rem_nth_sound",
     "[| distinct ?xs; pos ?n ?xs = Some ?i |]
      ==> rem_nth ?i (map ?\<sigma> ?xs) =
          map ?\<sigma> (filter ((~=) ?n) ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 3),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, t_empty), template_var 3))))),
    ("Ailamazyan.add_nth_rem_nth_map",
     "[| distinct ?xs; pos ?n ?xs = Some ?i |]
      ==> add_nth ?i ?a (rem_nth ?i (map ?\<sigma> ?xs)) =
          map (?\<sigma>(?n := ?a)) ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 4),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1)),
           template_var 4)))),
    ("Ailamazyan.fo_nmlz_add_nth_rem_nth",
     "[| fo_nmlz ?AD ?xs = ?xs; ?i < length ?xs |]
      ==> EX z. fo_nmlz ?AD (add_nth ?i z (fo_nmlz ?AD (rem_nth ?i ?xs))) =
                ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Ailamazyan.map_values_cong",
     "(!!x y. Mapping.lookup ?t x = Some y ==> ?f x y = ?f' x y) ==>
      Mapping.map_values ?f ?t = Mapping.map_values ?f' ?t",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Ailamazyan.card_wit_sub",
     "[| finite ?Z; card ?Z <= card {ts: ?X. EX z:?Z. ts = ?f z} |]
      ==> ?f ` ?Z <= ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 7, template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Ailamazyan.ad_agr_list_fv_list'",
     "[| \<Union> (set (map set_fo_term ?ts)) <= ?X;
         ad_agr_list ?X (map ?\<sigma> (fv_fo_terms_list ?ts))
          (map ?\<tau> (fv_fo_terms_list ?ts)) |]
      ==> ad_agr_list ?X (?\<sigma> \<odot>e ?ts) (?\<tau> \<odot>e ?ts)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3))),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 3))),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("Ailamazyan.fo_rep_fin",
     "[| fo_wf ?\<phi> ?I (?AD, ?n, ?X); fo_fin (?AD, ?n, ?X) |]
      ==> fo_rep (?AD, ?n, ?X) = map projl ` ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)))),
    ("Ailamazyan.ad_agr_close_sound",
     "[| ?ys : ad_agr_close ?Y ?xs; fo_nmlzd ?X ?xs; ?X Int ?Y = {} |]
      ==> fo_nmlzd (?X Un ?Y) ?ys & ad_agr_list ?X ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 0), template_var 2),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 3))
           ))),
    ("Ailamazyan.ad_agr_close_set_sound",
     "[| ?z : ad_agr_close_set (?AD - ?AD') ?X;
         !!x. x : ?X ==> fo_nmlzd ?AD' x; ?AD' <= ?AD |]
      ==> fo_nmlzd ?AD ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 3)
           ))),
    ("Ailamazyan.esat_UNIV_ad_agr_list",
     "[| ad_agr_list ?AD (map ?\<sigma> (fv_fo_fmla_list ?\<phi>))
          (map ?\<tau> (fv_fo_fmla_list ?\<phi>));
         act_edom ?\<phi> ?I <= ?AD |]
      ==> esat ?\<phi> ?I ?\<sigma> UNIV = esat ?\<phi> ?I ?\<tau> UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_var 2)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 0),
          template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 3),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Ailamazyan.ad_agr_close_complete",
     "[| ?X Int ?Y = {}; fo_nmlzd ?X ?xs; fo_nmlzd (?X Un ?Y) ?ys;
         ad_agr_list ?X ?xs ?ys |]
      ==> ?ys : ad_agr_close ?Y ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Ailamazyan.proj_fmla_esat_sat",
     "wf_fo_intp ?\<phi> ?I ==>
      proj_fmla ?\<phi> {\<sigma>. esat ?\<phi> ?I \<sigma> UNIV} Int
      range (map Inl) =
      map Inl ` proj_fmla ?\<phi> {\<sigma>. sat ?\<phi> ?I \<sigma>}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 1),
               template_app (template_hole 9, t_empty))),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, t_empty)))))),
    ("Ailamazyan.ext_tuple_set_length",
     "[| ?z : ext_tuple_set ?AD ?ns ?ns' ?X;
         !!x. x : ?X ==> length x = length ?ns |]
      ==> length ?z = length ?ns + length ?ns'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, template_var 4),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 1, template_var 1))))),
    ("Ailamazyan.ad_agr_list_rev_mono",
     "[| ?Y <= ?X; ad_agr_list ?Y ?ys ?xs; Inl -` set ?xs <= ?Y;
         Inl -` set ?ys <= ?Y |]
      ==> ad_agr_list ?X ?ys ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_app (template_hole 0, template_var 0)),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_app (template_hole 0, template_var 1)),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Ailamazyan.esat_UNIV_code",
     "esat_UNIV ?\<phi> ?I ?\<sigma> =
      (if wf_fo_intp ?\<phi> ?I
       then case eval_fmla ?\<phi> ?I of
            (AD, n, X) =>
              fo_nmlz (act_edom ?\<phi> ?I)
               (map ?\<sigma> (fv_fo_fmla_list ?\<phi>))
              : X
       else esat_UNIV ?\<phi> ?I ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Ailamazyan.ext_tuple_eq",
     "length ?fv_sub = length ?as ==>
      ext_tuple ?AD ?fv_sub ?fv_sub_comp ?as =
      (%fs. map snd (merge (zip ?fv_sub ?as) (zip ?fv_sub_comp fs))) `
      nall_tuples_rec ?AD (card (Inr -` set ?as)) (length ?fv_sub_comp)",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 3),
          template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 2)))),
             template_app (template_hole 13, template_var 0)))))),
    ("Ailamazyan.unify_vals_terms_complete",
     "[| ?\<sigma>'' \<odot>e ?ts = ?vs;
         !!n. ?\<sigma> n ~= None ==> ?\<sigma> n = Some (?\<sigma>'' n) |]
      ==> EX \<sigma>'.
             unify_vals_terms ?vs ?ts ?\<sigma> = Some \<sigma>'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 3), template_var 2),
          template_var 1),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ailamazyan.fo_nmlz_rec_sound",
     "[| ran ?m <= {..<?i};
         filter ((<=) ?i)
          (rremdups
            (List.map_filter (case_sum Map.empty Some)
              (fo_nmlz_rec ?i ?m ?AD ?xs))) =
         ?ns |]
      ==> ?ns = [?i..<?i + length ?ns]",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, template_var 4),
          template_app (template_hole 12, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 3)),
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, t_empty),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 4),
                    template_var 2),
                  template_var 1)))),
          template_var 0)],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 0)))))),
    ("Ailamazyan.sp_equiv_list_almost_same",
     "[| sp_equiv_list (?xs @ ?v # ?ys) (?xs @ ?w # ?ys);
         ?v : set ?xs Un set ?ys | ?w : set ?xs Un set ?ys |]
      ==> ?v = ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 3)),
                    template_app (template_hole 1, template_var 1)))),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_app (template_hole 1, template_var 1))))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Ailamazyan.ad_agr_list_fo_nmlzd_isl",
     "[| ad_agr_list ?X (map ?f ?xs) (map ?g ?xs); fo_nmlzd ?X (map ?f ?xs);
         ?x : set ?xs; isl (?f ?x) |]
      ==> ?f ?x = ?g ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_var 3, template_var 0))
            )],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Ailamazyan.proj_tuple_map",
     "[| sorted_distinct ?ns; sorted_distinct ?ms; set ?ns <= set ?ms |]
      ==> proj_tuple ?ns (zip ?ms (map ?\<sigma> ?ms)) = map ?\<sigma> ?ns",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 2)),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 1)),
              template_app (template_hole 6, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Ailamazyan.nall_tuples_rec_filter_rev",
     "[| ?ys : nall_tuples_rec {} ?n (length ?ys);
         ?ys = filter (%x. ~ isl x) ?xs; Inl -` set ?xs <= ?AD |]
      ==> ?xs : nall_tuples_rec ?AD ?n (length ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_var 2),
                template_app (template_hole 8, template_var 3)))
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 6, t_empty), template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_app (template_hole 0, template_var 1)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 10, template_var 0),
                 template_var 2),
               template_app (template_hole 8, template_var 1)))
           ))),
    ("Ailamazyan.distinct_set_zip",
     "[| length ?nsx = length ?xs; distinct ?nsx;
         (?a, ?b) : set (zip ?nsx ?xs); (?a, ?ba) : set (zip ?nsx ?xs) |]
      ==> ?b = ?ba",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 4),
          template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Ailamazyan.sat_code",
     "sat ?\<phi> ?I ?\<sigma> =
      (if wf_fo_intp ?\<phi> ?I
       then case eval_fmla ?\<phi> ?I of
            (AD, n, X) =>
              fo_nmlz (act_edom ?\<phi> ?I)
               (map (Inl o ?\<sigma>) (fv_fo_fmla_list ?\<phi>))
              : X
       else sat ?\<phi> ?I ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 12, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Ailamazyan.pairwise_take_drop",
     "[| pairwise ?P (set (zip ?xs ?ys)); length ?xs = length ?ys |]
      ==> pairwise ?P
           (set (zip (take ?i ?xs @ drop (Suc ?i) ?xs)
                  (take ?i ?ys @ drop (Suc ?i) ?ys)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 3),
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_var 0)),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 3, template_var 0)),
                     template_var 1)))))
           ))),
    ("Ailamazyan.proj_out_list",
     "finite ?AD ==>
      EX \<tau>.
         ad_agr_list ?AD (map ?\<sigma> ?ns) (map (Inl o \<tau>) ?ns) &
         (ALL j x. j : set ?ns --> ?\<sigma> j = Inl x --> \<tau> j = x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Ailamazyan.norm_proj_fmla_esat_sat",
     "wf_fo_intp ?\<phi> ?I ==>
      fo_nmlz (act_edom ?\<phi> ?I) `
      proj_fmla ?\<phi> {\<sigma>. esat ?\<phi> ?I \<sigma> UNIV} =
      fo_nmlz (act_edom ?\<phi> ?I) `
      map Inl ` proj_fmla ?\<phi> {\<sigma>. sat ?\<phi> ?I \<sigma>}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 9, template_var 1),
             template_app (template_hole 8, t_empty))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, t_empty))))))),
    ("Ailamazyan.fo_nmlz_Cons_Cons",
     "fo_nmlz ?AD [?x, ?x] =
      (case ?x of
       Inl x => if x : ?AD then [Inl x, Inl x] else [Inr 0, Inr 0]
       | Inr b => [Inr 0, Inr 0])",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6))),
       template_app
        (template_app (template_app (template_hole 5, t_empty), t_empty),
         template_var 0))),
    ("Ailamazyan.sat_ad_agr_list",
     "[| wf_fo_intp ?\<phi> ?I;
         ad_agr_list ?AD (map (Inl o ?\<sigma>) (fv_fo_fmla_list ?\<phi>))
          (map (Inl o ?\<tau>) (fv_fo_fmla_list ?\<phi>));
         act_edom ?\<phi> ?I <= ?AD |]
      ==> sat ?\<phi> ?I ?\<sigma> = sat ?\<phi> ?I ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 1)),
                  template_app (template_hole 4, template_var 4))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 0)),
                template_app (template_hole 4, template_var 4)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 4), template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 0)))),
    ("Ailamazyan.ad_agr_list_add_nth",
     "[| ?i <= length ?zs;
         ad_agr_list ?AD (add_nth ?i ?v ?zs) (add_nth ?i ?w ?zs);
         ?v ~= ?w |]
      ==> {?v, ?w} Int (Inl ` ?AD Un set ?zs) = {}",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 1),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 0),
                template_var 3))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 3))),
         template_hole 4))),
    ("Ailamazyan.fo_nmlzd_app_Inr",
     "[| Inr ?n ~: set ?xs; Inr ?n' ~: set ?xs;
         fo_nmlzd ?AD (?xs @ [Inr ?n]); fo_nmlzd ?AD (?xs @ [Inr ?n']) |]
      ==> ?n = ?n'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 3)),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 6, template_var 3)),
                  template_hole 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 6, template_var 1)),
                  template_hole 1)))
            )],
       template_equation (template_var 3, template_var 1))),
    ("Ailamazyan.proj_tuple_length",
     "[| sorted_distinct ?ns; sorted_distinct ?ms; set ?ns <= set ?ms;
         length ?ms = length ?xs |]
      ==> length (proj_tuple ?ns (zip ?ms ?xs)) = length ?ns",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 2)),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 1)),
              template_app (template_hole 7, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 3, template_var 2)))),
    ("Ailamazyan.map_fst_merge",
     "[| sorted_distinct (map fst ?nxs); sorted_distinct (map fst ?mys) |]
      ==> map fst (merge ?nxs ?mys) = sort (map fst ?nxs @ map fst ?mys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 1))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 0))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 0)))))),
    ("Ailamazyan.fo_nmlz_twice",
     "[| sorted_distinct ?ns; sorted_distinct ?ns'; set ?ns <= set ?ns' |]
      ==> fo_nmlz ?AD
           (proj_tuple ?ns (zip ?ns' (fo_nmlz ?AD (map ?\<sigma> ?ns')))) =
          fo_nmlz ?AD (map ?\<sigma> ?ns)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 3)),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 2)),
              template_app (template_hole 7, template_var 2))
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 3),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("Ailamazyan.esat_Pred",
     "[| ad_agr_sets ?FV ?S (\<Union> (set ` ?X)) ?\<sigma> ?\<tau>;
         fv_fo_terms_set ?ts <= ?FV; ?\<sigma> \<odot>e ?ts : map Inl ` ?X;
         ?t : set ?ts |]
      ==> ?\<sigma> \<cdot>e ?t = ?\<tau> \<cdot>e ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_var 6),
                    template_var 5),
                  template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_var 4))),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 1),
          template_var 6),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4)),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Ailamazyan.fo_nmlz_rec_set",
     "ran ?m <= {..<?i} ==>
      set (fo_nmlz_rec ?i ?m ?AD ?xs) Un Inr ` {..<?i} =
      set ?xs Int Inl ` ?AD Un
      Inr ` {..<?i + card (set ?xs - Inl ` ?AD - dom ?m)}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_app (template_hole 13, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app (template_hole 13, template_var 2))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 10, template_var 0)),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1))),
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 10, template_var 0)),
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 1))),
                     template_app
                      (template_hole 0, template_var 3)))))))))),
    ("Ailamazyan.add_nth_restrict",
     "[| fo_nmlz ?AD ?zs = ?zs; ?i <= length ?zs |]
      ==> EX z':Inl ` ?AD Un Inr ` {..<Suc (card (Inr -` set ?zs))}.
             fo_nmlz ?AD (add_nth ?i ?z ?zs) =
             fo_nmlz ?AD (add_nth ?i z' ?zs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 3),
            template_var 2),
          template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 12, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 6),
                           template_app
                            (template_hole 1, template_var 2)))))))),
             t_empty)
           ))),
    ("Ailamazyan.fin_ad_agr_list_iff",
     "[| finite ?AD; !!vs. vs : ?Z ==> length vs = ?n;
         ?Z = {ts. EX ts':?X. ad_agr_list ?AD (map Inl ts) ts'} |]
      ==> finite ?Z = (\<Union> (set ` ?Z) <= ?AD)",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_equation
         (template_var 2, template_app (template_hole 10, t_empty))],
       template_equation
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2))),
           template_var 3)))),
    ("Ailamazyan.list_induct2_rev",
     "[| length ?xs = length ?ys; ?P [] [];
         !!x y xs ys. ?P xs ys ==> ?P (xs @ [x]) (ys @ [y]) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Ailamazyan.sp_equiv_list_fv",
     "[| !!i. i : fv_fo_terms_set ?ts ==>
              ad_equiv_pair ?X (?\<sigma> i, ?\<tau> i);
         \<Union> (set_fo_term ` set ?ts) <= ?X;
         sp_equiv ?\<sigma> ?\<tau> (fv_fo_terms_set ?ts) |]
      ==> sp_equiv_list (map ((\<cdot>e) ?\<sigma>) ?ts)
           (map ((\<cdot>e) ?\<tau>) ?ts)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app (template_hole 4, template_var 3))),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_app (template_hole 11, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 3))
           ))),
    ("Ailamazyan.esat_Pred_inf",
     "[| fv_fo_terms_set ?ts <= ?FV; fv_fo_terms_set ?ts <= ?S;
         ad_agr_sets ?FV ?S ?AD ?\<sigma> ?\<tau>;
         ad_agr_list ?AD (?\<sigma> \<odot>e ?ts) ?vs;
         \<Union> (set_fo_term ` set ?ts) <= ?AD |]
      ==> ad_agr_list ?AD (?\<tau> \<odot>e ?ts) ?vs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 6),
          template_var 5),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 6),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 6)),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_app (template_hole 0, template_var 6))),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 6)),
             template_var 0)
           ))),
    ("Ailamazyan.fo_nmlz_rec_shift",
     "[| fo_nmlz_rec ?i (id_map ?i) ?AD ?xs = ?xs;
         ?i' = card (Inr -` (Inr ` {..<?i} Un set (take ?n ?xs)));
         ?n <= length ?xs |]
      ==> fo_nmlz_rec ?i' (id_map ?i') ?AD (drop ?n ?xs) = drop ?n ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_app (template_hole 12, template_var 4)),
              template_var 3),
            template_var 2),
          template_var 2),
        template_equation
         (template_var 1,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 8),
                    template_app (template_hole 5, template_var 4))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_var 2)))))),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 13, template_var 1),
               template_app (template_hole 12, template_var 1)),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Ailamazyan.combine_map2",
     "[| length ?ys = length ?xs; length ?ys' = length ?xs'; distinct ?xs;
         distinct ?xs'; set ?xs Int set ?xs' = {} |]
      ==> EX f. ?ys = map f ?xs & ?ys' = map f ?xs'",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ailamazyan.main",
     "[| ad_agr ?\<phi> ?AD ?\<sigma> ?\<tau>; act_edom ?\<phi> ?I <= ?AD;
         Inl ` ?AD Un Inr ` {..<d ?\<phi>} <= ?X;
         ?\<tau> ` fv_fo_fmla ?\<phi> <= ?X |]
      ==> esat ?\<phi> ?I ?\<sigma> UNIV = esat ?\<phi> ?I ?\<tau> ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 12, template_var 5),
            template_var 1),
          template_var 4),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 4)),
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 5)))),
          template_var 0),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 2),
            template_app (template_hole 3, template_var 5)),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1),
             template_var 3),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1),
             template_var 2),
           template_var 0)))),
    ("Ailamazyan.merge_map",
     "[| sorted_distinct ?ns; sorted_distinct ?ms;
         set ?ns Int set ?ms = {} |]
      ==> map snd
           (merge (zip ?ns (map ?\<sigma> ?ns))
             (zip ?ms (map ?\<sigma> ?ms))) =
          map ?\<sigma> (sort (?ns @ ?ms))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 2)),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 1)),
              template_app (template_hole 12, template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app (template_hole 9, template_var 1)),
          template_hole 8)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 2))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Ailamazyan.mapping_join_cross_with",
     "(!!x x'. [| x : ?t; x' : ?t'; ?h x ~= ?h' x' |] ==> ?f x x' = {}) ==>
      set_of_idx
       (mapping_join (cross_with ?f) (cluster (Some o ?h) ?t)
         (cluster (Some o ?h') ?t')) =
      cross_with ?f ?t ?t'",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 2)),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 3))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_var 4),
           template_var 3)))),
    ("Ailamazyan.proj_tuple_merge",
     "[| sorted_distinct (map fst ?nxs); sorted_distinct (map fst ?mys);
         set (map fst ?nxs) Int set (map fst ?mys) = {} |]
      ==> proj_tuple (map fst ?nxs) (merge ?nxs ?mys) = map snd ?nxs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_var 1))),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_var 0))),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 0)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 1))),
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 0))),
          template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Ailamazyan.ad_agr_close_correct",
     "[| ?AD' <= ?AD;
         !!\<sigma> \<tau>.
            ad_agr_sets (set (fv_fo_fmla_list ?\<phi>))
             (set (fv_fo_fmla_list ?\<phi>)) ?AD' \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R) |]
      ==> \<Union>
           (ad_agr_close (?AD - ?AD') `
            fo_nmlz ?AD' ` proj_fmla ?\<phi> ?R) =
          fo_nmlz ?AD ` proj_fmla ?\<phi> ?R",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Ailamazyan.ad_agr_list_add",
     "[| ad_agr_list ?AD ?xs ?ys; ?i <= length ?xs |]
      ==> EX z':Inl ` ?AD Un Inr ` {..<Suc (card (Inr -` set ?ys))} Un
                set ?ys.
             ad_agr_list ?AD (take ?i ?xs @ ?z # drop ?i ?xs)
              (take ?i ?ys @ z' # drop ?i ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 15, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_hole 9),
                               template_app
                                (template_hole 4, template_var 2)))))))),
                 template_app (template_hole 4, template_var 2))),
             t_empty)
           ))),
    ("Ailamazyan.fo_nmlz_rec_idem",
     "[| Inl -` set ?ys <= ?AD;
         rremdups (List.map_filter (case_sum Map.empty Some) ?ys) = ?ns;
         set (filter (%n. n < ?i) ?ns) <= {..<?i};
         filter ((<=) ?i) ?ns = [?i..<?i + ?k] |]
      ==> fo_nmlz_rec ?i (id_map ?i) ?AD ?ys = ?ys",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 19, template_hole 18),
            template_app (template_hole 17, template_var 4)),
          template_var 3),
        template_equation
         (template_app
           (template_hole 15,
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, t_empty),
                  template_hole 11)),
              template_var 4)),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, t_empty), template_var 2)),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 5, template_var 1)),
            template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 1)),
             template_var 3),
           template_var 4),
         template_var 4))),
    ("Ailamazyan.proj_fmla_conj_sub",
     "act_edom ?\<psi> ?I <= ?AD ==>
      fo_nmlz ?AD `
      proj_fmla (Conj ?\<phi> ?\<psi>)
       {\<sigma>. esat ?\<phi> ?I \<sigma> UNIV} Int
      fo_nmlz ?AD `
      proj_fmla (Conj ?\<phi> ?\<psi>)
       {\<sigma>. esat ?\<psi> ?I \<sigma> UNIV}
      <= fo_nmlz ?AD `
         proj_fmla (Conj ?\<phi> ?\<psi>)
          {\<sigma>. esat (Conj ?\<phi> ?\<psi>) ?I \<sigma> UNIV}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 3), template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 3)),
                 template_app (template_hole 2, t_empty)))),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 3)),
               template_app (template_hole 2, t_empty)))),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 3)),
             template_app (template_hole 2, t_empty)))))),
    ("Ailamazyan.main_cor_inf",
     "[| ad_agr ?\<phi> ?AD ?\<sigma> ?\<tau>; act_edom ?\<phi> ?I <= ?AD;
         d ?\<phi> <= ?n;
         ?\<tau> ` fv_fo_fmla ?\<phi> <= Inl ` ?AD Un Inr ` {..<?n} |]
      ==> esat ?\<phi> ?I ?\<sigma> UNIV =
          esat ?\<phi> ?I ?\<tau> (Inl ` ?AD Un Inr ` {..<?n})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 15, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 13, template_var 5),
            template_var 1),
          template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 5),
          template_var 0),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 2),
            template_app (template_hole 8, template_var 5)),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 4)),
            template_app
             (template_app (template_hole 9, template_hole 4),
              template_app (template_hole 3, template_var 0))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1),
             template_var 3),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1),
             template_var 2),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 4)),
             template_app
              (template_app (template_hole 9, template_hole 4),
               template_app (template_hole 3, template_var 0))))))),
    ("Ailamazyan.ad_agr_close_set_correct",
     "[| ?AD' <= ?AD; sorted_distinct ?ns;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?ns) (set ?ns) ?AD' \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R) |]
      ==> \<Union>
           (ad_agr_close (?AD - ?AD') ` fo_nmlz ?AD' ` proj_vals ?R ?ns) =
          fo_nmlz ?AD ` proj_vals ?R ?ns",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_var 1)),
              template_app (template_hole 13, template_var 1))
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Ailamazyan.proj_out",
     "[| wf_fo_intp ?\<phi> ?I; esat ?\<phi> ?I ?\<sigma> UNIV |]
      ==> EX \<tau>.
             esat ?\<phi> ?I (Inl o \<tau>) UNIV &
             (ALL i x.
                 i : fv_fo_fmla ?\<phi> & ?\<sigma> i = Inl x -->
                 \<tau> i = x) &
             ad_agr_list (act_edom ?\<phi> ?I)
              (map ?\<sigma> (fv_fo_fmla_list ?\<phi>))
              (map (Inl o \<tau>) (fv_fo_fmla_list ?\<phi>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 15)
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("Ailamazyan.insort_aux_le",
     "[| ALL x:set ?nxs. ?n <= fst x; ALL x:set ?mys. ?m <= fst x;
         ?n <= ?m |]
      ==> insort ?n (sort (map fst ?nxs @ ?m # map fst ?mys)) =
          ?n # sort (map fst ?nxs @ ?m # map fst ?mys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              t_empty)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 2),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 10),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_hole 7),
                   template_var 1))))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 10),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_hole 7),
                   template_var 1)))))))),
    ("Ailamazyan.insort_aux_gt",
     "[| ALL x:set ?nxs. ?n <= fst x; ALL x:set ?mys. ?m <= fst x;
         ~ ?n <= ?m |]
      ==> insort ?n (sort (map fst ?nxs @ ?m # map fst ?mys)) =
          ?m # insort ?n (sort (map fst ?nxs @ map fst ?mys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              t_empty)
            ),
        template_negation
         (
            template_inequation
             (less_equals, template_var 2, template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 2),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 11),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_hole 8),
                   template_var 1))))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 5, t_empty), template_var 2),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 11),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 0, template_hole 8),
                   template_var 1)))))))),
    ("Ailamazyan.set_fo_nmlz_add_nth_rem_nth",
     "[| ?j < length ?xs; !!x. x : ?X ==> fo_nmlz ?AD x = x;
         !!x. x : ?X ==> ?j < length x |]
      ==> {ts: ?X.
           EX z. ts =
                 fo_nmlz ?AD
                  (add_nth ?j z (fo_nmlz ?AD (rem_nth ?j ?xs)))} =
          {y: ?X.
           fo_nmlz ?AD (rem_nth ?j y) = fo_nmlz ?AD (rem_nth ?j ?xs)}",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Ailamazyan.ad_agr_map",
     "[| length ?xs = length ?ys; inj_on ?m (dom ?m);
         !!x y.
            (x, y) : set (zip ?xs ?ys) ==>
            case x of
            Inl x' =>
              if x' : ?AD then x = y
              else ?m x = Some y &
                   (case y of Inl z => z ~: ?AD | Inr x => True)
            | Inr n =>
                ?m x = Some y &
                (case y of Inl z => z ~: ?AD | Inr x => True) |]
      ==> ad_agr_list ?AD ?xs ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 17, template_var 3),
          template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app (template_hole 15, template_var 1))
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("Ailamazyan.merge_map'",
     "[| sorted_distinct (map fst ?nxs); sorted_distinct (map fst ?mys);
         fst ` set ?nxs Int fst ` set ?mys = {};
         map snd ?nxs = map ?\<sigma> (map fst ?nxs);
         map snd ?mys = map ?\<sigma> (map fst ?mys) |]
      ==> map snd (merge ?nxs ?mys) =
          map ?\<sigma> (sort (map fst ?nxs @ map fst ?mys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_var 2))),
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_var 1))),
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 1)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 13),
                template_app (template_hole 8, template_var 2))),
            template_app
             (template_app (template_hole 9, template_hole 13),
              template_app (template_hole 8, template_var 1))),
          template_hole 7),
        template_equation
         (template_app
           (template_app (template_hole 5, template_hole 4),
            template_var 2),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_app (template_hole 14, template_hole 13),
              template_var 2))),
        template_equation
         (template_app
           (template_app (template_hole 5, template_hole 4),
            template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_app (template_hole 14, template_hole 13),
              template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_var 2)),
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_var 1))))))),
    ("Ailamazyan.idx_join",
     "[| !!vs. vs : ?X\<phi> ==>
               fo_nmlzd ?AD vs & length vs = length ?ns\<phi>;
         !!vs. vs : ?X\<psi> ==>
               fo_nmlzd ?AD vs & length vs = length ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?ns = filter (%n. n : set ?ns\<psi>) ?ns\<phi> |]
      ==> idx_join ?AD ?ns ?ns\<phi> ?X\<phi> ?ns\<psi> ?X\<psi> =
          eval_conj_set ?AD ?ns\<phi> ?X\<phi> ?ns\<psi> ?X\<psi>",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 3)),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 1)),
              template_app (template_hole 7, template_var 1))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 5, t_empty), template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_var 3),
               template_var 5),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 5),
             template_var 1),
           template_var 2)))),
    ("Ailamazyan.eval_conj_tuple_empty",
     "[| fo_nmlzd ?Z ?xs; fo_nmlzd ?Z ?ys; length ?nsx = length ?xs;
         length ?nsy = length ?ys; sorted_distinct ?nsx;
         sorted_distinct ?nsy; ?ns = filter (%n. n : set ?nsy) ?nsx;
         fo_nmlz ?Z (proj_tuple ?ns (zip ?nsx ?xs)) ~=
         fo_nmlz ?Z (proj_tuple ?ns (zip ?nsy ?ys)) |]
      ==> eval_conj_tuple ?Z ?nsx ?nsy ?xs ?ys = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 5),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 17, template_var 2),
          template_app (template_hole 16, template_var 4)),
        template_equation
         (template_app (template_hole 17, template_var 1),
          template_app (template_hole 16, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 2)),
              template_app (template_hole 12, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 1)),
              template_app (template_hole 12, template_var 1))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 10, t_empty), template_var 2)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 4))),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 3))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 3),
         template_hole 0))),
    ("Ailamazyan.eval_conj_set_correct",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi> |]
      ==> eval_conj_set ?AD ?ns\<phi> ?X\<phi> ?ns\<psi> ?X\<psi> =
          ext_tuple_set ?AD ?ns\<phi> ?ns\<phi>' ?X\<phi> Int
          ext_tuple_set ?AD ?ns\<psi> ?ns\<psi>' ?X\<psi>",
     template_implication
      ([template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 14, t_empty), template_var 6)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 14, t_empty), template_var 7)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 7))),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 6))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 7)),
              template_app (template_hole 3, template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 6)),
              template_app (template_hole 3, template_var 6))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 7),
               template_var 4),
             template_var 6),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 7),
                 template_var 8),
               template_var 4)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 6),
               template_var 5),
             template_var 1))))),
    ("Ailamazyan.combine_map3",
     "[| length ?ys = length ?xs; length ?ys' = length ?xs';
         length ?ys'' = length ?xs''; distinct ?xs; distinct ?xs';
         distinct ?xs''; set ?xs Int set ?xs' = {};
         set ?xs Int set ?xs'' = {}; set ?xs' Int set ?xs'' = {} |]
      ==> EX f. ?ys = map f ?xs & ?ys' = map f ?xs' & ?ys'' = map f ?xs''",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app (template_hole 9, template_var 4)),
        template_equation
         (template_app (template_hole 10, template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 4)),
            template_app (template_hole 5, template_var 2)),
          template_hole 4),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 4)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Ailamazyan.extend_\<tau>",
     "[| ad_agr_sets (?FV - {?n}) (?S - {?n}) ?X ?\<sigma> ?\<tau>;
         ?S <= ?FV; finite ?S; ?\<tau> ` (?FV - {?n}) <= ?Z;
         Inl ` ?X Un
         Inr `
         {..<max 1
              (card (Inr -` ?\<tau> ` (?S - {?n})) +
               (if ?n : ?S then 1 else 0))}
         <= ?Z |]
      ==> EX k:?Z.
             ad_agr_sets ?FV ?S ?X (?\<sigma>(?n := ?x))
              (?\<tau>(?n := k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 22,
                      template_app
                       (template_app (template_hole 21, template_var 7),
                        template_app
                         (template_app (template_hole 20, template_var 6),
                          template_hole 19))),
                    template_app
                     (template_app (template_hole 21, template_var 5),
                      template_app
                       (template_app (template_hole 20, template_var 6),
                        template_hole 19))),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 5, template_var 7),
        template_predicate
         (template_app (template_hole 17, template_var 5)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 15, template_var 2),
            template_app
             (template_app (template_hole 21, template_var 7),
              template_app
               (template_app (template_hole 20, template_var 6),
                template_hole 19))),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_var 4)),
            template_app
             (template_app (template_hole 15, template_hole 11),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 5, template_hole 11),
                          template_app
                           (template_app (template_hole 15, template_var 2),
                            template_app
                             (template_app
                               (template_hole 21, template_var 5),
                              template_app
                               (template_app
                                 (template_hole 20, template_var 6),
                                template_hole 19)))))),
                    template_app
                     (template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 3, template_var 6),
                            template_var 5)),
                        template_hole 8),
                      template_hole 2)))))),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Ailamazyan.fo_nmlz_rec_map",
     "[| inj_on ?m (dom ?m); ran ?m <= {..<?i} |]
      ==> EX m'.
             inj_on m' (dom m') &
             (ALL n. ?m n ~= None --> m' n = ?m n) &
             (ALL (x, y):set (zip ?xs (fo_nmlz_rec ?i ?m ?AD ?xs)).
                 case x of
                 Inl x' =>
                   if x' : ?AD then x = y
                   else EX j. m' (Inl x') = Some j & y = Inr j
                 | Inr n => EX j. m' (Inr n) = Some j & y = Inr j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 3),
              template_app (template_hole 23, template_var 3))
            ),
        template_inequation
         (less_equals, template_app (template_hole 21, template_var 3),
          template_app (template_hole 20, template_var 2))],
       template_predicate (template_app (template_hole 19, t_empty)))),
    ("Ailamazyan.add_nth_iff_card",
     "[| !!xs. xs : ?X ==> fo_nmlz ?AD xs = xs;
         !!xs. xs : ?X ==> ?i < length xs; fo_nmlz ?AD ?zs = ?zs;
         ?i <= length ?zs; finite ?AD; finite ?X |]
      ==> (ALL z. fo_nmlz ?AD (add_nth ?i z ?zs) : ?X) =
          (Suc (card ?AD + card (Inr -` set ?zs))
           <= card {ts: ?X. EX z. ts = fo_nmlz ?AD (add_nth ?i z ?zs)})",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 2),
            template_var 0),
          template_var 0),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 17, template_var 0)),
        template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (template_app (template_hole 14, template_var 3))],
       template_equation
        (template_app (template_hole 12, t_empty),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 2)),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 0)))))),
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))))),
    ("Ailamazyan.ext_tuple_correct",
     "[| sorted_distinct ?fv_sub; sorted_distinct ?fv_sub_comp;
         sorted_distinct ?fv_all; set ?fv_sub Int set ?fv_sub_comp = {};
         set ?fv_sub Un set ?fv_sub_comp = set ?fv_all;
         ?ass = fo_nmlz ?AD ` proj_vals ?R ?fv_sub;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?fv_sub) (set ?fv_sub) ?AD \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R) |]
      ==> ext_tuple_set ?AD ?fv_sub ?fv_sub_comp ?ass =
          fo_nmlz ?AD ` proj_vals ?R ?fv_all",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_var 5)),
              template_app (template_hole 14, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_var 4)),
              template_app (template_hole 14, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_var 3)),
              template_app (template_hole 14, template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 5)),
            template_app (template_hole 11, template_var 4)),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 11, template_var 5)),
            template_app (template_hole 11, template_var 4)),
          template_app (template_hole 11, template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 5))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 5),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 3))))),
    ("Ailamazyan.map_values_cluster",
     "[| !!w z Z.
            [| Z <= ?X; z : Z; w : ?f (?h z) {z} |] ==> w : ?f (?h z) Z;
         !!w z Z.
            [| Z <= ?X; z : Z; w : ?f (?h z) Z |]
            ==> EX z':Z. w : ?f (?h z) {z'} |]
      ==> set_of_idx (Mapping.map_values ?f (cluster (Some o ?h) ?X)) =
          (UN x:?X. ?f (?h x) {x})",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0)),
               template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Ailamazyan.ext_tuple_sound",
     "[| sorted_distinct ?fv_sub; sorted_distinct ?fv_sub_comp;
         sorted_distinct ?fv_all; set ?fv_sub Int set ?fv_sub_comp = {};
         set ?fv_sub Un set ?fv_sub_comp = set ?fv_all;
         ?ass = fo_nmlz ?AD ` proj_vals ?R ?fv_sub;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?fv_sub) (set ?fv_sub) ?AD \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R);
         ?xs
         : fo_nmlz ?AD `
           \<Union> (ext_tuple ?AD ?fv_sub ?fv_sub_comp ` ?ass) |]
      ==> ?xs : fo_nmlz ?AD ` proj_vals ?R ?fv_all",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 6)),
              template_app (template_hole 17, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 5)),
              template_app (template_hole 17, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 4)),
              template_app (template_hole 17, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 6)),
            template_app (template_hole 14, template_var 5)),
          template_hole 13),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 14, template_var 6)),
            template_app (template_hole 14, template_var 5)),
          template_app (template_hole 14, template_var 4)),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 6))),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app (template_hole 0, template_var 2),
                          template_var 6),
                        template_var 5)),
                    template_var 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_var 2)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 4)))
           ))),
    ("Ailamazyan.ext_tuple_sound",
     "[| sorted_distinct ?fv_sub; sorted_distinct ?fv_sub_comp;
         sorted_distinct ?fv_all; set ?fv_sub Int set ?fv_sub_comp = {};
         set ?fv_sub Un set ?fv_sub_comp = set ?fv_all;
         ?ass = fo_nmlz ?AD ` proj_vals ?R ?fv_sub;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?fv_sub) (set ?fv_sub) ?AD \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R);
         ?xs
         : fo_nmlz ?AD `
           \<Union> (ext_tuple ?AD ?fv_sub ?fv_sub_comp ` ?ass) |]
      ==> fo_nmlz ?AD (proj_tuple ?fv_sub (zip ?fv_all ?xs)) : ?ass",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_var 6)),
              template_app (template_hole 19, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_var 5)),
              template_app (template_hole 19, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_var 4)),
              template_app (template_hole 19, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 17,
              template_app (template_hole 16, template_var 6)),
            template_app (template_hole 16, template_var 5)),
          template_hole 15),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 16, template_var 6)),
            template_app (template_hole 16, template_var 5)),
          template_app (template_hole 16, template_var 4)),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 2)),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 6))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 2)),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app
                         (template_app (template_hole 2, template_var 2),
                          template_var 6),
                        template_var 5)),
                    template_var 3))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 11, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)))),
             template_var 3)
           ))),
    ("Ailamazyan.ext_tuple_complete",
     "[| sorted_distinct ?fv_sub; sorted_distinct ?fv_sub_comp;
         sorted_distinct ?fv_all; set ?fv_sub Int set ?fv_sub_comp = {};
         set ?fv_sub Un set ?fv_sub_comp = set ?fv_all;
         ?ass = fo_nmlz ?AD ` proj_vals ?R ?fv_sub;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?fv_sub) (set ?fv_sub) ?AD \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R);
         ?xs = fo_nmlz ?AD (map ?\<sigma> ?fv_all); ?\<sigma> : ?R |]
      ==> ?xs
          : fo_nmlz ?AD `
            \<Union> (ext_tuple ?AD ?fv_sub ?fv_sub_comp ` ?ass)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_var 7)),
              template_app (template_hole 19, template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_var 6)),
              template_app (template_hole 19, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_var 5)),
              template_app (template_hole 19, template_var 5))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 17,
              template_app (template_hole 16, template_var 7)),
            template_app (template_hole 16, template_var 6)),
          template_hole 15),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 16, template_var 7)),
            template_app (template_hole 16, template_var 6)),
          template_app (template_hole 16, template_var 5)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 3)),
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 7))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 5))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 3)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 7),
                       template_var 6)),
                   template_var 4))))
           ))),
    ("Ailamazyan.eval_conj_tuple_close_empty",
     "[| fo_nmlzd ?X ?xs; fo_nmlzd ?Y ?ys; length ?nsx = length ?xs;
         length ?nsy = length ?ys; sorted_distinct ?nsx;
         sorted_distinct ?nsy; ?ns = filter (%n. n : set ?nsy) ?nsx;
         fo_nmlz (?X Int ?Y) (proj_tuple ?ns (zip ?nsx ?xs)) ~=
         fo_nmlz (?X Int ?Y) (proj_tuple ?ns (zip ?nsy ?ys));
         ?xs' : ad_agr_close (?X Un ?Y - ?X) ?xs;
         ?ys' : ad_agr_close (?X Un ?Y - ?Y) ?ys |]
      ==> eval_conj_tuple (?X Un ?Y) ?nsx ?nsy ?xs' ?ys' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app (template_hole 22, template_var 4),
          template_app (template_hole 21, template_var 7)),
        template_equation
         (template_app (template_hole 22, template_var 3),
          template_app (template_hole 21, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 4)),
              template_app (template_hole 17, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 3)),
              template_app (template_hole 17, template_var 3))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 15, t_empty), template_var 4)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 8),
                    template_var 6)),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 7))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 8),
                    template_var 6)),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 6)),
                    template_var 8)),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 6)),
                    template_var 6)),
                template_var 5))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 8),
                     template_var 6)),
                 template_var 4),
               template_var 3),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Ailamazyan.sz_fmla_induct",
     "[| !!r ts. ?P (Pred r ts); !!b. ?P (Bool b); !!t t'. ?P (Eqa t t');
         !!\<phi>. ?P \<phi> ==> ?P (Neg \<phi>);
         !!\<phi> \<psi>.
            [| ?P \<phi>; ?P \<psi> |] ==> ?P (Conj \<phi> \<psi>);
         !!\<phi> \<psi>.
            [| ?P \<phi>; ?P \<psi> |] ==> ?P (Disj \<phi> \<psi>);
         !!n \<phi>. ?P \<phi> ==> ?P (Exists n \<phi>);
         !!n \<phi>. ?P (Exists n (Neg \<phi>)) ==> ?P (Forall n \<phi>) |]
      ==> ?P ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Ailamazyan.proj_tuple_correct",
     "[| sorted_distinct ?fv_sub; sorted_distinct ?fv_sub_comp;
         sorted_distinct ?fv_all; set ?fv_sub Int set ?fv_sub_comp = {};
         set ?fv_sub Un set ?fv_sub_comp = set ?fv_all;
         ?ass = fo_nmlz ?AD ` proj_vals ?R ?fv_sub;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?fv_sub) (set ?fv_sub) ?AD \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R);
         fo_nmlz ?AD ?xs = ?xs; length ?xs = length ?fv_all |]
      ==> (?xs
           : fo_nmlz ?AD `
             \<Union> (ext_tuple ?AD ?fv_sub ?fv_sub_comp ` ?ass)) =
          (fo_nmlz ?AD (proj_tuple ?fv_sub (zip ?fv_all ?xs)) : ?ass)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_var 6)),
              template_app (template_hole 23, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_var 5)),
              template_app (template_hole 23, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_var 4)),
              template_app (template_hole 23, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 6)),
            template_app (template_hole 20, template_var 5)),
          template_hole 19),
        template_equation
         (template_app
           (template_app
             (template_hole 18,
              template_app (template_hole 20, template_var 6)),
            template_app (template_hole 20, template_var 5)),
          template_app (template_hole 20, template_var 4)),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 2)),
            template_app
             (template_app (template_hole 14, template_var 1),
              template_var 6))),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 15, template_var 2),
            template_var 0),
          template_var 0),
        template_equation
         (template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 4))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 16,
               template_app (template_hole 15, template_var 2)),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 6),
                     template_var 5)),
                 template_var 3)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 15, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0)))),
           template_var 3)))),
    ("Ailamazyan.proj_tuple_sound",
     "[| sorted_distinct ?fv_sub; sorted_distinct ?fv_sub_comp;
         sorted_distinct ?fv_all; set ?fv_sub Int set ?fv_sub_comp = {};
         set ?fv_sub Un set ?fv_sub_comp = set ?fv_all;
         ?ass = fo_nmlz ?AD ` proj_vals ?R ?fv_sub;
         !!\<sigma> \<tau>.
            ad_agr_sets (set ?fv_sub) (set ?fv_sub) ?AD \<sigma> \<tau> ==>
            (\<sigma> : ?R) = (\<tau> : ?R);
         fo_nmlz ?AD ?xs = ?xs; length ?xs = length ?fv_all;
         fo_nmlz ?AD (proj_tuple ?fv_sub (zip ?fv_all ?xs)) : ?ass |]
      ==> ?xs
          : fo_nmlz ?AD `
            \<Union> (ext_tuple ?AD ?fv_sub ?fv_sub_comp ` ?ass)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_var 6)),
              template_app (template_hole 23, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_var 5)),
              template_app (template_hole 23, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_var 4)),
              template_app (template_hole 23, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 6)),
            template_app (template_hole 20, template_var 5)),
          template_hole 19),
        template_equation
         (template_app
           (template_app
             (template_hole 18,
              template_app (template_hole 20, template_var 6)),
            template_app (template_hole 20, template_var 5)),
          template_app (template_hole 20, template_var 4)),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 2)),
            template_app
             (template_app (template_hole 14, template_var 1),
              template_var 6))),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 15, template_var 2),
            template_var 0),
          template_var 0),
        template_equation
         (template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 15, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 0)))),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app
                (template_hole 16,
                 template_app (template_hole 15, template_var 2)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 6),
                       template_var 5)),
                   template_var 3))))
           ))),
    ("Ailamazyan.ad_agr_close_rec_complete",
     "[| fo_nmlz_rec ?j (id_map ?j) ?X ?xs = ?xs; ?X Int ?AD = {};
         ?X Int ?Y = {}; ?Y Int ?AD = {}; inj_on ?m (dom ?m);
         dom ?m = {..<?j}; ran ?m = Inl ` ?Y Un Inr ` {..<?i}; ?i <= ?j;
         !!n b.
            (Inr n, b) : set (zip ?xs ?ys) ==>
            case ?m n of None => b ~: ran ?m | Some v => v = b;
         fo_nmlz_rec ?i (id_map ?i) (?X Un ?Y Un ?AD) ?ys = ?ys;
         ad_agr_list ?X ?xs ?ys |]
      ==> ?ys : ad_agr_close_rec ?i ?m ?AD ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 30, template_var 7),
                template_app (template_hole 29, template_var 7)),
              template_var 6),
            template_var 5),
          template_var 5),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 6),
            template_var 4),
          template_hole 26),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 6),
            template_var 3),
          template_hole 26),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 3),
            template_var 4),
          template_hole 26),
        template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 2),
              template_app (template_hole 24, template_var 2))
            ),
        template_equation
         (template_app (template_hole 24, template_var 2),
          template_app (template_hole 22, template_var 7)),
        template_equation
         (template_app (template_hole 20, template_var 2),
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app (template_hole 18, template_hole 17),
                template_var 3)),
            template_app
             (template_app (template_hole 16, template_hole 15),
              template_app (template_hole 22, template_var 1)))),
        template_inequation (less_equals, template_var 1, template_var 7),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 30, template_var 1),
                template_app (template_hole 29, template_var 1)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 3)),
                template_var 4)),
            template_var 0),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 6),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 4),
               template_var 5))
           ))),
    ("Ailamazyan.eval_conj_tuple_empty2",
     "[| fo_nmlzd ?Z ?xs; fo_nmlzd ?Z ?ys; length ?nsx = length ?xs;
         length ?nsy = length ?ys; sorted_distinct ?nsx;
         sorted_distinct ?nsy; sorted_distinct ?ns;
         set ?ns <= set ?nsx Int set ?nsy;
         fo_nmlz ?Z (proj_tuple ?ns (zip ?nsx ?xs)) ~=
         fo_nmlz ?Z (proj_tuple ?ns (zip ?nsy ?ys)) |
         proj_tuple ?ns (zip ?nsx ?xs) ~= proj_tuple ?ns (zip ?nsy ?ys) &
         (ALL x:set (proj_tuple ?ns (zip ?nsx ?xs)). isl x) &
         (ALL y:set (proj_tuple ?ns (zip ?nsy ?ys)). isl y) |]
      ==> eval_conj_tuple ?Z ?nsx ?nsy ?xs ?ys = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 5),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 20, template_var 2),
          template_app (template_hole 19, template_var 4)),
        template_equation
         (template_app (template_hole 20, template_var 1),
          template_app (template_hole 19, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_hole 16),
                  template_var 2)),
              template_app (template_hole 15, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_hole 16),
                  template_var 1)),
              template_app (template_hole 15, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_hole 16),
                  template_var 0)),
              template_app (template_hole 15, template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 0),
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 13, template_var 2)),
            template_app (template_hole 13, template_var 1))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, template_var 5),
                        template_app
                         (template_app (template_hole 7, template_var 0),
                          template_app
                           (template_app (template_hole 6, template_var 2),
                            template_var 4)))),
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_app
                         (template_app (template_hole 6, template_var 1),
                          template_var 3)))))),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 7, template_var 0),
                          template_app
                           (template_app (template_hole 6, template_var 2),
                            template_var 4))),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_app
                         (template_app (template_hole 6, template_var 1),
                          template_var 3))))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 7, template_var 0),
                            template_app
                             (template_app
                               (template_hole 6, template_var 2),
                              template_var 4)))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 7, template_var 0),
                          template_app
                           (template_app (template_hole 6, template_var 1),
                            template_var 3)))),
                    t_empty))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 3),
         template_hole 0))),
    ("Ailamazyan.eval_conj_tuple_close_empty2",
     "[| fo_nmlzd ?X ?xs; fo_nmlzd ?Y ?ys; length ?nsx = length ?xs;
         length ?nsy = length ?ys; sorted_distinct ?nsx;
         sorted_distinct ?nsy; sorted_distinct ?ns;
         set ?ns <= set ?nsx Int set ?nsy;
         fo_nmlz (?X Int ?Y) (proj_tuple ?ns (zip ?nsx ?xs)) ~=
         fo_nmlz (?X Int ?Y) (proj_tuple ?ns (zip ?nsy ?ys)) |
         proj_tuple ?ns (zip ?nsx ?xs) ~= proj_tuple ?ns (zip ?nsy ?ys) &
         (ALL x:set (proj_tuple ?ns (zip ?nsx ?xs)). isl x) &
         (ALL y:set (proj_tuple ?ns (zip ?nsy ?ys)). isl y);
         ?xs' : ad_agr_close (?X Un ?Y - ?X) ?xs;
         ?ys' : ad_agr_close (?X Un ?Y - ?Y) ?ys |]
      ==> eval_conj_tuple (?X Un ?Y) ?nsx ?nsy ?xs' ?ys' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app (template_hole 25, template_var 4),
          template_app (template_hole 24, template_var 7)),
        template_equation
         (template_app (template_hole 25, template_var 3),
          template_app (template_hole 24, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_hole 21),
                  template_var 4)),
              template_app (template_hole 20, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_hole 21),
                  template_var 3)),
              template_app (template_hole 20, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_hole 21),
                  template_var 2)),
              template_app (template_hole 20, template_var 2))
            ),
        template_inequation
         (less_equals, template_app (template_hole 18, template_var 2),
          template_app
           (template_app
             (template_hole 17,
              template_app (template_hole 18, template_var 4)),
            template_app (template_hole 18, template_var 3))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 8),
                            template_var 6)),
                        template_app
                         (template_app (template_hole 11, template_var 2),
                          template_app
                           (template_app (template_hole 10, template_var 4),
                            template_var 7)))),
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app
                         (template_app (template_hole 12, template_var 8),
                          template_var 6)),
                      template_app
                       (template_app (template_hole 11, template_var 2),
                        template_app
                         (template_app (template_hole 10, template_var 3),
                          template_var 5)))))),
              template_app
               (template_app
                 (template_hole 23,
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app (template_hole 11, template_var 2),
                          template_app
                           (template_app (template_hole 10, template_var 4),
                            template_var 7))),
                      template_app
                       (template_app (template_hole 11, template_var 2),
                        template_app
                         (template_app (template_hole 10, template_var 3),
                          template_var 5))))),
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_app (template_hole 11, template_var 2),
                            template_app
                             (template_app
                               (template_hole 10, template_var 4),
                              template_var 7)))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 11, template_var 2),
                          template_app
                           (template_app (template_hole 10, template_var 3),
                            template_var 5)))),
                    t_empty))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 6)),
                    template_var 8)),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 6)),
                    template_var 6)),
                template_var 5))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 8),
                     template_var 6)),
                 template_var 4),
               template_var 3),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Ailamazyan.ad_agr_close_rec_sound",
     "[| ?ys : ad_agr_close_rec ?i ?m ?AD ?xs;
         fo_nmlz_rec ?j (id_map ?j) ?X ?xs = ?xs; ?X Int ?AD = {};
         ?X Int ?Y = {}; ?Y Int ?AD = {}; inj_on ?m (dom ?m);
         dom ?m = {..<?j}; ran ?m <= Inl ` ?Y Un Inr ` {..<?i}; ?i <= ?j |]
      ==> fo_nmlz_rec ?i (id_map ?i) (?X Un ?Y Un ?AD) ?ys = ?ys &
          (EX m'.
              inj_on m' (dom m') &
              (ALL n v. ?m n = Some v --> m' (Inr n) = Some v) &
              (ALL (x, y):set (zip ?xs ?ys).
                  case x of
                  Inl x' =>
                    if x' : ?X then x = y
                    else m' x = Some y &
                         (case y of Inl z => z ~: ?X | Inr x => True)
                  | Inr n =>
                      m' x = Some y &
                      (case y of Inl z => z ~: ?X | Inr x => True)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 39, template_var 7),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 38, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 36, template_var 2),
                template_app (template_hole 35, template_var 2)),
              template_var 1),
            template_var 3),
          template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 33, template_var 1),
            template_var 4),
          template_hole 32),
        template_equation
         (template_app
           (template_app (template_hole 33, template_var 1),
            template_var 0),
          template_hole 32),
        template_equation
         (template_app
           (template_app (template_hole 33, template_var 0),
            template_var 4),
          template_hole 32),
        template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 5),
              template_app (template_hole 30, template_var 5))
            ),
        template_equation
         (template_app (template_hole 30, template_var 5),
          template_app (template_hole 28, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 26, template_var 5),
          template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app (template_hole 24, template_hole 23),
                template_var 0)),
            template_app
             (template_app (template_hole 22, template_hole 21),
              template_app (template_hole 28, template_var 6)))),
        template_inequation (less_equals, template_var 6, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 37,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 36, template_var 6),
                         template_app (template_hole 35, template_var 6)),
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app
                            (template_app
                              (template_hole 18, template_var 1),
                             template_var 0)),
                         template_var 4)),
                     template_var 7)),
                 template_var 7)),
             template_app (template_hole 17, t_empty))
           ))),
    ("Ailamazyan.eval_conj_set_aux",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?cxs =
         filter (%(n, x). n ~: set ?ns\<psi> & isl x) (zip ?ns\<phi> ?xs);
         ?nxs =
         map fst
          (filter (%(n, x). n ~: set ?ns\<psi> & ~ isl x)
            (zip ?ns\<phi> ?xs));
         ?cys =
         filter (%(n, y). n ~: set ?ns\<phi> & isl y) (zip ?ns\<psi> ?ys);
         ?nys =
         map fst
          (filter (%(n, y). n ~: set ?ns\<phi> & ~ isl y)
            (zip ?ns\<psi> ?ys));
         ?xs : ?X\<phi>; ?ys : ?X\<psi>; ?xs = map ?\<sigma>xs ?ns\<phi>;
         ?fs\<phi> = map ?\<sigma>xs ?ns\<phi>';
         ?ys = map ?\<sigma>ys ?ns\<psi>;
         ?fs\<psi> = map ?\<sigma>ys ?ns\<psi>';
         ?fs\<phi>
         : nall_tuples_rec ?AD (card (Inr -` set ?xs)) (length ?ns\<phi>');
         ?fs\<psi>
         : nall_tuples_rec ?AD (card (Inr -` set ?ys)) (length ?ns\<psi>');
         ad_agr_list ?AD (map ?\<sigma>ys (sort (?ns\<psi> @ ?ns\<psi>')))
          (map ?\<sigma>xs (sort (?ns\<phi> @ ?ns\<phi>'))) |]
      ==> map snd (merge (zip ?ns\<phi> ?xs) ?cys) =
          map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys))",
     template_implication
      ([template_equation
         (template_var 18,
          template_app
           (template_app (template_hole 33, t_empty), template_var 16)),
        template_equation
         (template_var 15,
          template_app
           (template_app (template_hole 33, t_empty), template_var 17)),
        template_equation
         (template_var 14,
          template_app
           (template_app
             (template_hole 28,
              template_app (template_hole 27, template_var 13)),
            template_app
             (template_app (template_hole 26, template_var 12),
              template_var 17))),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 28,
              template_app (template_hole 27, template_var 13)),
            template_app
             (template_app (template_hole 26, template_var 10),
              template_var 16))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_hole 23),
                  template_var 17)),
              template_app (template_hole 22, template_var 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_hole 23),
                  template_var 16)),
              template_app (template_hole 22, template_var 16))
            ),
        template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 20, template_app (template_hole 19, t_empty)),
            template_app
             (template_app (template_hole 17, template_var 17),
              template_var 8))),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_app
             (template_app
               (template_hole 20, template_app (template_hole 19, t_empty)),
              template_app
               (template_app (template_hole 17, template_var 17),
                template_var 8)))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 20, template_app (template_hole 19, t_empty)),
            template_app
             (template_app (template_hole 17, template_var 16),
              template_var 5))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_app
             (template_app
               (template_hole 20, template_app (template_hole 19, t_empty)),
              template_app
               (template_app (template_hole 17, template_var 16),
                template_var 5)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 8),
              template_var 14)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_var 11)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 12, template_var 3),
            template_var 17)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 12, template_var 3),
            template_var 18)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 12, template_var 1),
            template_var 16)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 12, template_var 1),
            template_var 15)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 13),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_app (template_hole 7, template_var 8)))),
                template_app (template_hole 6, template_var 18)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 13),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_app (template_hole 7, template_var 5)))),
                template_app (template_hole 6, template_var 15)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 13),
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_app
                   (template_app (template_hole 4, t_empty),
                    template_app
                     (template_app (template_hole 3, template_var 16),
                      template_var 15)))),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_app (template_hole 4, t_empty),
                  template_app
                   (template_app (template_hole 3, template_var 17),
                    template_var 18))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 17, template_var 17),
                 template_var 8)),
             template_var 6)),
         template_app
          (template_app (template_hole 12, template_var 3),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, template_var 17),
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_var 6))))))),
    ("Ailamazyan.eval_conj_set_aux",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?cxs =
         filter (%(n, x). n ~: set ?ns\<psi> & isl x) (zip ?ns\<phi> ?xs);
         ?nxs =
         map fst
          (filter (%(n, x). n ~: set ?ns\<psi> & ~ isl x)
            (zip ?ns\<phi> ?xs));
         ?cys =
         filter (%(n, y). n ~: set ?ns\<phi> & isl y) (zip ?ns\<psi> ?ys);
         ?nys =
         map fst
          (filter (%(n, y). n ~: set ?ns\<phi> & ~ isl y)
            (zip ?ns\<psi> ?ys));
         ?xs : ?X\<phi>; ?ys : ?X\<psi>; ?xs = map ?\<sigma>xs ?ns\<phi>;
         ?fs\<phi> = map ?\<sigma>xs ?ns\<phi>';
         ?ys = map ?\<sigma>ys ?ns\<psi>;
         ?fs\<psi> = map ?\<sigma>ys ?ns\<psi>';
         ?fs\<phi>
         : nall_tuples_rec ?AD (card (Inr -` set ?xs)) (length ?ns\<phi>');
         ?fs\<psi>
         : nall_tuples_rec ?AD (card (Inr -` set ?ys)) (length ?ns\<psi>');
         ad_agr_list ?AD (map ?\<sigma>ys (sort (?ns\<psi> @ ?ns\<psi>')))
          (map ?\<sigma>xs (sort (?ns\<phi> @ ?ns\<phi>'))) |]
      ==> map ?\<sigma>xs ?nys
          : nall_tuples_rec {}
             (card
               (Inr -`
                set (map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys)))))
             (length ?nys)",
     template_implication
      ([template_equation
         (template_var 18,
          template_app
           (template_app (template_hole 31, t_empty), template_var 16)),
        template_equation
         (template_var 15,
          template_app
           (template_app (template_hole 31, t_empty), template_var 17)),
        template_equation
         (template_var 14,
          template_app
           (template_app
             (template_hole 26,
              template_app (template_hole 25, template_var 13)),
            template_app
             (template_app (template_hole 24, template_var 12),
              template_var 17))),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 26,
              template_app (template_hole 25, template_var 13)),
            template_app
             (template_app (template_hole 24, template_var 10),
              template_var 16))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_hole 21),
                  template_var 17)),
              template_app (template_hole 20, template_var 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_hole 21),
                  template_var 16)),
              template_app (template_hole 20, template_var 16))
            ),
        template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 18, template_app (template_hole 17, t_empty)),
            template_app
             (template_app (template_hole 15, template_var 17),
              template_var 8))),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 14, template_hole 13),
            template_app
             (template_app
               (template_hole 18, template_app (template_hole 17, t_empty)),
              template_app
               (template_app (template_hole 15, template_var 17),
                template_var 8)))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 18, template_app (template_hole 17, t_empty)),
            template_app
             (template_app (template_hole 15, template_var 16),
              template_var 5))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 14, template_hole 13),
            template_app
             (template_app
               (template_hole 18, template_app (template_hole 17, t_empty)),
              template_app
               (template_app (template_hole 15, template_var 16),
                template_var 5)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 8),
              template_var 14)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_var 11)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 17)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 18)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 16)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 15)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 13),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_app (template_hole 5, template_var 8)))),
                template_app (template_hole 4, template_var 18)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 13),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_app (template_hole 5, template_var 5)))),
                template_app (template_hole 4, template_var 15)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 13),
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app
                   (template_app (template_hole 2, t_empty),
                    template_app
                     (template_app (template_hole 1, template_var 16),
                      template_var 15)))),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_app
                 (template_app (template_hole 2, t_empty),
                  template_app
                   (template_app (template_hole 1, template_var 17),
                    template_var 18))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 9, template_hole 0),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 10, template_var 3),
                         template_app
                          (template_app (template_hole 2, t_empty),
                           template_app
                            (template_app
                              (template_hole 1, template_var 17),
                             template_app
                              (template_app
                                (template_hole 14, template_hole 13),
                               template_var 6)))))))),
               template_app (template_hole 4, template_var 4)))
           ))),
    ("Ailamazyan.eval_conj_set_aux",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?cxs =
         filter (%(n, x). n ~: set ?ns\<psi> & isl x) (zip ?ns\<phi> ?xs);
         ?nxs =
         map fst
          (filter (%(n, x). n ~: set ?ns\<psi> & ~ isl x)
            (zip ?ns\<phi> ?xs));
         ?cys =
         filter (%(n, y). n ~: set ?ns\<phi> & isl y) (zip ?ns\<psi> ?ys);
         ?nys =
         map fst
          (filter (%(n, y). n ~: set ?ns\<phi> & ~ isl y)
            (zip ?ns\<psi> ?ys));
         ?xs : ?X\<phi>; ?ys : ?X\<psi>; ?xs = map ?\<sigma>xs ?ns\<phi>;
         ?fs\<phi> = map ?\<sigma>xs ?ns\<phi>';
         ?ys = map ?\<sigma>ys ?ns\<psi>;
         ?fs\<psi> = map ?\<sigma>ys ?ns\<psi>';
         ?fs\<phi>
         : nall_tuples_rec ?AD (card (Inr -` set ?xs)) (length ?ns\<phi>');
         ?fs\<psi>
         : nall_tuples_rec ?AD (card (Inr -` set ?ys)) (length ?ns\<psi>');
         ad_agr_list ?AD (map ?\<sigma>ys (sort (?ns\<psi> @ ?ns\<psi>')))
          (map ?\<sigma>xs (sort (?ns\<phi> @ ?ns\<phi>'))) |]
      ==> map snd (merge (zip ?ns\<phi> ?xs) (zip ?ns\<phi>' ?fs\<phi>)) =
          map snd
           (merge
             (zip (sort (?ns\<phi> @ map fst ?cys))
               (map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys))))
             (zip ?nys (map ?\<sigma>xs ?nys)))",
     template_implication
      ([template_equation
         (template_var 18,
          template_app
           (template_app (template_hole 33, t_empty), template_var 16)),
        template_equation
         (template_var 15,
          template_app
           (template_app (template_hole 33, t_empty), template_var 17)),
        template_equation
         (template_var 14,
          template_app
           (template_app
             (template_hole 28,
              template_app (template_hole 27, template_var 13)),
            template_app
             (template_app (template_hole 26, template_var 12),
              template_var 17))),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 28,
              template_app (template_hole 27, template_var 13)),
            template_app
             (template_app (template_hole 26, template_var 10),
              template_var 16))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_hole 23),
                  template_var 17)),
              template_app (template_hole 22, template_var 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_hole 23),
                  template_var 16)),
              template_app (template_hole 22, template_var 16))
            ),
        template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 20, template_app (template_hole 19, t_empty)),
            template_app
             (template_app (template_hole 17, template_var 17),
              template_var 8))),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_app
             (template_app
               (template_hole 20, template_app (template_hole 19, t_empty)),
              template_app
               (template_app (template_hole 17, template_var 17),
                template_var 8)))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 20, template_app (template_hole 19, t_empty)),
            template_app
             (template_app (template_hole 17, template_var 16),
              template_var 5))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_app
             (template_app
               (template_hole 20, template_app (template_hole 19, t_empty)),
              template_app
               (template_app (template_hole 17, template_var 16),
                template_var 5)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 8),
              template_var 14)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_var 11)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 12, template_var 3),
            template_var 17)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 12, template_var 3),
            template_var 18)),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 12, template_var 1),
            template_var 16)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 12, template_var 1),
            template_var 15)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 13),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_app (template_hole 7, template_var 8)))),
                template_app (template_hole 6, template_var 18)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 13),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_app (template_hole 7, template_var 5)))),
                template_app (template_hole 6, template_var 15)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 13),
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_app
                   (template_app (template_hole 4, t_empty),
                    template_app
                     (template_app (template_hole 3, template_var 16),
                      template_var 15)))),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_app (template_hole 4, t_empty),
                  template_app
                   (template_app (template_hole 3, template_var 17),
                    template_var 18))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 17, template_var 17),
                 template_var 8)),
             template_app
              (template_app (template_hole 17, template_var 18),
               template_var 2))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, template_var 17),
                       template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_var 6)))),
                 template_app
                  (template_app (template_hole 12, template_var 3),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, template_var 17),
                       template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_var 6)))))),
             template_app
              (template_app (template_hole 17, template_var 4),
               template_app
                (template_app (template_hole 12, template_var 3),
                 template_var 4))))))),
    ("Ailamazyan.eval_conj_set_aux'",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?cxs =
         filter (%(n, x). n ~: set ?ns\<psi> & isl x) (zip ?ns\<phi> ?xs);
         ?nxs =
         map fst
          (filter (%(n, x). n ~: set ?ns\<psi> & ~ isl x)
            (zip ?ns\<phi> ?xs));
         ?cys =
         filter (%(n, y). n ~: set ?ns\<phi> & isl y) (zip ?ns\<psi> ?ys);
         ?nys =
         map fst
          (filter (%(n, y). n ~: set ?ns\<phi> & ~ isl y)
            (zip ?ns\<psi> ?ys));
         ?xs : ?X\<phi>; ?ys : ?X\<psi>; ?xs = map ?\<sigma>xs ?ns\<phi>;
         map snd ?cys = map ?\<sigma>xs (map fst ?cys);
         ?ys\<psi> = map ?\<sigma>xs ?nys; ?ys = map ?\<sigma>ys ?ns\<psi>;
         map snd ?cxs = map ?\<sigma>ys (map fst ?cxs);
         ?xs\<phi> = map ?\<sigma>ys ?nxs;
         ?fs\<phi> = map ?\<sigma>xs ?ns\<phi>';
         ?fs\<psi> = map ?\<sigma>ys ?ns\<psi>';
         map ?\<sigma>xs ?nys
         : nall_tuples_rec {}
            (card
              (Inr -`
               set (map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys)))))
            (length ?nys);
         Inl -` (set (map snd ?cxs) Un set ?xs\<phi>) <= ?AD;
         Inl -` (set (map snd ?cys) Un set ?ys\<psi>) <= ?AD;
         ad_agr_list ?AD (map ?\<sigma>ys (sort (?ns\<psi> @ ?ns\<psi>')))
          (map ?\<sigma>xs (sort (?ns\<phi> @ ?ns\<phi>'))) |]
      ==> ?fs\<phi>
          : nall_tuples_rec ?AD (card (Inr -` set ?xs))
             (length ?ns\<phi>')",
     template_implication
      ([template_equation
         (template_var 20,
          template_app
           (template_app (template_hole 37, t_empty), template_var 18)),
        template_equation
         (template_var 17,
          template_app
           (template_app (template_hole 37, t_empty), template_var 19)),
        template_equation
         (template_var 16,
          template_app
           (template_app
             (template_hole 32,
              template_app (template_hole 31, template_var 15)),
            template_app
             (template_app (template_hole 30, template_var 14),
              template_var 19))),
        template_equation
         (template_var 13,
          template_app
           (template_app
             (template_hole 32,
              template_app (template_hole 31, template_var 15)),
            template_app
             (template_app (template_hole 30, template_var 12),
              template_var 18))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app (template_hole 28, template_hole 27),
                  template_var 19)),
              template_app (template_hole 26, template_var 19))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app (template_hole 28, template_hole 27),
                  template_var 18)),
              template_app (template_hole 26, template_var 18))
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 24, template_app (template_hole 23, t_empty)),
            template_app
             (template_app (template_hole 21, template_var 19),
              template_var 10))),
        template_equation
         (template_var 9,
          template_app
           (template_app (template_hole 20, template_hole 19),
            template_app
             (template_app
               (template_hole 24, template_app (template_hole 23, t_empty)),
              template_app
               (template_app (template_hole 21, template_var 19),
                template_var 10)))),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 24, template_app (template_hole 23, t_empty)),
            template_app
             (template_app (template_hole 21, template_var 18),
              template_var 7))),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 20, template_hole 19),
            template_app
             (template_app
               (template_hole 24, template_app (template_hole 23, t_empty)),
              template_app
               (template_app (template_hole 21, template_var 18),
                template_var 7)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 10),
              template_var 16)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 7),
              template_var 13)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 16, template_var 5),
            template_var 19)),
        template_equation
         (template_app
           (template_app (template_hole 15, template_hole 14),
            template_var 8),
          template_app
           (template_app (template_hole 16, template_var 5),
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_var 8))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 16, template_var 5),
            template_var 6)),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 16, template_var 3),
            template_var 18)),
        template_equation
         (template_app
           (template_app (template_hole 15, template_hole 14),
            template_var 11),
          template_app
           (template_app (template_hole 16, template_var 3),
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_var 11))),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 16, template_var 3),
            template_var 9)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 16, template_var 5),
            template_var 20)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 16, template_var 3),
            template_var 17)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 16, template_var 5),
                  template_var 6)),
              template_app
               (template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_hole 9),
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 16, template_var 5),
                          template_app
                           (template_app (template_hole 7, t_empty),
                            template_app
                             (template_app
                               (template_hole 6, template_var 19),
                              template_app
                               (template_app
                                 (template_hole 20, template_hole 19),
                                template_var 8)))))))),
                template_app (template_hole 5, template_var 6)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 11))),
              template_app (template_hole 8, template_var 2))),
          template_var 15),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 8))),
              template_app (template_hole 8, template_var 4))),
          template_var 15),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 15),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_app
                   (template_app (template_hole 7, t_empty),
                    template_app
                     (template_app (template_hole 6, template_var 18),
                      template_var 17)))),
              template_app
               (template_app (template_hole 16, template_var 5),
                template_app
                 (template_app (template_hole 7, t_empty),
                  template_app
                   (template_app (template_hole 6, template_var 19),
                    template_var 20))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 18, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 13, template_var 15),
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 10)))),
               template_app (template_hole 5, template_var 20)))
           ))),
    ("Ailamazyan.eval_conj_set_aux'",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?cxs =
         filter (%(n, x). n ~: set ?ns\<psi> & isl x) (zip ?ns\<phi> ?xs);
         ?nxs =
         map fst
          (filter (%(n, x). n ~: set ?ns\<psi> & ~ isl x)
            (zip ?ns\<phi> ?xs));
         ?cys =
         filter (%(n, y). n ~: set ?ns\<phi> & isl y) (zip ?ns\<psi> ?ys);
         ?nys =
         map fst
          (filter (%(n, y). n ~: set ?ns\<phi> & ~ isl y)
            (zip ?ns\<psi> ?ys));
         ?xs : ?X\<phi>; ?ys : ?X\<psi>; ?xs = map ?\<sigma>xs ?ns\<phi>;
         map snd ?cys = map ?\<sigma>xs (map fst ?cys);
         ?ys\<psi> = map ?\<sigma>xs ?nys; ?ys = map ?\<sigma>ys ?ns\<psi>;
         map snd ?cxs = map ?\<sigma>ys (map fst ?cxs);
         ?xs\<phi> = map ?\<sigma>ys ?nxs;
         ?fs\<phi> = map ?\<sigma>xs ?ns\<phi>';
         ?fs\<psi> = map ?\<sigma>ys ?ns\<psi>';
         map ?\<sigma>xs ?nys
         : nall_tuples_rec {}
            (card
              (Inr -`
               set (map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys)))))
            (length ?nys);
         Inl -` (set (map snd ?cxs) Un set ?xs\<phi>) <= ?AD;
         Inl -` (set (map snd ?cys) Un set ?ys\<psi>) <= ?AD;
         ad_agr_list ?AD (map ?\<sigma>ys (sort (?ns\<psi> @ ?ns\<psi>')))
          (map ?\<sigma>xs (sort (?ns\<phi> @ ?ns\<phi>'))) |]
      ==> map snd (merge (zip ?ns\<phi> ?xs) ?cys) =
          map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys))",
     template_implication
      ([template_equation
         (template_var 20,
          template_app
           (template_app (template_hole 38, t_empty), template_var 18)),
        template_equation
         (template_var 17,
          template_app
           (template_app (template_hole 38, t_empty), template_var 19)),
        template_equation
         (template_var 16,
          template_app
           (template_app
             (template_hole 33,
              template_app (template_hole 32, template_var 15)),
            template_app
             (template_app (template_hole 31, template_var 14),
              template_var 19))),
        template_equation
         (template_var 13,
          template_app
           (template_app
             (template_hole 33,
              template_app (template_hole 32, template_var 15)),
            template_app
             (template_app (template_hole 31, template_var 12),
              template_var 18))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_hole 28),
                  template_var 19)),
              template_app (template_hole 27, template_var 19))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_hole 28),
                  template_var 18)),
              template_app (template_hole 27, template_var 18))
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 25, template_app (template_hole 24, t_empty)),
            template_app
             (template_app (template_hole 22, template_var 19),
              template_var 10))),
        template_equation
         (template_var 9,
          template_app
           (template_app (template_hole 21, template_hole 20),
            template_app
             (template_app
               (template_hole 25, template_app (template_hole 24, t_empty)),
              template_app
               (template_app (template_hole 22, template_var 19),
                template_var 10)))),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 25, template_app (template_hole 24, t_empty)),
            template_app
             (template_app (template_hole 22, template_var 18),
              template_var 7))),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 21, template_hole 20),
            template_app
             (template_app
               (template_hole 25, template_app (template_hole 24, t_empty)),
              template_app
               (template_app (template_hole 22, template_var 18),
                template_var 7)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 10),
              template_var 16)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 7),
              template_var 13)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 17, template_var 5),
            template_var 19)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 8),
          template_app
           (template_app (template_hole 17, template_var 5),
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_var 8))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 17, template_var 5),
            template_var 6)),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 18)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 11),
          template_app
           (template_app (template_hole 17, template_var 3),
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_var 11))),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 9)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 17, template_var 5),
            template_var 20)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 17)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 17, template_var 5),
                  template_var 6)),
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_hole 10),
                      template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 17, template_var 5),
                          template_app
                           (template_app (template_hole 8, t_empty),
                            template_app
                             (template_app
                               (template_hole 7, template_var 19),
                              template_app
                               (template_app
                                 (template_hole 21, template_hole 20),
                                template_var 8)))))))),
                template_app (template_hole 6, template_var 6)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 11))),
              template_app (template_hole 9, template_var 2))),
          template_var 15),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 8))),
              template_app (template_hole 9, template_var 4))),
          template_var 15),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 15),
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_app
                   (template_app (template_hole 8, t_empty),
                    template_app
                     (template_app (template_hole 7, template_var 18),
                      template_var 17)))),
              template_app
               (template_app (template_hole 17, template_var 5),
                template_app
                 (template_app (template_hole 8, t_empty),
                  template_app
                   (template_app (template_hole 7, template_var 19),
                    template_var 20))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 16, template_hole 15),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 22, template_var 19),
                 template_var 10)),
             template_var 8)),
         template_app
          (template_app (template_hole 17, template_var 5),
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 7, template_var 19),
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_var 8))))))),
    ("Ailamazyan.eval_conj_set_aux'",
     "[| ?ns\<phi>' = filter (%n. n ~: set ?ns\<phi>) ?ns\<psi>;
         ?ns\<psi>' = filter (%n. n ~: set ?ns\<psi>) ?ns\<phi>;
         ?X\<phi> = fo_nmlz ?AD ` proj_vals ?R\<phi> ?ns\<phi>;
         ?X\<psi> = fo_nmlz ?AD ` proj_vals ?R\<psi> ?ns\<psi>;
         sorted_distinct ?ns\<phi>; sorted_distinct ?ns\<psi>;
         ?cxs =
         filter (%(n, x). n ~: set ?ns\<psi> & isl x) (zip ?ns\<phi> ?xs);
         ?nxs =
         map fst
          (filter (%(n, x). n ~: set ?ns\<psi> & ~ isl x)
            (zip ?ns\<phi> ?xs));
         ?cys =
         filter (%(n, y). n ~: set ?ns\<phi> & isl y) (zip ?ns\<psi> ?ys);
         ?nys =
         map fst
          (filter (%(n, y). n ~: set ?ns\<phi> & ~ isl y)
            (zip ?ns\<psi> ?ys));
         ?xs : ?X\<phi>; ?ys : ?X\<psi>; ?xs = map ?\<sigma>xs ?ns\<phi>;
         map snd ?cys = map ?\<sigma>xs (map fst ?cys);
         ?ys\<psi> = map ?\<sigma>xs ?nys; ?ys = map ?\<sigma>ys ?ns\<psi>;
         map snd ?cxs = map ?\<sigma>ys (map fst ?cxs);
         ?xs\<phi> = map ?\<sigma>ys ?nxs;
         ?fs\<phi> = map ?\<sigma>xs ?ns\<phi>';
         ?fs\<psi> = map ?\<sigma>ys ?ns\<psi>';
         map ?\<sigma>xs ?nys
         : nall_tuples_rec {}
            (card
              (Inr -`
               set (map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys)))))
            (length ?nys);
         Inl -` (set (map snd ?cxs) Un set ?xs\<phi>) <= ?AD;
         Inl -` (set (map snd ?cys) Un set ?ys\<psi>) <= ?AD;
         ad_agr_list ?AD (map ?\<sigma>ys (sort (?ns\<psi> @ ?ns\<psi>')))
          (map ?\<sigma>xs (sort (?ns\<phi> @ ?ns\<phi>'))) |]
      ==> map snd (merge (zip ?ns\<phi> ?xs) (zip ?ns\<phi>' ?fs\<phi>)) =
          map snd
           (merge
             (zip (sort (?ns\<phi> @ map fst ?cys))
               (map ?\<sigma>xs (sort (?ns\<phi> @ map fst ?cys))))
             (zip ?nys (map ?\<sigma>xs ?nys)))",
     template_implication
      ([template_equation
         (template_var 20,
          template_app
           (template_app (template_hole 38, t_empty), template_var 18)),
        template_equation
         (template_var 17,
          template_app
           (template_app (template_hole 38, t_empty), template_var 19)),
        template_equation
         (template_var 16,
          template_app
           (template_app
             (template_hole 33,
              template_app (template_hole 32, template_var 15)),
            template_app
             (template_app (template_hole 31, template_var 14),
              template_var 19))),
        template_equation
         (template_var 13,
          template_app
           (template_app
             (template_hole 33,
              template_app (template_hole 32, template_var 15)),
            template_app
             (template_app (template_hole 31, template_var 12),
              template_var 18))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_hole 28),
                  template_var 19)),
              template_app (template_hole 27, template_var 19))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_hole 28),
                  template_var 18)),
              template_app (template_hole 27, template_var 18))
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 25, template_app (template_hole 24, t_empty)),
            template_app
             (template_app (template_hole 22, template_var 19),
              template_var 10))),
        template_equation
         (template_var 9,
          template_app
           (template_app (template_hole 21, template_hole 20),
            template_app
             (template_app
               (template_hole 25, template_app (template_hole 24, t_empty)),
              template_app
               (template_app (template_hole 22, template_var 19),
                template_var 10)))),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 25, template_app (template_hole 24, t_empty)),
            template_app
             (template_app (template_hole 22, template_var 18),
              template_var 7))),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 21, template_hole 20),
            template_app
             (template_app
               (template_hole 25, template_app (template_hole 24, t_empty)),
              template_app
               (template_app (template_hole 22, template_var 18),
                template_var 7)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 10),
              template_var 16)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 7),
              template_var 13)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 17, template_var 5),
            template_var 19)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 8),
          template_app
           (template_app (template_hole 17, template_var 5),
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_var 8))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 17, template_var 5),
            template_var 6)),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 18)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 11),
          template_app
           (template_app (template_hole 17, template_var 3),
            template_app
             (template_app (template_hole 21, template_hole 20),
              template_var 11))),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 9)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 17, template_var 5),
            template_var 20)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 17, template_var 3),
            template_var 17)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 17, template_var 5),
                  template_var 6)),
              template_app
               (template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_hole 10),
                      template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 17, template_var 5),
                          template_app
                           (template_app (template_hole 8, t_empty),
                            template_app
                             (template_app
                               (template_hole 7, template_var 19),
                              template_app
                               (template_app
                                 (template_hole 21, template_hole 20),
                                template_var 8)))))))),
                template_app (template_hole 6, template_var 6)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 11))),
              template_app (template_hole 9, template_var 2))),
          template_var 15),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 8))),
              template_app (template_hole 9, template_var 4))),
          template_var 15),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 15),
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_app
                   (template_app (template_hole 8, t_empty),
                    template_app
                     (template_app (template_hole 7, template_var 18),
                      template_var 17)))),
              template_app
               (template_app (template_hole 17, template_var 5),
                template_app
                 (template_app (template_hole 8, t_empty),
                  template_app
                   (template_app (template_hole 7, template_var 19),
                    template_var 20))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 16, template_hole 15),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 22, template_var 19),
                 template_var 10)),
             template_app
              (template_app (template_hole 22, template_var 20),
               template_var 1))),
         template_app
          (template_app (template_hole 16, template_hole 15),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app (template_hole 8, t_empty),
                     template_app
                      (template_app (template_hole 7, template_var 19),
                       template_app
                        (template_app (template_hole 21, template_hole 20),
                         template_var 8)))),
                 template_app
                  (template_app (template_hole 17, template_var 5),
                   template_app
                    (template_app (template_hole 8, t_empty),
                     template_app
                      (template_app (template_hole 7, template_var 19),
                       template_app
                        (template_app (template_hole 21, template_hole 20),
                         template_var 8)))))),
             template_app
              (template_app (template_hole 22, template_var 6),
               template_app
                (template_app (template_hole 17, template_var 5),
                 template_var 6)))))))]
