   [("Simplicial.empty_not_adjacent", "~ {} \<sim> ?x",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)
             )
         )),
    ("Simplicial.adjacent_sym", "?x \<sim> ?y ==> ?y \<sim> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Simplicial.facetrel_psubset", "?y \<lhd> ?x ==> ?y < ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Simplicial.facetrel_subset", "?y \<lhd> ?x ==> ?y <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Simplicial.adjacent_refl", "?x ~= {} ==> ?x \<sim> ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 0)
           ))),
    ("Simplicial.adjacent_card", "?x \<sim> ?y ==> card ?x = card ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Simplicial.adjacentchain_Cons_reduce",
     "adjacentchain (?x # ?xs) ==> adjacentchain ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)
           ))),
    ("Simplicial.facetrel_card", "?y \<lhd> ?x ==> card (?x - ?y) = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Simplicial.facetrel_diff_vertex", "?v : ?x ==> ?x - {?v} \<lhd> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_var 0)
           ))),
    ("Simplicial.adjacentI",
     "[| ?z \<lhd> ?x; ?z \<lhd> ?y |] ==> ?x \<sim> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Simplicial.finite_facetrel_card",
     "[| finite ?x; ?y \<lhd> ?x |] ==> card ?x = Suc (card ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Simplicial.adjacentchain_card",
     "adjacentchain (?x # ?xs @ [?y]) ==> card ?x = card ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_hole 2))))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Simplicial.facetrelI_card",
     "[| ?y <= ?x; card (?x - ?y) = 1 |] ==> ?y \<lhd> ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Simplicial.facetrelI_cardSuc",
     "[| ?z <= ?x; card ?x = Suc (card ?z) |] ==> ?z \<lhd> ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app
           (template_hole 1,
            template_app (template_hole 2, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Simplicial.adjacent_int_facet1",
     "[| ?x \<sim> ?y; ?x ~= ?y |] ==> ?x Int ?y \<lhd> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("Simplicial.adjacent_int_facet2",
     "[| ?x \<sim> ?y; ?x ~= ?y |] ==> ?x Int ?y \<lhd> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("Simplicial.facetrel_complement_vertex",
     "[| ?y \<lhd> ?x; ?x = insert ?v ?y |] ==> ?v ~: ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)
               )
           ))),
    ("Simplicial.facetrelI",
     "[| ?v ~: ?y; ?x = insert ?v ?y |] ==> ?y \<lhd> ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Simplicial.facetrel_conv_insert",
     "[| ?y \<lhd> ?x; ?v : ?x - ?y |] ==> ?x = insert ?v ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Simplicial.adj_antivertex",
     "[| ?x \<sim> ?y; ?x ~= ?y |] ==> EX! v. v : ?x - ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Simplicial.adjacent_conv_insert",
     "[| ?x \<sim> ?y; ?v : ?x - ?y |] ==> ?x = insert ?v (?x Int ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Simplicial.common_facet",
     "[| ?z \<lhd> ?x; ?z \<lhd> ?y; ?x ~= ?y |] ==> ?z = ?x Int ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Simplicial.facet2_subset",
     "[| ?z \<lhd> ?x; ?z \<lhd> ?y; ?x Int ?y - ?z ~= {} |] ==> ?x <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0)),
                template_var 2),
              template_hole 1)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Simplicial.adjacent_int_decomp",
     "[| ?x \<sim> ?y; ?x ~= ?y |]
      ==> EX v. v ~: ?y & ?x = insert v (?x Int ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Simplicial.inj_on_pullback_facet",
     "[| inj_on ?f ?x; ?z \<lhd> ?f ` ?x;
         !!y. [| y \<lhd> ?x; ?f ` y = ?z |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Simplicial.adjacent_to_adjacent_int",
     "[| ?C \<sim> ?D; ?f ` ?C \<sim> ?f ` ?D; ?f ` ?C ~= ?f ` ?D |]
      ==> ?f ` (?C Int ?D) = ?f ` ?C Int ?f ` ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1))))),
    ("Simplicial.adjacent_to_adjacent_int_subset",
     "[| ?C \<sim> ?D; ?f ` ?C \<sim> ?f ` ?D; ?f ` ?C ~= ?f ` ?D |]
      ==> ?f ` ?C Int ?f ` ?D <= ?f ` (?C Int ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_var 2)),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 0),
                template_var 2),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Simplicial.adjacentchain_obtain_proper",
     "[| ?x ~= ?y; adjacentchain (?x # ?xs @ [?y]) |]
      ==> EX zs.
             set zs <= set ?xs &
             length zs <= length ?xs & padjacentchain (?x # zs @ [?y])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_hole 7))))
            )],
       template_predicate (template_app (template_hole 6, t_empty))))]
