Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Tree" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.540s cpu time, 0.045s GC time
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.200s elapsed time, 0.748s cpu time, 0.045s GC time
Loading theory "Draft.Prelim" (required by "Draft.PrelimMoreTemplates")
Loading theory "HOL-Library.BigO" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.333s elapsed time, 1.262s cpu time, 0.137s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  alternating_list :: "nat => 'a => 'a => 'a list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale OrderingSetMap
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
    and
    less_eq' :: "'b => 'b => bool"  (infix \<open>\<^bold>\<le>*\<close> 50)
    and less' :: "'b => 'b => bool"  (infix \<open>\<^bold><*\<close> 50)
    and P :: "'a set"
    and f :: "'a => 'b"
  assumes
    "OrderingSetMap (\<^bold>\<le>) (\<^bold><) (\<^bold>\<le>*)
      (\<^bold><*) P f"
consts
  snth :: "'a stream => nat => 'a"
locale OrderingSetIso
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
    and
    less_eq' :: "'b => 'b => bool"  (infix \<open>\<^bold>\<le>*\<close> 50)
    and less' :: "'b => 'b => bool"  (infix \<open>\<^bold><*\<close> 50)
    and P :: "'a set"
    and f :: "'a => 'b"
  assumes
    "OrderingSetIso (\<^bold>\<le>) (\<^bold><) (\<^bold>\<le>*)
      (\<^bold><*) P f"
Found termination order: "size <*mlex*> {}"
locale OrderingSetIso
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
    and
    less_eq' :: "'b => 'b => bool"  (infix \<open>\<^bold>\<le>*\<close> 50)
    and less' :: "'b => 'b => bool"  (infix \<open>\<^bold><*\<close> 50)
    and P :: "'a set"
    and f :: "'a => 'b"
  assumes
    "OrderingSetIso (\<^bold>\<le>) (\<^bold><) (\<^bold>\<le>*)
      (\<^bold><*) P f"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale ordering
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
  assumes "ordering (\<^bold>\<le>) (\<^bold><)"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
locale OrderingSetMap
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
    and
    less_eq' :: "'b => 'b => bool"  (infix \<open>\<^bold>\<le>*\<close> 50)
    and less' :: "'b => 'b => bool"  (infix \<open>\<^bold><*\<close> 50)
    and P :: "'a set"
    and f :: "'a => 'b"
  assumes
    "OrderingSetMap (\<^bold>\<le>) (\<^bold><) (\<^bold>\<le>*)
      (\<^bold><*) P f"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.979s elapsed time, 3.689s cpu time, 0.882s GC time
locale ordering
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
  assumes "ordering (\<^bold>\<le>) (\<^bold><)"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale ordering
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
  assumes "ordering (\<^bold>\<le>) (\<^bold><)"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
locale ordering
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
  assumes "ordering (\<^bold>\<le>) (\<^bold><)"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.075s elapsed time, 3.876s cpu time, 0.859s GC time
locale ordering
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<^bold>\<le>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<^bold><\<close> 50)
  assumes "ordering (\<^bold>\<le>) (\<^bold><)"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Prelim"
### 1.291s elapsed time, 4.526s cpu time, 0.951s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.977s elapsed time, 5.922s cpu time, 1.057s GC time
Loading theory "Draft.Templates" (required by "Draft.PrelimMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.063s elapsed time, 0.114s cpu time, 0.050s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PrelimMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.464s elapsed time, 0.470s cpu time, 0.000s GC time
Loading theory "Draft.PrelimMoreTemplates"
val templateLemmas =
   [("Prelim.id_fixespointwise", "fixespointwise id ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 0),
           template_var 0)
         )),
    ("Prelim.has_bottom_pow", "order.has_bottom (Pow ?A)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Prelim.inj_on_minus_set", "inj_on ((-) ?A) (Pow ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Prelim.sym_sym", "sym (?A \<times> ?A)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Prelim.trans_sym", "trans (?A \<times> ?A)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Prelim.nil_ssubseqs", "[] : ssubseqs ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Prelim.ssubseqs_refl", "?xs : ssubseqs ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Prelim.bottom_pow", "order.bottom (Pow ?A) = {}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Prelim.length_alternating_list",
     "length (alternating_list ?n ?s ?t) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("Prelim.cong_let", "Let ?y ?f = ?f ?y",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), t_empty),
       template_app (template_var 0, template_var 1))),
    ("Prelim.fun_eq_on_UNIV", "fun_eq_on ?f ?g UNIV = (?f = ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.inj_inj_on", "inj ?f ==> inj_on ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Prelim.is_arg_minD1", "is_arg_min ?m ?P ?x ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Prelim.simplex_like_pow", "finite ?A ==> order.simplex_like (Pow ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Prelim.induced_pow_fun_surj",
     "?f \<turnstile> Pow ?A = Pow (?f ` ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Prelim.map_fst_map_const_snd",
     "map fst (map (%s. (s, ?b)) ?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_var 0)),
    ("Prelim.map_prod_sym", "sym ?A ==> sym (map_prod ?f ?f ` ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 0)),
               template_var 1))
           ))),
    ("Prelim.induced_pow_fun_inj_on",
     "inj_on ?f ?A ==> inj_on ((`) ?f) (Pow ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Prelim.fun_eq_on_sym", "fun_eq_on ?f ?g ?A ==> fun_eq_on ?g ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Prelim.separated_by_not_empty", "separated_by ?w ?x ?y ==> ?w ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Prelim.binrelchain_append_reduce1",
     "binrelchain ?P (?xs @ ?ys) ==> binrelchain ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("Prelim.binrelchain_append_reduce2",
     "binrelchain ?P (?xs @ ?ys) ==> binrelchain ?P ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Prelim.binrelchain_Cons_reduce",
     "binrelchain ?P (?x # ?xs) ==> binrelchain ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Prelim.set_alternating_list",
     "set (alternating_list ?n ?s ?t) <= {?s, ?t}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Prelim.supp_restrict0", "supp (restrict0 ?f ?A) <= ?A",
     template_inequation
      (less_equals, template_app (template_hole 3, t_empty),
       template_var 1)),
    ("Prelim.fun_eq_on_restrict1", "fun_eq_on (restrict1 ?f ?A) ?f ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 0),
           template_var 1)
         )),
    ("Prelim.singleton_pow", "?a : ?A ==> {?a} : Pow ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Prelim.suppD_contra", "?f ?x = (0::?'a) ==> ?x ~: supp ?f",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_var 0), template_hole 3)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Prelim.suppI_contra", "?x ~: supp ?f ==> ?f ?x = (0::?'b)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app (template_var 0, template_var 1), template_hole 0))),
    ("Prelim.alternating_list_Suc_Cons",
     "alternating_list (Suc ?k) ?s ?t = ?s # alternating_list ?k ?t ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Prelim.alternating_list2", "alternating_list 2 ?s ?t = [?s, ?t]",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Prelim.set_alternating_list1",
     "1 <= ?n ==> ?s : set (alternating_list ?n ?s ?t)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Prelim.funpower_fixespointwise",
     "fixespointwise ?f ?A ==> fixespointwise (?f ^^ ?n) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_hole 1),
             template_var 1)
           ))),
    ("Prelim.snoc_conv_cons", "EX x xs. ?ys @ [?y] = x # xs",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Prelim.cons_conv_snoc", "EX ys y. ?x # ?xs = ys @ [y]",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Prelim.count_list_append",
     "count_list (?xs @ ?ys) ?a = count_list ?xs ?a + count_list ?ys ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Prelim.subseqs_Cons",
     "subseqs (?x # ?xs) = map ((#) ?x) (subseqs ?xs) @ subseqs ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 3, template_var 0))),
         template_app (template_hole 3, template_var 0)))),
    ("Prelim.delete1_ssubseqs", "?as @ ?bs : ssubseqs (?as @ [?a] @ ?bs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0)),
                   template_var 1)))))
         )),
    ("Prelim.pseudominimal_in_pow_singleton",
     "?a : ?A ==> order.pseudominimal_in (Pow ?A) {?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Prelim.bij_betw_imp_bij_betw_Pow",
     "bij_betw ?f ?A ?B ==> bij_betw ((`) ?f) (Pow ?A) (Pow ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Prelim.bij_betw_the_inv_into_onto",
     "bij_betw ?f ?A ?B ==> the_inv_into ?A ?f ` ?B = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_var 1))),
    ("Prelim.the_inv_leftinv", "bij ?f ==> the_inv ?f o ?f = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 5),
               template_var 0)),
           template_var 0),
         template_hole 0))),
    ("Prelim.card1", "card ?A = 1 ==> EX a. ?A = {a}",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Prelim.is_arg_min_size",
     "is_arg_min ?m ?P ?x ==> ?m ?x = ?m (arg_min ?m ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Prelim.setsetmapim_comp",
     "(?f o ?g) \<turnstile> ?A = ?f \<turnstile> (?g \<turnstile> ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Prelim.setlistmapim_comp",
     "(?f o ?g) \<Turnstile> ?xs = ?f \<Turnstile> (?g \<Turnstile> ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Prelim.induced_pow_fun_subset_ordering_iso",
     "inj_on ?f ?A ==> subset_ordering_iso (Pow ?A) ((`) ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_hole 4),
                   template_hole 3),
                 template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Prelim.ssubseqs_subset",
     "?as : ssubseqs ?bs ==> ssubseqs ?as <= ssubseqs ?bs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Prelim.binrelchain_Conssnoc_reduce",
     "binrelchain ?P (?x # ?xs @ [?y]) ==> binrelchain ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3), template_var 1)
           ))),
    ("Prelim.alternating_list_SucSuc_ConsCons",
     "alternating_list (Suc (Suc ?k)) ?s ?t =
      ?s # ?t # alternating_list ?k ?s ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Prelim.distinct_count_list",
     "distinct ?xs ==> count_list ?xs ?a = (if ?a : set ?xs then 1 else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 1))),
             template_hole 1),
           template_hole 0)))),
    ("Prelim.fun_eq_on_bij_betw",
     "fun_eq_on ?f ?g ?A ==> bij_betw ?f ?A ?B = bij_betw ?g ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Prelim.fixespointwise_subset",
     "[| fixespointwise ?f ?A; ?B <= ?A |] ==> fixespointwise ?f ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1),
             template_var 0)
           ))),
    ("Prelim.fun_eq_on_subset",
     "[| fun_eq_on ?f ?g ?A; ?B <= ?A |] ==> fun_eq_on ?f ?g ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Prelim.ssubseqs_Cons",
     "ssubseqs (?x # ?xs) = (#) ?x ` ssubseqs ?xs Un ssubseqs ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Prelim.not_self_separated_by_disjoint",
     "?A Int ?B = {} ==> ~ separated_by {?A, ?B} ?x ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_hole 0))),
                   template_var 0),
                 template_var 0)
               )
           ))),
    ("Prelim.pseudominimal_in_pow",
     "order.pseudominimal_in (Pow ?A) ?x ==> EX a:?A. ?x = {a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 5),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Prelim.no_pseudominimal_in_pow_is_empty",
     "(!!x. ~ order.pseudominimal_in (Pow ?A) {x}) ==> ?A = {}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation (template_var 0, template_hole 1))),
    ("Prelim.is_arg_minD2",
     "[| is_arg_min ?m ?P ?x; ?P ?y |] ==> ~ ?m ?y < ?m ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_negation
        (
           template_inequation
            (less_than, template_app (template_var 3, template_var 0),
             template_app (template_var 3, template_var 1))
           ))),
    ("Prelim.fixespointwise_im",
     "[| fixespointwise ?f ?A; ?B <= ?A |] ==> ?f ` ?B = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 0))),
    ("Prelim.fixespointwiseD",
     "[| fixespointwise ?f ?A; ?a : ?A |] ==> ?f ?a = id ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("Prelim.fixespointwise2_imp_eq_on",
     "[| fixespointwise ?f ?A; fixespointwise ?g ?A |]
      ==> fun_eq_on ?f ?g ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_hole 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 0),
                template_hole 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Prelim.fixespointwise_cong",
     "[| fun_eq_on ?f ?g ?A; fixespointwise ?g ?A |]
      ==> fixespointwise ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0),
             template_var 0)
           ))),
    ("Prelim.fun_eq_onD",
     "[| fun_eq_on ?f ?g ?A; ?a : ?A |] ==> ?f ?a = ?g ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("Prelim.fun_eq_on_trans",
     "[| fun_eq_on ?f ?g ?A; fun_eq_on ?g ?h ?A |] ==> fun_eq_on ?f ?h ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Prelim.fun_eq_on_set_and_comp_imp_eq",
     "[| fun_eq_on ?f ?g ?A; fun_eq_on ?f ?g (- ?A) |] ==> ?f = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 2, template_var 1))),
    ("Prelim.fun_eq_on_cong",
     "[| fun_eq_on ?f ?h ?A; fun_eq_on ?g ?h ?A |] ==> fun_eq_on ?f ?g ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Prelim.OrderingSetIso_pow_complement",
     "OrderingSetIso (%x y. y <= x) (%x y. y < x) (<=) (<) (Pow ?A)
       ((-) ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, t_empty), t_empty),
                 template_hole 3),
               template_hole 2),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Prelim.set_permutation_bij_restrict1",
     "bij_betw ?f ?A ?A ==> bij (restrict1 ?f ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_hole 0),
             template_hole 0)
           ))),
    ("Prelim.fixespointwise_restrict1",
     "fixespointwise ?f ?A ==> fixespointwise (restrict1 ?f ?B) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_hole 2),
             template_var 1)
           ))),
    ("Prelim.fold_fixespointwise",
     "ALL x:set ?xs. fixespointwise (?f x) ?A ==>
      fixespointwise (fold ?f ?xs) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_hole 1),
             template_var 0)
           ))),
    ("Prelim.inj_eq_image", "[| inj ?f; ?f ` ?X = ?f ` ?Y |] ==> ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.alternating_list_in_lists",
     "[| ?a : ?A; ?b : ?A |] ==> alternating_list ?n ?a ?b : lists ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3),
                 template_var 1)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Prelim.ssubseqs_lists",
     "[| ?as : lists ?A; ?bs : ssubseqs ?as |] ==> ?bs : lists ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Prelim.ex1_unique", "[| EX! x. ?P x; ?P ?a; ?P ?b |] ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.setsetmapim_the_inv_into",
     "inj_on ?f (\<Union> ?A) ==>
      the_inv_into (\<Union> ?A) ?f \<turnstile> (?f \<turnstile> ?A) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 6, template_var 0)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_var 0))),
    ("Prelim.set_alternating_list2",
     "2 <= ?n ==> set (alternating_list ?n ?s ?t) = {?s, ?t}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Prelim.fixespointwiseI",
     "(!!a. a : ?A ==> ?f a = id a) ==> fixespointwise ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 1),
             template_var 1)
           ))),
    ("Prelim.fun_eq_onI",
     "(!!a. a : ?A ==> ?f a = ?g a) ==> fun_eq_on ?f ?g ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Prelim.supset_pseudominimal_inD1",
     "dual_order.pseudominimal_in ?P ?x ==> ?x : ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), t_empty),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Prelim.separated_byI",
     "[| ?x : ?A; ?y : ?B |] ==> separated_by {?A, ?B} ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_var 3),
             template_var 1)
           ))),
    ("Prelim.bij_betw_f_the_inv_into_f",
     "[| bij_betw ?f ?A ?B; ?y : ?B |] ==> ?f (the_inv_into ?A ?f ?y) = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0)),
         template_var 0))),
    ("Prelim.not_the1",
     "[| EX! x. ?P x; ?y ~= (THE x. ?P x) |] ==> ~ ?P ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_negation
         (
            template_equation
             (template_var 0, template_app (template_hole 0, t_empty))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_var 1, template_var 0))
           ))),
    ("Prelim.insert_compare_element",
     "[| ?a ~: ?A; insert ?b ?A = insert ?a ?A |] ==> ?b = ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_equation (template_var 0, template_var 2))),
    ("Prelim.fixespointwise_comp",
     "[| fixespointwise ?f ?A; fixespointwise ?g ?A |]
      ==> fixespointwise (?g o ?f) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_hole 1),
             template_var 1)
           ))),
    ("Prelim.fun_eq_on_im",
     "[| fun_eq_on ?f ?g ?A; ?B <= ?A |] ==> ?f ` ?B = ?g ` ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Prelim.count_list_snoc",
     "count_list (?xs @ [?x]) ?y =
      (if ?y = ?x then Suc (count_list ?xs ?y) else count_list ?xs ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1)),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))
           ))),
    ("Prelim.restrict1_image",
     "?B <= ?A ==> restrict1 ?f ?A ` ?B = ?f ` ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("Prelim.the_inv_into_f_im_f_im",
     "[| inj_on ?f ?A; ?x <= ?A |] ==> the_inv_into ?A ?f ` ?f ` ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 0))),
    ("Prelim.supset_lbound_ofI",
     "[| ?x <= ?b; ?y <= ?b |] ==> dual_order.lbound_of ?x ?y ?b",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, t_empty), template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Prelim.same_length_eq_append",
     "[| length ?as = length ?bs; ?as @ ?cs = ?bs @ ?ds |] ==> ?as = ?bs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 3, template_var 2))),
    ("Prelim.rev_alternating_list",
     "rev (alternating_list ?n ?s ?t) =
      (if even ?n then alternating_list ?n ?t ?s
       else alternating_list ?n ?s ?t)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Prelim.binrelchain_remdup_adj",
     "binrelchain ?P (?xs @ [?x, ?x] @ ?ys) ==>
      binrelchain ?P (?xs @ ?x # ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_app
                       (template_app (template_hole 1, template_var 1),
                        template_hole 0))),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Prelim.respects_imp_unique_image_rel",
     "[| ?f respects ?r; ?y : ?f ` ?r `` {?a} |] ==> ?y = ?f ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 1))))
            )],
       template_equation
        (template_var 1, template_app (template_var 2, template_var 0)))),
    ("Prelim.delete2_ssubseqs",
     "?as @ ?bs @ ?cs : ssubseqs (?as @ [?a] @ ?bs @ [?b] @ ?cs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_hole 0)),
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_hole 0)),
                       template_var 2)))))))
         )),
    ("Prelim.alternating_list_alternates",
     "alternating_list ?n ?s ?t = ?as @ [?a, ?b, ?c] @ ?bs ==> ?a = ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 7),
              template_var 6),
            template_var 5),
          template_app
           (template_app (template_hole 3, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_hole 1)))),
              template_var 0)))],
       template_equation (template_var 3, template_var 1))),
    ("Prelim.is_arg_min_linorderI",
     "[| ?P ?x; !!y. ?P y ==> ?m ?x <= ?m y |] ==> is_arg_min ?m ?P ?x",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Prelim.the_inv_into_the_inv_into",
     "[| inj_on ?f ?A; ?a : ?A |]
      ==> the_inv_into (?f ` ?A) (the_inv_into ?A ?f) ?a = ?f ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("Prelim.f_im_the_inv_into_f_im",
     "[| inj_on ?f ?A; ?x <= ?f ` ?A |]
      ==> ?f ` the_inv_into ?A ?f ` ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_var 0))),
    ("Prelim.inj_on_to_singleton",
     "[| inj_on ?f ?A; ?f ` ?A = {?b} |] ==> EX a. ?A = {a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Prelim.setsetmapim_cong",
     "[| fun_eq_on ?g ?f (\<Union> ?A); ?B <= ?A |]
      ==> ?g \<turnstile> ?B = ?f \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Prelim.setsetmapim_cong_subset",
     "[| fun_eq_on ?g ?f (\<Union> ?A); ?B <= ?A |]
      ==> ?g \<turnstile> ?B <= ?f \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Prelim.is_arg_min_eq",
     "[| is_arg_min ?m ?P ?x; ?P ?z; ?m ?z = ?m ?x |]
      ==> is_arg_min ?m ?P ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 2, template_var 0)),
        template_equation
         (template_app (template_var 3, template_var 0),
          template_app (template_var 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Prelim.setsetmapim_restrict1",
     "?B <= ?A ==>
      restrict1 ?f (\<Union> ?A) \<turnstile> ?B = ?f \<turnstile> ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_var 2)))),
    ("Prelim.is_arg_minI",
     "[| ?P ?x; !!y. ?P y ==> ~ ?m y < ?m ?x |] ==> is_arg_min ?m ?P ?x",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Prelim.binrelchain_cong",
     "[| !!x y. ?P x y ==> ?Q x y; binrelchain ?P ?xs |]
      ==> binrelchain ?Q ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Prelim.nat_induct_step2",
     "[| ?P 0; ?P 1; !!m. ?P m ==> ?P (Suc (Suc m)) |] ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_var 1, template_hole 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Prelim.alternating_list_append",
     "even ?m ==>
      alternating_list ?m ?s ?t @ alternating_list ?n ?s ?t =
      alternating_list (?m + ?n) ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1)))),
    ("Prelim.fixespointwise_insert",
     "[| fixespointwise ?f ?A; ?f ` insert ?a ?A = insert ?a ?A |]
      ==> fixespointwise ?f (insert ?a ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_hole 3),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Prelim.binrelchain_snoc",
     "[| binrelchain ?P (?xs @ [?x]); ?P ?x ?y |]
      ==> binrelchain ?P (?xs @ [?x, ?y])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_hole 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Prelim.binrelchain_overlap_join",
     "[| binrelchain ?P (?xs @ [?x]); binrelchain ?P (?x # ?ys) |]
      ==> binrelchain ?P (?xs @ ?x # ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_hole 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Prelim.separated_by_in_other",
     "[| separated_by {?A, ?B} ?x ?y; ?x ~: ?A |] ==> ?x : ?B & ?y : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_hole 3))),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3))
           ))),
    ("Prelim.binrelchain_sym_rev",
     "[| !!x y. ?P x y ==> ?P y x; binrelchain ?P ?xs |]
      ==> binrelchain ?P (rev ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Prelim.inj_on_distinct_setlistmapim",
     "[| inj_on ?f ?A; ALL X:set ?Xs. X <= ?A; distinct ?Xs |]
      ==> distinct (?f \<Turnstile> ?Xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              t_empty)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Prelim.fixespointwise_subset_and_diff_imp_eq_on",
     "[| ?A <= ?B; fixespointwise ?f ?A; fixespointwise ?f (?B - ?A) |]
      ==> fixespointwise ?f ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1),
             template_var 1)
           ))),
    ("Prelim.fun_eq_on_subset_and_diff_imp_eq_on",
     "[| ?A <= ?B; fun_eq_on ?f ?g ?A; fun_eq_on ?f ?g (?B - ?A) |]
      ==> fun_eq_on ?f ?g ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Prelim.alternating_list_append",
     "odd ?m ==>
      alternating_list ?m ?s ?t @ alternating_list ?n ?t ?s =
      alternating_list (?m + ?n) ?s ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4))),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1)))),
    ("Prelim.prod_ballI",
     "(!!a b. (a, b) : ?A ==> ?P a b) ==> ALL (a, b):?A. ?P a b",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, t_empty))
           ))),
    ("Prelim.ex1_class_image",
     "[| refl_on ?A ?r; ?f respects ?r; ?X : ?A // ?r |]
      ==> EX! b. b : ?f ` ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Prelim.insert_subset_equality",
     "[| ?a ~: ?A; ?a ~: ?B; insert ?a ?A = insert ?a ?B |] ==> ?A = ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.supset_pseudominimal_ne_bottom",
     "dual_order.pseudominimal_in ?P ?x ==> ?x ~= dual_order.bottom ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, t_empty), t_empty),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_var 0,
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))
           ))),
    ("Prelim.quotientfun_classrep_equality",
     "[| refl_on ?A ?r; ?f respects ?r; ?a : ?A |]
      ==> quotientfun ?f (?r `` {?a}) = ?f ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app (template_var 1, template_var 0)))),
    ("Prelim.separated_by_disjoint",
     "[| separated_by {?A, ?B} ?x ?y; ?A Int ?B = {}; ?x : ?A |]
      ==> ?y : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_hole 4))),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_hole 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Prelim.alternating_list_split",
     "alternating_list (?m + ?n) ?s ?t =
      alternating_list ?m ?s ?t @
      (if even ?m then alternating_list ?n ?s ?t
       else alternating_list ?n ?t ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 0),
             template_var 1))))),
    ("Prelim.supset_bottomI",
     "[| ?z : ?P; !!y. y : ?P ==> y <= ?z |] ==> ?z = dual_order.bottom ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Prelim.set_permutation_the_inv_restrict1",
     "bij_betw ?f ?A ?A ==>
      the_inv (restrict1 ?f ?A) = restrict1 (the_inv_into ?A ?f) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         t_empty))),
    ("Prelim.seteqI",
     "[| !!x. x : ?A ==> x : ?B; !!x. x : ?B ==> x : ?A |] ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.inj_on_eq_image",
     "[| inj_on ?f ?A; ?X <= ?A; ?Y <= ?A; ?f ` ?X = ?f ` ?Y |]
      ==> ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.inj_on_eq_image'",
     "[| inj_on ?f ?A; ?X <= ?A; ?Y <= ?A; ?f ` ?X <= ?f ` ?Y |]
      ==> ?X <= ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 3), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Prelim.is_arg_min_size_subprop",
     "[| is_arg_min ?m ?P ?x; ?Q ?x; !!y. ?Q y ==> ?P y |]
      ==> ?m (arg_min ?m ?Q) = ?m (arg_min ?m ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_var 3,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2))))),
    ("Prelim.nat_cases_2Suc",
     "[| ?n = 0 ==> ?P; ?n = 1 ==> ?P; !!m. ?n = Suc (Suc m) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 3)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Prelim.quotientfun_equality",
     "[| refl_on ?A ?r; ?f respects ?r; ?X : ?A // ?r; ?b : ?f ` ?X |]
      ==> quotientfun ?f ?X = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Prelim.simplex_like_pow_above_in",
     "[| finite ?A; ?X <= ?A |]
      ==> dual_order.simplex_like (dual_order.below_in (Pow ?A) ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty), t_empty),
             template_app (template_hole 3, t_empty))
           ))),
    ("Prelim.binrelchain_join",
     "[| binrelchain ?P (?xs @ [?x]); binrelchain ?P (?y # ?ys); ?P ?x ?y |]
      ==> binrelchain ?P (?xs @ ?x # ?y # ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_hole 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 2), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))))
           ))),
    ("Prelim.bex1_equality",
     "[| EX! x. x : ?A & ?P x; ?x : ?A; ?P ?x; ?y : ?A; ?P ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3)
            ),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Prelim.binrelchain_funcong_Cons_snoc",
     "[| !!x y. ?P x y ==> ?f y = ?f x; binrelchain ?P (?x # ?xs @ [?y]) |]
      ==> ?f ?y = ?f ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 0))))
            )],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 3, template_var 2)))),
    ("Prelim.nat_even_induct",
     "[| even ?n; ?P 0; !!m. [| even m; ?P m |] ==> ?P (Suc (Suc m)) |]
      ==> ?P ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_hole 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Prelim.set_decomp_subset",
     "[| ?U = ?A Un ?B; ?A <= ?X; ?B <= ?Y; ?X <= ?U; ?X Int ?Y = {} |]
      ==> ?A = ?X",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 3, template_var 1))),
    ("Prelim.list_induct_CCons",
     "[| ?P []; !!x. ?P [x]; !!x y xs. ?P (y # xs) ==> ?P (x # y # xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Prelim.supset_pseudominimal_inD2",
     "[| dual_order.pseudominimal_in ?P ?x; ?z : ?P; ?x < ?z |]
      ==> ?z = dual_order.bottom ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, t_empty), t_empty),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("Prelim.binrelchain_propcong_Cons_snoc",
     "[| !!x y. [| ?Q x; ?P x y |] ==> ?Q y; ?Q ?x;
         binrelchain ?P (?x # ?xs @ [?y]) |]
      ==> ?Q ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_var 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 0))))
            )],
       template_predicate (template_app (template_var 4, template_var 0)))),
    ("Prelim.comps_fixpointwise_imp_bij_betw",
     "[| ?f ` ?X <= ?Y; ?g ` ?Y <= ?X; fixespointwise (?g o ?f) ?X;
         fixespointwise (?f o ?g) ?Y |]
      ==> bij_betw ?f ?X ?Y",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 3), template_var 2),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 0), template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 0),
                    template_var 3)),
                template_hole 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 0)),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Prelim.binrelchain_trans_Cons_snoc",
     "[| !!x y z. [| ?P x y; ?P y z |] ==> ?P x z;
         binrelchain ?P (?x # ?xs @ [?y]) |]
      ==> ?P ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 3, template_var 2), template_var 0)
           ))),
    ("Prelim.list_induct_ssnoc",
     "[| ?P []; !!x. ?P [x]; !!xs x y. ?P (xs @ [x]) ==> ?P (xs @ [x, y]) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Prelim.list_induct2_snoc_Cons",
     "[| !!ys. ?P [] ys; !!xs. ?P xs [];
         !!xs x y ys. ?P xs ys ==> ?P (xs @ [x]) (y # ys) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Prelim.list_cases_Cons_snoc",
     "[| ?xs = [] ==> ?P; !!x. ?xs = [x] ==> ?P;
         !!x ys y. ?xs = x # ys @ [y] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Prelim.two_cases",
     "[| [| ?P; ?Q |] ==> ?R; [| ?P; ~ ?Q |] ==> ?R; [| ~ ?P; ?Q |] ==> ?R;
         [| ~ ?P; ~ ?Q |] ==> ?R |]
      ==> ?R",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_implication
           ([template_predicate (template_var 1)],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate (template_var 2)],
          template_implication
           ([template_negation (template_predicate (template_var 1))],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation (template_predicate (template_var 2))],
          template_implication
           ([template_predicate (template_var 1)],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation (template_predicate (template_var 2))],
          template_implication
           ([template_negation (template_predicate (template_var 1))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Prelim.list_induct2_snoc",
     "[| !!ys. ?P [] ys; !!xs. ?P xs [];
         !!xs x ys y. ?P xs ys ==> ?P (xs @ [x]) (ys @ [y]) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Prelim.OrderingSetIsoI_orders_greater2less",
     "[| inj_on ?f ?P;
         !!a b. [| a : ?P; b : ?P |] ==> (b <= a) = (?f a <= ?f b) |]
      ==> OrderingSetIso (%x y. y <= x) (%x y. y < x) (<=) (<) ?P ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, t_empty), t_empty),
                   template_hole 3),
                 template_hole 0),
               template_var 0),
             template_var 1)
           ))),
    ("Prelim.binrelchain_obtain_proper",
     "[| ?x ~= ?y; binrelchain ?P (?x # ?xs @ [?y]) |]
      ==> EX zs.
             set zs <= set ?xs &
             length zs <= length ?xs &
             proper_binrelchain ?P (?x # zs @ [?y])",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app
                   (template_app (template_hole 9, template_var 2),
                    template_hole 7))))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Prelim.supset_glbound_in_ofI",
     "[| ?b : ?P; dual_order.lbound_of ?x ?y ?b;
         !!a. [| a : ?P; dual_order.lbound_of ?x ?y a |] ==> ?b <= a |]
      ==> dual_order.glbound_in_of ?P ?x ?y ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, t_empty), template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Prelim.supset_has_bottom_pseudominimal_in_below_in",
     "[| dual_order.has_bottom ?P; ?x : ?P;
         dual_order.pseudominimal_in (dual_order.below_in ?P ?x) ?y |]
      ==> dual_order.pseudominimal_in ?P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), t_empty),
                template_app (template_hole 1, t_empty)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, t_empty), t_empty),
               template_var 2),
             template_var 0)
           ))),
    ("Prelim.binrelchain_setfuncong_Cons_snoc",
     "[| ALL x:?A. ALL y. ?P x y --> y : ?A;
         ALL x:?A. ALL y. ?P x y --> ?f y = ?f x; ?x : ?A;
         binrelchain ?P (?x # ?zs @ [?y]) |]
      ==> ?f ?y = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 0))))
            )],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 3, template_var 2)))),
    ("Prelim.supset_pseudominimal_inI",
     "[| ?x : ?P; ?x ~= dual_order.bottom ?P;
         !!z. [| z : ?P; ?x < z |] ==> z = dual_order.bottom ?P |]
      ==> dual_order.pseudominimal_in ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 4, t_empty), template_var 0))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, t_empty), t_empty),
               template_var 0),
             template_var 1)
           ))),
    ("Prelim.supset_has_bottom_pseudominimal_in_below_inI",
     "[| dual_order.has_bottom ?P; ?x : ?P;
         dual_order.pseudominimal_in ?P ?y; ?x <= ?y |]
      ==> dual_order.pseudominimal_in (dual_order.below_in ?P ?x) ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), t_empty),
                template_var 2),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, t_empty), t_empty),
               template_app (template_hole 1, t_empty)),
             template_var 0)
           ))),
    ("Prelim.two_lists_cases_Cons_Cons",
     "[| !!ys. [| ?as = []; ?bs = ys |] ==> ?P;
         !!xs. [| ?as = xs; ?bs = [] |] ==> ?P;
         !!x xs y ys. [| ?as = x # xs; ?bs = y # ys |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Prelim.binrelchain_funcong_extra_condition_Cons_snoc",
     "[| !!x y. [| ?Q x; ?P x y |] ==> ?Q y;
         !!x y. [| ?Q x; ?P x y |] ==> ?f y = ?f x; ?Q ?x;
         binrelchain ?P (?x # ?zs @ [?y]) |]
      ==> ?f ?y = ?f ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_var 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 0))))
            )],
       template_equation
        (template_app (template_var 3, template_var 0),
         template_app (template_var 3, template_var 2)))),
    ("Prelim.two_lists_cases_snoc_Cons",
     "[| !!ys. [| ?as = []; ?bs = ys |] ==> ?P;
         !!xs. [| ?as = xs; ?bs = [] |] ==> ?P;
         !!xs x y ys. [| ?as = xs @ [x]; ?bs = y # ys |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Prelim.two_prod_lists_cases_snoc_Cons",
     "[| !!xs. [| ?as = xs; ?bs = [] |] ==> ?P;
         !!ys. [| ?as = []; ?bs = ys |] ==> ?P;
         !!xs aa ba ab bb ys.
            ?as = xs @ [(aa, ba)] & ?bs = (ab, bb) # ys ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_var 0))),
    ("Prelim.two_lists_cases_snoc_Cons'",
     "[| [| ?as = []; ?bs = [] |] ==> ?P;
         !!y ys. [| ?as = []; ?bs = y # ys |] ==> ?P;
         !!xs x. [| ?as = xs @ [x]; ?bs = [] |] ==> ?P;
         !!xs x y ys. [| ?as = xs @ [x]; ?bs = y # ys |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 2, template_hole 9)],
          template_implication
           ([template_equation (template_var 1, template_hole 7)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Prelim.list_induct3_snoc_Conssnoc_Cons_pairwise",
     "[| !!ys zs. ?P [] ys zs; !!xs zs. ?P xs [] zs; !!xs ys. ?P xs ys [];
         !!xs x y z zs. ?P (xs @ [x]) [y] (z # zs);
         !!xs x y ys w z zs.
            [| ?P xs ys zs; ?P xs (ys @ [w]) (z # zs);
               ?P (xs @ [x]) (y # ys) zs |]
            ==> ?P (xs @ [x]) (y # ys @ [w]) (z # zs) |]
      ==> ?P ?xs ?ys ?zs",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 3, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Prelim.prod_list_induct3_snoc_Conssnoc_Cons_pairwise",
     "[| !!ys zs. ?Q ([], ys, zs); !!xs zs. ?Q (xs, [], zs);
         !!xs ys. ?Q (xs, ys, []);
         !!xs x y z zs. ?Q (xs @ [x], [y], z # zs);
         !!xs x y ys w z zs.
            [| ?Q (xs, ys, zs); ?Q (xs, ys @ [w], z # zs);
               ?Q (xs @ [x], y # ys, zs) |]
            ==> ?Q (xs @ [x], y # ys @ [w], z # zs) |]
      ==> ?Q ?t",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Prelim.three_lists_cases_snoc_mid_Cons",
     "[| !!ys zs. [| ?as = []; ?bs = ys; ?cs = zs |] ==> ?P;
         !!xs zs. [| ?as = xs; ?bs = []; ?cs = zs |] ==> ?P;
         !!xs ys. [| ?as = xs; ?bs = ys; ?cs = [] |] ==> ?P;
         !!xs x y z zs.
            [| ?as = xs @ [x]; ?bs = [y]; ?cs = z # zs |] ==> ?P;
         !!xs x w ys y z zs.
            [| ?as = xs @ [x]; ?bs = w # ys @ [y]; ?cs = z # zs |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.PrelimMoreTemplates"
### 0.378s elapsed time, 0.500s cpu time, 0.057s GC time
val it = (): unit
