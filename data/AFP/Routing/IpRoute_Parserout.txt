Loading theory "Draft.Linorder_Helper" (required by "Draft.IpRoute_ParserTemplates" via "Draft.IpRoute_Parser" via "Draft.Routing_Table")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.155s elapsed time, 0.627s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.211s elapsed time, 0.844s cpu time, 0.043s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.341s elapsed time, 1.345s cpu time, 0.125s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs")
instantiation
  linord_helper :: (linorder, linorder) linorder
  less_eq_linord_helper == less_eq ::
    ('a, 'b) linord_helper => ('a, 'b) linord_helper => bool
  less_linord_helper == less ::
    ('a, 'b) linord_helper => ('a, 'b) linord_helper => bool
### theory "Draft.Linorder_Helper"
### 0.546s elapsed time, 2.158s cpu time, 0.195s GC time
Loading theory "Draft.Routing_Table" (required by "Draft.IpRoute_ParserTemplates" via "Draft.IpRoute_Parser")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.896s elapsed time, 3.409s cpu time, 0.816s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.942s elapsed time, 3.450s cpu time, 0.777s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
consts
  unambiguous_routing_code :: "('a, 'b) routing_rule_scheme list => bool"
### theory "HOL-Library.Tree"
### 1.898s elapsed time, 5.875s cpu time, 1.057s GC time
Loading theory "Draft.Templates" (required by "Draft.IpRoute_ParserTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.080s elapsed time, 0.266s cpu time, 0.062s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.IpRoute_ParserTemplates")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.Routing_Table"
### 1.824s elapsed time, 5.336s cpu time, 1.021s GC time
Loading theory "Draft.IpRoute_Parser" (required by "Draft.IpRoute_ParserTemplates")
val register_ip_route = fn:
   int -> binding * string -> local_theory -> local_theory
val it = (): unit
val it = (): unit
Using IPv4 parser
Loading file /home/solrun/ResearchIdeas/templateAnalysis/afp-2022-06-07/thys/Routing/ip-route-ex
Checking sanity...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.609s elapsed time, 1.843s cpu time, 0.126s GC time
"[(| routing_match = PrefixMatch 2 8, metric = 0,
     routing_action = (| output_iface = [], next_hop = None |) |),
  (| routing_match = PrefixMatch 3 4, metric = 13,
     routing_action = (| output_iface = [], next_hop = None |) |),
  (| routing_match = PrefixMatch 3 4, metric = 42,
     routing_action = (| output_iface = [], next_hop = None |) |),
  (| routing_match = PrefixMatch 1 3, metric = 0,
     routing_action = (| output_iface = [], next_hop = None |) |)]"
  :: "32 routing_rule list"
Defining constant `rtbl_parser_test1' (rtbl_parser_test1_def')...
Done.
Using IPv6 parser
Loading file /home/solrun/ResearchIdeas/templateAnalysis/afp-2022-06-07/thys/Routing/ip-6-route-ex
Checking sanity...
Defining constant `rtbl_parser_test2' (rtbl_parser_test2_def')...
Done.
### theory "Draft.IpRoute_Parser"
### 1.727s elapsed time, 2.671s cpu time, 0.178s GC time
Loading theory "Draft.IpRoute_ParserTemplates"
val templateLemmas =
   [("IpRoute_Parser.default_prefix_matchall",
     "prefix_match_semantics default_prefix ?ip",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("IpRoute_Parser.empty_rr_hlp_alt",
     "empty_rr_hlp ?pm =
      (| routing_match = ?pm, metric = 0,
         routing_action = (| output_iface = [], next_hop = None |) |)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_hole 0)),
         template_hole 0)))]:
   (string * thm * template) list
### theory "Draft.IpRoute_ParserTemplates"
### 0.735s elapsed time, 1.683s cpu time, 0.192s GC time
"[(| routing_match = PrefixMatch 47854185383193331299326156358679527424 64,
     metric = 256,
     routing_action = (| output_iface = ''eth0'', next_hop = None |) |),
  (| routing_match = PrefixMatch 338288524927261089654018896841347694592 64,
     metric = 256,
     routing_action = (| output_iface = ''eth0'', next_hop = None |) |),
  (| routing_match = PrefixMatch 0 0, metric = 1024,
     routing_action =
       (| output_iface = ''eth0'',
          next_hop = Some 47854185383193331299326156358679527425 |) |)]"
  :: "128 routing_rule list"
val it = (): unit
