Loading theory "Draft.Linorder_Helper" (required by "Draft.Routing_TableTemplates" via "Draft.Routing_Table")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.514s cpu time, 0.045s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.243s elapsed time, 0.985s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.300s cpu time, 0.135s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs")
instantiation
  linord_helper :: (linorder, linorder) linorder
  less_eq_linord_helper == less_eq ::
    ('a, 'b) linord_helper => ('a, 'b) linord_helper => bool
  less_linord_helper == less ::
    ('a, 'b) linord_helper => ('a, 'b) linord_helper => bool
### theory "Draft.Linorder_Helper"
### 0.551s elapsed time, 2.187s cpu time, 0.208s GC time
Loading theory "Draft.Routing_Table" (required by "Draft.Routing_TableTemplates")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.969s elapsed time, 3.650s cpu time, 0.950s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.004s elapsed time, 3.711s cpu time, 0.860s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.947s elapsed time, 6.099s cpu time, 1.145s GC time
Loading theory "Draft.Templates" (required by "Draft.Routing_TableTemplates" via "Draft.ExtrEqs")
consts
  unambiguous_routing_code :: "('a, 'b) routing_rule_scheme list => bool"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.193s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Routing_TableTemplates")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.Routing_Table"
### 1.871s elapsed time, 5.511s cpu time, 1.081s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.598s elapsed time, 1.520s cpu time, 0.149s GC time
Loading theory "Draft.Routing_TableTemplates"
"[(| routing_match = PrefixMatch 2 8, metric = 0,
     routing_action = (| output_iface = [], next_hop = None |) |),
  (| routing_match = PrefixMatch 3 4, metric = 13,
     routing_action = (| output_iface = [], next_hop = None |) |),
  (| routing_match = PrefixMatch 3 4, metric = 42,
     routing_action = (| output_iface = [], next_hop = None |) |),
  (| routing_match = PrefixMatch 1 3, metric = 0,
     routing_action = (| output_iface = [], next_hop = None |) |)]"
  :: "32 routing_rule list"
val templateLemmas =
   [("Routing_Table.is_longest_prefix_routing_sort",
     "is_longest_prefix_routing (sort_rtbl ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Routing_Table.unambiguous_routing_code",
     "unambiguous_routing ?rtbl = unambiguous_routing_code ?rtbl",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Routing_Table.routing_ipassmt_wi_distinct",
     "distinct (map fst (routing_ipassmt_wi ?tbl))",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Routing_Table.unambiguous_routing_Cons",
     "unambiguous_routing (?r # ?rtbl) ==> unambiguous_routing ?rtbl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Routing_Table.ipset_prefix_match_m",
     "fst (??.Routing_Table.ipset_prefix_match ?pfx ?rg) =
      ?rg Int prefix_to_wordset ?pfx",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Routing_Table.ipset_prefix_match_nm",
     "snd (??.Routing_Table.ipset_prefix_match ?pfx ?rg) =
      ?rg - prefix_to_wordset ?pfx",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Routing_Table.int_of_nat_less",
     "int_of_nat ?a < int_of_nat ?b ==> ?a < ?b",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Routing_Table.range_prefix_match_sm",
     "wordinterval_to_set
       (fst (??.Routing_Table.range_prefix_match ?pfx ?rg)) =
      fst (??.Routing_Table.ipset_prefix_match ?pfx
            (wordinterval_to_set ?rg))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("Routing_Table.range_prefix_match_snm",
     "wordinterval_to_set
       (snd (??.Routing_Table.range_prefix_match ?pfx ?rg)) =
      snd (??.Routing_Table.ipset_prefix_match ?pfx
            (wordinterval_to_set ?rg))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("Routing_Table.valid_prefixes_split",
     "valid_prefixes (?r # ?rs) ==>
      valid_prefix (routing_match ?r) & valid_prefixes ?rs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 4, template_var 0))
           ))),
    ("Routing_Table.is_longest_prefix_routing_rule_exclusion",
     "is_longest_prefix_routing (?r1.0 # ?rn # ?rss) ==>
      is_longest_prefix_routing (?r1.0 # ?rss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Routing_Table.rpm_m_dup_simp",
     "?rg Int
      fst (??.Routing_Table.ipset_prefix_match (routing_match ?r) ?rg) =
      fst (??.Routing_Table.ipset_prefix_match (routing_match ?r) ?rg)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Routing_Table.foldr_True_set",
     "foldr (%x. (&) (?f x)) ?l True = (ALL x:set ?l. ?f x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 0),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Routing_Table.ipset_prefix_match_distinct",
     "?rpm = ??.Routing_Table.ipset_prefix_match ?pfx ?rg ==>
      fst ?rpm Int snd ?rpm = {}",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 2)),
         template_hole 0))),
    ("Routing_Table.ipset_prefix_match_complete",
     "?rpm = ??.Routing_Table.ipset_prefix_match ?pfx ?rg ==>
      fst ?rpm Un snd ?rpm = ?rg",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 0, template_var 2)),
         template_var 0))),
    ("Routing_Table.routing_port_ranges_subsets",
     "(?a1.0, ?b1.0)
      : set (??.Routing_Table.routing_port_ranges ?tbl ?s) ==>
      wordinterval_to_set ?b1.0 <= wordinterval_to_set ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Routing_Table.range_prefix_match_set_eq",
     "(case ??.Routing_Table.range_prefix_match ?pfx ?rg of
       (r1, r2) => (wordinterval_to_set r1, wordinterval_to_set r2)) =
      ??.Routing_Table.ipset_prefix_match ?pfx (wordinterval_to_set ?rg)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Routing_Table.routing_ipassmt_wi_has_all_interfaces",
     "?r : set ?tbl ==>
      EX s. (routing_oiface ?r, s) : set (routing_ipassmt_wi ?tbl)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Routing_Table.unambigous_prefix_routing_weak_mono",
     "[| is_longest_prefix_routing (?rr # ?rtbl); ?rr' : set ?rtbl |]
      ==> routing_rule_sort_key ?rr <= routing_rule_sort_key ?rr'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Routing_Table.routing_table_semantics_ports_from_table",
     "[| valid_prefixes ?rtbl; has_default_route ?rtbl;
         routing_table_semantics ?rtbl ?packet = ?r |]
      ==> ?r : routing_action ` set ?rtbl",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Routing_Table.is_longest_prefix_routing_sorted_by_length",
     "[| is_longest_prefix_routing ?r; ?r = ?r1.0 # ?rs @ ?r2.0 # ?rss |]
      ==> routing_prefix ?r2.0 <= routing_prefix ?r1.0",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 3))))),
    ("Routing_Table.routing_ipassmt_wi_subsetted",
     "[| (?a1.0, ?b1.0) : set (routing_ipassmt_wi ?tbl);
         (?a1.0, ?b2.0)
         : set (??.Routing_Table.routing_port_ranges ?tbl
                 wordinterval_UNIV) |]
      ==> wordinterval_to_set ?b2.0 <= wordinterval_to_set ?b1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 0)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Routing_Table.routing_ipassmt_wi",
     "valid_prefixes ?tbl ==>
      (output_iface (routing_table_semantics ?tbl ?k) = ?output_port) =
      (EX ip_range.
          ?k : wordinterval_to_set ip_range &
          (?output_port, ip_range) : set (routing_ipassmt_wi ?tbl))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app (template_hole 7, t_empty)))),
    ("Routing_Table.routing_port_ranges_superseted",
     "(?a1.0, ?b1.0)
      : set (??.Routing_Table.routing_port_ranges ?tbl
              wordinterval_UNIV) ==>
      EX b2.
         (?a1.0, b2) : set (routing_ipassmt_wi ?tbl) &
         wordinterval_to_set ?b1.0 <= wordinterval_to_set b2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Routing_Table.routing_ipassmt_wi_sound",
     "[| valid_prefixes ?tbl; (?ea, ?eb) : set (routing_ipassmt_wi ?tbl);
         ?k : wordinterval_to_set ?eb |]
      ==> ?ea = output_iface (routing_table_semantics ?tbl ?k)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Routing_Table.routing_port_ranges_sound",
     "[| ?e : set (??.Routing_Table.routing_port_ranges ?tbl ?s);
         ?k : wordinterval_to_set (snd ?e); valid_prefixes ?tbl |]
      ==> fst ?e = output_iface (routing_table_semantics ?tbl ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Routing_Table.unambigous_prefix_routing_strong_mono",
     "[| is_longest_prefix_routing (?rr # ?rtbl);
         unambiguous_routing (?rr # ?rtbl); ?rr' : set ?rtbl;
         routing_match ?rr' = routing_match ?rr |]
      ==> routing_rule_sort_key ?rr < routing_rule_sort_key ?rr'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Routing_Table.routing_port_rangesI",
     "[| valid_prefixes ?tbl;
         output_iface (routing_table_semantics ?tbl ?k) = ?output_port;
         ?k : wordinterval_to_set ?wi |]
      ==> EX ip_range.
             (?output_port, ip_range)
             : set (??.Routing_Table.routing_port_ranges ?tbl ?wi) &
             ?k : wordinterval_to_set ip_range",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Routing_Table.routing_ipassmt_wi_disjoint",
     "[| valid_prefixes ?tbl; ?a1.0 ~= ?a2.0;
         (?a1.0, ?b1.0) : set (routing_ipassmt_wi ?tbl);
         (?a2.0, ?b2.0) : set (routing_ipassmt_wi ?tbl) |]
      ==> wordinterval_to_set ?b1.0 Int wordinterval_to_set ?b2.0 = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 1)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 4)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Routing_Table.routing_port_ranges_disjoined",
     "[| valid_prefixes ?tbl;
         (?a1.0, ?b1.0)
         : set (??.Routing_Table.routing_port_ranges ?tbl ?s);
         (?a2.0, ?b2.0)
         : set (??.Routing_Table.routing_port_ranges ?tbl ?s);
         wordinterval_to_set ?b1.0 ~= {} |]
      ==> (?b1.0 ~= ?b2.0) =
          (wordinterval_to_set ?b1.0 Int wordinterval_to_set ?b2.0 = {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 2)))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 3),
              template_hole 3)
            )],
       template_bimplication
        (template_negation
          (template_equation (template_var 3, template_var 0)),
         template_equation
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 3)),
             template_app (template_hole 4, template_var 0)),
           template_hole 3)))),
    ("Routing_Table.existential_routing",
     "[| valid_prefixes ?rtbl; is_longest_prefix_routing ?rtbl;
         has_default_route ?rtbl; unambiguous_routing ?rtbl |]
      ==> (routing_table_semantics ?rtbl ?addr = ?act) =
          (EX rr:set ?rtbl.
              prefix_match_semantics (routing_match rr) ?addr &
              routing_action rr = ?act &
              (ALL ra:set ?rtbl.
                  routing_rule_sort_key ra < routing_rule_sort_key rr -->
                  ~ prefix_match_semantics (routing_match ra) ?addr))",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (template_app (template_hole 14, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 2)),
           t_empty))))]:
   (string * thm * template) list
### theory "Draft.Routing_TableTemplates"
### 0.641s elapsed time, 0.976s cpu time, 0.100s GC time
val it = (): unit
