Loading theory "HOL-Library.Function_Algebras" (required by "Draft.KMPTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.KMPTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Tree" (required by "Draft.KMPTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.KMPTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.144s elapsed time, 0.572s cpu time, 0.052s GC time
Loading theory "Draft.KMP" (required by "Draft.KMPTemplates")
### theory "HOL-Library.Set_Algebras"
### 0.310s elapsed time, 1.234s cpu time, 0.052s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.KMPTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order:
  "(%p. size (snd (snd p))) <*mlex*> (%p. length (fst (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.168s elapsed time, 4.436s cpu time, 0.903s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.045s elapsed time, 3.910s cpu time, 1.031s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
"True"
  :: "bool"
"True"
  :: "bool"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
"False"
  :: "bool"
### Cannot skip proof of schematic goal statement
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.345s elapsed time, 8.029s cpu time, 2.060s GC time
Loading theory "Draft.Templates" (required by "Draft.KMPTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.134s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.KMPTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.565s elapsed time, 1.168s cpu time, 0.105s GC time
compute_butlast_\<ff>s_impl ==
%xi. arl_length xi >>=
     (%x. Array.new x 0 >>=
          (%x'. heap_WHILET
                 (%(a1, a1a, a2a).
                     Array.len a1 >>= (%x'g. return (a2a < x'g)))
                 (%(a1, a1a, a2a).
                     heap_WHILET
                      (%sa. arl_get xi (sa - 1) >>=
                            (%x. arl_get xi (a2a - 1) >>=
                                 (%xa. return (0 < sa & x ~= xa))))
                      (%sa. Array.nth a1 (sa - 1)) a1a >>=
                     (%x'g. let x'h = x'g + 1
                            in heap_array_set a1 a2a x'h >>=
                               (%x'j. return (x'j, x'h, a2a + 1))))
                 (x', 0, 1) >>=
                (%(a1, a1a, a2a). return a1)))
(compute_butlast_\<ff>s_impl, compute_butlast_\<ff>s)
: (arl_assn id_assn)\<^sup>k \<rightarrow>\<^sub>a array_assn nat_assn
compute_\<ff>s ::\<^sub>i TYPE(?'a list => nat list nres)
### Cannot skip proof of schematic goal statement
kmp_impl ==
%ai bi.
   arl_is_empty ai >>=
   (%x'. if x' then return (Some 0)
         else compute_butlast_\<ff>s_impl ai >>=
              (%x'g. heap_WHILET
                      (%(a1, a1a, a2a).
                          arl_length ai >>=
                          (%x. arl_length bi >>=
                               (%xa. return (a1 + x <= xa & is_None a2a))))
                      (%(a1, a1a, a2a).
                          heap_WHILET
                           (%(a1b, a2b).
                               if is_None a2b
                               then arl_get bi (a1 + a1b) >>=
                                    (%x'k.
  arl_get ai a1b >>= (%x'l. return (x'k = x'l)))
                               else return False)
                           (%(a1b, a2b).
                               let x'j = a1b + 1
                               in arl_length ai >>=
                                  (%x.
return (if x'j = x then (x'j, Some a1) else (x'j, None))))
                           (a1a, a2a) >>=
                          (%(a1b, a2b).
                              if is_None a2b
                              then Array.nth x'g a1b >>=
                                   (%x.
 Array.nth x'g a1b >>= (%xa. return (a1 + (a1b - x + 1), xa - 1, None)))
                              else return (a1, a1b, Some a1)))
                      (0, 0, None) >>=
                     (%(a1, a1a, y). return y)))
(uncurry kmp_impl, uncurry kmp3)
: (arl_assn id_assn)\<^sup>k *\<^sub>a
  (arl_assn id_assn)\<^sup>k \<rightarrow>\<^sub>a option_assn nat_assn
See theory exports
### theory "Draft.KMP"
### 8.486s elapsed time, 14.594s cpu time, 2.386s GC time
Loading theory "Draft.KMPTemplates"
val str2arl = fn:
   string ->
     Isabelle10764502.Generated_Code.char array *
     Isabelle10764502.Generated_Code.nat
val kmp = fn: string -> string -> int option
val test1 = SOME 3: int option
val test2 = SOME 0: int option
val test3 = SOME 633: int option
val test4 = NONE: int option
val templateLemmas =
   [("KMP.strict_border_simps", "strict_border ?xs [] = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("KMP.compute_\<ff>s_correct",
     "compute_\<ff>s ?s <= compute_\<ff>s_SPEC ?s",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("KMP.ib_singleton", "intrinsic_border [?z] = []",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_hole 0)),
    ("KMP.strict_border_simps", "strict_border [] (?x # ?xs) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("KMP.kmp1_refine", "kmp1 ?s ?t <= kmp ?s ?t",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KMP.kmp2_refine", "kmp2 ?s ?t <= kmp1 ?s ?t",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KMP.kmp3_correct", "kmp3 ?s ?t <= kmp_SPEC ?s ?t",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KMP.strict_border_prefix",
     "strict_border ?xs ?ys ==> strict_prefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("KMP.strict_border_suffix",
     "strict_border ?xs ?ys ==> strict_suffix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("KMP.Nil_is_sublist", "sublist_at [] ?ys ?i = (?i <= length ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("KMP.\<ff>_eq_0_iff_j_eq_0", "(\<ff> ?s ?j = 0) = (?j = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("KMP.intrinsic_borderI",
     "strict_border ?k ?ys ==> strict_border (intrinsic_border ?ys) ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("KMP.strict_border_imp_nonempty",
     "strict_border ?xs ?ys ==> ?ys ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("KMP.sublist_iff_sublist_at",
     "sublist ?xs ?ys = (EX i. sublist_at ?xs ?ys i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("KMP.border_butlast",
     "border ?xs ?ys ==> border (butlast ?xs) (butlast ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KMP.border_length_le", "border ?xs ?ys ==> length ?xs <= length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("KMP.suffix_butlast",
     "suffix ?xs ?ys ==> suffix (butlast ?xs) (butlast ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KMP.intrinsic_borderI'",
     "?ys ~= [] ==> strict_border (intrinsic_border ?ys) ?ys",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("KMP.border_length_r_less",
     "ALL xs. strict_border xs ?ys --> length xs < length ?ys",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("KMP.strict_border_prefix_suffix",
     "strict_border ?xs ?ys =
      (strict_prefix ?xs ?ys & strict_suffix ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("KMP.border_take_\<ff>",
     "border (take (\<ff> ?s ?i - 1) ?s) (take ?i ?s)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_hole 0)),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))
         )),
    ("KMP.intrinsic_border_max",
     "strict_border ?x ?ys ==> length ?x <= length (intrinsic_border ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("KMP.j_le_\<ff>_le", "?j <= length ?s ==> \<ff> ?s ?j <= ?j",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("KMP.intrinsic_border_less",
     "?w ~= [] ==> length (intrinsic_border ?w) < length ?w",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("KMP.kmp_correct", "?s ~= [] ==> kmp ?s ?t <= kmp_SPEC ?s ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("KMP.kmp2_correct", "?s ~= [] ==> kmp2 ?s ?t <= kmp_SPEC ?s ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("KMP.sublist_lengths",
     "sublist_at ?xs ?ys ?i ==> ?i + length ?xs <= length ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("KMP.\<ff>_le", "?s ~= [] ==> \<ff> ?s ?j - 1 < length ?s",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_app (template_hole 0, template_var 1)))),
    ("KMP.nonempty_is_arg_max_ib",
     "?ys ~= [] ==>
      is_arg_max length (%xs. strict_border xs ?ys) (intrinsic_border ?ys)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2), t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KMP.\<ff>_butlast",
     "?j < length ?s ==> \<ff> (butlast ?s) ?j = \<ff> ?s ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("KMP.weak_kmp_SPEC",
     "kmp_SPEC ?s ?t <= SPEC (%pos. (pos ~= None) = sublist ?s ?t)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("KMP.strict_border_butlast",
     "[| ?xs ~= []; strict_border ?xs ?ys |]
      ==> strict_border (butlast ?xs) (butlast ?ys)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KMP.is_arg_min_id",
     "is_arg_min id ?P ?i = (?P ?i & (ALL ii<?i. ~ ?P ii))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_var 1, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("KMP.kmp_result",
     "kmp_SPEC ?s ?t =
      RETURN
       (if sublist ?s ?t then Some (LEAST i. sublist_at ?s ?t i)
        else None)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty))),
           template_hole 0)))),
    ("KMP.\<ff>_step_bound",
     "?j <= length ?w ==> \<ff> ?w ?j <= \<ff> ?w (?j - 1) + 1",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_hole 0)))),
    ("KMP.\<ff>_Suc",
     "Suc ?i <= length ?w ==> \<ff> ?w (Suc ?i) <= \<ff> ?w ?i + 1",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 4, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("KMP.ib_butlast",
     "2 <= length ?w ==>
      length (intrinsic_border ?w)
      <= length (intrinsic_border (butlast ?w)) + 1",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 1, template_var 0)))),
           template_hole 0)))),
    ("KMP.j_le_\<ff>_le'",
     "[| 0 < ?j; ?j <= length ?s |] ==> \<ff> ?s ?j - 1 < ?j",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0),
         template_var 1))),
    ("KMP.border_take_lengths",
     "[| ?i <= length ?s; border (take ?i ?s) (take ?j ?s) |] ==> ?i <= ?j",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 1))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("KMP.borderE",
     "[| border ?xs ?ys; [| prefix ?xs ?ys; suffix ?xs ?ys |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("KMP.intrinsic_border_take_less",
     "[| 0 < ?j; ?w ~= [] |]
      ==> length (intrinsic_border (take ?j ?w)) < length ?w",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 2, template_var 0)))),
    ("KMP.compute_butlast_\<ff>s_refine",
     "(?s, ?s') : br butlast ((~=) []) ==>
      compute_butlast_\<ff>s ?s <= \<Down> Id (compute_\<ff>s_SPEC ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 9, template_hole 8), t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("KMP.border_step",
     "border ?xs ?ys =
      border (?xs @ [?ys ! length ?xs]) (?ys @ [?ys ! length ?xs])",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 1))),
               template_hole 0))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 1))),
             template_hole 0))))),
    ("KMP.strict_border_step",
     "strict_border ?xs ?ys =
      strict_border (?xs @ [?ys ! length ?xs]) (?ys @ [?ys ! length ?xs])",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 1))),
               template_hole 0))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 1))),
             template_hole 0))))),
    ("KMP.sublist_at_altdef",
     "sublist_at ?xs ?ys ?i =
      (EX ps ss. ?ys = ps @ ?xs @ ss & ?i = length ps)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("KMP.strict_borderE",
     "[| strict_border ?xs ?ys;
         [| border ?xs ?ys; length ?xs < length ?ys |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_inequation
              (less_than, template_app (template_hole 0, template_var 2),
               template_app (template_hole 0, template_var 1))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("KMP.\<ff>_is_max",
     "[| ?j <= length ?s; strict_border ?b (take ?j ?s) |]
      ==> length ?b + 1 <= \<ff> ?s ?j",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 5, template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("KMP.sublist_all_positions",
     "sublist_at ?xs ?ys ?i ==>
      ALL jj<length ?xs. ?ys ! (?i + jj) = ?xs ! jj",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("KMP.strict_border_take_\<ff>",
     "[| 0 < ?i; ?i <= length ?s |]
      ==> strict_border (take (\<ff> ?s ?i - 1) ?s) (take ?i ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1)),
                     template_hole 0)),
                 template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("KMP.kmp_inner_in_bound",
     "[| ?i + length ?s <= length ?t; I_in_na ?s ?t ?i (?j, None) |]
      ==> ?j < length ?s",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app (template_hole 4, template_var 2)),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 4, template_var 2)))),
    ("KMP.kmp_SPEC_altdefs",
     "kmp_SPEC ?s ?t =
      SPEC
       (%x. case x of None => \<nexists>i. sublist_at ?s ?t i
            | Some i => is_arg_min id (sublist_at ?s ?t) i)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("KMP.take_length_ib",
     "[| 0 < ?j; ?j <= length ?s |]
      ==> take (length (intrinsic_border (take ?j ?s))) ?s =
          intrinsic_border (take ?j ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)))),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("KMP.kmp_inner_in_bound",
     "[| ?i + length ?s <= length ?t; I_in_na ?s ?t ?i (?j, None) |]
      ==> ?i + ?j < length ?t",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app (template_hole 4, template_var 2)),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 3),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 5, template_var 3), template_var 0),
         template_app (template_hole 4, template_var 1)))),
    ("KMP.border_positions",
     "border ?xs ?ys ==>
      ALL i<length ?xs. ?ys ! i = ?ys ! (length ?ys - length ?xs + i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("KMP.positions_border",
     "ALL j<?l. ?w ! j = ?w ! (length ?w - ?l + j) ==>
      border (take ?l ?w) ?w",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("KMP.compute_\<ff>s_inner_bounds",
     "[| I_out_cb ?s (?\<ff>s, ?ix, ?j); ?j < length ?\<ff>s;
         I_in_cb ?s ?j ?i |]
      ==> ?i - 1 < length ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 4)))),
    ("KMP.compute_\<ff>s_inner_bounds",
     "[| I_out_cb ?s (?\<ff>s, ?ix, ?j); ?j < length ?\<ff>s;
         I_in_cb ?s ?j ?i |]
      ==> ?j - 1 < length ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app (template_hole 0, template_var 4)))),
    ("KMP.kmp_SPEC_altdefs",
     "kmp_SPEC ?s ?t =
      SPEC
       (%x. case x of None => ~ sublist ?s ?t
            | Some i =>
                sublist_at ?s ?t i & (ALL ii<i. ~ sublist_at ?s ?t ii))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("KMP.positions_strict_border",
     "[| ?l < length ?w; ALL j<?l. ?w ! j = ?w ! (length ?w - ?l + j) |]
      ==> strict_border (take ?l ?w) ?w",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("KMP.all_positions_sublist",
     "[| ?i + length ?xs <= length ?ys;
         ALL jj<length ?xs. ?ys ! (?i + jj) = ?xs ! jj |]
      ==> sublist_at ?xs ?ys ?i",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 2),
            template_app (template_hole 6, template_var 1)),
          template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("KMP.\<ff>_strict_borderI",
     "[| ?y = \<ff> ?s (?i - 1);
         strict_border (take (?i - 1) ?s) (take (?j - 1) ?s) |]
      ==> strict_border (take (?y - 1) ?s) (take (?j - 1) ?s)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2)),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 0,
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_var 2))
           ))),
    ("KMP.sublist_step",
     "[| ?i + length ?xs < length ?ys; sublist_at ?xs ?ys ?i;
         ?ys ! (?i + length ?xs) = ?x |]
      ==> sublist_at (?xs @ [?x]) ?ys ?i",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app (template_hole 6, template_var 2)),
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))),
               template_var 1),
             template_var 3)
           ))),
    ("KMP.in_bounds_aux",
     "[| I_out_cb (butlast ?s) (?\<ff>s, ?ix, ?j); ?j < length ?\<ff>s;
         I_in_cb (butlast ?s) ?j ?i |]
      ==> ?i - Suc 0 < length ?s - Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 4)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 9, template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_hole 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 4)),
           template_app (template_hole 2, template_hole 1))))),
    ("KMP.in_bounds_aux",
     "[| I_out_cb (butlast ?s) (?\<ff>s, ?ix, ?j); ?j < length ?\<ff>s;
         I_in_cb (butlast ?s) ?j ?i |]
      ==> ?j - Suc 0 < length ?s - Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 4)),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 9, template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_hole 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 4)),
           template_app (template_hole 2, template_hole 1))))),
    ("KMP.all_positions_suffix_take",
     "[| ?i <= length ?w; ?i <= length ?x;
         ALL j<?i. ?x ! j = ?w ! (length ?w + j - ?i) |]
      ==> suffix (take ?i ?x) ?w",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 9, template_var 0)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("KMP.all_positions_drop_length_take",
     "[| ?i <= length ?w; ?i <= length ?x;
         ALL j<?i. ?x ! j = ?w ! (length ?w + j - ?i) |]
      ==> drop (length ?w - ?i) ?w = take ?i ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 10, template_var 0)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 10, template_var 1)),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("KMP.extend_border",
     "[| ?j <= length ?s; ?s ! (?i - 1) = ?s ! (?j - 1);
         strict_border (take (?i - 1) ?s) (take (?j - 1) ?s);
         \<ff> ?s ?j <= ?i + 1 |]
      ==> \<ff> ?s ?j = ?i + 1",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 6, template_var 0),
                      template_hole 5)),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 5)),
                template_var 1))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 5)))),
    ("KMP.reuse_matches",
     "[| ?j <= length ?s; ALL jj<?j. ?t ! (?i + jj) = ?s ! jj |]
      ==> ALL jj<\<ff> ?s ?j - 1.
             ?t ! (?i + (?j - \<ff> ?s ?j + 1) + jj) = ?s ! jj",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("KMP.kmp_impl_correct",
     "<arl_assn id_assn ?s ?si *
       arl_assn id_assn ?t
        ?ti> kmp_impl ?si
              ?ti <%r. arl_assn id_assn ?s ?si * arl_assn id_assn ?t ?ti *
                       \<up>
                        (case r of None => \<nexists>i. sublist_at ?s ?t i
                         | Some i =>
                             sublist_at ?s ?t i &
                             (ALL ii<i. ~ sublist_at ?s ?t ii))>\<^sub>t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 13,
                         template_app (template_hole 12, template_hole 11)),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 13,
                       template_app (template_hole 12, template_hole 11)),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 10, template_var 2),
               template_var 0)),
           t_empty)
         )),
    ("KMP.skipping_ok",
     "[| 1 < ?j; ?j <= length ?s; ?s ! (?i - 1) ~= ?s ! (?j - 1);
         \<ff> ?s ?j <= ?i + 1;
         strict_border (take (?i - 1) ?s) (take (?j - 1) ?s) |]
      ==> \<ff> ?s ?j <= \<ff> ?s (?i - 1) + 1",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 8, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 10)),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 10)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 4, template_var 0),
                      template_hole 10)),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 0,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_hole 10)),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 10))),
           template_hole 10)))),
    ("KMP.shift_safe",
     "[| ALL ii<?i. ~ sublist_at ?s ?t ii; ?t ! (?i + ?j) ~= ?s ! ?j;
         ?j < length ?s; ALL jj<?j. ?t ! (?i + jj) = ?s ! jj |]
      ==> ALL ii<?i + (?j - \<ff> ?s ?j + 1). ~ sublist_at ?s ?t ii",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 11, t_empty))))]:
   (string * thm * template) list
### theory "Draft.KMPTemplates"
### 1.027s elapsed time, 1.816s cpu time, 0.185s GC time
val it = (): unit
