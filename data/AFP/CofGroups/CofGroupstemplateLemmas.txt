   [("CofGroups.no_fix_upOne", "upOne ?n ~= ?n",
     template_negation
      (
         template_equation
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("CofGroups.inv_upOne_eq", "inv upOne ?n = ?n - 1",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("CofGroups.all_bij", "?f : CofGroups.Ex1 ==> bij ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_hole 0)
           ))),
    ("CofGroups.comp_CONJ", "CONJ (?f o ?g) = CONJ ?f o CONJ ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("CofGroups.closed_inv",
     "?f : CofGroups.Ex1 ==> inv ?f : CofGroups.Ex1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("CofGroups.inv_Ex2", "?f : Ex2 ==> inv ?f : Ex2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("CofGroups.bij_f_o_inf_f", "bij ?f ==> ?f o inv ?f = id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 5),
             template_var 0)),
         template_hole 0))),
    ("CofGroups.cofinitary", "?f : Ex2 & ?f ~= id ==> finite (Fix ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("CofGroups.Ex1_Normal_form_part2",
     "ALL f. (ALL n. f n = n + ?k) --> f : CofGroups.Ex1",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("CofGroups.Ex1_Normal_form",
     "(?f : CofGroups.Ex1) = (EX k. ALL n. ?f n = n + k)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("CofGroups.mem_Ex2_rule",
     "(?f : Ex2) = (EX g. g : CofGroups.Ex1 & ?f = CONJ g)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 0), template_hole 6),
       template_app (template_hole 5, t_empty))),
    ("CofGroups.type_CONJ",
     "?f : CofGroups.Ex1 ==> inv ni_bij o ?f o ni_bij : S_inf",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 1)),
                     template_var 0)),
                 template_hole 1)),
             template_hole 0)
           ))),
    ("CofGroups.closed_comp",
     "?f : CofGroups.Ex1 & ?g : CofGroups.Ex1 ==> ?f o ?g : CofGroups.Ex1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CofGroups.mult_closed", "?f : Ex2 & ?g : Ex2 ==> ?f o ?g : Ex2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CofGroups.Ex1_Normal_form_part1",
     "?f : CofGroups.Ex1 ==> EX k. ALL n. ?f n = n + k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("CofGroups.inv_CONJ", "bij ?f ==> inv (CONJ ?f) = CONJ (inv ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 5),
             template_var 0))))),
    ("CofGroups.no_fixed_pt",
     "[| ?f : CofGroups.Ex1; ?f ~= id |] ==> Fix ?f = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("CofGroups.comp_Ex2", "[| ?f : Ex2; ?g : Ex2 |] ==> ?f o ?g : Ex2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CofGroups.Ex2_cofinitary", "[| ?f : Ex2; ?f ~= id |] ==> Fix ?f = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("CofGroups.conj_fix_pt",
     "bij ?f ==> inv ?f ` Fix ?g = Fix (inv ?f o ?g o ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 1),
                template_hole 8),
              template_hole 7)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 8),
               template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_hole 8),
                     template_var 1)),
                 template_var 0)),
             template_var 1)))))]
