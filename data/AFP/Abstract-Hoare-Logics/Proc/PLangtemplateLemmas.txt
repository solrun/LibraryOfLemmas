   [("PLang.exec_iff_execn",
     "(?s -?c\<rightarrow> ?t) = (EX n. ?s -?c-n\<rightarrow> ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("PLang.exec_mono",
     "[| ?s -?c-?m\<rightarrow> ?t; ?m <= ?n |]
      ==> ?s -?c-?n\<rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("PLang.unfold_while",
     "(?s -WHILE ?b DO ?c\<rightarrow> ?u) =
      (?s -IF ?b THEN ?c; WHILE ?b DO ?c ELSE Do (%s. {s})\<rightarrow>
       ?u)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1))),
             template_app (template_hole 2, t_empty))),
         template_var 0))),
    ("PLang.WhileI",
     "[| ?b ?s; ?s -?c\<rightarrow> ?t;
         ?t -WHILE ?b DO ?c\<rightarrow> ?u |]
      ==> ?s -WHILE ?b DO ?c\<rightarrow> ?u",
     template_implication
      ([template_predicate (template_app (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_var 0)
           ))),
    ("PLang.while_lemma",
     "[| ?s -?w-?n\<rightarrow> ?t;
         ?w = WHILE ?b DO ?c &
         ?P ?s &
         (ALL s s'. ?P s & ?b s & s -?c-?n\<rightarrow> s' --> ?P s') |]
      ==> ?P ?t & ~ ?b ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_var 0, template_var 6)),
                template_app (template_hole 2, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_var 0, template_var 3)),
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 3)))
           ))),
    ("PLang.while_rule",
     "[| ?s -WHILE ?b DO ?c-?n\<rightarrow> ?t; ?P ?s;
         !!s s'. [| ?P s; ?b s; s -?c-?n\<rightarrow> s' |] ==> ?P s' |]
      ==> ?P ?t & ~ ?b ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 5)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 0, template_var 1)),
             template_app
              (template_hole 0,
               template_app (template_var 4, template_var 1)))
           )))]
