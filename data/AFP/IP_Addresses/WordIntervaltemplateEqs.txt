   [("WordInterval.wordinterval_size_length",
     "wordinterval_size ?r = length (wi2l ?r)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("WordInterval.wordinterval_compress",
     "wordinterval_to_set (wordinterval_compress ?r) =
      wordinterval_to_set ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("WordInterval.wordinterval_optimize_empty_set_eq",
     "wordinterval_to_set (wordinterval_optimize_empty ?r) =
      wordinterval_to_set ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("WordInterval.wordinterval_optimize_empty_double",
     "wordinterval_optimize_empty (wordinterval_optimize_empty ?r) =
      wordinterval_optimize_empty ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("WordInterval.l2wi_wi2l",
     "wordinterval_to_set (l2wi (wi2l ?r)) = wordinterval_to_set ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("WordInterval.wordinterval_empty_set_eq",
     "wordinterval_empty ?r = (wordinterval_to_set ?r = {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("WordInterval.helper_optimize_shallow",
     "??.WordInterval.wordinterval_empty_shallow
       (wordinterval_optimize_empty ?r) =
      wordinterval_empty (wordinterval_optimize_empty ?r)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("WordInterval.wordinterval_eq_comm",
     "wordinterval_eq ?r1.0 ?r2.0 = wordinterval_eq ?r2.0 ?r1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("WordInterval.wordinterval_lowest_none_empty",
     "(wordinterval_lowest_element ?r = None) = wordinterval_empty ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("WordInterval.wordinterval_to_set_alt",
     "wordinterval_to_set ?r = {x. wordinterval_element x ?r}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("WordInterval.wordinterval_invert_set_eq",
     "wordinterval_to_set (wordinterval_invert ?r) =
      UNIV - wordinterval_to_set ?r",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("WordInterval.l2wi_remdups",
     "wordinterval_to_set (l2wi (remdups ?ls)) =
      wordinterval_to_set (l2wi ?ls)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)))),
    ("WordInterval.wordinterval_element_set_eq",
     "wordinterval_element ?el ?rg = (?el : wordinterval_to_set ?rg)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("WordInterval.wordinterval_eq_set_eq",
     "wordinterval_eq ?r1.0 ?r2.0 =
      (wordinterval_to_set ?r1.0 = wordinterval_to_set ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("WordInterval.wordinterval_subset_set_eq",
     "wordinterval_subset ?r1.0 ?r2.0 =
      (wordinterval_to_set ?r1.0 <= wordinterval_to_set ?r2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("WordInterval.wordinterval_intersection_set_eq",
     "wordinterval_to_set (wordinterval_intersection ?r1.0 ?r2.0) =
      wordinterval_to_set ?r1.0 Int wordinterval_to_set ?r2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("WordInterval.wordinterval_intersection'_set_eq",
     "wordinterval_to_set
       (??.WordInterval.wordinterval_intersection' ?r1.0 ?r2.0) =
      wordinterval_to_set ?r1.0 Int wordinterval_to_set ?r2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("WordInterval.wordinterval_setminus_set_eq",
     "wordinterval_to_set (wordinterval_setminus ?r1.0 ?r2.0) =
      wordinterval_to_set ?r1.0 - wordinterval_to_set ?r2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("WordInterval.wordinterval_setminus'_set_eq",
     "wordinterval_to_set
       (??.WordInterval.wordinterval_setminus' ?r1.0 ?r2.0) =
      wordinterval_to_set ?r1.0 - wordinterval_to_set ?r2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("WordInterval.wordinterval_union_set_eq",
     "wordinterval_to_set (wordinterval_union ?r1.0 ?r2.0) =
      wordinterval_to_set ?r1.0 Un wordinterval_to_set ?r2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("WordInterval.card_atLeastAtMost_word",
     "card {?s..?e} = Suc (unat ?e) - unat ?s",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("WordInterval.wordinterval_Union",
     "wordinterval_to_set (wordinterval_Union ?ws) =
      \<Union> (wordinterval_to_set ` set ?ws)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("WordInterval.l2wi_append",
     "wordinterval_to_set (l2wi (?l1.0 @ ?l2.0)) =
      wordinterval_to_set (l2wi ?l1.0) Un wordinterval_to_set (l2wi ?l2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("WordInterval.l2wi",
     "wordinterval_to_set (l2wi ?l) = (UN (i, j):set ?l. {i..j})",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app (template_hole 0, template_var 0))))),
    ("WordInterval.wi2l",
     "(UN (i, j):set (wi2l ?r). {i..j}) = wordinterval_to_set ?r",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_app (template_hole 0, template_var 0))),
    ("WordInterval.listwordinterval_adjacent",
     "\<Union>
       (??.WordInterval.interval_of `
        set (??.WordInterval.listwordinterval_adjacent ?ss)) =
      \<Union> (??.WordInterval.interval_of ` set ?ss)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))))),
    ("WordInterval.listwordinterval_compress",
     "\<Union>
       (??.WordInterval.interval_of `
        set (??.WordInterval.listwordinterval_compress ?ss)) =
      \<Union> (??.WordInterval.interval_of ` set ?ss)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))))),
    ("WordInterval.wordinterval_setminus'_rr_set_eq",
     "wordinterval_to_set
       (??.WordInterval.wordinterval_setminus' (WordInterval ?s ?e)
         (WordInterval ?ms ?me)) =
      wordinterval_to_set (WordInterval ?s ?e) -
      wordinterval_to_set (WordInterval ?ms ?me)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("WordInterval.merge_adjacent_helper",
     "??.WordInterval.interval_of ?A Un
      \<Union> (??.WordInterval.interval_of ` set ?ss) =
      \<Union>
       (??.WordInterval.interval_of `
        set (??.WordInterval.merge_adjacent ?A ?ss))",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))))))]
