Loading theory "Draft.StandardBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel" via "Draft.Binary_Product_QuasiBorel" via "Draft.Measure_QuasiBorel_Adjunction" via "Draft.QuasiBorel")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.240s cpu time, 0.000s GC time
locale standard_borel
  fixes M :: "'a measure"
  assumes "standard_borel M"
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.356s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.ExtrEqs")
locale standard_borel_space_UNIV
  fixes M :: "'a measure"
  assumes "standard_borel_space_UNIV M"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale pair_standard_borel
  fixes M :: "'a measure"
    and N :: "'b measure"
  assumes "pair_standard_borel M N"
locale pair_standard_borel_space_UNIV
  fixes M :: "'a measure"
    and N :: "'b measure"
  assumes "pair_standard_borel_space_UNIV M N"
### theory "HOL-Library.BigO"
### 0.627s elapsed time, 1.351s cpu time, 0.207s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates")
### theory "Draft.StandardBorel"
### 0.767s elapsed time, 1.687s cpu time, 0.254s GC time
Loading theory "Draft.QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel" via "Draft.Binary_Product_QuasiBorel" via "Draft.Measure_QuasiBorel_Adjunction")
Proofs for inductive predicate(s) "generating_Mxp"
  Proving monotonicity ...
instantiation
  quasi_borel :: (type) order_bot
  bot_quasi_borel == bot :: 'a quasi_borel
  less_eq_quasi_borel == less_eq :: 'a quasi_borel => 'a quasi_borel => bool
  less_quasi_borel == less :: 'a quasi_borel => 'a quasi_borel => bool
Proofs for inductive predicate(s) "less_eq_quasi_borel"
  Proving monotonicity ...
instantiation
  quasi_borel :: (type) semilattice_sup
  sup_quasi_borel == sup ::
    'a quasi_borel => 'a quasi_borel => 'a quasi_borel
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.488s elapsed time, 1.000s cpu time, 0.068s GC time
### theory "Draft.QuasiBorel"
### 0.503s elapsed time, 1.044s cpu time, 0.108s GC time
Loading theory "Draft.Measure_QuasiBorel_Adjunction" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel" via "Draft.Binary_Product_QuasiBorel")
### theory "Draft.Measure_QuasiBorel_Adjunction"
### 0.171s elapsed time, 0.171s cpu time, 0.000s GC time
Loading theory "Draft.Binary_CoProduct_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel")
Loading theory "Draft.Binary_Product_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel")
### theory "Draft.Binary_Product_QuasiBorel"
### 0.174s elapsed time, 0.392s cpu time, 0.109s GC time
Loading theory "Draft.Product_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel")
### theory "Draft.Binary_CoProduct_QuasiBorel"
### 0.171s elapsed time, 0.386s cpu time, 0.109s GC time
### theory "Draft.Product_QuasiBorel"
### 0.113s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.CoProduct_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel")
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.CoProduct_QuasiBorel"
### 0.849s elapsed time, 1.241s cpu time, 0.551s GC time
Loading theory "Draft.Exponent_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel")
### theory "Draft.Exponent_QuasiBorel"
### 0.160s elapsed time, 0.160s cpu time, 0.000s GC time
Loading theory "Draft.Probability_Space_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure" via "Draft.Monad_QuasiBorel")
locale in_Mx
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
  assumes "in_Mx X \<alpha>"
locale qbs_prob
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
    and \<mu> :: "real measure"
  assumes "qbs_prob X \<alpha> \<mu>"
locale pair_qbs_probs
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
    and \<mu> :: "real measure"
    and Y :: "'b quasi_borel"
    and \<beta> :: "real => 'b"
    and \<nu> :: "real measure"
  assumes "pair_qbs_probs X \<alpha> \<mu> Y \<beta> \<nu>"
locale pair_qbs_prob
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
    and \<mu> :: "real measure"
    and Y :: "'a quasi_borel"
    and \<beta> :: "real => 'a"
    and \<nu> :: "real measure"
  assumes "pair_qbs_prob X \<alpha> \<mu> Y \<beta> \<nu>"
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "QuasiBorel.quasi_borel" found.
### theory "Draft.Probability_Space_QuasiBorel"
### 1.769s elapsed time, 1.976s cpu time, 0.307s GC time
Loading theory "Draft.Monad_QuasiBorel" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure" via "Draft.Pair_QuasiBorel_Measure")
locale in_Px
  fixes X :: "'a quasi_borel"
    and s :: "'a qbs_prob_space"
  assumes "in_Px X s"
locale in_MPx
  fixes X :: "'a quasi_borel"
    and \<beta> :: "real => 'a qbs_prob_space"
  assumes "in_MPx X \<beta>"
### theory "Draft.Monad_QuasiBorel"
### 0.948s elapsed time, 1.505s cpu time, 0.762s GC time
Loading theory "Draft.Pair_QuasiBorel_Measure" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates" via "Draft.Measure_as_QuasiBorel_Measure")
### theory "Draft.Pair_QuasiBorel_Measure"
### 0.522s elapsed time, 0.599s cpu time, 0.117s GC time
Loading theory "Draft.Measure_as_QuasiBorel_Measure" (required by "Draft.Measure_as_QuasiBorel_MeasureTemplates")
locale standard_borel_prob_space
  fixes P :: "'a measure"
  assumes "standard_borel_prob_space P"
### theory "Draft.Measure_as_QuasiBorel_Measure"
### 0.550s elapsed time, 0.606s cpu time, 0.081s GC time
Loading theory "Draft.Measure_as_QuasiBorel_MeasureTemplates"
val templateLemmas =
   [("Measure_as_QuasiBorel_Measure.sets_interval_uniform_distribution",
     "sets (interval_uniform_distribution ?a ?b) = sets real_borel",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 2, template_hole 0))),
    ("Measure_as_QuasiBorel_Measure.qbs_bernoulli_measure",
     "qbs_prob_measure (qbs_bernoulli ?p) = measure_pmf (bernoulli_pmf ?p)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Measure_as_QuasiBorel_Measure.qbs_normal_distribution_integral",
     "0 < ?\<sigma> ==>
      qbs_prob_integral (qbs_normal_distribution ?\<mu> ?\<sigma>) ?f =
      integral\<^sup>L
       (density lborel (%x. ennreal (normal_density ?\<mu> ?\<sigma> x)))
       ?f",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 2)),
           t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2), t_empty)),
           t_empty)))),
    ("Measure_as_QuasiBorel_Measure.qbs_bernoulli_expectation",
     "[| 0 <= ?p; ?p <= 1 |]
      ==> qbs_prob_integral (qbs_bernoulli ?p) ?f =
          ?f True * ?p + ?f False * (1 - ?p)",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation (less_equals, template_var 1, template_hole 8)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 0, template_hole 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_var 0, template_hole 1)),
             template_app
              (template_app (template_hole 0, template_hole 8),
               template_var 1)))))),
    ("Measure_as_QuasiBorel_Measure.qbs_normal_distribution_expectation",
     "[| 0 < ?\<sigma>; ?f : borel_measurable real_borel |]
      ==> qbs_prob_integral (qbs_normal_distribution ?\<mu> ?\<sigma>) ?f =
          LBINT x. normal_density ?\<mu> ?\<sigma> x * ?f x",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2)),
           t_empty),
         template_app
          (template_app (template_hole 3, template_hole 2), t_empty)))),
    ("Measure_as_QuasiBorel_Measure.distr_id'",
     "[| sets ?N = sets ?M; ?f : ?N \<rightarrow>\<^sub>M ?N;
         !!x. x : space ?N ==> ?f x = x |]
      ==> distr ?N ?M ?f = ?N",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("Measure_as_QuasiBorel_Measure.qbs_uniform_distribution_expectation",
     "[| ?a < ?b;
         ?f : \<real>\<^sub>Q \<rightarrow>\<^sub>Q
              \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0 |]
      ==> qbs_prob_ennintegral (ab_qbs_uniform_distribution ?a ?b) ?f =
          set_nn_integral lborel {?a<..<?b} ?f / ennreal (?b - ?a)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app (template_hole 12, template_hole 11)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           t_empty),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5), t_empty)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))))))]:
   (string * thm * template) list
### theory "Draft.Measure_as_QuasiBorel_MeasureTemplates"
### 1.528s elapsed time, 2.561s cpu time, 1.110s GC time
val it = (): unit
