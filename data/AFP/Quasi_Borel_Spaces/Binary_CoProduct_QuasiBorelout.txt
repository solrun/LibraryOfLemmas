Loading theory "Draft.StandardBorel" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates" via "Draft.Binary_CoProduct_QuasiBorel" via "Draft.Measure_QuasiBorel_Adjunction" via "Draft.QuasiBorel")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.242s cpu time, 0.000s GC time
locale standard_borel
  fixes M :: "'a measure"
  assumes "standard_borel M"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.359s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates" via "Draft.ExtrEqs")
locale standard_borel_space_UNIV
  fixes M :: "'a measure"
  assumes "standard_borel_space_UNIV M"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale pair_standard_borel
  fixes M :: "'a measure"
    and N :: "'b measure"
  assumes "pair_standard_borel M N"
locale pair_standard_borel_space_UNIV
  fixes M :: "'a measure"
    and N :: "'b measure"
  assumes "pair_standard_borel_space_UNIV M N"
### theory "HOL-Library.BigO"
### 0.636s elapsed time, 1.365s cpu time, 0.196s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates")
### theory "Draft.StandardBorel"
### 0.780s elapsed time, 1.711s cpu time, 0.253s GC time
Loading theory "Draft.QuasiBorel" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates" via "Draft.Binary_CoProduct_QuasiBorel" via "Draft.Measure_QuasiBorel_Adjunction")
Proofs for inductive predicate(s) "generating_Mxp"
  Proving monotonicity ...
instantiation
  quasi_borel :: (type) order_bot
  bot_quasi_borel == bot :: 'a quasi_borel
  less_eq_quasi_borel == less_eq :: 'a quasi_borel => 'a quasi_borel => bool
  less_quasi_borel == less :: 'a quasi_borel => 'a quasi_borel => bool
Proofs for inductive predicate(s) "less_eq_quasi_borel"
  Proving monotonicity ...
instantiation
  quasi_borel :: (type) semilattice_sup
  sup_quasi_borel == sup ::
    'a quasi_borel => 'a quasi_borel => 'a quasi_borel
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.525s elapsed time, 1.069s cpu time, 0.060s GC time
### theory "Draft.QuasiBorel"
### 0.542s elapsed time, 1.111s cpu time, 0.102s GC time
Loading theory "Draft.Measure_QuasiBorel_Adjunction" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates" via "Draft.Binary_CoProduct_QuasiBorel")
### theory "Draft.Measure_QuasiBorel_Adjunction"
### 0.179s elapsed time, 0.179s cpu time, 0.000s GC time
Loading theory "Draft.Binary_CoProduct_QuasiBorel" (required by "Draft.Binary_CoProduct_QuasiBorelTemplates")
### theory "Draft.Binary_CoProduct_QuasiBorel"
### 0.128s elapsed time, 0.128s cpu time, 0.000s GC time
Loading theory "Draft.Binary_CoProduct_QuasiBorelTemplates"
val templateLemmas =
   [("Binary_CoProduct_QuasiBorel.copair_qbs_closed1",
     "qbs_closed1 (copair_qbs_Mx ?X ?Y)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_closed3",
     "qbs_closed3 (copair_qbs_Mx ?X ?Y)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_Mx_equiv",
     "copair_qbs_Mx ?X ?Y = copair_qbs_Mx2 ?X ?Y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Binary_CoProduct_QuasiBorel.Inl_qbs_morphism",
     "Inl : ?X \<rightarrow>\<^sub>Q ?X <+>\<^sub>Q ?Y",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Binary_CoProduct_QuasiBorel.Inr_qbs_morphism",
     "Inr : ?Y \<rightarrow>\<^sub>Q ?X <+>\<^sub>Q ?Y",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))
         )),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_Mx",
     "qbs_Mx (?X <+>\<^sub>Q ?Y) = copair_qbs_Mx ?X ?Y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_closed2",
     "qbs_closed2 (qbs_space ?X <+> qbs_space ?Y) (copair_qbs_Mx ?X ?Y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_space",
     "qbs_space (?X <+>\<^sub>Q ?Y) = qbs_space ?X <+> qbs_space ?Y",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_f",
     "copair_qbs_Mx ?X ?Y
      <= UNIV \<rightarrow> qbs_space ?X <+> qbs_space ?Y",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3), t_empty))),
    ("Binary_CoProduct_QuasiBorel.copair_qbs_correct",
     "Rep_quasi_borel (?X <+>\<^sub>Q ?Y) =
      (qbs_space ?X <+> qbs_space ?Y, copair_qbs_Mx ?X ?Y)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Binary_CoProduct_QuasiBorel.case_sum_preserves_morphisms",
     "[| ?f : ?X \<rightarrow>\<^sub>Q ?Z;
         ?g : ?Y \<rightarrow>\<^sub>Q ?Z |]
      ==> case_sum ?f ?g : ?X <+>\<^sub>Q ?Y \<rightarrow>\<^sub>Q ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2))
           ))),
    ("Binary_CoProduct_QuasiBorel.map_sum_preserves_morphisms",
     "[| ?f : ?X \<rightarrow>\<^sub>Q ?Y;
         ?g : ?X' \<rightarrow>\<^sub>Q ?Y' |]
      ==> map_sum ?f ?g
          : ?X <+>\<^sub>Q ?X' \<rightarrow>\<^sub>Q ?Y <+>\<^sub>Q ?Y'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.Binary_CoProduct_QuasiBorelTemplates"
### 1.419s elapsed time, 2.073s cpu time, 0.660s GC time
val it = (): unit
