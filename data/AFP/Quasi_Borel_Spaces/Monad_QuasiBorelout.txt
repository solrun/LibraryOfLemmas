Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.StandardBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel" via "Draft.Binary_Product_QuasiBorel" via "Draft.Measure_QuasiBorel_Adjunction" via "Draft.QuasiBorel")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.087s elapsed time, 0.302s cpu time, 0.000s GC time
locale standard_borel
  fixes M :: "'a measure"
  assumes "standard_borel M"
### theory "HOL-Library.Function_Algebras"
### 0.115s elapsed time, 0.357s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.ExtrEqs")
locale standard_borel_space_UNIV
  fixes M :: "'a measure"
  assumes "standard_borel_space_UNIV M"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale pair_standard_borel
  fixes M :: "'a measure"
    and N :: "'b measure"
  assumes "pair_standard_borel M N"
locale pair_standard_borel_space_UNIV
  fixes M :: "'a measure"
    and N :: "'b measure"
  assumes "pair_standard_borel_space_UNIV M N"
### theory "HOL-Library.BigO"
### 0.629s elapsed time, 1.338s cpu time, 0.169s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Monad_QuasiBorelTemplates")
### theory "Draft.StandardBorel"
### 0.757s elapsed time, 1.686s cpu time, 0.219s GC time
Loading theory "Draft.QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel" via "Draft.Binary_Product_QuasiBorel" via "Draft.Measure_QuasiBorel_Adjunction")
Proofs for inductive predicate(s) "generating_Mxp"
  Proving monotonicity ...
instantiation
  quasi_borel :: (type) order_bot
  bot_quasi_borel == bot :: 'a quasi_borel
  less_eq_quasi_borel == less_eq :: 'a quasi_borel => 'a quasi_borel => bool
  less_quasi_borel == less :: 'a quasi_borel => 'a quasi_borel => bool
Proofs for inductive predicate(s) "less_eq_quasi_borel"
  Proving monotonicity ...
instantiation
  quasi_borel :: (type) semilattice_sup
  sup_quasi_borel == sup ::
    'a quasi_borel => 'a quasi_borel => 'a quasi_borel
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.490s elapsed time, 0.998s cpu time, 0.058s GC time
### theory "Draft.QuasiBorel"
### 0.499s elapsed time, 1.029s cpu time, 0.097s GC time
Loading theory "Draft.Measure_QuasiBorel_Adjunction" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel" via "Draft.Binary_Product_QuasiBorel")
### theory "Draft.Measure_QuasiBorel_Adjunction"
### 0.158s elapsed time, 0.167s cpu time, 0.000s GC time
Loading theory "Draft.Binary_CoProduct_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel")
Loading theory "Draft.Binary_Product_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel" via "Draft.Product_QuasiBorel")
### theory "Draft.Binary_CoProduct_QuasiBorel"
### 0.160s elapsed time, 0.357s cpu time, 0.095s GC time
### theory "Draft.Binary_Product_QuasiBorel"
### 0.162s elapsed time, 0.362s cpu time, 0.095s GC time
Loading theory "Draft.Product_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel" via "Draft.CoProduct_QuasiBorel")
### theory "Draft.Product_QuasiBorel"
### 0.105s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.CoProduct_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel" via "Draft.Exponent_QuasiBorel")
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.CoProduct_QuasiBorel"
### 0.797s elapsed time, 1.160s cpu time, 0.513s GC time
Loading theory "Draft.Exponent_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel" via "Draft.Probability_Space_QuasiBorel")
### theory "Draft.Exponent_QuasiBorel"
### 0.150s elapsed time, 0.150s cpu time, 0.000s GC time
Loading theory "Draft.Probability_Space_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates" via "Draft.Monad_QuasiBorel")
locale in_Mx
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
  assumes "in_Mx X \<alpha>"
locale qbs_prob
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
    and \<mu> :: "real measure"
  assumes "qbs_prob X \<alpha> \<mu>"
locale pair_qbs_probs
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
    and \<mu> :: "real measure"
    and Y :: "'b quasi_borel"
    and \<beta> :: "real => 'b"
    and \<nu> :: "real measure"
  assumes "pair_qbs_probs X \<alpha> \<mu> Y \<beta> \<nu>"
locale pair_qbs_prob
  fixes X :: "'a quasi_borel"
    and \<alpha> :: "real => 'a"
    and \<mu> :: "real measure"
    and Y :: "'a quasi_borel"
    and \<beta> :: "real => 'a"
    and \<nu> :: "real measure"
  assumes "pair_qbs_prob X \<alpha> \<mu> Y \<beta> \<nu>"
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "QuasiBorel.quasi_borel" found.
### theory "Draft.Probability_Space_QuasiBorel"
### 1.665s elapsed time, 1.858s cpu time, 0.287s GC time
Loading theory "Draft.Monad_QuasiBorel" (required by "Draft.Monad_QuasiBorelTemplates")
locale in_Px
  fixes X :: "'a quasi_borel"
    and s :: "'a qbs_prob_space"
  assumes "in_Px X s"
locale in_MPx
  fixes X :: "'a quasi_borel"
    and \<beta> :: "real => 'a qbs_prob_space"
  assumes "in_MPx X \<beta>"
### theory "Draft.Monad_QuasiBorel"
### 0.920s elapsed time, 1.502s cpu time, 0.801s GC time
Loading theory "Draft.Monad_QuasiBorelTemplates"
val templateLemmas =
   [("Monad_QuasiBorel.monadP_qbs_closed1",
     "qbs_closed1 (monadP_qbs_MPx ?X)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Monad_QuasiBorel.monadP_qbs_closed3",
     "qbs_closed3 (monadP_qbs_MPx ?X)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Monad_QuasiBorel.qbs_l_inj",
     "inj_on qbs_prob_measure (monadP_qbs_Px ?X)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Monad_QuasiBorel.monadP_qbs_closed2",
     "qbs_closed2 (monadP_qbs_Px ?X) (monadP_qbs_MPx ?X)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Monad_QuasiBorel.monadP_qbs_Mx",
     "qbs_Mx (monadP_qbs ?X) = monadP_qbs_MPx ?X",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Monad_QuasiBorel.monadP_qbs_space",
     "qbs_space (monadP_qbs ?X) = monadP_qbs_Px ?X",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Monad_QuasiBorel.qbs_return_morphism",
     "qbs_return ?X : ?X \<rightarrow>\<^sub>Q monadP_qbs ?X",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Monad_QuasiBorel.monadP_qbs_f",
     "monadP_qbs_MPx ?X <= UNIV \<rightarrow> monadP_qbs_Px ?X",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1), t_empty))),
    ("Monad_QuasiBorel.qbs_join_morphism",
     "qbs_join
      : monadP_qbs (monadP_qbs ?X) \<rightarrow>\<^sub>Q monadP_qbs ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Monad_QuasiBorel.monadP_qbs_correct",
     "Rep_quasi_borel (monadP_qbs ?X) =
      (monadP_qbs_Px ?X, monadP_qbs_MPx ?X)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Monad_QuasiBorel.qbs_prob_measure_measurable",
     "qbs_prob_measure
      : qbs_to_measure (monadP_qbs ?X) \<rightarrow>\<^sub>M
        prob_algebra (qbs_to_measure ?X)",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Monad_QuasiBorel.qbs_prob_measure_measurable'",
     "qbs_prob_measure
      : qbs_to_measure (monadP_qbs ?X) \<rightarrow>\<^sub>M
        subprob_algebra (qbs_to_measure ?X)",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Monad_QuasiBorel.monadP_qbs_empty_iff",
     "(qbs_space ?X = {}) = (qbs_space (monadP_qbs ?X) = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Monad_QuasiBorel.qbs_of_return",
     "?x : qbs_space ?X ==> qbs_prob_space_qbs (qbs_return ?X ?x) = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Monad_QuasiBorel.qbs_bind_return'",
     "?x : monadP_qbs_Px ?X ==> ?x >>= qbs_return ?X = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Monad_QuasiBorel.qbs_strength_morphism",
     "qbs_strength ?X ?Y
      : ?X \<Otimes>\<^sub>Q monadP_qbs ?Y \<rightarrow>\<^sub>Q
        monadP_qbs (?X \<Otimes>\<^sub>Q ?Y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("Monad_QuasiBorel.monadP_qbs_Pf_id",
     "?s : monadP_qbs_Px ?X ==> monadP_qbs_Pf ?X ?X id ?s = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0),
             template_hole 0),
           template_var 1),
         template_var 1))),
    ("Monad_QuasiBorel.qbs_prob_measure_return",
     "?x : qbs_space ?X ==>
      qbs_prob_measure (qbs_return ?X ?x) = return (qbs_to_measure ?X) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Monad_QuasiBorel.qbs_bind_morphism'''",
     "(%f x. x >>= f)
      : ?X \<Rightarrow>\<^sub>Q monadP_qbs ?Y \<rightarrow>\<^sub>Q
        monadP_qbs ?X \<Rightarrow>\<^sub>Q monadP_qbs ?Y",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 2, template_var 0))))
         )),
    ("Monad_QuasiBorel.qbs_bind_morphism''",
     "(%(f, x). x >>= f)
      : (?X \<Rightarrow>\<^sub>Q monadP_qbs ?Y) \<Otimes>\<^sub>Q
        monadP_qbs ?X \<rightarrow>\<^sub>Q
        monadP_qbs ?Y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app (template_hole 1, template_var 0))),
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 1, template_var 0)))
         )),
    ("Monad_QuasiBorel.qbs_return_morphism'",
     "?f : ?X \<rightarrow>\<^sub>Q ?Y ==>
      (%x. qbs_return ?Y (?f x)) : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Monad_QuasiBorel.monadP_qbs_Pf_morphism",
     "?f : ?X \<rightarrow>\<^sub>Q ?Y ==>
      monadP_qbs_Pf ?X ?Y ?f
      : monadP_qbs ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Monad_QuasiBorel.qbs_bind_morphism''''",
     "?x : monadP_qbs_Px ?X ==>
      (>>=) ?x
      : ?X \<Rightarrow>\<^sub>Q monadP_qbs ?Y \<rightarrow>\<^sub>Q
        monadP_qbs ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Monad_QuasiBorel.qbs_prob_integral_morphism'",
     "?f : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q ==>
      (%s. qbs_prob_integral s ?f)
      : monadP_qbs ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 5, template_hole 4)))
           ))),
    ("Monad_QuasiBorel.qbs_prob_ennintegral_morphism'",
     "?f : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0 ==>
      (%s. qbs_prob_ennintegral s ?f)
      : monadP_qbs ?X \<rightarrow>\<^sub>Q
        \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 5, template_hole 4)))
           ))),
    ("Monad_QuasiBorel.qbs_bind_morphism'",
     "?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y ==>
      (%x. x >>= ?f) : monadP_qbs ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 4, template_var 0)))
           ))),
    ("Monad_QuasiBorel.qbs_integrable_return",
     "[| ?x : qbs_space ?X; ?f : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q |]
      ==> qbs_integrable (qbs_return ?X ?x) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Monad_QuasiBorel.qbs_prob_MPx",
     "[| ?\<alpha> : qbs_Mx ?X;
         ?g : real_borel \<rightarrow>\<^sub>M prob_algebra real_borel |]
      ==> qbs_prob ?X ?\<alpha> (?g ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_app (template_hole 1, template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_app (template_var 1, template_var 0))
           ))),
    ("Monad_QuasiBorel.qbs_return_comp",
     "?\<alpha> : qbs_Mx ?X ==>
      qbs_return ?X o ?\<alpha> =
      (%r. qbs_prob_space (?X, ?\<alpha>, return real_borel r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_var 1),
         t_empty))),
    ("Monad_QuasiBorel.qbs_of_bind",
     "[| ?s : monadP_qbs_Px ?X;
         ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y |]
      ==> qbs_prob_space_qbs (?s >>= ?f) = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("Monad_QuasiBorel.qbs_prob_integral_return",
     "[| ?f : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q; ?x : qbs_space ?X |]
      ==> qbs_prob_integral (qbs_return ?X ?x) ?f = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_hole 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_var 2, template_var 0)))),
    ("Monad_QuasiBorel.qbs_prob_ennintegral_return",
     "[| ?f : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0;
         ?x : qbs_space ?X |]
      ==> qbs_prob_ennintegral (qbs_return ?X ?x) ?f = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_hole 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_var 2, template_var 0)))),
    ("Monad_QuasiBorel.qbs_bind_return",
     "[| ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y; ?x : qbs_space ?X |]
      ==> qbs_return ?X ?x >>= ?f = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 3),
         template_app (template_var 3, template_var 0)))),
    ("Monad_QuasiBorel.rep_monadP_qbs_Px",
     "?s : monadP_qbs_Px ?X ==>
      EX \<alpha> \<mu>.
         ?s = qbs_prob_space (?X, \<alpha>, \<mu>) &
         qbs_prob ?X \<alpha> \<mu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Monad_QuasiBorel.qbs_strength_law3",
     "?x : qbs_space (?X \<Otimes>\<^sub>Q ?Y) ==>
      qbs_return (?X \<Otimes>\<^sub>Q ?Y) ?x =
      (qbs_strength ?X ?Y o map_prod id (qbs_return ?Y)) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))),
           template_var 2)))),
    ("Monad_QuasiBorel.qbs_strength_law1",
     "?x : qbs_space (1\<^sub>Q \<Otimes>\<^sub>Q monadP_qbs ?X) ==>
      snd ?x =
      (monadP_qbs_Pf (1\<^sub>Q \<Otimes>\<^sub>Q ?X) ?X snd o
       qbs_strength 1\<^sub>Q ?X)
       ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_app (template_hole 7, template_var 0))))
            )],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 8),
                       template_var 0)),
                   template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_hole 8),
               template_var 0)),
           template_var 1)))),
    ("Monad_QuasiBorel.qbs_prob_measure_bind",
     "[| ?s : monadP_qbs_Px ?X;
         ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y |]
      ==> qbs_prob_measure (?s >>= ?f) =
          qbs_prob_measure ?s >>= qbs_prob_measure o ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_var 1))))),
    ("Monad_QuasiBorel.qbs_prob_integral_morphism''",
     "[| ?f : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q;
         ?L : ?Y \<rightarrow>\<^sub>Q monadP_qbs ?X |]
      ==> (%y. qbs_prob_integral (?L y) ?f)
          : ?Y \<rightarrow>\<^sub>Q \<real>\<^sub>Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_hole 6)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app (template_hole 3, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 7, template_hole 6)))
           ))),
    ("Monad_QuasiBorel.pair_return_return",
     "[| ?l : space ?M; ?r : space ?N |]
      ==> return ?M ?l \<Otimes>\<^sub>M return ?N ?r =
          return (?M \<Otimes>\<^sub>M ?N) (?l, ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Monad_QuasiBorel.qbs_morphism_integral_snd",
     "[| ?p : monadP_qbs_Px ?X;
         ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q
              \<real>\<^sub>Q |]
      ==> (%y. \<integral>\<^sub>Q x. ?f (x, y) \<partial>?p)
          : ?Y \<rightarrow>\<^sub>Q \<real>\<^sub>Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 0)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 5, template_hole 4)))
           ))),
    ("Monad_QuasiBorel.qbs_morphism_ennintegral_snd",
     "[| ?p : monadP_qbs_Px ?X;
         ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q
              \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0 |]
      ==> (%y. \<integral>\<^sup>+\<^sub>Q x. ?f (x, y) \<partial>?p)
          : ?Y \<rightarrow>\<^sub>Q \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 0)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 5, template_hole 4)))
           ))),
    ("Monad_QuasiBorel.qbs_morphism_integral_fst",
     "[| ?q : monadP_qbs_Px ?Y;
         ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q
              \<real>\<^sub>Q |]
      ==> (%x. \<integral>\<^sub>Q y. ?f (x, y) \<partial>?q)
          : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 2)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 5, template_hole 4)))
           ))),
    ("Monad_QuasiBorel.qbs_morphism_ennintegral_fst",
     "[| ?q : monadP_qbs_Px ?Y;
         ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q
              \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0 |]
      ==> (%x. \<integral>\<^sup>+\<^sub>Q y. ?f (x, y) \<partial>?q)
          : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 2)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 5, template_hole 4)))
           ))),
    ("Monad_QuasiBorel.qbs_prob_ennintegral_morphism",
     "[| ?L : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y;
         ?f : ?X \<rightarrow>\<^sub>Q
              ?Y \<Rightarrow>\<^sub>Q
              \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0 |]
      ==> (%x. qbs_prob_ennintegral (?L x) (?f x))
          : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app (template_hole 8, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_hole 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 4, template_hole 3)))
           ))),
    ("Monad_QuasiBorel.qbs_bind_morphism",
     "[| ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y;
         ?g : ?X \<rightarrow>\<^sub>Q
              ?Y \<Rightarrow>\<^sub>Q monadP_qbs ?Z |]
      ==> (%x. ?f x >>= ?g x) : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app (template_hole 7, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app (template_hole 3, template_var 0)))
           ))),
    ("Monad_QuasiBorel.rep_monadP_qbs_MPx",
     "?\<beta> : monadP_qbs_MPx ?X ==>
      EX \<alpha> g.
         \<alpha> : qbs_Mx ?X &
         g : real_borel \<rightarrow>\<^sub>M prob_algebra real_borel &
         ?\<beta> = (%r. qbs_prob_space (?X, \<alpha>, g r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app (template_hole 13, template_var 0))
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Monad_QuasiBorel.qbs_prob_ennintegral_bind",
     "[| ?s : monadP_qbs_Px ?X; ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y;
         ?g : ?Y \<rightarrow>\<^sub>Q
              \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0 |]
      ==> qbs_prob_ennintegral (?s >>= ?f) ?g =
          \<integral>\<^sup>+\<^sub>Q y. qbs_prob_ennintegral (?f y) ?g
                                     \<partial>?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app (template_hole 11, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_app (template_hole 8, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 4), t_empty)))),
    ("Monad_QuasiBorel.qbs_bind_assoc",
     "[| ?s : monadP_qbs_Px ?X; ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y;
         ?g : ?Y \<rightarrow>\<^sub>Q monadP_qbs ?Z |]
      ==> ?s >>= (%x. ?f x >>= ?g) = ?s >>= ?f >>= ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 4),
                template_app (template_hole 7, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 5), t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3)),
           template_var 1)))),
    ("Monad_QuasiBorel.qbs_bind_cong",
     "[| ?s : monadP_qbs_Px ?X; !!x. x : qbs_space ?X ==> ?f x = ?g x;
         ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y |]
      ==> ?s >>= ?f = ?s >>= ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 4), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 1)))),
    ("Monad_QuasiBorel.qbs_integrable_bind_return",
     "[| ?s : monadP_qbs_Px ?Y;
         ?f : ?Z \<rightarrow>\<^sub>Q \<real>\<^sub>Q;
         ?g : ?Y \<rightarrow>\<^sub>Q ?Z |]
      ==> qbs_integrable (?s >>= (%y. qbs_return ?Z (?g y))) ?f =
          qbs_integrable ?s (?f o ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app (template_hole 9, template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4), t_empty)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Monad_QuasiBorel.qbs_prob_integral_bind_return",
     "[| ?s : monadP_qbs_Px ?Y;
         ?f : ?Z \<rightarrow>\<^sub>Q \<real>\<^sub>Q;
         ?g : ?Y \<rightarrow>\<^sub>Q ?Z |]
      ==> qbs_prob_integral (?s >>= (%y. qbs_return ?Z (?g y))) ?f =
          qbs_prob_integral ?s (?f o ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app (template_hole 9, template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4), t_empty)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Monad_QuasiBorel.qbs_prob_var_bind_return",
     "[| ?s : monadP_qbs_Px ?Y;
         ?f : ?Z \<rightarrow>\<^sub>Q \<real>\<^sub>Q;
         ?g : ?Y \<rightarrow>\<^sub>Q ?Z |]
      ==> qbs_prob_var (?s >>= (%y. qbs_return ?Z (?g y))) ?f =
          qbs_prob_var ?s (?f o ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app (template_hole 9, template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4), t_empty)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Monad_QuasiBorel.qbs_prob_ennintegral_bind_return",
     "[| ?s : monadP_qbs_Px ?Y;
         ?f : ?Z \<rightarrow>\<^sub>Q \<real>\<^sub>Q\<^sub>\<ge>\<^sub>0;
         ?g : ?Y \<rightarrow>\<^sub>Q ?Z |]
      ==> qbs_prob_ennintegral (?s >>= (%y. qbs_return ?Z (?g y))) ?f =
          qbs_prob_ennintegral ?s (?f o ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app (template_hole 9, template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4), t_empty)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Monad_QuasiBorel.bind_bind_return_distr",
     "[| real_distribution ?\<mu>; real_distribution ?\<nu> |]
      ==> ?\<mu> >>=
          (%r. ?\<nu> >>=
               (%l. distr
                     (return real_borel r \<Otimes>\<^sub>M
                      return real_borel l)
                     real_borel real_real.f)) =
          distr (?\<mu> \<Otimes>\<^sub>M ?\<nu>) real_borel real_real.f",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), t_empty),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_hole 1),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_hole 1),
               template_hole 1)))))),
    ("Monad_QuasiBorel.qbs_return_Mxpair",
     "[| ?\<alpha> : qbs_Mx ?X; ?\<beta> : qbs_Mx ?Y |]
      ==> qbs_prob (?X \<Otimes>\<^sub>Q ?Y)
           (map_prod ?\<alpha> ?\<beta> o real_real.g)
           (distr
             (return real_borel ?r \<Otimes>\<^sub>M return real_borel ?k)
             real_borel real_real.f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 4),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 5),
                     template_var 3)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 3)))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 1, template_hole 3),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_hole 3),
                       template_var 0))),
                 template_hole 3),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 3))))
           ))),
    ("Monad_QuasiBorel.monadP_qbs_Pf_comp",
     "[| ?s : monadP_qbs_Px ?X; ?f : ?X \<rightarrow>\<^sub>Q ?Y;
         ?g : ?Y \<rightarrow>\<^sub>Q ?Z |]
      ==> (monadP_qbs_Pf ?Y ?Z ?g o monadP_qbs_Pf ?X ?Y ?f) ?s =
          monadP_qbs_Pf ?X ?Z (?g o ?f) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_var 3)),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_var 5)))),
    ("Monad_QuasiBorel.qbs_strength_law4",
     "?x : qbs_space (?X \<Otimes>\<^sub>Q monadP_qbs (monadP_qbs ?Y)) ==>
      (qbs_strength ?X ?Y o map_prod id qbs_join) ?x =
      (qbs_join o
       monadP_qbs_Pf (?X \<Otimes>\<^sub>Q monadP_qbs ?Y)
        (monadP_qbs (?X \<Otimes>\<^sub>Q ?Y)) (qbs_strength ?X ?Y) o
       qbs_strength ?X (monadP_qbs ?Y))
       ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 2),
              template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_var 0)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 8)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app (template_hole 14, template_var 0))),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 11, template_var 1),
                     template_var 0)))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 14, template_var 0))),
           template_var 2)))),
    ("Monad_QuasiBorel.qbs_bind_return_rotate",
     "[| ?p : monadP_qbs_Px ?X; ?q : monadP_qbs_Px ?Y |]
      ==> ?q >>=
          (%y. ?p >>= (%x. qbs_return (?X \<Otimes>\<^sub>Q ?Y) (x, y))) =
          ?p >>=
          (%x. ?q >>= (%y. qbs_return (?X \<Otimes>\<^sub>Q ?Y) (x, y)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), t_empty),
         template_app
          (template_app (template_hole 3, template_var 3), t_empty)))),
    ("Monad_QuasiBorel.qbs_bind_rotate",
     "[| ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q monadP_qbs ?Z;
         ?p : monadP_qbs_Px ?X; ?q : monadP_qbs_Px ?Y |]
      ==> ?q >>= (%y. ?p >>= (%x. ?f (x, y))) =
          ?p >>= (%x. ?q >>= (%y. ?f (x, y)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3)),
                template_app (template_hole 8, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), t_empty),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Monad_QuasiBorel.qbs_prob_integral_morphism",
     "[| ?L : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y;
         ?f : ?X \<rightarrow>\<^sub>Q
              ?Y \<Rightarrow>\<^sub>Q \<real>\<^sub>Q;
         !!x. x : qbs_space ?X ==> qbs_integrable (?L x) (?f x) |]
      ==> (%x. qbs_prob_integral (?L x) (?f x))
          : ?X \<rightarrow>\<^sub>Q \<real>\<^sub>Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app (template_hole 8, template_hole 7))))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 8, template_hole 7)))
           ))),
    ("Monad_QuasiBorel.qbs_pair_bind_return2",
     "[| ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q monadP_qbs ?Z;
         ?p : monadP_qbs_Px ?X; ?q : monadP_qbs_Px ?Y |]
      ==> ?p >>= (%x. ?q >>= (%y. ?f (x, y))) =
          ?p >>=
          (%x. ?q >>= (%y. qbs_return (?X \<Otimes>\<^sub>Q ?Y) (x, y))) >>=
          ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3)),
                template_app (template_hole 12, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 8, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1), t_empty)),
           template_var 5)))),
    ("Monad_QuasiBorel.qbs_pair_bind_return1",
     "[| ?f : ?X \<Otimes>\<^sub>Q ?Y \<rightarrow>\<^sub>Q monadP_qbs ?Z;
         ?p : monadP_qbs_Px ?X; ?q : monadP_qbs_Px ?Y |]
      ==> ?q >>= (%y. ?p >>= (%x. ?f (x, y))) =
          ?q >>=
          (%y. ?p >>= (%x. qbs_return (?X \<Otimes>\<^sub>Q ?Y) (x, y))) >>=
          ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3)),
                template_app (template_hole 12, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 8, template_var 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0), t_empty)),
           template_var 5)))),
    ("Monad_QuasiBorel.qbs_prob_integral_bind",
     "[| ?s : monadP_qbs_Px ?X; ?f : ?X \<rightarrow>\<^sub>Q monadP_qbs ?Y;
         ?g : ?Y \<rightarrow>\<^sub>Q \<real>\<^sub>Q;
         EX K. ALL y:qbs_space ?Y. \<bar>?g y\<bar> <= K |]
      ==> qbs_prob_integral (?s >>= ?f) ?g =
          \<integral>\<^sub>Q y. qbs_prob_integral (?f y) ?g \<partial>?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app (template_hole 16, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_app (template_hole 13, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_app (template_hole 10, template_hole 9)))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 4), t_empty)))),
    ("Monad_QuasiBorel.qbs_return_Mxpair",
     "[| ?\<alpha> : qbs_Mx ?X; ?\<beta> : qbs_Mx ?Y |]
      ==> qbs_return (?X \<Otimes>\<^sub>Q ?Y) (?\<alpha> ?r, ?\<beta> ?k) =
          qbs_prob_space
           (?X \<Otimes>\<^sub>Q ?Y,
            map_prod ?\<alpha> ?\<beta> o real_real.g,
            distr
             (return real_borel ?r \<Otimes>\<^sub>M return real_borel ?k)
             real_borel real_real.f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app (template_hole 17, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_app (template_hole 15, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_var 4),
               template_var 2)),
           template_app
            (template_app
              (template_hole 11,
               template_app (template_var 5, template_var 1)),
             template_app (template_var 3, template_var 0))),
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 12, template_var 4),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 5),
                       template_var 3)),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_hole 3)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_hole 3),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 1, template_hole 3),
                         template_var 0))),
                   template_hole 3),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 3))))))))),
    ("Monad_QuasiBorel.qbs_join_computation",
     "[| qbs_prob (monadP_qbs ?X) ?\<beta> ?\<mu>;
         ?ssx = qbs_prob_space (monadP_qbs ?X, ?\<beta>, ?\<mu>);
         ?\<alpha> : qbs_Mx ?X;
         ?g : real_borel \<rightarrow>\<^sub>M prob_algebra real_borel;
         ?\<beta> = (%r. qbs_prob_space (?X, ?\<alpha>, ?g r)) |]
      ==> qbs_prob ?X ?\<alpha> (?\<mu> >>= ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_hole 14,
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 16, template_var 5)),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app (template_hole 6, template_hole 7)))
            ),
        template_equation (template_var 4, t_empty)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Monad_QuasiBorel.qbs_join_computation",
     "[| qbs_prob (monadP_qbs ?X) ?\<beta> ?\<mu>;
         ?ssx = qbs_prob_space (monadP_qbs ?X, ?\<beta>, ?\<mu>);
         ?\<alpha> : qbs_Mx ?X;
         ?g : real_borel \<rightarrow>\<^sub>M prob_algebra real_borel;
         ?\<beta> = (%r. qbs_prob_space (?X, ?\<alpha>, ?g r)) |]
      ==> qbs_join ?ssx = qbs_prob_space (?X, ?\<alpha>, ?\<mu> >>= ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_hole 15,
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 17, template_var 5)),
              template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 11, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app (template_hole 7, template_hole 8)))
            ),
        template_equation (template_var 4, t_empty)],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 5),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0))))))),
    ("Monad_QuasiBorel.qbs_strength_natural",
     "[| ?f : ?X \<rightarrow>\<^sub>Q ?X';
         ?g : ?Y \<rightarrow>\<^sub>Q ?Y'; ?x : qbs_space ?X;
         ?sy : monadP_qbs_Px ?Y |]
      ==> (monadP_qbs_Pf (?X \<Otimes>\<^sub>Q ?Y)
            (?X' \<Otimes>\<^sub>Q ?Y') (map_prod ?f ?g) o
           qbs_strength ?X ?Y)
           (?x, ?sy) =
          (qbs_strength ?X' ?Y' o map_prod ?f (monadP_qbs_Pf ?Y ?Y' ?g))
           (?x, ?sy)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 7),
              template_app
               (template_app (template_hole 18, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app (template_hole 16, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 14, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 6),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 7, template_var 5),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 6, template_var 7),
                   template_var 4))),
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 7),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 4))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Monad_QuasiBorel.qbs_strength_ab_r",
     "[| ?\<alpha> : qbs_Mx ?X; ?\<beta> : monadP_qbs_MPx ?Y;
         ?\<gamma> : qbs_Mx ?Y;
         ?g : real_borel \<rightarrow>\<^sub>M prob_algebra real_borel;
         ?\<beta> = (%r. qbs_prob_space (?Y, ?\<gamma>, ?g r)) |]
      ==> qbs_prob (?X \<Otimes>\<^sub>Q ?Y)
           (map_prod ?\<alpha> ?\<gamma> o real_real.g)
           (distr (return real_borel ?r \<Otimes>\<^sub>M ?g ?r) real_borel
             real_real.f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 6),
              template_app (template_hole 21, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_app (template_hole 19, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 2),
              template_app (template_hole 17, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_app (template_hole 13, template_hole 14)))
            ),
        template_equation (template_var 4, t_empty)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 5),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 2)),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 14),
                     template_hole 14)))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 1, template_hole 14),
                         template_var 0)),
                     template_app (template_var 1, template_var 0))),
                 template_hole 14),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_hole 14),
                   template_hole 14))))
           ))),
    ("Monad_QuasiBorel.qbs_strength_law2",
     "?x : qbs_space
            ((?X \<Otimes>\<^sub>Q ?Y) \<Otimes>\<^sub>Q monadP_qbs ?Z) ==>
      (qbs_strength ?X (?Y \<Otimes>\<^sub>Q ?Z) o
       map_prod id (qbs_strength ?Y ?Z) o
       (%((x, y), z). (x, y, z)))
       ?x =
      (monadP_qbs_Pf ((?X \<Otimes>\<^sub>Q ?Y) \<Otimes>\<^sub>Q ?Z)
        (?X \<Otimes>\<^sub>Q ?Y \<Otimes>\<^sub>Q ?Z)
        (%((x, y), z). (x, y, z)) o
       qbs_strength (?X \<Otimes>\<^sub>Q ?Y) ?Z)
       ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 3),
              template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 22, template_var 2),
                      template_var 1)),
                  template_app (template_hole 21, template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 18,
                   template_app
                    (template_app (template_hole 17, template_var 2),
                     template_app
                      (template_app (template_hole 16, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_app
                    (template_app (template_hole 13, template_var 1),
                     template_var 0)))),
             template_app
              (template_hole 12, template_app (template_hole 11, t_empty))),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 22, template_var 2),
                           template_var 1)),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 16, template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 22, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_var 3)))),
    ("Monad_QuasiBorel.qbs_strength_ab_r",
     "[| ?\<alpha> : qbs_Mx ?X; ?\<beta> : monadP_qbs_MPx ?Y;
         ?\<gamma> : qbs_Mx ?Y;
         ?g : real_borel \<rightarrow>\<^sub>M prob_algebra real_borel;
         ?\<beta> = (%r. qbs_prob_space (?Y, ?\<gamma>, ?g r)) |]
      ==> qbs_strength ?X ?Y (?\<alpha> ?r, ?\<beta> ?r) =
          qbs_prob_space
           (?X \<Otimes>\<^sub>Q ?Y,
            map_prod ?\<alpha> ?\<gamma> o real_real.g,
            distr (return real_borel ?r \<Otimes>\<^sub>M ?g ?r) real_borel
             real_real.f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 6),
              template_app (template_hole 26, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 4),
              template_app (template_hole 24, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 2),
              template_app (template_hole 22, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_app
               (template_app (template_hole 20, template_hole 19),
                template_app (template_hole 18, template_hole 19)))
            ),
        template_equation (template_var 4, t_empty)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 12, template_var 5),
             template_var 3),
           template_app
            (template_app
              (template_hole 11,
               template_app (template_var 6, template_var 0)),
             template_app (template_var 4, template_var 0))),
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 5),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 2)),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 19),
                       template_hole 19)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 1, template_hole 19),
                           template_var 0)),
                       template_app (template_var 1, template_var 0))),
                   template_hole 19),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_hole 19),
                     template_hole 19)))))))))]:
   (string * thm * template) list
### theory "Draft.Monad_QuasiBorelTemplates"
### 1.281s elapsed time, 1.675s cpu time, 0.281s GC time
val it = (): unit
