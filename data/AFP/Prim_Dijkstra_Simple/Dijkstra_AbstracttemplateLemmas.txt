   [("Dijkstra_Abstract.enat_of_option_simps",
     "(\<infinity> = Dijkstra_Abstract.enat_of_option ?x) = (?x = None)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Dijkstra_Abstract.enat_of_option_simps",
     "(Dijkstra_Abstract.enat_of_option ?x = \<infinity>) = (?x = None)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Dijkstra_Abstract.enat_of_option_inj",
     "(Dijkstra_Abstract.enat_of_option ?x =
       Dijkstra_Abstract.enat_of_option ?y) =
      (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Dijkstra_Abstract.enat_of_option_simps",
     "(Dijkstra_Abstract.enat_of_option ?x = enat ?n) = (?x = Some ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Dijkstra_Abstract.enat_of_option_simps",
     "(enat ?n = Dijkstra_Abstract.enat_of_option ?x) = (?x = Some ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Dijkstra_Abstract.enat_of_option_le_conv",
     "(Dijkstra_Abstract.enat_of_option ?m
       <= Dijkstra_Abstract.enat_of_option ?n) =
      (case (?m, ?n) of (None, None) => True | (None, Some aa) => False
       | (Some aa, None) => True | (Some aa, Some b) => aa <= b)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0))))]
