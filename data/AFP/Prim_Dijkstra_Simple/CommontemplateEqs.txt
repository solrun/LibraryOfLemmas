   [("Common.prod_case_const", "(%(uu_, uu_). ?c) = (%_. ?c)",
     template_equation (template_app (template_hole 0, t_empty), t_empty)),
    ("Common.inter_compl_eq_diff", "?x Int - ?s = ?x - ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Common.enat_of_option_simps",
     "(\<infinity> = enat_of_option ?x) = (?x = None)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Common.enat_of_option_simps",
     "(enat_of_option ?x = \<infinity>) = (?x = None)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Common.inter_same_diff", "?A Int (?A - ?S) = ?A - ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Common.enat_of_option_inj",
     "(enat_of_option ?x = enat_of_option ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Common.insert_inv",
     "(insert ?e ?E)^-1 = insert (prod.swap ?e) (?E^-1)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Common.enat_of_option_simps",
     "(enat_of_option ?x = enat ?n) = (?x = Some ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Common.enat_of_option_simps",
     "(enat ?n = enat_of_option ?x) = (?x = Some ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Common.INF_of_enat_infty_iff2",
     "(\<infinity> = (INF x\<in>?A. enat (?f x))) = (?A = {})",
     template_bimplication
      (template_equation
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 0))),
       template_equation (template_var 0, template_hole 0))),
    ("Common.INF_of_enat_infty_iff1",
     "((INF x\<in>?A. enat (?f x)) = \<infinity>) = (?A = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0)),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Common.map_add_apply",
     "(?m\<^sub>1 ++ ?m\<^sub>2) ?k =
      (case ?m\<^sub>2 ?k of None => ?m\<^sub>1 ?k | Some x => Some x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           t_empty),
         template_app (template_var 1, template_var 0)))),
    ("Common.minus_inv_sym_aux",
     "(- {(?a, ?b), (?b, ?a)})^-1 = - {(?a, ?b), (?b, ?a)}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1)),
               template_hole 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0))))),
    ("Common.card2_eq", "(card ?e = 2) = (EX u v. u ~= v & ?e = {u, v})",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_hole 7))),
       template_app (template_hole 6, t_empty))),
    ("Common.enat_of_option_le_conv",
     "(enat_of_option ?m <= enat_of_option ?n) =
      (case (?m, ?n) of (None, None) => True | (None, Some aa) => False
       | (Some aa, None) => True | (Some aa, Some b) => aa <= b)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Common.map_eq_append_conv",
     "(map ?f ?xs = ?ys\<^sub>1 @ ?ys\<^sub>2) =
      (EX xs\<^sub>1 xs\<^sub>2.
          ?xs = xs\<^sub>1 @ xs\<^sub>2 &
          map ?f xs\<^sub>1 = ?ys\<^sub>1 &
          map ?f xs\<^sub>2 = ?ys\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty)))]
