   [("FriendshipTheory.rotate_eq",
     "rotate1 ?xs = rotate1 ?ys ==> ?xs = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("FriendshipTheory.rotate_diff",
     "rotate ?m ?xs = rotate ?n ?xs ==> rotate (?m - ?n) ?xs = ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("FriendshipTheory.even_card_set",
     "[| finite ?A; ALL x:?A. ?f x : ?A & ?f x ~= x & ?f (?f x) = x |]
      ==> even (card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("FriendshipTheory.card_partition'",
     "[| ALL v:?A. card {n. ?R v n} = ?k; 0 < ?k; finite ?A;
         ALL v1 v2. v1 ~= v2 --> {n. ?R v1 n} Int {n. ?R v2 n} = {} |]
      ==> card (UN v:?A. {n. ?R v n}) = ?k * card ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2), t_empty)
            ),
        template_inequation (less_than, template_hole 12, template_var 0),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 15,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 2))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2)))))]
