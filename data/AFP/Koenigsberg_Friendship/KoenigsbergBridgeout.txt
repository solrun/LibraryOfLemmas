Loading theory "Dijkstra_Shortest_Path.Graph" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.KoenigsbergBridge" via "Draft.MoreGraph")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.130s elapsed time, 0.533s cpu time, 0.047s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.861s cpu time, 0.047s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
locale valid_graph
  fixes G :: "('v, 'w) graph"
  assumes "valid_graph G"
### theory "HOL-Library.Nat_Bijection"
### 0.327s elapsed time, 1.306s cpu time, 0.115s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs")
locale valid_graph
  fixes G :: "('v, 'w) graph"
  assumes "valid_graph G"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst (snd p))) <*mlex*> {}"
locale valid_mgraph
  fixes G :: "('v, 'w) graph"
  assumes "valid_mgraph G"
### theory "Dijkstra_Shortest_Path.Graph"
### 0.568s elapsed time, 2.261s cpu time, 0.199s GC time
Loading theory "Draft.MoreGraph" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.KoenigsbergBridge")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale valid_unMultigraph
  fixes G :: "('v, 'w) graph"
  assumes "valid_unMultigraph G"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.955s elapsed time, 3.635s cpu time, 0.812s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst (snd p))) <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst p)) <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.048s elapsed time, 3.826s cpu time, 0.784s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.960s elapsed time, 6.147s cpu time, 1.053s GC time
Loading theory "Draft.Templates" (required by "Draft.KoenigsbergBridgeMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.195s cpu time, 0.057s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.KoenigsbergBridgeMoreTemplates")
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.531s elapsed time, 1.107s cpu time, 0.091s GC time
locale valid_unSimpGraph
  fixes G :: "('v, 'w) graph"
  assumes "valid_unSimpGraph G"
### theory "Draft.MoreGraph"
### 2.310s elapsed time, 5.834s cpu time, 1.049s GC time
Loading theory "Draft.KoenigsbergBridge" (required by "Draft.KoenigsbergBridgeMoreTemplates")
instantiation
  kon_node :: enum
  enum_kon_node == enum_class.enum :: kon_node list
  enum_all_kon_node == enum_class.enum_all :: (kon_node => bool) => bool
  enum_ex_kon_node == enum_class.enum_ex :: (kon_node => bool) => bool
instantiation
  kon_bridge :: enum
  enum_kon_bridge == enum_class.enum :: kon_bridge list
  enum_all_kon_bridge == enum_class.enum_all :: (kon_bridge => bool) => bool
  enum_ex_kon_bridge == enum_class.enum_ex :: (kon_bridge => bool) => bool
### theory "Draft.KoenigsbergBridge"
### 1.524s elapsed time, 2.149s cpu time, 0.876s GC time
Loading theory "Draft.KoenigsbergBridgeMoreTemplates"
val templateLemmas =
   [("KoenigsbergBridge.eulerian_split",
     "[| nodes ?G1.0 Int nodes ?G2.0 = {}; edges ?G1.0 Int edges ?G2.0 = {};
         valid_unMultigraph ?G1.0; valid_unMultigraph ?G2.0;
         valid_unMultigraph.is_Eulerian_trail ?G1.0 ?v1.0 ?ps1.0 ?v1';
         valid_unMultigraph.is_Eulerian_trail ?G2.0 ?v2.0 ?ps2.0 ?v2' |]
      ==> valid_unMultigraph.is_Eulerian_trail
           (| nodes = nodes ?G1.0 Un nodes ?G2.0,
              edges =
                edges ?G1.0 Un edges ?G2.0 Un
                {(?v1', ?w, ?v2.0), (?v2.0, ?w, ?v1')} |)
           ?v1.0 (?ps1.0 @ (?v1', ?w, ?v2.0) # ?ps2.0) ?v2'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 17,
              template_app (template_hole 16, template_var 8)),
            template_app (template_hole 16, template_var 7)),
          template_hole 15),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 8)),
            template_app (template_hole 12, template_var 7)),
          template_hole 11),
        template_predicate
         (template_app (template_hole 10, template_var 8)),
        template_predicate
         (template_app (template_hole 10, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 8),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 16, template_var 8)),
                           template_app
                            (template_hole 16, template_var 7))),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 12, template_var 8)),
                             template_app
                              (template_hole 12, template_var 7))),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_hole 4, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 3, template_var 0),
                                 template_var 3))),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 4, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 3, template_var 0),
                                   template_var 4))),
                             template_hole 11)))),
                     template_hole 2)),
                 template_var 6),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 3))),
                   template_var 2))),
             template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.KoenigsbergBridgeMoreTemplates"
### 0.331s elapsed time, 0.496s cpu time, 0.092s GC time
val it = (): unit
