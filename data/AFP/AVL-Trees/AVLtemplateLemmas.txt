   [("AVL.avl_delete", "avl ?t ==> avl (delete ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("AVL.avl_insert", "avl ?t ==> avl (AVL.insert ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("AVL.ritem_in_rset", "?r ~= ET ==> rightmost_item ?r : set_of ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("AVL.is_in_correct", "is_ord ?t ==> is_in ?k ?t = (?k : set_of ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("AVL.fst_delete_max_eq_ritem",
     "?t ~= ET ==> fst (delete_max ?t) = rightmost_item ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("AVL.is_ord_delete",
     "[| avl ?t; is_ord ?t |] ==> is_ord (delete ?x ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("AVL.is_ord_insert",
     "[| avl ?t; is_ord ?t |] ==> is_ord (AVL.insert ?x ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("AVL.set_of_insert",
     "avl ?t ==> set_of (AVL.insert ?x ?t) = Set.insert ?x (set_of ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("AVL.is_ord_mkt_bal_l",
     "is_ord (MKT ?n ?l ?r ?h) ==> is_ord (mkt_bal_l ?n ?l ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("AVL.is_ord_mkt_bal_r",
     "is_ord (MKT ?n ?l ?r ?h) ==> is_ord (mkt_bal_r ?n ?l ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("AVL.avl_delete_root",
     "[| avl ?t; ?t ~= ET |] ==> avl (delete_root ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0))
           ))),
    ("AVL.avl_delete_max",
     "[| avl ?x; ?x ~= ET |] ==> avl (snd (delete_max ?x))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("AVL.is_ord_delete_root",
     "[| avl ?t; is_ord ?t; ?t ~= ET |] ==> is_ord (delete_root ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0))
           ))),
    ("AVL.is_ord_delete_max",
     "[| avl ?t; is_ord ?t; ?t ~= ET |] ==> is_ord (snd (delete_max ?t))",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("AVL.set_of_delete",
     "[| avl ?t; is_ord ?t |] ==> set_of (delete ?x ?t) = set_of ?t - {?x}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("AVL.avl_delete_aux",
     "avl ?t ==>
      AVL.height ?t = AVL.height (delete ?x ?t) |
      AVL.height ?t = AVL.height (delete ?x ?t) + 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 1))),
                 template_hole 0)))
           ))),
    ("AVL.avl_insert_aux",
     "avl ?t ==>
      AVL.height (AVL.insert ?x ?t) = AVL.height ?t |
      AVL.height (AVL.insert ?x ?t) = AVL.height ?t + 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 1))),
                 template_app (template_hole 3, template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 1)),
                 template_hole 0)))
           ))),
    ("AVL.set_of_mkt_bal_l",
     "[| avl ?l; avl ?r |]
      ==> set_of (mkt_bal_l ?n ?l ?r) =
          Set.insert ?n (set_of ?l Un set_of ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             template_app (template_hole 3, template_var 1)))))),
    ("AVL.set_of_mkt_bal_r",
     "[| avl ?l; avl ?r |]
      ==> set_of (mkt_bal_r ?n ?l ?r) =
          Set.insert ?n (set_of ?l Un set_of ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 2)),
             template_app (template_hole 3, template_var 1)))))),
    ("AVL.height_delete_root",
     "[| avl ?t; ?t ~= ET |]
      ==> AVL.height ?t = AVL.height (delete_root ?t) |
          AVL.height ?t = AVL.height (delete_root ?t) + 1",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_hole 0)))
           ))),
    ("AVL.set_of_delete_max",
     "[| avl ?t; is_ord ?t; ?t ~= ET |]
      ==> set_of (snd (delete_max ?t)) = set_of ?t - {rightmost_item ?t}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("AVL.avl_delete_max",
     "[| avl ?x; ?x ~= ET |]
      ==> AVL.height ?x = AVL.height (snd (delete_max ?x)) |
          AVL.height ?x = AVL.height (snd (delete_max ?x)) + 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0)))),
                 template_hole 0)))
           ))),
    ("AVL.ritem_greatest_in_rset",
     "[| ?r ~= ET; is_ord ?r |]
      ==> ALL x.
             x : set_of ?r -->
             x ~= rightmost_item ?r --> x < rightmost_item ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("AVL.avl_dist",
     "[| avl (MKT ?n ?l ?r ?h); is_ord (MKT ?n ?l ?r ?h); ?x : set_of ?l |]
      ==> ?x ~: set_of ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))
               )
           ))),
    ("AVL.set_of_delete_root",
     "[| ?t = MKT ?n ?l ?r ?h; avl ?t; is_ord ?t |]
      ==> set_of (delete_root ?t) = set_of ?t - {?n}",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (template_app (template_hole 6, template_var 4))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 4)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 4)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("AVL.ritem_not_in_ltree",
     "[| avl (MKT ?n ?l ?r ?h); is_ord (MKT ?n ?l ?r ?h); ?r ~= ET |]
      ==> rightmost_item ?r ~: set_of ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("AVL.avl_dist2",
     "[| avl (MKT ?n ?l ?r ?h); is_ord (MKT ?n ?l ?r ?h);
         ?x : set_of ?l | ?x : set_of ?r |]
      ==> ?x ~= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app (template_hole 2, template_var 3))),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 2, template_var 2)))
            )],
       template_negation
        (template_equation (template_var 0, template_var 4)))),
    ("AVL.height_mkt_bal_l2",
     "[| avl ?l; avl ?r; AVL.height ?l ~= AVL.height ?r + 2 |]
      ==> AVL.height (mkt_bal_l ?n ?l ?r) =
          1 + max (AVL.height ?l) (AVL.height ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 7, template_var 1)),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 7, template_var 2)),
             template_app (template_hole 7, template_var 1)))))),
    ("AVL.height_mkt_bal_r2",
     "[| avl ?l; avl ?r; AVL.height ?r ~= AVL.height ?l + 2 |]
      ==> AVL.height (mkt_bal_r ?n ?l ?r) =
          1 + max (AVL.height ?l) (AVL.height ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 7, template_var 2)),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 7, template_var 2)),
             template_app (template_hole 7, template_var 1)))))),
    ("AVL.avl_mkt",
     "[| avl ?l; avl ?r;
         AVL.height ?l = AVL.height ?r |
         AVL.height ?l = AVL.height ?r + 1 |
         AVL.height ?r = AVL.height ?l + 1 |]
      ==> avl (mkt ?x ?l ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_app (template_hole 3, template_var 1))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app (template_hole 3, template_var 1)),
                      template_hole 1))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 3, template_var 2)),
                    template_hole 1))))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("AVL.height_mkt_bal_l",
     "[| AVL.height ?l = AVL.height ?r + 2; avl ?l; avl ?r |]
      ==> AVL.height (mkt_bal_l ?n ?l ?r) = AVL.height ?r + 2 |
          AVL.height (mkt_bal_l ?n ?l ?r) = AVL.height ?r + 3",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 8, template_var 1)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4)))),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 2),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_var 1)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 2),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 8, template_var 1)),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 0, template_hole 4)))))
           ))),
    ("AVL.height_mkt_bal_r",
     "[| AVL.height ?r = AVL.height ?l + 2; avl ?l; avl ?r |]
      ==> AVL.height (mkt_bal_r ?n ?l ?r) = AVL.height ?l + 2 |
          AVL.height (mkt_bal_r ?n ?l ?r) = AVL.height ?l + 3",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 8, template_var 1)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4)))),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_var 1)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 1),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 8, template_var 1)),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 0, template_hole 4)))))
           ))),
    ("AVL.avl_mkt_bal_l",
     "[| avl ?l; avl ?r;
         AVL.height ?l = AVL.height ?r |
         AVL.height ?l = AVL.height ?r + 1 |
         AVL.height ?r = AVL.height ?l + 1 |
         AVL.height ?l = AVL.height ?r + 2 |]
      ==> avl (mkt_bal_l ?n ?l ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 6, template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 6, template_var 1)),
                      template_hole 4))),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 1)),
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app (template_hole 6, template_var 2)),
                        template_hole 4))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 6, template_var 1)),
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2, template_hole 1)))))))
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("AVL.avl_mkt_bal_r",
     "[| avl ?l; avl ?r;
         AVL.height ?l = AVL.height ?r |
         AVL.height ?l = AVL.height ?r + 1 |
         AVL.height ?r = AVL.height ?l + 1 |
         AVL.height ?r = AVL.height ?l + 2 |]
      ==> avl (mkt_bal_r ?n ?l ?r)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app (template_hole 6, template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 2)),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 6, template_var 1)),
                      template_hole 4))),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 1)),
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app (template_hole 6, template_var 2)),
                        template_hole 4))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 1)),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 6, template_var 2)),
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2, template_hole 1)))))))
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("AVL.delete_max_induct",
     "[| !!n l h. ?P (MKT n l ET h);
         !!n l v va vb vc h.
            ?P (MKT v va vb vc) ==> ?P (MKT n l (MKT v va vb vc) h);
         ?P ET |]
      ==> ?P ?a0.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (template_app (template_var 1, template_hole 0))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("AVL.delete_root_cases",
     "[| !!n r h. ?x = MKT n ET r h ==> ?P;
         !!n v va vb vc h. ?x = MKT n (MKT v va vb vc) ET h ==> ?P;
         !!n v va vb vc vd ve vf vg h.
            ?x = MKT n (MKT v va vb vc) (MKT vd ve vf vg) h ==> ?P;
         ?x = ET ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]
