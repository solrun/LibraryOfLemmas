   [("Falling_Factorial_Sum_Combinatorics.finite_interleavings",
     "finite {zs. interleavings ?xs ?ys zs}",
     template_predicate
      (
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))
         )),
    ("Falling_Factorial_Sum_Combinatorics.interleaving_Nil_iff1",
     "interleavings [] ?ys ?zs = (?ys = ?zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Falling_Factorial_Sum_Combinatorics.interleaving_Nil_iff2",
     "interleavings ?xs [] ?zs = (?xs = ?zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_length",
     "interleavings ?xs ?ys ?zs ==> length ?xs + length ?ys = length ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_set",
     "interleavings ?xs ?ys ?zs ==> set ?xs Un set ?ys = set ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Falling_Factorial_Sum_Combinatorics.interleaving_Nil_implies_eq1",
     "[| interleavings ?xs ?ys ?zs; ?xs = [] |] ==> ?ys = ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 2, template_hole 0)],
       template_equation (template_var 1, template_var 0))),
    ("Falling_Factorial_Sum_Combinatorics.interleaving_Nil_implies_eq2",
     "[| interleavings ?xs ?ys ?zs; ?ys = [] |] ==> ?xs = ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 1, template_hole 0)],
       template_equation (template_var 2, template_var 0))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_distinct",
     "interleavings ?xs ?ys ?zs ==>
      (distinct ?xs & distinct ?ys & set ?xs Int set ?ys = {}) =
      distinct ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 1, template_var 1))),
               template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Falling_Factorial_Sum_Combinatorics.card_lists_distinct_length_eq",
     "finite ?A ==>
      card {xs. length xs = ?n & distinct xs & set xs <= ?A} =
      ffact ?n (card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_equation
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Falling_Factorial_Sum_Combinatorics.card_interleavings",
     "set ?xs Int set ?ys = {} ==>
      card {zs. interleavings ?xs ?ys zs} =
      length ?xs + length ?ys choose length ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1)),
            template_app (template_hole 8, template_var 0)),
          template_hole 7)],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))),
           template_app (template_hole 0, template_var 1))))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_filter_eq1",
     "[| interleavings ?xs ?ys ?zs;
         (ALL x:set ?xs. ?P x) & (ALL y:set ?ys. ~ ?P y) |]
      ==> filter ?P ?zs = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 3)),
                  t_empty)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 3))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_filter_eq2",
     "[| interleavings ?xs ?ys ?zs;
         (ALL x:set ?xs. ~ ?P x) & (ALL y:set ?ys. ?P y) |]
      ==> filter ?P ?zs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 3)),
                  t_empty)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_filter",
     "[| ?X Int ?Y = {}; set ?zs <= ?X Un ?Y |]
      ==> interleavings (filter (%z. z : ?X) ?zs) (filter (%z. z : ?Y) ?zs)
           ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_hole 6),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, t_empty), template_var 0)),
             template_var 0)
           ))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_inject",
     "[| (set ?xs Un set ?xs') Int (set ?ys Un set ?ys') = {};
         interleavings ?xs ?ys ?zs; interleavings ?xs' ?ys' ?zs';
         ?zs = ?zs' |]
      ==> ?xs = ?xs'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 5)),
                template_app (template_hole 3, template_var 4))),
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_app (template_hole 3, template_var 2))),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 2),
              template_var 0)
            ),
        template_equation (template_var 1, template_var 0)],
       template_equation (template_var 5, template_var 4))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_inject",
     "[| (set ?xs Un set ?xs') Int (set ?ys Un set ?ys') = {};
         interleavings ?xs ?ys ?zs; interleavings ?xs' ?ys' ?zs';
         ?zs = ?zs' |]
      ==> ?ys = ?ys'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 5)),
                template_app (template_hole 3, template_var 4))),
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_app (template_hole 3, template_var 2))),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 2),
              template_var 0)
            ),
        template_equation (template_var 1, template_var 0)],
       template_equation (template_var 3, template_var 2))),
    ("Falling_Factorial_Sum_Combinatorics.interleavings_Cons",
     "{zs. interleavings (?x # ?xs) (?y # ?ys) zs} =
      {?x # zs |zs. interleavings ?xs (?y # ?ys) zs} Un
      {?y # zs |zs. interleavings (?x # ?xs) ?ys zs}",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 6, t_empty)),
         template_app (template_hole 6, t_empty)))),
    ("Falling_Factorial_Sum_Combinatorics.two_mutual_lists_induction",
     "[| !!ys. ?P [] ys; !!xs. ?P xs [];
         !!x xs y ys.
            [| ?P xs (y # ys); ?P (x # xs) ys |] ==> ?P (x # xs) (y # ys) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Falling_Factorial_Sum_Combinatorics.card_lists_distinct_length_eq_union",
     "[| finite ?X; finite ?Y; ?X Int ?Y = {} |]
      ==> card {zs. length zs = ?n & distinct zs & set zs <= ?X Un ?Y} =
          (SUM k = 0..?n.
           (?n choose k) * ffact k (card ?X) * ffact (?n - k) (card ?Y))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_predicate
         (template_app (template_hole 20, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 2),
            template_var 1),
          template_hole 17)],
       template_equation
        (template_app
          (template_hole 15, template_app (template_hole 14, t_empty)),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Falling_Factorial_Sum_Combinatorics.lists_distinct_union_by_interleavings",
     "?X Int ?Y = {} ==>
      {zs. length zs = ?n & distinct zs & set zs <= ?X Un ?Y} =
      {0..?n} >>=
      (%k. {xs. length xs = k & distinct xs & set xs <= ?X} >>=
           (%xs. {ys. length ys = ?n - k & distinct ys & set ys <= ?Y} >>=
                 (%ys. {zs. interleavings xs ys zs})))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 16, template_var 2),
            template_var 1),
          template_hole 15)],
       template_equation
        (template_app (template_hole 13, t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           t_empty)))),
    ("Falling_Factorial_Sum_Combinatorics.injectivity",
     "[| ?X Int ?Y = {}; ?k : {0..?n} & ?k' : {0..?n};
         (length ?xs = ?k & distinct ?xs & set ?xs <= ?X) &
         length ?xs' = ?k' & distinct ?xs' & set ?xs' <= ?X;
         (length ?ys = ?n - ?k & distinct ?ys & set ?ys <= ?Y) &
         length ?ys' = ?n - ?k' & distinct ?ys' & set ?ys' <= ?Y;
         interleavings ?xs ?ys ?zs & interleavings ?xs' ?ys' ?zs';
         ?zs = ?zs' |]
      ==> ?k = ?k'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 10),
            template_var 9),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 8),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 7))),
              template_app
               (template_app (template_hole 10, template_var 6),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 5)),
                      template_var 8)),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 5, template_var 5)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 5)),
                      template_var 10)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 4)),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 5, template_var 4)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 4)),
                    template_var 10))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 3)),
                      template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 8))),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 5, template_var 3)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 3)),
                      template_var 9)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 2)),
                    template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 5, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 2)),
                    template_var 9))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 3),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 2),
                template_var 0))
            ),
        template_equation (template_var 1, template_var 0)],
       template_equation (template_var 8, template_var 6))),
    ("Falling_Factorial_Sum_Combinatorics.injectivity",
     "[| ?X Int ?Y = {}; ?k : {0..?n} & ?k' : {0..?n};
         (length ?xs = ?k & distinct ?xs & set ?xs <= ?X) &
         length ?xs' = ?k' & distinct ?xs' & set ?xs' <= ?X;
         (length ?ys = ?n - ?k & distinct ?ys & set ?ys <= ?Y) &
         length ?ys' = ?n - ?k' & distinct ?ys' & set ?ys' <= ?Y;
         interleavings ?xs ?ys ?zs & interleavings ?xs' ?ys' ?zs';
         ?zs = ?zs' |]
      ==> ?xs = ?xs'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 10),
            template_var 9),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 8),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 7))),
              template_app
               (template_app (template_hole 10, template_var 6),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 5)),
                      template_var 8)),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 5, template_var 5)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 5)),
                      template_var 10)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 4)),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 5, template_var 4)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 4)),
                    template_var 10))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 3)),
                      template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 8))),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 5, template_var 3)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 3)),
                      template_var 9)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 2)),
                    template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 5, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 2)),
                    template_var 9))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 3),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 2),
                template_var 0))
            ),
        template_equation (template_var 1, template_var 0)],
       template_equation (template_var 5, template_var 4))),
    ("Falling_Factorial_Sum_Combinatorics.injectivity",
     "[| ?X Int ?Y = {}; ?k : {0..?n} & ?k' : {0..?n};
         (length ?xs = ?k & distinct ?xs & set ?xs <= ?X) &
         length ?xs' = ?k' & distinct ?xs' & set ?xs' <= ?X;
         (length ?ys = ?n - ?k & distinct ?ys & set ?ys <= ?Y) &
         length ?ys' = ?n - ?k' & distinct ?ys' & set ?ys' <= ?Y;
         interleavings ?xs ?ys ?zs & interleavings ?xs' ?ys' ?zs';
         ?zs = ?zs' |]
      ==> ?ys = ?ys'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 10),
            template_var 9),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 8),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 7))),
              template_app
               (template_app (template_hole 10, template_var 6),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 5)),
                      template_var 8)),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 5, template_var 5)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 5)),
                      template_var 10)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 4)),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 5, template_var 4)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 4)),
                    template_var 10))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 3)),
                      template_app
                       (template_app (template_hole 2, template_var 7),
                        template_var 8))),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 5, template_var 3)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 3)),
                      template_var 9)))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 2)),
                    template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 5, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 2)),
                    template_var 9))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 3),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 2),
                template_var 0))
            ),
        template_equation (template_var 1, template_var 0)],
       template_equation (template_var 3, template_var 2)))]
