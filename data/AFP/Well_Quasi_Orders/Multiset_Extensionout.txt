Loading theory "Draft.Multiset_Extension" (required by "Draft.Multiset_ExtensionTemplates")
Loading theory "Draft.Templates" (required by "Draft.Multiset_ExtensionTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.158s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Multiset_ExtensionTemplates")
mult1 ?r =
{(N, M).
 EX a M0 K.
    M = add_mset a M0 & N = M0 + K & (ALL b. b :# K --> (b, a) : ?r)}
### theory "Draft.Multiset_Extension"
### 0.334s elapsed time, 0.704s cpu time, 0.034s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.561s elapsed time, 0.851s cpu time, 0.034s GC time
Loading theory "Draft.Multiset_ExtensionTemplates"
val templateLemmas =
   [("Multiset_Extension.empty_multisets", "{#} : multisets ?F",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Multiset_Extension.transp_on_mulex_on",
     "transp_on (mulex_on ?P ?A) ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)
         )),
    ("Multiset_Extension.mulex1_empty", "mulex1 ?P ?M {#} = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Multiset_Extension.mulex1_self_add_right",
     "mulex1 ?P ?A (add_mset ?a ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Multiset_Extension.empty_mulex1", "mulex1 ?P {#} {#?a#}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 1))
         )),
    ("Multiset_Extension.image_mset_lists",
     "mset ` lists ?A = multisets ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Multiset_Extension.empty_mult1", "({#}, {#?a#}) : mult1 ?R",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 2))),
           template_app (template_hole 0, template_var 0))
         )),
    ("Multiset_Extension.in_multisets_iff",
     "(?M : multisets ?A) = (set_mset ?M <= ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Multiset_Extension.singleton_multisets",
     "({#?x#} : multisets ?A) = (?x : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Multiset_Extension.irreflp_on_mulex1",
     "wfp_on ?P ?A ==> irreflp_on (mulex1 ?P) (multisets ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_Extension.wfp_on_mulex1_multisets",
     "wfp_on ?P ?A ==> wfp_on (mulex1 ?P) (multisets ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_Extension.irreflp_on_mulex_on",
     "wfp_on ?P ?A ==> irreflp_on (mulex_on ?P ?A) (multisets ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_Extension.wfp_on_mulex_on_multisets",
     "wfp_on ?P ?A ==> wfp_on (mulex_on ?P ?A) (multisets ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Multiset_Extension.mulex_on_multisetsD",
     "mulex_on ?P ?F ?M ?N ==> ?M : multisets ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Multiset_Extension.mulex_on_multisetsD",
     "mulex_on ?P ?F ?M ?N ==> ?N : multisets ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Multiset_Extension.mulex1_singleton",
     "mulex1 ?P {#?x#} {#?y#} = ?P ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("Multiset_Extension.surj_on_multisets_mset",
     "ALL M:multisets ?A. EX xs:lists ?A. M = mset xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           t_empty)
         )),
    ("Multiset_Extension.mulex1_reflclp",
     "mulex1 ?P ?M ?N ==> mulex1 ?P^== ?M ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0)),
               template_var 1),
             template_var 0)
           ))),
    ("Multiset_Extension.mulex1_union",
     "mulex1 ?P ?M ?N ==> mulex1 ?P (?K + ?M) (?K + ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Multiset_Extension.mulex_on_reflclp",
     "mulex_on ?P ?A ?M ?N ==> mulex_on ?P^== ?A ?M ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Multiset_Extension.add_mset_multisets_iff",
     "(add_mset ?a ?M : multisets ?A) = (?a : ?A & ?M : multisets ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("Multiset_Extension.accessible_on_mulex1_multisets",
     "wfp_on ?P ?A ==>
      ALL M:multisets ?A. accessible_on (mulex1 ?P) (multisets ?A) M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty)
           ))),
    ("Multiset_Extension.union_multisets_iff",
     "(?M + ?N : multisets ?A) = (?M : multisets ?A & ?N : multisets ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Multiset_Extension.mult1_singleton",
     "(({#?x#}, {#?y#}) : mult1 ?R) = ((?x, ?y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_hole 3)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Multiset_Extension.mult1_reflcl",
     "(?M, ?N) : mult1 ?R ==> (?M, ?N) : mult1 (?R^=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Multiset_Extension.union_multisetsD",
     "?M + ?N : multisets ?A ==> ?M : multisets ?A & ?N : multisets ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Multiset_Extension.empty_mulex_on",
     "[| ?M ~= {#}; ?M : multisets ?A |] ==> mulex_on ?P ?A {#} ?M",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_hole 3),
             template_var 2)
           ))),
    ("Multiset_Extension.mulex_on_self_add_singleton_right",
     "[| ?a : ?A; ?M : multisets ?A |]
      ==> mulex_on ?P ?A ?M (add_mset ?a ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("Multiset_Extension.multisets_union",
     "[| ?M : multisets ?A; ?N : multisets ?A |]
      ==> ?M + ?N : multisets ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Multiset_Extension.mulex_on_trans",
     "[| mulex_on ?P ?A ?L ?M; mulex_on ?P ?A ?M ?N |]
      ==> mulex_on ?P ?A ?L ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Multiset_Extension.mulex_on_add_right",
     "[| mulex_on ?P ?A ?M ?N; ?a : ?A |]
      ==> mulex_on ?P ?A ?M (add_mset ?a ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Multiset_Extension.mulex_on_union_right'",
     "[| mulex_on ?P ?F ?A ?B; ?K : multisets ?F |]
      ==> mulex_on ?P ?F ?A (?B + ?K)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Multiset_Extension.mulex_on_union_right",
     "[| mulex_on ?P ?F ?A ?B; ?K : multisets ?F |]
      ==> mulex_on ?P ?F ?A (?K + ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Multiset_Extension.mulex_on_add_mset",
     "[| mulex_on ?P ?A ?M ?N; ?m : ?A |]
      ==> mulex_on ?P ?A (add_mset ?m ?M) (add_mset ?m ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Multiset_Extension.mulex_on_union",
     "[| mulex_on ?P ?A ?M ?N; ?K : multisets ?A |]
      ==> mulex_on ?P ?A (?K + ?M) (?K + ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Multiset_Extension.mulex_on_union'",
     "[| mulex_on ?P ?A ?M ?N; ?K : multisets ?A |]
      ==> mulex_on ?P ?A (?M + ?K) (?N + ?K)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Multiset_Extension.union_mulex_on_mono",
     "[| mulex_on ?P ?F ?A ?C; mulex_on ?P ?F ?B ?D |]
      ==> mulex_on ?P ?F (?A + ?B) (?C + ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multiset_Extension.singleton_mulex_onI",
     "[| ?P ?x ?y; ?x : ?A; ?y : ?A |] ==> mulex_on ?P ?A {#?x#} {#?y#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Multiset_Extension.mulex_on_self_add_right",
     "[| ?M : multisets ?A; ?K : multisets ?A; ?K ~= {#} |]
      ==> mulex_on ?P ?A ?M (?M + ?K)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 3),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("Multiset_Extension.reflclp_mulex_on_add_right",
     "[| (mulex_on ?P ?A)^== ?M ?N; ?M : multisets ?A; ?a : ?A |]
      ==> mulex_on ?P ?A ?M (?N + {#?a#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3)),
                  template_hole 6),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Multiset_Extension.reflclp_mulex_on_add_right'",
     "[| (mulex_on ?P ?A)^== ?M ?N; ?M : multisets ?A; ?a : ?A |]
      ==> mulex_on ?P ?A ?M ({#?a#} + ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3)),
                  template_hole 6),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Multiset_Extension.non_empty_multiset_induct",
     "[| ?M ~= {#}; !!x. ?P {#x#}; !!x M. ?P M ==> ?P (add_mset x M) |]
      ==> ?P ?M",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Multiset_Extension.mulex_on_add_mset'",
     "[| ?P ?m ?n; ?m : ?A; ?n : ?A; ?M : multisets ?A |]
      ==> mulex_on ?P ?A (add_mset ?m ?M) (add_mset ?n ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multiset_Extension.union_mulex_on_mono1",
     "[| ?A : multisets ?F; (mulex_on ?P ?F)^== ?A ?C;
         mulex_on ?P ?F ?B ?D |]
      ==> mulex_on ?P ?F (?A + ?B) (?C + ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app (template_hole 4, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 4)),
                  template_hole 1),
                template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Multiset_Extension.union_mulex_on_mono2",
     "[| ?B : multisets ?F; mulex_on ?P ?F ?A ?C;
         (mulex_on ?P ?F)^== ?B ?D |]
      ==> mulex_on ?P ?F (?A + ?B) (?C + ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app (template_hole 4, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 4)),
                  template_hole 1),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 5)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Multiset_Extension.mulex_on_add_mset_mono",
     "[| ?P ?m ?n; ?m : ?A; ?n : ?A; mulex_on ?P ?A ?M ?N |]
      ==> mulex_on ?P ?A (add_mset ?m ?M) (add_mset ?n ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 4), template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Multiset_Extension.diff_set_Ex_iff",
     "(?X ~= {#} & ?X <=# ?M & ?N = ?M - ?X + ?Y) =
      (?X ~= {#} & (EX Z. ?M = Z + ?X & ?N = Z + ?Y))",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_hole 4))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 3)),
                   template_var 0))))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_hole 4))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Multiset_Extension.mulex_on_mono",
     "[| !!x y. [| x : ?A; y : ?A; ?P x y |] ==> ?Q x y;
         mulex_on ?P ?A ?M ?N |]
      ==> mulex_on ?Q ?A ?M ?N",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Multiset_Extension.mulex_on_all_strict",
     "[| ?X ~= {#}; ?X : multisets ?A; ?Y : multisets ?A;
         ALL y. y :# ?Y --> (EX x. x :# ?X & ?P y x) |]
      ==> mulex_on ?P ?A ?Y ?X",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1),
             template_var 3)
           ))),
    ("Multiset_Extension.mulex1_add",
     "mulex1 ?P ?N (?M0.0 + {#?a#}) ==>
      (EX M. mulex1 ?P M ?M0.0 & ?N = M + {#?a#}) |
      (EX K. (ALL b. b :# K --> ?P b ?a) & ?N = ?M0.0 + K)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_hole 8)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 6, t_empty))
           ))),
    ("Multiset_Extension.mulex1_mono",
     "[| !!x y. [| x : ?A; y : ?A; ?P x y |] ==> ?Q x y; ?M : multisets ?A;
         ?N : multisets ?A; mulex1 ?P ?M ?N |]
      ==> mulex1 ?Q ?M ?N",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Multiset_Extension.mult1_mono",
     "[| !!x y. [| x : ?A; y : ?A; (x, y) : ?R |] ==> (x, y) : ?S;
         ?M : multisets ?A; ?N : multisets ?A; (?M, ?N) : mult1 ?R |]
      ==> (?M, ?N) : mult1 ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app (template_hole 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Multiset_Extension.mulex_on_induct",
     "[| mulex_on ?P ?A ?M ?N;
         !!M N.
            [| M : multisets ?A; N : multisets ?A; mulex1 ?P M N |]
            ==> ?Q M N;
         !!L M N.
            [| mulex_on ?P ?A L M; ?Q L M; N : multisets ?A;
               mulex1 ?P M N |]
            ==> ?Q L N |]
      ==> ?Q ?M ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.Multiset_ExtensionTemplates"
### 0.381s elapsed time, 0.531s cpu time, 0.077s GC time
val it = (): unit
