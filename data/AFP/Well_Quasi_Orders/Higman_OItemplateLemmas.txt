   [("Higman_OI.po_on_strict_suffix", "po_on strict_suffix ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Higman_OI.wfp_on_strict_suffix", "wfp_on strict_suffix ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Higman_OI.pt_open_on_good", "pt_open_on (good ?Q) (SEQ ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Higman_OI.higman",
     "almost_full_on ?P ?A ==> almost_full_on (list_emb ?P) (lists ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Higman_OI.qo_on_LEXEQ",
     "transp_on ?P ?A ==> qo_on (LEXEQ ?P) (SEQ ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Higman_OI.open_on_LEXEQ_imp_pt_open_on_counterexample",
     "?a ~= ?b ==> minimal_element (%x y. False) {?a, ?b}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Higman_OI.antisymp_on_LEX",
     "[| irreflp_on ?P ?A; antisymp_on ?P ?A |]
      ==> antisymp_on (LEX ?P) (SEQ ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Higman_OI.open_on_LEXEQ_imp_pt_open_on_counterexample",
     "?a ~= ?b ==> ~ pt_open_on (%f. ALL i. f i = ?b) (SEQ {?a, ?b})",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0))))
               )
           ))),
    ("Higman_OI.open_on_LEXEQ_imp_pt_open_on_counterexample",
     "?a ~= ?b ==>
      open_on (LEXEQ (%x y. False)) (%f. ALL i. f i = ?b) (SEQ {?a, ?b})",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5)))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_hole 1)),
             t_empty)
           ))),
    ("Higman_OI.pt_open_onD",
     "[| pt_open_on ?Q ?A; ?Q ?f; ?f : ?A |]
      ==> EX n. ALL g:?A. (ALL i<n. g i = ?f i) --> ?Q g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Higman_OI.LEX_trans",
     "[| transp_on ?P ?A; ?f : SEQ ?A; ?g : SEQ ?A; ?h : SEQ ?A;
         LEX ?P ?f ?g; LEX ?P ?g ?h |]
      ==> LEX ?P ?f ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 0)
           )))]
