   [("FJAux.subtypings_refl", "?CT \<turnstile>+ ?Cs <: ?Cs",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("FJAux.subst_list1_eq_map_substs",
     "ALL \<sigma>. subst_list1 \<sigma> ?l = map (substs \<sigma>) ?l",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("FJAux.subst_list2_eq_map_substs",
     "ALL \<sigma>. subst_list2 \<sigma> ?l = map (substs \<sigma>) ?l",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("FJAux.lookup_true", "lookup ?l ?f = Some ?r ==> ?f ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("FJAux.subtypings_length",
     "?CT \<turnstile>+ ?As <: ?Bs ==> length ?As = length ?Bs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FJAux.ith_mem", "?i < length ?es ==> ?es ! ?i : set ?es",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FJAux.typings_lengths",
     "?CT;?\<Gamma> \<turnstile>+ ?es : ?Cs ==> length ?es = length ?Cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FJAux.lookup_split",
     "lookup ?l ?f = None | (EX h. lookup ?l ?f = Some h)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 2)),
           template_app (template_hole 1, t_empty))
         )),
    ("FJAux.lookup_append",
     "lookup ?l ?f = Some ?r ==> lookup (?l @ ?l') ?f = Some ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2),
         template_app (template_hole 1, template_var 1)))),
    ("FJAux.subtypings_trans",
     "[| ?CT \<turnstile>+ ?Cs <: ?Ds; ?CT \<turnstile>+ ?Ds <: ?Es |]
      ==> ?CT \<turnstile>+ ?Cs <: ?Es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("FJAux.mem_ith", "?ei : set ?es ==> EX el er. ?es = el @ ?ei # er",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("FJAux.ith_subtyping",
     "?CT \<turnstile>+ (?Cs @ ?h # ?t) <: ?Ds ==>
      ?CT \<turnstile> ?h <: ?Ds ! length ?Cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 3)))
           ))),
    ("FJAux.lookup_functional",
     "[| lookup ?l ?f = ?o1.0; lookup ?l ?f = ?o2.0 |] ==> ?o1.0 = ?o2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_var 0)],
       template_equation (template_var 1, template_var 0))),
    ("FJAux.method_typings_lookup",
     "[| lookup ?M ?f = Some ?mDef; ?CT \<turnstile>+ ?M OK IN ?C |]
      ==> ?CT \<turnstile> ?mDef OK IN ?C",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("FJAux.ith_typing",
     "?CT;?\<Gamma> \<turnstile>+ (?es @ ?h # ?t) : ?Cs ==>
      ?CT;?\<Gamma> \<turnstile> ?h : ?Cs ! length ?es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 3)))
           ))),
    ("FJAux.isubexpr_reduct",
     "[| ?d1.0 \<in> isubexprs(?e1.0);
         ?CT \<turnstile> ?d1.0 \<rightarrow> ?d2.0 |]
      ==> EX e2. ?CT \<turnstile> ?e1.0 \<rightarrow> e2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("FJAux.fields_functional",
     "[| fields(?CT,?C) = ?Cf; ?CT OK; fields(?CT,?C) = ?Cf' |]
      ==> ?Cf = ?Cf'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("FJAux.subtypings_index",
     "[| ?CT \<turnstile>+ ?Cs <: ?Ds; ?i < length ?Cs |]
      ==> ?CT \<turnstile> ?Cs ! ?i <: ?Ds ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FJAux.lookup_hd",
     "[| 0 < length ?l; ?f (?l ! 0) |] ==> lookup ?l ?f = Some (?l ! 0)",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_var 0,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 5))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 5))))),
    ("FJAux.mem_typings",
     "[| ?CT;?\<Gamma> \<turnstile>+ ?es : ?Cs; ?ei : set ?es |]
      ==> EX Ci. ?CT;?\<Gamma> \<turnstile> ?ei : Ci",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("FJAux.subexpr_reduct",
     "[| ?d1.0 \<in> subexprs(?e1.0);
         ?CT \<turnstile> ?d1.0 \<rightarrow> ?d2.0 |]
      ==> EX e2. ?CT \<turnstile> ?e1.0 \<rightarrow> e2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app (template_hole 3, template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("FJAux.typings_index",
     "[| ?CT;?\<Gamma> \<turnstile>+ ?es : ?Cs; ?i < length ?es |]
      ==> ?CT;?\<Gamma> \<turnstile> ?es ! ?i : ?Cs ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FJAux.isubexpr_typing",
     "[| ?e1.0 \<in> isubexprs(?e0.0);
         ?CT;Map.empty \<turnstile> ?e0.0 : ?C |]
      ==> EX D. ?CT;Map.empty \<turnstile> ?e1.0 : D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 1), t_empty),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("FJAux.mbody_functional",
     "[| mbody(?CT,?m,?C) = ?xs . ?e0.0; mbody(?CT,?m,?C) = ?ys . ?d0.0 |]
      ==> ?xs = ?ys & ?e0.0 = ?d0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("FJAux.mtype_functional",
     "[| mtype(?CT,?m,?C) = ?Cs \<rightarrow> ?C0.0;
         mtype(?CT,?m,?C) = ?Ds \<rightarrow> ?D0.0 |]
      ==> ?Ds = ?Cs & ?D0.0 = ?C0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("FJAux.subtyping_append",
     "[| ?CT \<turnstile>+ ?Cs <: ?Ds; ?CT \<turnstile> ?C <: ?D |]
      ==> ?CT \<turnstile>+ (?Cs @ [?C]) <: (?Ds @ [?D])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("FJAux.subexpr_typing",
     "[| ?e1.0 \<in> subexprs(?e0.0);
         ?CT;Map.empty \<turnstile> ?e0.0 : ?C |]
      ==> EX D. ?CT;Map.empty \<turnstile> ?e1.0 : D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 1), t_empty),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("FJAux.not_subtypes",
     "[| ?CT \<turnstile> ?A <: ?C; ?CT \<turnstile> ?D \<not><: ?C;
         ?CT \<turnstile> ?C \<not><: ?D |]
      ==> ?CT \<turnstile> ?A \<not><: ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 0),
                  template_var 1)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 0)
               )
           ))),
    ("FJAux.typings_append",
     "[| ?CT;?\<Gamma> \<turnstile>+ ?es : ?Cs;
         ?CT;?\<Gamma> \<turnstile> ?e : ?C |]
      ==> ?CT;?\<Gamma> \<turnstile>+ (?es @ [?e]) : (?Cs @ [?C])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("FJAux.not_subtypes_aux",
     "[| ?CT \<turnstile> ?C <: ?Da; ?C ~= ?Da; ?CT ?C = Some ?CDef;
         cSuper ?CDef = ?D |]
      ==> ?CT \<turnstile> ?D <: ?Da",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_hole 1, template_var 1)),
        template_equation
         (template_app (template_hole 0, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 0),
             template_var 2)
           ))),
    ("FJAux.map_shuffle",
     "length ?xs = length ?ys ==>
      [?xs [|->] ?ys, ?x |-> ?y] = [?xs @ [?x] [|->] ?ys @ [?y]]",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app (template_hole 11, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, t_empty), template_var 3),
                 template_var 2)),
             template_var 1),
           template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("FJAux.lookup_index",
     "lookup ?l1.0 ?f = Some ?e ==>
      EX i<length ?l1.0.
         ?e = ?l1.0 ! i &
         (length ?l1.0 = length ?l2.0 -->
          lookup2 ?l1.0 ?l2.0 ?f = Some (?l2.0 ! i))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_var 3),
            template_var 2),
          template_app (template_hole 13, template_var 1))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("FJAux.lookup2_index",
     "[| lookup2 ?l1.0 ?l2.0 ?f = Some ?e; length ?l1.0 = length ?l2.0 |]
      ==> EX i<length ?l2.0.
             ?e = ?l2.0 ! i & lookup ?l1.0 ?f = Some (?l1.0 ! i)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 12, template_var 0)),
        template_equation
         (template_app (template_hole 10, template_var 3),
          template_app (template_hole 9, template_var 2))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("FJAux.typings_proj",
     "[| ?CT;?\<Gamma> \<turnstile>+ ?ds : ?As;
         ?CT \<turnstile>+ ?As <: ?Bs; length ?ds = length ?As;
         length ?ds = length ?Bs; ?i < length ?ds |]
      ==> ?CT \<turnstile> ?As ! ?i <: ?Bs ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FJAux.typings_proj",
     "[| ?CT;?\<Gamma> \<turnstile>+ ?ds : ?As;
         ?CT \<turnstile>+ ?As <: ?Bs; length ?ds = length ?As;
         length ?ds = length ?Bs; ?i < length ?ds |]
      ==> ?CT;?\<Gamma> \<turnstile> ?ds ! ?i : ?As ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("FJAux.ith_typing_sub",
     "[| ?CT;?\<Gamma> \<turnstile>+ (?es @ ?h # ?t) : ?Cs;
         ?CT;?\<Gamma> \<turnstile> ?h' : ?Ci';
         ?CT \<turnstile> ?Ci' <: ?Cs ! length ?es |]
      ==> EX Cs'.
             ?CT;?\<Gamma> \<turnstile>+ (?es @ ?h' # ?t) : Cs' &
             ?CT \<turnstile>+ Cs' <: ?Cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 7),
                  template_var 6),
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 6),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 7),
                template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 5)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("FJAux.map_upds_index",
     "[| length ?xs = length ?As; [?xs [|->] ?As] ?x = Some ?Ai |]
      ==> EX i. ?As ! i = ?Ai &
                i < length ?As &
                (ALL Bs.
                    length Bs = length ?As -->
                    [?xs [|->] Bs] ?x = Some (Bs ! i))",
     template_implication
      ([template_equation
         (template_app (template_hole 18, template_var 3),
          template_app (template_hole 17, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 15, t_empty), template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 13, template_var 0))],
       template_predicate (template_app (template_hole 12, t_empty))))]
