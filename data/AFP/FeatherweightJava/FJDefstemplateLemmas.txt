   [("FJDefs.typing_induct",
     "[| ?CT;?\<Gamma> \<turnstile> ?e : ?C;
         !!C CT \<Gamma> x.
            \<Gamma> x = Some C ==> ?P CT \<Gamma> (Var x) C;
         !!C0 CT Cf Ci \<Gamma> e0 fDef fi.
            [| CT;\<Gamma> \<turnstile> e0 : C0; ?P CT \<Gamma> e0 C0;
               fields(CT,C0) = Cf;
               lookup Cf (%fd. vdName fd = fi) = Some fDef;
               vdType fDef = Ci |]
            ==> ?P CT \<Gamma> (FieldProj e0 fi) Ci;
         !!C C0 CT Cs Ds \<Gamma> e0 es m.
            [| CT;\<Gamma> \<turnstile> e0 : C0; ?P CT \<Gamma> e0 C0;
               mtype(CT,m,C0) = Ds \<rightarrow> C;
               CT;\<Gamma> \<turnstile>+ es : Cs;
               !!i. i < length es ==> ?P CT \<Gamma> (es ! i) (Cs ! i);
               CT \<turnstile>+ Cs <: Ds; length es = length Ds |]
            ==> ?P CT \<Gamma> (MethodInvk e0 m es) C;
         !!C CT Cs Df Ds \<Gamma> es.
            [| fields(CT,C) = Df; length es = length Df;
               varDefs_types Df = Ds; CT;\<Gamma> \<turnstile>+ es : Cs;
               !!i. i < length es ==> ?P CT \<Gamma> (es ! i) (Cs ! i);
               CT \<turnstile>+ Cs <: Ds |]
            ==> ?P CT \<Gamma> (New C es) C;
         !!C CT D \<Gamma> e0.
            [| CT;\<Gamma> \<turnstile> e0 : D; ?P CT \<Gamma> e0 D;
               CT \<turnstile> D <: C |]
            ==> ?P CT \<Gamma> (Cast C e0) C;
         !!C CT D \<Gamma> e0.
            [| CT;\<Gamma> \<turnstile> e0 : D; ?P CT \<Gamma> e0 D;
               CT \<turnstile> C <: D; C ~= D |]
            ==> ?P CT \<Gamma> (Cast C e0) C;
         !!C CT D \<Gamma> e0.
            [| CT;\<Gamma> \<turnstile> e0 : D; ?P CT \<Gamma> e0 D;
               CT \<turnstile> C \<not><: D; CT \<turnstile> D \<not><: C |]
            ==> ?P CT \<Gamma> (Cast C e0) C |]
      ==> ?P ?CT ?\<Gamma> ?e ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 35, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           )))]
