   [("Regular_Algebras.pair_star",
     "conway_assm2 ?x ==>
      ?x\<^bsub>1::?'a\<^esub>\<^sup>\<star> = ?x\<^bsub>1::?'a\<^esub>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Regular_Algebras.conway_monoid_one",
     "conway_assm2 ?x ==>
      ?x\<^bsub>1::?'a\<^esub> = (1::?'b) + ?x\<^bsub>1::?'a\<^esub>",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))))),
    ("Regular_Algebras.C14_dual",
     "?x\<^sup>\<star> =
      ?x\<^bsub>0\<^esub>\<^bsup>?n\<^esup> \<cdot>
      (?x\<^bsup>?n + 1\<^esup>)\<^sup>\<star>",
     template_equation
      (template_app (template_hole 6, template_var 1),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3),
             template_var 0)),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Regular_Algebras.pair_one",
     "?x\<^bsub>1::?'b,1::?'b\<^esub> = ?x\<^bsub>1::?'b\<^esub>",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app (template_hole 6, t_empty)),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("Regular_Algebras.sum_intro'",
     "[| finite ?A; finite ?B; ALL a:?A. EX b:?B. a <= b |]
      ==> \<Sum> ?A <= \<Sum> ?B",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Regular_Algebras.boffa_mon_aux1",
     "{?x\<^bsub>i \<cdot> j\<^esub> |i j. i : UNIV & j : UNIV} =
      {?x\<^bsub>i\<^esub> |i. i : UNIV}",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 7, t_empty))),
    ("Regular_Algebras.conway_monoid_split",
     "conway_assm2 ?x ==>
      \<Sum> {?x\<^bsub>i\<^esub> |i. i : UNIV} =
      (1::?'b) + \<Sum> {?x\<^bsub>i\<^esub> |i. i : UNIV}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 8, t_empty),
           template_app (template_hole 7, t_empty)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 8, t_empty),
             template_app (template_hole 7, t_empty)))))),
    ("Regular_Algebras.conway_monoid_identity",
     "[| conway_assm1 ?x; conway_assm2 ?x |]
      ==> \<Sum> {?x\<^bsub>i\<^esub> |i. i : UNIV}\<^sup>\<star> =
          \<Sum> {?x\<^bsub>i\<^esub> |i. i : UNIV}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 5, t_empty))),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 5, t_empty))))),
    ("Regular_Algebras.boffa_aux2",
     "conway_assm1 ?x ==>
      \<Sum>
       {?x\<^bsub>i\<^esub> \<cdot> ?x\<^bsub>j\<^esub> |i j.
        i : UNIV & j : UNIV}
      <= \<Sum> {?x\<^bsub>i \<cdot> j\<^esub> |i j. i : UNIV & j : UNIV}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 9, t_empty),
           template_app (template_hole 8, t_empty)),
         template_app
          (template_app (template_hole 9, t_empty),
           template_app (template_hole 8, t_empty))))),
    ("Regular_Algebras.boffa_aux3",
     "conway_assm1 ?x ==>
      \<Sum> {?x\<^bsub>i\<^esub> |i. i : UNIV} +
      \<Sum>
       {?x\<^bsub>i\<^esub> \<cdot> ?x\<^bsub>j\<^esub> |i j.
        i : UNIV & j : UNIV} =
      \<Sum> {?x\<^bsub>i\<^esub> |i. i : UNIV}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 6, t_empty))),
           template_app
            (template_app (template_hole 7, t_empty),
             template_app (template_hole 6, t_empty))),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app (template_hole 6, t_empty)))))]
