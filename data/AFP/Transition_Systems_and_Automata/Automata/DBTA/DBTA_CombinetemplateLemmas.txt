   [("DBTA_Combine.degeneralize_language",
     "DBTA.language (degeneralize ?A) = DGBTA.language ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("DBTA_Combine.degeneralize_nodes_finite",
     "finite (DBTA.nodes (degeneralize ?A)) = finite (DGBTA.nodes ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("DBTA_Combine.intersect'_language",
     "DGBTA.language (intersect' ?A ?B) =
      DBTA.language ?A Int DBTA.language ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("DBTA_Combine.intersect_language",
     "DBTA.language (intersect ?A ?B) =
      DBTA.language ?A Int DBTA.language ?B",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("DBTA_Combine.degeneralize_nodes_card",
     "card (DBTA.nodes (degeneralize ?A))
      <= max 1 (length (dgbta.accepting ?A)) * card (DGBTA.nodes ?A)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("DBTA_Combine.union_nodes_finite",
     "[| finite (DBTA.nodes ?A); finite (DBTA.nodes ?B) |]
      ==> finite (DBTA.nodes (DBTA_Combine.union ?A ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("DBTA_Combine.intersect'_nodes_finite",
     "[| finite (DBTA.nodes ?A); finite (DBTA.nodes ?B) |]
      ==> finite (DGBTA.nodes (intersect' ?A ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("DBTA_Combine.intersect_nodes_finite",
     "[| finite (DBTA.nodes ?A); finite (DBTA.nodes ?B) |]
      ==> finite (DBTA.nodes (intersect ?A ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("DBTA_Combine.union_language",
     "dbta.alphabet ?A = dbta.alphabet ?B ==>
      DBTA.language (DBTA_Combine.union ?A ?B) =
      DBTA.language ?A Un DBTA.language ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("DBTA_Combine.union_nodes_card",
     "[| finite (DBTA.nodes ?A); finite (DBTA.nodes ?B) |]
      ==> card (DBTA.nodes (DBTA_Combine.union ?A ?B))
          <= card (DBTA.nodes ?A) * card (DBTA.nodes ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 9, template_var 1))),
           template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 0)))))),
    ("DBTA_Combine.intersect'_nodes_card",
     "[| finite (DBTA.nodes ?A); finite (DBTA.nodes ?B) |]
      ==> card (DGBTA.nodes (intersect' ?A ?B))
          <= card (DBTA.nodes ?A) * card (DBTA.nodes ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 9, template_var 1))),
           template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 0)))))),
    ("DBTA_Combine.intersect_nodes_card",
     "[| finite (DBTA.nodes ?A); finite (DBTA.nodes ?B) |]
      ==> card (DBTA.nodes (intersect ?A ?B))
          <= 2 * card (DBTA.nodes ?A) * card (DBTA.nodes ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app
                (template_hole 1,
                 template_app (template_hole 13, template_var 1)))),
           template_app
            (template_hole 0,
             template_app (template_hole 11, template_var 0))))))]
