   [("NBA_Translate.nba_image_language",
     "inj_on ?f (nodes ?A) ==> language (nba_image ?f ?A) = language ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("NBA_Translate.nba_image_nodes",
     "inj_on ?f (nodes ?A) ==> nodes (nba_image ?f ?A) = ?f ` nodes ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("NBA_Translate.nba_image_nbae",
     "inj_on ?f (nodes ?A) ==>
      nbae_image ?f (nba_nbae ?A) = nba_nbae (nba_image ?f ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("NBA_Translate.op_translate_language",
     "(RETURN ?Ai, op_translate ?A) : \<langle>\<langle>Id,
      nat_rel\<rangle>nbaei_nbae_rel\<rangle>nres_rel ==>
      language (nbae_nba (nbaei_nbae ?Ai)) = language ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 1)),
                  template_app (template_hole 12, template_var 0))),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_hole 6)),
                  template_hole 5)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("NBA_Translate.nbae_image_param",
     "(nbae_image, nbae_image)
      : (?S \<rightarrow> ?T) \<rightarrow>
        \<langle>?L, ?S\<rangle>nbae_rel \<rightarrow> \<langle>?L,
        ?T\<rangle>nbae_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app (template_hole 17, template_hole 16),
               template_hole 15)),
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_var 2)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_var 0)),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)),
                 template_var 1))))
         )),
    ("NBA_Translate.nba_image_rel",
     "inj_on ?f (nodes ?A) ==>
      (?A, nba_image ?f ?A) : \<langle>Id_on (alphabet ?A),
      br ?f (%p. p : nodes ?A)\<rangle>nba_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)))),
               template_app
                (template_app (template_hole 1, template_var 1), t_empty)))
           ))),
    ("NBA_Translate.trans_algo_refine",
     "[| finite (nodes ?A); finite (alphabet ?A); inj_on ?f (nodes ?A);
         ?N = nodes ?A; ?L = alphabet ?A; ?S = transition ?A |]
      ==> (trans_algo ?N ?L ?S ?f, SPEC ((=) (trans_spec ?A ?f)))
          : \<langle>Id\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 17, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app (template_hole 17, template_var 4))
            ),
        template_equation
         (template_var 2, template_app (template_hole 17, template_var 4)),
        template_equation
         (template_var 1, template_app (template_hole 15, template_var 4)),
        template_equation
         (template_var 0, template_app (template_hole 10, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 7, template_var 2),
                         template_var 1),
                       template_var 0),
                     template_var 3)),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_var 3)))))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("NBA_Translate.nbae_image_nba_nbae",
     "nbae_image ?f (nba_nbae ?A) =
      nbae (alphabet ?A) (?f ` initial ?A)
       (UN p:nodes ?A.
           UN a:alphabet ?A.
              ?f ` {p} \<times> {a} \<times> ?f ` transition ?A a p)
       (?f ` {p: nodes ?A. accepting ?A p})",
     template_equation
      (template_app
        (template_app (template_hole 20, template_var 1),
         template_app (template_hole 19, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 18,
               template_app (template_hole 17, template_var 0)),
             template_app
              (template_app (template_hole 16, template_var 1),
               template_app (template_hole 15, template_var 0))),
           template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, t_empty),
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_app (template_hole 16, template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("NBA_Translate.to_nbaei_impl_refine",
     "[| SIDE_PRECOND (finite (nodes ?A));
         SIDE_GEN_ALGO (is_bounded_hashcode ?S ?seq ?bhc);
         SIDE_GEN_ALGO (is_valid_def_hm_size TYPE(?'statei) ?hms);
         GEN_OP ?seq (=) (?S \<rightarrow> ?S \<rightarrow> bool_rel);
         (?Ai, ?A) : \<langle>?L, ?S\<rangle>nbai_nba_rel |]
      ==> (RETURN (to_nbaei_impl ?seq ?bhc ?hms ?Ai),
           (Autoref_Tagging.OP op_translate :::
            \<langle>?L, ?S\<rangle>nbai_nba_rel \<rightarrow>
            \<langle>\<langle>?L,
            nat_rel\<rangle>nbaei_nbae_rel\<rangle>nres_rel) $
           ?A)
          : \<langle>\<langle>?L,
          nat_rel\<rangle>nbaei_nbae_rel\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_hole 44,
                template_app
                 (template_hole 43,
                  template_app
                   (template_hole 42,
                    template_app (template_hole 41, template_var 6)))))
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_hole 40,
                template_app
                 (template_app
                   (template_app (template_hole 39, template_var 5),
                    template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_hole 40,
                template_app
                 (template_app (template_hole 38, template_hole 37),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_hole 36,
                template_app
                 (template_app
                   (template_hole 35,
                    template_app
                     (template_app (template_hole 34, template_var 4),
                      template_app
                       (template_app
                         (template_hole 33,
                          template_app
                           (template_hole 32, template_hole 31)),
                        template_app
                         (template_hole 30,
                          template_app
                           (template_app
                             (template_hole 29,
                              template_app
                               (template_app
                                 (template_hole 28, template_hole 27),
                                template_var 5)),
                            template_app
                             (template_app
                               (template_hole 26,
                                template_app
                                 (template_app
                                   (template_hole 25, template_hole 24),
                                  template_var 5)),
                              template_hole 23)))))),
                  template_app
                   (template_app
                     (template_hole 29,
                      template_app
                       (template_app (template_hole 28, template_hole 27),
                        template_var 5)),
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app
                         (template_app (template_hole 25, template_hole 24),
                          template_var 5)),
                      template_hole 23)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 1),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_hole 18),
                    template_var 0)),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 14, template_var 4),
                           template_var 3),
                         template_var 2),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app (template_hole 11, template_hole 10)),
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7, template_hole 6),
                               template_app
                                (template_app
                                  (template_hole 20,
                                   template_app
                                    (template_app
(template_hole 19, template_hole 18),
                                     template_var 0)),
                                 template_var 5))),
                           template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_app
                                    (template_hole 2, template_hole 1),
                                   template_var 0)),
                               template_hole 0)))))),
                   template_var 6))),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0)),
                 template_hole 0)))
           ))),
    ("NBA_Translate.to_nbaei_impl",
     "[| finite (nodes ?A); is_bounded_hashcode ?S ?seq ?bhc;
         is_valid_def_hm_size TYPE(?'statei) ?hms;
         (?seq, (=)) : ?S \<rightarrow> ?S \<rightarrow> bool_rel;
         (?Ai, ?A) : \<langle>?L, ?S\<rangle>nbai_nba_rel |]
      ==> (RETURN
            (let x = nba_nodes ?seq ?bhc ?hms ?Ai;
                 xa = snd ((map_iterator_dom o
                            Impl_Array_Hash_Map.ahm_iteratei)
                            x (%_. True)
                            (%x (k, m).
                                (Suc k,
                                 Impl_Array_Hash_Map.ahm_update ?seq ?bhc x
                                  k m))
                            (0, Impl_Array_Hash_Map.ahm_empty ?hms));
                 xb = (map_iterator_dom o Impl_Array_Hash_Map.ahm_iteratei)
                       x (%xa. True)
                       (%xb. foldli (alphabeti ?Ai) (%xc. True)
                              (%xc. foldli (transitioni ?Ai xc xb)
                                     (%xe. True)
                                     (%xd.
   (#) (the (Impl_Array_Hash_Map.ahm_lookup ?seq ?bhc xb xa), xc,
        the (Impl_Array_Hash_Map.ahm_lookup ?seq ?bhc xd xa)))))
                       []
             in nbaei (alphabeti ?Ai)
                 (gen_image foldli [] (glist_insert (=))
                   (%xi. the (Impl_Array_Hash_Map.ahm_lookup ?seq ?bhc xi
                               xa))
                   (initiali ?Ai))
                 xb (gen_image
                      (map_iterator_dom o Impl_Array_Hash_Map.ahm_iteratei)
                      [] (glist_insert (=))
                      (%xi. the (Impl_Array_Hash_Map.ahm_lookup ?seq ?bhc xi
                                  xa))
                      (gen_filter
                        (map_iterator_dom o
                         Impl_Array_Hash_Map.ahm_iteratei)
                        (Impl_Array_Hash_Map.ahm_empty ?hms)
                        (map2set_insert
                          (Impl_Array_Hash_Map.ahm_update ?seq ?bhc))
                        (acceptingi ?Ai) x))),
           let N = nodes ?A
           in op_set_enumerate N >>=
              (%f. ASSERT (dom f = N) >>=
                   (%_. ASSERT (ALL p:initial ?A. f p ~= None) >>=
                        (%_. ASSERT
                              (ALL a:alphabet ?A.
                                  ALL p:dom f.
                                     ALL q:transition ?A a p.
  f q ~= None) >>=
                             (%_. trans_algo N (alphabet ?A) (transition ?A)
                                   (%x. the (f x)) >>=
                                  (%T.
RETURN
 (nbae (alphabet ?A) ((%x. the (f x)) ` initial ?A) T
   ((%x. the (f x)) ` {p: N. accepting ?A p}))))))))
          : \<langle>\<langle>?L,
          nat_rel\<rangle>nbaei_nbae_rel\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 99,
              template_app (template_hole 98, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 97, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 96, template_hole 95),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 94,
                template_app
                 (template_app (template_hole 93, template_var 4),
                  template_hole 92)),
              template_app
               (template_app
                 (template_hole 91,
                  template_app
                   (template_app (template_hole 90, template_hole 89),
                    template_var 5)),
                template_app
                 (template_app
                   (template_hole 88,
                    template_app
                     (template_app (template_hole 87, template_hole 86),
                      template_var 5)),
                  template_hole 85)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 84,
                template_app
                 (template_app (template_hole 83, template_var 1),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 82,
                  template_app
                   (template_app (template_hole 81, template_hole 80),
                    template_var 0)),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 79,
               template_app
                (template_app
                  (template_hole 78,
                   template_app
                    (template_hole 77,
                     template_app
                      (template_app
                        (template_hole 76,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 75, template_var 4),
                               template_var 3),
                             template_var 2),
                           template_var 1)),
                       t_empty))),
                 template_app
                  (template_app
                    (template_hole 29,
                     template_app (template_hole 98, template_var 6)),
                   t_empty))),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0)),
                 template_hole 0)))
           )))]
