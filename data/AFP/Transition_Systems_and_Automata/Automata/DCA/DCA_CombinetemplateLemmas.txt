   [("DCA_Combine.degeneralize_language",
     "DCA.language (degeneralize ?A) = DGCA.language ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("DCA_Combine.degeneralize_nodes_finite",
     "finite (DCA.nodes (degeneralize ?A)) = finite (DGCA.nodes ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("DCA_Combine.intersect_list_language",
     "DCA.language (intersect_list ?AA) =
      \<Inter> (DCA.language ` set ?AA)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("DCA_Combine.intersect_language",
     "DCA.language (intersect ?A ?B) = DCA.language ?A Int DCA.language ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("DCA_Combine.union_list_nodes_finite",
     "list_all (finite o DCA.nodes) ?AA ==>
      finite (DCA.nodes (union_list ?AA))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_hole 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("DCA_Combine.intersect_list_nodes_finite",
     "list_all (finite o DCA.nodes) ?AA ==>
      finite (DCA.nodes (intersect_list ?AA))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  t_empty)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("DCA_Combine.union_list'_nodes_finite",
     "list_all (finite o DCA.nodes) ?AA ==>
      finite (DGCA.nodes (union_list' ?AA))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  t_empty)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("DCA_Combine.degeneralize_nodes_card",
     "card (DCA.nodes (degeneralize ?A))
      <= max 1 (length (dgca.rejecting ?A)) * card (DGCA.nodes ?A)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("DCA_Combine.intersect_nodes_finite",
     "[| finite (DCA.nodes ?A); finite (DCA.nodes ?B) |]
      ==> finite (DCA.nodes (intersect ?A ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("DCA_Combine.union'_nodes_finite",
     "[| finite (DCA.nodes ?A); finite (DCA.nodes ?B) |]
      ==> finite (DGCA.nodes (union' ?A ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("DCA_Combine.union_nodes_finite",
     "[| finite (DCA.nodes ?A); finite (DCA.nodes ?B) |]
      ==> finite (DCA.nodes (DCA_Combine.union ?A ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("DCA_Combine.union'_language",
     "dca.alphabet ?A = dca.alphabet ?B ==>
      DGCA.language (union' ?A ?B) = DCA.language ?A Un DCA.language ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("DCA_Combine.union_language",
     "dca.alphabet ?A = dca.alphabet ?B ==>
      DCA.language (DCA_Combine.union ?A ?B) =
      DCA.language ?A Un DCA.language ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("DCA_Combine.intersect_list_nodes_card",
     "list_all (finite o DCA.nodes) ?AA ==>
      card (DCA.nodes (intersect_list ?AA))
      <= prod_list (map (card o DCA.nodes) ?AA)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_hole 9),
                  t_empty)),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0), t_empty)),
             template_var 0))))),
    ("DCA_Combine.union_list'_nodes_card",
     "list_all (finite o DCA.nodes) ?AA ==>
      card (DGCA.nodes (union_list' ?AA))
      <= prod_list (map (card o DCA.nodes) ?AA)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_hole 9),
                  t_empty)),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0), t_empty)),
             template_var 0))))),
    ("DCA_Combine.union_list'_language",
     "\<Inter> (dca.alphabet ` set ?AA) =
      \<Union> (dca.alphabet ` set ?AA) ==>
      DGCA.language (union_list' ?AA) = \<Union> (DCA.language ` set ?AA)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app (template_hole 7, template_var 0))),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app (template_hole 7, template_var 0))))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 7, template_var 0)))))),
    ("DCA_Combine.union_list_language",
     "\<Inter> (dca.alphabet ` set ?AA) =
      \<Union> (dca.alphabet ` set ?AA) ==>
      DCA.language (union_list ?AA) = \<Union> (DCA.language ` set ?AA)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app (template_hole 8, template_var 0))),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app (template_hole 8, template_var 0))))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 8, template_var 0)))))),
    ("DCA_Combine.intersect_nodes_card",
     "[| finite (DCA.nodes ?A); finite (DCA.nodes ?B) |]
      ==> card (DCA.nodes (intersect ?A ?B))
          <= card (DCA.nodes ?A) * card (DCA.nodes ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 9, template_var 1))),
           template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 0)))))),
    ("DCA_Combine.union'_nodes_card",
     "[| finite (DCA.nodes ?A); finite (DCA.nodes ?B) |]
      ==> card (DGCA.nodes (union' ?A ?B))
          <= card (DCA.nodes ?A) * card (DCA.nodes ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 9, template_var 1))),
           template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 0)))))),
    ("DCA_Combine.union_list_nodes_card",
     "list_all (finite o DCA.nodes) ?AA ==>
      card (DCA.nodes (union_list ?AA))
      <= max 1 (length ?AA) * prod_list (map (card o DCA.nodes) ?AA)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_hole 13)),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 0)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 13)),
               template_var 0)))))),
    ("DCA_Combine.union_nodes_card",
     "[| finite (DCA.nodes ?A); finite (DCA.nodes ?B) |]
      ==> card (DCA.nodes (DCA_Combine.union ?A ?B))
          <= 2 * card (DCA.nodes ?A) * card (DCA.nodes ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app
                (template_hole 1,
                 template_app (template_hole 13, template_var 1)))),
           template_app
            (template_hole 0,
             template_app (template_hole 11, template_var 0))))))]
