   [("Sequence_LTL.infs_bot", "infs bot ?w = False",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Sequence_LTL.infs_top", "infs top ?w = True",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Sequence_LTL.holds_sconst", "holds ?P (sconst ?a) = ?P ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_var 1, template_var 0))),
    ("Sequence_LTL.HLD_sconst", "HLD ?A (sconst ?a) = (?a : ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Sequence_LTL.holds_smap",
     "holds ?P (smap ?f ?w) = holds (?P o ?f) ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Sequence_LTL.alw_ev_sdrop",
     "alw (ev ?P) (sdrop ?n ?w) = alw (ev ?P) ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("Sequence_LTL.alw_ev_shift", "alw (ev ?P) (?u @- ?v) = alw (ev ?P) ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("Sequence_LTL.alw_ev_scons", "alw (ev ?P) (?a ## ?w) = alw (ev ?P) ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("Sequence_LTL.ev_alw_sdrop",
     "ev (alw ?P) (sdrop ?n ?w) = ev (alw ?P) ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("Sequence_LTL.ev_alw_shift", "ev (alw ?P) (?u @- ?v) = ev (alw ?P) ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("Sequence_LTL.ev_alw_scons", "ev (alw ?P) (?a ## ?w) = ev (alw ?P) ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("Sequence_LTL.infs_all", "Ball (sset ?w) ?P ==> infs ?P ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 1)
           ))),
    ("Sequence_LTL.infs_any", "infs ?P ?w ==> Bex (sset ?w) ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Sequence_LTL.ev_HLD_sset", "ev (HLD ?A) ?w = (sset ?w Int ?A ~= {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_var 1),
             template_hole 0)
           ))),
    ("Sequence_LTL.alw_smap", "alw ?P (smap ?f ?w) = alw (?P o smap ?f) ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("Sequence_LTL.ev_smap", "ev ?P (smap ?f ?w) = ev (?P o smap ?f) ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("Sequence_LTL.infs_infm", "infs ?P ?w = (INFM i. ?P (?w !! i))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("Sequence_LTL.infs_cycle",
     "?w ~= [] ==> infs ?P (cycle ?w) = Bex (set ?w) ?P",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0))),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Sequence_LTL.infs_snth",
     "infs ?P ?w = (ALL n. EX k>=n. ?P (?w !! k))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Sequence_LTL.infs_suffix",
     "infs ?P ?w = (ALL u v. ?w = u @- v --> Bex (sset v) ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1))),
         template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Sequence_LTL.infs_disj",
     "infs (%a. ?P a | ?Q a) ?w = (infs ?P ?w | infs ?Q ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1))),
           template_var 0)))),
    ("Sequence_LTL.alw_ev_coinduct",
     "[| ?R ?w; !!w. ?R w ==> ev ?\<phi> w & ev ?R (stl w) |]
      ==> alw (ev ?\<phi>) ?w",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Sequence_LTL.infs_mono_strong",
     "[| stream_all2 (%a b. ?P a --> ?Q b) ?u ?v; infs ?P ?u |]
      ==> infs ?Q ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty), template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))),
             template_var 0)
           ))),
    ("Sequence_LTL.infs_bex",
     "finite ?S ==>
      infs (%a. EX x:?S. ?P x a) ?w = (EX x:?S. infs (?P x) ?w)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty))),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Sequence_LTL.infs_coinduct",
     "[| ?R ?w; !!w. ?R w ==> Bex (sset w) ?P & ev ?R (stl w) |]
      ==> infs ?P ?w",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0))),
             template_var 1)
           ))),
    ("Sequence_LTL.infs_bex_le_nat",
     "infs (%a. EX k<?n. ?P k a) ?w = (EX k<?n. infs (?P k) ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Sequence_LTL.infs_mono",
     "[| !!a. [| a : sset ?w; ?P a |] ==> ?Q a; infs ?P ?w |]
      ==> infs ?Q ?w",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1))),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 2)
           ))),
    ("Sequence_LTL.infs_flat_coinduct",
     "[| ?R ?w; !!u v. ?R (u ## v) ==> Bex (set u) ?P & ?R v |]
      ==> infs ?P (flat ?w)",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Sequence_LTL.infs_coinduct_shift",
     "[| ?R ?w; !!w. ?R w ==> EX u v. w = u @- v & Bex (set u) ?P & ?R v |]
      ==> infs ?P ?w",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 1)
           ))),
    ("Sequence_LTL.infs_sscan_coinduct",
     "[| ?R ?w ?a;
         !!w a.
            ?R w a ==>
            ?P a & (EX u v. w = u @- v & u ~= [] & ?R v (fold ?f u a)) |]
      ==> infs ?P (?a ## sscan ?f ?w ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 2)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2)))
           )))]
