Loading theory "Draft.Basic" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine" via "Draft.Degeneralization" via "Draft.Acceptance" via "Draft.Sequence_LTL" via "Draft.Sequence")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### theory "Draft.Basic"
### 0.045s elapsed time, 0.208s cpu time, 0.000s GC time
Loading theory "Draft.Sequence" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine" via "Draft.Degeneralization" via "Draft.Acceptance" via "Draft.Sequence_LTL")
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.141s elapsed time, 0.548s cpu time, 0.053s GC time
[| inj_on ?f ?A; ?B <= ?A |] ==> inj_on ?f ?B
[| inj_on ?f ?B; ?A <= ?B |] ==> inj_on ?f ?A
### theory "HOL-Library.Set_Algebras"
### 0.224s elapsed time, 0.804s cpu time, 0.053s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.ExtrEqs")
consts
  scan :: "('a => 'b => 'b) => 'a list => 'b => 'b list"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sscan :: "('a => 'b => 'b) => 'a stream => 'b => 'b stream"
Found termination order: "size <*mlex*> {}"
consts
  stranspose :: "'a stream list => 'a list stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "sdistinct"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "sascending"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for coinductive predicate(s) "sdescending"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.Sequence"
### 0.751s elapsed time, 2.307s cpu time, 0.258s GC time
Loading theory "Draft.Sequence_LTL" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine" via "Draft.Degeneralization" via "Draft.Acceptance")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.696s elapsed time, 2.084s cpu time, 0.278s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Sequence_LTL"
### 0.653s elapsed time, 1.629s cpu time, 0.588s GC time
Loading theory "Draft.Acceptance" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine" via "Draft.Degeneralization")
Loading theory "Draft.Sequence_Zip" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine" via "Draft.Degeneralization")
### theory "Draft.Acceptance"
### 0.080s elapsed time, 0.242s cpu time, 0.000s GC time
### theory "Draft.Sequence_Zip"
### 0.170s elapsed time, 0.440s cpu time, 0.063s GC time
Loading theory "Draft.Degeneralization" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine")
Loading theory "Draft.Maps" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine" via "Draft.Refine")
### theory "Draft.Maps"
### 0.065s elapsed time, 0.194s cpu time, 0.000s GC time
Loading theory "Draft.Refine" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.Degeneralization_Refine")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Degeneralization"
### 0.244s elapsed time, 0.722s cpu time, 0.064s GC time
### theory "HOL-Library.Tree"
### 1.906s elapsed time, 5.408s cpu time, 0.973s GC time
Loading theory "Draft.Templates" (required by "Draft.Degeneralization_RefineTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.057s elapsed time, 0.132s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Degeneralization_RefineTemplates")
rel_fun (rel_fun ?A ?B) (rel_fun (rel_set ?A) (rel_set ?B)) (`) (`)
((`), (`))
: (?A \<rightarrow> ?B) \<rightarrow>
  \<langle>?A\<rangle>set_rel \<rightarrow> \<langle>?B\<rangle>set_rel
bi_unique ?A ==>
rel_fun (rel_fun ?A ?B) (rel_fun ?A (rel_fun ?B (rel_fun ?A ?B))) fun_upd
 fun_upd
bijective ?A ==>
(fun_upd, fun_upd)
: (?A \<rightarrow> ?B) \<rightarrow>
  ?A \<rightarrow> ?B \<rightarrow> ?A \<rightarrow> ?B
single_valued ?Ra ==>
(set, set)
: \<langle>?Ra\<rangle>list_rel \<rightarrow> \<langle>?Ra\<rangle>set_rel
(set, set)
: \<langle>?R\<rangle>list_rel \<rightarrow> \<langle>?R\<rangle>set_rel
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.776s elapsed time, 1.943s cpu time, 0.845s GC time
"(set \<circ>\<circ> sort_key) (%x. x)"
  :: "'a list => 'a set"
### theory "Draft.Refine"
### 1.258s elapsed time, 2.915s cpu time, 0.942s GC time
Loading theory "Draft.Degeneralization_Refine" (required by "Draft.Degeneralization_RefineTemplates")
"(((set \<circ>\<circ> map) f \<circ>\<circ> map) g \<circ>\<circ> map) h"
  :: "'c list => 'b set"
### theory "Draft.Degeneralization_Refine"
### 0.318s elapsed time, 0.319s cpu time, 0.000s GC time
Loading theory "Draft.Degeneralization_RefineTemplates"
val templateLemmas =
   [("Degeneralization_Refine.count_param",
     "(Degeneralization.count, Degeneralization.count)
      : \<langle>?A \<rightarrow> bool_rel\<rangle>list_rel \<rightarrow>
        ?A \<rightarrow> nat_rel \<rightarrow> nat_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_hole 17),
               template_hole 16)),
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 0)),
                     template_hole 7)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0)),
                 template_hole 0))))
         )),
    ("Degeneralization_Refine.degen_param",
     "(degen, degen)
      : \<langle>?S \<rightarrow> bool_rel\<rangle>list_rel \<rightarrow>
        ?S \<times>\<^sub>r nat_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app (template_hole 18, template_hole 17),
               template_hole 16)),
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 0)),
                     template_hole 7)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 0)),
                     template_hole 0))),
               template_hole 7)))
         ))]:
   (string * thm * template) list
### theory "Draft.Degeneralization_RefineTemplates"
### 0.571s elapsed time, 0.734s cpu time, 0.110s GC time
val it = (): unit
