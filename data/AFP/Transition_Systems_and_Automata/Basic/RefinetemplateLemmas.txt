   [("Refine_Heuristics.RELATESI", "RELATES ?R",
     template_predicate (template_app (template_hole 0, template_var 0))),
    ("Refine.bijective_Id_on", "bijective (Id_on ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Mono_Prover.refine_mono", "?x <= ?x",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("Refine_Basic.nres_order_simps", "SUCCEED <= ?M",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Refine_Basic.nres_order_simps", "?M <= FAIL",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("Refine_Misc.mono_const", "mono (%_. ?c)",
     template_predicate (template_app (template_hole 0, t_empty))),
    ("Refine_Det.dbind_mono2", "mono ((>>=) ?M)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.bind_mono2'", "mono ((>>=) ?M)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.abs_fun_mono", "mono (\<Up> ?R)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.conc_fun_mono", "mono (\<Down> ?R)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("RefineG_Transfer.REFINEG_TRANSFER_ALIGNI",
     "REFINEG_TRANSFER_ALIGN ?x ?y",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)
         )),
    ("RefineG_Transfer.STOP_REFINEG_TRANSFER",
     "REFINEG_TRANSFER_POST_SIMP ?c ?c",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Refine_Basic.pw_ASSUME", "nofail (ASSUME ?\<Phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Leof.FAIL_leof", "FAIL \<le>\<^sub>n ?m",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Refine_Leof.leof_refl", "?a \<le>\<^sub>n ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Refine_Leof.leof_FAIL", "?m \<le>\<^sub>n FAIL",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Misc.map_to_set_simps", "single_valued (map_to_set ?m)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Misc.wf_greater_bounded", "wf (greater_bounded ?N)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Transfer.detTAGI", "?x = detTAG ?x",
     template_equation
      (template_var 0, template_app (template_hole 0, template_var 0))),
    ("RefineG_Recursion.flat_ord_top", "flat_ord ?b ?b ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Refine_Mono_Prover.refine_mono", "flat_ord ?b ?x ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Refine_Basic.pw_ASSERT", "inres (ASSERT ?\<Phi>) ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Refine_Leof.leof_RES_UNIV", "?m \<le>\<^sub>n RES UNIV",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Refine_Det.dres_order_simps", "dSUCCEED ~= dRETURN ?r",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Det.dres_order_simps", "dFAIL ~= dRETURN ?r",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Det.dres_order_simps", "dRETURN ?r ~= dSUCCEED",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Det.dres_order_simps", "dRETURN ?r ~= dFAIL",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Det.dres_ne_bot_basic", "dRETURN ?x ~= dSUCCEED",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Det.dres_ne_bot_basic", "dASSERT ?\<Phi> ~= dSUCCEED",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Basic.nres_inequalities", "FAIL ~= RES ?X",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.nres_inequalities", "RES ?X ~= FAIL",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Basic.nres_inequalities", "SUCCEED ~= RETURN ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.nres_inequalities", "FAIL ~= RETURN ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.nres_inequalities", "RETURN ?x ~= SUCCEED",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Basic.nres_inequalities", "RETURN ?x ~= FAIL",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("RefineG_Domain.flat_lub_simps", "flat_lub ?b {} = ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Basic.nofail_simps", "nofail (RES ?X) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Refine_Basic.nofail_simps", "nofail (RETURN ?x) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Refine_Basic.pw_ASSERT", "nofail (ASSERT ?\<Phi>) = ?\<Phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Refine_Det.inf_dres_addsimps", "inf dSUCCEEDi ?x = dSUCCEEDi",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Refine_Det.inf_dres_addsimps", "inf ?x dFAILi = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Det.inf_dres_addsimps", "inf ?x dSUCCEEDi = dSUCCEEDi",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Refine_Det.sup_dres_addsimps", "sup ?x dFAILi = dFAILi",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Refine_Det.sup_dres_addsimps", "sup ?x dSUCCEEDi = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Det.dres_monad2", "?M >>= dRETURN = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Mono_Prover.refine_mono", "dSUCCEED >>= ?f = dSUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Mono_Prover.refine_mono", "dFAIL >>= ?f = dFAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.abs_fun_strict", "\<Up> ?R SUCCEED = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.abs_fun_simps", "\<Up> ?R FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.nres_monad2", "?M >>= RETURN = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Basic.bind_SUCCEED", "SUCCEED >>= ?f = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.bind_FAIL", "FAIL >>= ?f = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.conc_fun_strict", "\<Down> ?R SUCCEED = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.conc_fun_FAIL", "\<Down> ?R FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_While.filter_nb_FAIL", "filter_nb ?cond FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Refine_Basic.SUCCEED_refine", "SUCCEED <= \<Down> ?R ?X'",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.SUCCEED_rule", "SUCCEED <= SPEC ?\<Phi>",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.Id_refine", "?S <= \<Down> Id ?S",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Refine_Basic.FAIL_refine", "?X <= \<Down> ?R FAIL",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Refine_Transfer.plain_RETURN", "RETURN ?a <= RETURN ?a",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Transfer.nres_of_transfer", "nres_of ?x <= nres_of ?x",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.bind_mono1", "mono (%M. M >>= ?f)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Refine_Basic.pw_ASSUME", "inres (ASSUME ?\<Phi>) ?x = ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 1)),
    ("Refine_Transfer.Let_dRETURN_simp", "Let ?m dRETURN = dRETURN ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Transfer.nres_of_simps", "nres_of (dRETURN ?x) = RETURN ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Transfer.det_RETURN", "nres_of (dRETURN ?x) <= RETURN ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RefineG_Recursion.trimonoD_mono", "trimono ?B ==> mono ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("RefineG_Recursion.trimono_trigger", "trimono ?B ==> trimono ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Heuristics.RELATES_pattern", "RELATES ?R ==> RELATES ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.cont_is_mono", "cont ?f ==> mono ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.inf_distribD", "inf_distrib ?f ==> cont ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.inf_distribD", "inf_distrib ?f ==> strict ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.inf_distrib_is_mono", "inf_distrib ?f ==> mono ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Automatic_Refinement.SIDE_GEN_ALGO_D", "SIDE_GEN_ALGO ?P ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate (template_var 0))),
    ("Refine_Det.inf_dres_addsimps", "inf (dRETURN ?v) ?x ~= dFAILi",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0),
           template_hole 0)
         )),
    ("RefineG_Domain.flat_lub_simps", "flat_lub ?b {?x} = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("RefineG_Domain.fun_lub_simps", "fun_lub ?lub {} = (%x. ?lub {})",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       t_empty)),
    ("Refine.stream_Rangep_rel",
     "Rangep (stream_all2 ?R) = pred_stream (Rangep ?R)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine.build_rel_domain", "Domain (br ?\<alpha> ?I) = Collect ?I",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.not_nofail_iff", "(~ nofail ?S) = (?S = FAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Det.dres_order_simps", "(dFAIL <= ?x) = (?x = dFAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Det.dres_order_simps", "(?x <= dSUCCEED) = (?x = dSUCCEED)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Basic.nres_order_simps", "(?M <= SUCCEED) = (?M = SUCCEED)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Basic.nres_order_simps", "(FAIL <= ?M) = (?M = FAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Misc.ccpo_mono_simp", "monotone (<=) (<=) ?f = mono ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.intro_nofail", "(FAIL ~= ?S) = nofail ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.intro_nofail", "(?S ~= FAIL) = nofail ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.pw_conc_nofail", "nofail (\<Down> ?R ?S) = nofail ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.refine_pw_simps",
     "nofail (filter_ASSUME ?c ?m) = nofail ?m",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Refine_While.pw_filter_nb", "nofail (filter_nb ?b ?I) = nofail ?I",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Refine.list_rel_single_valued",
     "single_valued (\<langle>?R\<rangle>list_rel) = single_valued ?R",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine.stream_rel_single_valued",
     "single_valued (\<langle>?A\<rangle>stream_rel) = single_valued ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Det.dres_monad1", "dRETURN ?x >>= ?f = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Refine_Transfer.dres_unit_simps", "dRETURN ?u >>= ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("Refine_Basic.RES_Sup_RETURN", "Sup (RETURN ` ?X) = RES ?X",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.nres_monad1", "RETURN ?x >>= ?f = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Refine_Basic.SPEC_eq_is_RETURN", "SPEC ((=) ?x) = RETURN ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.RES_sng_eq_RETURN", "RES {?x} = RETURN ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Foreach.FOREACH_emp",
     "FOREACH {} ?f ?\<sigma> = RETURN ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("RefineG_Recursion.REC_le_RECT",
     "REC ?body ?x <= REC\<^sub>T ?body ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_While.msii_is_invar", "?m <= msii ?I ?m ?c ?f",
     template_inequation
      (less_equals, template_var 3,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 1),
         template_var 0))),
    ("Refine_Det.dr_mono_bind'", "mono (%F s. ?f s >>= F)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Refine_Basic.nr_mono_bind'", "mono (%F s. ?f s >>= F)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Refine_Heuristics.refine_hsimp",
     "([], []) : \<langle>?R\<rangle>list_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Refine_Basic.param_SUCCEED",
     "(SUCCEED, SUCCEED) : \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Refine_Basic.param_FAIL",
     "(FAIL, FAIL) : \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Refine_Misc.finite_psupset_wf",
     "finite ?S ==> wf (finite_psupset ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Refine_Basic.inres_simps", "inres (RES ?X) = (%x. x : ?X)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Refine_Basic.inres_simps", "inres (RETURN ?x) = (=) ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Refine.stream_rel_domain",
     "Domain (\<langle>?R\<rangle>stream_rel) = streams (Domain ?R)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine.stream_rel_range",
     "Range (\<langle>?R\<rangle>stream_rel) = streams (Range ?R)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine.set_rel_Id_on",
     "\<langle>Id_on ?S\<rangle>set_rel = Id_on (Pow ?S)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine.list_rel_simps",
     "\<langle>Id_on ?P\<rangle>list_rel = Id_on (lists ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine.stream_rel_simps",
     "\<langle>Id_on ?P\<rangle>stream_rel = Id_on (streams ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.nres_more_simps", "(SUCCEED = RES ?X) = (?X = {})",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = SUCCEED) = (?X = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(Sup ?X = FAIL) = (FAIL : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("Refine_Basic.nres_order_simps", "(FAIL = Sup ?X) = (FAIL : ?X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_hole 2), template_var 0))),
    ("Refine_Basic.nf_inres_RES", "nf_inres (RES ?X) ?x = (?x : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Refine_Basic.nf_inres_SPEC",
     "nf_inres (SPEC ?\<Phi>) ?x = ?\<Phi> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Refine_Foreach.dfoldli_simps", "dfoldli [] ?c ?f ?s = dRETURN ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.let_to_bind_conv", "Let ?x ?f = RETURN ?x >>= ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Refine_Basic.ife_FAIL_to_ASSERT_cnv",
     "(if ?\<Phi> then ?m else FAIL) = op_nres_ASSERT_bnd ?\<Phi> ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.bind_to_let_conv", "RETURN ?x >>= ?f = Let ?x ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Foreach.FOREACHc_emp",
     "FOREACH\<^sub>C {} ?c ?f ?\<sigma> = RETURN ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Foreach.nfoldli_simps", "nfoldli [] ?c ?f ?s = RETURN ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.nres_order_simps", "Sup (RES ` ?A) = RES (\<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.nres_order_simps", "Sup (RES ` ?A) = RES (\<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_While.rwof_leof_init", "?m \<le>\<^sub>n SPEC (rwof ?m ?c ?f)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0))))
         )),
    ("Refine_Basic.FAIL_rule", "False ==> FAIL <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_hole 4)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Misc.mono_funpow", "mono ?f ==> mono (?f ^^ ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Refine_Misc.ccpo_monoI", "mono ?f ==> monotone (<=) (<=) ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Automatic_Refinement.PREFER_I", "?P ?x ==> PREFER ?P ?x",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_var 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Refine_Heuristics.set_rel_RELATES",
     "RELATES ?R ==> RELATES (\<langle>?R\<rangle>set_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Heuristics.list_rel_RELATES",
     "RELATES ?R ==> RELATES (\<langle>?R\<rangle>list_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Heuristics.RELATES_nres_rel",
     "RELATES ?R ==> RELATES (\<langle>?R\<rangle>nres_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Heuristics.option_rel_RELATES",
     "RELATES ?Ra ==> RELATES (\<langle>?Ra\<rangle>option_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Misc.strictD_simp", "strict ?f ==> ?f bot = bot",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_var 0, template_hole 0), template_hole 0))),
    ("Refine_Misc.strictD", "strict ?f ==> ?f bot = bot",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_var 0, template_hole 1), template_hole 0))),
    ("Refine_Heuristics.refine_hsimp",
     "single_valued ?R ==> single_valued (\<langle>?R\<rangle>set_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Heuristics.refine_hsimp",
     "single_valued ?R ==> single_valued (\<langle>?R\<rangle>option_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Basic.not_nofail_inres", "~ nofail ?S ==> inres ?S ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("RefineG_Domain.meta_le_everything_if_top", "?m = top ==> ?x <= ?m",
     template_implication
      ([template_equation (template_var 1, template_hole 1)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Leof.leof_lift", "?m <= ?F ==> ?m \<le>\<^sub>n ?F",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Automatic_Refinement.PREFER_D", "PREFER ?P ?x ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_var 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Automatic_Refinement.PREFER_sv_D",
     "PREFER single_valued ?x ==> single_valued ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Refine_Misc.ccpo_monoD", "monotone (<=) (<=) ?f ==> mono ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.strictI", "?f bot = bot ==> strict ?f",
     template_implication
      ([template_equation
         (template_app (template_var 0, template_hole 2), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.le_RES_nofailI", "?a <= RES ?x ==> nofail ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("RefineG_Domain.flat_lub_simps",
     "flat_lub ?b (insert ?b ?X) = flat_lub ?b ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Refine.build_rel_range",
     "Range (br ?\<alpha> ?I) = ?\<alpha> ` Collect ?I",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Refine.set_rel_converse",
     "(\<langle>?A\<rangle>set_rel)^-1 = \<langle>?A^-1\<rangle>set_rel",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Refine.list_rel_simps",
     "(\<langle>?R\<rangle>list_rel)^-1 = \<langle>?R^-1\<rangle>list_rel",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Refine.inv_option_rel_eq",
     "(\<langle>?K\<rangle>option_rel)^-1 =
      \<langle>?K^-1\<rangle>option_rel",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Refine.stream_rel_simps",
     "\<langle>?R^-1\<rangle>stream_rel =
      (\<langle>?R\<rangle>stream_rel)^-1",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Refine_Basic.nofail_RES_conv", "nofail ?m = (EX M. ?m = RES M)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Refine_Basic.nofail_SPEC_iff", "nofail ?m = (?m <= SPEC (%_. True))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.pw_Inf_nofail", "nofail (Inf ?C) = (EX x:?C. nofail x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_Sup_nofail", "nofail (Sup ?X) = (ALL x:?X. nofail x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.conc_fun_fail_iff",
     "(FAIL = \<Down> ?R ?S) = (?S = FAIL)",
     template_bimplication
      (template_equation
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_more_simps", "(RETURN ?x = RETURN ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = RES ?Y) = (?X = ?Y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.conc_fun_fail_iff",
     "(\<Down> ?R ?S = FAIL) = (?S = FAIL)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Transfer.nres_transfer",
     "(nres_of ?a < nres_of ?b) = (?a < ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Transfer.nres_transfer",
     "(nres_of ?a <= nres_of ?b) = (?a <= ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.nres_order_simps", "(RES ?X <= RES ?Y) = (?X <= ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.nres_order_simps",
     "(RETURN ?x <= RETURN ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.nres_order_simps", "(RETURN ?x <= RES ?Y) = (?x : ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Leof.RETURN_leof_RES_iff",
     "(RETURN ?x \<le>\<^sub>n RES ?Y) = (?x : ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Leof.RES_leof_RES_iff",
     "(RES ?X \<le>\<^sub>n RES ?Y) = (?X <= ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.RETURN_SPEC_conv", "RETURN ?r = SPEC (%x. x = ?r)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.bind_RES", "RES ?X >>= ?f = Sup (?f ` ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.SPEC_eq_is_RETURN", "SPEC (%x. x = ?y) = RETURN ?y",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.the_RES_inv", "nofail ?m ==> RES (the_RES ?m) = ?m",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Refine_Basic.ac_galois",
     "single_valued ?R ==> galois_connection (\<Up> ?R) (\<Down> ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Refine_Misc.bot_Inf", "bot : ?A ==> Inf ?A = bot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Refine_Misc.top_Sup", "top : ?A ==> Sup ?A = top",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Refine_Basic.nres_order_simps", "FAIL : ?X ==> Sup ?X = FAIL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Automatic_Refinement.PREFER_id_D", "PREFER_id ?R ==> ?R = Id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("RefineG_Domain.flat_ord_compat", "flat_le ?x ?y ==> ?x <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("RefineG_Domain.flat_ord_compat", "flat_ge ?x ?y ==> ?y <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Basic.SPEC_nofail", "?X <= SPEC ?\<Phi> ==> nofail ?X",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Refine_Basic.refine", "[| ?P; ?Q |] ==> ?P & ?Q",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate (template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Automatic_Refinement.MINOR_PRIO_TAG_I",
     "[| ?P; MINOR_PRIO_TAG ?p |] ==> ?P",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate (template_var 1))),
    ("Automatic_Refinement.PRIO_TAG_I", "[| ?P; PRIO_TAG ?ma ?mi |] ==> ?P",
     template_implication
      ([template_predicate (template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate (template_var 2))),
    ("Automatic_Refinement.MAJOR_PRIO_TAG_I",
     "[| ?P; MAJOR_PRIO_TAG ?p |] ==> ?P",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate (template_var 1))),
    ("Refine.relcomp_Id_on", "Id_on ?A O Id_on ?B = Id_on (?A Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_inf_nofail",
     "nofail (inf ?a ?b) = (nofail ?a | nofail ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Refine_Basic.pw_sup_nofail",
     "nofail (sup ?a ?b) = (nofail ?a & nofail ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Refine_Basic.conc_fun_RES", "\<Down> ?R (RES ?X) = RES (?R^-1 `` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Refine_Basic.push_in_let_conv",
     "Let ?x (RETURN o ?f) = RETURN (Let ?x ?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.bind_ASSERT_eq_if",
     "ASSERT ?\<Phi> >>= (%_. ?m) = (if ?\<Phi> then ?m else FAIL)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Refine_While.WHILE_le_WHILEI",
     "WHILE ?b ?f ?s <= WHILE\<^bsup>?I\<^esup> ?b ?f ?s",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2),
         template_var 1))),
    ("Refine_Misc.mono_infArg", "mono ?f ==> mono (%x. ?f (inf x ?X))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RefineG_Recursion.REC_unfold", "trimono ?B ==> REC ?B = ?B (REC ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_var 0,
           template_app (template_hole 0, template_var 0))))),
    ("RefineG_Recursion.RECT_unfold",
     "trimono ?B ==> REC\<^sub>T ?B = ?B (REC\<^sub>T ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_var 0,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.nofail_SPEC", "nofail ?m ==> ?m <= SPEC (%_. True)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Leof.leof_RETURN_rule",
     "?\<Phi> ?m ==> RETURN ?m \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Refine_Basic.RETURN_rule", "?\<Phi> ?x ==> RETURN ?x <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Basic.refine_IdI", "?m <= ?m' ==> ?m <= \<Down> Id ?m'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Refine_Heuristics.refine_hsimp",
     "single_valued (?R^-1) ==>
      single_valued ((\<langle>?R\<rangle>set_rel)^-1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Refine_Basic.refine_IdD", "?c <= \<Down> Id ?a ==> ?c <= ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("RefineG_Domain.flatf_ord_compat", "flatf_le ?x ?y ==> ?x <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_hole 1)),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("RefineG_Domain.flatf_ord_compat", "flatf_ge ?x ?y ==> ?y <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_hole 1)),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("RefineG_While.mono_prover_monoI",
     "monotone (fun_ord (<=)) (fun_ord (<=)) ?B ==> mono ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3)),
                template_app (template_hole 2, template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_While.pw_rwof_init",
     "nofail (?m0.0 >>= WHILE ?cond ?step) ==> nofail ?m0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 2, template_var 2)))),
    ("Refine_Misc.inf_distribI",
     "[| strict ?f; cont ?f |] ==> inf_distrib ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.map_to_set_simps",
     "map_to_set ?m Int dom ?m \<times> UNIV = map_to_set ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           t_empty)),
       template_app (template_hole 3, template_var 0))),
    ("Refine.br_list_rel",
     "\<langle>br ?f ?P\<rangle>list_rel = br (map ?f) (list_all ?P)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.pw_Inf_inres",
     "inres (Inf ?C) ?r = (ALL M:?C. inres M ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_Sup_inres",
     "inres (Sup ?X) ?r = (EX M:?X. inres M ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.nres_more_simps", "(RETURN ?x = RES ?X) = ({?x} = ?X)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = RETURN ?x) = (?X = {?x})",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Refine_Basic.nres_order_simps",
     "(RES ?X <= RETURN ?y) = (?X <= {?y})",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Refine_Leof.ASSUME_leof_iff",
     "(ASSUME ?\<Phi> \<le>\<^sub>n SPEC ?\<Psi>) =
      (?\<Phi> --> ?\<Psi> ())",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_var 0, template_hole 0)))),
    ("Refine_Misc.dual_chain_iff", "is_dual_chain ?C = is_chain ?C",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Refine_Heuristics.refine_hsimp",
     "(([], ?l') : \<langle>?R\<rangle>list_rel) = (?l' = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Refine_Heuristics.refine_hsimp",
     "((?l, []) : \<langle>?R\<rangle>list_rel) = (?l = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Refine.bi_unique_pred_set_conv",
     "bi_unique (%x y. (x, y) : ?R) = bijective ?R",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.pull_out_let_conv",
     "RETURN (Let ?x ?f) = (let x = ?x in RETURN (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.conc_fun_chain",
     "\<Down> ?R (\<Down> ?S ?M) = \<Down> (?R O ?S) ?M",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Refine_While.bounded_WHILE'_eq",
     "bounded_WHILE' ?n ?cond ?step ?m = bounded_WHILE ?n ?cond ?step ?m",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Refine_Basic.push_in_let_conv",
     "(let x = ?x in RETURN (?f x)) = RETURN (Let ?x ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Foreach.FOREACHc_refines_FOREACHcd_aux",
     "FOREACH\<^sub>C ?s ?c ?f ?\<sigma> <= FOREACHcd ?s ?c ?f ?\<sigma>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Refine_Basic.param_RETURN",
     "(RETURN, RETURN) : ?R \<rightarrow> \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine.null_param",
     "(List.null, List.null)
      : \<langle>?A\<rangle>list_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0))),
             template_hole 0))
         )),
    ("Refine.stream_rel_param",
     "(shd, shd) : \<langle>?R\<rangle>stream_rel \<rightarrow> ?R",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))),
             template_var 0))
         )),
    ("Refine_Misc.ccpo_lfp_simp",
     "mono ?f ==> ccpo.fixp Sup (<=) ?f = lfp ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.lfp_le_gfp'", "mono ?f ==> lfp ?f ?x <= gfp ?f ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Transfer.det_SPEC",
     "?\<Phi> ?x ==> nres_of (dRETURN ?x) <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Leof.leof_True_rule",
     "(!!x. ?\<Phi> x) ==> ?m \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Refine_Basic.pwD1", "[| ?S <= ?S'; nofail ?S' |] ==> nofail ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("RefineG_Domain.fun_lub_simps",
     "fun_lub ?lub {?f} = (%x. ?lub {?f x})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       t_empty)),
    ("Refine.build_rel_image",
     "br ?\<alpha> ?I `` ?A = ?\<alpha> ` (?A Int Collect ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Transfer.plain_nres_rel_as_br_conv",
     "\<langle>?R\<rangle>plain_nres_rel =
      br RETURN (%_. True) O \<langle>?R\<rangle>nres_rel",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3), t_empty)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Refine_Misc.map_to_set_simps",
     "map_to_set (?m |` ?K) = map_to_set ?m Int ?K \<times> UNIV",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), t_empty)))),
    ("Refine_Transfer.dres_nres_rel_as_br_conv",
     "\<langle>?R\<rangle>dres_nres_rel =
      br nres_of (%_. True) O \<langle>?R\<rangle>nres_rel",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3), t_empty)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("RefineG_Recursion.trimono_alt",
     "trimono ?B = (ALL ord:fun_ord ` triords. monotone ord ord ?B)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         t_empty))),
    ("Refine_Basic.pw_INF_nofail",
     "nofail (Inf (?f ` ?C)) = (EX x:?C. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_SUP_nofail",
     "nofail (Sup (?f ` ?X)) = (ALL x:?X. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_RES_bind_choose",
     "nofail (RES ?X >>= ?f) = (ALL x:?X. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.nres_order_simps",
     "(Sup (?f ` ?X) = FAIL) = (FAIL : ?f ` ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_order_simps",
     "(FAIL = Sup (?f ` ?X)) = (FAIL : ?f ` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_hole 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Misc.greater_bounded_Suc_iff",
     "((Suc ?x, ?x) : greater_bounded ?N) = (Suc ?x <= ?N)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Refine_Basic.bind_distrib_Sup1",
     "Sup ?M >>= ?f = (SUP m\<in>?M. m >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Refine_Foreach.LIST_FOREACH'_refine",
     "LIST_FOREACH' ?tsl' ?c' ?f' ?\<sigma>'
      <= LIST_FOREACH ?\<Phi> ?tsl' ?c' ?f' ?\<sigma>'",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 3),
           template_var 2),
         template_var 1))),
    ("Refine_Misc.mono_Inf", "mono ?f ==> ?f (Inf ?S) <= Inf (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_var 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Refine_Misc.mono_Sup", "mono ?f ==> Sup (?f ` ?S) <= ?f (Sup ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("RefineG_Recursion.trimonoD_flatf_ge",
     "trimono ?B ==> monotone flatf_ge flatf_ge ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 0)
           ))),
    ("Refine_Misc.inf_distribD'",
     "inf_distrib ?f ==> ?f (Sup ?C) = Sup (?f ` ?C)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Refine_Misc.dual_chainI", "is_chain ?C ==> is_dual_chain ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("Refine_Misc.point_chainI",
     "is_chain ?M ==> is_chain ((%f. f ?x) ` ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))
           ))),
    ("Refine_Basic.nofail_antimono_fun",
     "?f <= ?g ==> nofail (?g ?x) --> nofail (?f ?x)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)))
           ))),
    ("Refine_Basic.conc_fun_R_mono",
     "?R <= ?R' ==> \<Down> ?R ?M <= \<Down> ?R' ?M",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_While.filter_nb_mono",
     "?m <= ?m' ==> filter_nb ?cond ?m <= filter_nb ?cond ?m'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.intro_prgR",
     "?c <= \<Down> ?R ?a ==> ?c <= \<Down> ?R ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.introR", "(?a, ?a') : ?R ==> (?a, ?a') : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Automatic_Refinement.PREFER_RUNIV_D",
     "PREFER_tag (Range (REMOVE_INTERNAL ?x) = UNIV) ==> Range ?x = UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("Refine_Basic.le_SPEC_UNIV_rule",
     "?m <= SPEC (%_. True) ==> ?m <= RES UNIV",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 3, template_app (template_hole 2, t_empty)))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 3, template_hole 0)))),
    ("Refine_Basic.RETURN_to_SPEC_rule",
     "?m <= SPEC ((=) ?v) ==> ?m <= RETURN ?v",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Transfer.nres_correctD",
     "nres_of ?S <= SPEC ?\<Phi> ==> ?S ~= dFAIL",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Refine_Misc.chain_dualI", "is_dual_chain ?C ==> is_chain ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Refine_Mono_Prover.refine_mono", "(!!x. ?f x <= ?g x) ==> ?f <= ?g",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Refine_Basic.le_nofailI", "(nofail ?M' ==> ?M <= ?M') ==> ?M <= ?M'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 1))],
          template_inequation
           (less_equals, template_var 0, template_var 1))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Leof.leofI",
     "(nofail ?m ==> ?m <= ?m') ==> ?m \<le>\<^sub>n ?m'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 2, template_var 1))],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine_Leof.leof_add_nofailI",
     "(nofail ?m ==> ?m \<le>\<^sub>n ?m') ==> ?m \<le>\<^sub>n ?m'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 1))],
          template_predicate
           (
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine_Misc.mono_infI", "[| mono ?f; mono ?g |] ==> mono (inf ?f ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Refine_Leof.leofD",
     "[| nofail ?m; ?m \<le>\<^sub>n ?m' |] ==> ?m <= ?m'",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Refine_Heuristics.refine_hsimp",
     "?R `` (?A Un ?B) = ?R `` ?A Un ?R `` ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Refine.prod_rel_domain",
     "Domain (?A \<times>\<^sub>r ?B) = Domain ?A \<times> Domain ?B",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Refine.prod_rel_range",
     "Range (?A \<times>\<^sub>r ?B) = Range ?A \<times> Range ?B",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Refine_Misc.map_to_set_simps", "map_to_set [?a |-> ?b] = {(?a, ?b)}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Refine.br_set_rel",
     "\<langle>br ?f ?P\<rangle>set_rel = br ((`) ?f) (%A. Ball A ?P)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("Refine.list_rel_simps",
     "\<langle>?R O ?S\<rangle>list_rel =
      \<langle>?R\<rangle>list_rel O \<langle>?S\<rangle>list_rel",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Refine.stream_rel_simps",
     "\<langle>?R O ?S\<rangle>stream_rel =
      \<langle>?R\<rangle>stream_rel O \<langle>?S\<rangle>stream_rel",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Refine.prod_rel_Id_on",
     "Id_on ?A \<times>\<^sub>r Id_on ?B = Id_on (?A \<times> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 1))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Refine_Basic.nres_rel_comp",
     "\<langle>?A\<rangle>nres_rel O \<langle>?B\<rangle>nres_rel =
      \<langle>?A O ?B\<rangle>nres_rel",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_inf_inres",
     "inres (inf ?a ?b) ?x = (inres ?a ?x & inres ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_sup_inres",
     "inres (sup ?a ?b) ?x = (inres ?a ?x | inres ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Misc.less_than_bool_iff",
     "((?x, ?y) : less_than_bool) = (?x = False & ?y = True)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 0))
           ))),
    ("Refine_Basic.RETURN_refine_iff",
     "(RETURN ?x <= \<Down> ?R (RETURN ?y)) = ((?x, ?y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Refine_Basic.in_nres_rel_iff",
     "((?a, ?b) : \<langle>?R\<rangle>nres_rel) = (?a <= \<Down> ?R ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.rel2p_nres_RETURN",
     "rel2p (\<langle>?A\<rangle>nres_rel) (RETURN ?x) (RETURN ?y) =
      rel2p ?A ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Refine_Det.dres_monad3",
     "?M >>= ?f >>= ?g = ?M >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.conc_fun_RETURN",
     "\<Down> ?R (RETURN ?x) = SPEC (%y. (y, ?x) : ?R)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.inf_RETURN_RES",
     "inf (RETURN ?x) (RES ?X) = (if ?x : ?X then RETURN ?x else SUCCEED)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 4, template_var 1)),
         template_hole 0))),
    ("Refine_Basic.inf_RETURN_RES",
     "inf (RES ?X) (RETURN ?x) = (if ?x : ?X then RETURN ?x else SUCCEED)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Refine_Basic.bind_distrib_sup1",
     "sup ?M ?N >>= ?f = sup (?M >>= ?f) (?N >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_monad3",
     "?M >>= ?f >>= ?g = ?M >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_While.WHILE_bounded_aux1",
     "filter_nb ?cond (bounded_WHILE ?n ?cond ?step ?m)
      <= ?m >>= WHILE ?cond ?step",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("Refine_Basic.param_RES",
     "(RES, RES)
      : \<langle>?R\<rangle>set_rel \<rightarrow>
        \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine.set_id_param",
     "(set, id)
      : \<langle>?A\<rangle>list_set_rel \<rightarrow>
        \<langle>?A\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine.list_rel_param",
     "(set, set)
      : \<langle>?R\<rangle>list_rel \<rightarrow>
        \<langle>?R\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine.stream_rel_param",
     "(sset, sset)
      : \<langle>?R\<rangle>stream_rel \<rightarrow>
        \<langle>?R\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine.stream_rel_param",
     "(stl, stl)
      : \<langle>?R\<rangle>stream_rel \<rightarrow>
        \<langle>?R\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine_Transfer.nres_transfer",
     "is_chain ?A ==> nres_of (Inf ?A) = Inf (nres_of ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0))))),
    ("Refine_Transfer.nres_transfer",
     "is_chain ?A ==> nres_of (Sup ?A) = Sup (nres_of ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0))))),
    ("Refine_Foreach.nfoldli_no_ctd",
     "~ ?ctd ?s ==> nfoldli ?l ?ctd ?f ?s = RETURN ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("Refine_Det.dres_order_simps",
     "?x = ?y ==> inf (dRETURN ?x) (dRETURN ?y) = dRETURN ?y",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Det.dres_order_simps",
     "?x = ?y ==> sup (dRETURN ?x) (dRETURN ?y) = dRETURN ?y",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.unused_bind_RES_ne",
     "?X ~= {} ==> RES ?X >>= (%_. ?m) = ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           t_empty),
         template_var 0))),
    ("Refine_Det.dres_order_simps",
     "?x ~= ?y ==> inf (dRETURN ?x) (dRETURN ?y) = dSUCCEED",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Refine_Det.dres_order_simps",
     "?x ~= ?y ==> sup (dRETURN ?x) (dRETURN ?y) = dFAIL",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Refine_Basic.RECT_eq_REC'",
     "nofail (REC\<^sub>T ?B ?x) ==> REC\<^sub>T ?B ?x = REC ?B ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.ASSUME_refine",
     "(?\<Phi> ==> ?\<Phi>') ==>
      ASSUME ?\<Phi> <= \<Down> unit_rel (ASSUME ?\<Phi>')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.ASSERT_refine",
     "(?\<Phi>' ==> ?\<Phi>) ==>
      ASSERT ?\<Phi> <= \<Down> unit_rel (ASSERT ?\<Phi>')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 1))))),
    ("Refine_Basic.abs_fun_simps",
     "~ ?X <= Domain ?R ==> \<Up> ?R (RES ?X) = FAIL",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_equals, template_var 1,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Refine_Misc.map_to_set_simps",
     "?m ?k = Some ?v ==> (?k, ?v) : map_to_set ?m",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Refine_Basic.nres_order_simps",
     "FAIL : ?f ` ?X ==> Sup (?f ` ?X) = FAIL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 3))),
    ("Refine_Basic.ASSUME_rule",
     "(?\<Phi> ==> ?\<Psi> ()) ==> ASSUME ?\<Phi> <= SPEC ?\<Psi>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate
           (template_app (template_var 0, template_hole 4)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Leof.ASSUME_leof_rule",
     "(?\<Phi> ==> ?\<Psi> ()) ==>
      ASSUME ?\<Phi> \<le>\<^sub>n SPEC ?\<Psi>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate
           (template_app (template_var 0, template_hole 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Refine_Basic.pwD2", "[| ?S <= ?S'; inres ?S ?x |] ==> inres ?S' ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine.eq_onp_Id_on_eq",
     "eq_onp (%a. a : ?A) = (%x y. (x, y) : Id_on ?A)",
     template_equation (template_app (template_hole 4, t_empty), t_empty)),
    ("Refine.inv_fun_rel_eq",
     "(?A \<rightarrow> ?B)^-1 = ?A^-1 \<rightarrow> ?B^-1",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Refine.inv_sum_rel_eq",
     "(\<langle>?P, ?Q\<rangle>sum_rel)^-1 = \<langle>?P^-1,
      ?Q^-1\<rangle>sum_rel",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Refine.inv_prod_rel_eq",
     "(?P \<times>\<^sub>r ?Q)^-1 = ?P^-1 \<times>\<^sub>r ?Q^-1",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.pw_INF_inres",
     "inres (Inf (?f ` ?C)) ?r = (ALL M:?C. inres (?f M) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_SUP_inres",
     "inres (Sup (?f ` ?X)) ?r = (EX M:?X. inres (?f M) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_RES_bind_choose",
     "inres (RES ?X >>= ?f) ?y = (EX x:?X. inres (?f x) ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine.member_Id_on", "((?x, ?y) : Id_on ?A) = (?x = ?y & ?y : ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Refine_Foreach.FOREACHi_emp",
     "FOREACH\<^bsup>?\<Phi>\<^esup> {} ?f ?\<sigma> =
      ASSERT (?\<Phi> {} ?\<sigma>) >>= (%_. RETURN ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_hole 3),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_var 2, template_hole 3),
               template_var 0))),
         t_empty))),
    ("Refine_Basic.pull_out_RETURN_case_option",
     "(case ?x of None => RETURN ?a | Some v => RETURN (?f v)) =
      RETURN (case ?x of None => ?a | Some x => ?f x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Foreach.LIST_FOREACH'_eq",
     "LIST_FOREACH (%_ _. True) ?tsl' ?c' ?f' ?\<sigma>' =
      LIST_FOREACH' ?tsl' ?c' ?f' ?\<sigma>'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("RefineG_Domain.ccpo_lift",
     "class.ccpo ?lub ?le ?lt ==>
      class.ccpo (fun_lub ?lub) (fun_ord ?le) (mk_less (fun_ord ?le))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Refine_Basic.nres_order_simps",
     "?A ~= {} ==> Inf (RES ` ?A) = RES (\<Inter> ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.nres_order_simps",
     "?A ~= {} ==> Inf (RES ` ?A) = RES (\<Inter> ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Misc.let_mono",
     "?f ?x <= ?f' ?x' ==> Let ?x ?f <= Let ?x' ?f'",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.Id_SPEC_refine",
     "?S <= SPEC ?\<Phi> ==> ?S <= \<Down> Id (SPEC ?\<Phi>)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)))))),
    ("Refine_Basic.nres_relI",
     "?c <= \<Down> ?R ?a ==> (?c, ?a) : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("Refine_Basic.RETURN_refine",
     "(?x, ?x') : ?R ==> RETURN ?x <= \<Down> ?R (RETURN ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Basic.RETURN_ref_RETURND",
     "RETURN ?c <= \<Down> ?R (RETURN ?a) ==> (?c, ?a) : ?R",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Refine_Basic.nres_relD",
     "(?c, ?a) : \<langle>?R\<rangle>nres_rel ==> ?c <= \<Down> ?R ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Misc.inf_distribI'",
     "(!!C. ?f (Sup C) = Sup (?f ` C)) ==> inf_distrib ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Heuristics.prod_rel_RELATES",
     "[| RELATES ?Ra; RELATES ?Rb |]
      ==> RELATES (?Ra \<times>\<^sub>r ?Rb)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0))
           ))),
    ("Refine_Heuristics.refine_hsimp",
     "[| single_valued ?R1.0; single_valued ?R2.0 |]
      ==> single_valued (?R1.0 \<times>\<^sub>r ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0))
           ))),
    ("Refine_Basic.inres_SPEC",
     "[| inres ?M ?x; ?M <= SPEC ?\<Phi> |] ==> ?\<Phi> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 1,
            template_app (template_hole 0, template_var 0)))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Refine_Pfun.nrec_admissible",
     "nrec.admissible (%f. ALL x0. f x0 <= SPEC (?P x0))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)),
             template_app (template_hole 4, template_hole 3)),
           t_empty)
         )),
    ("Refine_Misc.map_to_set_simps",
     "map_to_set (?m(?x := None)) = map_to_set ?m - {?x} \<times> UNIV",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           t_empty)))),
    ("Refine.br_fun_rel1",
     "Id \<rightarrow> br ?f ?P =
      br ((o) ?f) ((All \<circ>\<circ> (o)) ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.refine_pw_simps",
     "inres (filter_ASSUME ?c ?m) ?x = (nofail ?m --> inres ?m ?x & ?c ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app (template_var 2, template_var 0))))),
    ("Refine_Misc.dual_ccpo_mono_simp",
     "monotone (%x y. y <= x) (%x y. y <= x) ?f = mono ?f",
     template_equation
      (template_app
        (template_app (template_app (template_hole 3, t_empty), t_empty),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Foreach.foldli_dres_pres_SUCCEED",
     "foldli ?l (case_dres False False ?c) (%x s. s >>= ?f x) dSUCCEED =
      dSUCCEED",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_var 1)),
           t_empty),
         template_hole 0),
       template_hole 0)),
    ("Refine_Foreach.foldli_dres_pres_FAIL",
     "foldli ?l (case_dres False False ?c) (%x s. s >>= ?f x) dFAIL =
      dFAIL",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_var 1)),
           t_empty),
         template_hole 0),
       template_hole 0)),
    ("Refine_While.filter_nb_RES",
     "filter_nb ?cond (RES ?X) = SPEC (%x. x : ?X & ~ ?cond x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_While.WHILE_eq_I_rwof",
     "?m >>= WHILE ?c ?f = ?m >>= WHILE\<^bsup>rwof ?m ?c ?f\<^esup> ?c ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0)))),
    ("Refine_While.WHILET_eq_I_rwof",
     "?m >>= WHILE\<^sub>T ?c ?f =
      ?m >>= WHILE\<^sub>T\<^bsup>rwof ?m ?c ?f\<^esup> ?c ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0)))),
    ("Refine_Foreach.FOREACHci_emp",
     "FOREACH\<^sub>C\<^bsup>?\<Phi>\<^esup> {} ?c ?f ?\<sigma> =
      ASSERT (?\<Phi> {} ?\<sigma>) >>= (%_. RETURN ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_hole 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_var 3, template_hole 3),
               template_var 0))),
         t_empty))),
    ("Refine_Foreach.FOREACHoi_emp",
     "FOREACH\<^sub>O\<^bsup>?R,?\<Phi>\<^esup> {} ?f ?\<sigma> =
      ASSERT (?\<Phi> {} ?\<sigma>) >>= (%_. RETURN ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_hole 3),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_var 2, template_hole 3),
               template_var 0))),
         t_empty))),
    ("Refine_Foreach.nfoldli_map",
     "nfoldli (map ?f ?l) ?ctd ?g ?s = nfoldli ?l ?ctd (?g o ?f) ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 4)),
         template_var 0))),
    ("Refine.streams_param",
     "(streams, streams)
      : \<langle>?A\<rangle>set_rel \<rightarrow>
        \<langle>\<langle>?A\<rangle>stream_rel\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_hole 9)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine.basic_param",
     "(\<Union>, \<Union>)
      : \<langle>\<langle>?A\<rangle>set_rel\<rangle>set_rel \<rightarrow>
        \<langle>?A\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine.is_singleton_param",
     "bijective ?A ==>
      (is_singleton, is_singleton)
      : \<langle>?A\<rangle>set_rel \<rightarrow> bool_rel",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_hole 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0))),
               template_hole 0))
           ))),
    ("Refine_Misc.ccpo_gfp_simp",
     "mono ?f ==> ccpo.fixp Inf (%x y. y <= x) ?f = gfp ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2), t_empty),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Misc.kleene_lfp",
     "cont ?f ==> lfp ?f = (SUP i. (?f ^^ i) bot)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0))))),
    ("Refine_Basic.conc_abs_swap",
     "single_valued ?R ==> (?m' <= \<Down> ?R ?m) = (\<Up> ?R ?m' <= ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Refine_Basic.abs_fun_simps",
     "?X <= Domain ?R ==> \<Up> ?R (RES ?X) = RES (?R `` ?X)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("RefineG_Recursion.RECT_eq_REC",
     "REC\<^sub>T ?body ?x ~= top ==> REC\<^sub>T ?body ?x = REC ?body ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.remove_Let_refine",
     "?M <= \<Down> ?R (?f ?x) ==> ?M <= \<Down> ?R (Let ?x ?f)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app (template_var 1, template_var 0)))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Refine_Transfer.plain_nres_relI",
     "RETURN ?c <= \<Down> ?R ?a ==>
      (?c, ?a) : \<langle>?R\<rangle>plain_nres_rel",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("Refine_Transfer.dres_nres_relI",
     "nres_of ?c <= \<Down> ?R ?a ==>
      (?c, ?a) : \<langle>?R\<rangle>dres_nres_rel",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("Refine_Basic.intro_Let_refine",
     "?f ?x <= \<Down> ?R ?M' ==> Let ?x ?f <= \<Down> ?R ?M'",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.Let_rule",
     "?f ?x <= SPEC ?\<Phi> ==> Let ?x ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 2, template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Leof.leof_Let_rule",
     "?f ?x \<le>\<^sub>n SPEC ?\<Phi> ==>
      Let ?x ?f \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_var 2, template_var 1)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Refine_Basic.refine_vcg",
     "(?\<Phi> ==> ?M <= ?M') ==> ?M <= ASSERT ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Basic.refine_vcg",
     "(?\<Phi> ==> ?M <= ?M') ==> ASSUME ?\<Phi> >>= (%_. ?M) <= ?M'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty),
         template_var 0))),
    ("Refine_Leof.leof_ASSERT_rule",
     "(?\<Phi> ==> ?m \<le>\<^sub>n ?m') ==>
      ?m \<le>\<^sub>n ASSERT ?\<Phi> >>= (%_. ?m')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               t_empty))
           ))),
    ("Refine_Leof.ASSERT_leof_rule",
     "(?\<Phi> ==> ?m \<le>\<^sub>n ?m') ==>
      ASSERT ?\<Phi> >>= (%_. ?m) \<le>\<^sub>n ?m'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 t_empty)),
             template_var 0)
           ))),
    ("Refine_While.nofail_WHILEIT_wf_rel",
     "nofail (?init >>= WHILE\<^sub>T\<^bsup>?I\<^esup> ?cond ?step) ==>
      wf ((rwof_rel ?init ?cond ?step)^-1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Refine_Transfer.plain_nres_relD",
     "(?c, ?a) : \<langle>?R\<rangle>plain_nres_rel ==>
      RETURN ?c <= \<Down> ?R ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Transfer.dres_nres_relD",
     "(?c, ?a) : \<langle>?R\<rangle>dres_nres_rel ==>
      nres_of ?c <= \<Down> ?R ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Det.dres_ne_bot_basic",
     "(!!x. ?f x ~= dSUCCEED) ==> Let ?x ?f ~= dSUCCEED",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_hole 1)
           ))),
    ("Refine_Misc.mono_infI'",
     "[| mono ?f; mono ?g |] ==> mono (%x. inf (?f x) (?g x))",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.nofail_SPEC_triv_refine",
     "[| nofail ?m; !!x. ?\<Phi> x |] ==> ?m <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= ?B; ?B <= \<Down> Id ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| ?A <= ?B; \<Up> Id ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Leof.leof_trans",
     "[| ?a \<le>\<^sub>n RES ?X; RES ?X \<le>\<^sub>n ?c |]
      ==> ?a \<le>\<^sub>n ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_hole 0, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> Id ?B; ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> Id ?A <= ?B; ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 2),
          template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.lift_assnI",
     "[| (?s, ?s') : ?R; ?\<Phi> ?s' |] ==> lift_assn ?R ?\<Phi> ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Refine_Leof.pw_leof_iff",
     "(?m \<le>\<^sub>n ?m') =
      (nofail ?m --> (ALL x. inres ?m x --> inres ?m' x))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, t_empty)))),
    ("Refine_While.pw_filter_nb",
     "inres (filter_nb ?b ?I) ?x = (nofail ?I --> inres ?I ?x & ~ ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app (template_var 2, template_var 0)))))),
    ("Refine_Leof.leof_fun_conv_le",
     "(?f ?x \<le>\<^sub>n ?M ?x) =
      (?f ?x <= (if nofail (?f ?x) then ?M ?x else FAIL))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_var 2, template_var 1)),
         template_app (template_var 0, template_var 1)),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 2, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_var 2, template_var 1))),
             template_app (template_var 0, template_var 1)),
           template_hole 0)))),
    ("Refine_Basic.RETURN_RES_refine_iff",
     "(RETURN ?x <= \<Down> ?R (RES ?Y)) = (EX y:?Y. (?x, y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("Refine_While.tailrec_transform'",
     "?m >>= REC (tailrec_body ?a ?b) = lfp (%x. sup ?m (x >>= ?a)) >>= ?b",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 2, t_empty)),
         template_var 0))),
    ("Refine_Foreach.FOREACHoci_emp",
     "FOREACH\<^sub>O\<^sub>C\<^bsup>?R,?\<Phi>\<^esup> {} ?c ?f ?\<sigma> =
      ASSERT (?\<Phi> {} ?\<sigma>) >>= (%_. RETURN ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_hole 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_var 3, template_hole 3),
               template_var 0))),
         t_empty))),
    ("Refine_Basic.bind_distrib_sup2",
     "?m >>= (%x. sup (?f x) (?g x)) = sup (?m >>= ?f) (?m >>= ?g)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Refine_Misc.dual_ccpo_monoI",
     "mono ?f ==> monotone (%x y. y <= x) (%x y. y <= x) ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), t_empty),
             template_var 0)
           ))),
    ("Refine_While.pw_rwof_in_bounded_WHILE",
     "rwof ?m0.0 ?cond ?step ?x ==>
      EX n. inres (bounded_WHILE n ?cond ?step ?m0.0) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Refine_While.rwof_init",
     "nofail (?m0.0 >>= WHILE ?cond ?step) ==>
      ?m0.0 <= SPEC (rwof ?m0.0 ?cond ?step)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)))))),
    ("Refine_Heuristics.set_rel_empty_eq",
     "(?S, ?S') : \<langle>?X\<rangle>set_rel ==> (?S = {}) = (?S' = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_bimplication
        (template_equation (template_var 2, template_hole 2),
         template_equation (template_var 1, template_hole 0)))),
    ("Refine_Det.dres_ne_bot_dWHILET",
     "(!!x. ?f x ~= dSUCCEED) ==> dWHILET ?b ?f ?s ~= dSUCCEED",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0),
             template_hole 1)
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==> Let ?x ?f <= Let ?x ?f'",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Misc.dual_ccpo_monoD",
     "monotone (%x y. y <= x) (%x y. y <= x) ?f ==> mono ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty), t_empty),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.ASSERT_rule",
     "[| ?\<Phi>; ?\<Phi> ==> ?\<Psi> () |]
      ==> ASSERT ?\<Phi> <= SPEC ?\<Psi>",
     template_implication
      ([template_predicate (template_var 1),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate
           (template_app (template_var 0, template_hole 4)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Misc.mono_compD",
     "[| mono ?f; ?x <= ?y |] ==> ?f o ?x <= ?f o ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Heuristics.RELATESI_refspec",
     "[| RELATES ?R; ?S <= \<Down> ?R ?S' |] ==> ?S <= \<Down> ?R ?S'",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Heuristics.RELATESI_memb",
     "[| RELATES ?R; (?a, ?b) : ?R |] ==> (?a, ?b) : ?R",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("Refine_While.rwof_cons",
     "[| is_rwof_invar ?m0.0 ?cond ?step ?I; rwof ?m0.0 ?cond ?step ?s |]
      ==> ?I ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Refine_Transfer.nres_correctD",
     "[| nres_of ?S <= SPEC ?\<Phi>; ?S = dRETURN ?x |] ==> ?\<Phi> ?x",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1))),
        template_equation
         (template_var 2, template_app (template_hole 0, template_var 0))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Refine_Leof.le_by_leofI",
     "[| nofail ?m' ==> nofail ?m; ?m \<le>\<^sub>n ?m' |] ==> ?m <= ?m'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 2, template_var 1))],
          template_predicate
           (template_app (template_hole 2, template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("RefineG_Recursion.trimonoI",
     "[| monotone flatf_ge flatf_ge ?B; mono ?B |] ==> trimono ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_hole 2))),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2))),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.pw_bind_nofail",
     "nofail (?M >>= ?f) =
      (nofail ?M & (ALL x. inres ?M x --> nofail (?f x)))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.assert_bind_spec_conv",
     "(ASSERT ?\<Phi> >>= (%_. ?m) <= SPEC ?\<Psi>) =
      (?\<Phi> & ?m <= SPEC ?\<Psi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             t_empty)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))))),
    ("Refine_Basic.ASSERT_same_eq_conv",
     "(ASSERT ?\<Phi> >>= (%_. ?m) = ASSERT ?\<Phi> >>= (%_. ?n)) =
      (?\<Phi> --> ?m = ?n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)),
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Refine_Basic.build_rel_SPEC_conv",
     "\<Down> (br ?\<alpha> ?I) (SPEC ?\<Phi>) =
      SPEC (%x. ?I x & ?\<Phi> (?\<alpha> x))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.summarize_ASSERT_conv",
     "ASSERT ?\<Phi> >>= (%_. ASSERT ?\<Psi> >>= (%_. ?m)) =
      ASSERT (?\<Phi> & ?\<Psi>) >>= (%_. ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         t_empty))),
    ("Refine.stream_rel_param",
     "((##), (##))
      : ?R \<rightarrow>
        \<langle>?R\<rangle>stream_rel \<rightarrow>
        \<langle>?R\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 8)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("RefineG_Domain.chain_f_apply",
     "Complete_Partial_Order.chain (fun_ord ?le) ?F ==>
      Complete_Partial_Order.chain ?le {y. EX f:?F. y = f ?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, t_empty))
           ))),
    ("Refine_While.rwof_in_bounded_WHILE",
     "rwof ?m0.0 ?cond ?step ?s ==>
      EX n. RETURN ?s <= bounded_WHILE n ?cond ?step ?m0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Refine_Basic.intro_RETURN_Let_refine",
     "RETURN (?f ?x) <= \<Down> ?R ?M' ==>
      RETURN (Let ?x ?f) <= \<Down> ?R ?M'",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 2, template_app (template_var 3, template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Det.dres_ne_bot_dWHILEIT",
     "(!!x. ?f x ~= dSUCCEED) ==> dWHILEIT ?I ?b ?f ?s ~= dSUCCEED",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0),
             template_hole 1)
           ))),
    ("RefineG_Transfer.refine_transfer",
     "(?\<Phi> ==> RETURN ?M <= ?M') ==>
      RETURN ?M <= ASSERT ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("RefineG_Transfer.refine_transfer",
     "(?\<Phi> ==> nres_of ?M <= ?M') ==>
      nres_of ?M <= ASSERT ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Basic.SPEC_rule",
     "(!!x. ?\<Phi> x ==> ?\<Phi>' x) ==> SPEC ?\<Phi> <= SPEC ?\<Phi>'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Leof.leof_RES_rule",
     "(!!x. ?\<Psi> x ==> ?\<Phi> x) ==>
      SPEC ?\<Psi> \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Refine_Basic.RES_rule",
     "(!!x. x : ?S ==> ?\<Phi> x) ==> RES ?S <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Leof.leof_RES_rule",
     "(!!x. x : ?X ==> ?\<Phi> x) ==> RES ?X \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Refine_Basic.SPEC_rule_conjunct1",
     "?A <= SPEC (%v. ?P v & ?Q v) ==> ?A <= SPEC ?P",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("Refine_Basic.SPEC_rule_conjunct2",
     "?A <= SPEC (%v. ?P v & ?Q v) ==> ?A <= SPEC ?Q",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.lhs_step_RES",
     "(!!x. x : ?X ==> RETURN x <= ?m) ==> RES ?X <= ?m",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("RefineG_Recursion.trimonoI'",
     "(!!ord. ord : triords ==> monotone (fun_ord ord) (fun_ord ord) ?B) ==>
      trimono ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_While.AIF_leI",
     "[| ?\<Phi>; ?\<Phi> ==> ?S <= ?S' |]
      ==> (if ?\<Phi> then ?S else FAIL) <= ?S'",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_hole 0),
         template_var 0))),
    ("Refine_Foreach.bij_set_rel_for_inj",
     "[| bijective ?R; (?s, ?s') : \<langle>?R\<rangle>set_rel |]
      ==> inj_on (fun_of_rel ?R) ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1)
           ))),
    ("Refine_Misc.mono_SupI",
     "[| mono ?f; ?S' <= ?f ` ?S |] ==> Sup ?S' <= ?f (Sup ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_var 2,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.le_SPEC_bindI",
     "[| ?\<Phi> ?x; ?m <= ?f ?x |] ==> ?m <= SPEC ?\<Phi> >>= ?f",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 2))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3))),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "[| ?a <= ?c; ?b <= ?d |] ==> sup ?a ?b <= sup ?c ?d",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Basic.abs_trans_additional",
     "[| ?A <= ?B; \<Up> ?R ?B <= ?C |] ==> \<Up> ?R ?A <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_var 0))),
    ("Refine_Basic.SPEC_trans",
     "[| ?x <= ?y; ?y <= SPEC ?Postcond |] ==> ?x <= SPEC ?Postcond",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 1,
            template_app (template_hole 0, template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.RES_bind_choose",
     "[| ?x : ?X; ?m <= ?f ?x |] ==> ?m <= RES ?X >>= ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 3))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Refine_Transfer.the_resI",
     "[| nres_of ?S <= ?S'; ?S ~= dSUCCEED |]
      ==> RETURN (the_res ?S) <= ?S'",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Refine_Basic.ref_two_step",
     "[| ?A <= \<Down> ?R ?B; ?B <= ?C |] ==> ?A <= \<Down> ?R ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> Id ?B; ?B <= \<Down> Id ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> Id ?A <= ?B; \<Up> Id ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 2),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Leof.leof_trans_nofail",
     "[| ?a \<le>\<^sub>n ?b; nofail ?b; ?b \<le>\<^sub>n ?c |]
      ==> ?a \<le>\<^sub>n ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Refine_Leof.inres_leof_mono",
     "[| ?m \<le>\<^sub>n ?m'; nofail ?m; inres ?m ?x |] ==> inres ?m' ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine.rel_set_set_rel_eq",
     "rel_set (%x y. (x, y) : ?A) =
      (%f g. (f, g) : \<langle>?A\<rangle>set_rel)",
     template_equation (template_app (template_hole 6, t_empty), t_empty)),
    ("Refine.list_all2_list_rel_conv",
     "list_all2 (%x y. (x, y) : ?R) =
      (%x y. (x, y) : \<langle>?R\<rangle>list_rel)",
     template_equation (template_app (template_hole 6, t_empty), t_empty)),
    ("Refine.rel_option_option_rel_eq",
     "rel_option (%x y. (x, y) : ?A) =
      (%f g. (f, g) : \<langle>?A\<rangle>option_rel)",
     template_equation (template_app (template_hole 6, t_empty), t_empty)),
    ("Refine.stream_all2_stream_rel_conv",
     "stream_all2 (%x y. (x, y) : ?R) =
      (%x y. (x, y) : \<langle>?R\<rangle>stream_rel)",
     template_equation (template_app (template_hole 6, t_empty), t_empty)),
    ("Refine_Basic.pw_abs_nofail",
     "nofail (\<Up> ?R ?M) =
      (nofail ?M & (ALL x. inres ?M x --> x : Domain ?R))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.intro_spec_refine_iff",
     "(RES ?X >>= ?f <= \<Down> ?R ?M) = (ALL x:?X. ?f x <= \<Down> ?R ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 3)),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), t_empty))),
    ("Refine_While.WHILE_msii_conv",
     "?m >>= WHILE\<^bsup>?I\<^esup> ?c ?f =
      filter_ASSUME (Not o ?c) (filter_ASSERT ?I (msii ?I ?m ?c ?f))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1),
             template_var 0))))),
    ("Refine_Foreach.nfoldli_append",
     "nfoldli (?l1.0 @ ?l2.0) ?ctd ?f ?s =
      nfoldli ?l1.0 ?ctd ?f ?s >>= nfoldli ?l2.0 ?ctd ?f",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1)))),
    ("Refine_Basic.inf_RETURN_SPEC",
     "inf (RETURN ?x) (SPEC ?\<Phi>) = SPEC (%y. y = ?x & ?\<Phi> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.inf_RETURN_SPEC",
     "inf (SPEC ?\<Phi>) (RETURN ?x) = SPEC (%y. y = ?x & ?\<Phi> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_Heuristics.Image_Diff",
     "single_valued (?R^-1) ==> ?R `` (?A - ?B) = ?R `` ?A - ?R `` ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Refine_Heuristics.Image_Inter",
     "single_valued (?R^-1) ==> ?R `` (?A Int ?B) = ?R `` ?A Int ?R `` ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Refine_Basic.bind_distrib_Sup2",
     "?F ~= {} ==> ?m >>= Sup ?F = Sup ((>>=) ?m ` ?F)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Refine_Leof.leof_strengthen_SPEC",
     "?m \<le>\<^sub>n SPEC ?\<Phi> ==>
      ?m \<le>\<^sub>n SPEC (%x. inres ?m x & ?\<Phi> x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty)))
           ))),
    ("Refine_Basic.Let_unfold_refine",
     "?f ?x <= \<Down> ?R (?f' ?x') ==>
      Let ?x ?f <= \<Down> ?R (Let ?x' ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 4, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app (template_var 1, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==> dWHILE ?b ?f ?s0.0 <= dWHILE ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==> dWHILET ?b ?f ?s0.0 <= dWHILET ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==> WHILE ?b ?f ?s0.0 <= WHILE ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==>
      WHILE\<^sub>T ?b ?f ?s0.0 <= WHILE\<^sub>T ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. RETURN (?f x) <= ?F x) ==> RETURN (Let ?x ?f) <= Let ?x ?F",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. nres_of (?f x) <= ?F x) ==> nres_of (Let ?x ?f) <= Let ?x ?F",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. flat_ord ?b (?f x) (?f' x)) ==>
      flat_ord ?b (Let ?x ?f) (Let ?x ?f')",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Refine_While.ref_AIFI",
     "(?\<Phi> ==> ?S <= \<Down> ?R ?S') ==>
      ?S <= \<Down> ?R (if ?\<Phi> then ?S' else FAIL)",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_hole 0))))),
    ("Refine_Basic.RETURN_as_SPEC_refine_old",
     "?M <= \<Down> ?R (SPEC (%x. x = ?v)) ==>
      ?M <= \<Down> ?R (RETURN ?v)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_hole 3, template_app (template_hole 2, t_empty))))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.RETURN_as_SPEC_refine",
     "?M <= SPEC (%c. (c, ?a) : ?R) ==> ?M <= \<Down> ?R (RETURN ?a)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Leof.RETURN_as_SPEC_refine_leof",
     "?M \<le>\<^sub>n SPEC (%c. (c, ?a) : ?R) ==>
      ?M \<le>\<^sub>n \<Down> ?R (RETURN ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5, template_app (template_hole 4, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Refine_Det.dres_ne_bot_basic",
     "(!!x1 x2. ?g x1 x2 ~= dSUCCEED) ==>
      (case ?p of (x, xa) => ?g x xa) ~= dSUCCEED",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Automatic_Refinement.GEN_OP_D", "GEN_OP ?c ?a ?R ==> (?c, ?a) : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app (template_hole 1, template_var 1)),
                        template_app (template_hole 0, template_var 0)))),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Refine_Heuristics.set_rel_sngD",
     "({?a}, {?b}) : \<langle>?R\<rangle>set_rel ==> (?a, ?b) : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      template_hole 6)),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_hole 4))),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x y. x <= y ==> ?f x <= ?f y) ==> mono ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.refine_vcg",
     "[| ?\<Phi>; ?\<Phi> ==> ?M <= ?M' |]
      ==> ?M <= ASSUME ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Basic.refine_vcg",
     "[| ?\<Phi>; ?\<Phi> ==> ?M <= ?M' |]
      ==> ASSERT ?\<Phi> >>= (%_. ?M) <= ?M'",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty),
         template_var 0))),
    ("Refine_Misc.contD",
     "[| cont ?f; ?C ~= {} |] ==> ?f (Sup ?C) = Sup (?f ` ?C)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Refine_While.pw_rwof_init",
     "[| nofail (?m0.0 >>= WHILE ?cond ?step); inres ?m0.0 ?s |]
      ==> rwof ?m0.0 ?cond ?step ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("RefineG_Transfer.START_REFINEG_TRANSFER",
     "[| REFINEG_TRANSFER_ALIGN ?d ?c; ?c <= ?a;
         REFINEG_TRANSFER_POST_SIMP ?c ?d |]
      ==> ?d <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.pw_bind_inres",
     "inres (?M >>= ?f) =
      (%x. nofail ?M --> (EX y. inres ?M y & inres (?f y) x))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Refine_Basic.pw_eq_iff",
     "(?S = ?S') =
      (nofail ?S = nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Refine_Basic.pw_le_iff",
     "(?S <= ?S') =
      (nofail ?S' --> nofail ?S & (ALL x. inres ?S x --> inres ?S' x))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.bind_le_shift",
     "(?m >>= ?f <= ?m') =
      (?m <= (if nofail ?m' then SPEC (%x. ?f x <= ?m') else FAIL))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty))),
           template_hole 0)))),
    ("Refine_Leof.sup_leof_iff",
     "(sup ?a ?b \<le>\<^sub>n ?m) =
      (nofail ?a & nofail ?b -->
       ?a \<le>\<^sub>n ?m & ?b \<le>\<^sub>n ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Refine_Basic.bind_rule_complete",
     "(?M >>= ?f <= SPEC ?\<Phi>) =
      (?M <= SPEC (%x. ?f x <= SPEC ?\<Phi>))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("Refine_While.filter_nb_cont",
     "filter_nb ?cond (Sup ?M) = Sup {filter_nb ?cond m |m. m : ?M}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_Basic.nres_bind_let_law",
     "Let ?v ?f >>= ?g = (let y = ?v in ?f y >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine.siterate_param",
     "(siterate, siterate)
      : (?A \<rightarrow> ?A) \<rightarrow>
        ?A \<rightarrow> \<langle>?A\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_hole 12),
               template_hole 11)),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 0)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine.list_rel_param",
     "(list_all, list_all)
      : (?R \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?R\<rangle>list_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_hole 12)),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))),
               template_hole 5)))
         )),
    ("Refine.holds_param",
     "(holds, holds)
      : (?A \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?A\<rangle>stream_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_hole 12)),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))),
               template_hole 5)))
         )),
    ("Refine.stream_rel_param",
     "(pred_stream, pred_stream)
      : (?R \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?R\<rangle>stream_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_hole 12)),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))),
               template_hole 5)))
         )),
    ("Refine_Misc.gen_kleene_lfp",
     "cont ?f ==> lfp (%x. sup ?m (?f x)) = (SUP i. (?f ^^ i) ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0))))),
    ("Refine_Basic.ASSERT_refine_right",
     "(?\<Phi> ==> ?S <= \<Down> ?R ?S') ==>
      ?S <= \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?S'))",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             t_empty))))),
    ("Refine_Basic.ASSUME_refine_left",
     "(?\<Phi> ==> ?S <= \<Down> ?R ?S') ==>
      ASSUME ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Leof.leof_ASSERT_refine_rule",
     "(?\<Phi> ==> ?m \<le>\<^sub>n \<Down> ?R ?m') ==>
      ?m \<le>\<^sub>n \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?m'))",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0))
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 t_empty)))
           ))),
    ("Refine_Basic.lhs_step_SPEC",
     "(!!x. ?\<Phi> x ==> RETURN x <= ?m) ==> SPEC ?\<Phi> <= ?m",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("Refine_Basic.le_ASSERTI_pres",
     "(?\<Phi> ==> ?S <= ASSERT ?\<Phi> >>= (%_. ?S')) ==>
      ?S <= ASSERT ?\<Phi> >>= (%_. ?S')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1,
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)),
              t_empty)))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Misc.wf_no_infinite_down_chainI",
     "(!!f. (!!i. (f (Suc i), f i) : ?r) ==> False) ==> wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Refine_Foreach.bij_set_rel_for_inj",
     "[| bijective ?R; (?s, ?s') : \<langle>?R\<rangle>set_rel |]
      ==> ?s' = fun_of_rel ?R ` ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 2))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1)))),
    ("Refine_Mono_Prover.refine_mono",
     "[| ?t <= ?t'; ?e <= ?e' |]
      ==> (if ?b then ?t else ?e) <= (if ?b then ?t' else ?e')",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 1)))),
    ("Refine_Det.dres_ne_bot_basic",
     "[| ?m1.0 ~= dSUCCEED; ?m2.0 ~= dSUCCEED |]
      ==> (if ?b then ?m1.0 else ?m2.0) ~= dSUCCEED",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1),
             template_hole 1)
           ))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> Id ?B; ?B <= \<Down> ?R ?C |]
      ==> ?A <= \<Down> ?R ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> ?R ?B; ?B <= \<Down> Id ?C |]
      ==> ?A <= \<Down> ?R ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> Id ?A <= ?B; \<Up> ?R ?B <= ?C |] ==> \<Up> ?R ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> ?R ?A <= ?B; \<Up> Id ?B <= ?C |] ==> \<Up> ?R ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_var 0))),
    ("Refine_Misc.map_to_set_inj",
     "[| (?k, ?v) : map_to_set ?m; (?k, ?v') : map_to_set ?m |]
      ==> ?v = ?v'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0)),
              template_app (template_hole 1, template_var 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Refine_Basic.pw_conc_inres",
     "inres (\<Down> ?R ?S') =
      (%s. nofail ?S' --> (EX s'. (s, s') : ?R & inres ?S' s'))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       t_empty)),
    ("Refine.br_list_set_rel",
     "\<langle>br ?f ?P\<rangle>list_set_rel =
      br ((set \<circ>\<circ> map) ?f)
       (%s. list_all ?P s & distinct (map ?f s))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_hole 8),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 1))),
         t_empty))),
    ("Refine_Basic.pw_flat_ge_iff",
     "flat_ge ?S ?S' =
      (nofail ?S --> nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Foreach.dfoldli_by_foldli",
     "dfoldli ?l ?c ?f ?\<sigma> =
      foldli ?l (case_dres False False ?c) (%x s. s >>= ?f x)
       (dRETURN ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_var 2)),
           t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_While.mWHILE_unfold",
     "?m >>= WHILE ?cond ?step =
      ?m >>=
      (%x. if ?cond x then ?step x >>= WHILE ?cond ?step else RETURN x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 2), t_empty))),
    ("Refine_Foreach.while_eq_nfoldli",
     "WHILE\<^sub>T (FOREACH_cond ?c) (FOREACH_body ?f) (?l, ?\<sigma>) >>=
      (%(uu_, \<sigma>). RETURN \<sigma>) =
      nfoldli ?l ?c ?f ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 3)),
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app (template_hole 2, t_empty)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 2),
         template_var 0))),
    ("Refine_While.tailrec_transform_aux2",
     "lfp (%x. sup ?m (x >>= ?a))
      <= ?m >>= REC (%D s. sup (?a s >>= D) (RETURN s))",
     template_inequation
      (less_equals, template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)))),
    ("Refine_Foreach.while_nfoldli",
     "WHILE\<^sub>T (FOREACH_cond ?c) (FOREACH_body ?f) (?l, ?\<sigma>) >>=
      (%(uu_, \<sigma>). RETURN \<sigma>)
      <= nfoldli ?l ?c ?f ?\<sigma>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 3)),
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app (template_hole 2, t_empty)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 2),
         template_var 0))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==>
      dWHILEI ?I ?b ?f ?s0.0 <= dWHILEI ?I ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==>
      dWHILEIT ?I ?b ?f ?s0.0 <= dWHILEIT ?I ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==>
      WHILE\<^bsup>?I\<^esup> ?b ?f ?s0.0
      <= WHILE\<^bsup>?I\<^esup> ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. ?f x <= ?f' x) ==>
      WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?s0.0
      <= WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f' ?s0.0",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. dRETURN (?f x) <= ?F x) ==>
      dRETURN (while ?b ?f ?x) <= dWHILET ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. RETURN (?f x) <= ?F x) ==>
      RETURN (while ?b ?f ?x) <= WHILE\<^sub>T ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. nres_of (?f x) <= ?F x) ==>
      nres_of (dWHILE ?b ?f ?x) <= WHILE ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. nres_of (?f x) <= ?F x) ==>
      nres_of (dWHILET ?b ?f ?x) <= WHILE\<^sub>T ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. flat_ge (?f x) (?f' x)) ==>
      flat_ge (dWHILET ?b ?f ?s0.0) (dWHILET ?b ?f' ?s0.0)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. flat_ge (?f x) (?f' x)) ==>
      flat_ge (WHILE\<^sub>T ?b ?f ?s0.0) (WHILE\<^sub>T ?b ?f' ?s0.0)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Refine_Basic.RETURN_SPEC_refine",
     "EX x'. (?x, x') : ?R & ?\<Phi> x' ==>
      RETURN ?x <= \<Down> ?R (SPEC ?\<Phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Refine_Basic.RES_sng_as_SPEC_refine",
     "?M <= SPEC (%c. (c, ?a) : ?R) ==> ?M <= \<Down> ?R (RES {?a})",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 7, template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("Refine_Basic.RETURN_RES_refine",
     "EX x'. (?x, x') : ?R & x' : ?X ==> RETURN ?x <= \<Down> ?R (RES ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Leof.leof_bind_rule",
     "?m \<le>\<^sub>n SPEC (%x. ?f x \<le>\<^sub>n SPEC ?\<Phi>) ==>
      ?m >>= ?f \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5, template_app (template_hole 4, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!Z x. ?f Z x <= ?g Z x) ==> gfp ?f ?x <= gfp ?g ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!Z x. ?f Z x <= ?g Z x) ==> lfp ?f ?x <= lfp ?g ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x y. x <= y ==> ?f x <= ?f y) ==> monotone (<=) (<=) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_hole 1),
             template_var 0)
           ))),
    ("Refine_Basic.pw_leI",
     "nofail ?S' --> nofail ?S & (ALL x. inres ?S x --> inres ?S' x) ==>
      ?S <= ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 4, template_var 0)),
                template_app (template_hole 2, t_empty)))
            )],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Misc.contI",
     "(!!C. C ~= {} ==> ?f (Sup C) = Sup (?f ` C)) ==> cont ?f",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| ?\<Phi>; ?\<Phi> ==> RETURN ?M <= ?M' |]
      ==> RETURN ?M <= ASSUME ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("RefineG_Transfer.refine_transfer",
     "[| ?\<Phi>; ?\<Phi> ==> nres_of ?M <= ?M' |]
      ==> nres_of ?M <= ASSUME ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Misc.mono_if",
     "[| mono ?S1.0; mono ?S2.0 |]
      ==> mono (%F s. if ?b s then ?S1.0 F s else ?S2.0 F s)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RefineG_Domain.flat_ge_sup_mono",
     "[| flat_ge ?a ?a'; flat_ge ?b ?b' |]
      ==> flat_ge (sup ?a ?b) (sup ?a' ?b')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_While.rwof_leof_step",
     "[| rwof ?m ?c ?f ?s; ?c ?s |]
      ==> ?f ?s \<le>\<^sub>n SPEC (rwof ?m ?c ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2),
                   template_var 1))))
           ))),
    ("Refine_Basic.nres_cases",
     "[| ?M = FAIL ==> ?thesis; !!X. ?M = RES X ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_While.bounded_WHILE_RES_rwof",
     "[| bounded_WHILE ?n ?cond ?step ?m0.0 = RES ?X; ?x : ?X |]
      ==> rwof ?m0.0 ?cond ?step ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 3),
             template_var 0)
           ))),
    ("Refine_Det.dres_chain_eq_res",
     "[| is_chain ?M; dRETURN ?r : ?M; dRETURN ?s : ?M |] ==> ?r = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.SUP_img_rule_complete",
     "(ALL x. x : ?S --> ?f x <= SPEC ?\<Phi>) =
      (Sup (?f ` ?S) <= SPEC ?\<Phi>)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.bind_RES_RETURN_eq",
     "RES ?X >>= (%x. RETURN (?f x)) =
      SPEC (%uu_. EX x. uu_ = ?f x & x : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         t_empty),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.conc_fun_SPEC",
     "\<Down> ?R (SPEC ?\<Phi>) = SPEC (%y. EX x. (y, x) : ?R & ?\<Phi> x)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Refine_Foreach.FOREACHoci_by_LIST_FOREACH",
     "FOREACH\<^sub>O\<^sub>C\<^bsup>?R,?\<Phi>\<^esup> ?S ?c ?f
       ?\<sigma>0.0 =
      ASSERT (finite ?S) >>=
      (%_. LIST_FOREACH ?\<Phi> (it_to_sorted_list ?R ?S) ?c ?f
            ?\<sigma>0.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3))),
         t_empty))),
    ("Refine_Basic.If_bind_distrib",
     "(if ?b then ?t else ?e) >>= ?f =
      (if ?b then ?t >>= ?f else ?e >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Refine_Foreach.nfoldli_while",
     "nfoldli ?l ?c ?f ?\<sigma>
      <= WHILE\<^sub>T\<^bsup>?I\<^esup> (FOREACH_cond ?c) (FOREACH_body ?f)
          (?l, ?\<sigma>) >>=
         (%(uu_, \<sigma>). RETURN \<sigma>)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3),
           template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 4, template_var 3)),
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1))),
         template_app (template_hole 1, t_empty)))),
    ("Refine.basic_param",
     "((`), (`))
      : (?A \<rightarrow> ?B) \<rightarrow>
        \<langle>?A\<rangle>set_rel \<rightarrow>
        \<langle>?B\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine.stream_rel_param",
     "(smap, smap)
      : (?Rb \<rightarrow> ?Sd) \<rightarrow>
        \<langle>?Rb\<rangle>stream_rel \<rightarrow>
        \<langle>?Sd\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 1))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine.set_filter_param",
     "(Set.filter, Set.filter)
      : (?A \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?A\<rangle>set_rel \<rightarrow>
        \<langle>?A\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_hole 13),
               template_hole 12)),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine.alw_param",
     "(alw, alw)
      : (\<langle>?A\<rangle>stream_rel \<rightarrow>
         bool_rel) \<rightarrow>
        \<langle>?A\<rangle>stream_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_hole 9)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 0))),
                   template_hole 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0))),
               template_hole 0)))
         )),
    ("Refine.ev_param",
     "(ev, ev)
      : (\<langle>?A\<rangle>stream_rel \<rightarrow>
         bool_rel) \<rightarrow>
        \<langle>?A\<rangle>stream_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_hole 9)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 0))),
                   template_hole 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0))),
               template_hole 0)))
         )),
    ("Refine_Basic.strengthen_SPEC",
     "?m <= SPEC ?\<Phi> ==>
      ?m <= SPEC (%s. inres ?m s & nofail ?m & ?\<Phi> s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("RefineG_Domain.flatf_admissible_pointwise",
     "(!!x. ?P x ?b) ==>
      ccpo.admissible (flatf_lub ?b) (flatf_ord ?b)
       (%g. ALL x. ?P x (g x))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             t_empty)
           ))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. dRETURN (?f x) <= ?F x) ==>
      dRETURN (while ?b ?f ?x) <= dWHILEIT ?I ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 3),
           template_var 1)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. RETURN (?f x) <= ?F x) ==>
      RETURN (while ?b ?f ?x) <= WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 3),
           template_var 1)))),
    ("Refine_Basic.rhs_step_bind_SPEC",
     "[| ?\<Phi> ?x'; ?m <= \<Down> ?R (?f' ?x') |]
      ==> ?m <= \<Down> ?R (SPEC ?\<Phi> >>= ?f')",
     template_implication
      ([template_predicate (template_app (template_var 4, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_var 0, template_var 3)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 4))),
             template_var 0))))),
    ("Refine_Mono_Prover.refine_mono",
     "[| ?m <= ?m'; !!x. ?f x <= ?f' x |] ==> ?m >>= ?f <= ?m' >>= ?f'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "[| ?m <= ?m'; !!x. ?f x <= ?f' x |] ==> ?m >>= ?f <= ?m' >>= ?f'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Basic.rhs_step_bind_RES",
     "[| ?x' : ?X'; ?m <= \<Down> ?R (?f' ?x') |]
      ==> ?m <= \<Down> ?R (RES ?X' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_app (template_var 0, template_var 4)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 0))))),
    ("Refine_Det.dres_ne_bot_basic",
     "[| ?m ~= dSUCCEED; !!x. ?f x ~= dSUCCEED |]
      ==> ?m >>= ?f ~= dSUCCEED",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Refine_Basic.pw_eqI",
     "[| nofail ?S = nofail ?S'; !!x. inres ?S x = inres ?S' x |]
      ==> ?S = ?S'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.conc_trans",
     "[| ?C <= \<Down> ?R ?B; ?B <= \<Down> ?R' ?A |]
      ==> ?C <= \<Down> ?R (\<Down> ?R' ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 4,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Refine_Basic.abs_trans",
     "[| \<Up> ?R ?C <= ?B; \<Up> ?R' ?B <= ?A |]
      ==> \<Up> ?R' (\<Up> ?R ?C) <= ?A",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 4), template_var 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3)),
         template_var 0))),
    ("Refine.relcomp_trans_1",
     "[| (?f, ?g) : ?A\<^sub>1; (?g, ?h) : ?A\<^sub>2 |]
      ==> (?f, ?h) : ?A\<^sub>1 O ?A\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_Misc.map_to_set_simps",
     "map_to_set (?m(?x |-> ?v)) =
      map_to_set ?m - {?x} \<times> UNIV Un {(?x, ?v)}",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1),
           template_app (template_hole 9, template_var 0))),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 11, template_var 2)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4)),
               t_empty))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("Refine_Basic.pw_abs_inres",
     "inres (\<Up> ?R ?M) ?a =
      (nofail (\<Up> ?R ?M) --> (EX c. inres ?M c & (c, ?a) : ?R))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1))),
         template_app (template_hole 4, t_empty)))),
    ("Refine_While.WHILE_bounded",
     "?m >>= WHILE ?cond ?step =
      filter_nb ?cond (Sup {bounded_WHILE n ?cond ?step ?m |n. True})",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("Refine_While.tailrec_transform",
     "?m >>= REC (%D s. sup (?a s >>= D) (?b s)) =
      lfp (%x. sup ?m (x >>= ?a)) >>= ?b",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 2, t_empty)),
         template_var 0))),
    ("Refine_While.WHILE_bounded_aux2",
     "?m >>= WHILE ?cond ?step
      <= filter_nb ?cond (Sup {bounded_WHILE n ?cond ?step ?m |n. True})",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))))),
    ("Refine_While.tailrec_transform2",
     "lfp (%x. sup ?m (x >>= ?a)) >>= ?b
      <= ?m >>= REC (%D s. sup (?a s >>= D) (?b s))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app (template_hole 1, t_empty)))),
    ("Refine_While.tailrec_transform1",
     "?m >>= REC (%D s. sup (?a s >>= D) (?b s))
      <= lfp (%x. sup ?m (x >>= ?a)) >>= ?b",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 2, t_empty)),
         template_var 0))),
    ("Refine_Foreach.member_by_nfoldli",
     "nfoldli ?l Not (%y _. RETURN (y = ?x)) False
      <= SPEC (%r. r = (?x : set ?l))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 1), t_empty),
           t_empty),
         template_hole 5),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_Misc.SUP_funpow_contracting",
     "cont ?f ==> ?f (SUP i. (?f ^^ i) ?m) <= (SUP i. (?f ^^ i) ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_var 1,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_hole 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0))))),
    ("Refine_While.rwof_reachable",
     "rwof ?init ?cond ?step ?s ==>
      EX s0. inres ?init s0 & (s0, ?s) : (rwof_rel ?init ?cond ?step)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Refine_While.msii_is_invar",
     "?m <= msii ?I ?m ?c ?f ==>
      filter_ASSUME ?c (filter_ASSERT ?I ?m) >>= ?f <= msii ?I ?m ?c ?f",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 3),
              template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. nres_of (?f x) <= ?F x) ==>
      nres_of (dWHILEI ?I ?b ?f ?x) <= WHILE\<^bsup>?I\<^esup> ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!x. nres_of (?f x) <= ?F x) ==>
      nres_of (dWHILEIT ?I ?b ?f ?x)
      <= WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?F ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. flat_ge (?f x) (?f' x)) ==>
      flat_ge (dWHILEIT ?I ?b ?f ?s0.0) (dWHILEIT ?I ?b ?f' ?s0.0)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!x. flat_ge (?f x) (?f' x)) ==>
      flat_ge (WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?s0.0)
       (WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f' ?s0.0)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_Basic.build_rel_SPEC",
     "?M <= SPEC (%x. ?\<Phi> (?\<alpha> x) & ?I x) ==>
      ?M <= \<Down> (br ?\<alpha> ?I) (SPEC ?\<Phi>)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 6, template_app (template_hole 5, t_empty)))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)))))),
    ("Refine_Basic.bind_rule",
     "?M <= SPEC (%x. ?f x <= SPEC ?\<Phi>) ==> ?M >>= ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Leof.build_rel_SPEC_leof",
     "?m \<le>\<^sub>n SPEC (%x. ?I x & ?\<Phi> (?\<alpha> x)) ==>
      ?m \<le>\<^sub>n \<Down> (br ?\<alpha> ?I) (SPEC ?\<Phi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6, template_app (template_hole 5, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 2)),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xa1 a b <= ?y1 a b) ==>
      FOREACH ?x1 ?xa1 ?xb1 <= FOREACH ?x1 ?y1 ?xb1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!a b. RETURN (?f a b) <= ?F a b) ==>
      RETURN (case ?x of (x, xa) => ?f x xa)
      <= (case ?x of (x, xa) => ?F x xa)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "(!!a b. nres_of (?f a b) <= ?F a b) ==>
      nres_of (case ?x of (x, xa) => ?f x xa)
      <= (case ?x of (x, xa) => ?F x xa)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.ASSUME_refine_right",
     "[| ?\<Phi>; ?\<Phi> ==> ?S <= \<Down> ?R ?S' |]
      ==> ?S <= \<Down> ?R (ASSUME ?\<Phi> >>= (%_. ?S'))",
     template_implication
      ([template_predicate (template_var 3),
        template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             t_empty))))),
    ("Refine_Basic.ASSERT_refine_left",
     "[| ?\<Phi>; ?\<Phi> ==> ?S <= \<Down> ?R ?S' |]
      ==> ASSERT ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S'",
     template_implication
      ([template_predicate (template_var 3),
        template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Det.dres_ne_bot_basic",
     "[| ?fn ~= dSUCCEED; !!v. ?fs v ~= dSUCCEED |]
      ==> (case ?x of None => ?fn | Some x => ?fs x) ~= dSUCCEED",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 2)
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "[| flat_ord ?ba ?t ?t'; flat_ord ?ba ?e ?e' |]
      ==> flat_ord ?ba (if ?b then ?t else ?e) (if ?b then ?t' else ?e')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1))
           ))),
    ("Refine_Basic.weaken_SPEC",
     "[| ?m <= SPEC ?\<Phi>; !!x. ?\<Phi> x ==> ?\<Psi> x |]
      ==> ?m <= SPEC ?\<Psi>",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Leof.leof_cons_rule",
     "[| ?m \<le>\<^sub>n SPEC ?Q; !!x. ?Q x ==> ?P x |]
      ==> ?m \<le>\<^sub>n SPEC ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Refine_Heuristics.Image_insert",
     "[| (?a, ?b) : ?R; single_valued ?R |]
      ==> ?R `` insert ?a ?A = insert ?b (?R `` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Refine_While.pw_bounded_WHILE_RES_rwof",
     "[| nofail (bounded_WHILE ?n ?cond ?step ?m0.0);
         inres (bounded_WHILE ?n ?cond ?step ?m0.0) ?x |]
      ==> rwof ?m0.0 ?cond ?step ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Refine_While.WHILE_nofail_imp_rwof_nofail",
     "[| nofail (?m0.0 >>= WHILE ?cond ?step); rwof ?m0.0 ?cond ?step ?s;
         ?cond ?s |]
      ==> nofail (?step ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_var 1, template_var 0))
           ))),
    ("Refine_While.WHILET_nofail_imp_rwof_nofail",
     "[| nofail (?m0.0 >>= WHILE\<^sub>T ?cond ?step);
         rwof ?m0.0 ?cond ?step ?s; ?cond ?s |]
      ==> nofail (?step ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_var 1, template_var 0))
           ))),
    ("Refine_Basic.case_prod_bind_simp",
     "(%x. (case x of (a, b) => ?f a b) <= SPEC ?\<Phi>) =
      (%(a, b). ?f a b <= SPEC ?\<Phi>)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Refine_Basic.ignore_snd_refine_conv",
     "(?m <= \<Down> (?R \<times>\<^sub>r UNIV) ?m') =
      (?m >>= RETURN o fst <= \<Down> ?R (?m' >>= RETURN o fst))",
     template_equation
      (template_app
        (template_app (template_hole 15, template_var 2),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_var 1)),
               template_hole 10)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)))))),
    ("Refine_Foreach.dfoldli_simps",
     "dfoldli (?x # ?ls) ?c ?f ?s =
      (if ?c ?s then ?f ?x ?s >>= dfoldli ?ls ?c ?f else dRETURN ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_var 1, template_var 4),
                 template_var 0)),
             t_empty)),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Foreach.nfoldli_simps",
     "nfoldli (?x # ?ls) ?c ?f ?s =
      (if ?c ?s then ?f ?x ?s >>= nfoldli ?ls ?c ?f else RETURN ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_var 1, template_var 4),
                 template_var 0)),
             t_empty)),
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Foreach.nfoldli_nfoldli_prod_conv",
     "nfoldli ?l2.0 ?ctd (%i. nfoldli ?l1.0 ?ctd (?f i)) ?s =
      nfoldli (List.product ?l2.0 ?l1.0) ?ctd (%(i, j). ?f i j) ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_var 3),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2)),
             template_var 3),
           template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("Refine.bind_param",
     "((>>=), (>>=))
      : \<langle>?A\<rangle>list_rel \<rightarrow>
        (?A \<rightarrow> \<langle>?B\<rangle>list_rel) \<rightarrow>
        \<langle>?B\<rangle>list_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine.szip_param",
     "((|||), (|||))
      : \<langle>?A\<rangle>stream_rel \<rightarrow>
        \<langle>?B\<rangle>stream_rel \<rightarrow>
        \<langle>?A \<times>\<^sub>r ?B\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app (template_hole 17, template_hole 16),
               template_hole 15)),
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 1)),
                   template_var 0)))))
         )),
    ("Refine_Basic.autoref_bind",
     "((>>=), (>>=))
      : \<langle>?R1.0\<rangle>nres_rel \<rightarrow>
        (?R1.0 \<rightarrow> \<langle>?R2.0\<rangle>nres_rel) \<rightarrow>
        \<langle>?R2.0\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine_Basic.param_bind",
     "((>>=), (>>=))
      : \<langle>?Ra\<rangle>nres_rel \<rightarrow>
        (?Ra \<rightarrow> \<langle>?Rb\<rangle>nres_rel) \<rightarrow>
        \<langle>?Rb\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine_Foreach.map_foreach",
     "finite ?S ==>
      FOREACH ?S (%x \<sigma>. RETURN (insert (?f x) \<sigma>)) ?R0.0
      <= SPEC ((=) (?R0.0 Un ?f ` ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2), t_empty),
           template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)))))))),
    ("Refine_Basic.ret_le_down_conv",
     "nofail ?m ==>
      (RETURN ?c <= \<Down> ?R ?m) = (EX a. (?c, a) : ?R & RETURN a <= ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2)),
         template_app (template_hole 5, t_empty)))),
    ("Refine_Foreach.nfoldli_map_inv",
     "inj ?g ==>
      nfoldli ?l ?c ?f = nfoldli (map ?g ?l) ?c (%x. ?f (the_inv ?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1),
           t_empty)))),
    ("Refine.basic_param",
     "bi_total (%x xa. (x, xa) : ?A) ==>
      (All, All) : (?A \<rightarrow> bool_rel) \<rightarrow> bool_rel",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 0)),
                     template_hole 0))),
               template_hole 0))
           ))),
    ("Refine.basic_param",
     "bi_total (%x xa. (x, xa) : ?A) ==>
      (Ex, Ex) : (?A \<rightarrow> bool_rel) \<rightarrow> bool_rel",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 0)),
                     template_hole 0))),
               template_hole 0))
           ))),
    ("Refine_Basic.ASSERT_refine_right_pres",
     "(?\<Phi> ==> ?S <= \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?S'))) ==>
      ?S <= \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?S'))",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                t_empty))))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             t_empty))))),
    ("Refine_Basic.ASSUME_refine_left_pres",
     "(?\<Phi> ==> ASSUME ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S') ==>
      ASSUME ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals,
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)),
              t_empty),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.Sup_img_rule",
     "(!!x. x : ?S ==> ?f x <= SPEC ?\<Phi>) ==>
      Sup (?f ` ?S) <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Det.dr_mono_bind",
     "[| mono ?A; !!s. mono (?B s) |] ==> mono (%F s. ?A F s >>= ?B s F)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.nr_mono_bind",
     "[| mono ?A; !!s. mono (?B s) |] ==> mono (%F s. ?A F s >>= ?B s F)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.nofail_inf_serialize",
     "[| nofail ?a; nofail ?b |]
      ==> inf ?a ?b = ?a >>= (%x. ASSUME (inres ?b x) >>= (%_. RETURN x))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, template_var 1), t_empty)))),
    ("Refine_Basic.bind_le_nofailI",
     "[| nofail ?m; !!x. RETURN x <= ?m ==> ?f x <= ?m' |]
      ==> ?m >>= ?f <= ?m'",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Refine_Foreach.it_step_insert_iff",
     "[| ?it <= ?S; ?x : ?it |]
      ==> ?S - (?it - {?x}) = insert ?x (?S - ?it)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Refine_Basic.sup_refine",
     "[| ?ai <= \<Down> ?R ?a; ?bi <= \<Down> ?R ?b |]
      ==> sup ?ai ?bi <= \<Down> ?R (sup ?a ?b)",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Refine_Basic.intro_bind_refine_id",
     "[| ?m <= SPEC ((=) ?m'); ?f ?m' <= \<Down> ?R ?m'' |]
      ==> ?m >>= ?f <= \<Down> ?R ?m''",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3)))),
        template_inequation
         (less_equals, template_app (template_var 2, template_var 3),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.lhs_step_If",
     "[| ?b ==> ?t <= ?m; ~ ?b ==> ?e <= ?m |]
      ==> (if ?b then ?t else ?e) <= ?m",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2, template_var 1)),
        template_implication
         ([template_negation (template_predicate (template_var 3))],
          template_inequation
           (less_equals, template_var 0, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Refine_While.WHILEI_nofail_imp_rwof_nofail",
     "[| nofail (?m0.0 >>= WHILE\<^bsup>?I\<^esup> ?cond ?step);
         rwof ?m0.0 ?cond ?step ?s; ?cond ?s |]
      ==> nofail (?step ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_var 1, template_var 0))
           ))),
    ("Refine_While.WHILEIT_nofail_imp_rwof_nofail",
     "[| nofail (?m0.0 >>= WHILE\<^sub>T\<^bsup>?I\<^esup> ?cond ?step);
         rwof ?m0.0 ?cond ?step ?s; ?cond ?s |]
      ==> nofail (?step ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_var 1, template_var 0))
           ))),
    ("Refine_Foreach.dfoldli_mono",
     "(!!x s. ?f x s <= ?f' x s) ==>
      dfoldli ?l ?c ?f ?\<sigma> <= dfoldli ?l ?c ?f' ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Foreach.nfoldli_mono",
     "(!!x s. ?f x s <= ?f' x s) ==>
      nfoldli ?l ?c ?f ?\<sigma> <= nfoldli ?l ?c ?f' ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xb1 a b <= ?y1 a b) ==>
      LIST_FOREACH' ?x1 ?xa1 ?xb1 ?xc1 <= LIST_FOREACH' ?x1 ?xa1 ?y1 ?xc1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xb1 a b <= ?y1 a b) ==>
      FOREACH\<^sub>C ?x1 ?xa1 ?xb1 ?xc1
      <= FOREACH\<^sub>C ?x1 ?xa1 ?y1 ?xc1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xb1 a b <= ?y1 a b) ==>
      FOREACH\<^bsup>?x1\<^esup> ?xa1 ?xb1 ?xc1
      <= FOREACH\<^bsup>?x1\<^esup> ?xa1 ?y1 ?xc1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xa1 a b) (?y1 a b)) ==>
      flat_ge (FOREACH ?x1 ?xa1 ?xb1) (FOREACH ?x1 ?y1 ?xb1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Refine_Basic.Let_rule'",
     "(!!x. x = ?v ==> ?f x <= SPEC ?\<Phi>) ==> Let ?v ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_While.ref_WHILEI_invarI",
     "(?I ?s ==> ?M <= \<Down> ?R (WHILE\<^bsup>?I\<^esup> ?b ?f ?s)) ==>
      ?M <= \<Down> ?R (WHILE\<^bsup>?I\<^esup> ?b ?f ?s)",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 5, template_var 4))],
          template_inequation
           (less_equals, template_var 3,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 1),
                  template_var 0),
                template_var 4))))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0),
             template_var 4))))),
    ("Refine_While.ref_WHILEIT_invarI",
     "(?I ?s ==>
       ?M <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?s)) ==>
      ?M <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?s)",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 5, template_var 4))],
          template_inequation
           (less_equals, template_var 3,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 1),
                  template_var 0),
                template_var 4))))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0),
             template_var 4))))),
    ("Refine_Basic.SPEC_refine",
     "?S <= SPEC (%x. EX x'. (x, x') : ?R & ?\<Phi> x') ==>
      ?S <= \<Down> ?R (SPEC ?\<Phi>)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 8, template_app (template_hole 7, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Refine_Basic.RES_refine",
     "(!!s. s : ?S ==> EX s':?S'. (s, s') : ?R) ==>
      RES ?S <= \<Down> ?R (RES ?S')",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("RefineG_Recursion.REC_mono",
     "[| trimono ?B; !!F x. ?B F x <= ?B' F x |]
      ==> REC ?B ?x <= REC ?B' ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "[| trimono ?B; !!D x. ?B D x <= ?B' D x |]
      ==> REC ?B ?x <= REC ?B' ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "[| trimono ?B; !!D x. ?B D x <= ?B' D x |]
      ==> REC\<^sub>T ?B ?x <= REC\<^sub>T ?B' ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Transfer.plain_bind",
     "[| RETURN ?x <= ?M; !!x. RETURN (?f x) <= ?F x |]
      ==> RETURN (Let ?x ?f) <= ?M >>= ?F",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 3),
          template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Transfer.det_bind",
     "[| nres_of ?m <= ?M; !!x. nres_of (?f x) <= ?F x |]
      ==> nres_of (?m >>= ?f) <= ?M >>= ?F",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 3),
          template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Det.dbind_mono",
     "[| flat_ge ?M ?M'; !!x. flat_ge (?f x) (?f' x) |]
      ==> flat_ge (?M >>= ?f) (?M' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "[| flat_ge ?m ?m'; !!x. flat_ge (?f x) (?f' x) |]
      ==> flat_ge (?m >>= ?f) (?m' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_Basic.bind_mono",
     "[| flat_ge ?M ?M'; !!x. flat_ge (?f x) (?f' x) |]
      ==> flat_ge (?M >>= ?f) (?M' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "[| flat_ge ?m ?m'; !!x. flat_ge (?f x) (?f' x) |]
      ==> flat_ge (?m >>= ?f) (?m' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_Basic.SPEC_rule_conjI",
     "[| ?A <= SPEC ?P; ?A <= SPEC ?Q |] ==> ?A <= SPEC (%v. ?P v & ?Q v)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Leof.SPEC_rule_conj_leofI1",
     "[| ?m <= SPEC ?\<Phi>; ?m \<le>\<^sub>n SPEC ?\<Psi> |]
      ==> ?m <= SPEC (%s. ?\<Phi> s & ?\<Psi> s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Refine_Basic.use_spec_rule",
     "[| ?m <= SPEC ?\<Psi>; ?m <= SPEC (%s. ?\<Psi> s --> ?\<Phi> s) |]
      ==> ?m <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Leof.SPEC_rule_conj_leofI2",
     "[| ?m \<le>\<^sub>n SPEC ?\<Phi>; ?m <= SPEC ?\<Psi> |]
      ==> ?m <= SPEC (%s. ?\<Phi> s & ?\<Psi> s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Refine_Leof.SPEC_rule_leof_conjI",
     "[| ?m \<le>\<^sub>n SPEC ?\<Phi>; ?m \<le>\<^sub>n SPEC ?\<Psi> |]
      ==> ?m \<le>\<^sub>n SPEC (%x. ?\<Phi> x & ?\<Psi> x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))
           ))),
    ("Refine_Leof.use_spec_leof_rule",
     "[| ?m \<le>\<^sub>n SPEC ?\<Psi>;
         ?m <= SPEC (%s. ?\<Psi> s --> ?\<Phi> s) |]
      ==> ?m <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 3, template_app (template_hole 2, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Leof.leof_use_spec_rule",
     "[| ?m \<le>\<^sub>n SPEC ?\<Psi>;
         ?m \<le>\<^sub>n SPEC (%s. ?\<Psi> s --> ?\<Phi> s) |]
      ==> ?m \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2, template_app (template_hole 1, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Refine.the_elem_param",
     "[| is_singleton ?S; is_singleton ?T;
         (?S, ?T) : \<langle>?A\<rangle>set_rel |]
      ==> (the_elem ?S, the_elem ?T) : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Refine_While.rwof_FAIL_imp_WHILE_FAIL",
     "[| rwof ?m0.0 ?cond ?step ?s; ?cond ?s; ?step ?s = FAIL |]
      ==> ?m0.0 >>= WHILE ?cond ?step = FAIL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0)),
        template_equation
         (template_app (template_var 1, template_var 0), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_hole 2))),
    ("Refine_Basic.refine2spec_aux",
     "(?a <= \<Down> ?R ?b) =
      (nofail ?b --> ?a <= SPEC (%r. EX x. inres ?b x & (r, x) : ?R))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 2),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app (template_hole 10, template_var 2),
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty)))))),
    ("Refine_Basic.pw_bind_le_iff",
     "(?M >>= ?f <= ?S) =
      ((nofail ?S --> nofail ?M) &
       (ALL x. nofail ?M & inres ?M x --> ?f x <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_var 2))),
         template_app (template_hole 1, t_empty)))),
    ("Refine_Heuristics.refine_hsimp",
     "((?x # ?l, ?x' # ?l') : \<langle>?R\<rangle>list_rel) =
      ((?x, ?x') : ?R & (?l, ?l') : \<langle>?R\<rangle>list_rel)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Refine.stream_rel_inject",
     "((?x1.0 ## ?x2.0, ?y1.0 ## ?y2.0) : \<langle>?R\<rangle>stream_rel) =
      ((?x1.0, ?y1.0) : ?R &
       (?x2.0, ?y2.0) : \<langle>?R\<rangle>stream_rel)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Refine_Heuristics.prod_rel_iff",
     "(((?a, ?b), ?a', ?b') : ?A \<times>\<^sub>r ?B) =
      ((?a, ?a') : ?A & (?b, ?b') : ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 5),
                 template_var 4)),
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 3)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2)),
           template_var 0)))),
    ("Refine_While.tailrec_transform_aux3",
     "REC (%D s. sup (?a s >>= D) (RETURN s)) ?s >>= ?b
      <= REC (%D s. sup (?a s >>= D) (?b s)) ?s",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Refine.stream_rel_param",
     "(case_stream, case_stream)
      : (?R \<rightarrow>
         \<langle>?R\<rangle>stream_rel \<rightarrow> ?S) \<rightarrow>
        \<langle>?R\<rangle>stream_rel \<rightarrow> ?S",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_hole 12),
               template_hole 11)),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 1))),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1))),
               template_var 0)))
         )),
    ("Refine_Misc.gen_kleene_chain_conv",
     "cont ?f ==>
      (SUP i. (?f ^^ i) ?m) = (SUP i. ((%x. sup ?m (?f x)) ^^ i) bot)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 2)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 2))))),
    ("Refine_Basic.intro_spec_refine",
     "(!!x. x : ?X ==> ?f x <= \<Down> ?R ?M) ==>
      RES ?X >>= ?f <= \<Down> ?R ?M",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Det.dres_ne_bot_basic",
     "[| ?fn ~= dSUCCEED; !!x xs. ?fc x xs ~= dSUCCEED |]
      ==> (case ?x of [] => ?fn | x # xa => ?fc x xa) ~= dSUCCEED",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 3)
           ))),
    ("Refine_While.rwof_rel_spec",
     "[| rwof ?init ?cond ?step ?s; ?cond ?s |]
      ==> ?step ?s \<le>\<^sub>n
          SPEC (%s'. (?s, s') : rwof_rel ?init ?cond ?step)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_var 1, template_var 0)),
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty)))
           ))),
    ("RefineG_Domain.lfp_eq_flatf_lfp",
     "[| monotone flatf_le flatf_le ?B; mono ?B |]
      ==> lfp ?B = flatf_lfp ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 6))),
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6))),
           template_var 0)))),
    ("RefineG_Domain.gfp_eq_flatf_gfp",
     "[| monotone flatf_ge flatf_ge ?B; mono ?B |]
      ==> gfp ?B = flatf_gfp ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 6))),
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6))),
           template_var 0)))),
    ("Refine_While.rwof_step'",
     "[| nofail (?step ?s); rwof ?m0.0 ?cond ?step ?s; ?cond ?s |]
      ==> ?step ?s <= SPEC (rwof ?m0.0 ?cond ?step)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_var 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0),
               template_var 3)))))),
    ("Refine_Foreach.nfoldli_shift",
     "nfoldli ?l ?c ?f =
      nfoldli (map (%i. i + ?ofs) ?l) ?c
       (%x s. ASSERT (?ofs <= x) >>= (%_. ?f (x - ?ofs) s))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty), template_var 3)),
           template_var 2),
         t_empty))),
    ("Refine_Basic.pw_flat_le_iff",
     "flat_le ?S ?S' =
      ((EX x. inres ?S x) -->
       nofail ?S = nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, t_empty)))
           ))),
    ("Refine_While.nofail_WHILE_eq_rwof",
     "nofail (?m0.0 >>= WHILE ?cond ?step) ==>
      ?m0.0 >>= WHILE ?cond ?step =
      SPEC (%s. rwof ?m0.0 ?cond ?step s & ~ ?cond s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 2),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xc1 a b <= ?y1 a b) ==>
      FOREACH\<^sub>O\<^bsup>?x1,?xa1\<^esup> ?xb1 ?xc1 ?xd1
      <= FOREACH\<^sub>O\<^bsup>?x1,?xa1\<^esup> ?xb1 ?y1 ?xd1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 5),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xc1 a b <= ?y1 a b) ==>
      FOREACH\<^sub>C\<^bsup>?x1\<^esup> ?xa1 ?xb1 ?xc1 ?xd1
      <= FOREACH\<^sub>C\<^bsup>?x1\<^esup> ?xa1 ?xb1 ?y1 ?xd1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 5),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0)))),
    ("Refine_Foreach.nfoldli_transfer_plain",
     "(!!x s. RETURN (?f x s) <= ?f' x s) ==>
      RETURN (foldli ?l ?c ?f ?s) <= nfoldli ?l ?c ?f' ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Foreach.dfoldli_mono",
     "(!!x s. flat_ge (?f x s) (?f' x s)) ==>
      flat_ge (dfoldli ?l ?c ?f ?\<sigma>) (dfoldli ?l ?c ?f' ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_Foreach.nfoldli_mono",
     "(!!x s. flat_ge (?f x s) (?f' x s)) ==>
      flat_ge (nfoldli ?l ?c ?f ?\<sigma>) (nfoldli ?l ?c ?f' ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xb1 a b) (?y1 a b)) ==>
      flat_ge (LIST_FOREACH' ?x1 ?xa1 ?xb1 ?xc1)
       (LIST_FOREACH' ?x1 ?xa1 ?y1 ?xc1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xb1 a b) (?y1 a b)) ==>
      flat_ge (FOREACH\<^sub>C ?x1 ?xa1 ?xb1 ?xc1)
       (FOREACH\<^sub>C ?x1 ?xa1 ?y1 ?xc1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xb1 a b) (?y1 a b)) ==>
      flat_ge (FOREACH\<^bsup>?x1\<^esup> ?xa1 ?xb1 ?xc1)
       (FOREACH\<^bsup>?x1\<^esup> ?xa1 ?y1 ?xc1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("RefineG_Recursion.RECT_mono",
     "[| trimono ?B'; !!F x. flat_ge (?B F x) (?B' F x) |]
      ==> flat_ge (REC\<^sub>T ?B ?x) (REC\<^sub>T ?B' ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine.HLD_param",
     "[| single_valued ?A; single_valued (?A^-1) |]
      ==> (HLD, HLD)
          : \<langle>?A\<rangle>set_rel \<rightarrow>
            \<langle>?A\<rangle>stream_rel \<rightarrow> bool_rel",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_hole 11)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 0))),
                 template_hole 0)))
           ))),
    ("RefineG_Transfer.refine_transfer",
     "[| RETURN ?fa <= ?Fa; !!x. RETURN (?fb x) <= ?Fb x |]
      ==> RETURN (case ?x of None => ?fa | Some x => ?fb x)
          <= (case ?x of None => ?Fa | Some x => ?Fb x)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 4),
          template_var 3),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| nres_of ?fa <= ?Fa; !!x. nres_of (?fb x) <= ?Fb x |]
      ==> nres_of (case ?x of None => ?fa | Some x => ?fb x)
          <= (case ?x of None => ?Fa | Some x => ?Fb x)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 4),
          template_var 3),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Refine_Basic.Sup_eq_RESE",
     "[| Sup ?A = RES ?B;
         !!C. [| ?A = RES ` C; ?B = \<Union> C |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Basic.specify_left",
     "[| ?m <= SPEC ?\<Phi>; !!x. ?\<Phi> x ==> ?f x <= ?M |]
      ==> ?m >>= ?f <= ?M",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 2))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_var 0))),
    ("Refine_Misc.if_mono",
     "[| ?b ==> ?m1.0 <= ?m1'; ~ ?b ==> ?m2.0 <= ?m2' |]
      ==> (if ?b then ?m1.0 else ?m2.0) <= (if ?b then ?m1' else ?m2')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 4)],
          template_inequation
           (less_equals, template_var 3, template_var 2)),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Refine.rel_fun_fun_rel_eq",
     "rel_fun (%x y. (x, y) : ?A) (%x y. (x, y) : ?B) =
      (%f g. (f, g) : ?A \<rightarrow> ?B)",
     template_equation
      (template_app (template_app (template_hole 9, t_empty), t_empty),
       t_empty)),
    ("Refine.rel_sum_sum_rel_eq",
     "rel_sum (%x y. (x, y) : ?A) (%x y. (x, y) : ?B) =
      (%f g. (f, g) : \<langle>?A, ?B\<rangle>sum_rel)",
     template_equation
      (template_app (template_app (template_hole 9, t_empty), t_empty),
       t_empty)),
    ("Refine.rel_prod_prod_rel_eq",
     "rel_prod (%x y. (x, y) : ?A) (%x y. (x, y) : ?B) =
      (%f g. (f, g) : ?A \<times>\<^sub>r ?B)",
     template_equation
      (template_app (template_app (template_hole 9, t_empty), t_empty),
       t_empty)),
    ("Refine_Basic.pw_nres_rel_iff",
     "((?a, ?b) : \<langle>?A\<rangle>nres_rel) =
      (nofail (\<Down> ?A ?b) -->
       nofail ?a & (ALL x. inres ?a x --> inres (\<Down> ?A ?b) x))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 1, t_empty))))),
    ("Refine.Sigma_param",
     "(Sigma, Sigma)
      : \<langle>?A\<rangle>set_rel \<rightarrow>
        (?A \<rightarrow> \<langle>?B\<rangle>set_rel) \<rightarrow>
        \<langle>?A \<times>\<^sub>r ?B\<rangle>set_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_hole 18)),
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 0)))),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 1)),
                   template_var 0)))))
         )),
    ("Refine.basic_param",
     "bijective ?A ==>
      ((``), (``))
      : \<langle>?A \<times>\<^sub>r ?B\<rangle>set_rel \<rightarrow>
        \<langle>?A\<rangle>set_rel \<rightarrow>
        \<langle>?B\<rangle>set_rel",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_hole 15)),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_var 1)),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))))
           ))),
    ("Refine_While.tailrec_transform_aux1",
     "RETURN ?s <= ?m ==>
      REC (%D s. sup (?a s >>= D) (?b s)) ?s
      <= lfp (%x. sup ?m (x >>= ?a)) >>= ?b",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 5, t_empty), template_var 3),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 0)))),
    ("Refine_Misc.case_prod_mono",
     "(!!a b. ?p = (a, b) ==> ?f a b <= ?f' a b) ==>
      (case ?p of (x, xa) => ?f x xa) <= (case ?p of (x, xa) => ?f' x xa)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Refine_Basic.prod_rule",
     "(!!a b. ?p = (a, b) ==> ?S a b <= SPEC ?\<Phi>) ==>
      (case ?p of (x, xa) => ?S x xa) <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Det.dres_ne_bot_RECT",
     "(!!f x. (!!x. f x ~= dSUCCEED) ==> ?B f x ~= dSUCCEED) ==>
      REC\<^sub>T ?B ?x ~= dSUCCEED",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Refine_Basic.refine2specI",
     "(nofail ?b ==> ?a <= SPEC (%r. EX x. inres ?b x & (r, x) : ?R)) ==>
      ?a <= \<Down> ?R ?b",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 9, template_var 2))],
          template_inequation
           (less_equals, template_var 1,
            template_app
             (template_hole 7, template_app (template_hole 6, t_empty))))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Refine_Misc.lfp_induct'",
     "[| mono ?f; !!m. [| m <= lfp ?f; m <= ?P |] ==> ?f m <= ?P |]
      ==> lfp ?f <= ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Refine_Basic.bind_cong",
     "[| ?m = ?m'; !!x. RETURN x <= ?m' ==> ?f x = ?f' x |]
      ==> ?m >>= ?f = ?m' >>= ?f'",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Det.dbind_mono",
     "[| ?M <= ?M'; !!x. dRETURN x <= ?M ==> ?f x <= ?f' x |]
      ==> ?M >>= ?f <= ?M' >>= ?f'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Basic.bind_mono",
     "[| ?M <= ?M'; !!x. RETURN x <= ?M ==> ?f x <= ?f' x |]
      ==> ?M >>= ?f <= ?M' >>= ?f'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine.stream_rel_intros",
     "[| (?x1.0, ?y1.0) : ?R;
         (?x2.0, ?y2.0) : \<langle>?R\<rangle>stream_rel |]
      ==> (?x1.0 ## ?x2.0, ?y1.0 ## ?y2.0)
          : \<langle>?R\<rangle>stream_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2))
           ))),
    ("Refine_Basic.pw_leI'",
     "[| nofail ?S' ==> nofail ?S;
         !!x. [| nofail ?S'; inres ?S x |] ==> inres ?S' x |]
      ==> ?S <= ?S'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 1))],
          template_predicate
           (template_app (template_hole 3, template_var 0))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Basic.RETURN_ref_SPECD",
     "[| RETURN ?c <= \<Down> ?R (SPEC ?\<Phi>);
         !!a. [| (?c, a) : ?R; ?\<Phi> a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Misc.mono_gfp_eqI",
     "[| mono ?f; ?a <= ?f ?a; !!x. ?f x = x ==> x <= ?a |]
      ==> gfp ?f = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_var 1, template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Misc.mono_lfp_eqI",
     "[| mono ?f; ?f ?a <= ?a; !!x. ?f x = x ==> ?a <= x |]
      ==> lfp ?f = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_var 1, template_var 0),
          template_var 0),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_While.pw_rwof_step'",
     "[| nofail (?step ?s); rwof ?m0.0 ?cond ?step ?s; ?cond ?s;
         inres (?step ?s) ?s' |]
      ==> rwof ?m0.0 ?cond ?step ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_var 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_var 1, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app (template_var 4, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Refine_Pfun.drec_admissible",
     "drec.admissible
       (%f. ALL x.
               ?P x -->
               f x ~= dFAIL & (ALL r. f x = dRETURN r --> ?Q x r))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app (template_hole 11, template_hole 10)),
             template_app (template_hole 9, template_hole 8)),
           t_empty)
         )),
    ("Refine_Det.less_eq_dres_split_conv",
     "(?a <= ?b) =
      (case (?a, ?b) of (dSUCCEEDi, xa) => True | (dFAILi, dFAILi) => True
       | (dFAILi, _) => False | (dRETURN aa, dSUCCEEDi) => False
       | (dRETURN aa, dFAILi) => True | (dRETURN aa, dRETURN b) => aa = b)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_While.WHILEI_lfp_conv",
     "?m >>= WHILE\<^bsup>?I\<^esup> ?c ?f =
      lfp (WHILEI_lfp_body ?I ?m ?c ?f) >>=
      (%s. ASSERT (?I s) >>= (%_. ASSUME (~ ?c s) >>= (%_. RETURN s)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 3),
                 template_var 1),
               template_var 0))),
         t_empty))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. ?xd1 a b <= ?y1 a b) ==>
      FOREACH\<^sub>O\<^sub>C\<^bsup>?x1,?xa1\<^esup> ?xb1 ?xc1 ?xd1 ?xe1
      <= FOREACH\<^sub>O\<^sub>C\<^bsup>?x1,?xa1\<^esup> ?xb1 ?xc1 ?y1
          ?xe1",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 6),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 5),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xc1 a b) (?y1 a b)) ==>
      flat_ge (FOREACH\<^sub>O\<^bsup>?x1,?xa1\<^esup> ?xb1 ?xc1 ?xd1)
       (FOREACH\<^sub>O\<^bsup>?x1,?xa1\<^esup> ?xb1 ?y1 ?xd1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 4),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xc1 a b) (?y1 a b)) ==>
      flat_ge (FOREACH\<^sub>C\<^bsup>?x1\<^esup> ?xa1 ?xb1 ?xc1 ?xd1)
       (FOREACH\<^sub>C\<^bsup>?x1\<^esup> ?xa1 ?xb1 ?y1 ?xd1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 5),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 4),
               template_var 0))
           ))),
    ("Refine_Basic.lhs_step_bind",
     "[| nofail ?m' ==> nofail ?m; !!x. nf_inres ?m x ==> ?f x <= ?m' |]
      ==> ?m >>= ?f <= ?m'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 5, template_var 2))],
          template_predicate
           (template_app (template_hole 4, template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), t_empty),
         template_var 2))),
    ("Refine_While.rwof_step",
     "[| nofail (?m0.0 >>= WHILE ?cond ?step); rwof ?m0.0 ?cond ?step ?s;
         ?cond ?s |]
      ==> ?step ?s <= SPEC (rwof ?m0.0 ?cond ?step)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1)))))),
    ("Refine_Det.dres_cases",
     "[| ?x = dSUCCEED ==> ?thesis; !!r. ?x = dRETURN r ==> ?thesis;
         ?x = dFAIL ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 3)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Refine_Misc.all_nat_split_at",
     "[| ALL i<?k. ?P i; ?P ?k; ALL i>?k. ?P i |] ==> ALL i. ?P i",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_var 0, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Refine_Foreach.nfoldli_foreach_shift",
     "nfoldli [?a..<?b] ?c ?f =
      nfoldli [?a + ?ofs..<?b + ?ofs] ?c
       (%x s. ASSERT (?ofs <= x) >>= (%_. ?f (x - ?ofs) s))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3)),
           template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 0)),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0))),
           template_var 2),
         t_empty))),
    ("Refine_Basic.pw_ref_iff",
     "(?S <= \<Down> ?R ?S') =
      (nofail ?S' -->
       nofail ?S &
       (ALL x. inres ?S x --> (EX s'. (x, s') : ?R & inres ?S' s')))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_app (template_hole 5, t_empty))))),
    ("Refine_Basic.bind_RES_RETURN2_eq",
     "RES ?X >>= (%(x, y). RETURN (?f x y)) =
      SPEC (%uu_. EX x y. uu_ = ?f x y & (x, y) : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 1)),
         template_app (template_hole 9, t_empty)),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("Refine_While.bounded_WHILE_shift",
     "?m >>=
      (%x. if ?cond x then bounded_WHILE ?n ?cond ?step (?step x)
           else RETURN x) =
      bounded_WHILE ?n ?cond ?step ?m >>=
      (%x. if ?cond x then ?step x else RETURN x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3), t_empty),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0),
             template_var 3)),
         t_empty))),
    ("Refine.list_rel_param",
     "(list_all2, list_all2)
      : (?Sa \<rightarrow> ?Sc \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?Sa\<rangle>list_rel \<rightarrow>
        \<langle>?Sc\<rangle>list_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app (template_hole 22, template_hole 21),
               template_hole 20)),
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_hole 14),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_var 0)),
                     template_hole 10)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0))),
                 template_hole 10))))
         )),
    ("Refine.basic_param",
     "(rel_option, rel_option)
      : (?Sa \<rightarrow> ?Sc \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?Sa\<rangle>option_rel \<rightarrow>
        \<langle>?Sc\<rangle>option_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app (template_hole 22, template_hole 21),
               template_hole 20)),
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_hole 14),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_var 0)),
                     template_hole 10)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0))),
                 template_hole 10))))
         )),
    ("Refine.stream_rel_param",
     "(stream_all2, stream_all2)
      : (?Sa \<rightarrow> ?Sc \<rightarrow> bool_rel) \<rightarrow>
        \<langle>?Sa\<rangle>stream_rel \<rightarrow>
        \<langle>?Sc\<rangle>stream_rel \<rightarrow> bool_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app (template_hole 22, template_hole 21),
               template_hole 20)),
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_hole 14),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_var 0)),
                     template_hole 10)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0))),
                 template_hole 10))))
         )),
    ("Refine.scan_param",
     "(scan, scan)
      : (?R2.0 \<rightarrow> ?R1.0 \<rightarrow> ?R1.0) \<rightarrow>
        \<langle>?R2.0\<rangle>list_rel \<rightarrow>
        ?R1.0 \<rightarrow> \<langle>?R1.0\<rangle>list_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app (template_hole 21, template_hole 20),
               template_hole 19)),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_hole 10),
                         template_var 0)),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)))))
         )),
    ("Refine.sscan_param",
     "(sscan, sscan)
      : (?R2.0 \<rightarrow> ?R1.0 \<rightarrow> ?R1.0) \<rightarrow>
        \<langle>?R2.0\<rangle>stream_rel \<rightarrow>
        ?R1.0 \<rightarrow> \<langle>?R1.0\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app (template_hole 21, template_hole 20),
               template_hole 19)),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app (template_hole 14, template_hole 13),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_hole 10),
                         template_var 0)),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)))))
         )),
    ("Refine_Basic.refine",
     "(!!a a'. (a, a') : ?A ==> (?f a, ?f' a') : ?B) ==>
      (?f, ?f') : ?A \<rightarrow> ?B",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 0))
           ))),
    ("Refine_Misc.chain_admissibleI",
     "(!!A. [| is_chain A; A ~= {}; ALL x:A. ?P x |] ==> ?P (Sup A)) ==>
      chain_admissible ?P",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_hole 6),
             template_var 0)
           ))),
    ("Refine_Misc.case_option_mono",
     "[| ?fn <= ?fn'; !!v. ?x = Some v ==> ?fs v <= ?fs' v |]
      ==> (case ?x of None => ?fn | Some x => ?fs x)
          <= (case ?x of None => ?fn' | Some x => ?fs' x)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("RefineG_Transfer.refine_transfer",
     "[| ?b ==> RETURN ?s1.0 <= ?S1.0; ~ ?b ==> RETURN ?s2.0 <= ?S2.0 |]
      ==> RETURN (if ?b then ?s1.0 else ?s2.0)
          <= (if ?b then ?S1.0 else ?S2.0)",
     template_implication
      ([template_implication
         ([template_predicate (template_var 4)],
          template_inequation
           (less_equals, template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_inequation
           (less_equals, template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| ?b ==> nres_of ?s1.0 <= ?S1.0; ~ ?b ==> nres_of ?s2.0 <= ?S2.0 |]
      ==> nres_of (if ?b then ?s1.0 else ?s2.0)
          <= (if ?b then ?S1.0 else ?S2.0)",
     template_implication
      ([template_implication
         ([template_predicate (template_var 4)],
          template_inequation
           (less_equals, template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_inequation
           (less_equals, template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Refine_Basic.if_rule",
     "[| ?b ==> ?S1.0 <= SPEC ?\<Phi>; ~ ?b ==> ?S2.0 <= SPEC ?\<Phi> |]
      ==> (if ?b then ?S1.0 else ?S2.0) <= SPEC ?\<Phi>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)))),
        template_implication
         ([template_negation (template_predicate (template_var 3))],
          template_inequation
           (less_equals, template_var 0,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 1))))),
    ("Refine_Leof.leof_If_rule",
     "[| ?c ==> ?t \<le>\<^sub>n SPEC ?\<Phi>;
         ~ ?c ==> ?e \<le>\<^sub>n SPEC ?\<Phi> |]
      ==> (if ?c then ?t else ?e) \<le>\<^sub>n SPEC ?\<Phi>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)))
              )),
        template_implication
         ([template_negation (template_predicate (template_var 3))],
          template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)))
           ))),
    ("Refine_Transfer.autoref_detI",
     "[| (?b, ?a) : \<langle>?R\<rangle>nres_rel; RETURN ?c <= ?b;
         ?c = detTAG ?d |]
      ==> (RETURN ?d, ?a) : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 4),
        template_equation
         (template_var 1, template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 2, template_var 0)),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2))
           ))),
    ("Refine_Misc.lfp_cadm_induct",
     "[| chain_admissible ?P; ?P (Sup {}); mono ?f;
         !!x. ?P x ==> ?P (?f x) |]
      ==> ?P (lfp ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 5, template_hole 3))
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_var 1, template_app (template_hole 0, template_var 0))
           ))),
    ("Refine_Foreach.nfoldli_by_idx",
     "nfoldli ?l ?c ?f ?s =
      nfoldli [0..<length ?l] ?c
       (%i s. ASSERT (i < length ?l) >>= (%_. let x = ?l ! i in ?f x s))
       ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_var 3))),
             template_var 2),
           t_empty),
         template_var 0))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!a b. flat_ge (?xd1 a b) (?y1 a b)) ==>
      flat_ge
       (FOREACH\<^sub>O\<^sub>C\<^bsup>?x1,?xa1\<^esup> ?xb1 ?xc1 ?xd1 ?xe1)
       (FOREACH\<^sub>O\<^sub>C\<^bsup>?x1,?xa1\<^esup> ?xb1 ?xc1 ?y1
         ?xe1)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 6),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 5),
               template_var 0))
           ))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!f g x. (!!x. f x <= g x) ==> ?B f x <= ?B g x) ==>
      monotone (fun_ord (<=)) (fun_ord (<=)) ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 3)),
               template_app (template_hole 0, template_hole 3)),
             template_var 0)
           ))),
    ("Refine_Basic.pw_ref_I",
     "nofail ?S' -->
      nofail ?S &
      (ALL x. inres ?S x --> (EX s'. (x, s') : ?R & inres ?S' s')) ==>
      ?S <= \<Down> ?R ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1)),
                template_app (template_hole 7, t_empty)))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("RefineG_Transfer.refine_transfer",
     "[| RETURN ?fn <= ?Fn; !!x xs. RETURN (?fc x xs) <= ?Fc x xs |]
      ==> RETURN (case ?l of [] => ?fn | x # xa => ?fc x xa)
          <= (case ?l of [] => ?Fn | x # xa => ?Fc x xa)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 4),
          template_var 3),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| nres_of ?fn <= ?Fn; !!x xs. nres_of (?fc x xs) <= ?Fc x xs |]
      ==> nres_of (case ?l of [] => ?fn | x # xa => ?fc x xa)
          <= (case ?l of [] => ?Fn | x # xa => ?Fc x xa)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 4),
          template_var 3),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_bind_leI",
     "[| nofail ?S ==> nofail ?M;
         !!x. [| nofail ?M; inres ?M x |] ==> ?f x <= ?S |]
      ==> ?M >>= ?f <= ?S",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 5, template_var 2))],
          template_predicate
           (template_app (template_hole 4, template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!l. RETURN (?fl l) <= ?Fl l; !!r. RETURN (?fr r) <= ?Fr r |]
      ==> RETURN (case ?x of Inl x => ?fl x | Inr x => ?fr x)
          <= (case ?x of Inl x => ?Fl x | Inr x => ?Fr x)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!l. nres_of (?fl l) <= ?Fl l; !!r. nres_of (?fr r) <= ?Fr r |]
      ==> nres_of (case ?x of Inl x => ?fl x | Inr x => ?fr x)
          <= (case ?x of Inl x => ?Fl x | Inr x => ?Fr x)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Refine_While.pw_rwof_step",
     "[| nofail (?m0.0 >>= WHILE ?cond ?step); rwof ?m0.0 ?cond ?step ?s;
         ?cond ?s; inres (?step ?s) ?s' |]
      ==> rwof ?m0.0 ?cond ?step ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app (template_var 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Refine_While.WHILE_refine_rwof",
     "(nofail (?m >>= WHILE ?c ?f) ==>
       ?mi <= SPEC (%s. rwof ?m ?c ?f s & ~ ?c s)) ==>
      ?mi <= ?m >>= WHILE ?c ?f",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1)))
               )],
          template_inequation
           (less_equals, template_var 0,
            template_app
             (template_hole 4, template_app (template_hole 3, t_empty))))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1))))),
    ("Refine_Basic.unused_bind_conv",
     "[| NO_MATCH (ASSERT ?\<Phi>) ?m; NO_MATCH (ASSUME ?\<Phi>) ?m |]
      ==> ?m >>= (%x. ?c) =
          ASSERT (nofail ?m) >>=
          (%_. ASSUME (EX x. inres ?m x) >>= (%x. ?c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 7,
               template_app (template_hole 2, template_var 1))),
           t_empty)))),
    ("Refine_Foreach.dres_foldli_ne_bot",
     "[| ?\<sigma> ~= dSUCCEED; !!x \<sigma>. ?f x \<sigma> ~= dSUCCEED |]
      ==> foldli ?l ?c (%x s. s >>= ?f x) ?\<sigma> ~= dSUCCEED",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 t_empty),
               template_var 3),
             template_hole 4)
           ))),
    ("Refine_Pfun.drec_bind_mono_pfun",
     "[| monotone drec.le_fun (<=) ?B;
         !!y. monotone drec.le_fun (<=) (?C y) |]
      ==> monotone drec.le_fun (<=) (%f. ?B f >>= (%y. ?C y f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5)),
                template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 6, template_hole 5)),
               template_hole 1),
             t_empty)
           ))),
    ("Refine_Pfun.bind_mono_pfun",
     "[| monotone nrec.le_fun (<=) ?B;
         !!y. monotone nrec.le_fun (<=) (?C y) |]
      ==> monotone nrec.le_fun (<=) (%f. ?B f >>= (%y. ?C y f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5)),
                template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 6, template_hole 5)),
               template_hole 1),
             t_empty)
           ))),
    ("Refine_Basic.bind_assert_refine",
     "[| ?m1.0 <= SPEC ?\<Phi>; !!x. ?\<Phi> x ==> ?m2.0 x <= ?m' |]
      ==> ?m1.0 >>= (%x. ASSERT (?\<Phi> x) >>= (%_. ?m2.0 x)) <= ?m'",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 2))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 3), t_empty),
         template_var 0))),
    ("Refine_Leof.sup_leof_rule",
     "[| [| nofail ?a; nofail ?b |] ==> ?a \<le>\<^sub>n ?m;
         [| nofail ?a; nofail ?b |] ==> ?b \<le>\<^sub>n ?m |]
      ==> sup ?a ?b \<le>\<^sub>n ?m",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 2, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 2, template_var 1))],
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)
                ))),
        template_implication
         ([template_predicate
            (template_app (template_hole 2, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 2, template_var 1))],
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Refine_Basic.return_refine_prop_return",
     "[| nofail ?m; RETURN ?x <= \<Down> ?R ?m;
         !!x'. [| (?x, x') : ?R; RETURN x' <= ?m |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 3)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Foreach.nfoldli_by_idx_gen",
     "nfoldli (drop ?k ?l) ?c ?f ?s =
      nfoldli [?k..<length ?l] ?c
       (%i s. ASSERT (i < length ?l) >>= (%_. let x = ?l ! i in ?f x s))
       ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_app (template_hole 5, template_var 3))),
             template_var 2),
           t_empty),
         template_var 0))),
    ("Refine.stream_param",
     "((=), (=)) : ?R \<rightarrow> ?R \<rightarrow> bool_rel ==>
      ((=), (=))
      : \<langle>?R\<rangle>stream_rel \<rightarrow>
        \<langle>?R\<rangle>stream_rel \<rightarrow> bool_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_hole 19)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app (template_hole 14, template_hole 13),
                      template_var 0)),
                  template_hole 12)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_hole 8)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 0))),
                 template_hole 12)))
           ))),
    ("Refine_Foreach.FOREACHci_weaken",
     "(!!it \<sigma>.
          [| it <= ?S; ?I it \<sigma> |] ==> ?I' it \<sigma>) ==>
      FOREACH\<^sub>C\<^bsup>?I'\<^esup> ?S ?c ?f ?\<sigma>0.0
      <= FOREACH\<^sub>C\<^bsup>?I\<^esup> ?S ?c ?f ?\<sigma>0.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 5),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 5),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_While.WHILE_rule_gen_le",
     "[| ?m0.0 <= ?I; !!s. [| RETURN s <= ?I; ?b s |] ==> ?f s <= ?I |]
      ==> ?m0.0 >>= WHILE ?b ?f <= filter_nb ?b ?I",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Refine_Foreach.LIST_FOREACH'_transfer_plain",
     "[| RETURN ?tsl <= ?tsl';
         !!x \<sigma>. RETURN (?f x \<sigma>) <= ?f' x \<sigma> |]
      ==> RETURN (foldli ?tsl ?c ?f ?\<sigma>)
          <= LIST_FOREACH' ?tsl' ?c ?f' ?\<sigma>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 5),
          template_var 4),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 2),
           template_var 0)))),
    ("Refine_Basic.param_op_nres_ASSERT_bnd",
     "[| ?\<Phi>' ==> ?\<Phi>;
         [| ?\<Phi>'; ?\<Phi> |]
         ==> (?m, ?m') : \<langle>?R\<rangle>nres_rel |]
      ==> (op_nres_ASSERT_bnd ?\<Phi> ?m, op_nres_ASSERT_bnd ?\<Phi>' ?m')
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_implication
         ([template_predicate (template_var 4)],
          template_predicate (template_var 3)),
        template_implication
         ([template_predicate (template_var 4)],
          template_implication
           ([template_predicate (template_var 3)],
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 0))
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0))
           ))),
    ("Refine_Basic.Let_refine'",
     "[| (?m, ?m') : ?R; (?m, ?m') : ?R ==> ?f ?m <= \<Down> ?S (?f' ?m') |]
      ==> Let ?m ?f <= \<Down> ?S (Let ?m' ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4)),
                 template_var 3)
               )],
          template_inequation
           (less_equals, template_app (template_var 2, template_var 5),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 4))))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0))))),
    ("Refine_Basic.inres_if",
     "[| inres (if ?P then ?Q else ?R) ?x; [| ?P; inres ?Q ?x |] ==> ?S;
         [| ~ ?P; inres ?R ?x |] ==> ?S |]
      ==> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_var 4)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Refine_Det.inf_dres_split_conv",
     "inf ?a ?b =
      (case (?a, ?b) of (dSUCCEEDi, dSUCCEEDi) => dSUCCEEDi
       | (dSUCCEEDi, _) => dSUCCEEDi | (dFAILi, xa) => xa
       | (dRETURN aa, dSUCCEEDi) => dSUCCEEDi
       | (dRETURN aa, dFAILi) => dRETURN aa
       | (dRETURN aa, dRETURN b) =>
           if aa = b then dRETURN b else dSUCCEEDi)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Det.sup_dres_split_conv",
     "sup ?a ?b =
      (case (?a, ?b) of (dSUCCEEDi, xa) => xa
       | (dFAILi, dSUCCEEDi) => dFAILi | (dFAILi, _) => dFAILi
       | (dRETURN aa, dSUCCEEDi) => dRETURN aa
       | (dRETURN aa, dFAILi) => dFAILi
       | (dRETURN aa, dRETURN b) => if aa = b then dRETURN b else dFAILi)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Misc.gfp_cadm_induct",
     "[| dual_chain_admissible ?P; ?P (Inf {}); mono ?f;
         !!x. ?P x ==> ?P (?f x) |]
      ==> ?P (gfp ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5), t_empty),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 5, template_hole 3))
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_var 1, template_app (template_hole 0, template_var 0))
           ))),
    ("Refine_While.WHILEI_tailrec_conv",
     "WHILE\<^bsup>?I\<^esup> ?c ?f =
      REC (tailrec_body
            (%s. ASSERT (?I s) >>= (%_. ASSUME (?c s) >>= (%_. ?f s)))
            (%s. ASSERT (?I s) >>=
                 (%_. ASSUME (~ ?c s) >>= (%_. RETURN s))))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 6,
         template_app (template_app (template_hole 5, t_empty), t_empty)))),
    ("Refine_While.WHILEIT_tailrec_conv",
     "WHILE\<^sub>T\<^bsup>?I\<^esup> ?c ?f =
      REC\<^sub>T
       (tailrec_body
         (%s. ASSERT (?I s) >>= (%_. ASSUME (?c s) >>= (%_. ?f s)))
         (%s. ASSERT (?I s) >>= (%_. ASSUME (~ ?c s) >>= (%_. RETURN s))))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 6,
         template_app (template_app (template_hole 5, t_empty), t_empty)))),
    ("Refine_Basic.autoref_ASSERT",
     "(?\<Phi> ==> (?m', ?m) : \<langle>?R\<rangle>nres_rel) ==>
      (?m',
       (Autoref_Tagging.OP (op_nres_ASSERT_bnd ?\<Phi>) :::
        \<langle>?R\<rangle>nres_rel \<rightarrow>
        \<langle>?R\<rangle>nres_rel) $
       ?m)
      : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 0))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 3))),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 0))))),
                   template_var 1))),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))
           ))),
    ("Refine_Foreach.FOREACHoci_weaken",
     "(!!it \<sigma>.
          [| it <= ?S; ?I it \<sigma> |] ==> ?I' it \<sigma>) ==>
      FOREACH\<^sub>O\<^sub>C\<^bsup>?RR,?I'\<^esup> ?S ?c ?f ?\<sigma>0.0
      <= FOREACH\<^sub>O\<^sub>C\<^bsup>?RR,?I\<^esup> ?S ?c ?f
          ?\<sigma>0.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 4),
                 template_var 6),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 5),
                 template_var 6),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Mono_Prover.refine_mono",
     "(!!f g x.
          (!!x. flat_ord ?b (f x) (g x)) ==>
          flat_ord ?b (?B f x) (?B g x)) ==>
      flatf_mono ?b ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 1))),
               template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 1))),
             template_var 0)
           ))),
    ("Refine_Misc.case_list_mono",
     "[| ?fn <= ?fn'; !!x xs. ?l = x # xs ==> ?fc x xs <= ?fc' x xs |]
      ==> (case ?l of [] => ?fn | x # xa => ?fc x xa)
          <= (case ?l of [] => ?fn' | x # xa => ?fc' x xa)",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2)))),
    ("Refine_Basic.intro_bind_refine",
     "[| ?m <= \<Down> ?R' (RETURN ?m');
         !!x. (x, ?m') : ?R' ==> ?f x <= \<Down> ?R ?m'' |]
      ==> ?m >>= ?f <= \<Down> ?R ?m''",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app (template_hole 6, template_var 3))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 5), t_empty),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Foreach.nfoldli_transfer_dres",
     "(!!x s. nres_of (?f x s) <= ?f' x s) ==>
      nres_of
       (foldli ?l (case_dres False False ?c) (%x s. s >>= ?f x)
         (dRETURN ?s))
      <= nfoldli ?l ?c ?f' ?s",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_hole 3),
                   template_var 1)),
               t_empty),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_var 0)))),
    ("Refine_Foreach.sum_impl_correct",
     "[| finite ?S; !!x. x : ?S ==> ?gi x <= SPEC (%r. r = ?g x) |]
      ==> sum_impl ?gi ?S <= SPEC (%r. r = sum ?g ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 2),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Refine.relcomp_trans_2",
     "[| (?f, ?g) : ?A\<^sub>1 \<rightarrow> ?B\<^sub>1;
         (?g, ?h) : ?A\<^sub>2 \<rightarrow> ?B\<^sub>2 |]
      ==> (?f, ?h)
          : ?A\<^sub>1 O ?A\<^sub>2 \<rightarrow> ?B\<^sub>1 O ?B\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_var 4)),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("Refine_Basic.SPEC_iff",
     "[| ?P <= SPEC (%s. ?Q s --> ?R s);
         ?P <= SPEC (%s. ~ ?Q s --> ~ ?R s) |]
      ==> ?P <= SPEC (%s. ?Q s = ?R s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 4, template_app (template_hole 3, t_empty))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 4, template_app (template_hole 3, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Refine_Basic.option_rule",
     "[| ?v = None ==> ?S1.0 <= SPEC ?\<Phi>;
         !!x. ?v = Some x ==> ?f2.0 x <= SPEC ?\<Phi> |]
      ==> (case ?v of None => ?S1.0 | Some x => ?f2.0 x) <= SPEC ?\<Phi>",
     template_implication
      ([template_implication
         ([template_equation (template_var 3, template_hole 6)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 1))))),
    ("Refine_Basic.rhs_step_bind",
     "[| ?m <= \<Down> ?R ?m'; inres ?m ?x;
         !!x'. (?x, x') : ?R ==> ?lhs <= \<Down> ?S (?f' x') |]
      ==> ?lhs <= \<Down> ?S (?m' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0))))),
    ("Refine_Basic.pw_REC_nofail",
     "nofail (REC ?B ?x) =
      (trimono ?B &
       (EX F. (ALL x.
                  nofail (F x) -->
                  nofail (?B F x) &
                  (ALL x'. inres (?B F x) x' --> inres (F x) x')) &
              nofail (F ?x)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_RECT_nofail",
     "nofail (REC\<^sub>T ?B ?x) =
      (trimono ?B &
       (ALL F.
           (ALL y.
               nofail (?B F y) -->
               nofail (F y) &
               (ALL x. inres (F y) x --> inres (?B F y) x)) -->
           nofail (F ?x)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Misc.dual_chain_admissibleI",
     "(!!A. [| is_dual_chain A; A ~= {}; ALL x:A. ?P x |]
            ==> ?P (Inf A)) ==>
      dual_chain_admissible ?P",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1), t_empty),
             template_var 0)
           ))),
    ("Refine_While.is_rwof_invarI",
     "[| ?m0.0 \<le>\<^sub>n SPEC ?I;
         !!s. [| rwof ?m0.0 ?cond ?step s; ?I s; ?cond s |]
              ==> ?step s \<le>\<^sub>n SPEC ?I |]
      ==> is_rwof_invar ?m0.0 ?cond ?step ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Refine_Basic.param_ASSERT_bind",
     "[| (?\<Phi>, ?\<Psi>) : bool_rel;
         [| ?\<Phi>; ?\<Psi> |]
         ==> (?f, ?g) : \<langle>?R\<rangle>nres_rel |]
      ==> (ASSERT ?\<Phi> >>= (%_. ?f), ASSERT ?\<Psi> >>= (%_. ?g))
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_hole 7)
            ),
        template_implication
         ([template_predicate (template_var 4)],
          template_implication
           ([template_predicate (template_var 3)],
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 0))
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 4)),
                     t_empty)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 1, template_var 3)),
                   t_empty))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0))
           ))),
    ("Refine_Basic.bind2let_refine",
     "[| RETURN ?x <= \<Down> ?R' ?M';
         !!x'. (?x, x') : ?R' ==> ?f ?x <= \<Down> ?R (?f' x') |]
      ==> Let ?x ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 5),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Leof.leof_option_rule",
     "[| ?v = None ==> ?S1.0 \<le>\<^sub>n SPEC ?\<Phi>;
         !!x. ?v = Some x ==> ?f2.0 x \<le>\<^sub>n SPEC ?\<Phi> |]
      ==> (case ?v of None => ?S1.0 | Some x => ?f2.0 x) \<le>\<^sub>n
          SPEC ?\<Phi>",
     template_implication
      ([template_implication
         ([template_equation (template_var 3, template_hole 6)],
          template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)))
              )),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2), t_empty),
                 template_var 3)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)))
           ))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!F f x.
            (!!x. nres_of (f x) <= F x) ==> nres_of (?b f x) <= ?B F x;
         trimono ?b |]
      ==> nres_of (REC ?b ?x) <= REC ?B ?x",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!F f x.
            (!!x. nres_of (f x) <= F x) ==> nres_of (?b f x) <= ?B F x;
         trimono ?b |]
      ==> nres_of (REC\<^sub>T ?b ?x) <= REC\<^sub>T ?B ?x",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_REC_inres",
     "inres (REC ?B ?x) ?x' =
      (trimono ?B -->
       (ALL F.
           (ALL x''.
               nofail (F x'') -->
               nofail (?B F x'') &
               (ALL x. inres (?B F x'') x --> inres (F x'') x)) -->
           inres (F ?x) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_RECT_inres",
     "inres (REC\<^sub>T ?B ?x) ?x' =
      (trimono ?B -->
       (EX M. (ALL y.
                  nofail (?B M y) -->
                  nofail (M y) &
                  (ALL x. inres (M y) x --> inres (?B M y) x)) &
              inres (M ?x) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Foreach.param_nfoldli",
     "(nfoldli, nfoldli)
      : \<langle>?Ra\<rangle>list_rel \<rightarrow>
        (?Rb \<rightarrow> bool_rel) \<rightarrow>
        (?Ra \<rightarrow>
         ?Rb \<rightarrow> \<langle>?Rb\<rangle>nres_rel) \<rightarrow>
        ?Rb \<rightarrow> \<langle>?Rb\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 26,
             template_app
              (template_app (template_hole 25, template_hole 24),
               template_hole 23)),
           template_app
            (template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_app
                  (template_app (template_hole 19, template_hole 18),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_var 0)),
                     template_hole 11))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_var 0)),
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 0))))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))))))
         )),
    ("Refine_Foreach.FOREACHoci_weaken_order",
     "(!!x y. [| x : ?S; y : ?S; ?RR x y |] ==> ?RR' x y) ==>
      FOREACH\<^sub>O\<^sub>C\<^bsup>?RR,?I\<^esup> ?S ?c ?f ?\<sigma>0.0
      <= FOREACH\<^sub>O\<^sub>C\<^bsup>?RR',?I\<^esup> ?S ?c ?f
          ?\<sigma>0.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3),
                 template_var 6),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 6),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Basic.bind2letRETURN_refine",
     "[| RETURN ?x <= \<Down> ?R' ?M';
         !!x'. (?x, x') : ?R' ==> RETURN (?f ?x) <= \<Down> ?R (?f' x') |]
      ==> RETURN (Let ?x ?f) <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_var 5),
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Foreach.foldli_mono_dres",
     "(!!a x. ?f a x <= ?f' a x) ==>
      foldli ?l (case_dres False False ?c) (%x s. s >>= ?f x) ?\<sigma>
      <= foldli ?l (case_dres False False ?c) (%x s. s >>= ?f' x)
          ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 1),
                 template_var 1)),
             t_empty),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 1),
                 template_var 1)),
             t_empty),
           template_var 0)))),
    ("Refine.stream_rel_coinduct'",
     "[| ?R ?u ?v;
         !!a u b v. ?R (a ## u) (b ## v) ==> (a, b) : ?P & ?R u v |]
      ==> (?u, ?v) : \<langle>?P\<rangle>stream_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Refine_Basic.autoref_ASSUME",
     "[| SIDE_PRECOND ?\<Phi>;
         ?\<Phi> ==> (?m', ?m) : \<langle>?R\<rangle>nres_rel |]
      ==> (?m',
           (Autoref_Tagging.OP (op_nres_ASSUME_bnd ?\<Phi>) :::
            \<langle>?R\<rangle>nres_rel \<rightarrow>
            \<langle>?R\<rangle>nres_rel) $
           ?m)
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 3)))
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 0))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 3))),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 0))))),
                   template_var 1))),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))
           ))),
    ("Refine_Basic.bind_refine",
     "[| ?M <= \<Down> ?R' ?M';
         !!x x'. (x, x') : ?R' ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.Let_refine",
     "[| (?m, ?m') : ?R';
         !!x x'. (x, x') : ?R' ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> Let ?m ?f <= \<Down> ?R (Let ?m' ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4), t_empty))))),
    ("Refine_Basic.add_invar_refineI",
     "[| ?f ?x <= \<Down> ?R (?f' ?x');
         nofail (?f ?x) ==> ?f ?x <= SPEC ?I |]
      ==> ?f ?x <= \<Down> {(c, a). (c, a) : ?R & ?I c} (?f' ?x')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 5, template_var 4),
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app (template_var 2, template_var 1))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 7,
                 template_app (template_var 5, template_var 4))
               )],
          template_inequation
           (less_equals, template_app (template_var 5, template_var 4),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))))],
       template_inequation
        (less_equals, template_app (template_var 5, template_var 4),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))),
           template_app (template_var 2, template_var 1))))),
    ("Refine_Basic.param_RECT",
     "[| (?B, ?B')
         : (?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
           ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel;
         trimono ?B |]
      ==> (REC\<^sub>T ?B, REC\<^sub>T ?B')
          : ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_var 0)))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 0))))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_app (template_hole 0, template_var 2))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 1)),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)))
           ))),
    ("Refine_While.rwof_step_refine",
     "[| nofail (?m0.0 >>= WHILE ?cond ?step); rwof ?m0.0 ?cond ?step' ?s;
         !!s. [| rwof ?m0.0 ?cond ?step s; ?cond s |]
              ==> ?step' s \<le>\<^sub>n ?step s |]
      ==> rwof ?m0.0 ?cond ?step ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Refine_Foreach.LIST_FOREACH'_param",
     "(LIST_FOREACH', LIST_FOREACH')
      : \<langle>\<langle>?Rv\<rangle>list_rel\<rangle>nres_rel \<rightarrow>
        (?R\<sigma> \<rightarrow> bool_rel) \<rightarrow>
        (?Rv \<rightarrow>
         ?R\<sigma> \<rightarrow>
         \<langle>?R\<sigma>\<rangle>nres_rel) \<rightarrow>
        ?R\<sigma> \<rightarrow> \<langle>?R\<sigma>\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 28,
             template_app
              (template_app (template_hole 27, template_hole 26),
               template_hole 25)),
           template_app
            (template_app
              (template_hole 24,
               template_app
                (template_app (template_hole 23, template_hole 22),
                 template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_app
                    (template_app (template_hole 19, template_hole 18),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_var 0)),
                     template_hole 11))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_var 0)),
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 0))))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))))))
         )),
    ("Refine_Basic.let2bind_refine",
     "[| ?m <= \<Down> ?R' (RETURN ?m');
         !!x x'. (x, x') : ?R' ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?m >>= ?f <= \<Down> ?R (Let ?m' ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app (template_hole 8, template_var 3))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.if_bind_cond_refine",
     "[| ?ci <= RETURN ?b; ?b ==> ?ti <= \<Down> ?R ?t;
         ~ ?b ==> ?ei <= \<Down> ?R ?e |]
      ==> ?ci >>= (%b. if b then ?ti else ?ei)
          <= \<Down> ?R (if ?b then ?t else ?e)",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 6, template_var 5)),
        template_implication
         ([template_predicate (template_var 5)],
          template_inequation
           (less_equals, template_var 4,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2))),
        template_implication
         ([template_negation (template_predicate (template_var 5))],
          template_inequation
           (less_equals, template_var 1,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 6), t_empty),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0))))),
    ("Refine_While.establish_rwof_invar",
     "[| ?m0.0 \<le>\<^sub>n SPEC ?I;
         !!s. [| rwof ?m0.0 ?cond ?step s; ?I s; ?cond s |]
              ==> ?step s \<le>\<^sub>n SPEC ?I;
         rwof ?m0.0 ?cond ?step ?s |]
      ==> ?I ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)))
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_var 3, template_var 0)))),
    ("Refine_Foreach.LIST_FOREACH_autoref",
     "(LIST_FOREACH', LIST_FOREACH ?\<Phi>)
      : \<langle>\<langle>?Rv\<rangle>list_rel\<rangle>nres_rel \<rightarrow>
        (?R\<sigma> \<rightarrow> bool_rel) \<rightarrow>
        (?Rv \<rightarrow>
         ?R\<sigma> \<rightarrow>
         \<langle>?R\<sigma>\<rangle>nres_rel) \<rightarrow>
        ?R\<sigma> \<rightarrow> \<langle>?R\<sigma>\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 28,
             template_app
              (template_app (template_hole 27, template_hole 26),
               template_app (template_hole 25, template_var 2))),
           template_app
            (template_app
              (template_hole 24,
               template_app
                (template_app (template_hole 23, template_hole 22),
                 template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_app
                    (template_app (template_hole 19, template_hole 18),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_var 0)),
                     template_hole 11))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_var 0)),
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 0))))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0))))))
         )),
    ("Refine_Foreach.foldli_mono_dres_flat",
     "(!!a x. flat_ge (?f a x) (?f' a x)) ==>
      flat_ge
       (foldli ?l (case_dres False False ?c) (%x s. s >>= ?f x) ?\<sigma>)
       (foldli ?l (case_dres False False ?c) (%x s. s >>= ?f' x)
         ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_hole 1),
                       template_var 1)),
                   t_empty),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 1),
                     template_var 1)),
                 t_empty),
               template_var 0))
           ))),
    ("Refine_Basic.bind_sim_select_rule",
     "[| ?m >>= ?f' <= SPEC ?\<Psi>;
         !!x. [| nofail ?m; inres ?m x; ?f' x <= SPEC ?\<Psi> |]
              ==> ?f x <= SPEC ?\<Phi> |]
      ==> ?m >>= ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 4), template_var 3),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 2))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!x. ?fr x = ?b ?fr x;
         !!F f x.
            (!!x. RETURN (f x) <= F x) ==> RETURN (?b f x) <= ?B F x |]
      ==> RETURN (?fr ?x) <= REC\<^sub>T ?B ?x",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_var 3, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!x. ?fr x = ?b ?fr x;
         !!F f x.
            (!!x. nres_of (f x) <= F x) ==> nres_of (?b f x) <= ?B F x |]
      ==> nres_of (?fr ?x) <= REC\<^sub>T ?B ?x",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_var 3, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Foreach.LIST_FOREACH'_transfer_nres",
     "[| nres_of ?tsl <= ?tsl';
         !!x \<sigma>. nres_of (?f x \<sigma>) <= ?f' x \<sigma> |]
      ==> nres_of
           (?tsl >>=
            (%xs. foldli xs (case_dres False False ?c) (%x s. s >>= ?f x)
                   (dRETURN ?\<sigma>)))
          <= LIST_FOREACH' ?tsl' ?c ?f' ?\<sigma>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 5),
          template_var 4),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 5), t_empty)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 2),
           template_var 0)))),
    ("Refine_Basic.bind_Let_refine2",
     "[| ?m' <= \<Down> ?R' (RETURN ?x);
         !!x'. [| inres ?m' x'; (x', ?x) : ?R' |]
               ==> ?f' x' <= \<Down> ?R (?f ?x) |]
      ==> ?m' >>= ?f' <= \<Down> ?R (Let ?x ?f)",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app (template_hole 8, template_var 3))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.if_refine",
     "[| ?b = ?b'; [| ?b; ?b' |] ==> ?S1.0 <= \<Down> ?R ?S1';
         [| ~ ?b; ~ ?b' |] ==> ?S2.0 <= \<Down> ?R ?S2' |]
      ==> (if ?b then ?S1.0 else ?S2.0)
          <= \<Down> ?R (if ?b' then ?S1' else ?S2')",
     template_implication
      ([template_equation (template_var 6, template_var 5),
        template_implication
         ([template_predicate (template_var 6)],
          template_implication
           ([template_predicate (template_var 5)],
            template_inequation
             (less_equals, template_var 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2)))),
        template_implication
         ([template_negation (template_predicate (template_var 6))],
          template_implication
           ([template_negation (template_predicate (template_var 5))],
            template_inequation
             (less_equals, template_var 1,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_var 4),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0))))),
    ("Refine.stream_rel_param",
     "(corec_stream, corec_stream)
      : (?S \<rightarrow> ?R) \<rightarrow>
        (?S \<rightarrow> bool_rel) \<rightarrow>
        (?S \<rightarrow> \<langle>?R\<rangle>stream_rel) \<rightarrow>
        (?S \<rightarrow> ?S) \<rightarrow>
        ?S \<rightarrow> \<langle>?R\<rangle>stream_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 30,
             template_app
              (template_app (template_hole 29, template_hole 28),
               template_hole 27)),
           template_app
            (template_app
              (template_hole 26,
               template_app
                (template_app (template_hole 25, template_hole 24),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 22, template_hole 21),
                       template_var 1)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 20,
                 template_app
                  (template_app (template_hole 19, template_hole 18),
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_var 1)),
                     template_hole 14))),
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_hole 11),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_hole 1, template_hole 0),
                             template_var 1)),
                         template_var 1))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 0)))))))
         )),
    ("Refine_Foreach.map_sigma_foreach",
     "[| finite ?A; !!x. x : ?A ==> finite (?B x) |]
      ==> FOREACH ?A
           (%a. FOREACH (?B a)
                 (%b \<sigma>. RETURN (insert (?f (a, b)) \<sigma>)))
           ?R0.0
          <= SPEC ((=) (?R0.0 Un ?f ` Sigma ?A ?B))",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 10, template_var 3), t_empty),
           template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2))))))))),
    ("Refine_Basic.bind_refine_abs'",
     "[| ?M <= \<Down> ?R' ?M';
         !!x x'.
            [| (x, x') : ?R'; nf_inres ?M' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_While.bounded_WHILE_FAIL_rwof",
     "[| bounded_WHILE ?n ?cond ?step ?m0.0 = FAIL; ?m0.0 ~= FAIL |]
      ==> EX n'<?n.
             EX x X.
                bounded_WHILE n' ?cond ?step ?m0.0 = RES X &
                x : X & ?cond x & ?step x = FAIL",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0),
          template_hole 8),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Refine_Basic.refine_vcg",
     "[| ?I ?s; !!s. [| ?I s; ?b s |] ==> ?f s <= SPEC ?I;
         !!s. [| ?I s; ~ ?b s |] ==> ?\<Phi> s |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?s <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_var 4, template_var 3)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.bind_refine_RES",
     "[| ?M <= \<Down> ?R' (RES ?X');
         !!x x'.
            [| (x, x') : ?R'; x' : ?X' |] ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (RES ?X' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 10, template_var 4),
            template_app (template_hole 9, template_var 3))),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 9, template_var 3)),
             t_empty))))),
    ("Refine_Basic.bind_refine_RES",
     "[| RES ?X <= \<Down> ?R' ?M';
         !!x x'.
            [| (x, x') : ?R'; x : ?X |] ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> RES ?X >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 10, template_var 5)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.if_RETURN_refine",
     "[| ?b = ?b'; [| ?b; ?b' |] ==> RETURN ?S1.0 <= \<Down> ?R ?S1';
         [| ~ ?b; ~ ?b' |] ==> RETURN ?S2.0 <= \<Down> ?R ?S2' |]
      ==> RETURN (if ?b then ?S1.0 else ?S2.0)
          <= \<Down> ?R (if ?b' then ?S1' else ?S2')",
     template_implication
      ([template_equation (template_var 6, template_var 5),
        template_implication
         ([template_predicate (template_var 6)],
          template_implication
           ([template_predicate (template_var 5)],
            template_inequation
             (less_equals, template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2)))),
        template_implication
         ([template_negation (template_predicate (template_var 6))],
          template_implication
           ([template_negation (template_predicate (template_var 5))],
            template_inequation
             (less_equals, template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0))))),
    ("Refine.relcomp_trans_3",
     "[| (?f, ?g)
         : ?A\<^sub>1 \<rightarrow> ?B\<^sub>1 \<rightarrow> ?C\<^sub>1;
         (?g, ?h)
         : ?A\<^sub>2 \<rightarrow> ?B\<^sub>2 \<rightarrow> ?C\<^sub>2 |]
      ==> (?f, ?h)
          : ?A\<^sub>1 O ?A\<^sub>2 \<rightarrow>
            ?B\<^sub>1 O ?B\<^sub>2 \<rightarrow> ?C\<^sub>1 O ?C\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app (template_hole 23, template_hole 22),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_app (template_hole 20, template_hole 19),
                      template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 7),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0))))
           ))),
    ("RefineG_Recursion.REC_rule",
     "[| trimono ?body; ?pre ?x;
         !!f x.
            [| !!x. ?pre x ==> f x <= ?M x; ?pre x; f <= REC ?body |]
            ==> ?body f x <= ?M x |]
      ==> REC ?body ?x <= ?M ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Refine_Basic.prod2_rule",
     "(!!a b c d.
          [| ?ab = (a, b); ?cd = (c, d) |]
          ==> ?f a b c d <= SPEC ?\<Phi>) ==>
      (case ?ab of (a, b) => %(c, d). ?f a b c d) ?cd <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 3),
           template_var 2),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine.stream_rel_cases",
     "[| (?a, ?b) : \<langle>?R\<rangle>stream_rel;
         !!x1a x2a y1a y2a.
            [| ?a = x1a ## x2a; ?b = y1a ## y2a; (x1a, y1a) : ?R;
               (x2a, y2a) : \<langle>?R\<rangle>stream_rel |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Misc.lfp_gen_induct",
     "[| mono ?f; ?m0.0 <= ?P;
         !!m. [| m <= lfp (%s. sup ?m0.0 (?f s)); m <= ?P;
                 ?f m <= lfp (%s. sup ?m0.0 (?f s)) |]
              ==> ?f m <= ?P |]
      ==> lfp (%s. sup ?m0.0 (?f s)) <= ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, t_empty),
         template_var 0))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!s. RETURN (?fn s) <= ?fn' s;
         !!n rec rec' s.
            (!!s. RETURN (rec s) <= rec' s) ==>
            RETURN (?fs n rec s) <= ?fs' n rec' s |]
      ==> RETURN (rec_nat ?fn ?fs ?n ?s) <= rec_nat ?fn' ?fs' ?n ?s",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!s. nres_of (?fn s) <= ?fn' s;
         !!n rec rec' s.
            (!!s. nres_of (rec s) <= rec' s) ==>
            nres_of (?fs n rec s) <= ?fs' n rec' s |]
      ==> nres_of (rec_nat ?fn ?fs ?n ?s) <= rec_nat ?fn' ?fs' ?n ?s",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_While.rwof_WHILE_rule",
     "[| ?m0.0 <= SPEC ?I;
         !!s. [| rwof ?m0.0 ?cond ?step s; ?I s; ?cond s |]
              ==> ?step s <= SPEC ?I |]
      ==> ?m0.0 >>= WHILE ?cond ?step
          <= SPEC (%s. rwof ?m0.0 ?cond ?step s & ~ ?cond s & ?I s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 2))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("Refine_While.msii_induct",
     "[| ?m0.0 <= ?P;
         !!m. [| m <= msii ?I ?m0.0 ?c ?f; m <= ?P;
                 filter_ASSUME ?c (filter_ASSERT ?I m) >>= ?f
                 <= msii ?I ?m0.0 ?c ?f |]
              ==> filter_ASSUME ?c (filter_ASSERT ?I m) >>= ?f <= ?P |]
      ==> msii ?I ?m0.0 ?c ?f <= ?P",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 4),
             template_var 1),
           template_var 0),
         template_var 3))),
    ("Refine_Basic.bind_refine_RES",
     "[| RES ?X <= \<Down> ?R' (RES ?X');
         !!x x'.
            [| (x, x') : ?R'; x : ?X; x' : ?X' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> RES ?X >>= ?f <= \<Down> ?R (RES ?X' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 5),
          template_app
           (template_app (template_hole 11, template_var 4),
            template_app (template_hole 10, template_var 3))),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 12, template_var 5)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 10, template_var 3)),
             t_empty))))),
    ("RefineG_Domain.flatf_fp_mono",
     "[| flatf_mono ?b ?f; flatf_mono ?b ?g;
         !!Z x. flat_ord ?b (?f Z x) (?g Z x) |]
      ==> flat_ord ?b (flatf_fp ?b ?f ?x) (flatf_fp ?b ?g ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 3))),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 3))),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 3))),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 3))),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 3))),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 3))),
                 template_var 1),
               template_var 0))
           ))),
    ("Refine_Foreach.foldli_mono_dres_aux2",
     "[| !!x. ?f x dSUCCEED = dSUCCEED; !!x. ?f' x dFAIL = dFAIL;
         !!a x x'. x <= x' ==> ?f a x <= ?f' a x' |]
      ==> foldli ?l (case_dres False False ?c) ?f ?\<sigma>
          <= foldli ?l (case_dres False False ?c) ?f' ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 0),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 0),
                 template_var 1)),
             template_var 3),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!s. RETURN (?fn s) <= ?fn' s;
         !!x l rec rec' s.
            (!!s. RETURN (rec s) <= rec' s) ==>
            RETURN (?fc x l rec s) <= ?fc' x l rec' s |]
      ==> RETURN (rec_list ?fn ?fc ?l ?s) <= rec_list ?fn' ?fc' ?l ?s",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("RefineG_Transfer.refine_transfer",
     "[| !!s. nres_of (?fn s) <= ?fn' s;
         !!x l rec rec' s.
            (!!s. nres_of (rec s) <= rec' s) ==>
            nres_of (?fc x l rec s) <= ?fc' x l rec' s |]
      ==> nres_of (rec_list ?fn ?fc ?l ?s) <= rec_list ?fn' ?fc' ?l ?s",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Basic.REC_le_rule",
     "[| trimono ?body; (?x, ?x') : ?R;
         !!f x x'.
            [| !!x x'. (x, x') : ?R ==> f x <= ?M x'; (x, x') : ?R |]
            ==> ?body f x <= ?M x' |]
      ==> REC ?body ?x <= ?M ?x'",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 3),
         template_app (template_var 0, template_var 2)))),
    ("Refine_Leof.RECT_rule_leof",
     "[| wf ?V; ?pre ?x;
         !!f x.
            [| !!x'. [| ?pre x'; (x', x) : ?V |]
                     ==> f x' \<le>\<^sub>n ?M x';
               ?pre x; REC\<^sub>T ?body = f |]
            ==> ?body f x \<le>\<^sub>n ?M x |]
      ==> REC\<^sub>T ?body ?x \<le>\<^sub>n ?M ?x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate (template_app (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_var 1, template_var 2))
           ))),
    ("Refine_Basic.bind_refine'",
     "[| ?M <= \<Down> ?R' ?M';
         !!x x'.
            [| (x, x') : ?R'; inres ?M x; inres ?M' x'; nofail ?M;
               nofail ?M' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 12, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.refine_vcg",
     "[| wf ?R; ?I ?s;
         !!s. [| ?I s; ?b s |] ==> ?f s <= SPEC (%s'. ?I s' & (s', s) : ?R);
         !!s. [| ?I s; ~ ?b s |] ==> ?\<Phi> s |]
      ==> WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?s <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate (template_app (template_var 4, template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))))),
    ("Refine_While.WHILE_le_rule",
     "[| (?s, ?s') : ?R;
         !!W s s'.
            [| !!s s'. (s, s') : ?R ==> W s <= ?M s'; (s, s') : ?R |]
            ==> (if ?b s then ?f s >>= W else RETURN s) <= ?M s' |]
      ==> WHILE ?b ?f ?s <= ?M ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 5),
         template_app (template_var 2, template_var 4)))),
    ("RefineG_Recursion.REC_rule_arb",
     "[| trimono ?body; ?pre ?arb ?x;
         !!f arb x.
            [| !!arb' x. ?pre arb' x ==> f x <= ?M arb' x; ?pre arb x;
               f <= REC ?body |]
            ==> ?body f x <= ?M arb x |]
      ==> REC ?body ?x <= ?M ?arb ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 1),
         template_app
          (template_app (template_var 0, template_var 2),
           template_var 1)))),
    ("Refine_Foreach.LFO_pre_refine",
     "[| (?li, ?l) : \<langle>?A\<rangle>list_set_rel;
         (?ci, ?c) : ?R \<rightarrow> bool_rel;
         (?fi, ?f)
         : ?A \<rightarrow> ?R \<rightarrow> \<langle>?R\<rangle>nres_rel;
         (?s0i, ?s0.0) : ?R |]
      ==> LIST_FOREACH' (RETURN ?li) ?ci ?fi ?s0i
          <= \<Down> ?R (FOREACH\<^sub>C\<^bsup>?I\<^esup> ?l ?c ?f ?s0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 10),
                  template_var 9)),
              template_app
               (template_app (template_hole 24, template_hole 23),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_hole 18),
                    template_var 5)),
                template_hole 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_hole 9),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 10)),
               template_var 7),
             template_var 4),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 9),
                 template_var 6),
               template_var 3),
             template_var 1))))),
    ("RefineG_Recursion.RECT_rule",
     "[| trimono ?body; wf ?V; ?pre ?x;
         !!f x.
            [| !!x'. [| ?pre x'; (x', x) : ?V |] ==> f x' <= ?M x'; ?pre x;
               REC\<^sub>T ?body = f |]
            ==> ?body f x <= ?M x |]
      ==> REC\<^sub>T ?body ?x <= ?M ?x",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Refine_Foreach.LFO_refine",
     "[| (?li, ?l) : \<langle>?A\<rangle>list_set_rel;
         !!x xi s si.
            [| (xi, x) : ?A; (si, s) : ?R |]
            ==> ?fi xi si <= \<Down> ?R (?f x s);
         (?s0i, ?s0.0) : ?R |]
      ==> nfoldli ?li (%_. True) ?fi ?s0i
          <= \<Down> ?R (FOREACH ?l ?f ?s0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 7),
                  template_var 6)),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_var 5))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 7), t_empty),
             template_var 3),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 2),
             template_var 0))))),
    ("RefineG_Recursion.fp_compare",
     "[| flatf_mono ?b1.0 ?B; flatf_mono ?b2.0 ?B |]
      ==> flatf_fp ?b1.0 ?B ?x = flatf_fp ?b2.0 ?B ?x |
          flatf_fp ?b1.0 ?B ?x = ?b1.0 & flatf_fp ?b2.0 ?B ?x = ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 3))),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1))),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1))),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 3))),
                         template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 3))),
                       template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 1))),
                       template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 1))),
                     template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 1, template_var 3))),
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_var 3))),
                         template_var 2),
                       template_var 0)),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 1))),
                         template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 1))),
                       template_var 2),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("RefineG_Recursion.lfp_gfp_compare",
     "[| monotone flatf_le flatf_le ?B; monotone flatf_ge flatf_ge ?B |]
      ==> flatf_lfp ?B ?x = flatf_gfp ?B ?x |
          flatf_lfp ?B ?x = bot & flatf_gfp ?B ?x = top",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 6))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 6))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_hole 7))),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_hole 7))),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_hole 6))),
                       template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 6))),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 1, template_hole 7))),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8, template_hole 7))),
                         template_var 1),
                       template_var 0)),
                   template_hole 7)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_hole 6))),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_hole 6))),
                       template_var 1),
                     template_var 0)),
                 template_hole 6)))
           ))),
    ("Refine.relcomp_trans_4",
     "[| (?f, ?g)
         : ?A\<^sub>1 \<rightarrow>
           ?B\<^sub>1 \<rightarrow> ?C\<^sub>1 \<rightarrow> ?D\<^sub>1;
         (?g, ?h)
         : ?A\<^sub>2 \<rightarrow>
           ?B\<^sub>2 \<rightarrow> ?C\<^sub>2 \<rightarrow> ?D\<^sub>2 |]
      ==> (?f, ?h)
          : ?A\<^sub>1 O ?A\<^sub>2 \<rightarrow>
            ?B\<^sub>1 O ?B\<^sub>2 \<rightarrow>
            ?C\<^sub>1 O ?C\<^sub>2 \<rightarrow> ?D\<^sub>1 O ?D\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 36,
                template_app
                 (template_app (template_hole 35, template_var 10),
                  template_var 9)),
              template_app
               (template_app
                 (template_hole 34,
                  template_app
                   (template_app (template_hole 33, template_hole 32),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 31,
                    template_app
                     (template_app (template_hole 30, template_hole 29),
                      template_var 7)),
                  template_app
                   (template_app
                     (template_hole 28,
                      template_app
                       (template_app (template_hole 27, template_hole 26),
                        template_var 6)),
                    template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_var 9),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 23,
                  template_app
                   (template_app (template_hole 22, template_hole 21),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_app (template_hole 19, template_hole 18),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 16, template_hole 15),
                        template_var 1)),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 10),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app
                    (template_app (template_hole 9, template_var 8),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 1))),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 0)))))
           ))),
    ("RefineG_Recursion.REC_rule_arb2",
     "[| trimono ?body; ?pre ?arb ?arc ?x;
         !!f arb arc x.
            [| !!arb' arc' x'.
                  ?pre arb' arc' x' ==> f x' <= ?M arb' arc' x';
               ?pre arb arc x |]
            ==> ?body f x <= ?M arb arc x |]
      ==> REC ?body ?x <= ?M ?arb ?arc ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 5), template_var 1),
         template_app
          (template_app
            (template_app (template_var 0, template_var 3), template_var 2),
           template_var 1)))),
    ("Refine_Foreach.LFOi_refine",
     "[| (?li, ?l) : \<langle>?A\<rangle>list_set_rel;
         !!x xi s si.
            [| (xi, x) : ?A; (si, s) : ?R |]
            ==> ?fi xi si <= \<Down> ?R (?f x s);
         (?s0i, ?s0.0) : ?R |]
      ==> nfoldli ?li (%_. True) ?fi ?s0i
          <= \<Down> ?R (FOREACH\<^bsup>?I\<^esup> ?l ?f ?s0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 8),
                  template_var 7)),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_var 6))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 8), t_empty),
             template_var 4),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 7),
               template_var 3),
             template_var 1))))),
    ("Refine_Foreach.FOREACH_rule",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. ?I {} \<sigma> ==> ?P \<sigma> |]
      ==> FOREACH ?S ?f ?\<sigma>0.0 <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 4), template_var 2)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_var 2),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_var 0))))),
    ("RefineG_Domain.flat_ord_chain_cases",
     "[| Complete_Partial_Order.chain (flat_ord ?b) ?C; ?C = {} ==> ?thesis;
         ?C = {?b} ==> ?thesis; !!x. [| x ~= ?b; ?C = {x} |] ==> ?thesis;
         !!x. [| x ~= ?b; ?C = {?b, x} |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 4))],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_While.WHILE_refine",
     "[| (?x, ?x') : ?R; !!x x'. (x, x') : ?R ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> WHILE ?b ?f ?x <= \<Down> ?R (WHILE ?b' ?f' ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 5))))),
    ("Refine_While.WHILET_refine",
     "[| (?x, ?x') : ?R; !!x x'. (x, x') : ?R ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> WHILE\<^sub>T ?b ?f ?x <= \<Down> ?R (WHILE\<^sub>T ?b' ?f' ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 5))))),
    ("Refine_Foreach.FOREACHi_rule",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. ?I {} \<sigma> ==> ?P \<sigma> |]
      ==> FOREACH\<^bsup>?I\<^esup> ?S ?f ?\<sigma>0.0 <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 4), template_var 2)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4),
             template_var 1),
           template_var 2),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_var 0))))),
    ("Refine_Det.dres_Sup_chain_cases",
     "[| is_chain ?M; [| ?M <= {dSUCCEED}; Sup ?M = dSUCCEED |] ==> ?thesis;
         !!r. [| ?M <= {dSUCCEED, dRETURN r}; dRETURN r : ?M;
                 Sup ?M = dRETURN r |]
              ==> ?thesis;
         [| dFAIL : ?M; Sup ?M = dFAIL |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 1)
            ),
        template_implication
         ([template_inequation
            (less_equals, template_var 1,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_hole 6))],
          template_implication
           ([template_equation
              (template_app (template_hole 4, template_var 1),
               template_hole 7)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)
               )],
          template_implication
           ([template_equation
              (template_app (template_hole 4, template_var 1),
               template_hole 0)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Refine_Det.dres_Inf_chain_cases",
     "[| is_chain ?M; [| ?M <= {dFAIL}; Inf ?M = dFAIL |] ==> ?thesis;
         !!r. [| ?M <= {dFAIL, dRETURN r}; dRETURN r : ?M;
                 Inf ?M = dRETURN r |]
              ==> ?thesis;
         [| dSUCCEED : ?M; Inf ?M = dSUCCEED |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 1)
            ),
        template_implication
         ([template_inequation
            (less_equals, template_var 1,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_hole 6))],
          template_implication
           ([template_equation
              (template_app (template_hole 4, template_var 1),
               template_hole 7)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)
               )],
          template_implication
           ([template_equation
              (template_app (template_hole 4, template_var 1),
               template_hole 0)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Refine_While.WHILEI_le_rule",
     "[| (?s, ?s') : ?R;
         !!W s s'.
            [| !!s s'. (s, s') : ?R ==> W s <= ?M s'; (s, s') : ?R |]
            ==> ASSERT (?I s) >>=
                (%_. if ?b s then ?f s >>= W else RETURN s)
                <= ?M s' |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?s <= ?M ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 6),
         template_app (template_var 3, template_var 5)))),
    ("RefineG_Recursion.RECT_transfer_rel'",
     "[| trimono ?F; trimono ?F'; !!x. ?tr x top; ?P ?x ?x';
         !!D D' x x'.
            [| !!x x'. ?P x x' ==> ?tr (D x) (D' x'); ?P x x' |]
            ==> ?tr (?F D x) (?F' D' x') |]
      ==> ?tr (REC\<^sub>T ?F ?x) (REC\<^sub>T ?F' ?x')",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Refine_Basic.case_option_refine",
     "[| (?v, ?v') : \<langle>?Ra\<rangle>option_rel;
         [| ?v = None; ?v' = None |] ==> ?n <= \<Down> ?Rb ?n';
         !!x x'.
            [| ?v = Some x; ?v' = Some x'; (x, x') : ?Ra |]
            ==> ?f x <= \<Down> ?Rb (?f' x') |]
      ==> (case ?v of None => ?n | Some x => ?f x)
          <= \<Down> ?Rb (case ?v' of None => ?n' | Some x => ?f' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 7),
                  template_var 6)),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_var 5))
            ),
        template_implication
         ([template_equation (template_var 7, template_hole 12)],
          template_implication
           ([template_equation (template_var 6, template_hole 10)],
            template_inequation
             (less_equals, template_var 4,
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2)))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_var 7),
         template_app
          (template_app (template_hole 8, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_Misc.sim_wf",
     "[| wf (?S'^-1); (?x0.0, ?x0') : ?R;
         !!s s' t.
            [| (s, s') : ?R; (s, t) : ?S; (?x0', s') : ?S'^* |]
            ==> EX t'. (s', t') : ?S' & (t, t') : ?R;
         Domain ?S <= ?S^* `` {?x0.0} |]
      ==> wf (?S^-1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 19, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0)),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_hole 2)))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("RefineG_Recursion.RECT_rule_arb",
     "[| trimono ?body; wf ?V; ?pre ?arb ?x;
         !!f arb x.
            [| !!arb' x'.
                  [| ?pre arb' x'; (x', x) : ?V |] ==> f x' <= ?M arb' x';
               ?pre arb x; REC\<^sub>T ?body = f |]
            ==> ?body f x <= ?M arb x |]
      ==> REC\<^sub>T ?body ?x <= ?M ?arb ?x",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 5), template_var 1),
         template_app
          (template_app (template_var 0, template_var 2),
           template_var 1)))),
    ("Refine_While.WHILE_invisible_refine",
     "[| (?s, ?s') : ?R; !!s s'. [| (s, s') : ?R; ?b' s' |] ==> ?b s;
         !!s s'.
            [| (s, s') : ?R; ?b s |]
            ==> ?f s
                <= sup (\<Down> ?R (ASSUME (?b' s') >>= (%_. ?f' s')))
                    (\<Down> ?R (RETURN s')) |]
      ==> WHILE ?b ?f ?s <= \<Down> ?R (WHILE ?b' ?f' ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 5, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 5))))),
    ("RefineG_Domain.wf_fixp_induct",
     "[| ?fp ?B = ?B (?fp ?B); wf ?V; ?pre ?a ?x;
         !!f a x.
            [| !!a' x'.
                  [| ?pre a' x'; (x', x) : ?V |] ==> ?post a' x' (f x');
               ?fp ?B = f; ?pre a x |]
            ==> ?post a x (?B f x) |]
      ==> ?post ?a ?x (?fp ?B ?x)",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app
           (template_var 5, template_app (template_var 6, template_var 5))),
        template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 2),
               template_var 1),
             template_app
              (template_app (template_var 6, template_var 5),
               template_var 1))
           ))),
    ("RefineG_Recursion.RECT_transfer_rel",
     "[| trimono ?F; trimono ?F'; !!x. ?tr x top; ?P ?x ?x';
         !!D D' x x'.
            [| !!x x'. ?P x x' ==> ?tr (D x) (D' x'); ?P x x';
               REC\<^sub>T ?F = D |]
            ==> ?tr (?F D x) (?F' D' x') |]
      ==> ?tr (REC\<^sub>T ?F ?x) (REC\<^sub>T ?F' ?x')",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Refine_Basic.autoref_REC",
     "[| (?B, ?B')
         : (?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
           ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel;
         DEFER trimono ?B |]
      ==> (REC ?B,
           (Autoref_Tagging.OP REC :::
            ((?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
             ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
            ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) $
           ?B')
          : ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_hole 19),
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_hole 16),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 0)))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 17, template_hole 16),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 20, template_hole 19),
                                     template_app
(template_app
  (template_hole 18,
   template_app
    (template_app (template_hole 17, template_hole 16), template_var 1)),
 template_app
  (template_app (template_hole 15, template_hole 14), template_var 0)))),
                                 template_app
                                  (template_app
                                    (template_hole 18,
                                     template_app
(template_app (template_hole 17, template_hole 16), template_var 1)),
                                   template_app
                                    (template_app
(template_hole 15, template_hole 14),
                                     template_var 0))))),
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 17, template_hole 16),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 15, template_hole 14),
                               template_var 0)))))),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 17, template_hole 16),
                   template_var 1)),
               template_app
                (template_app (template_hole 15, template_hole 14),
                 template_var 0)))
           ))),
    ("Refine_Basic.autoref_RECT",
     "[| (?B, ?B')
         : (?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
           ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel;
         DEFER trimono ?B |]
      ==> (REC\<^sub>T ?B,
           (Autoref_Tagging.OP REC\<^sub>T :::
            ((?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
             ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
            ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) $
           ?B')
          : ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_hole 19),
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_hole 16),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 0)))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 17, template_hole 16),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 20, template_hole 19),
                                     template_app
(template_app
  (template_hole 18,
   template_app
    (template_app (template_hole 17, template_hole 16), template_var 1)),
 template_app
  (template_app (template_hole 15, template_hole 14), template_var 0)))),
                                 template_app
                                  (template_app
                                    (template_hole 18,
                                     template_app
(template_app (template_hole 17, template_hole 16), template_var 1)),
                                   template_app
                                    (template_app
(template_hole 15, template_hole 14),
                                     template_var 0))))),
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 17, template_hole 16),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 15, template_hole 14),
                               template_var 0)))))),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 17, template_hole 16),
                   template_var 1)),
               template_app
                (template_app (template_hole 15, template_hole 14),
                 template_var 0)))
           ))),
    ("RefineG_Recursion.REC_rule_arb3",
     "[| trimono ?body; ?pre ?arb ?arc ?ard ?x;
         !!f arb arc ard x.
            [| !!arb' arc' ard' x'.
                  ?pre arb' arc' ard' x' ==> f x' <= ?M arb' arc' ard' x';
               ?pre arb arc ard x |]
            ==> ?body f x <= ?M arb arc ard x |]
      ==> REC ?body ?x <= ?M ?arb ?arc ?ard ?x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 6), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_var 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("Refine_Basic.RECT_refine",
     "[| trimono ?body; (?x, ?x') : ?R;
         !!f f' x x'.
            [| !!x x'. (x, x') : ?R ==> f x <= \<Down> ?S (f' x');
               (x, x') : ?R |]
            ==> ?body f x <= \<Down> ?S (?body' f' x') |]
      ==> REC\<^sub>T ?body ?x <= \<Down> ?S (REC\<^sub>T ?body' ?x')",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, t_empty), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, t_empty), template_var 3))))),
    ("Refine_Basic.prod_case_refine",
     "[| (?p', ?p) : ?R1.0 \<times>\<^sub>r ?R2.0;
         !!x1' x2' x1 x2.
            [| ?p' = (x1', x2'); ?p = (x1, x2); (x1', x1) : ?R1.0;
               (x2', x2) : ?R2.0 |]
            ==> ?f' x1' x2' <= \<Down> ?R (?f x1 x2) |]
      ==> (case ?p' of (x1', x2') => ?f' x1' x2')
          <= \<Down> ?R (case ?p of (x1, x2) => ?f x1 x2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_var 4)),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, t_empty), template_var 6),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, t_empty), template_var 5))))),
    ("Refine.relcomp_trans_5",
     "[| (?f, ?g)
         : ?A\<^sub>1 \<rightarrow>
           ?B\<^sub>1 \<rightarrow>
           ?C\<^sub>1 \<rightarrow> ?D\<^sub>1 \<rightarrow> ?E\<^sub>1;
         (?g, ?h)
         : ?A\<^sub>2 \<rightarrow>
           ?B\<^sub>2 \<rightarrow>
           ?C\<^sub>2 \<rightarrow> ?D\<^sub>2 \<rightarrow> ?E\<^sub>2 |]
      ==> (?f, ?h)
          : ?A\<^sub>1 O ?A\<^sub>2 \<rightarrow>
            ?B\<^sub>1 O ?B\<^sub>2 \<rightarrow>
            ?C\<^sub>1 O ?C\<^sub>2 \<rightarrow>
            ?D\<^sub>1 O ?D\<^sub>2 \<rightarrow> ?E\<^sub>1 O ?E\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app (template_hole 45, template_var 12),
                  template_var 11)),
              template_app
               (template_app
                 (template_hole 44,
                  template_app
                   (template_app (template_hole 43, template_hole 42),
                    template_var 10)),
                template_app
                 (template_app
                   (template_hole 41,
                    template_app
                     (template_app (template_hole 40, template_hole 39),
                      template_var 9)),
                  template_app
                   (template_app
                     (template_hole 38,
                      template_app
                       (template_app (template_hole 37, template_hole 36),
                        template_var 8)),
                    template_app
                     (template_app
                       (template_hole 35,
                        template_app
                         (template_app (template_hole 34, template_hole 33),
                          template_var 7)),
                      template_var 6)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 32,
                template_app
                 (template_app (template_hole 31, template_var 11),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 30,
                  template_app
                   (template_app (template_hole 29, template_hole 28),
                    template_var 4)),
                template_app
                 (template_app
                   (template_hole 27,
                    template_app
                     (template_app (template_hole 26, template_hole 25),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 24,
                      template_app
                       (template_app (template_hole 23, template_hole 22),
                        template_var 2)),
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app (template_hole 20, template_hole 19),
                          template_var 1)),
                      template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_var 12),
                 template_var 5)),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_app
                    (template_app (template_hole 13, template_var 10),
                     template_var 4))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_app
                      (template_app (template_hole 9, template_var 9),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app
                        (template_app (template_hole 5, template_var 8),
                         template_var 2))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_app
                          (template_app (template_hole 1, template_var 7),
                           template_var 1))),
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 0))))))
           ))),
    ("Refine_While.WHILE_refine'",
     "[| ?I' ?x' ==> (?x, ?x') : ?R;
         !!x x'. [| (x, x') : ?R; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> WHILE ?b ?f ?x
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 7, template_var 6))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 6)),
                template_var 4)
              )),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 5),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_While.WHILET_refine'",
     "[| ?I' ?x' ==> (?x, ?x') : ?R;
         !!x x'. [| (x, x') : ?R; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> WHILE\<^sub>T ?b ?f ?x
          <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 7, template_var 6))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 6)),
                template_var 4)
              )),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 5),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_Foreach.nfoldli_refine",
     "[| (?li, ?l) : \<langle>?S\<rangle>list_rel; (?si, ?s) : ?R;
         (?ci, ?c) : ?R \<rightarrow> bool_rel;
         !!xi x si s.
            [| (xi, x) : ?S; (si, s) : ?R; ?c s |]
            ==> ?fi xi si <= \<Down> ?R (?f x s) |]
      ==> nfoldli ?li ?ci ?fi ?si <= \<Down> ?R (nfoldli ?l ?c ?f ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 9),
                  template_var 8)),
              template_app
               (template_app (template_hole 19, template_hole 18),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_var 4)),
                template_hole 10))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 9),
               template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 2),
               template_var 0),
             template_var 5))))),
    ("Refine_Foreach.map_sigma_sigma_foreach",
     "[| finite ?A; !!a. a : ?A ==> finite (?B a);
         !!a b. [| a : ?A; b : ?B a |] ==> finite (?C a b) |]
      ==> FOREACH ?A
           (%a. FOREACH (?B a)
                 (%b. FOREACH (?C a b)
                       (%c \<sigma>.
                           RETURN (insert (?f (a, b, c)) \<sigma>))))
           ?R0.0
          <= SPEC ((=) (?R0.0 Un ?f ` (SIGMA a:?A. Sigma (?B a) (?C a))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 4)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 13, template_var 4), t_empty),
           template_var 0),
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     t_empty))))))))),
    ("Refine_Basic.REC_refine",
     "[| trimono ?body; (?x, ?x') : ?R;
         !!f f' x x'.
            [| !!x x'. (x, x') : ?R ==> f x <= \<Down> ?S (f' x');
               (x, x') : ?R; REC ?body' = f' |]
            ==> ?body f x <= \<Down> ?S (?body' f' x') |]
      ==> REC ?body ?x <= \<Down> ?S (REC ?body' ?x')",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, t_empty), template_var 4),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 1, t_empty), template_var 3))))),
    ("RefineG_Recursion.RECT_rule_arb2",
     "[| trimono ?body; wf ?V; ?pre ?arb ?arc ?x;
         !!f arb arc x.
            [| !!arb' arc' x'.
                  [| ?pre arb' arc' x'; (x', x) : ?V |]
                  ==> f x' <= ?M arb' arc' x';
               ?pre arb arc x; f <= REC\<^sub>T ?body |]
            ==> ?body f x <= ?M arb arc x |]
      ==> REC\<^sub>T ?body ?x <= ?M ?arb ?arc ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 6)),
        template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 6), template_var 1),
         template_app
          (template_app
            (template_app (template_var 0, template_var 3), template_var 2),
           template_var 1)))),
    ("Refine_Foreach.LFOc_refine",
     "[| (?li, ?l) : \<langle>?A\<rangle>list_set_rel;
         !!s si. (si, s) : ?R ==> ?ci si = ?c s;
         !!x xi s si.
            [| (xi, x) : ?A; (si, s) : ?R |]
            ==> ?fi xi si <= \<Down> ?R (?f x s);
         (?s0i, ?s0.0) : ?R |]
      ==> nfoldli ?li ?ci ?fi ?s0i
          <= \<Down> ?R (FOREACH\<^sub>C ?l ?c ?f ?s0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 9),
                  template_var 8)),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_var 7))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_var 6)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 9),
               template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 6),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 4),
               template_var 2),
             template_var 0))))),
    ("Refine_Foreach.foldli_mono_dres_aux1",
     "[| !!\<sigma> \<sigma>'.
            [| \<sigma> <= \<sigma>'; ?c \<sigma> ~= ?c \<sigma>' |]
            ==> \<sigma> = bot | \<sigma>' = top;
         !!x. ?f x bot = bot; !!x. ?f' x top = top; ?\<sigma> <= ?\<sigma>';
         !!a x x'. x <= x' ==> ?f a x <= ?f' a x' |]
      ==> foldli ?l ?c ?f ?\<sigma> <= foldli ?l ?c ?f' ?\<sigma>'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 5),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 5),
             template_var 3),
           template_var 1)))),
    ("Refine_Foreach.LFOci_refine",
     "[| (?li, ?l) : \<langle>?A\<rangle>list_set_rel;
         !!s si. (si, s) : ?R ==> ?ci si = ?c s;
         !!x xi s si.
            [| (xi, x) : ?A; (si, s) : ?R |]
            ==> ?fi xi si <= \<Down> ?R (?f x s);
         (?s0i, ?s0.0) : ?R |]
      ==> nfoldli ?li ?ci ?fi ?s0i
          <= \<Down> ?R (FOREACH\<^sub>C\<^bsup>?I\<^esup> ?l ?c ?f ?s0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 10),
                  template_var 9)),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_var 8))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_var 7)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 10),
               template_var 6),
             template_var 4),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 7),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 9),
                 template_var 5),
               template_var 3),
             template_var 1))))),
    ("RefineG_Domain.flatf_fixp_transfer",
     "[| !!x'. ?tr ?b x'; flatf_mono ?b ?B; ?fp' = ?B' ?fp'; ?P ?x ?x';
         !!f f' x x'.
            [| !!x x'. ?P x x' ==> ?tr (f x) (f' x'); ?P x x'; ?fp' = f' |]
            ==> ?tr (?B f x) (?B' f' x') |]
      ==> ?tr (flatf_fp ?b ?B ?x) (?fp' ?x')",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 6))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 6))),
              template_var 5)
            ),
        template_equation
         (template_var 4, template_app (template_var 3, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 7,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 6))),
                     template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 6))),
                   template_var 5),
                 template_var 1)),
             template_app (template_var 4, template_var 0))
           ))),
    ("Refine_Basic.list_case_refine",
     "[| (?li, ?l) : \<langle>?S\<rangle>list_rel; ?fni <= \<Down> ?R ?fn;
         !!xi x xsi xs.
            [| (xi, x) : ?S; (xsi, xs) : \<langle>?S\<rangle>list_rel;
               ?li = xi # xsi; ?l = x # xs |]
            ==> ?fci xi xsi <= \<Down> ?R (?fc x xs) |]
      ==> (case ?li of [] => ?fni | xi # xsi => ?fci xi xsi)
          <= \<Down> ?R (case ?l of [] => ?fn | x # xs => ?fc x xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 7),
                  template_var 6)),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_var 5))
            ),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 12, template_var 3),
            template_var 2)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4), t_empty),
           template_var 7),
         template_app
          (template_app (template_hole 12, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2), t_empty),
             template_var 6))))),
    ("RefineG_Recursion.RECT_eq_REC_tproof",
     "[| trimono ?body; wf ?V; ?pre ?a ?x;
         !!f arb x.
            [| !!arb' x'.
                  [| ?pre arb' x'; (x', x) : ?V |] ==> f x' <= ?M arb' x';
               ?pre arb x; REC\<^sub>T ?body = f |]
            ==> ?body f x <= ?M arb x;
         ?M ?a ?x ~= top |]
      ==> REC\<^sub>T ?body ?x = REC ?body ?x &
          REC\<^sub>T ?body ?x <= ?M ?a ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 5)),
        template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_var 0, template_var 2),
                template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 5),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_var 0, template_var 2),
                 template_var 1)))
           ))),
    ("Refine_Foreach.FOREACHoi_rule",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma>; ALL y:it - {x}. ?R x y;
               ALL y:?S - it. ?R y x |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. ?I {} \<sigma> ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>O\<^bsup>?R,?I\<^esup> ?S ?f ?\<sigma>0.0
          <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 5), template_var 3)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 5),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("RefineG_Recursion.RECT_rule_arb3",
     "[| trimono ?body; wf ?V; ?pre ?arb ?arc ?ard ?x;
         !!f arb arc ard x.
            [| !!arb' arc' ard' x'.
                  [| ?pre arb' arc' ard' x'; (x', x) : ?V |]
                  ==> f x' <= ?M arb' arc' ard' x';
               ?pre arb arc ard x; f <= REC\<^sub>T ?body |]
            ==> ?body f x <= ?M arb arc ard x |]
      ==> REC\<^sub>T ?body ?x <= ?M ?arb ?arc ?ard ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 7)),
        template_predicate
         (template_app (template_hole 10, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 7), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_var 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("RefineG_Domain.flatf_fp_induct_pointwise",
     "[| !!a x. ?pre a x ==> ?post a x ?b; flatf_mono ?b ?B; ?pre ?a ?x;
         !!f a x.
            [| !!a' x'. ?pre a' x' ==> ?post a' x' (f x'); ?pre a x;
               flatf_ord ?b f (flatf_fp ?b ?B) |]
            ==> ?post a x (?B f x) |]
      ==> ?post ?a ?x (flatf_fp ?b ?B ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3))),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 4, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 3))),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 3))),
                 template_var 2),
               template_var 0))
           ))),
    ("Refine_Foreach.FOREACHc_refines_FOREACHcd",
     "[| finite ?s'; (?s', ?s) : \<langle>?S\<rangle>set_rel;
         single_valued ?S; (?\<sigma>', ?\<sigma>) : ?R;
         !!\<sigma>' \<sigma>.
            (\<sigma>', \<sigma>) : ?R ==>
            (?c' \<sigma>', ?c \<sigma>) : bool_rel;
         !!x' x \<sigma>' \<sigma>.
            [| (x', x) : ?S; (\<sigma>', \<sigma>) : ?R |]
            ==> ?f' x' \<sigma>' <= \<Down> ?R (?f x \<sigma>) |]
      ==> FOREACH\<^sub>C ?s' ?c' ?f' ?\<sigma>'
          <= \<Down> ?R (FOREACHcdi ?I ?s ?c ?f ?\<sigma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 10),
                  template_var 9)),
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_var 8))
            ),
        template_predicate
         (template_app (template_hole 15, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 10),
               template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 9),
                 template_var 3),
               template_var 1),
             template_var 6))))),
    ("Refine_Foreach.FOREACHcd_refine",
     "[| finite ?s'; (?s', ?s) : \<langle>?S\<rangle>set_rel;
         single_valued ?S; (?\<sigma>', ?\<sigma>) : ?R;
         !!\<sigma>' \<sigma>.
            (\<sigma>', \<sigma>) : ?R ==>
            (?c' \<sigma>', ?c \<sigma>) : bool_rel;
         !!x' x \<sigma>' \<sigma>.
            [| (x', x) : ?S; (\<sigma>', \<sigma>) : ?R |]
            ==> ?f' x' \<sigma>' <= \<Down> ?R (?f x \<sigma>) |]
      ==> FOREACHcd ?s' ?c' ?f' ?\<sigma>'
          <= \<Down> ?R (FOREACHcdi ?I ?s ?c ?f ?\<sigma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 10),
                  template_var 9)),
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_var 8))
            ),
        template_predicate
         (template_app (template_hole 15, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 10),
               template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 9),
                 template_var 3),
               template_var 1),
             template_var 6))))),
    ("Refine_While.WHILE_refine_genR",
     "[| (?x, ?x') : ?R'; !!x x'. (x, x') : ?R' ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R'; ?b x; ?b' x' |]
            ==> ?f x <= \<Down> ?R' (?f' x');
         !!x x'. [| (x, x') : ?R'; ~ ?b x; ~ ?b' x' |] ==> (x, x') : ?R |]
      ==> WHILE ?b ?f ?x <= \<Down> ?R (WHILE ?b' ?f' ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 6))))),
    ("Refine_While.WHILET_refine_genR",
     "[| (?x, ?x') : ?R'; !!x x'. (x, x') : ?R' ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R'; ?b x; ?b' x' |]
            ==> ?f x <= \<Down> ?R' (?f' x');
         !!x x'. [| (x, x') : ?R'; ~ ?b x; ~ ?b' x' |] ==> (x, x') : ?R |]
      ==> WHILE\<^sub>T ?b ?f ?x <= \<Down> ?R (WHILE\<^sub>T ?b' ?f' ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 6))))),
    ("Refine_Foreach.FOREACH_refine_rcg",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH ?S ?f ?\<sigma>0.0
          <= \<Down> ?R (FOREACH ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 7),
              template_var 6)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 17, template_var 7),
            template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_var 1),
           template_var 4),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0),
             template_var 3))))),
    ("RefineG_Recursion.lfp_induct_pointwise",
     "[| !!a x.
            chain_admissible (%b. ALL a x. ?pre a x --> ?post a x (b x));
         !!a x. ?pre a x --> ?post a x bot; mono ?B; ?pre ?a ?x;
         !!f a x.
            [| !!a' x'. ?pre a' x' ==> ?post a' x' (f x'); ?pre a x;
               f <= lfp ?B |]
            ==> ?post a x (?B f x) |]
      ==> ?post ?a ?x (lfp ?B ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 3, template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_While.autoref_WHILE'",
     "[| !!x x'. (x, x') : ?R ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; (x, x') : ?R |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel |]
      ==> (WHILE ?c ?f,
           (Autoref_Tagging.OP WHILE :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f')
          : ?R \<rightarrow> \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 35, t_empty)),
        template_predicate (template_app (template_hole 35, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_hole 19,
                   template_app
                    (template_app (template_hole 18, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app
                            (template_hole 15,
                             template_app
                              (template_hole 14, template_hole 13)),
                           template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 11,
                                 template_app
                                  (template_app
                                    (template_hole 10, template_hole 9),
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app (template_hole 7, template_hole 6), template_var 4)),
                                     template_hole 27))),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 4)),
 template_app
  (template_app (template_hole 22, template_hole 21), template_var 4)))),
                                 template_app
                                  (template_app
                                    (template_hole 2,
                                     template_app
(template_app (template_hole 1, template_hole 0), template_var 4)),
                                   template_app
                                    (template_app
(template_hole 22, template_hole 21),
                                     template_var 4))))))),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 4)),
               template_app
                (template_app (template_hole 22, template_hole 21),
                 template_var 4)))
           ))),
    ("Refine_Foreach.FOREACHc_rule'",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. [| ?I {} \<sigma>; ?c \<sigma> |] ==> ?P \<sigma>;
         !!it \<sigma>.
            [| it <= ?S; ?I it \<sigma>; ~ ?c \<sigma> |] ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>C ?S ?c ?f ?\<sigma>0.0 <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 5), template_var 3)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))))),
    ("Refine_Det.dres_Sup_cases",
     "[| [| ?S <= {dSUCCEED}; Sup ?S = dSUCCEED |] ==> ?thesis;
         [| dFAIL : ?S; Sup ?S = dFAIL |] ==> ?thesis;
         !!a b.
            [| a ~= b; dRETURN a : ?S; dRETURN b : ?S; dFAIL ~: ?S;
               Sup ?S = dFAIL |]
            ==> ?thesis;
         !!a. [| ?S <= {dSUCCEED, dRETURN a}; dRETURN a : ?S;
                 Sup ?S = dRETURN a |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_inequation
            (less_equals, template_var 1,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 8))],
          template_implication
           ([template_equation
              (template_app (template_hole 6, template_var 1),
               template_hole 9)],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1)
               )],
          template_implication
           ([template_equation
              (template_app (template_hole 6, template_var 1),
               template_hole 4)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Det.dres_Inf_cases",
     "[| [| ?S <= {dFAIL}; Inf ?S = dFAIL |] ==> ?thesis;
         [| dSUCCEED : ?S; Inf ?S = dSUCCEED |] ==> ?thesis;
         !!a b.
            [| a ~= b; dRETURN a : ?S; dRETURN b : ?S; dSUCCEED ~: ?S;
               Inf ?S = dSUCCEED |]
            ==> ?thesis;
         !!a. [| ?S <= {dFAIL, dRETURN a}; dRETURN a : ?S;
                 Inf ?S = dRETURN a |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_inequation
            (less_equals, template_var 1,
             template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 8))],
          template_implication
           ([template_equation
              (template_app (template_hole 6, template_var 1),
               template_hole 9)],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1)
               )],
          template_implication
           ([template_equation
              (template_app (template_hole 6, template_var 1),
               template_hole 4)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Foreach.FOREACHci_rule'",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. [| ?I {} \<sigma>; ?c \<sigma> |] ==> ?P \<sigma>;
         !!it \<sigma>.
            [| it <= ?S; ?I it \<sigma>; ~ ?c \<sigma> |] ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>C\<^bsup>?I\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 5), template_var 3)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 5),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))))),
    ("RefineG_Domain.flatf_lfp_refine",
     "[| monotone flatf_le flatf_le ?B; monotone flatf_le flatf_le ?B';
         ?P ?x ?x';
         !!f f' x x'.
            [| !!x x'. ?P x x' ==> f x <= ?cf (f' x'); ?P x x';
               flatf_lfp ?B' = f' |]
            ==> ?B f x <= ?cf (?B' f' x') |]
      ==> flatf_lfp ?B ?x <= ?cf (flatf_lfp ?B' ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_hole 16))),
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_hole 16))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12))),
                template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_hole 12))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_hole 16))),
               template_app
                (template_hole 18,
                 template_app (template_hole 17, template_hole 16))),
             template_var 5),
           template_var 2),
         template_app
          (template_var 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 12))),
                 template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_hole 12))),
               template_var 4),
             template_var 1))))),
    ("Refine_Foreach.FOREACHc_rule",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. ?I {} \<sigma> ==> ?P \<sigma>;
         !!it \<sigma>.
            [| it ~= {}; it <= ?S; ?I it \<sigma>; ~ ?c \<sigma> |]
            ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>C ?S ?c ?f ?\<sigma>0.0 <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 5), template_var 3)
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))))),
    ("Refine_Foreach.FOREACHci_rule",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= ?S; ?I it \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. ?I {} \<sigma> ==> ?P \<sigma>;
         !!it \<sigma>.
            [| it ~= {}; it <= ?S; ?I it \<sigma>; ~ ?c \<sigma> |]
            ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>C\<^bsup>?I\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 5), template_var 3)
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 5),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))))),
    ("Refine_While.range_set_WHILE",
     "[| !!i s. ?c (i, s) = (i < ?u); ?F {} ?s0.0 = ?s0.0;
         !!s i X.
            [| ?l <= i; i < ?u |]
            ==> ?f (i, ?F X s)
                <= SPEC
                    (%(i', r).
                        i' = i + 1 & r = ?F (insert (?list ! i) X) s) |]
      ==> WHILE\<^sub>T ?c ?f (?l, ?s0.0)
          <= SPEC
              (%(uu_, r). r = ?F {?list ! i |i. ?l <= i & i < ?u} ?s0.0)",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_equation
         (template_app
           (template_app (template_var 4, template_hole 16),
            template_var 3),
          template_var 3),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 6),
             template_var 1),
           template_app
            (template_app (template_hole 19, template_var 2),
             template_var 3)),
         template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app (template_hole 10, t_empty)))))),
    ("Refine_Foreach.FOREACHi_refine_rcg'",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH ?S ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^bsup>?\<Phi>'\<^esup> ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 17, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 7),
             template_var 1),
           template_var 5),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 6),
               template_var 0),
             template_var 4))))),
    ("Refine_While.WHILE_invisible_refine_genR",
     "[| (?s, ?s') : ?R'; !!s s'. [| (s, s') : ?R'; ?b' s' |] ==> ?b s;
         !!s s'.
            [| (s, s') : ?R'; ?b s |]
            ==> ?f s
                <= sup (\<Down> ?R' (ASSUME (?b' s') >>= (%_. ?f' s')))
                    (\<Down> ?R' (RETURN s'));
         !!x x'. [| (x, x') : ?R'; ~ ?b x; ~ ?b' x' |] ==> (x, x') : ?R |]
      ==> WHILE ?b ?f ?s <= \<Down> ?R (WHILE ?b' ?f' ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 6))))),
    ("Refine_While.autoref_WHILE",
     "[| !!x x'. (x, x') : ?R ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; (x, x') : ?R |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel;
         (?s, ?s') : ?R |]
      ==> (WHILE ?c ?f ?s,
           (Autoref_Tagging.OP WHILE :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f' $
           ?s')
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_var 1),
                  template_var 0)),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app
                      (template_app (template_hole 18, template_var 5),
                       template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15,
                                 template_app
                                  (template_hole 14, template_hole 13)),
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11,
                                     template_app
(template_app (template_hole 10, template_hole 9),
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app (template_hole 7, template_hole 6), template_var 6)),
   template_hole 25))),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app (template_hole 4, template_hole 3),
   template_app
    (template_app
      (template_hole 2,
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 6)),
     template_app
      (template_app (template_hole 20, template_hole 19),
       template_var 6)))),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 6)),
 template_app
  (template_app (template_hole 20, template_hole 19), template_var 6))))))),
                           template_var 4)),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_var 6))
           ))),
    ("Refine_While.autoref_WHILET",
     "[| !!x x'. (x, x') : ?R ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; (x, x') : ?R |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel;
         (?s, ?s') : ?R |]
      ==> (WHILE\<^sub>T ?c ?f ?s,
           (Autoref_Tagging.OP WHILE\<^sub>T :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f' $
           ?s')
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_var 1),
                  template_var 0)),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app
                      (template_app (template_hole 18, template_var 5),
                       template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15,
                                 template_app
                                  (template_hole 14, template_hole 13)),
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11,
                                     template_app
(template_app (template_hole 10, template_hole 9),
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app (template_hole 7, template_hole 6), template_var 6)),
   template_hole 25))),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app (template_hole 4, template_hole 3),
   template_app
    (template_app
      (template_hole 2,
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 6)),
     template_app
      (template_app (template_hole 20, template_hole 19),
       template_var 6)))),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 6)),
 template_app
  (template_app (template_hole 20, template_hole 19), template_var 6))))))),
                           template_var 4)),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_var 6))
           ))),
    ("Refine_While.WHILE_refine_genR'",
     "[| (?x, ?x') : ?R';
         !!x x'. [| (x, x') : ?R'; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R'; ?b x; ?b' x'; ?I' x' |]
            ==> ?f x <= \<Down> ?R' (?f' x');
         !!x x'. [| (x, x') : ?R'; ~ ?b x; ~ ?b' x' |] ==> (x, x') : ?R |]
      ==> WHILE ?b ?f ?x
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 8),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 8),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 7))))),
    ("RefineG_Domain.flatf_gfp_transfer",
     "[| !!x. ?tr x top; monotone flatf_ge flatf_ge ?B;
         monotone flatf_ge flatf_ge ?B'; ?P ?x ?x';
         !!f f' x x'.
            [| !!x x'. ?P x x' ==> ?tr (f x) (f' x'); ?P x x';
               flatf_gfp ?B = f |]
            ==> ?tr (?B f x) (?B' f' x') |]
      ==> ?tr (flatf_gfp ?B ?x) (flatf_gfp ?B' ?x')",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_hole 14))),
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 14))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 18))),
                template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_hole 18))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 14))),
                     template_app
                      (template_hole 16,
                       template_app (template_hole 15, template_hole 14))),
                   template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_hole 18))),
                   template_app
                    (template_hole 12,
                     template_app (template_hole 11, template_hole 18))),
                 template_var 3),
               template_var 0))
           ))),
    ("RefineG_Domain.flatf_lfp_transfer",
     "[| !!x. ?tr bot x; monotone flatf_le flatf_le ?B;
         monotone flatf_le flatf_le ?B'; ?P ?x ?x';
         !!f f' x x'.
            [| !!x x'. ?P x x' ==> ?tr (f x) (f' x'); ?P x x';
               flatf_lfp ?B' = f' |]
            ==> ?tr (?B f x) (?B' f' x') |]
      ==> ?tr (flatf_lfp ?B ?x) (flatf_lfp ?B' ?x')",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_hole 18))),
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 18))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 11))),
                template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_hole 11))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_hole 18))),
                     template_app
                      (template_hole 16,
                       template_app (template_hole 15, template_hole 18))),
                   template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 11))),
                   template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_hole 11))),
                 template_var 3),
               template_var 0))
           ))),
    ("Refine_While.autoref_WHILEI'",
     "[| !!x x'. [| (x, x') : ?R; ?I x' |] ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; (x, x') : ?R; ?I x' |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel |]
      ==> (WHILE ?c ?f,
           (Autoref_Tagging.OP WHILE\<^bsup>?I\<^esup> :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f')
          : ?R \<rightarrow> \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 35, t_empty)),
        template_predicate (template_app (template_hole 35, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_hole 19,
                   template_app
                    (template_app (template_hole 18, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app
                            (template_hole 15,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 13, template_var 4))),
                           template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 11,
                                 template_app
                                  (template_app
                                    (template_hole 10, template_hole 9),
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app (template_hole 7, template_hole 6), template_var 5)),
                                     template_hole 27))),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 5)),
 template_app
  (template_app (template_hole 22, template_hole 21), template_var 5)))),
                                 template_app
                                  (template_app
                                    (template_hole 2,
                                     template_app
(template_app (template_hole 1, template_hole 0), template_var 5)),
                                   template_app
                                    (template_app
(template_hole 22, template_hole 21),
                                     template_var 5))))))),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 5)),
               template_app
                (template_app (template_hole 22, template_hole 21),
                 template_var 5)))
           ))),
    ("Refine_While.autoref_WHILEIT'",
     "[| !!x x'. [| (x, x') : ?R; ?I x' |] ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; (x, x') : ?R; ?I x' |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel |]
      ==> (WHILE\<^sub>T ?c ?f,
           (Autoref_Tagging.OP WHILE\<^sub>T\<^bsup>?I\<^esup> :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f')
          : ?R \<rightarrow> \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 35, t_empty)),
        template_predicate (template_app (template_hole 35, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_hole 19,
                   template_app
                    (template_app (template_hole 18, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app
                            (template_hole 15,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 13, template_var 4))),
                           template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 11,
                                 template_app
                                  (template_app
                                    (template_hole 10, template_hole 9),
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app (template_hole 7, template_hole 6), template_var 5)),
                                     template_hole 27))),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 5)),
 template_app
  (template_app (template_hole 22, template_hole 21), template_var 5)))),
                                 template_app
                                  (template_app
                                    (template_hole 2,
                                     template_app
(template_app (template_hole 1, template_hole 0), template_var 5)),
                                   template_app
                                    (template_app
(template_hole 22, template_hole 21),
                                     template_var 5))))))),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 5)),
               template_app
                (template_app (template_hole 22, template_hole 21),
                 template_var 5)))
           ))),
    ("Refine_Foreach.nfoldli_rule",
     "[| ?I [] ?l0.0 ?\<sigma>0.0;
         !!x l1 l2 \<sigma>.
            [| ?l0.0 = l1 @ x # l2; ?I l1 (x # l2) \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (l1 @ [x]) l2);
         !!l1 l2 \<sigma>.
            [| ?l0.0 = l1 @ l2; ?I l1 l2 \<sigma>; ~ ?c \<sigma> |]
            ==> ?P \<sigma>;
         !!\<sigma>.
            [| ?I ?l0.0 [] \<sigma>; ?c \<sigma> |] ==> ?P \<sigma> |]
      ==> nfoldli ?l0.0 ?c ?f ?\<sigma>0.0 <= SPEC ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 5, template_hole 11),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Foreach.nfoldli_leof_rule",
     "[| ?I [] ?l0.0 ?\<sigma>0.0;
         !!x l1 l2 \<sigma>.
            [| ?l0.0 = l1 @ x # l2; ?I l1 (x # l2) \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> \<le>\<^sub>n SPEC (?I (l1 @ [x]) l2);
         !!l1 l2 \<sigma>.
            [| ?l0.0 = l1 @ l2; ?I l1 l2 \<sigma>; ~ ?c \<sigma> |]
            ==> ?P \<sigma>;
         !!\<sigma>.
            [| ?I ?l0.0 [] \<sigma>; ?c \<sigma> |] ==> ?P \<sigma> |]
      ==> nfoldli ?l0.0 ?c ?f ?\<sigma>0.0 \<le>\<^sub>n SPEC ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 5, template_hole 11),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 3)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Refine_While.WHILEI_refine",
     "[| ?I' ?x' ==> (?x, ?x') : ?R;
         !!x x'. [| (x, x') : ?R; ?I' x' |] ==> ?I x;
         !!x x'. [| (x, x') : ?R; ?I x; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?x
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 7)),
                template_var 5)
              )),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 2),
               template_var 0),
             template_var 7))))),
    ("Refine_While.WHILEIT_refine",
     "[| ?I' ?x' ==> (?x, ?x') : ?R;
         !!x x'. [| (x, x') : ?R; ?I' x' |] ==> ?I x;
         !!x x'. [| (x, x') : ?R; ?I x; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?x
          <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 7)),
                template_var 5)
              )),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 2),
               template_var 0),
             template_var 7))))),
    ("Refine_Foreach.FOREACHcd_rule",
     "[| finite ?S\<^sub>0; ?I {} ?S\<^sub>0 ?\<sigma>\<^sub>0;
         !!S1 S2 x \<sigma>.
            [| ?S\<^sub>0 = insert x (S1 Un S2);
               ?I S1 (insert x S2) \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (insert x S1) S2);
         !!S1 S2 \<sigma>.
            [| ?S\<^sub>0 = S1 Un S2; ?I S1 S2 \<sigma>; ~ ?c \<sigma> |]
            ==> ?\<Phi> \<sigma>;
         !!\<sigma>.
            [| ?I ?S\<^sub>0 {} \<sigma>; ?c \<sigma> |]
            ==> ?\<Phi> \<sigma> |]
      ==> FOREACHcd ?S\<^sub>0 ?c ?f ?\<sigma>\<^sub>0 <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 4, template_hole 11),
                template_var 5),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("RefineG_Domain.flatf_gfp_refine",
     "[| !!x. ?cf top = top; monotone flatf_ge flatf_ge ?B;
         monotone flatf_ge flatf_ge ?B'; ?P ?x ?x';
         !!f f' x x'.
            [| !!x x'. ?P x x' ==> f x <= ?cf (f' x'); ?P x x';
               flatf_gfp ?B = f |]
            ==> ?B f x <= ?cf (?B' f' x') |]
      ==> flatf_gfp ?B ?x <= ?cf (flatf_gfp ?B' ?x')",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_hole 18))),
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 18))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 19))),
                template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_hole 19))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 18))),
               template_app
                (template_hole 16,
                 template_app (template_hole 15, template_hole 18))),
             template_var 4),
           template_var 1),
         template_app
          (template_var 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_hole 19))),
                 template_app
                  (template_hole 13,
                   template_app (template_hole 12, template_hole 19))),
               template_var 3),
             template_var 0))))),
    ("Refine_Foreach.FOREACHcdi_rule",
     "[| finite ?S\<^sub>0; ?I {} ?S\<^sub>0 ?\<sigma>\<^sub>0;
         !!S1 S2 x \<sigma>.
            [| ?S\<^sub>0 = insert x (S1 Un S2);
               ?I S1 (insert x S2) \<sigma>; ?c \<sigma> |]
            ==> ?f x \<sigma> <= SPEC (?I (insert x S1) S2);
         !!S1 S2 \<sigma>.
            [| ?S\<^sub>0 = S1 Un S2; ?I S1 S2 \<sigma>; ~ ?c \<sigma> |]
            ==> ?\<Phi> \<sigma>;
         !!\<sigma>.
            [| ?I ?S\<^sub>0 {} \<sigma>; ?c \<sigma> |]
            ==> ?\<Phi> \<sigma> |]
      ==> FOREACHcdi ?I ?S\<^sub>0 ?c ?f ?\<sigma>\<^sub>0 <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 4, template_hole 11),
                template_var 5),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 5),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_While.WHILET_refine_genR'",
     "[| ?I' ?x' ==> (?x, ?x') : ?R';
         !!x x'. [| (x, x') : ?R'; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R'; ?b x; ?b' x'; ?I' x' |]
            ==> ?f x <= \<Down> ?R' (?f' x');
         !!x x'.
            [| (x, x') : ?R'; ~ ?b x; ~ ?b' x'; ?I' x' |]
            ==> (x, x') : ?R |]
      ==> WHILE\<^sub>T ?b ?f ?x
          <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 6),
                    template_var 7)),
                template_var 5)
              )),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 6),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 3),
               template_var 1),
             template_var 7))))),
    ("Refine_While.rwof_refine",
     "[| rwof ?m ?c ?f ?s; nofail (?m' >>= WHILE ?c' ?f');
         ?m \<le>\<^sub>n \<Down> ?R ?m';
         !!s s'.
            [| (s, s') : ?R; rwof ?m ?c ?f s; rwof ?m' ?c' ?f' s' |]
            ==> ?c s = ?c' s';
         !!s s'.
            [| (s, s') : ?R; rwof ?m ?c ?f s; rwof ?m' ?c' ?f' s'; ?c s;
               ?c' s' |]
            ==> ?f s \<le>\<^sub>n \<Down> ?R (?f' s') |]
      ==> EX s'. (?s, s') : ?R & rwof ?m' ?c' ?f' s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 3),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_While.WHILEI_invisible_refine",
     "[| ?I' ?s' ==> (?s, ?s') : ?R;
         !!s s'. [| (s, s') : ?R; ?I' s' |] ==> ?I s;
         !!s s'. [| (s, s') : ?R; ?I' s'; ?I s; ?b' s' |] ==> ?b s;
         !!s s'.
            [| (s, s') : ?R; ?I' s'; ?I s; ?b s |]
            ==> ?f s
                <= sup (\<Down> ?R (ASSUME (?b' s') >>= (%_. ?f' s')))
                    (\<Down> ?R (RETURN s')) |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?s
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?s')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 7)),
                template_var 5)
              )),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 5, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 3),
               template_var 0),
             template_var 7))))),
    ("Refine_While.autoref_WHILEI",
     "[| !!x x'. [| ?I x'; (x, x') : ?R |] ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; ?I x'; (x, x') : ?R |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel;
         ?I ?s' ==> (?s, ?s') : ?R |]
      ==> (WHILE ?c ?f ?s,
           (Autoref_Tagging.OP WHILE\<^bsup>?I\<^esup> :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f' $
           ?s')
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_implication
         ([template_predicate
            (template_app (template_var 7, template_var 1))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 30,
                  template_app
                   (template_app (template_hole 29, template_var 0),
                    template_var 1)),
                template_var 6)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app
                      (template_app (template_hole 18, template_var 5),
                       template_var 3),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15,
                                 template_app
                                  (template_hole 14,
                                   template_app
                                    (template_hole 13, template_var 7))),
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11,
                                     template_app
(template_app (template_hole 10, template_hole 9),
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app (template_hole 7, template_hole 6), template_var 6)),
   template_hole 25))),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app (template_hole 4, template_hole 3),
   template_app
    (template_app
      (template_hole 2,
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 6)),
     template_app
      (template_app (template_hole 20, template_hole 19),
       template_var 6)))),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 6)),
 template_app
  (template_app (template_hole 20, template_hole 19), template_var 6))))))),
                           template_var 4)),
                       template_var 2)),
                   template_var 1))),
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_var 6))
           ))),
    ("Refine_While.autoref_WHILEIT",
     "[| !!x x'. [| ?I x'; (x, x') : ?R |] ==> (?c x, ?c' $ x') : bool_rel;
         !!x x'.
            [| REMOVE_INTERNAL ?c' x'; ?I x'; (x, x') : ?R |]
            ==> (?f x, ?f' $ x') : \<langle>?R\<rangle>nres_rel;
         ?I ?s' ==> (?s, ?s') : ?R |]
      ==> (WHILE\<^sub>T ?c ?f ?s,
           (Autoref_Tagging.OP WHILE\<^sub>T\<^bsup>?I\<^esup> :::
            (?R \<rightarrow> bool_rel) \<rightarrow>
            (?R \<rightarrow> \<langle>?R\<rangle>nres_rel) \<rightarrow>
            ?R \<rightarrow> \<langle>?R\<rangle>nres_rel) $
           ?c' $
           ?f' $
           ?s')
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_implication
         ([template_predicate
            (template_app (template_var 7, template_var 1))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 30,
                  template_app
                   (template_app (template_hole 29, template_var 0),
                    template_var 1)),
                template_var 6)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app
                      (template_app (template_hole 18, template_var 5),
                       template_var 3),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15,
                                 template_app
                                  (template_hole 14,
                                   template_app
                                    (template_hole 13, template_var 7))),
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11,
                                     template_app
(template_app (template_hole 10, template_hole 9),
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app (template_hole 7, template_hole 6), template_var 6)),
   template_hole 25))),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app (template_hole 4, template_hole 3),
   template_app
    (template_app
      (template_hole 2,
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 6)),
     template_app
      (template_app (template_hole 20, template_hole 19),
       template_var 6)))),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_var 6)),
 template_app
  (template_app (template_hole 20, template_hole 19), template_var 6))))))),
                           template_var 4)),
                       template_var 2)),
                   template_var 1))),
             template_app
              (template_app (template_hole 20, template_hole 19),
               template_var 6))
           ))),
    ("Refine_Foreach.FOREACH_refine",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         ?\<Phi>'' ?S ?\<sigma>0.0 (?\<alpha> ` ?S) ?\<sigma>0';
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     (\<sigma>, \<sigma>') : ?R &
                     ?\<Phi>'' (it - {x}) \<sigma> (it' - {x'}) \<sigma>'}
                    (?f' x' \<sigma>') |]
      ==> FOREACH ?S ?f ?\<sigma>0.0
          <= \<Down> ?R (FOREACH ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 26, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 2, template_var 7),
                  template_var 5),
                template_app
                 (template_app (template_hole 26, template_var 8),
                  template_var 7)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 7),
             template_var 1),
           template_var 5),
         template_app
          (template_app (template_hole 11, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 0),
             template_var 4))))),
    ("Refine_Foreach.FOREACHoci_rule'",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| ?c \<sigma>; x : it; it <= ?S; ?I it \<sigma>;
               ALL y:it - {x}. ?R x y; ALL y:?S - it. ?R y x |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. [| ?I {} \<sigma>; ?c \<sigma> |] ==> ?P \<sigma>;
         !!it \<sigma>.
            [| it <= ?S; ?I it \<sigma>; ~ ?c \<sigma>;
               ALL x:it. ALL y:?S - it. ?R y x |]
            ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>O\<^sub>C\<^bsup>?R,?I\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 6), template_var 4)
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 6),
               template_var 3),
             template_var 1),
           template_var 4),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Foreach.FOREACHoci_rule",
     "[| finite ?S; ?I ?S ?\<sigma>0.0;
         !!x it \<sigma>.
            [| ?c \<sigma>; x : it; it <= ?S; ?I it \<sigma>;
               ALL y:it - {x}. ?R x y; ALL y:?S - it. ?R y x |]
            ==> ?f x \<sigma> <= SPEC (?I (it - {x}));
         !!\<sigma>. ?I {} \<sigma> ==> ?P \<sigma>;
         !!it \<sigma>.
            [| it ~= {}; it <= ?S; ?I it \<sigma>; ~ ?c \<sigma>;
               ALL x:it. ALL y:?S - it. ?R y x |]
            ==> ?P \<sigma> |]
      ==> FOREACH\<^sub>O\<^sub>C\<^bsup>?R,?I\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= SPEC ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 6), template_var 4)
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 6),
               template_var 3),
             template_var 1),
           template_var 4),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Refine_While.WHILEIT_refine_new_invar",
     "[| ?I' ?x' ==> (?x, ?x') : ?R;
         [| ?I' ?x'; (?x, ?x') : ?R |] ==> ?I ?x;
         !!x x'. [| (x, x') : ?R; ?I x; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= \<Down> ?R (?f' x');
         !!x x'.
            [| nofail (?f x); (x, x') : ?R; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= SPEC ?I |]
      ==> WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?x
          <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 7)),
                template_var 5)
              )),
        template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_var 6),
                       template_var 7)),
                   template_var 5)
                 )],
            template_predicate
             (template_app (template_var 4, template_var 6)))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 5, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 2),
               template_var 0),
             template_var 7))))),
    ("Refine_While.WHILEI_refine_new_invar",
     "[| ?I' ?x' ==> (?x, ?x') : ?R;
         [| ?I' ?x'; (?x, ?x') : ?R |] ==> ?I ?x;
         !!x x'. [| (x, x') : ?R; ?I x; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= \<Down> ?R (?f' x');
         !!x x'.
            [| (x, x') : ?R; ?b x; ?b' x'; ?I x; ?I' x'; nofail (?f x) |]
            ==> ?f x <= SPEC ?I |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?x
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 7)),
                template_var 5)
              )),
        template_implication
         ([template_predicate
            (template_app (template_var 8, template_var 7))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_var 6),
                       template_var 7)),
                   template_var 5)
                 )],
            template_predicate
             (template_app (template_var 4, template_var 6)))),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 5, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 2),
               template_var 0),
             template_var 7))))),
    ("Refine_While.WHILEI_refine_genR",
     "[| ?I' ?x' ==> (?x, ?x') : ?R';
         !!x x'. [| (x, x') : ?R'; ?I' x' |] ==> ?I x;
         !!x x'. [| (x, x') : ?R'; ?I x; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R'; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= \<Down> ?R' (?f' x');
         !!x x'.
            [| (x, x') : ?R'; ~ ?b x; ~ ?b' x'; ?I x; ?I' x' |]
            ==> (x, x') : ?R |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?x
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 9, template_var 8))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 7),
                    template_var 8)),
                template_var 6)
              )),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 9),
                 template_var 3),
               template_var 1),
             template_var 8))))),
    ("Refine_While.WHILEIT_refine_genR",
     "[| ?I' ?x' ==> (?x, ?x') : ?R';
         !!x x'. [| (x, x') : ?R'; ?I' x' |] ==> ?I x;
         !!x x'. [| (x, x') : ?R'; ?I x; ?I' x' |] ==> ?b x = ?b' x';
         !!x x'.
            [| (x, x') : ?R'; ?b x; ?b' x'; ?I x; ?I' x' |]
            ==> ?f x <= \<Down> ?R' (?f' x');
         !!x x'.
            [| (x, x') : ?R'; ~ ?b x; ~ ?b' x'; ?I x; ?I' x' |]
            ==> (x, x') : ?R |]
      ==> WHILE\<^sub>T\<^bsup>?I\<^esup> ?b ?f ?x
          <= \<Down> ?R (WHILE\<^sub>T\<^bsup>?I'\<^esup> ?b' ?f' ?x')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 9, template_var 8))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 7),
                    template_var 8)),
                template_var 6)
              )),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 9),
                 template_var 3),
               template_var 1),
             template_var 8))))),
    ("Refine_Foreach.FOREACHc_refine_rcg",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?c \<sigma>; ?c' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>C ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R (FOREACH\<^sub>C ?S' ?c' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 9),
              template_var 8)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 18, template_var 9),
            template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 8),
               template_var 3),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 2),
               template_var 0),
             template_var 5))))),
    ("Refine_Foreach.FOREACH_refine_genR",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         ((?S, ?\<sigma>0.0), ?\<alpha> ` ?S, ?\<sigma>0') : ?R;
         !!x it \<sigma> x' it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; x' = ?\<alpha> x; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R; x : it; x' : it' |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     ((it - {x}, \<sigma>), it' - {x'}, \<sigma>') : ?R}
                    (?f' x' \<sigma>');
         !!\<sigma> \<sigma>'.
            (({}, \<sigma>), {}, \<sigma>') : ?R ==>
            (\<sigma>, \<sigma>') : ?R' |]
      ==> FOREACH ?S ?f ?\<sigma>0.0
          <= \<Down> ?R' (FOREACH ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 29, template_var 8),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app
                   (template_hole 27,
                    template_app
                     (template_app (template_hole 26, template_var 7),
                      template_var 5)),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app
                       (template_app (template_hole 29, template_var 8),
                        template_var 7)),
                    template_var 4))),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 7),
             template_var 2),
           template_var 5),
         template_app
          (template_app (template_hole 12, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 1),
             template_var 4))))),
    ("Refine_Foreach.FOREACHi_refine_rcg",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH\<^bsup>?\<Phi>\<^esup> ?S ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^bsup>?\<Phi>'\<^esup> ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 9),
              template_var 8)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 17, template_var 9),
            template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 8),
             template_var 1),
           template_var 6),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 7),
               template_var 0),
             template_var 5))))),
    ("Refine_While.WHILEI_invisible_refine_genR",
     "[| ?I' ?s' ==> (?s, ?s') : ?R';
         !!s s'. [| (s, s') : ?R'; ?I' s' |] ==> ?I s;
         !!s s'. [| (s, s') : ?R'; ?I' s'; ?I s; ?b' s' |] ==> ?b s;
         !!s s'.
            [| (s, s') : ?R'; ?I' s'; ?I s; ?b s |]
            ==> ?f s
                <= sup (\<Down> ?R' (ASSUME (?b' s') >>= (%_. ?f' s')))
                    (\<Down> ?R' (RETURN s'));
         !!x x'.
            [| (x, x') : ?R'; ~ ?b x; ~ ?b' x'; ?I x; ?I' x' |]
            ==> (x, x') : ?R |]
      ==> WHILE\<^bsup>?I\<^esup> ?b ?f ?s
          <= \<Down> ?R (WHILE\<^bsup>?I'\<^esup> ?b' ?f' ?s')",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 9, template_var 8))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_var 7),
                    template_var 8)),
                template_var 6)
              )),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 3),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 9),
                 template_var 4),
               template_var 1),
             template_var 8))))),
    ("Refine_Foreach.FOREACHci_refine_rcg'",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>'; ?c \<sigma>;
               ?c' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>C ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>C\<^bsup>?\<Phi>'\<^esup> ?S' ?c' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 10),
              template_var 9)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 18, template_var 10),
            template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 9),
               template_var 3),
             template_var 1),
           template_var 7),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 8),
                 template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_Foreach.FOREACHc_refine",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         ?\<Phi>'' ?S ?\<sigma>0.0 (?\<alpha> ` ?S) ?\<sigma>0';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               ?c \<sigma>; ?c' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     (\<sigma>, \<sigma>') : ?R &
                     ?\<Phi>'' (it - {x}) \<sigma> (it' - {x'}) \<sigma>'}
                    (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>C ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R (FOREACH\<^sub>C ?S' ?c' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 10),
              template_var 9)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 27, template_var 10),
            template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 4, template_var 9),
                  template_var 7),
                template_app
                 (template_app (template_hole 27, template_var 10),
                  template_var 9)),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 9),
               template_var 3),
             template_var 1),
           template_var 7),
         template_app
          (template_app (template_hole 11, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_Foreach.FOREACHoi_refine_rcg",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!x y.
            [| x : ?S; y : ?S; ?RR x y |]
            ==> ?RR' (?\<alpha> x) (?\<alpha> y);
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| ALL y:it - {x}. ?RR x y; x' = ?\<alpha> x; x : it; x' : it';
               it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi> it \<sigma>; ?\<Phi>' it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>O\<^bsup>?RR,?\<Phi>\<^esup> ?S ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>O\<^bsup>?RR',?\<Phi>'\<^esup> ?S' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 11),
              template_var 10)
            ),
        template_equation
         (template_var 9,
          template_app
           (template_app (template_hole 21, template_var 11),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 8),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2),
               template_var 10),
             template_var 1),
           template_var 8),
         template_app
          (template_app (template_hole 2, template_var 6),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 9),
               template_var 0),
             template_var 7))))),
    ("Refine_Foreach.FOREACHi_refine",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         ?\<Phi>'' ?S ?\<sigma>0.0 (?\<alpha> ` ?S) ?\<sigma>0';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     (\<sigma>, \<sigma>') : ?R &
                     ?\<Phi>'' (it - {x}) \<sigma> (it' - {x'}) \<sigma>'}
                    (?f' x' \<sigma>') |]
      ==> FOREACH\<^bsup>?\<Phi>\<^esup> ?S ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^bsup>?\<Phi>'\<^esup> ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 10),
              template_var 9)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 26, template_var 10),
            template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 24, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 4, template_var 9),
                  template_var 7),
                template_app
                 (template_app (template_hole 26, template_var 10),
                  template_var 9)),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 9),
             template_var 1),
           template_var 7),
         template_app
          (template_app (template_hole 11, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 8),
               template_var 0),
             template_var 6))))),
    ("Refine_Foreach.FOREACHci_refine_rcg",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi> it \<sigma>;
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; ?c \<sigma>; ?c' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>C\<^bsup>?\<Phi>\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>C\<^bsup>?\<Phi>'\<^esup> ?S' ?c' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 11),
              template_var 10)
            ),
        template_equation
         (template_var 9,
          template_app
           (template_app (template_hole 18, template_var 11),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 8),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 10),
               template_var 3),
             template_var 1),
           template_var 8),
         template_app
          (template_app (template_hole 2, template_var 6),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 9),
                 template_var 2),
               template_var 0),
             template_var 7))))),
    ("Refine_Foreach.FOREACHi_refine_genR",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         ((?S, ?\<sigma>0.0), ?\<alpha> ` ?S, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; x' = ?\<alpha> x;
               it' = ?\<alpha> ` it; ((it, \<sigma>), it', \<sigma>') : ?R;
               x : it; x' : it' |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     ((it - {x}, \<sigma>), it' - {x'}, \<sigma>') : ?R}
                    (?f' x' \<sigma>');
         !!\<sigma> \<sigma>'.
            [| ?\<Phi> {} \<sigma>; ?\<Phi>' {} \<sigma>';
               (({}, \<sigma>), {}, \<sigma>') : ?R |]
            ==> (\<sigma>, \<sigma>') : ?R' |]
      ==> FOREACH\<^bsup>?\<Phi>\<^esup> ?S ?f ?\<sigma>0.0
          <= \<Down> ?R'
              (FOREACH\<^bsup>?\<Phi>'\<^esup> ?S' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 10),
              template_var 9)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 29, template_var 10),
            template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app
                   (template_hole 27,
                    template_app
                     (template_app (template_hole 26, template_var 9),
                      template_var 7)),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app
                       (template_app (template_hole 29, template_var 10),
                        template_var 9)),
                    template_var 6))),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 9),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 12, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 8),
               template_var 1),
             template_var 6))))),
    ("Refine_Foreach.nfoldli_invar_refine",
     "[| (?li, ?l) : \<langle>?S\<rangle>list_rel; (?si, ?s) : ?R;
         ?I [] ?li ?si;
         !!l1i l2i l1 l2 si s.
            [| ?li = l1i @ l2i; ?l = l1 @ l2;
               (l1i, l1) : \<langle>?S\<rangle>list_rel;
               (l2i, l2) : \<langle>?S\<rangle>list_rel; ?I l1i l2i si;
               (si, s) : ?R |]
            ==> (?ci si, ?c s) : bool_rel;
         !!l1i xi l2i si.
            [| ?li = l1i @ xi # l2i; ?I l1i (xi # l2i) si |]
            ==> ?fi xi si \<le>\<^sub>n SPEC (?I (l1i @ [xi]) l2i);
         !!l1i xi l2i l1 x l2 si s.
            [| ?li = l1i @ xi # l2i; ?l = l1 @ x # l2;
               (l1i, l1) : \<langle>?S\<rangle>list_rel; (xi, x) : ?S;
               (l2i, l2) : \<langle>?S\<rangle>list_rel;
               ?I l1i (xi # l2i) si; (si, s) : ?R |]
            ==> ?fi xi si <= \<Down> ?R (?f x s) |]
      ==> nfoldli ?li ?ci ?fi ?si <= \<Down> ?R (nfoldli ?l ?c ?f ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_var 10),
                  template_var 9)),
              template_app
               (template_app (template_hole 28, template_hole 27),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 7),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 4, template_hole 24),
                template_var 10),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 10),
               template_var 3),
             template_var 1),
           template_var 7),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 9),
                 template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_Foreach.FOREACHoi_refine",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!x y.
            [| x : ?S; y : ?S; ?RR x y |]
            ==> ?RR' (?\<alpha> x) (?\<alpha> y);
         ?\<Phi>'' ?S ?\<sigma>0.0 (?\<alpha> ` ?S) ?\<sigma>0';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| ALL y:it - {x}. ?RR x y; x' = ?\<alpha> x; x : it; x' : it';
               it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi> it \<sigma>; ?\<Phi>' it' \<sigma>';
               ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     (\<sigma>, \<sigma>') : ?R &
                     ?\<Phi>'' (it - {x}) \<sigma> (it' - {x'}) \<sigma>'}
                    (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>O\<^bsup>?RR,?\<Phi>\<^esup> ?S ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>O\<^bsup>?RR',?\<Phi>'\<^esup> ?S' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 12),
              template_var 11)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 27, template_var 12),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 9),
                  template_var 8)),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 4, template_var 11),
                  template_var 9),
                template_app
                 (template_app (template_hole 27, template_var 12),
                  template_var 11)),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 2),
               template_var 11),
             template_var 1),
           template_var 9),
         template_app
          (template_app (template_hole 8, template_var 7),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3),
                 template_var 10),
               template_var 0),
             template_var 8))))),
    ("Refine_Foreach.FOREACHoci_refine_rcg",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!x y.
            [| x : ?S; y : ?S; ?RR x y |]
            ==> ?RR' (?\<alpha> x) (?\<alpha> y);
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi> it \<sigma>;
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| ALL y:it - {x}. ?RR x y; x' = ?\<alpha> x; x : it; x' : it';
               it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi> it \<sigma>; ?\<Phi>' it' \<sigma>'; ?c \<sigma>;
               ?c' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma> <= \<Down> ?R (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>O\<^sub>C\<^bsup>?RR,?\<Phi>\<^esup> ?S ?c ?f
           ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>O\<^sub>C\<^bsup>?RR',?\<Phi>'\<^esup> ?S' ?c'
                ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 13),
              template_var 12)
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app (template_hole 22, template_var 13),
            template_var 12)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 10),
                  template_var 9)),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 4),
                 template_var 12),
               template_var 3),
             template_var 1),
           template_var 10),
         template_app
          (template_app (template_hole 2, template_var 8),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5),
                   template_var 11),
                 template_var 2),
               template_var 0),
             template_var 9))))),
    ("Refine_Foreach.FOREACHci_refine",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         ?\<Phi>'' ?S ?\<sigma>0.0 (?\<alpha> ` ?S) ?\<sigma>0';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               ?\<Phi> it \<sigma>; (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| x' = ?\<alpha> x; x : it; x' : it'; it' = ?\<alpha> ` it;
               it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               ?c \<sigma>; ?c' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     (\<sigma>, \<sigma>') : ?R &
                     ?\<Phi>'' (it - {x}) \<sigma> (it' - {x'}) \<sigma>'}
                    (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>C\<^bsup>?\<Phi>\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>C\<^bsup>?\<Phi>'\<^esup> ?S' ?c' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 12),
              template_var 11)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 27, template_var 12),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 9),
                  template_var 8)),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 6, template_var 11),
                  template_var 9),
                template_app
                 (template_app (template_hole 27, template_var 12),
                  template_var 11)),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 11),
               template_var 3),
             template_var 1),
           template_var 9),
         template_app
          (template_app (template_hole 11, template_var 7),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 10),
                 template_var 2),
               template_var 0),
             template_var 8))))),
    ("Refine_Foreach.FOREACHc_refine_genR",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         ((?S, ?\<sigma>0.0), ?\<alpha> ` ?S, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!x it \<sigma> x' it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; x' = ?\<alpha> x; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R; x : it; x' : it';
               ?c \<sigma>; ?c' \<sigma>' |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     ((it - {x}, \<sigma>), it' - {x'}, \<sigma>') : ?R}
                    (?f' x' \<sigma>');
         !!\<sigma> \<sigma>'.
            (({}, \<sigma>), {}, \<sigma>') : ?R ==>
            (\<sigma>, \<sigma>') : ?R';
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R; it ~= {}; it' ~= {};
               ~ ?c \<sigma>; ~ ?c' \<sigma>' |]
            ==> (\<sigma>, \<sigma>') : ?R' |]
      ==> FOREACH\<^sub>C ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R' (FOREACH\<^sub>C ?S' ?c' ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 34, template_var 10),
              template_var 9)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 32, template_var 10),
            template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app
                   (template_hole 30,
                    template_app
                     (template_app (template_hole 29, template_var 9),
                      template_var 7)),
                  template_app
                   (template_app
                     (template_hole 28,
                      template_app
                       (template_app (template_hole 32, template_var 10),
                        template_var 9)),
                    template_var 6))),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 9),
               template_var 4),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 14, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 3),
               template_var 1),
             template_var 6))))),
    ("Refine_Foreach.FOREACHoci_refine",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         (?\<sigma>0.0, ?\<sigma>0') : ?R;
         !!x y.
            [| x : ?S; y : ?S; ?RR x y |]
            ==> ?RR' (?\<alpha> x) (?\<alpha> y);
         ?\<Phi>'' ?S ?\<sigma>0.0 (?\<alpha> ` ?S) ?\<sigma>0';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               ?\<Phi> it \<sigma>; (\<sigma>, \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!it \<sigma> it' \<sigma>'.
            [| it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi>' it' \<sigma>'; ?\<Phi>'' it \<sigma> it' \<sigma>';
               (\<sigma>, \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| ALL y:it - {x}. ?RR x y; x' = ?\<alpha> x; x : it; x' : it';
               it' = ?\<alpha> ` it; it <= ?S; it' <= ?S';
               ?\<Phi> it \<sigma>; ?\<Phi>' it' \<sigma>';
               ?\<Phi>'' it \<sigma> it' \<sigma>'; ?c \<sigma>;
               ?c' \<sigma>'; (\<sigma>, \<sigma>') : ?R |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     (\<sigma>, \<sigma>') : ?R &
                     ?\<Phi>'' (it - {x}) \<sigma> (it' - {x'}) \<sigma>'}
                    (?f' x' \<sigma>') |]
      ==> FOREACH\<^sub>O\<^sub>C\<^bsup>?RR,?\<Phi>\<^esup> ?S ?c ?f
           ?\<sigma>0.0
          <= \<Down> ?R
              (FOREACH\<^sub>O\<^sub>C\<^bsup>?RR',?\<Phi>'\<^esup> ?S' ?c'
                ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 14),
              template_var 13)
            ),
        template_equation
         (template_var 12,
          template_app
           (template_app (template_hole 28, template_var 14),
            template_var 13)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 11),
                  template_var 10)),
              template_var 9)
            ),
        template_predicate (template_app (template_hole 25, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_var 6, template_var 13),
                  template_var 11),
                template_app
                 (template_app (template_hole 28, template_var 14),
                  template_var 13)),
              template_var 10)
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 8),
                   template_var 4),
                 template_var 13),
               template_var 3),
             template_var 1),
           template_var 11),
         template_app
          (template_app (template_hole 8, template_var 9),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 7),
                     template_var 5),
                   template_var 12),
                 template_var 2),
               template_var 0),
             template_var 10))))),
    ("Refine_Foreach.FOREACHoi_refine_genR",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         !!x y.
            [| x : ?S; y : ?S; ?RR x y |]
            ==> ?RR' (?\<alpha> x) (?\<alpha> y);
         ((?S, ?\<sigma>0.0), ?\<alpha> ` ?S, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               ALL x:?S - it. ALL y:it. ?RR x y;
               ALL x:?S' - it'. ALL y:it'. ?RR' x y; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; ALL x:?S - it. ALL y:it. ?RR x y;
               ALL x:?S' - it'. ALL y:it'. ?RR' x y; x' = ?\<alpha> x;
               it' = ?\<alpha> ` it; ((it, \<sigma>), it', \<sigma>') : ?R;
               x : it; ALL y:it - {x}. ?RR x y; x' : it';
               ALL y':it' - {x'}. ?RR' x' y' |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     ((it - {x}, \<sigma>), it' - {x'}, \<sigma>') : ?R}
                    (?f' x' \<sigma>');
         !!\<sigma> \<sigma>'.
            [| ?\<Phi> {} \<sigma>; ?\<Phi>' {} \<sigma>';
               (({}, \<sigma>), {}, \<sigma>') : ?R |]
            ==> (\<sigma>, \<sigma>') : ?R' |]
      ==> FOREACH\<^sub>O\<^bsup>?RR,?\<Phi>\<^esup> ?S ?f ?\<sigma>0.0
          <= \<Down> ?R'
              (FOREACH\<^sub>O\<^bsup>?RR',?\<Phi>'\<^esup> ?S' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 33, template_var 12),
              template_var 11)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 31, template_var 12),
            template_var 11)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app
                   (template_hole 27,
                    template_app
                     (template_app (template_hole 26, template_var 11),
                      template_var 7)),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app
                       (template_app (template_hole 31, template_var 12),
                        template_var 11)),
                    template_var 6))),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 9),
                 template_var 3),
               template_var 11),
             template_var 2),
           template_var 7),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 8),
                   template_var 4),
                 template_var 10),
               template_var 1),
             template_var 6))))),
    ("Refine_Foreach.FOREACHci_refine_genR",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         ((?S, ?\<sigma>0.0), ?\<alpha> ` ?S, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               ?\<Phi> it \<sigma>; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; x' = ?\<alpha> x;
               it' = ?\<alpha> ` it; ((it, \<sigma>), it', \<sigma>') : ?R;
               x : it; x' : it'; ?c \<sigma>; ?c' \<sigma>' |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     ((it - {x}, \<sigma>), it' - {x'}, \<sigma>') : ?R}
                    (?f' x' \<sigma>');
         !!\<sigma> \<sigma>'.
            [| ?\<Phi> {} \<sigma>; ?\<Phi>' {} \<sigma>';
               (({}, \<sigma>), {}, \<sigma>') : ?R |]
            ==> (\<sigma>, \<sigma>') : ?R';
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R; it ~= {}; it' ~= {};
               ~ ?c \<sigma>; ~ ?c' \<sigma>' |]
            ==> (\<sigma>, \<sigma>') : ?R' |]
      ==> FOREACH\<^sub>C\<^bsup>?\<Phi>\<^esup> ?S ?c ?f ?\<sigma>0.0
          <= \<Down> ?R'
              (FOREACH\<^sub>C\<^bsup>?\<Phi>'\<^esup> ?S' ?c' ?f'
                ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 34, template_var 12),
              template_var 11)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 32, template_var 12),
            template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app
                   (template_hole 30,
                    template_app
                     (template_app (template_hole 29, template_var 11),
                      template_var 9)),
                  template_app
                   (template_app
                     (template_hole 28,
                      template_app
                       (template_app (template_hole 32, template_var 12),
                        template_var 11)),
                    template_var 8))),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 11),
               template_var 4),
             template_var 2),
           template_var 9),
         template_app
          (template_app (template_hole 14, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 10),
                 template_var 3),
               template_var 1),
             template_var 8))))),
    ("Refine_Foreach.FOREACHoci_refine_genR",
     "[| inj_on ?\<alpha> ?S; ?S' = ?\<alpha> ` ?S;
         !!x y.
            [| x : ?S; y : ?S; ?RR x y |]
            ==> ?RR' (?\<alpha> x) (?\<alpha> y);
         ((?S, ?\<sigma>0.0), ?\<alpha> ` ?S, ?\<sigma>0') : ?R;
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               ?\<Phi> it \<sigma>; ALL x:?S - it. ALL y:it. ?RR x y;
               ALL x:?S' - it'. ALL y:it'. ?RR' x y; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?c \<sigma> = ?c' \<sigma>';
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi>' it' \<sigma>';
               ALL x:?S - it. ALL y:it. ?RR x y;
               ALL x:?S' - it'. ALL y:it'. ?RR' x y; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R |]
            ==> ?\<Phi> it \<sigma>;
         !!x it \<sigma> x' it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; ALL x:?S - it. ALL y:it. ?RR x y;
               ALL x:?S' - it'. ALL y:it'. ?RR' x y; x' = ?\<alpha> x;
               it' = ?\<alpha> ` it; ((it, \<sigma>), it', \<sigma>') : ?R;
               x : it; ALL y:it - {x}. ?RR x y; x' : it';
               ALL y':it' - {x'}. ?RR' x' y'; ?c \<sigma>; ?c' \<sigma>' |]
            ==> ?f x \<sigma>
                <= \<Down>
                    {(\<sigma>, \<sigma>').
                     ((it - {x}, \<sigma>), it' - {x'}, \<sigma>') : ?R}
                    (?f' x' \<sigma>');
         !!\<sigma> \<sigma>'.
            [| ?\<Phi> {} \<sigma>; ?\<Phi>' {} \<sigma>';
               (({}, \<sigma>), {}, \<sigma>') : ?R |]
            ==> (\<sigma>, \<sigma>') : ?R';
         !!it \<sigma> it' \<sigma>'.
            [| it <= ?S; it' <= ?S'; ?\<Phi> it \<sigma>;
               ?\<Phi>' it' \<sigma>'; ALL x:?S - it. ALL y:it. ?RR x y;
               ALL x:?S' - it'. ALL y:it'. ?RR' x y; it' = ?\<alpha> ` it;
               ((it, \<sigma>), it', \<sigma>') : ?R; it ~= {}; it' ~= {};
               ~ ?c \<sigma>; ~ ?c' \<sigma>' |]
            ==> (\<sigma>, \<sigma>') : ?R' |]
      ==> FOREACH\<^sub>O\<^sub>C\<^bsup>?RR,?\<Phi>\<^esup> ?S ?c ?f
           ?\<sigma>0.0
          <= \<Down> ?R'
              (FOREACH\<^sub>O\<^sub>C\<^bsup>?RR',?\<Phi>'\<^esup> ?S' ?c'
                ?f' ?\<sigma>0')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 14),
              template_var 13)
            ),
        template_equation
         (template_var 12,
          template_app
           (template_app (template_hole 34, template_var 14),
            template_var 13)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app
                   (template_hole 30,
                    template_app
                     (template_app (template_hole 29, template_var 13),
                      template_var 9)),
                  template_app
                   (template_app
                     (template_hole 28,
                      template_app
                       (template_app (template_hole 34, template_var 14),
                        template_var 13)),
                    template_var 8))),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 11),
                   template_var 5),
                 template_var 13),
               template_var 4),
             template_var 2),
           template_var 9),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 10),
                     template_var 6),
                   template_var 12),
                 template_var 3),
               template_var 1),
             template_var 8)))))]
