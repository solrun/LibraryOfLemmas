   [("Sequence_Zip.szip_smap_fst", "smap fst (?xs ||| ?ys) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Sequence_Zip.szip_smap_snd", "smap snd (?xs ||| ?ys) = ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Sequence_Zip.szip_sset_fst", "fst ` sset (?u ||| ?v) = sset ?u",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 1))),
    ("Sequence_Zip.szip_sset_snd", "snd ` sset (?u ||| ?v) = sset ?v",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Sequence_Zip.szip_smap", "smap fst ?zs ||| smap snd ?zs = ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Sequence_Zip.szip_sconst_smap_fst",
     "sconst ?a ||| ?xs = smap (Pair ?a) ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Sequence_Zip.szip_sconst_smap_snd",
     "?xs ||| sconst ?a = smap (prod.swap o Pair ?a) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("Sequence_Zip.szip_smap_right",
     "?xs ||| smap ?f ?ys = smap (apsnd ?f) (?xs ||| ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Sequence_Zip.szip_smap_left",
     "smap ?f ?xs ||| ?ys = smap (apfst ?f) (?xs ||| ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sequence_Zip.split_szip_all",
     "(ALL x. ?P x) = (ALL y z. ?P (y ||| z))",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Sequence_Zip.split_szip_ex", "(EX x. ?P x) = (EX y z. ?P (y ||| z))",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Sequence_Zip.sset_szip_finite",
     "finite (sset (?u ||| ?v)) = (finite (sset ?u) & finite (sset ?v))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Sequence_Zip.smap_szip_same",
     "smap ?f (?xs ||| ?xs) = smap (%x. ?f (x, x)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Sequence_Zip.szip_eq",
     "(?u ||| ?v = ?r ||| ?s) = (?u = ?r & ?v = ?s)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_dunno)),
    ("Sequence_Zip.infs_szip_fst",
     "infs (?P o fst) (?u ||| ?v) = infs ?P ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))),
         template_var 1))),
    ("Sequence_Zip.infs_szip_snd",
     "infs (?P o snd) (?u ||| ?v) = infs ?P ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))),
         template_var 0))),
    ("Sequence_Zip.szip_smap_both",
     "smap ?f ?xs ||| smap ?g ?ys = smap (map_prod ?f ?g) (?xs ||| ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Sequence_Zip.list_rel_pred_zip",
     "list_all2 ?P ?xs ?ys =
      (length ?xs = length ?ys & list_all (%(x, y). ?P x y) (?xs || ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Sequence_Zip.split_zip_all",
     "(ALL x. ?P x) = (ALL y z. length y = length z --> ?P (y || z))",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Sequence_Zip.split_zip_ex",
     "(EX x. ?P x) = (EX y z. length y = length z & ?P (y || z))",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 6, t_empty))),
    ("Sequence_Zip.stream_rel_szip",
     "stream_all2 (rel_prod ?A ?B) (?u ||| ?v) (?r ||| ?s) =
      (stream_all2 ?A ?u ?r & stream_all2 ?B ?v ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Sequence_Zip.list_choice_zip",
     "list_all (%x. EX y. ?P x y) ?xs =
      (EX ys.
          length ys = length ?xs & list_all (%(x, y). ?P x y) (?xs || ys))",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Sequence_Zip.list_choice_pair",
     "list_all (%xy. case xy of (x, y) => EX z. ?P x y z) (?xs || ?ys) =
      (EX zs.
          length zs = min (length ?xs) (length ?ys) &
          list_all (%(x, y, z). ?P x y z) (?xs || ?ys || zs))",
     template_equation
      (template_app
        (template_app (template_hole 15, t_empty),
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       template_app (template_hole 11, t_empty)))]
