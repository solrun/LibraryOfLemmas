   [("Norms.linf_norm_poly_ge_0",
     "(0::?'a) <= \<parallel>?f\<parallel>\<^sub>\<infinity>",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Norms.linf_norm_vec_ge_0",
     "(0::?'a) <= \<parallel>?v\<parallel>\<^sub>\<infinity>",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Norms.norm1_ge_0", "(0::?'a) <= norm1 ?f",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Norms.sq_norm_poly_ge_0",
     "(0::?'a) <= \<parallel>?p\<parallel>\<^sup>2",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Norms.sq_norm_vec_ge_0",
     "(0::?'a) <= \<parallel>?v\<parallel>\<^sup>2",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Norms.sq_norm_zero_vec",
     "\<parallel>0\<^sub>v ?n\<parallel>\<^sup>2 = (0::?'a)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Norms.linf_norm_zero_vec",
     "\<parallel>0\<^sub>v ?n\<parallel>\<^sub>\<infinity> = (0::?'a)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Norms.scalar_prod_ge_0", "(0::?'a) <= ?x \<bullet> ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Norms.linf_norm_vec_0",
     "\<parallel>vec 0 ?f\<parallel>\<^sub>\<infinity> = (0::?'a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Norms.sq_norm_vec_0",
     "\<parallel>vec 0 ?f\<parallel>\<^sup>2 = (0::?'a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Norms.linf_norm_vec_of_poly",
     "\<parallel>vec_of_poly ?f\<parallel>\<^sub>\<infinity> =
      \<parallel>?f\<parallel>\<^sub>\<infinity>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Norms.sq_norm_poly_of_vec",
     "\<parallel>poly_of_vec ?v\<parallel>\<^sup>2 =
      \<parallel>?v\<parallel>\<^sup>2",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Norms.sq_norm_vec_of_poly",
     "\<parallel>vec_of_poly ?p\<parallel>\<^sup>2 =
      \<parallel>?p\<parallel>\<^sup>2",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Norms.conjugate_of_int", "conjugate (of_int ?x) = of_int ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Norms.sq_norm_vec_as_cscalar_prod",
     "\<parallel>?v\<parallel>\<^sup>2 = ?v \<bullet>c ?v",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Norms.coeff_le_linf_norm",
     "\<bar>coeff ?f ?i\<bar>
      <= \<parallel>?f\<parallel>\<^sub>\<infinity>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Norms.vec_index_vec_of_list", "vec_of_list ?xs $ ?i = ?xs ! ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Norms.sq_norm_of_int",
     "\<parallel>of_int_hom.vec_hom ?v\<parallel>\<^sup>2 =
      of_int \<parallel>?v\<parallel>\<^sup>2",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Norms.cscalar_prod_is_scalar_prod",
     "?x \<bullet>c ?y = ?x \<bullet> ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Norms.linf_norm_poly_eq_0",
     "(\<parallel>?f\<parallel>\<^sub>\<infinity> = (0::?'a)) = (?f = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Norms.sq_norm_poly_eq_0",
     "(\<parallel>?p\<parallel>\<^sup>2 = (0::?'a)) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Norms.max_norm_witness",
     "EX i. \<parallel>?f\<parallel>\<^sub>\<infinity> =
            \<bar>coeff ?f i\<bar>",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Norms.linf_norm_poly_greater_0",
     "((0::?'a) < \<parallel>?f\<parallel>\<^sub>\<infinity>) = (?f ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Norms.sq_norm_poly_pos",
     "((0::?'a) < \<parallel>?p\<parallel>\<^sup>2) = (?p ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Norms.max_norm_le_sq_norm",
     "\<parallel>?f\<parallel>\<^sub>\<infinity>\<^sup>2
      <= \<parallel>?f\<parallel>\<^sup>2",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app (template_hole 0, template_var 0))),
    ("Norms.norm2_le_norm1_int",
     "\<parallel>?f\<parallel>\<^sup>2 <= (norm1 ?f)\<^sup>2",
     template_inequation
      (less_equals, template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Norms.linf_norm_vec_vCons",
     "\<parallel>vCons ?a ?v\<parallel>\<^sub>\<infinity> =
      max \<bar>?a\<bar> \<parallel>?v\<parallel>\<^sub>\<infinity>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Norms.linf_norm_pCons",
     "\<parallel>pCons ?a ?p\<parallel>\<^sub>\<infinity> =
      max \<bar>?a\<bar> \<parallel>?p\<parallel>\<^sub>\<infinity>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Norms.vec_of_list_append",
     "vec_of_list (?xs @ ?ys) = vec_of_list ?xs @\<^sub>v vec_of_list ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Norms.coeff_le_sq_norm",
     "\<bar>coeff ?f ?i\<bar>\<^sup>2 <= \<parallel>?f\<parallel>\<^sup>2",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app (template_hole 0, template_var 1))),
    ("Norms.linf_norm_vec_of_list",
     "\<parallel>vec_of_list ?xs\<parallel>\<^sub>\<infinity> =
      Missing_Lemmas.max_list (map abs ?xs @ [0::?'a])",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Norms.sq_norm_vec_vCons",
     "\<parallel>vCons ?a ?v\<parallel>\<^sup>2 =
      sq_norm_conjugate ?a + \<parallel>?v\<parallel>\<^sup>2",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Norms.sq_norm_poly_pCons",
     "\<parallel>pCons ?a ?p\<parallel>\<^sup>2 =
      sq_norm_conjugate ?a + \<parallel>?p\<parallel>\<^sup>2",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Norms.sq_norm_smult_vec",
     "\<parallel>?c \<cdot>\<^sub>v ?v\<parallel>\<^sup>2 =
      sq_norm_conjugate ?c * \<parallel>?v\<parallel>\<^sup>2",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 3, template_var 0)))),
    ("Norms.vec_of_poly_as_vec_of_list",
     "?f ~= 0 ==> vec_of_poly ?f = vec_of_list (rev (coeffs ?f))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Norms.vec_index_le_linf_norm",
     "?i < dim_vec ?v ==>
      \<bar>?v $ ?i\<bar> <= \<parallel>?v\<parallel>\<^sub>\<infinity>",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Norms.sq_norm_poly_le_linf_norm",
     "\<parallel>?p\<parallel>\<^sup>2
      <= of_nat (degree ?p + 1) *
         \<parallel>?p\<parallel>\<^sub>\<infinity>\<^sup>2",
     template_inequation
      (less_equals, template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_hole 5))),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Norms.linf_norm_vec_eq_0",
     "?v : carrier_vec ?n ==>
      (\<parallel>?v\<parallel>\<^sub>\<infinity> = (0::?'a)) =
      (?v = 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_equation
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Norms.sq_norm_vec_eq_0",
     "?v : carrier_vec ?n ==>
      (\<parallel>?v\<parallel>\<^sup>2 = (0::?'a)) = (?v = 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_equation
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Norms.linf_norm_poly_as_Greatest",
     "\<parallel>?f\<parallel>\<^sub>\<infinity> =
      (GREATEST a. a : abs ` set (coeffs ?f) Un {0::?'a})",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Norms.linf_norm_vec_as_Greatest",
     "\<parallel>?v\<parallel>\<^sub>\<infinity> =
      (GREATEST a. a : abs ` set (list_of_vec ?v) Un {0::?'a})",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Norms.linf_norm_vec_greater_0",
     "?v : carrier_vec ?n ==>
      ((0::?'a) < \<parallel>?v\<parallel>\<^sub>\<infinity>) =
      (?v ~= 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1))
              )],
         template_negation
          (
             template_equation
              (template_var 1,
               template_app (template_hole 0, template_var 0))
             )))),
    ("Norms.sq_norm_vec_greater_0",
     "?v : carrier_vec ?n ==>
      ((0::?'a) < \<parallel>?v\<parallel>\<^sup>2) = (?v ~= 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1))
              )],
         template_negation
          (
             template_equation
              (template_var 1,
               template_app (template_hole 0, template_var 0))
             )))),
    ("Norms.linf_norm_vec",
     "\<parallel>vec ?n ?f\<parallel>\<^sub>\<infinity> =
      Missing_Lemmas.max_list (map (abs o ?f) [0..<?n] @ [0::?'a])",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 0)),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Norms.vec_of_poly_pCons",
     "?f ~= 0 ==>
      vec_of_poly (pCons ?a ?f) =
      vec_of_poly ?f @\<^sub>v vec_of_list [?a]",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Norms.sq_norm_vec_le_linf_norm",
     "?v : carrier_vec ?n ==>
      \<parallel>?v\<parallel>\<^sup>2
      <= of_nat ?n * \<parallel>?v\<parallel>\<^sub>\<infinity>\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 7, template_var 1),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))))),
    ("Norms.vec_le_sq_norm",
     "[| ?v : carrier_vec ?n; ?i < ?n |]
      ==> \<bar>?v $ ?i\<bar>\<^sup>2 <= \<parallel>?v\<parallel>\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 2)))),
    ("Norms.norm2_norm1_main_inequality",
     "(SUM i = 0..<?n. ?f i * ?f i)
      <= (SUM i = 0..<?n. \<bar>?f i\<bar>)\<^sup>2",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Norms.scalar_prod_Cauchy",
     "[| ?u : carrier_vec ?n; ?v : carrier_vec ?n |]
      ==> (?u \<bullet> ?v)\<^sup>2
          <= \<parallel>?u\<parallel>\<^sup>2 *
             \<parallel>?v\<parallel>\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 8, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0)),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("Norms.real_pos_mult_max",
     "[| (0::?'a) < ?c; is_real ?a; is_real ?b |]
      ==> ?c * max ?a ?b = max (?c * ?a) (?c * ?b)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 4)),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 4)),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Norms.norm2_norm1_main_equality",
     "(SUM i = 0..<?n. \<bar>?f i\<bar>)\<^sup>2 =
      (SUM i = 0..<?n. ?f i * ?f i) +
      (SUM i = 0..<?n.
       SUM j = 0..<?n.
       if i = j then 0::?'a else \<bar>?f i\<bar> * \<bar>?f j\<bar>)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, t_empty),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_hole 5))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 11, t_empty),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))),
         template_app
          (template_app (template_hole 11, t_empty),
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 0)))))]
