Loading theory "Draft.Preliminaries" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.Quotient_Preservation" via "Draft.Axiomatised_BNF_CC")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Rewrite" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.Quotient_Preservation" via "Draft.Axiomatised_BNF_CC")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
specification
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
  relcompp_witness1: (?A OO ?B) (fst ?xy) (snd ?xy) ==> ?A (fst ?xy) (relcompp_witness ?A ?B ?xy)
  relcompp_witness2: (?A OO ?B) (fst ?xy) (snd ?xy) ==> ?B (relcompp_witness ?A ?B ?xy) (snd ?xy)
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Preliminaries"
### 0.062s elapsed time, 0.281s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
infix 1 then_cconv
infix 0 else_cconv
type cconv = conv
signature BASIC_CCONV =
  sig
    val CCONVERSION: cconv -> int -> tactic
    type cconv = conv
    val else_cconv: cconv * cconv -> cconv
    val then_cconv: cconv * cconv -> cconv
  end
signature CCONV =
  sig
    val CCONVERSION: cconv -> int -> tactic
    val abs_cconv:
       (cterm * Proof.context -> cconv) -> Proof.context -> cconv
    val all_cconv: cconv
    val arg1_cconv: cconv -> cconv
    val arg_cconv: cconv -> cconv
    type cconv = conv
    val comb_cconv: cconv -> cconv
    val combination_cconv: cconv -> cconv -> cconv
    val concl_cconv: int -> cconv -> cconv
    val else_cconv: cconv * cconv -> cconv
    val fconv_rule: cconv -> thm -> thm
    val first_cconv: cconv list -> cconv
    val fun2_cconv: cconv -> cconv
    val fun_cconv: cconv -> cconv
    val gconv_rule: cconv -> int -> thm -> thm
    val no_cconv: cconv
    val params_cconv:
       int -> (Proof.context -> cconv) -> Proof.context -> cconv
    val prems_cconv: int -> cconv -> cconv
    val rewr_cconv: thm -> cconv
    val rewrs_cconv: thm list -> cconv
    val then_cconv: cconv * cconv -> cconv
    val with_prems_cconv: int -> cconv -> cconv
  end
structure CConv: CCONV
structure Basic_CConv: BASIC_CCONV
val then_cconv = fn: cconv * cconv -> cconv
val CCONVERSION = fn: cconv -> int -> tactic
val else_cconv = fn: cconv * cconv -> cconv
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.158s elapsed time, 0.642s cpu time, 0.032s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
infix 1 then_pconv
infix 0 else_pconv
signature REWRITE =
  sig
    val abs_pconv: patconv -> string option * typ -> patconv
    val all_pconv: patconv
    val arg_pconv: patconv -> patconv
    val asm_pconv: patconv -> patconv
    val asms_pconv: patconv -> patconv
    val concl_pconv: patconv -> patconv
    val else_pconv: patconv * patconv -> patconv
    val for_pconv: patconv -> (string option * typ option) list -> patconv
    val forall_pconv: patconv -> string option * typ option -> patconv
    val fun_pconv: patconv -> patconv
    val imp_pconv: patconv -> patconv
    val in_pconv: patconv -> patconv
    val judgment_pconv: patconv -> patconv
    val match_pconv: patconv -> term * (string option * typ) list -> patconv
    val mk_hole: int -> typ -> term
    val params_pconv: patconv -> patconv
    type patconv =
       Proof.context -> Type.tyenv * (string * term) list -> cconv
    datatype ('a, 'b) pattern
    = Asm | At | Concl | For of 'b list | In | Term of 'a
    val rewrite_conv:
       Proof.context ->
         (term * (string * typ) list, string * typ option) pattern list *
         term option
           -> thm list -> conv
    val rewrs_pconv: term option -> thm list -> patconv
    val then_pconv: patconv * patconv -> patconv
  end
structure Rewrite: REWRITE
### theory "HOL-Library.Rewrite"
### 0.221s elapsed time, 0.890s cpu time, 0.032s GC time
Loading theory "Draft.Axiomatised_BNF_CC" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.Quotient_Preservation")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.227s elapsed time, 0.859s cpu time, 0.094s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.366s elapsed time, 1.446s cpu time, 0.094s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
specification
  rel_F_witness1: [| rel_F_neg_distr_cond ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Co3.0 ?Co3' ?Contra1.0
    ?Contra1' ?Contra2.0 ?Contra2' ?Contra3.0 ?Contra3' ?tytok;
   rel_F ?L1.0 ?L2.0 ?L3.0 (?Co1.0 OO ?Co1') (?Co2.0 OO ?Co2')
    (?Co3.0 OO ?Co3') (?Contra1.0 OO ?Contra1') (?Contra2.0 OO ?Contra2')
    (?Contra3.0 OO ?Contra3') ?x ?y |]
==> rel_F (%x (x', y). x' = x & ?L1.0 x y) (%x (x', y). x' = x & ?L2.0 x y)
     (%x (x', y). x' = x & ?L3.0 x y) ?Co1.0 ?Co2.0 ?Co3.0 ?Contra1.0
     ?Contra2.0 ?Contra3.0 ?x
     (rel_F_witness ?L1.0 ?L2.0 ?L3.0 ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Co3.0 ?Co3'
       ?Contra1.0 ?Contra1' ?Contra2.0 ?Contra2' ?Contra3.0 ?Contra3'
       (?x, ?y))
  rel_F_witness2: [| rel_F_neg_distr_cond ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Co3.0 ?Co3' ?Contra1.0
    ?Contra1' ?Contra2.0 ?Contra2' ?Contra3.0 ?Contra3' ?tytok;
   rel_F ?L1.0 ?L2.0 ?L3.0 (?Co1.0 OO ?Co1') (?Co2.0 OO ?Co2')
    (?Co3.0 OO ?Co3') (?Contra1.0 OO ?Contra1') (?Contra2.0 OO ?Contra2')
    (?Contra3.0 OO ?Contra3') ?x ?y |]
==> rel_F (%(x, y') y. y' = y & ?L1.0 x y) (%(x, y') y. y' = y & ?L2.0 x y)
     (%(x, y') y. y' = y & ?L3.0 x y) ?Co1' ?Co2' ?Co3' ?Contra1' ?Contra2'
     ?Contra3'
     (rel_F_witness ?L1.0 ?L2.0 ?L3.0 ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Co3.0 ?Co3'
       ?Contra1.0 ?Contra1' ?Contra2.0 ?Contra2' ?Contra3.0 ?Contra3'
       (?x, ?y))
     ?y
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.958s elapsed time, 3.581s cpu time, 0.801s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.072s elapsed time, 3.862s cpu time, 0.882s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
specification
  rel_G_witness1: [| rel_G_neg_distr_cond ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Contra1.0 ?Contra1'
    ?Contra2.0 ?Contra2' ?tytok;
   rel_G ?L1.0 ?L2.0 (?Co1.0 OO ?Co1') (?Co2.0 OO ?Co2')
    (?Contra1.0 OO ?Contra1') (?Contra2.0 OO ?Contra2') ?x ?y |]
==> rel_G (%x (x', y). x' = x & ?L1.0 x y) (%x (x', y). x' = x & ?L2.0 x y)
     ?Co1.0 ?Co2.0 ?Contra1.0 ?Contra2.0 ?x
     (rel_G_witness ?L1.0 ?L2.0 ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Contra1.0
       ?Contra1' ?Contra2.0 ?Contra2' (?x, ?y))
  rel_G_witness2: [| rel_G_neg_distr_cond ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Contra1.0 ?Contra1'
    ?Contra2.0 ?Contra2' ?tytok;
   rel_G ?L1.0 ?L2.0 (?Co1.0 OO ?Co1') (?Co2.0 OO ?Co2')
    (?Contra1.0 OO ?Contra1') (?Contra2.0 OO ?Contra2') ?x ?y |]
==> rel_G (%(x, y') y. y' = y & ?L1.0 x y) (%(x, y') y. y' = y & ?L2.0 x y)
     ?Co1' ?Co2' ?Contra1' ?Contra2'
     (rel_G_witness ?L1.0 ?L2.0 ?Co1.0 ?Co1' ?Co2.0 ?Co2' ?Contra1.0
       ?Contra1' ?Contra2.0 ?Contra2' (?x, ?y))
     ?y
### theory "Draft.Axiomatised_BNF_CC"
### 1.429s elapsed time, 4.859s cpu time, 0.944s GC time
Loading theory "Draft.Quotient_Preservation" (required by "Draft.Quotient_PreservationMoreTemplates")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Quotient_Preservation"
### 0.065s elapsed time, 0.170s cpu time, 0.078s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.921s elapsed time, 5.695s cpu time, 1.074s GC time
Loading theory "Draft.Templates" (required by "Draft.Quotient_PreservationMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.046s elapsed time, 0.060s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Quotient_PreservationMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.451s elapsed time, 0.504s cpu time, 0.065s GC time
Loading theory "Draft.Quotient_PreservationMoreTemplates"
val templateLemmas =
   [("Quotient_Preservation.G_Quotient",
     "[| Quotient ?R_l1.0 ?Abs_l1.0 ?Rep_l1.0 ?T_l1.0;
         Quotient ?R_l2.0 ?Abs_l2.0 ?Rep_l2.0 ?T_l2.0;
         Quotient ?R_co1.0 ?Abs_co1.0 ?Rep_co1.0 ?T_co1.0;
         Quotient ?R_co2.0 ?Abs_co2.0 ?Rep_co2.0 ?T_co2.0;
         Quotient ?R_contra1.0 ?Abs_contra1.0 ?Rep_contra1.0 ?T_contra1.0;
         Quotient ?R_contra2.0 ?Abs_contra2.0 ?Rep_contra2.0 ?T_contra2.0;
         rel_G_pos_distr_cond ?T_co1.0 ?T_co1.0^--1 ?T_co2.0 ?T_co2.0^--1
          ?T_contra1.0 ?T_contra1.0^--1 ?T_contra2.0 ?T_contra2.0^--1
          ?tytok |]
      ==> Quotient
           (rel_G ?R_l1.0 ?R_l2.0 ?R_co1.0 ?R_co2.0 ?R_contra1.0
             ?R_contra2.0)
           (map_G ?Abs_l1.0 ?Abs_l2.0 ?Abs_co1.0 ?Abs_co2.0 ?Rep_contra1.0
             ?Rep_contra2.0)
           (map_G ?Rep_l1.0 ?Rep_l2.0 ?Rep_co1.0 ?Rep_co2.0 ?Abs_contra1.0
             ?Abs_contra2.0)
           (rel_G ?T_l1.0 ?T_l2.0 ?T_co1.0 ?T_co2.0 ?T_contra1.0
             ?T_contra2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 15, template_var 24),
                  template_var 23),
                template_var 22),
              template_var 21)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 20),
                  template_var 19),
                template_var 18),
              template_var 17)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 16),
                  template_var 15),
                template_var 14),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 12),
                  template_var 11),
                template_var 10),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 9, template_var 13),
                            template_app
                             (template_hole 8, template_var 13)),
                          template_var 9),
                        template_app (template_hole 7, template_var 9)),
                      template_var 5),
                    template_app (template_hole 6, template_var 5)),
                  template_var 1),
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_var 24),
                             template_var 20),
                           template_var 16),
                         template_var 12),
                       template_var 8),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, template_var 23),
                           template_var 19),
                         template_var 15),
                       template_var 11),
                     template_var 6),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 22),
                         template_var 18),
                       template_var 14),
                     template_var 10),
                   template_var 7),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 21),
                       template_var 17),
                     template_var 13),
                   template_var 9),
                 template_var 5),
               template_var 1))
           )))]:
   (string * thm * template) list
### theory "Draft.Quotient_PreservationMoreTemplates"
### 0.285s elapsed time, 0.369s cpu time, 0.000s GC time
val it = (): unit
