Loading theory "HOL-Library.Function_Algebras" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Option_ord" (required by "Draft.List_localMoreTemplates" via "Draft.List_local" via "Draft.Extra")
Loading theory "HOL-Library.Product_Lexorder" (required by "Draft.List_localMoreTemplates" via "Draft.List_local" via "Draft.Extra")
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  option :: (preorder) preorder
  less_eq_option == less_eq :: 'a option => 'a option => bool
  less_option == less :: 'a option => 'a option => bool
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  prod :: (linorder, linorder) distrib_lattice
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  option :: (order) order_bot
  bot_option == bot :: 'a option
instantiation
  option :: (order_top) order_top
  top_option == top :: 'a option
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
instantiation
  option :: (inf) inf
  inf_option == inf :: 'a option => 'a option => 'a option
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Product_Lexorder"
### 0.113s elapsed time, 0.476s cpu time, 0.039s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  option :: (sup) sup
  sup_option == sup :: 'a option => 'a option => 'a option
### theory "HOL-Library.Function_Algebras"
### 0.128s elapsed time, 0.532s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  option :: (complete_lattice) complete_lattice
  Inf_option == Inf :: 'a option set => 'a option
  Sup_option == Sup :: 'a option set => 'a option
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.202s elapsed time, 0.792s cpu time, 0.077s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.List_localMoreTemplates" via "Draft.List_local")
### theory "HOL-Library.Option_ord"
### 0.316s elapsed time, 1.272s cpu time, 0.116s GC time
Loading theory "Draft.Extra" (required by "Draft.List_localMoreTemplates" via "Draft.List_local")
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.311s cpu time, 0.116s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Extra"
### 0.183s elapsed time, 0.722s cpu time, 0.086s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.While_Combinator"
### 0.413s elapsed time, 1.629s cpu time, 0.154s GC time
Loading theory "Draft.List_local" (required by "Draft.List_localMoreTemplates")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.081s elapsed time, 4.134s cpu time, 0.929s GC time
\<Sqinter> (Sup ` ?A) = \<Squnion> (Inf ` {f ` ?A |f. ALL Y:?A. f Y : Y})
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.039s elapsed time, 3.847s cpu time, 0.844s GC time
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.List_local"
### 0.990s elapsed time, 3.341s cpu time, 0.856s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.975s elapsed time, 6.172s cpu time, 1.155s GC time
Loading theory "Draft.Templates" (required by "Draft.List_localMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.List_localMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.452s elapsed time, 0.492s cpu time, 0.043s GC time
Loading theory "Draft.List_localMoreTemplates"
val templateLemmas =
   [("List_local.sorted_filter", "sorted ?xs ==> sorted (filter ?P ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List_local.list_choose_hd",
     "[| ALL x:set ?xs. ?P x; ?x : set ?xs |] ==> ?P (hd ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_var 1, template_app (template_hole 0, template_var 2))
           ))),
    ("List_local.partition_split",
     "set (fst (partition_split ?r ?x ?xs)) = set ?xs - rel_ext ?r `` {?x}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("List_local.partition_split",
     "set (snd (partition_split ?r ?x ?xs)) =
      set ?xs Int rel_ext ?r `` {?x}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("List_local.equiv_subset",
     "[| equiv ?A ?r; ?B <= ?A |] ==> equiv ?B (Restr ?r ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0), t_empty)))
           ))),
    ("List_local.map_prod_eq",
     "[| map fst ?xs = map fst ?ys; map snd ?xs = map snd ?ys |]
      ==> ?xs = ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_hole 4),
            template_var 1),
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("List_local.FIXME_refl_on_insert_absorb",
     "[| refl_on ?A ?r; ?x : ?A |] ==> insert ?x (?r `` {?x}) = ?r `` {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))))),
    ("List_local.partition_split'",
     "partition_split ?r ?x ?xs = (?xxs', ?xec) ==>
      set ?xec = set ?xs Int rel_ext ?r `` {?x}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0)))))),
    ("List_local.partition_split'",
     "partition_split ?r ?x ?xs = (?xxs', ?xec) ==>
      set ?xxs' = set ?xs - rel_ext ?r `` {?x}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0)))))),
    ("List_local.equal_odlist_equal",
     "[| distinct ?xs; distinct ?ys; sorted ?xs; sorted ?ys |]
      ==> odlist_equal ?xs ?ys = (?xs = ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0)
              )],
         template_equation (template_var 1, template_var 0)))),
    ("List_local.distinct_sorted_difference",
     "[| distinct ?xs; distinct ?ys; sorted ?xs; sorted ?ys |]
      ==> distinct (difference ?xs ?ys) & sorted (difference ?xs ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("List_local.distinct_sorted_intersection",
     "[| distinct ?xs; distinct ?ys; sorted ?xs; sorted ?ys |]
      ==> distinct (intersection ?xs ?ys) & sorted (intersection ?xs ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("List_local.set_difference",
     "[| distinct ?xs; distinct ?ys; sorted ?xs; sorted ?ys |]
      ==> set (difference ?xs ?ys) = set ?xs - set ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("List_local.set_intersection",
     "[| distinct ?xs; distinct ?ys; sorted ?xs; sorted ?ys |]
      ==> set (intersection ?xs ?ys) = set ?xs Int set ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("List_local.set_image",
     "[| distinct ?R; distinct ?xs; sorted ?R; sorted ?xs |]
      ==> set (List_local.image ?R ?xs) = set ?R `` set ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("List_local.equiv_subseteq_in_sym",
     "[| ?r `` ?X <= ?X; (?x, ?y) : ?r; ?y : ?X; equiv ?Y ?r; ?X <= ?Y |]
      ==> ?x : ?X",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 3)
           ))),
    ("List_local.FIXME_fiddle1",
     "[| ?x : ?Y; ?X <= ?Y; refl_on ?Y ?r |]
      ==> insert ?x (?X Int ?r `` {?x}) = insert ?x ?X Int ?r `` {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 0)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_hole 0)))))),
    ("List_local.partition",
     "[| equiv ?X (rel_ext ?r); set ?xs <= ?X |]
      ==> set ` set (List_local.partition ?r ?xs) =
          set ?xs // Restr (rel_ext ?r) (set ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, t_empty))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_hole 7),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 7, template_var 0)),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 9, t_empty)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 7, template_var 0)),
               t_empty)))))),
    ("List_local.partition_aux",
     "[| equiv ?X (rel_ext ?r); set ?xs <= ?X |]
      ==> fst (partition_aux ?r ?xs) = [] &
          set ` set (snd (partition_aux ?r ?xs)) =
          set ?xs // Restr (rel_ext ?r) (set ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, t_empty))
            ),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_var 0))),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 12),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 8, template_var 1),
                         template_var 0))))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 12, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 14, t_empty)),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 12, template_var 0)),
                     t_empty)))))
           ))),
    ("List_local.FIXME_second_fiddle",
     "[| Restr ?r ?Y `` ?X <= ?X; refl_on ?Z ?r; ?x : ?X; ?X <= ?Y;
         ?Y <= ?Z |]
      ==> Restr ?r (?Y - (?X - ?r `` {?x})) `` {?x} = Restr ?r ?X `` {?x}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  t_empty))),
            template_var 2),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 2, template_var 3),
        template_inequation (less_equals, template_var 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_app
                        (template_app (template_hole 8, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_hole 0))))),
                 t_empty))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app (template_hole 6, template_var 2), t_empty))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("List_local.FIXME_third_fiddle",
     "[| Restr ?r ?Y `` ?X <= ?X; ?X <= ?Y; ?x : ?X; ?y : ?Y - ?X;
         ?r `` {?y} Int ?X = {} |]
      ==> Restr ?r (?Y - (?X - ?r `` {?x})) `` {?y} =
          Restr ?r (?Y - ?X) `` {?y}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  t_empty))),
            template_var 2),
          template_var 2),
        template_inequation (less_equals, template_var 2, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_hole 0))),
            template_var 2),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_app
                        (template_app (template_hole 8, template_var 4),
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_hole 0))))),
                 t_empty))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 2)),
                 t_empty))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)))))]:
   (string * thm * template) list
### theory "Draft.List_localMoreTemplates"
### 0.304s elapsed time, 0.429s cpu time, 0.063s GC time
val it = (): unit
