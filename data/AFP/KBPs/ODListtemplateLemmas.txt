   [("ODList.distinct_toList", "distinct (toList ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("ODList.less_eq_list_refl", "less_eq_list ?xs ?xs",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("ODList.sorted_toList", "sorted (toList ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("ODList.ODList_toList", "ODList (toList ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("ODList.toSet_fromList_set", "toSet (fromList ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("ODList.toList_ODList", "toList (ODList ?xs) = msort ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("ODList.toList_fromList", "toList (fromList ?xs) = msort ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("ODList.less_eq_list_linear",
     "less_eq_list ?xs ?ys | less_eq_list ?ys ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("ODList.member_toSet", "member ?xs ?x = (?x : toSet ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("ODList.less_eq_list_nil_inv", "less_eq_list ?xs [] ==> ?xs = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("ODList.toSet_eq_iff", "(?X = ?Y) = (toSet ?X = toSet ?Y)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ODList.toList_filter",
     "toList (ODList.filter ?P ?xs) = List.filter ?P (toList ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.toSet_difference",
     "toSet (ODList.difference ?xs ?ys) = toSet ?xs - toSet ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.toSet_image",
     "toSet (ODList.image ?R ?xs) = toSet ?R `` toSet ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("ODList.toSet_intersect",
     "toSet (intersect ?xs ?ys) = toSet ?xs Int toSet ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.toSet_union",
     "toSet (ODList.union ?xs ?ys) = toSet ?xs Un toSet ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.odlist_all_iff", "odlist_all ?P ?xs = (ALL x:toSet ?xs. ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("ODList.toList_difference",
     "toList (ODList.difference ?xs ?ys) =
      List_local.difference (toList ?xs) (toList ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.toList_intersect",
     "toList (intersect ?xs ?ys) = intersection (toList ?xs) (toList ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.toList_union",
     "toList (ODList.union ?xs ?ys) = merge (toList ?xs) (toList ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ODList.lookup_tabulate",
     "lookup (tabulate ?ks ?f) = (Some o ?f) |` toSet ?ks",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("ODList.toList_image",
     "toList (ODList.image ?R ?xs) =
      msort (List_local.image (toList ?R) (toList ?xs))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("ODList.less_eq_list_not_le",
     "less_list ?xs ?ys = (less_eq_list ?xs ?ys & ~ less_eq_list ?ys ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("ODList.hd_toList", "toList ?xs = ?y # ?ys ==> ODList.hd ?xs = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("ODList.toSet_big_union",
     "toSet (big_union ?f ?X) = (UN x:set ?X. toSet (?f x))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("ODList.tabulate_toList",
     "toList (tabulate ?ks ?f) = map (%k. (k, ?f k)) (toList ?ks)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("ODList.less_eq_list_antisym",
     "[| less_eq_list ?xs ?ys; less_eq_list ?ys ?xs |] ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ODList.less_eq_list_trans",
     "[| less_eq_list ?xs ?ys; less_eq_list ?ys ?zs |]
      ==> less_eq_list ?xs ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ODList.toSet_filter",
     "toSet (ODList.filter ?P ?xs) = rel_ext (%x. x : toSet ?xs & ?P x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("ODList.toSet_ODList",
     "[| distinct ?xs; sorted ?xs |] ==> toSet (ODList ?xs) = set ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("ODList.sorted_mono_map",
     "[| sorted ?xs; order_class.mono_on ?f (set ?xs) |]
      ==> sorted (map ?f ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("ODList.odlist_all_cong",
     "[| ?xs = ?ys; !!x. x : toSet ?ys ==> ?f x = ?g x |]
      ==> odlist_all ?f ?xs = odlist_all ?g ?ys",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("ODList.less_eq_list_cons_inv",
     "less_eq_list (?x # ?xs) ?yys ==>
      EX y ys. ?yys = y # ys & (?x < y | ?x = y & less_eq_list ?xs ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("ODList.msort_map",
     "[| distinct ?xs; sorted ?xs; inj_on ?f (set ?xs);
         order_class.mono_on ?f (set ?xs) |]
      ==> msort (map ?f ?xs) = map ?f ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("ODList.odlist_cases",
     "[| ?dxs = ODList.empty ==> ?P;
         !!x xs.
            [| ?dxs = fromList (x # xs); distinct (x # xs);
               sorted (x # xs) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 7)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("ODList.distinct_sorted_induct",
     "[| distinct ?xs; sorted ?xs; ?P [];
         !!x xs.
            [| distinct (x # xs); sorted (x # xs); ?P xs |]
            ==> ?P (x # xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("ODList.odlist_induct",
     "[| !!dxs. dxs = ODList.empty ==> ?P dxs;
         !!dxs x xs.
            [| dxs = fromList (x # xs); distinct (x # xs); sorted (x # xs);
               ?P (fromList xs) |]
            ==> ?P dxs |]
      ==> ?P ?dxs",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
