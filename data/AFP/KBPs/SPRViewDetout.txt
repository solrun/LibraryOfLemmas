Loading theory "Draft.DFS" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.KBPsAlg")
Loading theory "Draft.Kripke" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView" via "Draft.KBPsAuto" via "Draft.KBPs")
Loading theory "Draft.MapOps" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.KBPsAlg")
Loading theory "Draft.Traces" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView" via "Draft.KBPsAuto" via "Draft.KBPs")
locale DFS
  fixes succs :: "'a => 'a list"
    and isNode :: "'a => bool"
    and invariant :: "'b => bool"
    and ins :: "'a => 'b => 'b"
    and memb :: "'a => 'b => bool"
    and empt :: "'b"
    and nodeAbs :: "'a => 'c"
  assumes "DFS succs isNode invariant ins memb empt nodeAbs"
locale DFS
  fixes succs :: "'a => 'a list"
    and isNode :: "'a => bool"
    and invariant :: "'b => bool"
    and ins :: "'a => 'b => 'b"
    and memb :: "'a => 'b => bool"
    and empt :: "'b"
    and nodeAbs :: "'a => 'c"
  assumes "DFS succs isNode invariant ins memb empt nodeAbs"
### theory "Draft.DFS"
### 0.216s elapsed time, 0.885s cpu time, 0.034s GC time
Loading theory "HOL-Library.AList" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Trie2" via "Trie.Trie")
consts
  update :: "'key => 'val => ('key * 'val) list => ('key * 'val) list"
### theory "Draft.MapOps"
### 0.344s elapsed time, 1.389s cpu time, 0.101s GC time
Loading theory "HOL-Library.Cancellation" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Eval" via "Draft.ODList" via "HOL-Library.Multiset")
consts
  update_with_aux ::
    "'val
     => 'key => ('val => 'val) => ('key * 'val) list => ('key * 'val) list"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### Missing patterns in function definition:
### !!a v va vb. tZip a (v \<leadsto> va) (tInit vb) = undefined
### !!a vb v va. tZip a (tInit vb) (v \<leadsto> va) = undefined
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.473s elapsed time, 1.860s cpu time, 0.173s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Eval" via "Draft.ODList")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### theory "Draft.Traces"
### 0.899s elapsed time, 3.582s cpu time, 0.274s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Function_Algebras"
### 0.272s elapsed time, 0.956s cpu time, 0.492s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. size_list size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.AList"
### 1.197s elapsed time, 4.603s cpu time, 0.822s GC time
Loading theory "Trie.Trie" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Trie2")
### theory "HOL-Library.Nat_Bijection"
### 0.360s elapsed time, 1.420s cpu time, 0.158s GC time
Loading theory "HOL-Library.Mapping" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet")
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "{}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  mapping :: (type, type) equal
  equal_mapping == equal_class.equal ::
    ('a, 'b) mapping => ('a, 'b) mapping => bool
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.Kripke"
### 2.164s elapsed time, 8.436s cpu time, 1.176s GC time
Loading theory "Draft.KBPs" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView" via "Draft.KBPsAuto")
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
locale combine_mapping_abel_semigroup
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
  assumes "combine_mapping_abel_semigroup (\<^bold>*)"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Mapping"
### 1.379s elapsed time, 5.276s cpu time, 1.277s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
locale JKBP
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
  assumes "JKBP jkbp"
locale JKBP
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
  assumes "JKBP jkbp"
### theory "Trie.Trie"
### 1.606s elapsed time, 6.166s cpu time, 1.426s GC time
Loading theory "HOL-Library.Option_ord" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView" via "Draft.KBPsAuto" via "Draft.Extra")
locale PreEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
  assumes "PreEnvironment jkbp"
instantiation
  option :: (preorder) preorder
  less_eq_option == less_eq :: 'a option => 'a option => bool
  less_option == less :: 'a option => 'a option => bool
locale PreEnvironmentJView
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tview"
  assumes "PreEnvironmentJView jkbp jview"
locale PreEnvironmentJView
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tview"
  assumes "PreEnvironmentJView jkbp jview"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
instantiation
  option :: (order) order_bot
  bot_option == bot :: 'a option
instantiation
  option :: (order_top) order_top
  top_option == top :: 'a option
instantiation
  option :: (inf) inf
  inf_option == inf :: 'a option => 'a option => 'a option
instantiation
  option :: (sup) sup
  sup_option == sup :: 'a option => 'a option => 'a option
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
instantiation
  option :: (complete_lattice) complete_lattice
  Inf_option == Inf :: 'a option set => 'a option
  Sup_option == Sup :: 'a option set => 'a option
### Additional type variable(s) in specification of "jkbpTn_rel": 'a, 'aAct, 'eAct
### Additional type variable(s) in specification of "jkbpTn_dom": 'a, 'aAct, 'eAct
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Option_ord"
### 0.336s elapsed time, 1.319s cpu time, 0.197s GC time
Loading theory "HOL-Library.Product_Lexorder" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView" via "Draft.KBPsAuto" via "Draft.Extra")
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
### Additional type variable(s) in specification of "jkbpCn_rel": 'a, 's, 'aAct, 'eAct
consts
  shift :: "'a list => 'a stream => 'a stream"
instantiation
  prod :: (linorder, linorder) distrib_lattice
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### Additional type variable(s) in specification of "jkbpCn_dom": 'a, 's, 'aAct, 'eAct
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
### theory "HOL-Library.Product_Lexorder"
### 0.413s elapsed time, 1.449s cpu time, 1.056s GC time
Loading theory "Draft.Extra" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView" via "Draft.KBPsAuto")
Found termination order: "size <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.KBPs"
### 1.724s elapsed time, 6.444s cpu time, 2.396s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  cycle :: "'a list => 'a stream"
### theory "Draft.Extra"
### 0.213s elapsed time, 0.840s cpu time, 0.038s GC time
Loading theory "Draft.KBPsAuto" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.SPRView")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.Set_Algebras"
### 0.232s elapsed time, 0.914s cpu time, 0.081s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
locale Environment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and envObs :: "'a => 's => 'obs"
  assumes "Environment jkbp"
### theory "HOL-Library.Stream"
### 1.328s elapsed time, 5.042s cpu time, 1.523s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Eval" via "Draft.ODList" via "Draft.List_local")
locale IncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
  assumes "IncrEnvironment jkbp jview envObs jviewInit jviewIncr"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "{}"
Found termination order: "{}"
locale IncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
  assumes "IncrEnvironment jkbp jview envObs jviewInit jviewIncr"
Found termination order: "{}"
### theory "HOL-Library.While_Combinator"
### 0.467s elapsed time, 1.843s cpu time, 0.289s GC time
Loading theory "Draft.List_local" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Eval" via "Draft.ODList")
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "jpTracesp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
locale IncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
  assumes "IncrEnvironment jkbp jview envObs jviewInit jviewIncr"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
locale IncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
  assumes "IncrEnvironment jkbp jview envObs jviewInit jviewIncr"
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
### theory "HOL-Library.Multiset"
### 4.536s elapsed time, 17.421s cpu time, 4.097s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
locale SimIncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
  assumes
    "SimIncrEnvironment jkbp envInit envAction envTrans envVal jview envObs
      jviewInit jviewIncr simf simRels simVal"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. size_list size (fst p)) <*mlex*> {}"
locale SimIncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
  assumes
    "SimIncrEnvironment jkbp envInit envAction envTrans envVal jview envObs
      jviewInit jviewIncr simf simRels simVal"
### theory "Draft.List_local"
### 0.859s elapsed time, 3.391s cpu time, 0.484s GC time
Loading theory "Draft.ODList" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Draft.Eval")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale AlgSimIncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
  assumes
    "AlgSimIncrEnvironment jkbp envInit envAction envTrans envVal jview
      envObs jviewInit jviewIncr simf simRels simVal simAbs simObs simInit
      simTrans simAction"
locale AlgSimIncrEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tv"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tv"
    and jviewIncr :: "'a => 'obs => 'tv => 'tv"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
  assumes
    "AlgSimIncrEnvironment jkbp envInit envAction envTrans envVal jview
      envObs jviewInit jviewIncr simf simRels simVal simAbs simObs simInit
      simTrans simAction"
Found termination order: "size <*mlex*> {}"
### theory "Draft.KBPsAuto"
### 2.153s elapsed time, 8.512s cpu time, 1.108s GC time
Loading theory "Draft.KBPsAlg" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet")
### theory "HOL-Library.Tree"
### 2.084s elapsed time, 8.235s cpu time, 1.108s GC time
Loading theory "Draft.SPRView" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet")
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.856s elapsed time, 3.389s cpu time, 0.391s GC time
Loading theory "Draft.Templates" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.ExtrEqs")
locale Environment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and envObs :: "'a => 's => 'obs"
  assumes "Environment jkbp"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.271s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SPRViewDetMoreTemplates")
locale FiniteEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and envObs :: "'a => 's => 'obs"
  assumes "FiniteEnvironment jkbp"
### theory "Draft.SPRView"
### 0.370s elapsed time, 1.471s cpu time, 0.079s GC time
Loading theory "Transitive-Closure.Transitive_Closure_Impl" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet" via "Transitive-Closure.Transitive_Closure_List_Impl")
Found termination order: "length <*mlex*> {}"
locale Algorithm
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tobs"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tobs"
    and jviewIncr :: "'a => 'obs => 'tobs => 'tobs"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
    and aOps :: "('ma, 'rep, 'aAct list) MapOps"
    and tOps :: "('mt, 'rep * 'obs, 'rep) MapOps"
  assumes
    "Algorithm jkbp envInit envAction envTrans envVal jview envObs jviewInit
      jviewIncr simf simRels simVal simAbs simObs simInit simTrans simAction
      aOps tOps"
instantiation
  odlist :: (linorder) equal
  equal_odlist == equal_class.equal :: 'a odlist => 'a odlist => bool
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
locale set_access
  fixes un :: "'a list => 'b => 'b"
    and set_of :: "'b => 'a set"
    and memb :: "'a => 'b => bool"
    and empty :: "'b"
  assumes "set_access un set_of memb empty"
locale set_access_succ
  fixes set_of :: "'b => 'a set"
    and memb :: "'a => 'b => bool"
    and empty :: "'b"
    and un :: "'a list => 'b => 'b"
    and succ :: "'a list => 'a list"
    and rel :: "('a * 'a) set"
  assumes "set_access_succ set_of memb empty un succ rel"
locale set_access_gen
  fixes set_of :: "'b => 'a set"
    and memb :: "'a => 'b => bool"
    and empty :: "'b"
    and un :: "'a list => 'b => 'b"
    and gen_succ :: "('a * 'a) list => 'a list => 'a list"
  assumes "set_access_gen set_of memb empty un gen_succ"
### theory "Transitive-Closure.Transitive_Closure_Impl"
### 0.352s elapsed time, 1.389s cpu time, 0.175s GC time
Loading theory "Transitive-Closure.Transitive_Closure_List_Impl" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet")
instantiation
  odlist :: (linorder) linorder
  less_eq_odlist == less_eq :: 'a odlist => 'a odlist => bool
  less_odlist == less :: 'a odlist => 'a odlist => bool
### theory "Transitive-Closure.Transitive_Closure_List_Impl"
### 0.082s elapsed time, 0.334s cpu time, 0.000s GC time
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
\<Sqinter> (Sup ` ?A) = \<Squnion> (Inf ` {f ` ?A |f. ALL Y:?A. f Y : Y})
instantiation
  odlist :: (linorder) linorder
  less_eq_odlist == less_eq :: 'a odlist => 'a odlist => bool
  less_odlist == less :: 'a odlist => 'a odlist => bool
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.716s elapsed time, 2.837s cpu time, 0.253s GC time
locale AlgorithmForAgent
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tobs"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tobs"
    and jviewIncr :: "'a => 'obs => 'tobs => 'tobs"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
    and aOps :: "('ma, 'rep, 'aAct list) MapOps"
    and tOps :: "('mt, 'rep * 'obs, 'rep) MapOps"
    and a :: "'a"
  assumes
    "AlgorithmForAgent jkbp envInit envAction envTrans envVal jview envObs
      jviewInit jviewIncr simf simRels simVal simAbs simObs simInit simTrans
      simAction aOps tOps"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.ODList"
### 1.715s elapsed time, 6.458s cpu time, 0.626s GC time
Loading theory "Draft.Eval" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet")
Loading theory "Draft.Trie2" (required by "Draft.SPRViewDetMoreTemplates" via "Draft.SPRViewDet")
locale AlgorithmForAgent
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tobs"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tobs"
    and jviewIncr :: "'a => 'obs => 'tobs => 'tobs"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
    and aOps :: "('ma, 'rep, 'aAct list) MapOps"
    and tOps :: "('mt, 'rep * 'obs, 'rep) MapOps"
    and a :: "'a"
  assumes
    "AlgorithmForAgent jkbp envInit envAction envTrans envVal jview envObs
      jviewInit jviewIncr simf simRels simVal simAbs simObs simInit simTrans
      simAction aOps tOps"
### theory "Draft.Trie2"
### 0.382s elapsed time, 1.164s cpu time, 0.112s GC time
Found termination order: "size <*mlex*> {}"
locale AlgorithmForAgent
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tobs"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tobs"
    and jviewIncr :: "'a => 'obs => 'tobs => 'tobs"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
    and aOps :: "('ma, 'rep, 'aAct list) MapOps"
    and tOps :: "('mt, 'rep * 'obs, 'rep) MapOps"
    and a :: "'a"
  assumes
    "AlgorithmForAgent jkbp envInit envAction envTrans envVal jview envObs
      jviewInit jviewIncr simf simRels simVal simAbs simObs simInit simTrans
      simAction aOps tOps"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
### theory "Draft.Eval"
### 1.052s elapsed time, 2.634s cpu time, 0.350s GC time
locale Algorithm
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "'s list"
    and envAction :: "'s => 'eAct list"
    and envTrans :: "'eAct => ('a => 'aAct) => 's => 's"
    and envVal :: "'s => 'p => bool"
    and jview :: "'a => 's Trace => 'tobs"
    and envObs :: "'a => 's => 'obs"
    and jviewInit :: "'a => 'obs => 'tobs"
    and jviewIncr :: "'a => 'obs => 'tobs => 'tobs"
    and simf :: "'s Trace => 'ss"
    and simRels :: "'a => ('ss * 'ss) set"
    and simVal :: "'ss => 'p => bool"
    and simAbs :: "'rep => 'ss set"
    and simObs :: "'a => 'rep => 'obs"
    and simInit :: "'a => 'obs => 'rep"
    and simTrans :: "'a => 'rep => 'rep list"
    and simAction :: "'a => 'rep => 'aAct list"
    and aOps :: "('ma, 'rep, 'aAct list) MapOps"
    and tOps :: "('mt, 'rep * 'obs, 'rep) MapOps"
  assumes
    "Algorithm jkbp envInit envAction envTrans envVal jview envObs jviewInit
      jviewIncr simf simRels simVal simAbs simObs simInit KBP.k_succs
      simAction aOps tOps"
### theory "Draft.KBPsAlg"
### 2.295s elapsed time, 6.873s cpu time, 0.711s GC time
Loading theory "Draft.SPRViewDet" (required by "Draft.SPRViewDetMoreTemplates")
locale FiniteDetBroadcastEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "('a, 'es, 'as) BEState list"
    and envAction :: "('a, 'es, 'as) BEState => 'eAct list"
    and
    envTrans ::
      "'eAct
       => ('a => 'aAct) => ('a, 'es, 'as) BEState => ('a, 'es, 'as) BEState"
    and envVal :: "('a, 'es, 'as) BEState => 'p => bool"
    and envObs :: "'a => ('a, 'es, 'as) BEState => 'cobs * 'as option"
    and agents :: "'a odlist"
    and envObsC :: "'es => 'cobs"
  assumes
    "FiniteDetBroadcastEnvironment jkbp envInit envAction envTrans envVal
      agents envObsC"
  defines "!!a s. envObs a s == (envObsC (es s), ODList.lookup (ps s) a)"
instantiation
  BEState_ext :: (linorder, linorder, linorder, linorder) linorder
  less_eq_BEState_ext == less_eq ::
    ('a, 'b, 'c, 'd) BEState_scheme
    => ('a, 'b, 'c, 'd) BEState_scheme => bool
  less_BEState_ext == less ::
    ('a, 'b, 'c, 'd) BEState_scheme
    => ('a, 'b, 'c, 'd) BEState_scheme => bool
locale FiniteDetBroadcastEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "('a, 'es, 'as) BEState list"
    and envAction :: "('a, 'es, 'as) BEState => 'eAct list"
    and
    envTrans ::
      "'eAct
       => ('a => 'aAct) => ('a, 'es, 'as) BEState => ('a, 'es, 'as) BEState"
    and envVal :: "('a, 'es, 'as) BEState => 'p => bool"
    and envObs :: "'a => ('a, 'es, 'as) BEState => 'cobs * 'as option"
    and agents :: "'a odlist"
    and envObsC :: "'es => 'cobs"
  assumes
    "FiniteDetBroadcastEnvironment jkbp envInit envAction envTrans envVal
      agents envObsC"
  defines "!!a s. envObs a s == (envObsC (es s), ODList.lookup (ps s) a)"
locale FiniteDetBroadcastEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "('a, 'es, 'as) BEState list"
    and envAction :: "('a, 'es, 'as) BEState => 'eAct list"
    and
    envTrans ::
      "'eAct
       => ('a => 'aAct) => ('a, 'es, 'as) BEState => ('a, 'es, 'as) BEState"
    and envVal :: "('a, 'es, 'as) BEState => 'p => bool"
    and envObs :: "'a => ('a, 'es, 'as) BEState => 'cobs * 'as option"
    and agents :: "'a odlist"
    and envObsC :: "'es => 'cobs"
  assumes
    "FiniteDetBroadcastEnvironment jkbp envInit envAction envTrans envVal
      agents envObsC"
  defines "!!a s. envObs a s == (envObsC (es s), ODList.lookup (ps s) a)"
locale FiniteDetBroadcastEnvironment
  fixes jkbp :: "'a => ('a, 'p, 'aAct) GC list"
    and envInit :: "('a, 'es, 'as) BEState list"
    and envAction :: "('a, 'es, 'as) BEState => 'eAct list"
    and
    envTrans ::
      "'eAct
       => ('a => 'aAct) => ('a, 'es, 'as) BEState => ('a, 'es, 'as) BEState"
    and envVal :: "('a, 'es, 'as) BEState => 'p => bool"
    and envObs :: "'a => ('a, 'es, 'as) BEState => 'cobs * 'as option"
    and agents :: "'a odlist"
    and envObsC :: "'es => 'cobs"
  assumes
    "FiniteDetBroadcastEnvironment jkbp envInit envAction envTrans envVal
      agents envObsC"
  defines "!!a s. envObs a s == (envObsC (es s), ODList.lookup (ps s) a)"
### theory "Draft.SPRViewDet"
### 4.805s elapsed time, 5.223s cpu time, 0.520s GC time
Loading theory "Draft.SPRViewDetMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.SPRViewDetMoreTemplates"
### 0.485s elapsed time, 0.629s cpu time, 0.000s GC time
val it = (): unit
