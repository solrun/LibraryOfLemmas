   [("List_Seg.lseg_if_splitf1", "lseg ?l None None = \<up> (?l = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("List_Seg.lseg_conc",
     "lseg ?l1.0 ?p ?q * lseg ?l2.0 ?q ?r \<Longrightarrow>\<^sub>A
      lseg (?l1.0 @ ?l2.0) ?p ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0))
         )),
    ("List_Seg.lseg_split",
     "lseg (?l1.0 @ ?l2.0) ?p ?r \<Longrightarrow>\<^sub>A
      \<exists>\<^sub>Aq. lseg ?l1.0 ?p q * lseg ?l2.0 q ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 1, t_empty))
         )),
    ("List_Seg.lseg_prepend",
     "?p \<mapsto>\<^sub>r node.Node ?x ?q *
      lseg ?l ?q ?s \<Longrightarrow>\<^sub>A
      lseg (?x # ?l) (Some ?p) ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2))),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app (template_hole 0, template_var 4)),
             template_var 0))
         )),
    ("List_Seg.lseg_append",
     "lseg ?l ?p (Some ?s) *
      ?s \<mapsto>\<^sub>r node.Node ?x ?q \<Longrightarrow>\<^sub>A
      lseg (?l @ [?x]) ?p ?q",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 3),
                   template_app (template_hole 5, template_var 2))),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)))),
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_hole 0))),
               template_var 3),
             template_var 0))
         )),
    ("List_Seg.lseg_prec2",
     "ALL l l'.
         ?h \<Turnstile>
         lseg l ?p None * ?F1.0 \<and>\<^sub>A lseg l' ?p None * ?F2.0 -->
         l = l'",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("List_Seg.lseg_prec3",
     "ALL q q'.
         ?h \<Turnstile>
         lseg ?l ?p q * ?F1.0 \<and>\<^sub>A lseg ?l ?p q' * ?F2.0 -->
         q = q'",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("List_Seg.lseg_if_splitf2",
     "lseg (?x # ?xs) ?p ?q =
      (\<exists>\<^sub>App n.
          pp \<mapsto>\<^sub>r node.Node ?x n * lseg ?xs n ?q *
          \<up> (?p = Some pp))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 7, t_empty))),
    ("List_Seg.lseg_prec1",
     "ALL l l'.
         ?h \<Turnstile>
         lseg l ?p (Some ?q) * ?q \<mapsto>\<^sub>r ?x *
         ?F1.0 \<and>\<^sub>A
         lseg l' ?p (Some ?q) * ?q \<mapsto>\<^sub>r ?x * ?F2.0 -->
         l = l'",
     template_predicate (template_app (template_hole 8, t_empty)))]
