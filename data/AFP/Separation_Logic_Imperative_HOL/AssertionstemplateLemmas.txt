   [("Assertions.ent_false", "false \<Longrightarrow>\<^sub>A ?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Assertions.ent_true", "?P \<Longrightarrow>\<^sub>A true",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Assertions.ent_refl", "?P \<Longrightarrow>\<^sub>A ?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Assertions.entt_refl", "?A \<Longrightarrow>\<^sub>t ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Assertions.entt_emp", "?A \<Longrightarrow>\<^sub>t emp",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Assertions.entt_true", "?A \<Longrightarrow>\<^sub>t true",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Assertions.is_pure_assn_pure", "is_pure_assn (\<up> ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Assertions.pure_assn_proper", "proper (pure_assn_raw ?b)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Assertions.in_range_empty", "in_range (?h, {})",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Assertions.snga_assn_proper", "proper (snga_assn_raw ?r ?x)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Assertions.sngr_assn_proper", "proper (sngr_assn_raw ?r ?x)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Assertions.wand_proper", "proper (wand_raw ?P ?Q)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Assertions.mod_false", "~ ?h \<Turnstile> false",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)
             )
         )),
    ("Assertions.mod_emp_simp", "(?h, {}) \<Turnstile> emp",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Assertions.mod_h_bot_iff", "(?h, {}) \<Turnstile> true",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Assertions.ent_disjI1_direct",
     "?A \<Longrightarrow>\<^sub>A ?A \<or>\<^sub>A ?B",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Assertions.ent_disjI2_direct",
     "?B \<Longrightarrow>\<^sub>A ?A \<or>\<^sub>A ?B",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Assertions.entt_disjI1_direct",
     "?A \<Longrightarrow>\<^sub>t ?A \<or>\<^sub>A ?B",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Assertions.entt_disjI2_direct",
     "?B \<Longrightarrow>\<^sub>t ?A \<or>\<^sub>A ?B",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Assertions.ex_assn_const", "(\<exists>\<^sub>Ax. ?c) = ?c",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Assertions.assn_one_left", "emp * ?P = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Assertions.star_false_left", "false * ?P = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Assertions.star_false_right", "?P * false = false",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Assertions.mod_true", "(?h \<Turnstile> true) = in_range ?h",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Assertions.pure_assn_eq_emp_iff", "(\<up> ?P = emp) = ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Assertions.triv_exI",
     "?Q ?x \<Longrightarrow>\<^sub>A \<exists>\<^sub>Ax. ?Q x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 1, template_var 0)),
           template_app (template_hole 0, t_empty))
         )),
    ("Assertions.ent_mp", "?P * (?P -* ?Q) \<Longrightarrow>\<^sub>A ?Q",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 0)
         )),
    ("Assertions.pure_assn_eq_false_iff", "(\<up> ?P = false) = (~ ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Assertions.assn_times_comm", "?P * ?Q = ?Q * ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Assertions.models_in_range", "?h \<Turnstile> ?P ==> in_range ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Assertions.mod_emp", "(?h \<Turnstile> emp) = (snd ?h = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Assertions.mod_h_bot_iff", "((?h, {}) \<Turnstile> \<up> ?b) = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 1)),
    ("Assertions.ent_imp_entt",
     "?P \<Longrightarrow>\<^sub>A ?Q ==> ?P \<Longrightarrow>\<^sub>t ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Assertions.entt_star_true_simp",
     "(?A \<Longrightarrow>\<^sub>t ?B * true) =
      (?A \<Longrightarrow>\<^sub>t ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Assertions.entt_star_true_simp",
     "(?A * true \<Longrightarrow>\<^sub>t ?B) =
      (?A \<Longrightarrow>\<^sub>t ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Assertions.pure_assn_eq_conv", "(\<up> ?P = \<up> ?Q) = (?P = ?Q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Assertions.mod_h_bot_iff",
     "((?h, {}) \<Turnstile> ?q \<mapsto>\<^sub>a ?y) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Assertions.mod_h_bot_iff",
     "((?h, {}) \<Turnstile> ?p \<mapsto>\<^sub>r ?x) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Assertions.snga_same_false",
     "?p \<mapsto>\<^sub>a ?x * ?p \<mapsto>\<^sub>a ?y = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_hole 0)),
    ("Assertions.sngr_same_false",
     "?p \<mapsto>\<^sub>r ?x * ?p \<mapsto>\<^sub>r ?y = false",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_hole 0)),
    ("Assertions.ent_false_iff",
     "(?P \<Longrightarrow>\<^sub>A false) = (ALL h. ~ h \<Turnstile> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Assertions.ent_pure_pre_iff_sng",
     "(\<up> ?b \<Longrightarrow>\<^sub>A ?Q) =
      (?b --> (emp \<Longrightarrow>\<^sub>A ?Q))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_var 0)))),
    ("Assertions.merge_pure_star", "\<up> ?a * \<up> ?b = \<up> (?a & ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Assertions.merge_pure_and",
     "\<up> ?a \<and>\<^sub>A \<up> ?b = \<up> (?a & ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Assertions.merge_pure_or",
     "\<up> ?a \<or>\<^sub>A \<up> ?b = \<up> (?a | ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Assertions.mod_star_trueI",
     "?h \<Turnstile> ?P ==> ?h \<Turnstile> ?P * true",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Assertions.ent_disjI1'",
     "?A \<Longrightarrow>\<^sub>A ?B ==>
      ?A \<Longrightarrow>\<^sub>A ?B \<or>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Assertions.ent_disjI2'",
     "?A \<Longrightarrow>\<^sub>A ?C ==>
      ?A \<Longrightarrow>\<^sub>A ?B \<or>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Assertions.ent_conjE1",
     "?A \<Longrightarrow>\<^sub>A ?C ==>
      ?A \<and>\<^sub>A ?B \<Longrightarrow>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Assertions.ent_conjE2",
     "?B \<Longrightarrow>\<^sub>A ?C ==>
      ?A \<and>\<^sub>A ?B \<Longrightarrow>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Assertions.enttD",
     "?A \<Longrightarrow>\<^sub>t ?B ==>
      ?A \<Longrightarrow>\<^sub>A ?B * true",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Assertions.entt_disjI1'",
     "?A \<Longrightarrow>\<^sub>t ?B ==>
      ?A \<Longrightarrow>\<^sub>t ?B \<or>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Assertions.entt_disjI2'",
     "?A \<Longrightarrow>\<^sub>t ?C ==>
      ?A \<Longrightarrow>\<^sub>t ?B \<or>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Assertions.relH_refl", "in_range (?h, ?as) ==> relH ?as ?h ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 1)
           ))),
    ("Assertions.relH_in_rangeI", "relH ?as ?h ?h' ==> in_range (?h, ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Assertions.relH_in_rangeI", "relH ?as ?h ?h' ==> in_range (?h', ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Assertions.relH_sym", "relH ?as ?h ?h' ==> relH ?as ?h' ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Assertions.enttI",
     "?A \<Longrightarrow>\<^sub>A ?B * true ==>
      ?A \<Longrightarrow>\<^sub>t ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Assertions.ent_disjI1",
     "?P \<or>\<^sub>A ?Q \<Longrightarrow>\<^sub>A ?R ==>
      ?P \<Longrightarrow>\<^sub>A ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Assertions.ent_disjI2",
     "?P \<or>\<^sub>A ?Q \<Longrightarrow>\<^sub>A ?R ==>
      ?Q \<Longrightarrow>\<^sub>A ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Assertions.entt_disjD1",
     "?A \<or>\<^sub>A ?B \<Longrightarrow>\<^sub>t ?C ==>
      ?A \<Longrightarrow>\<^sub>t ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Assertions.entt_disjD2",
     "?A \<or>\<^sub>A ?B \<Longrightarrow>\<^sub>t ?C ==>
      ?B \<Longrightarrow>\<^sub>t ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Assertions.mod_pure",
     "(?h \<Turnstile> \<up> ?b) = (snd ?h = {} & ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Assertions.mod_h_bot_indep",
     "((?h, {}) \<Turnstile> ?P) = ((?h', {}) \<Turnstile> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Assertions.assn_times_assoc", "?P * ?Q * ?R = ?P * (?Q * ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Assertions.mod_not_dist",
     "(?h \<Turnstile> \<not>\<^sub>A ?P) =
      (in_range ?h & ~ ?h \<Turnstile> ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Assertions.mod_pure_star_dist",
     "(?h \<Turnstile> ?P * \<up> ?b) = (?h \<Turnstile> ?P & ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Assertions.ent_pure_pre_iff",
     "(?P * \<up> ?b \<Longrightarrow>\<^sub>A ?Q) =
      (?b --> (?P \<Longrightarrow>\<^sub>A ?Q))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Assertions.bool_assn_proper",
     "proper ?P ==> proper (%h. in_range h & ~ ?P h)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Assertions.ent_ex_postI",
     "?P \<Longrightarrow>\<^sub>A ?Q ?x ==>
      ?P \<Longrightarrow>\<^sub>A \<exists>\<^sub>Ax. ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_var 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, t_empty))
           ))),
    ("Assertions.ent_wandI",
     "?Q * ?P \<Longrightarrow>\<^sub>A ?R ==>
      ?P \<Longrightarrow>\<^sub>A ?Q -* ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Assertions.enttI_true",
     "?P * true \<Longrightarrow>\<^sub>A ?Q * true ==>
      ?P \<Longrightarrow>\<^sub>t ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Assertions.is_pure_assn_starI",
     "[| is_pure_assn ?a; is_pure_assn ?b |] ==> is_pure_assn (?a * ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Assertions.times_assn_proper",
     "[| proper ?P; proper ?Q |] ==> proper (times_assn_raw ?P ?Q)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Assertions.mod_and_dist",
     "(?h \<Turnstile> ?P \<and>\<^sub>A ?Q) =
      (?h \<Turnstile> ?P & ?h \<Turnstile> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Assertions.mod_or_dist",
     "(?h \<Turnstile> ?P \<or>\<^sub>A ?Q) =
      (?h \<Turnstile> ?P | ?h \<Turnstile> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Assertions.mod_ex_dist",
     "(?h \<Turnstile> (\<exists>\<^sub>Ax. ?P x)) =
      (EX x. ?h \<Turnstile> ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Assertions.star_or_dist2",
     "?C * (?A \<or>\<^sub>A ?B) = ?C * ?A \<or>\<^sub>A ?C * ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Assertions.star_or_dist1",
     "(?A \<or>\<^sub>A ?B) * ?C = ?A * ?C \<or>\<^sub>A ?B * ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Assertions.ex_distrib_star",
     "(\<exists>\<^sub>Ax. ?P x * ?Q) = (\<exists>\<^sub>Ax. ?P x) * ?Q",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Assertions.ex_distrib_and",
     "(\<exists>\<^sub>Ax. ?P x \<and>\<^sub>A ?Q) =
      (\<exists>\<^sub>Ax. ?P x) \<and>\<^sub>A ?Q",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Assertions.ex_distrib_or",
     "(\<exists>\<^sub>Ax. ?P x \<or>\<^sub>A ?Q) =
      (\<exists>\<^sub>Ax. ?P x) \<or>\<^sub>A ?Q",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Assertions.ent_fwd",
     "[| ?h \<Turnstile> ?P; ?P \<Longrightarrow>\<^sub>A ?Q |]
      ==> ?h \<Turnstile> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Assertions.ent_iffI",
     "[| ?A \<Longrightarrow>\<^sub>A ?B; ?B \<Longrightarrow>\<^sub>A ?A |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Assertions.entailsD",
     "[| ?P \<Longrightarrow>\<^sub>A ?Q; ?h \<Turnstile> ?P |]
      ==> ?h \<Turnstile> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Assertions.ent_trans",
     "[| ?P \<Longrightarrow>\<^sub>A ?Q; ?Q \<Longrightarrow>\<^sub>A ?R |]
      ==> ?P \<Longrightarrow>\<^sub>A ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Assertions.entt_trans",
     "[| ?A \<Longrightarrow>\<^sub>t ?B; ?B \<Longrightarrow>\<^sub>t ?C |]
      ==> ?A \<Longrightarrow>\<^sub>t ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Assertions.precise_extr_pure",
     "precise (%x y. \<up> ?P * ?R x y) = (?P --> precise ?R)",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("Assertions.precise_extr_pure",
     "precise (%x y. ?R x y * \<up> ?P) = (?P --> precise ?R)",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Assertions.ex_assn_proper",
     "(!!x. proper (?P x)) ==> proper (%h. EX x. ?P x h)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Assertions.mod_exI",
     "EX x. ?h \<Turnstile> ?P x ==>
      ?h \<Turnstile> (\<exists>\<^sub>Ax. ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0)
           ))),
    ("Assertions.ent_ex_preI",
     "(!!x. ?P x \<Longrightarrow>\<^sub>A ?Q) ==>
      \<exists>\<^sub>Ax. ?P x \<Longrightarrow>\<^sub>A ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0)
           ))),
    ("Assertions.Abs_assn_eqI",
     "(!!h. ?P h = (h \<Turnstile> ?Pr)) ==> ?Pr = Abs_assn ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Assertions.Abs_assn_eqI",
     "(!!h. ?P h = (h \<Turnstile> ?Pr)) ==> Abs_assn ?P = ?Pr",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Assertions.properD1",
     "[| proper ?P; ?P (?h, ?as) |] ==> in_range (?h, ?as)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Assertions.entailsI",
     "(!!h. h \<Turnstile> ?P ==> h \<Turnstile> ?Q) ==>
      ?P \<Longrightarrow>\<^sub>A ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Assertions.bool_assn_proper",
     "[| proper ?P; proper ?Q |] ==> proper (%h. ?P h & ?Q h)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Assertions.bool_assn_proper",
     "[| proper ?P; proper ?Q |] ==> proper (%h. ?P h | ?Q h)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Assertions.ent_conjI",
     "[| ?A \<Longrightarrow>\<^sub>A ?B; ?A \<Longrightarrow>\<^sub>A ?C |]
      ==> ?A \<Longrightarrow>\<^sub>A ?B \<and>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Assertions.ent_disjE",
     "[| ?A \<Longrightarrow>\<^sub>A ?C; ?B \<Longrightarrow>\<^sub>A ?C |]
      ==> ?A \<or>\<^sub>A ?B \<Longrightarrow>\<^sub>A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Assertions.entt_disjE",
     "[| ?A \<Longrightarrow>\<^sub>t ?M; ?B \<Longrightarrow>\<^sub>t ?M |]
      ==> ?A \<or>\<^sub>A ?B \<Longrightarrow>\<^sub>t ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Assertions.in_range_subset",
     "[| ?as <= ?as'; in_range (?h, ?as') |] ==> in_range (?h, ?as)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Assertions.relH_subset",
     "[| relH ?bs ?h ?h'; ?as <= ?bs |] ==> relH ?as ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Assertions.ent_pure_post_iff_sng",
     "(?P \<Longrightarrow>\<^sub>A \<up> ?b) =
      ((ALL h. h \<Turnstile> ?P --> ?b) &
       (?P \<Longrightarrow>\<^sub>A emp))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_hole 0)))),
    ("Assertions.in_range_dist_union",
     "in_range (?h, ?as Un ?as') =
      (in_range (?h, ?as) & in_range (?h, ?as'))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Assertions.relH_dist_union",
     "relH (?as Un ?as') ?h ?h' = (relH ?as ?h ?h' & relH ?as' ?h ?h')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Assertions.mod_h_bot_normalize",
     "syntax_fo_nomatch undefined ?h ==>
      ((?h, {}) \<Turnstile> ?P) = (h\<^sub>\<bottom> \<Turnstile> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 0),
             template_hole 1))))),
    ("Assertions.is_pure_assnE",
     "[| is_pure_assn ?a; !!P. ?a = \<up> P ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Assertions.relH_trans",
     "[| relH ?as ?h1.0 ?h2.0; relH ?as ?h2.0 ?h3.0 |]
      ==> relH ?as ?h1.0 ?h3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Assertions.mod_h_bot_iff",
     "((?h, {}) \<Turnstile> (\<exists>\<^sub>Ax. ?R x)) =
      (EX x. (?h, {}) \<Turnstile> ?R x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, t_empty))),
    ("Assertions.ex_join_or",
     "(\<exists>\<^sub>Ax. ?P x \<or>\<^sub>A (\<exists>\<^sub>Ax. ?Q x)) =
      (\<exists>\<^sub>Ax. ?P x \<or>\<^sub>A ?Q x)",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 1, t_empty))),
    ("Assertions.mod_relH",
     "relH ?as ?h ?h' ==>
      ((?h, ?as) \<Turnstile> ?P) = ((?h', ?as) \<Turnstile> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Assertions.ent_star_mono",
     "[| ?P \<Longrightarrow>\<^sub>A ?P';
         ?Q \<Longrightarrow>\<^sub>A ?Q' |]
      ==> ?P * ?Q \<Longrightarrow>\<^sub>A ?P' * ?Q'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Assertions.entt_star_mono",
     "[| ?A \<Longrightarrow>\<^sub>t ?B; ?C \<Longrightarrow>\<^sub>t ?D |]
      ==> ?A * ?C \<Longrightarrow>\<^sub>t ?B * ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Assertions.ent_pure_post_iff",
     "(?P \<Longrightarrow>\<^sub>A ?Q * \<up> ?b) =
      ((ALL h. h \<Turnstile> ?P --> ?b) &
       (?P \<Longrightarrow>\<^sub>A ?Q))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 1)))),
    ("Assertions.mod_starD",
     "?h \<Turnstile> ?A * ?B ==>
      EX h1 h2. h1 \<Turnstile> ?A & h2 \<Turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Assertions.mod_star_trueE",
     "[| ?h \<Turnstile> ?P * true; !!h'. h' \<Turnstile> ?P ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Assertions.mod_h_bot_iff",
     "((?h, {}) \<Turnstile> ?P * ?Q) =
      ((?h, {}) \<Turnstile> ?P & (?h, {}) \<Turnstile> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Assertions.mod_h_bot_iff",
     "((?h, {}) \<Turnstile> ?P \<and>\<^sub>A ?Q) =
      ((?h, {}) \<Turnstile> ?P & (?h, {}) \<Turnstile> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Assertions.mod_h_bot_iff",
     "((?h, {}) \<Turnstile> ?P \<or>\<^sub>A ?Q) =
      ((?h, {}) \<Turnstile> ?P | (?h, {}) \<Turnstile> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Assertions.relH_array",
     "[| relH ?as ?h ?h'; addr_of_array ?r : ?as |]
      ==> Array.get ?h ?r = Array.get ?h' ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Assertions.relH_ref",
     "[| relH ?as ?h ?h'; addr_of_ref ?r : ?as |]
      ==> Ref.get ?h ?r = Ref.get ?h' ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Assertions.relH_set_array",
     "[| addr_of_array ?r ~: ?as; in_range (?h, ?as) |]
      ==> relH ?as ?h (Array.set ?r ?x ?h)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Assertions.relH_set_ref",
     "[| addr_of_ref ?r ~: ?as; in_range (?h, ?as) |]
      ==> relH ?as ?h (Ref.set ?r ?x ?h)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Assertions.mod_exE",
     "[| ?h \<Turnstile> (\<exists>\<^sub>Ax. ?P x);
         !!x. ?h \<Turnstile> ?P x ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2, template_app (template_hole 1, t_empty)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Assertions.ex_one_point_gen",
     "(!!h x. h \<Turnstile> ?P x ==> x = ?v) ==>
      (\<exists>\<^sub>Ax. ?P x) = ?P ?v",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app (template_var 1, template_var 0)))),
    ("Assertions.preciseD",
     "[| precise ?R;
         ?h \<Turnstile> ?R ?a ?p * ?F \<and>\<^sub>A ?R ?a' ?p * ?F' |]
      ==> ?a = ?a'",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_var 6, template_var 5),
                          template_var 4)),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_var 6, template_var 2),
                        template_var 4)),
                    template_var 1))),
              template_var 0)
            )],
       template_equation (template_var 5, template_var 2))),
    ("Assertions.entt_frame_fwd",
     "[| ?P \<Longrightarrow>\<^sub>t ?Q;
         ?A \<Longrightarrow>\<^sub>t ?P * ?F;
         ?Q * ?F \<Longrightarrow>\<^sub>t ?B |]
      ==> ?A \<Longrightarrow>\<^sub>t ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Assertions.preciseD'",
     "[| precise ?R; ?h \<Turnstile> ?R ?a ?p * ?F;
         ?h \<Turnstile> ?R ?a' ?p * ?F' |]
      ==> ?a = ?a'",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_var 6, template_var 5),
                      template_var 4)),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_var 6, template_var 1),
                      template_var 4)),
                  template_var 0)),
              template_var 2)
            )],
       template_equation (template_var 5, template_var 1))),
    ("Assertions.proper_iff",
     "[| proper ?P; relH ?as ?h ?h'; in_range (?h', ?as) |]
      ==> ?P (?h, ?as) = ?P (?h', ?as)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_var 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2))))),
    ("Assertions.properD2",
     "[| proper ?P; ?P (?h, ?as); relH ?as ?h ?h'; in_range (?h', ?as) |]
      ==> ?P (?h', ?as)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 0,
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_var 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))
           ))),
    ("Assertions.star_assnI",
     "[| (?h, ?as) \<Turnstile> ?P; (?h, ?as') \<Turnstile> ?Q;
         ?as Int ?as' = {} |]
      ==> (?h, ?as Un ?as') \<Turnstile> ?P * ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Assertions.mod_star_trueE'",
     "[| ?h \<Turnstile> ?P * true;
         !!h'. [| fst h' = fst ?h; snd h' <= snd ?h; h' \<Turnstile> ?P |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_hole 5)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Assertions.preciseI",
     "(!!a a' h p F F'.
          h \<Turnstile> ?R a p * F \<and>\<^sub>A ?R a' p * F' ==>
          a = a') ==>
      precise ?R",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Assertions.mod_star_conv",
     "(?h \<Turnstile> ?A * ?B) =
      (EX hr as1 as2.
          ?h = (hr, as1 Un as2) &
          as1 Int as2 = {} &
          (hr, as1) \<Turnstile> ?A & (hr, as2) \<Turnstile> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Assertions.properI",
     "[| !!as h. ?P (h, as) ==> in_range (h, as);
         !!as h h'.
            [| ?P (h, as); relH as h h'; in_range (h', as) |]
            ==> ?P (h', as) |]
      ==> proper ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Assertions.wand_assnI",
     "[| in_range (?h, ?as);
         !!h' as'.
            [| ?as Int as' = {}; relH ?as ?h h'; in_range (h', ?as);
               (h', as') \<Turnstile> ?Q |]
            ==> (h', ?as Un as') \<Turnstile> ?R |]
      ==> (?h, ?as) \<Turnstile> ?Q -* ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2))
           )))]
