   [("Hoare_Triple.false_rule", "<false> ?c <?Q>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)
         )),
    ("Hoare_Triple.raise_rule", "<false> raise ?s <?Q>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Hoare_Triple.new_addr_refl", "new_addrs ?h ?as ?h = ?as",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1),
       template_var 0)),
    ("Hoare_Triple.return_wp_rule", "<?Q ?x> return ?x <?Q>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_var 1)
         )),
    ("Hoare_Triple.ref_rule", "<emp> ref ?x <%r. r \<mapsto>\<^sub>r ?x>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)),
           t_empty)
         )),
    ("Hoare_Triple.of_list_rule",
     "<emp> Array.of_list ?xs <%r. r \<mapsto>\<^sub>a ?xs>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0)),
           t_empty)
         )),
    ("Hoare_Triple.raise_iff", "<?P> raise ?s <?Q> = (?P = false)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 2, template_hole 0))),
    ("Hoare_Triple.return_sp_rule",
     "<?P> return ?x <%r. ?P * \<up> (r = ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 3, template_var 0)),
           t_empty)
         )),
    ("Hoare_Triple.new_rule",
     "<emp> Array.new ?n ?x <%r. r \<mapsto>\<^sub>a replicate ?n ?x>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Hoare_Triple.update_rule",
     "<?p \<mapsto>\<^sub>r ?y> ?p := ?x <%r. ?p \<mapsto>\<^sub>r ?x>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           t_empty)
         )),
    ("Hoare_Triple.norm_pre_pure_iff_sng",
     "<\<up> ?b> ?f <?Q> = (?b --> <emp> ?f <?Q>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 1),
           template_var 0)))),
    ("Hoare_Triple.make_rule",
     "<emp> Array.make ?n ?f <%r. r \<mapsto>\<^sub>a map ?f [0..<?n]>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Hoare_Triple.norm_pre_pure_iff",
     "<?P * \<up> ?b> ?f <?Q> = (?b --> <?P> ?f <?Q>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Hoare_Triple.norm_pre_pure_rule2",
     "(?b ==> <emp> ?f <?Q>) ==> <\<up> ?b> ?f <?Q>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare_Triple.lookup_rule",
     "<?p \<mapsto>\<^sub>r ?x> !?p
      <%r. ?p \<mapsto>\<^sub>r ?x * \<up> (r = ?x)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 1)),
           t_empty)
         )),
    ("Hoare_Triple.freeze_rule",
     "<?a \<mapsto>\<^sub>a ?xs> Array.freeze ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs * \<up> (r = ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 1)),
           t_empty)
         )),
    ("Hoare_Triple.update_wp_rule",
     "<?r \<mapsto>\<^sub>r ?y * (?r \<mapsto>\<^sub>r ?x -* ?Q ())>
      ?r := ?x <?Q>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 1)),
                   template_app (template_var 0, template_hole 1)))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)
         )),
    ("Hoare_Triple.length_rule",
     "<?a \<mapsto>\<^sub>a ?xs> Array.len ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs * \<up> (r = length ?xs)>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app (template_hole 4, template_var 1)),
           t_empty)
         )),
    ("Hoare_Triple.frame_rule",
     "<?P> ?c <?Q> ==> <?P * ?R> ?c <%x. ?Q x * ?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2),
             t_empty)
           ))),
    ("Hoare_Triple.norm_pre_ex_rule",
     "(!!x. <?P x> ?f <?Q>) ==> <\<exists>\<^sub>Ax. ?P x> ?f <?Q>",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare_Triple.norm_pre_pure_rule1",
     "(?b ==> <?P> ?f <?Q>) ==> <?P * \<up> ?b> ?f <?Q>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_hole 0, template_var 3))),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare_Triple.hoare_triple_success",
     "[| <?P> ?c <?Q>; (?h, ?as) \<Turnstile> ?P |] ==> success ?c ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("Hoare_Triple.hoare_triple_preI",
     "(!!h. h \<Turnstile> ?P ==> <?P> ?c <?Q>) ==> <?P> ?c <?Q>",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Hoare_Triple.cons_pre_rule",
     "[| ?P \<Longrightarrow>\<^sub>A ?P'; <?P'> ?c <?Q> |]
      ==> <?P> ?c <?Q>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             t_empty)
           ))),
    ("Hoare_Triple.post_exI_rule",
     "<?P> ?c <%r. ?Q r ?x> ==> <?P> ?c <%r. \<exists>\<^sub>Ax. ?Q r x>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Hoare_Triple.split_rule",
     "[| <?P> ?c <?R>; <?Q> ?c <?R> |] ==> <?P \<or>\<^sub>A ?Q> ?c <?R>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("Hoare_Triple.cons_post_rule",
     "[| <?P> ?c <?Q>; !!x. ?Q x \<Longrightarrow>\<^sub>A ?Q' x |]
      ==> <?P> ?c <?Q'>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Hoare_Triple.let_rule",
     "(!!x. x = ?t ==> <?P> ?f x <?Q>) ==> <?P> Let ?t ?f <?Q>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Hoare_Triple.bind_rule",
     "[| <?P> ?f <?R>; !!x. <?R x> ?g x <?Q> |] ==> <?P> ?f >>= ?g <?Q>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Hoare_Triple.cons_pre_rulet",
     "[| ?P \<Longrightarrow>\<^sub>t ?P'; <?P'> ?c <?Q>\<^sub>t |]
      ==> <?P> ?c <?Q>\<^sub>t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             t_empty)
           ))),
    ("Hoare_Triple.nth_rule",
     "?i < length ?xs ==>
      <?a \<mapsto>\<^sub>a ?xs> Array.nth ?a ?i
      <%r. ?a \<mapsto>\<^sub>a ?xs * \<up> (r = ?xs ! ?i)>",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2)),
             t_empty)
           ))),
    ("Hoare_Triple.cons_rule",
     "[| ?P \<Longrightarrow>\<^sub>A ?P';
         !!x. ?Q x \<Longrightarrow>\<^sub>A ?Q' x; <?P'> ?c <?Q> |]
      ==> <?P> ?c <?Q'>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 1)
           ))),
    ("Hoare_Triple.hoare_tripleD",
     "[| <?P> ?c <?Q>; (?h, ?as) \<Turnstile> ?P;
         run ?c (Some ?h) ?\<sigma> ?r |]
      ==> ~ is_exn ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_app (template_hole 2, template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 1))
           ))),
    ("Hoare_Triple.upd_rule",
     "?i < length ?xs ==>
      <?a \<mapsto>\<^sub>a ?xs> Array.upd ?i ?x ?a
      <%r. ?a \<mapsto>\<^sub>a ?xs[?i := ?x] * \<up> (r = ?a)>",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 2)),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 0),
                 template_var 1)),
             t_empty)
           ))),
    ("Hoare_Triple.if_rule",
     "[| ?b ==> <?P> ?f <?Q>; ~ ?b ==> <?P> ?g <?Q> |]
      ==> <?P> if ?b then ?f else ?g <?Q>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 4)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1)
              )),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0),
                template_var 1)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Hoare_Triple.cons_post_rulet",
     "[| <?P> ?c <?Q>\<^sub>t; !!x. ?Q x \<Longrightarrow>\<^sub>t ?Q' x |]
      ==> <?P> ?c <?Q'>\<^sub>t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              t_empty)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Hoare_Triple.hoare_tripleD",
     "[| <?P> ?c <?Q>; (?h, ?as) \<Turnstile> ?P;
         run ?c (Some ?h) ?\<sigma> ?r |]
      ==> heap.lim ?h <= heap.lim (the_state ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 3),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Hoare_Triple.case_prod_rule",
     "(!!a b. ?x = (a, b) ==> <?P> ?f a b <?Q>) ==>
      <?P> case ?x of (a, b) => ?f a b <?Q>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_var 0)
           ))),
    ("Hoare_Triple.hoare_triple_effect",
     "[| <?P> ?c <?Q>; (?h, ?as) \<Turnstile> ?P |]
      ==> EX h' r.
             effect ?c ?h h' r &
             (h', new_addrs ?h ?as h') \<Turnstile> ?Q r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Hoare_Triple.cons_rulet",
     "[| ?P \<Longrightarrow>\<^sub>t ?P';
         !!x. ?Q x \<Longrightarrow>\<^sub>t ?Q' x; <?P'> ?c <?Q>\<^sub>t |]
      ==> <?P> ?c <?Q'>\<^sub>t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             t_empty)
           ))),
    ("Hoare_Triple.hoare_tripleD",
     "[| <?P> ?c <?Q>; (?h, ?as) \<Turnstile> ?P;
         run ?c (Some ?h) ?\<sigma> ?r |]
      ==> (the_state ?\<sigma>,
           new_addrs ?h ?as (the_state ?\<sigma>)) \<Turnstile>
          ?Q ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_app (template_hole 2, template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_var 4, template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_app (template_hole 1, template_var 1))))
           ))),
    ("Hoare_Triple.case_option_rule",
     "[| ?v = None ==> <?P> ?fn <?Q>;
         !!x. ?v = Some x ==> <?P> ?fs x <?Q> |]
      ==> <?P> case ?v of None => ?fn | Some x => ?fs x <?Q>",
     template_implication
      ([template_implication
         ([template_equation (template_var 4, template_hole 4)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1)
              )),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 4)),
             template_var 1)
           ))),
    ("Hoare_Triple.hoare_tripleD",
     "[| <?P> ?c <?Q>; (?h, ?as) \<Turnstile> ?P;
         run ?c (Some ?h) ?\<sigma> ?r |]
      ==> relH {a. a < heap.lim ?h & a ~: ?as} ?h (the_state ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 6),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_app (template_hole 8, template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 3),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Hoare_Triple.case_list_rule",
     "[| ?l = [] ==> <?P> ?fn <?Q>;
         !!x xs. ?l = x # xs ==> <?P> ?fc x xs <?Q> |]
      ==> <?P> case ?l of [] => ?fn | x # xa => ?fc x xa <?Q>",
     template_implication
      ([template_implication
         ([template_equation (template_var 4, template_hole 5)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1)
              )),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 4)),
             template_var 1)
           ))),
    ("Hoare_Triple.case_sum_rule",
     "[| !!x. ?v = Inl x ==> <?P> ?fl x <?Q>;
         !!x. ?v = Inr x ==> <?P> ?fr x <?Q> |]
      ==> <?P> case ?v of Inl x => ?fl x | Inr x => ?fr x <?Q>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 4)),
             template_var 1)
           ))),
    ("Hoare_Triple.if_rule_split",
     "[| ?b ==> <?P> ?f <?Q1.0>; ~ ?b ==> <?P> ?g <?Q2.0>;
         !!x. ?Q1.0 x * \<up> ?b \<or>\<^sub>A
              ?Q2.0 x * \<up> (~ ?b) \<Longrightarrow>\<^sub>A
              ?Q x |]
      ==> <?P> if ?b then ?f else ?g <?Q>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 6)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3)
              )),
        template_implication
         ([template_negation (template_predicate (template_var 6))],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 2),
                template_var 1)
              )),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 4),
                 template_var 2)),
             template_var 0)
           )))]
