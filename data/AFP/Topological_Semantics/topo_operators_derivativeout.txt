Loading theory "Draft.sse_boolean_algebra" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.topo_operators_derivative" via "Draft.topo_operators_basic" via "Draft.sse_operation_positive_quantification" via "Draft.sse_operation_positive")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.572s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.215s elapsed time, 0.872s cpu time, 0.043s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.sse_boolean_algebra"
### 0.320s elapsed time, 1.276s cpu time, 0.116s GC time
Loading theory "Draft.sse_boolean_algebra_quantification" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.topo_operators_derivative" via "Draft.topo_operators_basic" via "Draft.sse_operation_positive_quantification")
### theory "HOL-Library.Nat_Bijection"
### 0.337s elapsed time, 1.345s cpu time, 0.116s GC time
Loading theory "Draft.sse_operation_positive" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.topo_operators_derivative" via "Draft.topo_operators_basic" via "Draft.sse_operation_positive_quantification")
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
### theory "Draft.sse_operation_positive"
### 0.126s elapsed time, 0.502s cpu time, 0.058s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs")
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "Draft.sse_boolean_algebra_quantification"
### 0.353s elapsed time, 1.390s cpu time, 0.129s GC time
Loading theory "Draft.sse_operation_positive_quantification" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.topo_operators_derivative" via "Draft.topo_operators_basic")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.sse_operation_positive_quantification"
### 0.242s elapsed time, 0.953s cpu time, 0.068s GC time
Loading theory "Draft.topo_operators_basic" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.topo_operators_derivative")
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 1.000s elapsed time, 3.787s cpu time, 0.811s GC time
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.079s elapsed time, 3.827s cpu time, 0.765s GC time
### theory "Draft.topo_operators_basic"
### 0.508s elapsed time, 1.662s cpu time, 0.223s GC time
Loading theory "Draft.topo_operators_derivative" (required by "Draft.topo_operators_derivativeMoreTemplates")
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.topo_operators_derivative"
### 0.236s elapsed time, 0.514s cpu time, 0.078s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.963s elapsed time, 6.059s cpu time, 1.074s GC time
Loading theory "Draft.Templates" (required by "Draft.topo_operators_derivativeMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.063s elapsed time, 0.113s cpu time, 0.048s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.topo_operators_derivativeMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.439s elapsed time, 0.445s cpu time, 0.000s GC time
Loading theory "Draft.topo_operators_derivativeMoreTemplates"
val templateLemmas =
   [("topo_operators_derivative.CD2", "Cl_2 (\<C>\<^sub>D ?\<D>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_derivative.ID2", "Int_2 (\<I>\<^sub>D ?\<D>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_derivative.FD2", "Fr_2 (\<F>\<^sub>D ?\<D>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_derivative.KD2", "Kh_2 (\<K>\<^sub>D ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_derivative.Der4e_rel",
     "Der_4 ?\<phi> ==> Der_4e ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_derivative.CD1",
     "Der_1 ?\<D> ==> Der_1 (\<C>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID1",
     "Der_1 ?\<D> ==> Int_1 (\<I>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.BD1",
     "Der_1 ?\<D> ==> Br_1 (\<B>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.FD1",
     "Der_1 ?\<D> ==> Fr_1 (\<F>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.KD1",
     "Der_1 ?\<phi> ==> Kh_1 (\<K>\<^sub>D ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.CD1a",
     "Br_7 ?\<D> ==> Br_7 (\<C>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID1a",
     "Br_7 ?\<D> ==> Br_8 (\<I>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.FD1a",
     "Br_7 ?\<D> ==> Fr_1a (\<F>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.CD1b",
     "Der_1b ?\<D> ==> Der_1b (\<C>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID1b",
     "Der_1b ?\<D> ==> Int_1a (\<I>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.FD1b",
     "Der_1b ?\<D> ==> Fr_1b (\<F>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.CD3",
     "Fr_3 ?\<D> ==> Fr_3 (\<C>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.FD3",
     "Fr_3 ?\<D> ==> Fr_3 (\<F>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID3",
     "Fr_3 ?\<D> ==> Der_2 (\<I>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.BD2",
     "Fr_3 ?\<D> ==> Br_2 (\<B>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.CD_inf",
     "Der_inf ?\<phi> ==> Der_inf (\<C>\<^sub>D ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID_inf",
     "Der_inf ?\<phi> ==> Int_inf (\<I>\<^sub>D ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.CD4",
     "[| Der_1 ?\<D>; Der_4e ?\<D> |] ==> Br_6 (\<C>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID4",
     "[| Der_1 ?\<D>; Der_4e ?\<D> |] ==> Br_6 (\<I>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.FD4",
     "[| Der_1 ?\<D>; Der_4e ?\<D> |] ==> Fr_4 (\<F>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.CD4a",
     "[| Br_7 ?\<D>; Der_4e ?\<D> |] ==> Br_6 (\<C>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.ID4a",
     "[| Br_7 ?\<D>; Der_4e ?\<D> |] ==> Br_6 (\<I>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.BD3",
     "[| Der_1b ?\<D>; Der_4e ?\<D> |] ==> Br_3 (\<B>\<^sub>D ?\<D>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.PK3",
     "Kh_2 ?\<phi> ==>
      ALL w. ?\<phi> \<^bold>\<bottom> w = \<^bold>\<bottom> w",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("topo_operators_derivative.KD3",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi>; Der_4 ?\<phi> |]
      ==> Kh_3 (\<K>\<^sub>D ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_derivative.PK4",
     "[| Kh_1 ?\<phi>; Kh_3 ?\<phi> |]
      ==> ALL w. ?\<phi> \<^bold>\<top> w = \<^bold>\<top> w",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("topo_operators_derivative.PK5",
     "Kh_2 ?\<phi> ==>
      ALL A. contains (?\<phi>\<^sup>c A) (?\<phi> (\<^bold>\<midarrow>A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD5",
     "Der_4 ?\<phi> ==>
      ALL A.
         contains (?\<phi> (?\<phi>\<^sup>c A))
          (?\<phi> (?\<phi> (?\<phi>\<^sup>c A)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD6",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi> |]
      ==> ALL A. contains (?\<phi> A) (?\<phi>\<^sup>d A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD4",
     "Der_1 ?\<phi> ==>
      ALL A B.
         contains (?\<phi> (A \<^bold>\<leftharpoonup> B))
          (?\<phi> A \<^bold>\<leftharpoonup> ?\<phi> B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD3",
     "Der_1b ?\<phi> ==>
      ALL A B.
         contains (?\<phi> A \<^bold>\<and> ?\<phi> B)
          (?\<phi> (A \<^bold>\<and> B))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PK7",
     "Kh_3 ?\<phi> ==>
      ALL A w.
         ?\<phi> (?\<phi> (?\<phi>\<^sup>c A)) w =
         ?\<phi> (?\<phi>\<^sup>c (?\<phi>\<^sup>d A)) w",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("topo_operators_derivative.PK8",
     "Kh_3 ?\<phi> ==>
      ALL A w.
         ?\<phi> (?\<phi>\<^sup>c (?\<phi> A)) w =
         ?\<phi>\<^sup>d (?\<phi> (?\<phi>\<^sup>c A)) w",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("topo_operators_derivative.PD7",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi> |]
      ==> ALL A.
             contains (?\<phi> (?\<phi> A)) (?\<phi> (?\<phi>\<^sup>d A))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD1",
     "Der_1b ?\<phi> ==>
      ALL A.
         contains (%B. contains (?\<phi> B) (?\<phi> A))
          (%B. contains B A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("topo_operators_derivative.PD8",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi>; Der_4 ?\<phi> |]
      ==> ALL A. contains (?\<phi> A) (?\<phi> (?\<phi>\<^sup>d A))",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PK6",
     "[| Kh_1 ?\<phi>; Kh_2 ?\<phi> |]
      ==> ALL A B.
             contains (?\<phi> A \<^bold>\<leftharpoonup> ?\<phi> B)
              (?\<phi> (A \<^bold>\<leftharpoonup> B))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD11",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi>; Der_4 ?\<phi> |]
      ==> ALL A.
             contains (?\<phi> (?\<phi>\<^sup>c A)) (?\<phi>\<^sup>c A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD10",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi>; Der_4 ?\<phi> |]
      ==> ALL A.
             contains (?\<phi> (?\<phi>\<^sup>d A)) (?\<phi>\<^sup>d A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.PD9",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi>; Der_4 ?\<phi> |]
      ==> ALL A.
             contains (?\<phi>\<^sup>d (?\<phi> A)) (?\<phi>\<^sup>d A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.DS_dual",
     "(Der_1 ?\<phi> & Der_2 ?\<phi> & Fr_3 ?\<phi> & Der_4 ?\<phi>) =
      (Int_1 ?\<phi>\<^sup>d &
       Der_2 ?\<phi>\<^sup>d &
       Int_4' ?\<phi>\<^sup>d & Fr_3 ?\<phi>\<^sup>d)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 4, template_var 0)),
             template_app (template_hole 3, template_var 0)))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 5,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 4,
               template_app (template_hole 1, template_var 0))))))),
    ("topo_operators_derivative.PD2",
     "Der_1b ?\<phi> ==>
      ALL A.
         contains (%B. contains (?\<phi>\<^sup>d B) (?\<phi>\<^sup>d A))
          (%B. contains B A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("topo_operators_derivative.DS_dual1",
     "Der_1 ?\<phi> & Der_2 ?\<phi> & Fr_3 ?\<phi> & Der_4 ?\<phi> ==>
      Int_1 ?\<phi>\<^sup>d &
      Der_2 ?\<phi>\<^sup>d &
      Int_4' ?\<phi>\<^sup>d & Fr_3 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 1, template_var 0))),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)))))
           ))),
    ("topo_operators_derivative.SD_dual1",
     "Int_1 ?\<phi> & Der_2 ?\<phi> & Int_4' ?\<phi> & Fr_3 ?\<phi> ==>
      Der_1 ?\<phi>\<^sup>d &
      Der_2 ?\<phi>\<^sup>d & Fr_3 ?\<phi>\<^sup>d & Der_4 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 1, template_var 0))),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 0)))))
           ))),
    ("topo_operators_derivative.DS_dual2",
     "Der_1 ?\<phi>\<^sup>d &
      Der_2 ?\<phi>\<^sup>d &
      Fr_3 ?\<phi>\<^sup>d & Der_4 ?\<phi>\<^sup>d ==>
      Int_1 ?\<phi> & Der_2 ?\<phi> & Int_4' ?\<phi> & Fr_3 ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 5, template_var 0))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 5, template_var 0))),
                  template_app
                   (template_hole 2,
                    template_app (template_hole 5, template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 3, template_var 0))))
           ))),
    ("topo_operators_derivative.SD_dual2",
     "Int_1 ?\<phi>\<^sup>d &
      Der_2 ?\<phi>\<^sup>d &
      Int_4' ?\<phi>\<^sup>d & Fr_3 ?\<phi>\<^sup>d ==>
      Der_1 ?\<phi> & Der_2 ?\<phi> & Fr_3 ?\<phi> & Der_4 ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 5, template_var 0))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 3,
                      template_app (template_hole 5, template_var 0))),
                  template_app
                   (template_hole 2,
                    template_app (template_hole 5, template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("topo_operators_derivative.PD12",
     "[| Der_1 ?\<phi>; Der_2 ?\<phi>; Der_4 ?\<phi> |]
      ==> ALL A w.
             (?\<phi>\<^sup>d \<^bold>\<sqinter> ?\<phi>) A w =
             ?\<phi>\<^sup>d (A \<^bold>\<and> ?\<phi> A) w",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("topo_operators_derivative.fp_CD_sup_closed",
     "Der_inf ?\<phi> ==>
      contains
       (%D. ALL w. \<C>\<^sub>D ?\<phi> \<^bold>\<Or>D w = \<^bold>\<Or>D w)
       (%D. nonEmpty D &
            contains (%X. ALL w. \<C>\<^sub>D ?\<phi> X w = X w) D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("topo_operators_derivative.fp_ID_inf_closed",
     "Der_inf ?\<phi> ==>
      contains
       (%D. ALL w.
               \<I>\<^sub>D ?\<phi> \<^bold>\<And>D w = \<^bold>\<And>D w)
       (%D. nonEmpty D &
            contains (%X. ALL w. \<I>\<^sub>D ?\<phi> X w = X w) D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty))))]:
   (string * thm * template) list
### theory "Draft.topo_operators_derivativeMoreTemplates"
### 0.352s elapsed time, 0.473s cpu time, 0.056s GC time
val it = (): unit
