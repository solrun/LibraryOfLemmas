   [("sse_boolean_algebra_quantification.dom_compl_invol",
     "?D = ?D\<inverse>\<inverse>",
     template_equation
      (template_var 0,
       template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)))),
    ("sse_boolean_algebra_quantification.iDM_a",
     "infimum\<^sup>c ?S = \<^bold>\<Or>?S\<inverse>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("sse_boolean_algebra_quantification.iDM_b",
     "supremum\<^sup>c ?S = \<^bold>\<And>?S\<inverse>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("sse_boolean_algebra_quantification.Ra_dual1",
     "Ra[?\<pi>\<^sup>d|?D] = Ra[?\<pi>|?D\<inverse>]\<inverse>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("sse_boolean_algebra_quantification.Ra_dual3",
     "Ra[?\<pi>\<^sup>d|?D]\<inverse> = Ra[?\<pi>|?D\<inverse>]",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("sse_boolean_algebra_quantification.Ra_dual4",
     "Ra[?\<pi>\<^sup>d|?D\<inverse>] = Ra[?\<pi>|?D]\<inverse>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("sse_boolean_algebra_quantification.Ra_all",
     "\<^bold>\<And>Ra?\<pi> = mforallB ?\<pi>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("sse_boolean_algebra_quantification.Ra_ex",
     "\<^bold>\<Or>Ra?\<pi> = mexistsB ?\<pi>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("sse_boolean_algebra_quantification.Ra_compl",
     "Ra[?\<pi>\<^sup>c|?D] = Ra[?\<pi>|?D]\<inverse>",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("sse_boolean_algebra_quantification.Ra_dual2",
     "Ra[?\<pi>\<^sup>d|?D] = Ra[?\<pi>\<^sup>c|?D\<inverse>]",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("sse_boolean_algebra_quantification.Ra_all_restr",
     "\<^bold>\<And>Ra[?\<pi>|?D] = (%w. contains (%X. ?\<pi> X w) ?D)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("sse_boolean_algebra_quantification.Ra_ex_restr",
     "\<^bold>\<Or>Ra[?\<pi>|?D] = (%w. nonEmpty (%X. ?D X & ?\<pi> X w))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("sse_boolean_algebra_quantification.Ra_all_comp1",
     "mforallB (?\<pi> o ?\<gamma>) =
      (%w. contains (%X. ?\<pi> X w) Ra?\<gamma>)",
     template_equation (t_empty, t_empty)),
    ("sse_boolean_algebra_quantification.Ra_ex_comp1",
     "mexistsB (?\<pi> o ?\<gamma>) =
      (%w. nonEmpty (%X. Ra?\<gamma> X & ?\<pi> X w))",
     template_equation (t_empty, t_empty)),
    ("sse_boolean_algebra_quantification.all_restr",
     "\<^bold>\<forall>\<^sup>R?\<delta>?\<pi> =
      \<^bold>\<forall>\<^sup>R?\<delta>?\<pi>",
     template_equation (t_empty, t_empty)),
    ("sse_boolean_algebra_quantification.ex_restr",
     "\<^bold>\<exists>\<^sup>R?\<delta>?\<pi> =
      \<^bold>\<exists>\<^sup>R?\<delta>?\<pi>",
     template_equation (t_empty, t_empty))]
