Loading theory "Draft.sse_boolean_algebra" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.topo_operators_basic" via "Draft.sse_operation_positive_quantification" via "Draft.sse_operation_positive")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.132s elapsed time, 0.551s cpu time, 0.046s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.262s elapsed time, 1.067s cpu time, 0.046s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.306s cpu time, 0.128s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.sse_boolean_algebra"
### 0.346s elapsed time, 1.389s cpu time, 0.128s GC time
Loading theory "Draft.sse_boolean_algebra_quantification" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.topo_operators_basic" via "Draft.sse_operation_positive_quantification")
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "Draft.sse_boolean_algebra_quantification"
### 0.347s elapsed time, 1.373s cpu time, 0.129s GC time
Loading theory "Draft.sse_operation_positive" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.topo_operators_basic" via "Draft.sse_operation_positive_quantification")
Found termination order: "size <*mlex*> {}"
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
### theory "Draft.sse_operation_positive"
### 0.146s elapsed time, 0.582s cpu time, 0.053s GC time
Loading theory "Draft.sse_operation_positive_quantification" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.topo_operators_basic")
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.978s elapsed time, 3.698s cpu time, 0.820s GC time
### theory "Draft.sse_operation_positive_quantification"
### 0.420s elapsed time, 1.502s cpu time, 0.556s GC time
Found termination order: "size <*mlex*> {}"
Loading theory "Draft.topo_operators_basic" (required by "Draft.topo_operators_basicMoreTemplates")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Default parameters for Nitpick:
assms = true
batch_size = smart
binary_ints = smart
bisim_depth = 9
bits = 1-10
box = smart
card = 1-10
datatype_sym_break = 5
debug = false
destroy_constrs = true
expect = genuine
falsify = true
finitize = smart
format = 3
iter = 0,1,2,4,8,12,16,20,24,28
kodkod_sym_break = 15
max_genuine = 1
max_potential = 1
max_threads = 0
merge_type_vars = false
mono = smart
overlord = false
peephole_optim = true
sat_solver = smart
show_consts = 
show_skolems = 
show_types = 
specialize = true
spy = false
star_linear_preds = true
tac_timeout = 0.5
timeout = 30
total_consts = smart
user_axioms = true
verbose = false
wf = smart
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.074s elapsed time, 3.954s cpu time, 0.823s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.topo_operators_basic"
### 0.440s elapsed time, 1.067s cpu time, 0.157s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.928s elapsed time, 5.787s cpu time, 1.021s GC time
Loading theory "Draft.Templates" (required by "Draft.topo_operators_basicMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.066s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.topo_operators_basicMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.465s elapsed time, 0.515s cpu time, 0.062s GC time
Loading theory "Draft.topo_operators_basicMoreTemplates"
val templateLemmas =
   [("topo_operators_basic.CB2", "Cl_2 (\<C>\<^sub>B ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.CF2", "Cl_2 (\<C>\<^sub>F ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.IB2", "Int_2 (\<I>\<^sub>B ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.IF2", "Int_2 (\<I>\<^sub>F ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.FB2", "Fr_2 (\<F>\<^sub>B ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.FC2", "Fr_2 (\<F>\<^sub>C ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.FI2", "Fr_2 (\<F>\<^sub>I ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("topo_operators_basic.IC1_dual", "Int_1a ?\<phi> = Cl_1b ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("topo_operators_basic.BI_BC_rel",
     "\<B>\<^sub>I ?\<phi> = \<B>\<^sub>C ?\<phi>\<^sup>d",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PC6", "Cl_1 ?\<phi> ==> Cl_6 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PC5", "Cl_2 ?\<phi> ==> Cl_5 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI7", "Int_1 ?\<phi> ==> Int_7 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI5", "Int_2 ?\<phi> ==> Fr_3 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB7", "Br_1 ?\<phi> ==> Br_7 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB6", "Br_1 ?\<phi> ==> Br_6 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB8", "Br_1 ?\<phi> ==> Br_8 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB4", "Br_1 ?\<phi> ==> Br_4 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB5b", "Br_1 ?\<phi> ==> Br_5b ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB5c", "Br_1 ?\<phi> ==> Br_5c ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB9", "Br_1 ?\<phi> ==> Br_9 ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.CI1", "Cl_1 ?\<phi> ==> Int_1 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BC1",
     "Cl_1 ?\<phi> ==> Br_1 (\<B>\<^sub>C ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI1a", "Br_7 ?\<phi> ==> Br_8 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI1b",
     "Cl_1b ?\<phi> ==> Int_1a ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI2", "Cl_2 ?\<phi> ==> Int_2 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI4", "Br_6 ?\<phi> ==> Br_6 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IC4'",
     "Int_4' ?\<phi> ==> Cl_4' ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI4'",
     "Cl_4' ?\<phi> ==> Int_4' ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IC1", "Int_1 ?\<phi> ==> Cl_1 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BI1",
     "Int_1 ?\<phi> ==> Br_1 (\<B>\<^sub>I ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IC1a",
     "Int_1a ?\<phi> ==> Cl_1b ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IC1b", "Br_8 ?\<phi> ==> Br_7 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CF3",
     "Fr_3 ?\<phi> ==> Fr_3 (\<C>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FC3",
     "Fr_3 ?\<phi> ==> Fr_3 (\<F>\<^sub>C ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI3", "Fr_3 ?\<phi> ==> Cl_5 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BC2",
     "Fr_3 ?\<phi> ==> Br_2 (\<B>\<^sub>C ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IC2", "Int_2 ?\<phi> ==> Cl_2 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CI5", "Cl_5 ?\<phi> ==> Fr_3 ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FI3",
     "Cl_5 ?\<phi> ==> Fr_3 (\<F>\<^sub>I ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BI2",
     "Cl_5 ?\<phi> ==> Br_2 (\<B>\<^sub>I ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CB1",
     "Br_1 ?\<phi> ==> Cl_1 (\<C>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IB1",
     "Br_1 ?\<phi> ==> Int_1 (\<I>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FB1",
     "Br_1 ?\<phi> ==> Fr_1 (\<F>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CB3",
     "Br_2 ?\<phi> ==> Fr_3 (\<C>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IB3",
     "Br_2 ?\<phi> ==> Cl_5 (\<I>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IF1",
     "Fr_1 ?\<phi> ==> Int_1 (\<I>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BF1",
     "Fr_1 ?\<phi> ==> Br_1 (\<B>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IF1b",
     "Fr_1a ?\<phi> ==> Br_8 (\<I>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IF1a",
     "Fr_1b ?\<phi> ==> Int_1a (\<I>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IF_inf",
     "Fr_inf ?\<phi> ==> Int_inf (\<I>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.PC1",
     "Cl_1 ?\<phi> = (Br_7 ?\<phi> & Cl_1b ?\<phi>)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI1",
     "Int_1 ?\<phi> = (Int_1a ?\<phi> & Br_8 ?\<phi>)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PF1",
     "Fr_1 ?\<phi> = (Fr_1a ?\<phi> & Fr_1b ?\<phi>)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PC4",
     "Cl_2 ?\<phi> ==> Br_6 ?\<phi> = Cl_4' ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI4",
     "Int_2 ?\<phi> ==> Br_6 ?\<phi> = Int_4' ?\<phi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PC7",
     "[| Cl_1b ?\<phi>; Cl_2 ?\<phi> |] ==> Cl_7 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PC9",
     "[| Cl_1b ?\<phi>; Br_6 ?\<phi> |] ==> Cl_9 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI9",
     "[| Int_1a ?\<phi>; Br_6 ?\<phi> |] ==> Int_9 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI6",
     "[| Int_1a ?\<phi>; Int_2 ?\<phi> |] ==> Int_6 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB10",
     "[| Br_1 ?\<phi>; Br_3 ?\<phi> |] ==> Br_10 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB5a",
     "[| Br_1 ?\<phi>; Br_3 ?\<phi> |] ==> Br_5a ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PB5d",
     "[| Br_1 ?\<phi>; Br_3 ?\<phi> |] ==> Br_5d ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PF5",
     "[| Fr_1 ?\<phi>; Fr_4 ?\<phi> |] ==> Fr_5 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PF6",
     "[| Fr_1b ?\<phi>; Fr_2 ?\<phi> |] ==> Fr_6 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.FC1",
     "[| Cl_1 ?\<phi>; Cl_2 ?\<phi> |] ==> Fr_1 (\<F>\<^sub>C ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BC3",
     "[| Cl_1b ?\<phi>; Br_6 ?\<phi> |] ==> Br_3 (\<B>\<^sub>C ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FI1",
     "[| Int_1 ?\<phi>; Int_2 ?\<phi> |] ==> Fr_1 (\<F>\<^sub>I ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BI3",
     "[| Int_1a ?\<phi>; Br_6 ?\<phi> |] ==> Br_3 (\<B>\<^sub>I ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FB3",
     "[| Br_1 ?\<phi>; Br_2 ?\<phi> |] ==> Fr_3 (\<F>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CB4",
     "[| Br_1 ?\<phi>; Br_3 ?\<phi> |] ==> Br_6 (\<C>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IB4",
     "[| Br_1 ?\<phi>; Br_3 ?\<phi> |] ==> Br_6 (\<I>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FB4",
     "[| Br_1 ?\<phi>; Br_3 ?\<phi> |] ==> Fr_4 (\<F>\<^sub>B ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CF1",
     "[| Fr_1 ?\<phi>; Fr_2 ?\<phi> |] ==> Cl_1 (\<C>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CF1a",
     "[| Fr_1a ?\<phi>; Fr_2 ?\<phi> |] ==> Br_7 (\<C>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CF1b",
     "[| Fr_1b ?\<phi>; Fr_2 ?\<phi> |] ==> Cl_1b (\<C>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IF3",
     "[| Fr_2 ?\<phi>; Fr_3 ?\<phi> |] ==> Cl_5 (\<I>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BF2",
     "[| Fr_2 ?\<phi>; Fr_3 ?\<phi> |] ==> Br_2 (\<B>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CF_inf",
     "[| Fr_2 ?\<phi>; Fr_inf ?\<phi> |] ==> Cl_inf (\<C>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.PC8",
     "[| Cl_1b ?\<phi>; Cl_2 ?\<phi>; Br_6 ?\<phi> |] ==> Cl_8 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.PI8",
     "[| Int_1a ?\<phi>; Int_2 ?\<phi>; Br_6 ?\<phi> |] ==> Int_8 ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("topo_operators_basic.FC4",
     "[| Cl_1b ?\<phi>; Cl_2 ?\<phi>; Br_6 ?\<phi> |]
      ==> Fr_4 (\<F>\<^sub>C ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.FI4",
     "[| Int_1a ?\<phi>; Int_2 ?\<phi>; Br_6 ?\<phi> |]
      ==> Fr_4 (\<F>\<^sub>I ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.CF4",
     "[| Fr_1a ?\<phi>; Fr_2 ?\<phi>; Fr_4 ?\<phi> |]
      ==> Br_6 (\<C>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.IF4",
     "[| Fr_1a ?\<phi>; Fr_2 ?\<phi>; Fr_4 ?\<phi> |]
      ==> Br_6 (\<I>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.BF3",
     "[| Fr_1b ?\<phi>; Fr_2 ?\<phi>; Fr_4 ?\<phi> |]
      ==> Br_3 (\<B>\<^sub>F ?\<phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("topo_operators_basic.fp_IF_inf_closed",
     "Fr_inf ?\<phi> ==>
      contains
       (%D. ALL w.
               \<I>\<^sub>F ?\<phi> \<^bold>\<And>D w = \<^bold>\<And>D w)
       (%D. nonEmpty D &
            contains (%X. ALL w. \<I>\<^sub>F ?\<phi> X w = X w) D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("topo_operators_basic.fp_CF_sup_closed",
     "[| Fr_inf ?\<phi>; Fr_2 ?\<phi> |]
      ==> contains
           (%D. ALL w.
                   \<C>\<^sub>F ?\<phi> \<^bold>\<Or>D w = \<^bold>\<Or>D w)
           (%D. nonEmpty D &
                contains (%X. ALL w. \<C>\<^sub>F ?\<phi> X w = X w) D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty))))]:
   (string * thm * template) list
### theory "Draft.topo_operators_basicMoreTemplates"
### 0.317s elapsed time, 0.400s cpu time, 0.000s GC time
val it = (): unit
