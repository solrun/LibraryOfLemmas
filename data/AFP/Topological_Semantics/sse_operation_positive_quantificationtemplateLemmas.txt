   [("sse_operation_positive_quantification.MONO_iADDIb",
     "MONO ?\<phi> = iADDI_b ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("sse_operation_positive_quantification.MONO_iMULTa",
     "MONO ?\<phi> = iMULT_a ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("sse_operation_positive_quantification.iADDIb_rel",
     "iADDI_b ?\<phi> = ADDI_b ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("sse_operation_positive_quantification.iADDI_b_iMULTa",
     "iADDI_b ?\<phi> = iMULT_a ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("sse_operation_positive_quantification.iMULTa_rel",
     "iMULT_a ?\<phi> = MULT_a ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("sse_operation_positive_quantification.iADDI_MULT_dual1",
     "iADDI_a ?\<phi> ==> iMULT_b ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("sse_operation_positive_quantification.iADDI_MULT_dual2",
     "iMULT_b ?\<phi> ==> iADDI_a ?\<phi>\<^sup>d",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("sse_operation_positive_quantification.PC_iaddi",
     "[| MONO ?\<phi>; iADDI_a ?\<phi> |] ==> iADDI ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("sse_operation_positive_quantification.PI_imult",
     "[| MONO ?\<phi>; iMULT_b ?\<phi> |] ==> iMULT ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("sse_operation_positive_quantification.CBarcan2",
     "MONO ?\<phi> ==>
      ALL \<pi>.
         contains (?\<phi> (mexistsB \<pi>))
          (%w. nonEmpty (%X. ?\<phi> (\<pi> X) w))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("sse_operation_positive_quantification.CBarcan1",
     "MONO ?\<phi> ==>
      ALL \<pi>.
         contains (%w. ALL X. ?\<phi> (\<pi> X) w)
          (?\<phi> (mforallB \<pi>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("sse_operation_positive_quantification.Barcan2",
     "iADDI_a ?\<phi> ==>
      ALL \<pi>.
         contains (%w. nonEmpty (%X. ?\<phi> (\<pi> X) w))
          (?\<phi> (mexistsB \<pi>))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("sse_operation_positive_quantification.Barcan1",
     "iMULT_b ?\<phi> ==>
      ALL \<pi>.
         contains (?\<phi> (mforallB \<pi>))
          (%w. ALL X. ?\<phi> (\<pi> X) w)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("sse_operation_positive_quantification.fp_sup_closed",
     "[| MONO ?\<phi>; iADDI_a ?\<phi> |]
      ==> contains (%D. ALL w. ?\<phi> \<^bold>\<Or>D w = \<^bold>\<Or>D w)
           (%D. nonEmpty D & contains (%X. ALL w. ?\<phi> X w = X w) D)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("sse_operation_positive_quantification.fp_inf_closed",
     "[| MONO ?\<phi>; iMULT_b ?\<phi> |]
      ==> contains
           (%D. ALL w. ?\<phi> \<^bold>\<And>D w = \<^bold>\<And>D w)
           (%D. nonEmpty D & contains (%X. ALL w. ?\<phi> X w = X w) D)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty))))]
