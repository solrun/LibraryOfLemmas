   [("BinaryTree_TacticStyle.binsert_sorted",
     "BinaryTree_TacticStyle.sorted ?t -->
      BinaryTree_TacticStyle.sorted (binsert ?x ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))
         )),
    ("BinaryTree_TacticStyle.remove_sorted",
     "BinaryTree_TacticStyle.sorted ?t ==>
      BinaryTree_TacticStyle.sorted (remove ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BinaryTree_TacticStyle.set_of_binsert",
     "set_of (binsert ?x ?t) = set_of ?t Un {?x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("BinaryTree_TacticStyle.member_set",
     "BinaryTree_TacticStyle.sorted ?t --> memb ?e ?t = (?e : set_of ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1))))
         )),
    ("BinaryTree_TacticStyle.rm_in_set_of",
     "?t ~= Tip ==> rm ?t : set_of ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("BinaryTree_TacticStyle.set_of_remove",
     "BinaryTree_TacticStyle.sorted ?t ==>
      set_of (remove ?x ?t) = set_of ?t - {?x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("BinaryTree_TacticStyle.set_of_rem",
     "?t ~= Tip ==> set_of ?t = set_of (rem ?t) Un {rm ?t}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 5,
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("BinaryTree_TacticStyle.binsert_spec",
     "BinaryTree_TacticStyle.sorted ?t ==>
      BinaryTree_TacticStyle.sorted (binsert ?x ?t) &
      set_of (binsert ?x ?t) = set_of ?t Un {?x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("BinaryTree_TacticStyle.remove_spec",
     "BinaryTree_TacticStyle.sorted ?t ==>
      BinaryTree_TacticStyle.sorted (remove ?x ?t) &
      set_of (remove ?x ?t) = set_of ?t - {?x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("BinaryTree_TacticStyle.sorted_rem",
     "[| ?t ~= Tip; ?x : set_of (rem ?t);
         BinaryTree_TacticStyle.sorted ?t |]
      ==> ?x < rm ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 1))))]
