   [("BinaryTree.sorted_distinct", "sorted_distinct_pred ?h ?a ?b ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)
         )),
    ("BinaryTree.binsert_sorted",
     "sortedTree ?h ?t --> sortedTree ?h (binsert ?h ?x ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)))
         )),
    ("BinaryTree.remove_sort",
     "sortedTree ?h ?t --> sortedTree ?h (remove ?h ?e ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)))
         )),
    ("BinaryTree.sortLemmaL",
     "sortedTree ?h (T ?t1.0 ?x ?t2.0) ==> sortedTree ?h ?t1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3), template_var 2)
           ))),
    ("BinaryTree.sortLemmaR",
     "sortedTree ?h (T ?t1.0 ?x ?t2.0) ==> sortedTree ?h ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3), template_var 0)
           ))),
    ("BinaryTree.wrm_sort",
     "?t ~= Tip & sortedTree ?h ?t --> sortedTree ?h (wrm ?h ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 2))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))
         )),
    ("BinaryTree.memb_spec",
     "sortedTree ?h ?t ==> memb ?h ?x ?t = (?x : setOf ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("BinaryTree.rm_set",
     "?t ~= Tip & sortedTree ?h ?t --> rm ?h ?t : setOf ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 1)))
         )),
    ("BinaryTree.remove_set",
     "sortedTree ?h ?t --> setOf (remove ?h ?e ?t) = setOf ?t - eqs ?h ?e",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("BinaryTree.wrmrm_decomp",
     "?t ~= Tip --> wrmrm ?h ?t = (wrm ?h ?t, rm ?h ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))
         )),
    ("BinaryTree.wrm_set1",
     "?t ~= Tip & sortedTree ?h ?t --> setOf (wrm ?h ?t) <= setOf ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app (template_hole 1, template_var 1)))
         )),
    ("BinaryTree.tlookup_finds",
     "sortedTree ?h ?t & ?y : setOf ?t --> tlookup ?h (?h ?y) ?t = Some ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_var 1)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_var 2, template_var 0)),
                 template_var 1)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("BinaryTree.binsert_set",
     "sortedTree ?h ?t -->
      setOf (binsert ?h ?e ?t) = setOf ?t - eqs ?h ?e Un {?e}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 6, template_var 1)),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))))
         )),
    ("BinaryTree.tlookup_none",
     "sortedTree ?h ?t & tlookup ?h ?k ?t = None -->
      (ALL x:setOf ?t. ?h x ~= ?k)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0),
                     template_var 1)),
                 template_hole 4))),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty))
         )),
    ("BinaryTree.disjCond",
     "(!!x. [| x : ?A; x : ?B |] ==> False) ==> ?A Int ?B = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("BinaryTree.tlookup_some",
     "sortedTree ?h ?t & tlookup ?h ?k ?t = Some ?x -->
      ?x : setOf ?t & ?h ?x = ?k",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 1),
                     template_var 2)),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 0)),
               template_var 1)))
         )),
    ("BinaryTree.wrm_set",
     "?t ~= Tip & sortedTree ?h ?t -->
      setOf (wrm ?h ?t) = setOf ?t - {rm ?h ?t}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_hole 8))),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_hole 0))))
         )),
    ("BinaryTree.wrm_less_rm",
     "?t ~= Tip & sortedTree ?h ?t -->
      (ALL l:setOf (wrm ?h ?t). ?h l < ?h (rm ?h ?t))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_hole 6))),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 1))),
             t_empty))
         )),
    ("BinaryTree.remove_spec",
     "sortedTree ?h ?t -->
      sortedTree ?h (remove ?h ?e ?t) &
      setOf (remove ?h ?e ?t) = setOf ?t - eqs ?h ?e",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)))))
         )),
    ("BinaryTree.cases3",
     "[| ?C1.0 ==> ?G; ?C2.0 ==> ?G; ?C3.0 ==> ?G; ?C1.0 | ?C2.0 | ?C3.0 |]
      ==> ?G",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_predicate (template_var 2)),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 2)),
        template_implication
         ([template_predicate (template_var 0)],
          template_predicate (template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate (template_var 2))),
    ("BinaryTree.binsert_spec",
     "sortedTree ?h ?t -->
      sortedTree ?h (binsert ?h ?x ?t) &
      setOf (binsert ?h ?e ?t) = setOf ?t - eqs ?h ?e Un {?e}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_var 3),
                       template_var 0),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 5, template_var 2)),
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)))))
         ))]
