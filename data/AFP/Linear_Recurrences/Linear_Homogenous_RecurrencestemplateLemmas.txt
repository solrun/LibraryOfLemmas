   [("Linear_Homogenous_Recurrences.lhr_fps_correct",
     "linear_homogenous_recurrence ?f ?cs ?fs ==>
      fps_of_ratfps (lhr_fps ?cs ?fs) = Abs_fps ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("Linear_Homogenous_Recurrences.solve_lhr_aux",
     "[| linear_homogenous_recurrence ?f ?cs ?fs;
         is_factorization_of ?fctrs (lr_fps_denominator' ?cs) |]
      ==> ?f =
          interp_ratfps_solution
           (solve_factored_ratfps'
             (lhr_fps_numerator (length ?fs + 1 - length ?cs) ?cs ((!) ?fs))
             ?fctrs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, template_var 2))
            )],
       template_equation
        (template_var 3,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_var 1)),
                           template_hole 1)),
                       template_app (template_hole 2, template_var 2))),
                   template_var 2),
                 template_app (template_hole 0, template_var 1))),
             template_var 0))))),
    ("Linear_Homogenous_Recurrences.lhr_fps_numerator_code",
     "coeffs (lhr_fps_numerator ?m ?cs ?f) =
      (let N = length ?cs - 1
       in strip_while ((=) (0::?'a))
           (map (%k. SUM i<=min N k. ?cs ! (N - i) * ?f (k - i))
             [0..<N + ?m]))",
     template_equation
      (template_app
        (template_hole 17,
         template_app
          (template_app
            (template_app (template_hole 16, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 14,
               template_app (template_hole 13, template_var 1)),
             template_hole 12)),
         t_empty))),
    ("Linear_Homogenous_Recurrences.lhr_rec",
     "[| ?cs ~= []; last ?cs ~= (0::?'a); length ?cs - 1 <= length ?fs;
         length ?fs <= ?n |]
      ==> (SUM k<length ?cs.
           ?cs ! k * lhr ?cs ?fs (?n + 1 - length ?cs + k)) =
          (0::?'a)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_negation
         (
            template_equation
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_hole 6),
          template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 2))),
         template_hole 10))),
    ("Linear_Homogenous_Recurrences.lhr_fps",
     "[| ?cs ~= [];
         !!n. ?m <= n ==>
              (SUM k<=length ?cs - 1. ?cs ! k * ?f (n + k)) = (0::?'a);
         last ?cs ~= (0::?'a) |]
      ==> Abs_fps ?f =
          fps_of_poly (lhr_fps_numerator ?m ?cs ?f) /
          fps_of_poly (lr_fps_denominator ?cs)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 19)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 2),
              template_hole 7)
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2),
                 template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 2)))))),
    ("Linear_Homogenous_Recurrences.lhr_fps_aux",
     "[| !!n. ?m <= n ==> (SUM k<=?N. ?c k * ?f (n + k)) = (0::?'a);
         ?c ?N ~= (0::?'a) |]
      ==> Abs_fps ?f =
          fps_of_poly
           (Poly
             (map (%k. SUM i<=min ?N k. ?c (?N - i) * ?f (k - i))
               [0..<?N + ?m])) /
          fps_of_poly (Poly (map (%k. ?c (?N - k)) [0..<Suc ?N]))",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 0),
              template_hole 12)
            )],
       template_equation
        (template_app (template_hole 9, template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app (template_hole 14, template_var 0),
                       template_var 3)))))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 0))))))))),
    ("Linear_Homogenous_Recurrences.lhrI",
     "[| ?cs ~= []; last ?cs ~= (0::?'a); length ?cs - 1 <= length ?fs;
         !!n. n < length ?fs ==> ?f n = ?fs ! n;
         !!n. length ?fs <= n ==>
              (SUM k<length ?cs. ?cs ! k * ?f (n + 1 - length ?cs + k)) =
              (0::?'a) |]
      ==> ?f ?n = lhr ?cs ?fs ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 15)),
        template_negation
         (
            template_equation
             (template_app (template_hole 13, template_var 3),
              template_hole 12)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 3)),
            template_hole 8),
          template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0))))]
