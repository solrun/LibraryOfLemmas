   [("Rational_FPS_Solver.length_snd_poly_pfd_simple",
     "length (snd (poly_pfd_simple ?p ?cs)) = length ?cs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Rational_FPS_Solver.reflect_poly_0_iff",
     "(reflect_poly ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Rational_FPS_Solver.solve_factored_ratfps_roots",
     "map snd (snd (solve_factored_ratfps ?p ?cs)) = map fst ?cs",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Rational_FPS_Solver.inverse_irred_power_poly_code",
     "coeffs (inverse_irred_power_poly ?d ?n) =
      (if ?n = 0 | ?d = (0::?'a) then []
       else let e = ?d / fact (?n - 1)
            in map (%x. e * of_nat x) (tl (stirling_row ?n)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_var 1),
                template_var 0))
            )],
       template_dunno))]
