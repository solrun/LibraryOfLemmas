Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Pochhammer_Polynomials" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences" via "Draft.Rational_FPS_Solver")
Loading theory "HOL-Library.Tree" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Stream" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.128s elapsed time, 0.513s cpu time, 0.066s GC time
Loading theory "Draft.Eulerian_Polynomials" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.Pochhammer_Polynomials"
### 0.538s elapsed time, 2.111s cpu time, 0.248s GC time
Loading theory "Draft.Linear_Recurrences_Common" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Linear_Recurrences_Common"
### 0.064s elapsed time, 0.258s cpu time, 0.000s GC time
Loading theory "Draft.Linear_Recurrences_Misc" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences" via "Draft.Rational_FPS_Solver" via "Draft.Partial_Fraction_Decomposition")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  eulerian_poly :: "nat => 'a poly"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  fps_monom_poly_aux :: "'a => nat => 'a poly"
### theory "Draft.Eulerian_Polynomials"
### 0.673s elapsed time, 2.623s cpu time, 0.274s GC time
Loading theory "Draft.RatFPS" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Linear_Recurrences_Misc"
### 0.274s elapsed time, 1.054s cpu time, 0.177s GC time
Loading theory "Draft.Factorizations" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences" via "Draft.Rational_FPS_Solver")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.911s elapsed time, 3.561s cpu time, 0.425s GC time
Loading theory "Draft.Partial_Fraction_Decomposition" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences" via "Draft.Rational_FPS_Solver")
Found termination order: "size <*mlex*> {}"
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Polynomial.poly" found.
instantiation
  ratfps :: (field_gcd) idom
  uminus_ratfps == uminus :: 'a ratfps => 'a ratfps
  one_ratfps == one_class.one :: 'a ratfps
  times_ratfps == times :: 'a ratfps => 'a ratfps => 'a ratfps
  zero_ratfps == zero_class.zero :: 'a ratfps
  minus_ratfps == minus :: 'a ratfps => 'a ratfps => 'a ratfps
  plus_ratfps == plus :: 'a ratfps => 'a ratfps => 'a ratfps
Found termination order: "size <*mlex*> {}"
### theory "Draft.Factorizations"
### 0.289s elapsed time, 1.075s cpu time, 0.550s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  ratfps :: (field_gcd) inverse
  inverse_ratfps == inverse :: 'a ratfps => 'a ratfps
  divide_ratfps == divide :: 'a ratfps => 'a ratfps => 'a ratfps
instantiation
  ratfps :: (equal) equal
  equal_ratfps == equal_class.equal :: 'a ratfps => 'a ratfps => bool
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  fps :: (equal) equal
  equal_fps == equal_class.equal :: 'a fps => 'a fps => bool
instantiation
  ratfps :: (field_gcd) normalization_semidom
  normalize_ratfps == normalize :: 'a ratfps => 'a ratfps
  unit_factor_ratfps == unit_factor :: 'a ratfps => 'a ratfps
instantiation
  ratfps :: (field_gcd) semidom_modulo
  modulo_ratfps == modulo :: 'a ratfps => 'a ratfps => 'a ratfps
Found termination order: "size <*mlex*> {}"
instantiation
  ratfps :: (field_gcd) euclidean_ring
  euclidean_size_ratfps == euclidean_size :: 'a ratfps => nat
instantiation
  ratfps :: (field_gcd) euclidean_ring_cancel
### theory "HOL-Library.BigO"
### 0.824s elapsed time, 3.172s cpu time, 0.387s GC time
instantiation
  ratfps :: (field_gcd) euclidean_ring_gcd
  Gcd_ratfps == Gcd :: 'a ratfps set => 'a ratfps
  Lcm_ratfps == Lcm :: 'a ratfps set => 'a ratfps
  gcd_ratfps == gcd :: 'a ratfps => 'a ratfps => 'a ratfps
  lcm_ratfps == lcm :: 'a ratfps => 'a ratfps => 'a ratfps
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
consts
  decompose_aux :: "'a => 'a list => 'a list"
### theory "HOL-Library.Tree"
### 2.119s elapsed time, 8.058s cpu time, 1.361s GC time
Loading theory "Draft.Templates" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
locale pfd_homomorphism
  fixes lift :: "'a => 'b"
  assumes "pfd_homomorphism lift"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.355s elapsed time, 1.187s cpu time, 0.906s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates")
instantiation
  ratfps :: ({field_gcd,random}) random
  random_ratfps == random_class.random ::
    natural
    => natural * natural => ('a ratfps * (unit => term)) * natural * natural
instantiation
  ratfps :: ({factorial_ring_gcd,field,exhaustive}) exhaustive
  exhaustive_ratfps == exhaustive_class.exhaustive ::
    ('a ratfps => (bool * term list) option)
    => natural => (bool * term list) option
instantiation
  ratfps :: ({field_gcd,full_exhaustive}) full_exhaustive
  full_exhaustive_ratfps == full_exhaustive_class.full_exhaustive ::
    ('a ratfps * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
### theory "Draft.Partial_Fraction_Decomposition"
### 1.694s elapsed time, 6.083s cpu time, 1.879s GC time
Loading theory "Draft.Rational_FPS_Solver" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences" via "Draft.Linear_Homogenous_Recurrences")
### theory "Draft.RatFPS"
### 1.864s elapsed time, 6.685s cpu time, 1.964s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.588s elapsed time, 1.414s cpu time, 0.121s GC time
### theory "Draft.Rational_FPS_Solver"
### 0.924s elapsed time, 1.506s cpu time, 0.149s GC time
Loading theory "Draft.Linear_Homogenous_Recurrences" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates" via "Draft.Linear_Inhomogenous_Recurrences")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
locale linear_homogenous_recurrence
  fixes f :: "nat => 'a"
    and cs :: "'a list"
    and fs :: "'a list"
  assumes "linear_homogenous_recurrence f cs fs"
### theory "Draft.Linear_Homogenous_Recurrences"
### 0.574s elapsed time, 0.576s cpu time, 0.000s GC time
Loading theory "Draft.Linear_Inhomogenous_Recurrences" (required by "Draft.Linear_Inhomogenous_RecurrencesTemplates")
locale linear_inhomogenous_recurrence
  fixes f :: "nat => 'a"
    and g :: "nat => 'a"
    and cs :: "'a list"
    and fs :: "'a list"
  assumes "linear_inhomogenous_recurrence f g cs fs"
### theory "Draft.Linear_Inhomogenous_Recurrences"
### 0.328s elapsed time, 0.328s cpu time, 0.000s GC time
Loading theory "Draft.Linear_Inhomogenous_RecurrencesTemplates"
val templateLemmas =
   [("Linear_Inhomogenous_Recurrences.polyexp_fps",
     "Abs_fps (eval_polyexp ?xs) = polyexp_fps ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Linear_Inhomogenous_Recurrences.polyexp_ratfps",
     "fps_of_ratfps (polyexp_ratfps ?xs) = polyexp_fps ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Linear_Inhomogenous_Recurrences.lir_fps_correct",
     "linear_inhomogenous_recurrence ?f (eval_polyexp ?g) ?cs ?fs ==>
      map_option fps_of_ratfps (lir_fps ?cs ?fs ?g) = Some (Abs_fps ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app (template_hole 6, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 3))))),
    ("Linear_Inhomogenous_Recurrences.eval_polyexp_Cons",
     "eval_polyexp (?x # ?xs) =
      (%n. (case ?x of (a, k, b) => a * of_nat n ^ k * b ^ n) +
           eval_polyexp ?xs n)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       t_empty)),
    ("Linear_Inhomogenous_Recurrences.polyexp_fps_Cons",
     "polyexp_fps (?x # ?xs) =
      (case ?x of
       (a, k, b) =>
         fps_of_poly (smult a (fps_monom_poly b k)) /
         (1 - fps_const b * fps_X) ^ (k + 1)) +
      polyexp_fps ?xs",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app (template_hole 15, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, t_empty), template_var 1)),
         template_app (template_hole 16, template_var 0)))),
    ("Linear_Inhomogenous_Recurrences.polyexp_ratfps_Cons",
     "polyexp_ratfps (?x # ?xs) =
      (case ?x of
       (a, k, b) =>
         ratfps_of_poly (smult a (fps_monom_poly b k)) /
         ratfps_of_poly ([:1::?'a, - b:] ^ (k + 1))) +
      polyexp_ratfps ?xs",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app (template_hole 14, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, t_empty), template_var 1)),
         template_app (template_hole 15, template_var 0)))),
    ("Linear_Inhomogenous_Recurrences.lir_fps_numerator_code",
     "coeffs (lir_fps_numerator ?m ?cs ?f ?g) =
      (let N = length ?cs - 1
       in strip_while ((=) (0::?'a))
           (map (%k. (SUM i<=min N k. ?cs ! (N - i) * ?f (k - i)) - ?g k)
             [0..<N + ?m]))",
     template_equation
      (template_app
        (template_hole 18,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 17, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 15,
               template_app (template_hole 14, template_var 2)),
             template_hole 13)),
         t_empty))),
    ("Linear_Inhomogenous_Recurrences.lir_fps",
     "[| ?cs ~= [];
         !!n. ?m <= n ==>
              (SUM k<=length ?cs - 1. ?cs ! k * ?f (n + k)) =
              ?g (n + (length ?cs - 1));
         last ?cs ~= (0::?'a) |]
      ==> Abs_fps ?f =
          (fps_of_poly (lir_fps_numerator ?m ?cs ?f ?g) + Abs_fps ?g) /
          fps_of_poly (lr_fps_denominator ?cs)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 20)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_hole 8, template_var 3),
              template_hole 7)
            )],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 3),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 3)))))),
    ("Linear_Inhomogenous_Recurrences.lir_fps_aux",
     "[| !!n. ?m <= n ==> (SUM k<=?N. ?c k * ?f (n + k)) = ?g (n + ?N);
         ?c ?N ~= (0::?'a) |]
      ==> Abs_fps ?f =
          (fps_of_poly
            (Poly
              (map (%k. (SUM i<=min ?N k. ?c (?N - i) * ?f (k - i)) - ?g k)
                [0..<?N + ?m])) +
           Abs_fps ?g) /
          fps_of_poly (Poly (map (%k. ?c (?N - k)) [0..<Suc ?N]))",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_var 3, template_var 1),
              template_hole 13)
            )],
       template_equation
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, t_empty),
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_app
                          (template_app (template_hole 16, template_var 1),
                           template_var 4)))))),
               template_app (template_hole 11, template_var 0))),
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 1)))))))))]:
   (string * thm * template) list
### theory "Draft.Linear_Inhomogenous_RecurrencesTemplates"
### 0.643s elapsed time, 0.794s cpu time, 0.082s GC time
val it = (): unit
