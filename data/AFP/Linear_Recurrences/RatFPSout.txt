Loading theory "HOL-Library.Stream" (required by "Draft.RatFPSTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.RatFPSTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.RatFPSTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "Draft.RatFPS" (required by "Draft.RatFPSTemplates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Polynomial.poly" found.
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.554s cpu time, 0.060s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.RatFPSTemplates" via "Draft.ExtrEqs")
instantiation
  ratfps :: (field_gcd) idom
  uminus_ratfps == uminus :: 'a ratfps => 'a ratfps
  one_ratfps == one_class.one :: 'a ratfps
  times_ratfps == times :: 'a ratfps => 'a ratfps => 'a ratfps
  zero_ratfps == zero_class.zero :: 'a ratfps
  minus_ratfps == minus :: 'a ratfps => 'a ratfps => 'a ratfps
  plus_ratfps == plus :: 'a ratfps => 'a ratfps => 'a ratfps
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
instantiation
  ratfps :: (field_gcd) inverse
  inverse_ratfps == inverse :: 'a ratfps => 'a ratfps
  divide_ratfps == divide :: 'a ratfps => 'a ratfps => 'a ratfps
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
instantiation
  ratfps :: (equal) equal
  equal_ratfps == equal_class.equal :: 'a ratfps => 'a ratfps => bool
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
instantiation
  fps :: (equal) equal
  equal_fps == equal_class.equal :: 'a fps => 'a fps => bool
### theory "HOL-Library.Stream"
### 0.878s elapsed time, 3.407s cpu time, 0.329s GC time
instantiation
  ratfps :: (field_gcd) normalization_semidom
  normalize_ratfps == normalize :: 'a ratfps => 'a ratfps
  unit_factor_ratfps == unit_factor :: 'a ratfps => 'a ratfps
Found termination order: "size <*mlex*> {}"
instantiation
  ratfps :: (field_gcd) semidom_modulo
  modulo_ratfps == modulo :: 'a ratfps => 'a ratfps => 'a ratfps
### theory "HOL-Library.BigO"
### 0.789s elapsed time, 3.009s cpu time, 0.269s GC time
instantiation
  ratfps :: (field_gcd) euclidean_ring
  euclidean_size_ratfps == euclidean_size :: 'a ratfps => nat
instantiation
  ratfps :: (field_gcd) euclidean_ring_cancel
Found termination order: "size <*mlex*> {}"
instantiation
  ratfps :: (field_gcd) euclidean_ring_gcd
  Gcd_ratfps == Gcd :: 'a ratfps set => 'a ratfps
  Lcm_ratfps == Lcm :: 'a ratfps set => 'a ratfps
  gcd_ratfps == gcd :: 'a ratfps => 'a ratfps => 'a ratfps
  lcm_ratfps == lcm :: 'a ratfps => 'a ratfps => 'a ratfps
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  ratfps :: ({field_gcd,random}) random
  random_ratfps == random_class.random ::
    natural
    => natural * natural => ('a ratfps * (unit => term)) * natural * natural
instantiation
  ratfps :: ({factorial_ring_gcd,field,exhaustive}) exhaustive
  exhaustive_ratfps == exhaustive_class.exhaustive ::
    ('a ratfps => (bool * term list) option)
    => natural => (bool * term list) option
Found termination order: "size <*mlex*> {}"
instantiation
  ratfps :: ({field_gcd,full_exhaustive}) full_exhaustive
  full_exhaustive_ratfps == full_exhaustive_class.full_exhaustive ::
    ('a ratfps * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.RatFPS"
### 1.511s elapsed time, 4.936s cpu time, 0.916s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.944s elapsed time, 5.445s cpu time, 0.983s GC time
Loading theory "Draft.Templates" (required by "Draft.RatFPSTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.116s cpu time, 0.052s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.RatFPSTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.438s elapsed time, 0.448s cpu time, 0.000s GC time
Loading theory "Draft.RatFPSTemplates"
val templateLemmas =
   [("RatFPS.unit_factor_field", "unit_factor ?x = ?x",
     template_equation
      (template_app (template_hole 0, template_var 0), template_var 0)),
    ("RatFPS.fps_of_poly_code_post", "(0::?'a) * ?a = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("RatFPS.fps_of_poly_code_post", "?a * (0::?'a) = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("RatFPS.fps_of_poly_code_post", "?a - (0::?'a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("RatFPS.fps_of_poly_code_post", "(0::?'a) + ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("RatFPS.fps_of_poly_code_post", "?a + (0::?'a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("RatFPS.ratfps_nth_0", "ratfps_nth 0 ?n = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("RatFPS.fps_of_poly_code_post", "num.One * ?n = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("RatFPS.fps_of_poly_code_post", "?m * num.One = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("RatFPS.quot_to_ratfps_quot_of_ratfps",
     "quot_to_ratfps (quot_of_ratfps ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("RatFPS.fps_divide_1", "?a / 1 = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("RatFPS.fps_dehorner", "1 * ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("RatFPS.fps_dehorner", "?a * 1 = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("RatFPS.fps_of_poly_code_post", "(0::?'a) - ?a = - ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code_post", "\<bar>numeral ?n\<bar> = numeral ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_ratfps_euclidean_size",
     "euclidean_size ?x = euclidean_size (fps_of_ratfps ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.ratfps_subdegree_altdef",
     "ratfps_subdegree ?x = subdegree (fps_of_ratfps ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.subdegree_code",
     "subdegree (fps_of_ratfps ?x) = ratfps_subdegree ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.unit_factor_snd_quot_of_ratfps",
     "unit_factor (snd (quot_of_ratfps ?x)) = 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("RatFPS.normalize_quot_quot_of_fract",
     "normalize_quot (quot_of_fract ?x) = quot_of_fract ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code_post", "fps_const (numeral ?k) = numeral ?k",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (numeral ?n) = numeral ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code",
     "fps_of_poly ?p = fps_of_ratfps (ratfps_of_poly ?p)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_ratfps_ratfps_of_poly",
     "fps_of_ratfps (ratfps_of_poly ?p) = fps_of_poly ?p",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.dbl (numeral ?k) = numeral (num.Bit0 ?k)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.dbl_dec (numeral ?k) = numeral (Num.BitM ?k)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.dbl_inc (numeral ?k) = numeral (num.Bit1 ?k)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "\<bar>- numeral ?n\<bar> = numeral ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.ratfps_subdegree_code",
     "ratfps_subdegree ?x = poly_subdegree (fst (quot_of_ratfps ?x))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "Num.BitM (num.Bit0 ?n) = num.Bit1 (Num.BitM ?n)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "Num.BitM (num.Bit1 ?n) = num.Bit1 (num.Bit0 ?n)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post", "num.One + num.Bit0 ?n = num.Bit1 ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code_post", "num.Bit0 ?m + num.One = num.Bit1 ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.ratfps_of_poly_code",
     "quot_of_ratfps (ratfps_of_poly ?p) = (?p, 1)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("RatFPS.fps_const_code", "fps_const ?c = fps_of_poly [:?c:]",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("RatFPS.fps_of_poly_code_post", "fps_of_poly [:?c:] = fps_const ?c",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("RatFPS.fps_of_poly_code_post", "fps_const (- ?c) = - fps_const ?c",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (- ?p) = - fps_of_poly ?p",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (pderiv ?p) = fps_deriv (fps_of_poly ?p)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_inverse_code",
     "inverse (fps_of_ratfps ?x) = fps_of_ratfps (inverse ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_uminus_code", "- fps_of_ratfps ?x = fps_of_ratfps (- ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_ratfps_inverse",
     "fps_of_ratfps (inverse ?x) = inverse (fps_of_ratfps ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_uminus",
     "fps_of_ratfps (- ?x) = - fps_of_ratfps ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_normalize",
     "fps_of_ratfps (normalize ?x) = normalize (fps_of_ratfps ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_unit_factor",
     "fps_of_ratfps (unit_factor ?x) = unit_factor (fps_of_ratfps ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("RatFPS.coeff_0_snd_quot_of_ratfps_nonzero",
     "constant_term (snd (quot_of_ratfps ?x)) ~= (0::?'a)",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub (num.Bit0 ?k) num.One = numeral (Num.BitM ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub (num.Bit1 ?k) num.One = numeral (num.Bit0 ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("RatFPS.ratfps_nth_altdef", "ratfps_nth ?x ?n = fps_of_ratfps ?x $ ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("RatFPS.fps_nth_code", "fps_of_ratfps ?x $ ?n = ratfps_nth ?x ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "Suc (numeral ?n) = numeral (?n + num.One)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("RatFPS.ratfps_eq_0_iff", "(?x = 0) = (fps_of_ratfps ?x = 0)",
     template_bimplication
      (template_equation (template_var 0, template_hole 3),
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("RatFPS.ratfps_of_poly_eq_0_iff", "(ratfps_of_poly ?x = 0) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("RatFPS.fps_of_ratfps_eq_zero_iff",
     "(fps_of_ratfps ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (prod_list ?xs) = prod_list (map fps_of_poly ?xs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (sum_list ?xs) = sum_list (map fps_of_poly ?xs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("RatFPS.fps_dehorner", "?d + - ?e = ?d - ?e",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("RatFPS.normalize_field",
     "normalize ?x = (if ?x = (0::?'a) then 0::?'a else (1::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 1)),
               template_hole 1),
             template_hole 0)
           ))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.dbl (- numeral ?k) =
      - neg_numeral_class.dbl (numeral ?k)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.dbl_dec (- numeral ?k) =
      - neg_numeral_class.dbl_inc (numeral ?k)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.dbl_inc (- numeral ?k) =
      - neg_numeral_class.dbl_dec (numeral ?k)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub num.One (num.Bit0 ?l) =
      - numeral (Num.BitM ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub num.One (num.Bit1 ?l) =
      - numeral (num.Bit0 ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "numeral ?m - numeral ?n = neg_numeral_class.sub ?m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "num.One + num.Bit1 ?n = num.Bit0 (?n + num.One)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit1 ?m + num.One = num.Bit0 (?m + num.One)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("RatFPS.ratfps_eq_0_code", "(?x = 0) = (fst (quot_of_ratfps ?x) = 0)",
     template_bimplication
      (template_equation (template_var 0, template_hole 4),
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("RatFPS.equal_ratfps_code",
     "equal_class.equal ?x ?y = (quot_of_ratfps ?x = quot_of_ratfps ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("RatFPS.quot_of_fract_eq_iff",
     "(quot_of_fract ?x = quot_of_fract ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("RatFPS.quot_of_ratfps_eq_iff",
     "(quot_of_ratfps ?x = quot_of_ratfps ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("RatFPS.fps_of_ratfps_eq_iff",
     "(fps_of_ratfps ?p = fps_of_ratfps ?q) = (?p = ?q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("RatFPS.equal_fps_code",
     "equal_class.equal (fps_of_ratfps ?f) (fps_of_ratfps ?g) = (?f = ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("RatFPS.fps_of_ratfps_dvd",
     "(fps_of_ratfps ?x dvd fps_of_ratfps ?y) = (?x dvd ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("RatFPS.fps_shift_times_X_power''",
     "fps_shift ?n (fps_X ^ ?n * ?f) = ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_var 0)),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (?p ^ ?n) = fps_of_poly ?p ^ ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("RatFPS.fps_cutoff_code",
     "fps_cutoff ?n (fps_of_ratfps ?x) = fps_of_poly (ratfps_cutoff ?n ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_shift_code",
     "fps_shift ?n (fps_of_ratfps ?x) = fps_of_ratfps (ratfps_shift ?n ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_ratfps_cutoff",
     "fps_of_poly (ratfps_cutoff ?n ?x) = fps_cutoff ?n (fps_of_ratfps ?x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_of_ratfps_shift",
     "fps_of_ratfps (ratfps_shift ?n ?x) = fps_shift ?n (fps_of_ratfps ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_dehorner", "- ?d * ?e = - (?d * ?e)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "numeral ?m + numeral ?n = numeral (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub (num.Bit0 ?k) (num.Bit0 ?l) =
      neg_numeral_class.dbl (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub (num.Bit0 ?k) (num.Bit1 ?l) =
      neg_numeral_class.dbl_dec (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub (num.Bit1 ?k) (num.Bit0 ?l) =
      neg_numeral_class.dbl_inc (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "neg_numeral_class.sub (num.Bit1 ?k) (num.Bit1 ?l) =
      neg_numeral_class.dbl (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "numeral ?m + - numeral ?n = neg_numeral_class.sub ?m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "- numeral ?m + numeral ?n = neg_numeral_class.sub ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("RatFPS.fps_of_poly_code_post",
     "numeral ?m * numeral ?n = numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit0 ?m + num.Bit0 ?n = num.Bit0 (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit0 ?m + num.Bit1 ?n = num.Bit1 (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit1 ?m + num.Bit0 ?n = num.Bit1 (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RatFPS.is_unit_ratfps_iff",
     "is_unit ?x = (ratfps_nth ?x 0 ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1),
             template_hole 0)
           ))),
    ("RatFPS.div_const_poly", "?p div [:?c:] = smult (inverse ?c) ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("RatFPS.unit_factor_poly_altdef",
     "unit_factor ?p = monom (unit_factor (lead_coeff ?p)) 0",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_hole 0))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_const (?x / ?y) = fps_const ?x / fps_const ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (?p * ?q) = fps_of_poly ?p * fps_of_poly ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (smult ?c ?p) = fps_const ?c * fps_of_poly ?p",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (?p + ?q) = fps_of_poly ?p + fps_of_poly ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_diff",
     "fps_of_ratfps (?x - ?y) = fps_of_ratfps ?x - fps_of_ratfps ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_add",
     "fps_of_ratfps (?x + ?y) = fps_of_ratfps ?x + fps_of_ratfps ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_mult",
     "fps_of_ratfps (?x * ?y) = fps_of_ratfps ?x * fps_of_ratfps ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_divide",
     "fps_of_ratfps (?f / ?g) = fps_of_ratfps ?f / fps_of_ratfps ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_of_ratfps_mod",
     "fps_of_ratfps (?f mod ?g) = fps_of_ratfps ?f mod fps_of_ratfps ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_diff_code",
     "fps_of_ratfps ?x - fps_of_ratfps ?y = fps_of_ratfps (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_add_code",
     "fps_of_ratfps ?x + fps_of_ratfps ?y = fps_of_ratfps (?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_mult_code",
     "fps_of_ratfps ?x * fps_of_ratfps ?y = fps_of_ratfps (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (?p - ?q) = fps_of_poly ?p - fps_of_poly ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("RatFPS.fps_dehorner", "fps_X * fps_X ^ ?m = fps_X ^ Suc ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_dehorner", "fps_X ^ ?m * fps_X = fps_X ^ Suc ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("RatFPS.ratfps_eqI", "fps_of_ratfps ?x = fps_of_ratfps ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "numeral ?m - - numeral ?n = numeral (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "- numeral ?m - - numeral ?n = neg_numeral_class.sub ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit0 ?m * num.Bit0 ?n = num.Bit0 (num.Bit0 (?m * ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit0 ?m * num.Bit1 ?n = num.Bit0 (?m * num.Bit1 ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit1 ?m * num.Bit0 ?n = num.Bit0 (num.Bit1 ?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("RatFPS.poly_shift_times_monom",
     "poly_shift ?n (monom ?c ?n * ?p) = smult ?c ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("RatFPS.fps_dehorner", "?a + (?b + ?c) = ?a + ?b + ?c",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (monom ?c ?n) = fps_const ?c * fps_X ^ ?n",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (prod ?f ?A) = (PROD x:?A. fps_of_poly (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (sum ?f ?A) = (SUM x:?A. fps_of_poly (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("RatFPS.fps_dehorner", "?d + (?e - ?f) = ?d + ?e - ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("RatFPS.fps_of_poly_code_post",
     "numeral ?m * - numeral ?n = - numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "- numeral ?m * numeral ?n = - numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "- numeral ?m * - numeral ?n = numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "- numeral ?m - numeral ?n = - numeral (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit1 ?m + num.Bit1 ?n = num.Bit0 (?m + ?n + num.One)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("RatFPS.uminus_ratfps_code",
     "quot_of_ratfps (- ?x) = (let (a, y) = quot_of_ratfps ?x in (- a, y))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 2, t_empty)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (smult (inverse (numeral ?c)) ?p) =
      fps_of_poly ?p / numeral ?c",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("RatFPS.fps_of_poly_code_post",
     "fps_of_poly (pCons ?c ?p) = fps_const ?c + fps_of_poly ?p * fps_X",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 0)),
           template_hole 0)))),
    ("RatFPS.ratfps_nth_aux_correct",
     "ratfps_nth_aux ?p ?n = natfun_inverse (fps_of_poly ?p) ?n",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 1)),
               template_hole 0))),
         template_var 0))),
    ("RatFPS.coeff_0_mult",
     "constant_term (?p * ?q) = constant_term ?p * constant_term ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("RatFPS.fps_of_poly_normalize_field",
     "fps_of_poly (normalize ?p) =
      fps_of_poly ?p * fps_const (inverse (lead_coeff ?p))",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 0))))))),
    ("RatFPS.fps_dehorner", "(?b + ?c) * fps_X = ?b * fps_X + ?c * fps_X",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("RatFPS.fps_dehorner", "?a * fps_X * fps_X = ?a * fps_X\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4)),
         template_hole 4),
       template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 4),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("RatFPS.fps_of_ratfps_altdef",
     "fps_of_ratfps ?x =
      (case quot_of_ratfps ?x of (a, b) => fps_of_poly a / fps_of_poly b)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("RatFPS.fps_dehorner", "(?d - ?e) * fps_X = ?d * fps_X - ?e * fps_X",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("RatFPS.fps_dehorner", "fps_X ^ ?m * fps_X ^ ?n = fps_X ^ (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RatFPS.fps_of_poly_code_post",
     "- numeral ?m + - numeral ?n = - (numeral ?m + numeral ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_ratfps_is_unit",
     "(fps_of_ratfps ?a $ 0 ~= (0::?'a)) = (ratfps_nth ?a 0 ~= (0::?'a))",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2),
             template_hole 1)
           ),
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 2),
             template_hole 1)
           ))),
    ("RatFPS.fps_dehorner", "?a * fps_X * fps_X ^ ?m = ?a * fps_X ^ Suc ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_dehorner", "?a * fps_X ^ ?m * fps_X = ?a * fps_X ^ Suc ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("RatFPS.fps_of_poly_code_post",
     "num.Bit1 ?m * num.Bit1 ?n = num.Bit1 (?m + ?n + num.Bit0 (?m * ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("RatFPS.fps_of_ratfps_quot_to_ratfps_code_post",
     "fps_of_ratfps (quot_to_ratfps (?x, pCons (1::?'a) ?y)) =
      fps_of_poly ?x / fps_of_poly (pCons (1::?'a) ?y)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("RatFPS.monom_times_poly_shift'",
     "?n <= poly_subdegree ?p ==>
      monom (1::?'a) ?n * poly_shift ?n ?p = ?p",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("RatFPS.div_const_unit_poly",
     "is_unit ?c ==> ?p div [:?c:] = smult ((1::?'a) div ?c) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 6),
               template_var 1)),
           template_var 0)))),
    ("RatFPS.fps_dehorner",
     "?a * fps_X ^ ?m * fps_X ^ ?n = ?a * fps_X ^ (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("RatFPS.fps_of_ratfps_quot_to_ratfps_code_post",
     "fps_of_ratfps (quot_to_ratfps (?x, pCons (- (1::?'a)) ?y)) =
      fps_of_poly ?x / fps_of_poly (pCons (- (1::?'a)) ?y)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_var 0))))),
    ("RatFPS.fps_of_ratfps_quot_to_ratfps_code_post",
     "fps_of_ratfps (quot_to_ratfps (?x', pCons (numeral ?n) ?y')) =
      fps_of_poly ?x' / fps_of_poly (pCons (numeral ?n) ?y')",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0))))),
    ("RatFPS.monom_times_poly_shift",
     "?n <= poly_subdegree ?p ==>
      monom ?c ?n * poly_shift ?n ?p = smult ?c ?p",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("RatFPS.coeff_0_normalize_quot_nonzero",
     "constant_term (snd ?x) ~= (0::?'a) ==>
      constant_term (snd (normalize_quot ?x)) ~= (0::?'a)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0)),
                template_hole 2),
              template_hole 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 0))),
               template_hole 2),
             template_hole 1)
           ))),
    ("RatFPS.ratfps_dvd_code",
     "(?x dvd ?y) =
      (?y = 0 | ?x ~= 0 & ratfps_subdegree ?x <= ratfps_subdegree ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("RatFPS.fps_dvd_code",
     "(?x dvd ?y) = (?y = 0 | ?x ~= 0 & subdegree ?x <= subdegree ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("RatFPS.subdegree_minus_cutoff_ge",
     "?f - fps_cutoff ?n ?f ~= 0 ==>
      ?n <= subdegree (?f - fps_cutoff ?n ?f)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)))))),
    ("RatFPS.fps_of_ratfps_quot_to_ratfps_code_post",
     "fps_of_ratfps (quot_to_ratfps (?x', pCons (- numeral ?n) ?y')) =
      fps_of_poly ?x' / fps_of_poly (pCons (- numeral ?n) ?y')",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1))),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_var 0))))),
    ("RatFPS.fps_of_ratfps_quot_to_ratfps",
     "constant_term ?y ~= (0::?'a) ==>
      fps_of_ratfps (quot_to_ratfps (?x, ?y)) =
      fps_of_poly ?x / fps_of_poly ?y",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_hole 7),
              template_hole 6)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("RatFPS.fractrel_normalize_quot",
     "[| fractrel ?p ?p; fractrel ?q ?q |]
      ==> fractrel (normalize_quot ?p) (normalize_quot ?q) =
          fractrel ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("RatFPS.quot_of_ratfps_quot_to_ratfps",
     "[| constant_term (snd ?x) ~= (0::?'a); ?x : normalized_fracts |]
      ==> quot_of_ratfps (quot_to_ratfps ?x) = ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_hole 6),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("RatFPS.poly_shift_times_monom_ge",
     "?m <= ?n ==>
      poly_shift ?n (monom ?c ?m * ?p) =
      smult ?c (poly_shift (?n - ?m) ?p)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 3)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 0))))),
    ("RatFPS.poly_shift_times_monom_le",
     "?n <= ?m ==>
      poly_shift ?n (monom ?c ?m * ?p) = monom ?c (?m - ?n) * ?p",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3))),
           template_var 0)))),
    ("RatFPS.ratfps_lcm_altdef",
     "lcm ?f ?g =
      (if ?f = 0 | ?g = 0 then 0
       else ratfps_of_poly
             (monom (1::?'a)
               (max (ratfps_subdegree ?f) (ratfps_subdegree ?g))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 9, template_var 1),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_hole 5))),
               template_hole 5),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("RatFPS.ratfps_shift_code",
     "quot_of_ratfps (ratfps_shift ?n ?x) =
      (let (a, b) =
             quot_of_ratfps (?x - ratfps_of_poly (ratfps_cutoff ?n ?x))
       in (poly_shift ?n a, b))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))))),
         template_app (template_hole 2, t_empty)))),
    ("RatFPS.is_unit_div_div_commute",
     "[| is_unit ?b; is_unit ?c |] ==> ?a div ?b div ?c = ?a div ?c div ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("RatFPS.ratfps_Gcd_altdef",
     "Gcd ?A =
      (if ?A <= {0} then 0
       else ratfps_of_poly
             (monom (1::?'a) (Inf (ratfps_subdegree ` (?A - {0})))))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 0),
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_hole 7))),
           template_hole 8),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_hole 7))))))))),
    ("RatFPS.ratfps_nth_code",
     "ratfps_nth ?x ?n =
      (let (a, b) = quot_of_ratfps ?x
       in SUM i = 0..?n. coeff a i * ratfps_nth_aux b (?n - i))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app (template_hole 7, t_empty)))),
    ("RatFPS.fps_of_poly_quot_normalize_quot",
     "snd ?x ~= 0 ==>
      fps_of_poly (fst (normalize_quot ?x)) /
      fps_of_poly (snd (normalize_quot ?x)) =
      fps_of_poly (fst ?x) / fps_of_poly (snd ?x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 6, template_var 0)))))),
    ("RatFPS.constant_term_denominator_nonzero_imp_constant_term_denominator_div_gcd_nonzero",
     "constant_term (denominator ?x) ~= (0::?'a) ==>
      constant_term (denominator ?x div gcd ?a (denominator ?x)) ~=
      (0::?'a)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1))),
                template_hole 3),
              template_hole 2)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 1))),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 1))))),
               template_hole 3),
             template_hole 2)
           ))),
    ("RatFPS.ratfps_gcd",
     "[| ?f ~= 0; ?g ~= 0 |]
      ==> gcd ?f ?g =
          ratfps_of_poly
           (monom (1::?'a)
             (min (ratfps_subdegree ?f) (ratfps_subdegree ?g)))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))))),
    ("RatFPS.ratfps_lcm",
     "[| ?f ~= 0; ?g ~= 0 |]
      ==> lcm ?f ?g =
          ratfps_of_poly
           (monom (1::?'a)
             (max (ratfps_subdegree ?f) (ratfps_subdegree ?g)))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))))),
    ("RatFPS.fps_of_poly_quot_normalize_quot'",
     "constant_term (snd ?x) ~= (0::?'a) ==>
      fps_of_poly (fst (normalize_quot ?x)) /
      fps_of_poly (snd (normalize_quot ?x)) =
      fps_of_poly (fst ?x) / fps_of_poly (snd ?x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 7,
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 7, template_var 0)))))),
    ("RatFPS.ratfps_Gcd",
     "?A - {0} ~= {} ==>
      Gcd ?A =
      ratfps_of_poly
       (monom (1::?'a) (Inf (ratfps_subdegree ` (?A - {0}))))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 11, template_var 0),
                template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_hole 8)),
              template_hole 8)
            )],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_app
                  (template_app (template_hole 11, template_var 0),
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_hole 8))))))))),
    ("RatFPS.fps_of_ratfps_cases",
     "(!!p q.
          [| constant_term q ~= (0::?'a);
             fps_of_ratfps ?f = fps_of_poly p / fps_of_poly q |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("RatFPS.coeff_0_div",
     "[| constant_term ?p ~= (0::?'a); ?q dvd ?p |]
      ==> constant_term (?p div ?q) = constant_term ?p / constant_term ?q",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 4)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))))),
    ("RatFPS.ratfps_Lcm_altdef",
     "Lcm ?A =
      (if 0 : ?A | ~ bdd_above (ratfps_subdegree ` ?A) then 0
       else if ?A = {} then 1
            else ratfps_of_poly
                  (monom (1::?'a) (Sup (ratfps_subdegree ` ?A))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 0)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_hole 7),
                         template_var 0))))),
               template_hole 11),
             template_app
              (template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5)),
                 template_hole 4),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 8, t_empty),
                       template_var 0))))))
           ))),
    ("RatFPS.minus_ratfps_code",
     "quot_of_ratfps (?x - ?y) =
      (let (a, b) = quot_of_ratfps ?x; (c, d) = quot_of_ratfps ?y
       in normalize_quot (a * d - b * c, b * d))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("RatFPS.plus_ratfps_code",
     "quot_of_ratfps (?x + ?y) =
      (let (a, b) = quot_of_ratfps ?x; (c, d) = quot_of_ratfps ?y
       in normalize_quot (a * d + b * c, b * d))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 7, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("RatFPS.ratfps_inverse_code",
     "quot_of_ratfps (inverse ?x) =
      (let (a, b) = quot_of_ratfps ?x
       in if constant_term a = (0::?'a) then (0, 1)
          else let u = unit_factor a in (b div u, a div u))",
     template_equation
      (template_app
        (template_hole 14, template_app (template_hole 13, template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 14, template_var 0)),
         template_app (template_hole 11, t_empty)))),
    ("RatFPS.coeff_0_add_fract_nonzero",
     "[| constant_term (denominator ?x) ~= (0::?'a);
         constant_term (denominator ?y) ~= (0::?'a) |]
      ==> constant_term (denominator (?x + ?y)) ~= (0::?'a)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1))),
                template_hole 2),
              template_hole 1)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0))),
                template_hole 2),
              template_hole 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)))),
               template_hole 2),
             template_hole 1)
           ))),
    ("RatFPS.ratfps_Lcm",
     "[| ?A ~= {}; 0 ~: ?A; bdd_above (ratfps_subdegree ` ?A) |]
      ==> Lcm ?A =
          ratfps_of_poly (monom (1::?'a) (Sup (ratfps_subdegree ` ?A)))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 11)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, t_empty),
                 template_var 0))))))),
    ("RatFPS.ratfps_gcd_altdef",
     "gcd ?f ?g =
      (if ?f = 0 & ?g = 0 then 0
       else if ?f = 0
            then ratfps_of_poly (monom (1::?'a) (ratfps_subdegree ?g))
            else if ?g = 0
                 then ratfps_of_poly (monom (1::?'a) (ratfps_subdegree ?f))
                 else ratfps_of_poly
                       (monom (1::?'a)
                         (min (ratfps_subdegree ?f)
                           (ratfps_subdegree ?g))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 9, template_var 1),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_hole 5))),
               template_hole 5),
             template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_hole 5)),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 0)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_hole 5)),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app (template_hole 1, template_var 1)))),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 1, template_var 1)),
                       template_app (template_hole 1, template_var 0)))))))
           ))),
    ("RatFPS.times_ratfps_code",
     "quot_of_ratfps (?x * ?y) =
      (let (a, b) = quot_of_ratfps ?x; (c, d) = quot_of_ratfps ?y;
           (e, f) = normalize_quot (a, d); (g, h) = normalize_quot (c, b)
       in (e * g, f * h))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 1)),
         template_app (template_hole 3, t_empty))))]:
   (string * thm * template) list
### theory "Draft.RatFPSTemplates"
### 0.606s elapsed time, 0.781s cpu time, 0.086s GC time
val it = (): unit
