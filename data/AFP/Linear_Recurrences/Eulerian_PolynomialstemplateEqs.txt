   [("Eulerian_Polynomials.fps_monom_poly_code",
     "fps_monom_poly ?c ?k =
      (if ?k = 0 then 1 else pCons (0::?'a) (fps_monom_poly_aux ?c ?k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Eulerian_Polynomials.fps_monom_poly_aux",
     "fps_monom_poly_aux ?c ?k =
      smult ?c (eulerian_poly ?k \<circ>\<^sub>p [:0::?'a, ?c:])",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0)))))),
    ("Eulerian_Polynomials.fps_monom_aux",
     "Abs_fps (%n. of_nat n ^ ?k) =
      fps_of_poly (fps_monom_poly (1::?'a) ?k) / (1 - fps_X) ^ (?k + 1)",
     template_equation
      (template_app (template_hole 12, t_empty),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Eulerian_Polynomials.eulerian_poly",
     "fps_of_poly (eulerian_poly ?k) =
      Abs_fps (%n. of_nat (n + 1) ^ ?k) * (1 - fps_X) ^ (?k + 1)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))))),
    ("Eulerian_Polynomials.eulerian_poly'",
     "Abs_fps (%n. of_nat (n + 1) ^ ?k) =
      fps_of_poly (eulerian_poly ?k) / (1 - fps_X) ^ (?k + 1)",
     template_equation
      (template_app (template_hole 11, t_empty),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))))),
    ("Eulerian_Polynomials.fps_monom",
     "Abs_fps (%n. of_nat n ^ ?k * ?c ^ n) =
      fps_of_poly (fps_monom_poly ?c ?k) /
      (1 - fps_const ?c * fps_X) ^ (?k + 1)",
     template_equation
      (template_app (template_hole 14, t_empty),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Eulerian_Polynomials.eulerian_poly_Suc",
     "eulerian_poly (Suc ?n) =
      (let p = eulerian_poly ?n
       in [:0::?'a, 1::?'a, - (1::?'a):] * pderiv p +
          p * [:1::?'a, of_nat ?n:])",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app (template_hole 11, template_var 0)),
         t_empty)))]
