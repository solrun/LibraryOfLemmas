   [("Rational_FPS_Solver.length_snd_poly_pfd_simple",
     "length (snd (poly_pfd_simple ?p ?cs)) = length ?cs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Rational_FPS_Solver.reflect_poly_0_iff",
     "(reflect_poly ?p = 0) = (?p = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Rational_FPS_Solver.degree_Poly'",
     "degree (Poly ?xs) <= length ?xs - 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Rational_FPS_Solver.degree_inverse_irred_power_poly_le",
     "degree (inverse_irred_power_poly ?c ?n) <= ?n - 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Rational_FPS_Solver.solve_factored_ratfps_roots",
     "map snd (snd (solve_factored_ratfps ?p ?cs)) = map fst ?cs",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Rational_FPS_Solver.degree_inverse_irred_power_poly",
     "?c ~= (0::?'a) ==> degree (inverse_irred_power_poly ?c ?n) = ?n - 1",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Rational_FPS_Solver.degree_Poly_eq",
     "?xs = [] | last ?xs ~= (0::?'a) ==>
      degree (Poly ?xs) = length ?xs - 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_hole 10)),
              template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 0)),
                  template_hole 6)))
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Rational_FPS_Solver.degree_sum_list_le",
     "(!!p. p : set ?ps ==> degree p <= ?T) ==>
      degree (sum_list ?ps) <= ?T",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Rational_FPS_Solver.length_nth_snd_poly_pfd_simple",
     "?i < length ?cs ==>
      length (snd (poly_pfd_simple ?p ?cs) ! ?i) = snd (?cs ! ?i) + 1",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 1))),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2))),
           template_hole 0)))),
    ("Rational_FPS_Solver.solve_factored_ratfps'",
     "[| is_alt_factorization_of ?fctrs ?q; ?q ~= 0 |]
      ==> Abs_fps
           (interp_ratfps_solution (solve_factored_ratfps' ?p ?fctrs)) =
          fps_of_poly ?p / fps_of_poly ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Rational_FPS_Solver.one_minus_const_fps_X_neg_power''",
     "0 < ?n ==>
      fps_const ?d / (1 - fps_const ?c * fps_X) ^ ?n =
      Abs_fps
       (%k. poly (inverse_irred_power_poly ?d ?n) (of_nat k) * ?c ^ k)",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app (template_hole 11, template_var 1)),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 11, template_var 0)),
                   template_hole 6))),
             template_var 2)),
         template_app (template_hole 5, t_empty)))),
    ("Rational_FPS_Solver.inverse_irred_power_poly_code",
     "coeffs (inverse_irred_power_poly ?d ?n) =
      (if ?n = 0 | ?d = (0::?'a) then []
       else let e = ?d / fact (?n - 1)
            in map (%x. e * of_nat x) (tl (stirling_row ?n)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app (template_hole 14, template_var 0),
                       template_hole 13)),
                   template_app
                    (template_app (template_hole 12, template_var 1),
                     template_hole 11))),
               template_hole 10),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5)))),
               t_empty))
           ))),
    ("Rational_FPS_Solver.solve_factored_ratfps",
     "[| distinct (map fst ?cs); (0::?'a) ~: fst ` set ?cs |]
      ==> fps_of_poly ?p /
          fps_of_poly (PROD (c, n)<-?cs. [:1::?'a, - c:] ^ Suc n) =
          Abs_fps (interp_ratfps_solution (solve_factored_ratfps ?p ?cs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 22,
              template_app
               (template_app (template_hole 21, template_hole 20),
                template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 18, template_hole 17),
                  template_app
                   (template_app (template_hole 16, template_hole 20),
                    template_app (template_hole 15, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app (template_hole 12, template_var 0)),
           template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 9, t_empty)),
                 template_var 1)))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Rational_FPS_Solver.ratfps_closed_form_exists",
     "[| coeff ?q 0 ~= 0;
         !!r rs.
            [| !!n. (fps_of_poly ?p / fps_of_poly ?q) $ n =
                    coeff r n +
                    (SUM c | poly (reflect_poly ?q) c = 0.
                        poly (rs c) (of_nat n) * c ^ n);
               !!z. poly (reflect_poly ?q) z = 0 ==>
                    degree (rs z) <= order z (reflect_poly ?q) - 1 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 22, template_var 2),
                template_hole 21),
              template_hole 20)
            ),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate (template_var 0))),
    ("Rational_FPS_Solver.solve_rat_fps_aux",
     "[| distinct (map fst ?cs); (?a, ?zs) = poly_pfd_simple ?p ?cs;
         (0::?'a) ~: fst ` set ?cs |]
      ==> fps_of_poly ?p /
          fps_of_poly (PROD (c, n)<-?cs. [:1::?'a, - c:] ^ Suc n) =
          Abs_fps
           (%k. coeff ?a k +
                (SUM i<length ?cs.
                 poly
                  (SUM j<=snd (?cs ! i).
                   inverse_irred_power_poly (?zs ! i ! j)
                    (snd (?cs ! i) + 1 - j))
                  (of_nat k) *
                 fst (?cs ! i) ^ k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 42,
              template_app
               (template_app (template_hole 41, template_hole 40),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 38, template_var 2),
            template_var 1),
          template_app
           (template_app (template_hole 37, template_var 0),
            template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 35, template_hole 34),
                  template_app
                   (template_app (template_hole 33, template_hole 40),
                    template_app (template_hole 32, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 30,
             template_app (template_hole 29, template_var 0)),
           template_app
            (template_hole 29,
             template_app
              (template_hole 28,
               template_app
                (template_app
                  (template_hole 27,
                   template_app (template_hole 26, t_empty)),
                 template_var 3)))),
         template_app (template_hole 19, t_empty))))]
