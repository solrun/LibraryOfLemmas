   [("Ptolemys_Theorem.radiant_of_bounds", "0 <= radiant_of ?p",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Ptolemys_Theorem.norm_normalize",
     "norm (Ptolemys_Theorem.normalize ?p) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Ptolemys_Theorem.norm_of_radiant", "norm (of_radiant ?\<omega>) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Ptolemys_Theorem.nth_of_radiant_1",
     "of_radiant ?\<omega> $ 1 = cos ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Ptolemys_Theorem.norm_axis", "norm (axis ?i ?x) = \<bar>?x\<bar>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Ptolemys_Theorem.normalize_eq",
     "norm ?p *\<^sub>R Ptolemys_Theorem.normalize ?p = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Ptolemys_Theorem.nth_normalize",
     "\<bar>Ptolemys_Theorem.normalize ?p $ ?i\<bar> <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("Ptolemys_Theorem.polar_form_eq",
     "norm ?p *\<^sub>R of_radiant (radiant_of ?p) = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Ptolemys_Theorem.radiant_of_bounds", "radiant_of ?p < 2 * pi",
     template_inequation
      (less_than, template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Ptolemys_Theorem.radiant_of_weak_ubound", "radiant_of ?p <= 2 * pi",
     template_inequation
      (less_equals, template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Ptolemys_Theorem.nth_of_radiant_2",
     "of_radiant ?\<omega> $ 2 = sin ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app (template_hole 0, template_var 0))),
    ("Ptolemys_Theorem.arccos_lbound_abs",
     "\<bar>?y\<bar> <= 1 ==> 0 <= arccos ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_hole 2)],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Ptolemys_Theorem.arccos_ubound_abs",
     "\<bar>?y\<bar> <= 1 ==> arccos ?y <= pi",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_hole 0))),
    ("Ptolemys_Theorem.of_radiant_minus_2pi",
     "of_radiant (?\<omega> - 2 * pi) = of_radiant ?\<omega>",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0))),
       template_app (template_hole 6, template_var 0))),
    ("Ptolemys_Theorem.of_radiant_plus_2pi",
     "of_radiant (?\<omega> + 2 * pi) = of_radiant ?\<omega>",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0))),
       template_app (template_hole 6, template_var 0))),
    ("Ptolemys_Theorem.sin_arcsin_abs",
     "\<bar>?y\<bar> <= 1 ==> sin (arcsin ?y) = ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Ptolemys_Theorem.nth_normalize_less_zero_iff",
     "(Ptolemys_Theorem.normalize ?p $ ?i < 0) = (?p $ ?i < 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Ptolemys_Theorem.nth_normalize_ge_zero_iff",
     "(0 <= Ptolemys_Theorem.normalize ?p $ ?i) = (0 <= ?p $ ?i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Ptolemys_Theorem.between_normalize_if_distant_from_0",
     "1 <= norm ?p ==> between (0, ?p) (Ptolemys_Theorem.normalize ?p)",
     template_implication
      ([template_inequation
         (less_equals, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Ptolemys_Theorem.between_normalize_if_near_0",
     "norm ?p <= 1 ==> between (0, Ptolemys_Theorem.normalize ?p) ?p",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 0)
           ))),
    ("Ptolemys_Theorem.relative_polar_form_eq",
     "?Q + dist ?P ?Q *\<^sub>R of_radiant (radiant_of (?P - ?Q)) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))),
       template_var 0)),
    ("Ptolemys_Theorem.axis_nth_eq_0",
     "?i ~= ?j ==> axis ?i ?x $ ?j = (0::?'b)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Ptolemys_Theorem.normalize_boundary_iff",
     "(\<bar>Ptolemys_Theorem.normalize ?p $ 1\<bar> = 1) = (?p $ 2 = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_hole 5)),
         template_hole 4),
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 0),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Ptolemys_Theorem.radiant_of",
     "0 <= radiant_of ?p &
      radiant_of ?p < 2 * pi &
      of_radiant (radiant_of ?p) = Ptolemys_Theorem.normalize ?p",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_app (template_hole 9, template_var 0))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 9, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 9, template_var 0))),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Ptolemys_Theorem.norm_eq_on_real_2_vec",
     "norm ?x = sqrt ((?x $ 1)\<^sup>2 + (?x $ 2)\<^sup>2)",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))))),
    ("Ptolemys_Theorem.normalize_square",
     "(Ptolemys_Theorem.normalize ?p $ 1)\<^sup>2 +
      (Ptolemys_Theorem.normalize ?p $ 2)\<^sup>2 =
      1",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_hole 5)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_hole 1,
                 template_app (template_hole 3, template_hole 2)))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))),
       template_hole 0)),
    ("Ptolemys_Theorem.sin_less_zero_iff",
     "[| 0 <= ?x; ?x < 2 * pi |] ==> (sin ?x < 0) = (pi < ?x)",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3))),
            template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 0, template_var 0)),
           template_hole 8),
         template_app
          (template_app (template_hole 7, template_hole 2),
           template_var 0)))),
    ("Ptolemys_Theorem.sin_ge_zero_iff",
     "[| 0 <= ?x; ?x < 2 * pi |] ==> (0 <= sin ?x) = (?x <= pi)",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3))),
            template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 9, template_var 0),
           template_hole 2)))),
    ("Ptolemys_Theorem.ptolemy_trigonometric",
     "sin (?\<omega>\<^sub>1 + ?\<omega>\<^sub>2) *
      sin (?\<omega>\<^sub>2 + ?\<omega>\<^sub>3) =
      sin ?\<omega>\<^sub>1 * sin ?\<omega>\<^sub>3 +
      sin ?\<omega>\<^sub>2 *
      sin (?\<omega>\<^sub>1 + ?\<omega>\<^sub>2 + ?\<omega>\<^sub>3)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)))))),
    ("Ptolemys_Theorem.dist_eq_on_real_2_vec",
     "dist ?a ?b =
      sqrt ((?a $ 1 - ?b $ 1)\<^sup>2 + (?a $ 2 - ?b $ 2)\<^sup>2)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_hole 4)),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 2, template_hole 1)))),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 2, template_hole 1))))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))))),
    ("Ptolemys_Theorem.dist_circle_segment",
     "[| 0 <= ?radius; 0 <= ?\<alpha>; ?\<alpha> <= ?\<beta>;
         ?\<beta> <= 2 * pi |]
      ==> dist (?center + ?radius *\<^sub>R of_radiant ?\<alpha>)
           (?center + ?radius *\<^sub>R of_radiant ?\<beta>) =
          2 * ?radius * sin ((?\<beta> - ?\<alpha>) / 2)",
     template_implication
      ([template_inequation (less_equals, template_hole 13, template_var 3),
        template_inequation (less_equals, template_hole 13, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_hole 9))),
            template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app (template_hole 3, template_var 2)))),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app (template_hole 3, template_var 1)))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_hole 9))),
               template_var 3)),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_app
                (template_hole 11,
                 template_app (template_hole 10, template_hole 9)))))))),
    ("Ptolemys_Theorem.ptolemy",
     "[| dist ?center ?A = ?radius; dist ?center ?B = ?radius;
         dist ?center ?C = ?radius; dist ?center ?D = ?radius;
         radiant_of (?A - ?center) <= radiant_of (?B - ?center);
         radiant_of (?B - ?center) <= radiant_of (?C - ?center);
         radiant_of (?C - ?center) <= radiant_of (?D - ?center) |]
      ==> dist ?A ?C * dist ?B ?D =
          dist ?A ?B * dist ?C ?D + dist ?A ?D * dist ?B ?C",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 2),
          template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 1),
          template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 0),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 5)),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 5))),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 5)),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 5))),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 5)),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 5)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 2)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))))))]
