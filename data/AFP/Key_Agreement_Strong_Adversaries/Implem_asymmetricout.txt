Loading theory "Draft.Messages" (required by "Draft.Implem_asymmetricTemplates" via "Draft.Implem_asymmetric" via "Draft.Implem" via "Draft.Channels" via "Draft.Message_derivation")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.097s elapsed time, 0.423s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.223s elapsed time, 0.889s cpu time, 0.096s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.332s elapsed time, 1.334s cpu time, 0.096s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.937s elapsed time, 3.557s cpu time, 0.759s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.053s elapsed time, 3.810s cpu time, 0.827s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.922s elapsed time, 6.049s cpu time, 1.037s GC time
Loading theory "Draft.Templates" (required by "Draft.Implem_asymmetricTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.172s cpu time, 0.055s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Implem_asymmetricTemplates")
Found termination order: "{}"
Proofs for inductive predicate(s) "eq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.559s elapsed time, 1.173s cpu time, 0.109s GC time
### theory "Draft.Messages"
### 2.911s elapsed time, 8.077s cpu time, 1.202s GC time
Loading theory "Draft.Message_derivation" (required by "Draft.Implem_asymmetricTemplates" via "Draft.Implem_asymmetric" via "Draft.Implem" via "Draft.Channels")
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
[| ?x : analz ?H; !!X. X : ?H ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P Y;
   !!X Y.
      [| Enc X Y : analz ?H; ?P (Enc X Y);
         Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (pubK Y) : analz ?H; ?P (Aenc X (pubK Y));
         priK Y : analz ?H; ?P (priK Y) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (epubK Y) : analz ?H; ?P (Aenc X (epubK Y));
         epriK Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Sign X (priK Y) : analz ?H; ?P (Sign X (priK Y));
         pubK Y : analz ?H; ?P (pubK Y) |]
      ==> ?P X |]
==> ?P ?x
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.Message_derivation"
### 0.557s elapsed time, 0.589s cpu time, 0.025s GC time
Loading theory "Draft.Channels" (required by "Draft.Implem_asymmetricTemplates" via "Draft.Implem_asymmetric" via "Draft.Implem")
Loading theory "Draft.Payloads" (required by "Draft.Implem_asymmetricTemplates" via "Draft.Implem_asymmetric" via "Draft.Implem")
Proofs for inductive predicate(s) "cpayloadp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
### theory "Draft.Payloads"
### 0.394s elapsed time, 0.821s cpu time, 0.084s GC time
### theory "Draft.Channels"
### 0.433s elapsed time, 0.868s cpu time, 0.084s GC time
Loading theory "Draft.Implem" (required by "Draft.Implem_asymmetricTemplates" via "Draft.Implem_asymmetric")
locale basic_implem
  fixes implem :: "chan => msg"
locale semivalid_implem
  fixes implem :: "chan => msg"
  assumes "semivalid_implem implem"
locale valid_implem
  fixes implem :: "chan => msg"
  assumes "valid_implem implem"
### theory "Draft.Implem"
### 0.236s elapsed time, 0.277s cpu time, 0.056s GC time
Loading theory "Draft.Implem_asymmetric" (required by "Draft.Implem_asymmetricTemplates")
Found termination order: "{}"
### theory "Draft.Implem_asymmetric"
### 0.434s elapsed time, 0.989s cpu time, 0.770s GC time
Loading theory "Draft.Implem_asymmetricTemplates"
val templateLemmas =
   [("Implem_asymmetric.analz_Un_implAuthSet",
     "Enc_keys_clean (?G Un ?H) ==>
      analz ({asym.implAuth A B M |A B M. M : ?G} Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 14, template_app (template_hole 11, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 2,
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 14, template_var 1),
                   template_var 0)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_implInsecSet",
     "Enc_keys_clean (?G Un ?H) ==>
      analz ({asym.implInsec A B M |A B M. M : ?G} Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 14, template_app (template_hole 11, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 2,
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 14, template_var 1),
                   template_var 0)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.implConfid_synth_analz",
     "[| ?H <= payload Un asym.valid Un range LtK Un Tags;
         asym.implConfid ?A ?B ?M : synth (analz ?H) |]
      ==> asym.implConfid ?A ?B ?M : ?H | ?M : synth (analz ?H)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_app (template_hole 13, template_hole 12))),
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_hole 9))),
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_hole 6))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_hole 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3))))
           ))),
    ("Implem_asymmetric.implInsec_synth_analz",
     "[| ?H <= payload Un asym.valid Un range LtK Un Tags;
         asym.implInsec ?A ?B ?M : synth (analz ?H) |]
      ==> asym.implInsec ?A ?B ?M : ?I | ?M : synth (analz ?H)",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_app (template_hole 13, template_hole 12))),
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_hole 9))),
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_hole 6))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_hole 3),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_var 3),
                         template_var 2),
                       template_var 1))),
                 template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 4))))
           ))),
    ("Implem_asymmetric.analz_Un_implConfidSet",
     "Enc_keys_clean (?G Un ?H) ==>
      analz ({asym.implConfid A B M |A B M. (A, B) : ?Ag & M : ?G} Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 16, template_app (template_hole 13, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_hole 2,
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 16, template_var 2),
                   template_var 1)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_implSecureSet",
     "Enc_keys_clean (?G Un ?H) ==>
      analz ({asym.implSecure A B M |A B M. (A, B) : ?Ag & M : ?G} Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 16, template_app (template_hole 13, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_hole 2,
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 16, template_var 2),
                   template_var 1)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.implAuth_synth_analz",
     "[| ?H <= payload Un asym.valid Un range LtK Un Tags;
         asym.implAuth ?A ?B ?M : synth (analz ?H) |]
      ==> asym.implAuth ?A ?B ?M : ?H |
          ?M : synth (analz ?H) & (?A, ?B) : broken ?H",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 19, template_hole 18),
                    template_app (template_hole 17, template_hole 16))),
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_hole 13))),
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_hole 10))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 16,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 3)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Implem_asymmetric.implSecure_synth_analz",
     "[| ?H <= payload Un asym.valid Un range LtK Un Tags;
         asym.implSecure ?A ?B ?M : synth (analz ?H) |]
      ==> asym.implSecure ?A ?B ?M : ?H |
          ?M : synth (analz ?H) & (?A, ?B) : broken ?H",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 19, template_hole 18),
                    template_app (template_hole 17, template_hole 16))),
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_hole 13))),
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_hole 10))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 16,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 3)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_app (template_hole 0, template_var 3))))
           ))),
    ("Implem_asymmetric.analz_Un_implConfidSet_2",
     "[| Enc_keys_clean ?H; ?Ag Int broken (parts ?H Int range LtK) = {} |]
      ==> analz
           ({asym.implConfid A B M |A B M. (A, B) : ?Ag & M : ?G} Un ?H)
          <= synth (analz ?H) Un - payload",
     template_implication
      ([template_predicate
         (template_app (template_hole 26, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 24, template_var 1),
            template_app
             (template_hole 23,
              template_app
               (template_app
                 (template_hole 22,
                  template_app (template_hole 21, template_var 2)),
                template_app
                 (template_app (template_hole 20, template_hole 19),
                  template_hole 18)))),
          template_hole 17)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 14, template_app (template_hole 13, t_empty)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 2,
               template_app (template_hole 15, template_var 2))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_PairAgentSet",
     "analz (PairSet AgentSet ?G Un ?H)
      <= PairSet AgentSet ?G Un AgentSet Un analz (?G Un ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9, template_app (template_hole 8, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))),
         template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0))))),
    ("Implem_asymmetric.analz_Un_implSecureSet_2",
     "[| Enc_keys_clean (?G Un ?H);
         ?Ag Int broken (parts ?H Int range LtK) = {} |]
      ==> analz
           ({asym.implSecure A B M |A B M. (A, B) : ?Ag & M : ?G} Un ?H)
          <= synth (analz ?H) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 26,
              template_app
               (template_app (template_hole 25, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 23, template_var 0),
            template_app
             (template_hole 22,
              template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, template_var 1)),
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_hole 17)))),
          template_hole 16)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 25, template_app (template_hole 13, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 25,
             template_app
              (template_hole 2,
               template_app (template_hole 14, template_var 1))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_implAuthSet_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implAuthSet_aux ?G Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 17, template_app (template_hole 14, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_hole 2,
               template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 17, template_var 1),
                   template_var 0)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_implConfidSet_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implConfidSet_aux ?Ag ?G Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 19,
              template_app
               (template_app (template_hole 18, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 18, template_app (template_hole 15, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_hole 2,
               template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 18, template_var 2),
                   template_var 1)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.implAuthSet_implAuthSet_aux",
     "{asym.implAuth A B M |A B M. M : ?G} <= implAuthSet_aux ?G",
     template_inequation
      (less_equals, template_app (template_hole 15, t_empty),
       template_app (template_hole 15, t_empty))),
    ("Implem_asymmetric.implConfidSet_implConfidSet_aux",
     "{asym.implConfid A B M |A B M. (A, B) : ?Ag & M : ?G}
      <= implConfidSet_aux ?Ag ?G",
     template_inequation
      (less_equals, template_app (template_hole 18, t_empty),
       template_app (template_hole 18, t_empty))),
    ("Implem_asymmetric.analz_Un_implConfidSet_aux_2",
     "[| Enc_keys_clean ?H; ?Ag Int broken (parts ?H Int range LtK) = {} |]
      ==> analz (implConfidSet_aux ?Ag ?G Un ?H)
          <= synth (analz ?H) Un - payload",
     template_implication
      ([template_predicate
         (template_app (template_hole 27, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 25, template_var 1),
            template_app
             (template_hole 24,
              template_app
               (template_app
                 (template_hole 23,
                  template_app (template_hole 22, template_var 2)),
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_hole 19)))),
          template_hole 18)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 14, t_empty)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 2,
               template_app (template_hole 16, template_var 2))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_implInsecSet_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implInsecSet_aux ?G Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 17, template_app (template_hole 14, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_hole 2,
               template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 17, template_var 1),
                   template_var 0)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.implInsecSet_implInsecSet_aux",
     "{asym.implInsec A B M |A B M. M : ?G} <= implInsecSet_aux ?G",
     template_inequation
      (less_equals, template_app (template_hole 15, t_empty),
       template_app (template_hole 15, t_empty))),
    ("Implem_asymmetric.analz_Un_implAuthSet_aux_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implAuthSet_aux ?G Un ?H)
      <= implAuthSet_aux ?G Un synth (analz (?G Un ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 12, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 15, template_app (template_hole 12, t_empty)),
           template_app
            (template_hole 0,
             template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 15, template_var 1),
                 template_var 0))))))),
    ("Implem_asymmetric.analz_Un_implSecureSet_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implSecureSet_aux ?Ag ?G Un ?H)
      <= synth (analz (?G Un ?H)) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 24,
              template_app
               (template_app (template_hole 23, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 21,
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 20, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_hole 2,
               template_app
                (template_hole 21,
                 template_app
                  (template_app (template_hole 23, template_var 2),
                   template_var 1)))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.implSecureSet_implSecureSet_aux",
     "{asym.implSecure A B M |A B M. (A, B) : ?Ag & M : ?G}
      <= implSecureSet_aux ?Ag ?G",
     template_inequation
      (less_equals, template_app (template_hole 23, t_empty),
       template_app (template_hole 23, t_empty))),
    ("Implem_asymmetric.analz_Un_implConfidSet_aux_aux_2",
     "[| Enc_keys_clean ?H; ?Ag Int broken (parts ?H Int range LtK) = {} |]
      ==> analz (implConfidSet_aux ?Ag ?G Un ?H)
          <= implConfidSet_aux ?Ag ?G Un synth (analz ?H)",
     template_implication
      ([template_predicate
         (template_app (template_hole 25, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 23, template_var 1),
            template_app
             (template_hole 22,
              template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, template_var 2)),
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_hole 17)))),
          template_hole 16)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13, template_app (template_hole 12, t_empty)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 13, template_app (template_hole 12, t_empty)),
           template_app
            (template_hole 0,
             template_app (template_hole 14, template_var 2)))))),
    ("Implem_asymmetric.analz_Un_implSecureSet_aux_2",
     "[| Enc_keys_clean (?G Un ?H);
         ?Ag Int broken (parts ?H Int range LtK) = {} |]
      ==> analz (implSecureSet_aux ?Ag ?G Un ?H)
          <= synth (analz ?H) Un - payload",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 32,
              template_app
               (template_app (template_hole 31, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 29, template_var 0),
            template_app
             (template_hole 28,
              template_app
               (template_app
                 (template_hole 27,
                  template_app (template_hole 26, template_var 1)),
                template_app
                 (template_app (template_hole 25, template_hole 24),
                  template_hole 23)))),
          template_hole 22)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 20,
           template_app
            (template_app
              (template_hole 31, template_app (template_hole 19, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 31,
             template_app
              (template_hole 2,
               template_app (template_hole 20, template_var 1))),
           template_app (template_hole 1, template_hole 0))))),
    ("Implem_asymmetric.analz_Un_implConfidSet_aux_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implConfidSet_aux ?Ag ?G Un ?H)
      <= implConfidSet_aux ?Ag ?G Un PairSet AgentSet ?G Un
         synth (analz (?G Un ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 16, template_app (template_hole 13, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 16,
                 template_app (template_hole 13, t_empty)),
               template_app (template_hole 13, t_empty))),
           template_app
            (template_hole 0,
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 16, template_var 2),
                 template_var 1))))))),
    ("Implem_asymmetric.analz_Un_implInsecSet_aux_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implInsecSet_aux ?G Un ?H)
      <= implInsecSet_aux ?G Un Tags Un synth (analz (?G Un ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 12, t_empty)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 15,
                 template_app (template_hole 12, t_empty)),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4))),
           template_app
            (template_hole 0,
             template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 15, template_var 1),
                 template_var 0))))))),
    ("Implem_asymmetric.analz_Un_implSecureSet_aux_aux_2",
     "[| Enc_keys_clean (?G Un ?H);
         ?Ag Int broken (parts ?H Int range LtK) = {} |]
      ==> analz (implSecureSet_aux ?Ag ?G Un ?H)
          <= implSecureSet_aux ?Ag ?G Un
             AencSet (PairSet Tags (PairSet AgentSet ?G))
              (pubK ` ?Ag `` UNIV) Un
             synth (analz ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 30,
              template_app
               (template_app (template_hole 29, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 0),
            template_app
             (template_hole 26,
              template_app
               (template_app
                 (template_hole 25,
                  template_app (template_hole 24, template_var 1)),
                template_app
                 (template_app (template_hole 23, template_hole 22),
                  template_hole 21)))),
          template_hole 20)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 18,
           template_app
            (template_app
              (template_hole 29, template_app (template_hole 17, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 29,
             template_app
              (template_app
                (template_hole 29,
                 template_app (template_hole 17, t_empty)),
               template_app (template_hole 17, t_empty))),
           template_app
            (template_hole 0,
             template_app (template_hole 18, template_var 1)))))),
    ("Implem_asymmetric.analz_Un_implSecureSet_aux_aux",
     "Enc_keys_clean (?G Un ?H) ==>
      analz (implSecureSet_aux ?Ag ?G Un ?H)
      <= implSecureSet_aux ?Ag ?G Un
         AencSet (PairSet Tags (PairSet AgentSet ?G))
          (pubK ` ?Ag `` UNIV) Un
         PairSet Tags (PairSet AgentSet ?G) Un
         Tags Un
         PairSet AgentSet ?G Un
         synth (analz (?G Un ?H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 22,
              template_app
               (template_app (template_hole 21, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 19,
           template_app
            (template_app
              (template_hole 21, template_app (template_hole 18, t_empty)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_hole 21,
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app (template_hole 18, t_empty)),
                           template_app (template_hole 18, t_empty))),
                       template_app (template_hole 18, t_empty))),
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_hole 8))),
               template_app (template_hole 18, t_empty))),
           template_app
            (template_hole 0,
             template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 21, template_var 2),
                 template_var 1)))))))]:
   (string * thm * template) list
### theory "Draft.Implem_asymmetricTemplates"
### 0.465s elapsed time, 0.627s cpu time, 0.034s GC time
val it = (): unit
