Loading theory "Draft.Messages" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Runs")
Loading theory "Draft.Infra" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.065s elapsed time, 0.277s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.125s elapsed time, 0.530s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.340s elapsed time, 1.357s cpu time, 0.090s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.214s elapsed time, 0.836s cpu time, 0.090s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Proofs for inductive predicate(s) "seq_liftp"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Draft.Refinement"
### 1.175s elapsed time, 4.438s cpu time, 0.912s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.080s elapsed time, 4.066s cpu time, 0.887s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.796s elapsed time, 2.588s cpu time, 0.285s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.055s elapsed time, 6.737s cpu time, 1.237s GC time
Loading theory "Draft.Templates" (required by "Draft.pfslvl3Templates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.109s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.pfslvl3Templates")
Found termination order: "{}"
Proofs for inductive predicate(s) "eq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.539s elapsed time, 1.138s cpu time, 0.108s GC time
### theory "Draft.Messages"
### 3.076s elapsed time, 9.481s cpu time, 1.489s GC time
Loading theory "Draft.AuthenticationN" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.AuthenticationI")
Loading theory "Draft.Message_derivation" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy" via "Draft.IK")
Loading theory "Draft.Runs" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1")
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
[| ?x : analz ?H; !!X. X : ?H ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P Y;
   !!X Y.
      [| Enc X Y : analz ?H; ?P (Enc X Y);
         Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (pubK Y) : analz ?H; ?P (Aenc X (pubK Y));
         priK Y : analz ?H; ?P (priK Y) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (epubK Y) : analz ?H; ?P (Aenc X (epubK Y));
         epriK Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Sign X (priK Y) : analz ?H; ?P (Sign X (priK Y));
         pubK Y : analz ?H; ?P (pubK Y) |]
      ==> ?P X |]
==> ?P ?x
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
Found termination order: "{}"
### theory "Draft.Message_derivation"
### 0.690s elapsed time, 2.106s cpu time, 0.191s GC time
Loading theory "Draft.IK" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy")
Loading theory "Draft.Channels" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2")
### theory "Draft.AuthenticationN"
### 0.698s elapsed time, 2.127s cpu time, 0.191s GC time
Loading theory "Draft.AuthenticationI" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.AuthenticationI"
### 0.099s elapsed time, 0.387s cpu time, 0.055s GC time
Loading theory "Draft.Payloads" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1")
### theory "Draft.Runs"
### 0.803s elapsed time, 2.543s cpu time, 0.245s GC time
### theory "Draft.IK"
### 0.142s elapsed time, 0.525s cpu time, 0.055s GC time
Loading theory "Draft.Secrecy" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2" via "Draft.pfslvl1")
Proofs for inductive predicate(s) "cpayloadp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
### theory "Draft.Channels"
### 0.538s elapsed time, 1.727s cpu time, 0.202s GC time
### theory "Draft.Secrecy"
### 0.401s elapsed time, 1.216s cpu time, 0.148s GC time
### theory "Draft.Payloads"
### 0.463s elapsed time, 1.344s cpu time, 0.148s GC time
Loading theory "Draft.Implem" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.Implem_lemmas")
Loading theory "Draft.pfslvl1" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3" via "Draft.pfslvl2")
locale basic_implem
  fixes implem :: "chan => msg"
locale semivalid_implem
  fixes implem :: "chan => msg"
  assumes "semivalid_implem implem"
locale valid_implem
  fixes implem :: "chan => msg"
  assumes "valid_implem implem"
### theory "Draft.Implem"
### 0.261s elapsed time, 0.547s cpu time, 0.064s GC time
Loading theory "Draft.Implem_lemmas" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3")
locale semivalid_implem
  fixes implem :: "chan => msg"
  assumes "semivalid_implem implem"
### theory "Draft.Implem_lemmas"
### 0.151s elapsed time, 0.315s cpu time, 0.031s GC time
Found termination order: "{}"
specification
  guessed_frame_dom_spec: dom (guessed_frame ?R) = domain (role (guessed_runs ?R))
  guessed_frame_payload_spec: guessed_frame ?R ?x = Some ?y ==> ?y : payload
  guessed_frame_Init_xpkE: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xpkE = Some (epubKF (?R $ kE))
  guessed_frame_Init_xskE: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xskE = Some (epriKF (?R $ kE))
  guessed_frame_Resp_xsk: role (guessed_runs ?R) = Resp ==>
guessed_frame ?R xsk = Some (NonceF (?R $ sk))
### theory "Draft.pfslvl1"
### 0.734s elapsed time, 1.225s cpu time, 0.137s GC time
Loading theory "Draft.pfslvl2" (required by "Draft.pfslvl3Templates" via "Draft.pfslvl3")
### Ignoring duplicate rewrite rule:
### ?a1 : dom ?m1 == ?m1 ?a1 ~= None
specification
  bad_init_spec: test_owner ~: bad_init & test_partner ~: bad_init
Found termination order: "{}"
### theory "Draft.pfslvl2"
### 0.582s elapsed time, 0.616s cpu time, 0.046s GC time
Loading theory "Draft.pfslvl3" (required by "Draft.pfslvl3Templates")
locale pfslvl3
  fixes implem :: "chan => msg"
  assumes "pfslvl3 implem"
### Rewrite rule not in simpset:
### ?a1 : dom ?m1 == ?m1 ?a1 ~= None
### theory "Draft.pfslvl3"
### 0.938s elapsed time, 1.767s cpu time, 1.150s GC time
Loading theory "Draft.pfslvl3Templates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.pfslvl3Templates"
### 0.535s elapsed time, 0.685s cpu time, 0.045s GC time
val it = (): unit
