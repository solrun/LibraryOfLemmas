   [("pfslvl1.l1_learn_refines_a0_ia_skip",
     "{R01ia} Id, l1_learn ?m {> R01ia}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl1.l1_learn_refines_learn",
     "{R01s} s0_learn ?m, l1_learn ?m {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl1.guessed_frame_dom_spec",
     "dom (guessed_frame ?R) = domain (role (guessed_runs ?R))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("pfslvl1.l1_step1_refines_skip",
     "{R01s} Id, l1_step1 ?Ra ?A ?B {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("pfslvl1.l1_step1_refines_a0i_skip",
     "{R01ia} Id, l1_step1 ?Ra ?A ?B {> R01ia}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("pfslvl1.guessed_frame_payload_spec",
     "guessed_frame ?R ?x = Some ?y ==> ?y : payload",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl1.l1_step3_refines_add_secret_skip",
     "{R01s} (s0_add_secret ?K)^=, l1_step3 ?Ra ?A ?B ?K {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 3)),
           template_hole 4)
         )),
    ("pfslvl1.run_ended_not_None",
     "[| run_ended ?R; ?R = None |] ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))))
            ),
        template_equation (template_var 0, template_hole 1)],
       template_predicate (template_hole 0))),
    ("pfslvl1.l1_step2_refines_add_secret_skip",
     "{R01s} (s0_add_secret
               (NonceF (?Rb $ sk)))^=, l1_step2 ?Rb ?A ?B ?KE {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 3),
                           template_hole 2))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("pfslvl1.can_signal_trans",
     "[| can_signal ?s' ?A ?B; (?s, ?s') : TS.trans l1 |]
      ==> can_signal ?s ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 3)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("pfslvl1.guessed_frame_Init_xpkE",
     "role (guessed_runs ?R) = Init ==>
      guessed_frame ?R xpkE = Some (epubKF (?R $ kE))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 0)),
          template_hole 10)],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app (template_hole 7, template_hole 6)),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)))))))),
    ("pfslvl1.l1_step2_refines_a0i_running_skip",
     "{R01ia} (a0i_running ?A ?B
                \<langle>?KE,
                  NonceF
                   (?Rb $
                    sk)\<rangle>)^=, l1_step2 ?Rb ?A ?B ?KE {> R01ia}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_var 3),
                       template_var 2),
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_app (template_hole 3, template_var 0),
                             template_hole 2)))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 9)
         )),
    ("pfslvl1.guessed_frame_Resp_xsk",
     "role (guessed_runs ?R) = Resp ==>
      guessed_frame ?R xsk = Some (NonceF (?R $ sk))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 0)),
          template_hole 11)],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 0),
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))))))),
    ("pfslvl1.guessed_frame_Init_xskE",
     "role (guessed_runs ?R) = Init ==>
      guessed_frame ?R xskE = Some (epriKF (?R $ kE))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 14,
            template_app (template_hole 13, template_var 0)),
          template_hole 12)],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 0),
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6)))),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)))))))),
    ("pfslvl1.l1_iagreementI",
     "(!!A B N.
          l1_state.signals ?x (Commit A B N)
          <= l1_state.signals ?x (Running A B N)) ==>
      ?x : l1_iagreement",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl1.l1_step3_refines_a0i_commit_skip",
     "{R01ia Int
       UNIV \<times>
       l1_inv3} (a0i_commit ?A ?B
                  \<langle>epubKF (?Ra $ kE),
                    ?K\<rangle>)^=, l1_step3 ?Ra ?A ?B ?K {> R01ia}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 14, template_hole 13),
                   template_app
                    (template_app (template_hole 12, template_hole 11),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 3),
                       template_var 2),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_app
                                  (template_hole 3, template_var 1),
                                 template_hole 2))))),
                       template_var 0))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2),
               template_var 0)),
           template_hole 13)
         )),
    ("pfslvl1.run_ended_trans",
     "[| run_ended (progress ?s ?R); (?s, ?s') : TS.trans l1 |]
      ==> run_ended (progress ?s' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))))
           ))),
    ("pfslvl1.l1_iagreementE",
     "[| ?x : l1_iagreement;
         (!!A B N.
             l1_state.signals ?x (Commit A B N)
             <= l1_state.signals ?x (Running A B N)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl1.l1_inv1D",
     "[| 0 < l1_state.signals ?x
              (Commit ?A ?B \<langle>epubKF (?Ra $ kE), ?K\<rangle>);
         ?x : l1_inv1 |]
      ==> guessed_runs ?Ra = (| role = Init, owner = ?A, partner = ?B |) &
          progress ?x ?Ra = Some {xpkE, xskE, xsk} &
          guessed_frame ?Ra xsk = Some ?K",
     template_implication
      ([template_inequation
         (less_than, template_hole 29,
          template_app
           (template_app (template_hole 28, template_var 4),
            template_app
             (template_app
               (template_app (template_hole 27, template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_hole 25,
                    template_app
                     (template_hole 24,
                      template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_var 1),
                          template_hole 21))))),
                template_var 0)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_hole 19)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 17,
                   template_app (template_hole 16, template_var 1)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 15, template_hole 14),
                       template_var 3),
                     template_var 2),
                   template_hole 13))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 4),
                       template_var 1)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 29)),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6, template_hole 5)))),
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 4, template_hole 5)))),
                           template_hole 3)))))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 4, template_hole 5))))),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("pfslvl1.l1_inv2D",
     "[| guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |);
         progress ?x ?Rb = Some {xpkE, xsk};
         guessed_frame ?Rb xpkE = Some ?KE; can_signal ?x ?A ?B;
         ?x : l1_inv2 |]
      ==> 0 < l1_state.signals ?x
               (Running ?A ?B \<langle>?KE, NonceF (?Rb $ sk)\<rangle>)",
     template_implication
      ([template_equation
         (template_app (template_hole 27, template_var 4),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 26, template_hole 25),
                template_var 3),
              template_var 2),
            template_hole 24)),
        template_equation
         (template_app
           (template_app (template_hole 22, template_var 1),
            template_var 4),
          template_app
           (template_hole 21,
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 19, template_hole 18)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_hole 19,
                    template_app
                     (template_hole 17,
                      template_app (template_hole 16, template_hole 15)))),
                template_hole 14)))),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 4),
            template_app (template_hole 19, template_hole 18)),
          template_app (template_hole 11, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            )],
       template_inequation
        (less_than, template_hole 18,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_hole 0))))))))),
    ("pfslvl1.l1_inv2I",
     "(!!KE A B Rb.
          [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
             progress ?x Rb = Some {xpkE, xsk};
             guessed_frame Rb xpkE = Some KE; can_signal ?x A B |]
          ==> 0 < l1_state.signals ?x
                   (Running A B \<langle>KE, NonceF (Rb $ sk)\<rangle>)) ==>
      ?x : l1_inv2",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl1.l1_inv1I",
     "(!!Ra A B K.
          0 < l1_state.signals ?x
               (Commit A B \<langle>epubKF (Ra $ kE), K\<rangle>) ==>
          guessed_runs Ra = (| role = Init, owner = A, partner = B |) &
          progress ?x Ra = Some {xpkE, xskE, xsk} &
          guessed_frame Ra xsk = Some K) ==>
      ?x : l1_inv1",
     template_implication
      ([template_predicate (template_app (template_hole 34, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl1.l1_inv1E",
     "[| ?x : l1_inv1;
         (!!Ra A B K.
             0 < l1_state.signals ?x
                  (Commit A B \<langle>epubKF (Ra $ kE), K\<rangle>) ==>
             guessed_runs Ra = (| role = Init, owner = A, partner = B |) &
             progress ?x Ra = Some {xpkE, xskE, xsk} &
             guessed_frame Ra xsk = Some K) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 33, template_var 1),
              template_hole 32)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 31, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl1.l1_inv2E",
     "[| ?x : l1_inv2;
         (!!KE A B Rb.
             [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
                progress ?x Rb = Some {xpkE, xsk};
                guessed_frame Rb xpkE = Some KE; can_signal ?x A B |]
             ==> 0 < l1_state.signals ?x
                      (Running A B
                        \<langle>KE, NonceF (Rb $ sk)\<rangle>)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 1),
              template_hole 30)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 29, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl1.l1_inv3D",
     "[| guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |);
         progress ?x ?Rb = Some {xpkE, xsk};
         guessed_frame ?Rb xpkE = Some (epubKF (?Ra $ kE));
         guessed_runs ?Ra = (| role = Init, owner = ?A, partner = ?B |);
         progress ?x ?Ra = Some {xpkE, xskE}; can_signal ?x ?A ?B;
         ?x : l1_inv3 |]
      ==> l1_state.signals ?x
           (Commit ?A ?B
             \<langle>epubKF (?Ra $ kE), NonceF (?Rb $ sk)\<rangle>)
          < l1_state.signals ?x
             (Running ?A ?B
               \<langle>epubKF (?Ra $ kE), NonceF (?Rb $ sk)\<rangle>)",
     template_implication
      ([template_equation
         (template_app (template_hole 33, template_var 4),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 32, template_hole 31),
                template_var 3),
              template_var 2),
            template_hole 30)),
        template_equation
         (template_app
           (template_app (template_hole 28, template_var 1),
            template_var 4),
          template_app
           (template_hole 27,
            template_app
             (template_app
               (template_hole 26,
                template_app (template_hole 25, template_hole 24)),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_hole 25,
                    template_app
                     (template_hole 23,
                      template_app (template_hole 22, template_hole 21)))),
                template_hole 20)))),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 4),
            template_app (template_hole 25, template_hole 24)),
          template_app
           (template_hole 17,
            template_app
             (template_hole 16,
              template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 0),
                    template_hole 12)))))),
        template_equation
         (template_app (template_hole 33, template_var 0),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 32, template_hole 11),
                template_var 2),
              template_var 3),
            template_hole 30)),
        template_equation
         (template_app
           (template_app (template_hole 28, template_var 1),
            template_var 0),
          template_app
           (template_hole 27,
            template_app
             (template_app
               (template_hole 26,
                template_app (template_hole 25, template_hole 24)),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_hole 25,
                    template_app
                     (template_hole 23,
                      template_app (template_hole 10, template_hole 21)))),
                template_hole 20)))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 1),
                template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_var 0),
                         template_hole 12))))),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_var 4),
                     template_hole 1)))))),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_var 0),
                         template_hole 12))))),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_var 4),
                     template_hole 1))))))))),
    ("pfslvl1.l1_inv3I",
     "(!!A B Rb Ra.
          [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
             progress ?x Rb = Some {xpkE, xsk};
             guessed_frame Rb xpkE = Some (epubKF (Ra $ kE));
             guessed_runs Ra = (| role = Init, owner = A, partner = B |);
             progress ?x Ra = Some {xpkE, xskE}; can_signal ?x A B |]
          ==> l1_state.signals ?x
               (Commit A B
                 \<langle>epubKF (Ra $ kE), NonceF (Rb $ sk)\<rangle>)
              < l1_state.signals ?x
                 (Running A B
                   \<langle>epubKF (Ra $ kE),
                     NonceF (Rb $ sk)\<rangle>)) ==>
      ?x : l1_inv3",
     template_implication
      ([template_predicate (template_app (template_hole 37, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl1.l1_inv3E",
     "[| ?x : l1_inv3;
         (!!A B Rb Ra.
             [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
                progress ?x Rb = Some {xpkE, xsk};
                guessed_frame Rb xpkE = Some (epubKF (Ra $ kE));
                guessed_runs Ra = (| role = Init, owner = A, partner = B |);
                progress ?x Ra = Some {xpkE, xskE}; can_signal ?x A B |]
             ==> l1_state.signals ?x
                  (Commit A B
                    \<langle>epubKF (Ra $ kE), NonceF (Rb $ sk)\<rangle>)
                 < l1_state.signals ?x
                    (Running A B
                      \<langle>epubKF (Ra $ kE),
                        NonceF (Rb $ sk)\<rangle>)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 1),
              template_hole 35)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 34, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]
