Loading theory "Draft.Messages" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Runs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "Draft.Infra" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy" via "Draft.Refinement")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Infra"
### 0.048s elapsed time, 0.220s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.103s elapsed time, 0.444s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.306s elapsed time, 1.237s cpu time, 0.078s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.209s elapsed time, 0.813s cpu time, 0.078s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "seq_liftp"
consts
  right :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Refinement"
### 1.162s elapsed time, 4.426s cpu time, 0.806s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.074s elapsed time, 4.077s cpu time, 0.798s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.826s elapsed time, 2.665s cpu time, 0.280s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.323s elapsed time, 7.553s cpu time, 1.775s GC time
Loading theory "Draft.Templates" (required by "Draft.pfslvl2Templates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.087s elapsed time, 0.205s cpu time, 0.078s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.pfslvl2Templates")
Found termination order: "{}"
Proofs for inductive predicate(s) "eq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.548s elapsed time, 1.171s cpu time, 0.142s GC time
### theory "Draft.Messages"
### 3.318s elapsed time, 10.244s cpu time, 2.074s GC time
Loading theory "Draft.Message_derivation" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy" via "Draft.IK")
Loading theory "Draft.AuthenticationN" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.AuthenticationI")
Loading theory "Draft.Runs" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1")
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
[| ?x : analz ?H; !!X. X : ?H ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P Y;
   !!X Y.
      [| Enc X Y : analz ?H; ?P (Enc X Y);
         Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (pubK Y) : analz ?H; ?P (Aenc X (pubK Y));
         priK Y : analz ?H; ?P (priK Y) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (epubK Y) : analz ?H; ?P (Aenc X (epubK Y));
         epriK Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Sign X (priK Y) : analz ?H; ?P (Sign X (priK Y));
         pubK Y : analz ?H; ?P (pubK Y) |]
      ==> ?P X |]
==> ?P ?x
Found termination order: "{}"
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.AuthenticationN"
### 1.008s elapsed time, 3.140s cpu time, 1.127s GC time
Loading theory "Draft.AuthenticationI" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1")
Found termination order: "{}"
### theory "Draft.Message_derivation"
### 1.040s elapsed time, 3.232s cpu time, 1.127s GC time
Loading theory "Draft.Channels" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2")
Loading theory "Draft.IK" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1" via "Draft.Secrecy")
Found termination order: "{}"
### theory "Draft.Runs"
### 1.086s elapsed time, 3.408s cpu time, 1.127s GC time
Loading theory "Draft.Payloads" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1")
### theory "Draft.AuthenticationI"
### 0.103s elapsed time, 0.373s cpu time, 0.000s GC time
Proofs for inductive predicate(s) "cpayloadp"
  Proving monotonicity ...
### theory "Draft.IK"
### 0.140s elapsed time, 0.492s cpu time, 0.000s GC time
Loading theory "Draft.Secrecy" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2" via "Draft.pfslvl1")
Proofs for inductive predicate(s) "extrp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fakep"
  Proving monotonicity ...
### theory "Draft.Channels"
### 0.499s elapsed time, 1.589s cpu time, 0.156s GC time
### theory "Draft.Payloads"
### 0.460s elapsed time, 1.437s cpu time, 0.156s GC time
### theory "Draft.Secrecy"
### 0.400s elapsed time, 1.159s cpu time, 0.156s GC time
Loading theory "Draft.pfslvl1" (required by "Draft.pfslvl2Templates" via "Draft.pfslvl2")
Found termination order: "{}"
specification
  guessed_frame_dom_spec: dom (guessed_frame ?R) = domain (role (guessed_runs ?R))
  guessed_frame_payload_spec: guessed_frame ?R ?x = Some ?y ==> ?y : payload
  guessed_frame_Init_xpkE: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xpkE = Some (epubKF (?R $ kE))
  guessed_frame_Init_xskE: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xskE = Some (epriKF (?R $ kE))
  guessed_frame_Resp_xsk: role (guessed_runs ?R) = Resp ==>
guessed_frame ?R xsk = Some (NonceF (?R $ sk))
### theory "Draft.pfslvl1"
### 0.690s elapsed time, 0.756s cpu time, 0.089s GC time
Loading theory "Draft.pfslvl2" (required by "Draft.pfslvl2Templates")
### Ignoring duplicate rewrite rule:
### ?a1 : dom ?m1 == ?m1 ?a1 ~= None
specification
  bad_init_spec: test_owner ~: bad_init & test_partner ~: bad_init
Found termination order: "{}"
### theory "Draft.pfslvl2"
### 0.601s elapsed time, 0.666s cpu time, 0.088s GC time
Loading theory "Draft.pfslvl2Templates"
val templateLemmas =
   [("pfslvl2.role_comp_inv", "role_comp (role_comp ?x) = ?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("pfslvl2.l2_inv7_dy_fake_chan",
     "{l2_inv7} l2_dy_fake_chan ?M {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 1)
         )),
    ("pfslvl2.l2_inv7_dy_fake_msg",
     "{l2_inv7} l2_dy_fake_msg ?M {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 1)
         )),
    ("pfslvl2.l2_dy_fake_chan_refines_skip",
     "{R12s} Id, l2_dy_fake_chan ?M {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.l2_lkr_after_refines_skip",
     "{R12s} Id, l2_lkr_after ?A {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.l2_lkr_others_refines_skip",
     "{R12s} Id, l2_lkr_others ?A {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.l2_inv7_step1", "{l2_inv7} l2_step1 ?Ra ?A ?B {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("pfslvl2.l2_inv7_lkr_after",
     "{l2_inv7 Int l2_inv5} l2_lkr_after ?A {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.l2_inv7_lkr_others",
     "{l2_inv7 Int l2_inv5} l2_lkr_others ?A {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.l2_inv7_step3", "{l2_inv7} l2_step3 ?Rb ?A ?B ?K {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("pfslvl2.l2_inv7_skr",
     "{l2_inv7 Int l2_inv6} l2_skr ?R ?K {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.matching_symmetric",
     "matching ?sigma ?sigma' ==> matching ?sigma' ?sigma",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("pfslvl2.partner_symmetric",
     "partner_runs ?R ?R' ==> partner_runs ?R' ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("pfslvl2.role_comp_inv_eq",
     "(?y = role_comp ?x) = (?x = role_comp ?y)",
     template_bimplication
      (template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("pfslvl2.l2_step1_refines_step1",
     "{R12s} l1_step1 ?Ra ?A ?B, l2_step1 ?Ra ?A ?B {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("pfslvl2.partner_test",
     "[| ?R : partners; partner_runs ?R ?R' |] ==> ?R' = test",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("pfslvl2.partner_unique",
     "[| partner_runs ?R ?R''; partner_runs ?R ?R' |] ==> ?R' = ?R''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("pfslvl2.l2_inv7_step2",
     "{l2_inv1 Int l2_inv2 Int l2_inv4 Int
       l2_inv7} l2_step2 ?Rb ?A ?B ?KE {> l2_inv7}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_hole 3)),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 1)
         )),
    ("pfslvl2.can_signal_R12",
     "(?s1.0, ?s2.0) : R12s ==>
      can_signal ?s1.0 ?A ?B = can_signal ?s2.0 ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("pfslvl2.l2_dy_fake_msg_refines_learn",
     "{R12s Int UNIV \<times> l2_inv7 Int
       UNIV \<times> l2_inv8} l1_learn ?m, l2_dy_fake_msg ?m {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         t_empty))),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     t_empty))),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 6)
         )),
    ("pfslvl2.l2_can_signal_trans",
     "[| can_signal ?s' ?A ?B; (?s, ?s') : TS.trans l2 |]
      ==> can_signal ?s ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 3)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("pfslvl2.l2_step2_refines_step2",
     "{R12s Int
       UNIV \<times>
       (l2_inv1 Int l2_inv2 Int
        l2_inv7)} l1_step2 ?Rb ?A ?B ?KE, l2_step2 ?Rb ?A ?B ?KE {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("pfslvl2.l2_step3_refines_step3",
     "{R12s Int
       UNIV \<times>
       (l2_inv1 Int l2_inv3 Int
        l2_inv7)} l1_step3 ?Ra ?A ?B ?K, l2_step3 ?Ra ?A ?B ?K {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     t_empty))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 8)
         )),
    ("pfslvl2.l2_inv1D",
     "[| can_signal ?x ?A ?B; ?x : l2_inv1 |]
      ==> ?A ~: bad ?x & ?B ~: bad ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 2)))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))))
           ))),
    ("pfslvl2.l2_skr_refines_learn",
     "{R12s Int UNIV \<times> l2_inv7 Int UNIV \<times> l2_inv6 Int
       UNIV \<times> l2_inv8} l1_learn ?K, l2_skr ?R ?K {> R12s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             t_empty))),
                       template_app
                        (template_app (template_hole 6, template_hole 5),
                         t_empty))),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     t_empty))),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_hole 7)
         )),
    ("pfslvl2.l2_inv7_aux",
     "[| NonceF (?R $ sk) : analz (ik ?s); ?s : l2_inv7 |]
      ==> ?R ~= test & ?R ~: partners",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 1),
                      template_hole 10)))),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("pfslvl2.l2_inv1I",
     "(!!A B. can_signal ?x A B ==> A ~: bad ?x & B ~: bad ?x) ==>
      ?x : l2_inv1",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_run_ended_trans",
     "[| run_ended (progress ?s ?R); (?s, ?s') : TS.trans l2 |]
      ==> run_ended (progress ?s' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))))
           ))),
    ("pfslvl2.l2_inv8D",
     "?x : l2_inv8 ==>
      secret ?x <= {NonceF (R $ sk) |R. R = test | R : partners}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_hole 15)
            )],
       template_inequation
        (less_equals, template_app (template_hole 13, template_var 0),
         template_app (template_hole 12, t_empty)))),
    ("pfslvl2.l2_inv8I",
     "secret ?x <= {NonceF (R $ sk) |R. R = test | R : partners} ==>
      ?x : l2_inv8",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 15, template_var 0),
          template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_oreach_dy_fake_msg",
     "[| ?s : oreach l2; ?x : dy_fake_msg (bad ?s) (ik ?s) (chan ?s) |]
      ==> ?s(| ik := insert ?x (ik ?s) |) : oreach l2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_hole 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app (template_hole 3, template_var 1)),
                template_app (template_hole 2, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 1, t_empty), template_var 1)),
             template_app (template_hole 8, template_hole 7))
           ))),
    ("pfslvl2.l2_inv1E",
     "[| ?x : l2_inv1;
         (!!A B. can_signal ?x A B ==> A ~: bad ?x & B ~: bad ?x) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_inv8E",
     "[| ?x : l2_inv8;
         secret ?x <= {NonceF (R $ sk) |R. R = test | R : partners} ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 15)
            ),
        template_implication
         ([template_inequation
            (less_equals, template_app (template_hole 13, template_var 1),
             template_app (template_hole 12, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_inv5D",
     "[| Confid ?A ?B ?M : chan ?x | Secure ?A ?B ?M : chan ?x;
         ?x : l2_inv5 |]
      ==> ?M : dy_fake_msg (bad ?x) (ik ?x) (chan ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_var 3),
                        template_var 2),
                      template_var 1)),
                  template_app (template_hole 7, template_var 0))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 9, template_hole 6),
                        template_var 3),
                      template_var 2),
                    template_var 1)),
                template_app (template_hole 7, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 7, template_var 0)))
           ))),
    ("pfslvl2.l2_inv5I",
     "(!!A B M.
          Confid A B M : chan ?x | Secure A B M : chan ?x ==>
          M : dy_fake_msg (bad ?x) (ik ?x) (chan ?x)) ==>
      ?x : l2_inv5",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv5E",
     "[| ?x : l2_inv5;
         (!!A B M.
             Confid A B M : chan ?x | Secure A B M : chan ?x ==>
             M : dy_fake_msg (bad ?x) (ik ?x) (chan ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_hole 12)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 11, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_inv4D",
     "[| test_ended ?x; guessed_frame test xsk = Some (NonceF (?Rb $ sk));
         ?x : l2_inv4 |]
      ==> progress ?x ?Rb = Some {xpkE, xsk}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 1),
                  template_hole 18)),
              template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 14))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 12, template_hole 18),
            template_app
             (template_hole 17,
              template_app
               (template_hole 16,
                template_app (template_hole 15, template_hole 14)))),
          template_app
           (template_hole 11,
            template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_hole 7))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app (template_hole 19, template_var 1), template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 17, template_hole 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 17,
                   template_app
                    (template_hole 16,
                     template_app (template_hole 15, template_hole 14)))),
               template_hole 0)))))),
    ("pfslvl2.l2_inv4I",
     "(!!Rb. [| test_ended ?x;
                guessed_frame test xsk = Some (NonceF (Rb $ sk)) |]
             ==> progress ?x Rb = Some {xpkE, xsk}) ==>
      ?x : l2_inv4",
     template_implication
      ([template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv6D",
     "[| role (guessed_runs ?Ra) = Init; run_ended (progress ?x ?Ra);
         guessed_frame ?Ra xsk = Some ?K; ?x : l2_inv6 |]
      ==> Aenc ?K (epubKF (?Ra $ kE)) : extr (bad ?x) (ik ?x) (chan ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 24,
            template_app (template_hole 23, template_var 2)),
          template_hole 22),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 1),
                  template_var 2)),
              template_app
               (template_hole 19,
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_hole 16))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 14, template_var 2),
            template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app (template_hole 17, template_hole 16)))),
          template_app (template_hole 13, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_hole 11)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_hole 4)))))),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("pfslvl2.l2_inv4E",
     "[| ?x : l2_inv4;
         (!!Rb. [| test_ended ?x;
                   guessed_frame test xsk = Some (NonceF (Rb $ sk)) |]
                ==> progress ?x Rb = Some {xpkE, xsk}) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_hole 20)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 19, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_step3_partners",
     "[| guessed_runs test = (| role = Init, owner = ?A, partner = ?B |);
         guessed_frame test xsk = Some (NonceF (?Rb $ sk));
         guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |);
         guessed_frame ?Rb xpkE = Some (epubKF (test $ kE)) |]
      ==> ?Rb : partners",
     template_implication
      ([template_equation
         (template_app (template_hole 22, template_hole 21),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 20, template_hole 19),
                template_var 2),
              template_var 1),
            template_hole 18)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_hole 21),
            template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12)))),
          template_app
           (template_hole 11,
            template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_hole 7))))),
        template_equation
         (template_app (template_hole 22, template_var 0),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 20, template_hole 6),
                template_var 1),
              template_var 2),
            template_hole 18)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 0),
            template_app (template_hole 15, template_hole 5)),
          template_app
           (template_hole 11,
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 21),
                    template_hole 2))))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv6I",
     "(!!Ra K.
          [| role (guessed_runs Ra) = Init; run_ended (progress ?x Ra);
             guessed_frame Ra xsk = Some K |]
          ==> Aenc K (epubKF (Ra $ kE))
              : extr (bad ?x) (ik ?x) (chan ?x)) ==>
      ?x : l2_inv6",
     template_implication
      ([template_predicate (template_app (template_hole 28, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv6E",
     "[| ?x : l2_inv6;
         (!!Ra K.
             [| role (guessed_runs Ra) = Init; run_ended (progress ?x Ra);
                guessed_frame Ra xsk = Some K |]
             ==> Aenc K (epubKF (Ra $ kE))
                 : extr (bad ?x) (ik ?x) (chan ?x)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 1),
              template_hole 26)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 25, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_inv2D",
     "[| Auth ?A ?B \<langle>Number 0, ?KE\<rangle> : chan ?x;
         ?A ~: bad ?x & ?B ~: bad ?x; ?x : l2_inv2 |]
      ==> EX Ra.
             guessed_runs Ra = (| role = Init, owner = ?A, partner = ?B |) &
             in_progress (progress ?x Ra) xpkE & ?KE = epubKF (Ra $ kE)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 26, template_hole 25),
                      template_var 3),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 24,
                      template_app (template_hole 23, template_hole 22)),
                    template_var 1))),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 3),
                    template_app (template_hole 17, template_var 0)))),
              template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_app (template_hole 17, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_hole 15)
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("pfslvl2.l2_inv2I",
     "(!!A B KE.
          [| Auth A B \<langle>Number 0, KE\<rangle> : chan ?x;
             A ~: bad ?x & B ~: bad ?x |]
          ==> EX Ra.
                 guessed_runs Ra =
                 (| role = Init, owner = A, partner = B |) &
                 in_progress (progress ?x Ra) xpkE &
                 KE = epubKF (Ra $ kE)) ==>
      ?x : l2_inv2",
     template_implication
      ([template_predicate (template_app (template_hole 30, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv2E",
     "[| ?x : l2_inv2;
         (!!A B KE.
             [| Auth A B \<langle>Number 0, KE\<rangle> : chan ?x;
                A ~: bad ?x & B ~: bad ?x |]
             ==> EX Ra.
                    guessed_runs Ra =
                    (| role = Init, owner = A, partner = B |) &
                    in_progress (progress ?x Ra) xpkE &
                    KE = epubKF (Ra $ kE)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 1),
              template_hole 28)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 27, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_inv3D",
     "[| Auth ?B ?A (Aenc ?K (epubKF (?Ra $ kE))) : chan ?x;
         ?A ~: bad ?x & ?B ~: bad ?x; ?x : l2_inv3 |]
      ==> EX Rb.
             guessed_runs Rb = (| role = Resp, owner = ?B, partner = ?A |) &
             progress ?x Rb = Some {xpkE, xsk} &
             guessed_frame Rb xpkE = Some (epubKF (?Ra $ kE)) &
             ?K = NonceF (Rb $ sk)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 37,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 36, template_hole 35),
                      template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 34, template_var 2),
                    template_app
                     (template_hole 33,
                      template_app
                       (template_hole 32,
                        template_app
                         (template_hole 31,
                          template_app
                           (template_app (template_hole 30, template_var 1),
                            template_hole 29))))))),
              template_app (template_hole 28, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_hole 26,
                  template_app
                   (template_app (template_hole 25, template_var 3),
                    template_app (template_hole 24, template_var 0)))),
              template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 4),
                  template_app (template_hole 24, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 0),
              template_hole 22)
            )],
       template_predicate (template_app (template_hole 21, t_empty)))),
    ("pfslvl2.l2_inv3I",
     "(!!Ra A B K.
          [| Auth B A (Aenc K (epubKF (Ra $ kE))) : chan ?x;
             A ~: bad ?x & B ~: bad ?x |]
          ==> EX Rb.
                 guessed_runs Rb =
                 (| role = Resp, owner = B, partner = A |) &
                 progress ?x Rb = Some {xpkE, xsk} &
                 guessed_frame Rb xpkE = Some (epubKF (Ra $ kE)) &
                 K = NonceF (Rb $ sk)) ==>
      ?x : l2_inv3",
     template_implication
      ([template_predicate (template_app (template_hole 41, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv3E",
     "[| ?x : l2_inv3;
         (!!Ra A B K.
             [| Auth B A (Aenc K (epubKF (Ra $ kE))) : chan ?x;
                A ~: bad ?x & B ~: bad ?x |]
             ==> EX Rb.
                    guessed_runs Rb =
                    (| role = Resp, owner = B, partner = A |) &
                    progress ?x Rb = Some {xpkE, xsk} &
                    guessed_frame Rb xpkE = Some (epubKF (Ra $ kE)) &
                    K = NonceF (Rb $ sk)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 40, template_var 1),
              template_hole 39)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 38, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("pfslvl2.l2_inv7D",
     "?x : l2_inv7 ==>
      extr (bad ?x) (ik ?x) (chan ?x) <= synth (analz generators)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 40, template_var 0),
              template_hole 39)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_hole 37,
               template_app (template_hole 36, template_var 0)),
             template_app (template_hole 35, template_var 0)),
           template_app (template_hole 34, template_var 0)),
         template_app
          (template_hole 33,
           template_app
            (template_hole 32,
             template_app
              (template_app
                (template_hole 31,
                 template_app
                  (template_app
                    (template_hole 31,
                     template_app
                      (template_app (template_hole 30, t_empty),
                       template_hole 27)),
                   template_app (template_hole 26, t_empty))),
               template_app (template_hole 26, t_empty))))))),
    ("pfslvl2.l2_inv7I",
     "extr (bad ?x) (ik ?x) (chan ?x) <= synth (analz generators) ==>
      ?x : l2_inv7",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app
               (template_hole 39,
                template_app (template_hole 38, template_var 0)),
              template_app (template_hole 37, template_var 0)),
            template_app (template_hole 36, template_var 0)),
          template_app
           (template_hole 35,
            template_app
             (template_hole 34,
              template_app
               (template_app
                 (template_hole 33,
                  template_app
                   (template_app
                     (template_hole 33,
                      template_app
                       (template_app (template_hole 32, t_empty),
                        template_hole 29)),
                    template_app (template_hole 28, t_empty))),
                template_app (template_hole 28, t_empty)))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("pfslvl2.l2_inv7E",
     "[| ?x : l2_inv7;
         extr (bad ?x) (ik ?x) (chan ?x) <= synth (analz generators) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 40, template_var 1),
              template_hole 39)
            ),
        template_implication
         ([template_inequation
            (less_equals,
             template_app
              (template_app
                (template_app
                  (template_hole 37,
                   template_app (template_hole 36, template_var 1)),
                 template_app (template_hole 35, template_var 1)),
               template_app (template_hole 34, template_var 1)),
             template_app
              (template_hole 33,
               template_app
                (template_hole 32,
                 template_app
                  (template_app
                    (template_hole 31,
                     template_app
                      (template_app
                        (template_hole 31,
                         template_app
                          (template_app (template_hole 30, t_empty),
                           template_hole 27)),
                       template_app (template_hole 26, t_empty))),
                   template_app (template_hole 26, t_empty)))))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.pfslvl2Templates"
### 0.529s elapsed time, 0.729s cpu time, 0.085s GC time
val it = (): unit
