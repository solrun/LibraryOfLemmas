Loading theory "Draft.Infra" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1" via "Draft.Secrecy" via "Draft.Refinement")
Loading theory "Draft.Messages" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1" via "Draft.Runs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.065s elapsed time, 0.277s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1" via "Draft.Secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.118s elapsed time, 0.499s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.211s elapsed time, 0.827s cpu time, 0.082s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.335s elapsed time, 1.342s cpu time, 0.082s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "seq_liftp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.Refinement"
### 1.151s elapsed time, 4.409s cpu time, 0.804s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.004s elapsed time, 3.837s cpu time, 0.723s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.660s elapsed time, 2.139s cpu time, 0.209s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.074s elapsed time, 6.856s cpu time, 1.699s GC time
Loading theory "Draft.Templates" (required by "Draft.dhlvl1Templates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.139s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.dhlvl1Templates")
Found termination order: "{}"
Proofs for inductive predicate(s) "eq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.558s elapsed time, 1.195s cpu time, 0.154s GC time
### theory "Draft.Messages"
### 3.159s elapsed time, 9.716s cpu time, 2.010s GC time
Loading theory "Draft.AuthenticationN" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1" via "Draft.AuthenticationI")
Loading theory "Draft.Message_derivation" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1" via "Draft.Secrecy" via "Draft.IK")
Loading theory "Draft.Runs" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1")
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
[| ?x : analz ?H; !!X. X : ?H ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P Y;
   !!X Y.
      [| Enc X Y : analz ?H; ?P (Enc X Y);
         Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (pubK Y) : analz ?H; ?P (Aenc X (pubK Y));
         priK Y : analz ?H; ?P (priK Y) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (epubK Y) : analz ?H; ?P (Aenc X (epubK Y));
         epriK Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Sign X (priK Y) : analz ?H; ?P (Sign X (priK Y));
         pubK Y : analz ?H; ?P (pubK Y) |]
      ==> ?P X |]
==> ?P ?x
Found termination order: "{}"
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.AuthenticationN"
### 0.683s elapsed time, 2.100s cpu time, 0.207s GC time
Loading theory "Draft.AuthenticationI" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1")
Found termination order: "{}"
### theory "Draft.Message_derivation"
### 0.705s elapsed time, 2.169s cpu time, 0.207s GC time
Loading theory "Draft.IK" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1" via "Draft.Secrecy")
Loading theory "Draft.Payloads" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1")
### theory "Draft.AuthenticationI"
### 0.084s elapsed time, 0.311s cpu time, 0.000s GC time
Proofs for inductive predicate(s) "cpayloadp"
Found termination order: "{}"
  Proving monotonicity ...
### theory "Draft.Runs"
### 1.094s elapsed time, 3.511s cpu time, 1.203s GC time
### theory "Draft.IK"
### 0.431s elapsed time, 1.420s cpu time, 0.997s GC time
Loading theory "Draft.Secrecy" (required by "Draft.dhlvl1Templates" via "Draft.dhlvl1")
### theory "Draft.Payloads"
### 0.785s elapsed time, 2.121s cpu time, 1.033s GC time
### theory "Draft.Secrecy"
### 0.371s elapsed time, 0.748s cpu time, 0.036s GC time
Loading theory "Draft.dhlvl1" (required by "Draft.dhlvl1Templates")
Found termination order: "{}"
specification
  guessed_frame_dom_spec: dom (guessed_frame ?R) = domain (role (guessed_runs ?R))
  guessed_frame_payload_spec: guessed_frame ?R ?x = Some ?y ==> ?y : payload
  guessed_frame_Init_xnx: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xnx = Some (NonceF (?R $ nx))
  guessed_frame_Init_xgnx: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xgnx = Some (Exp Gen (NonceF (?R $ nx)))
  guessed_frame_Resp_xny: role (guessed_runs ?R) = Resp ==>
guessed_frame ?R xny = Some (NonceF (?R $ ny))
  guessed_frame_Resp_xgny: role (guessed_runs ?R) = Resp ==>
guessed_frame ?R xgny = Some (Exp Gen (NonceF (?R $ ny)))
  guessed_frame_xEnd: guessed_frame ?R xEnd = Some End
### Ignoring duplicate safe introduction (intro!)
### ?m ?a ~= None ==> ?a : dom ?m
### Ignoring duplicate safe elimination (elim!)
### [| ?a : dom ?m; ?m ?a ~= None ==> PROP ?W |] ==> PROP ?W
### Ignoring duplicate safe introduction (intro!)
### ?m ?a ~= None ==> ?a : dom ?m
### Ignoring duplicate safe elimination (elim!)
### [| ?a : dom ?m; ?m ?a ~= None ==> PROP ?W |] ==> PROP ?W
### theory "Draft.dhlvl1"
### 0.884s elapsed time, 0.988s cpu time, 0.142s GC time
Loading theory "Draft.dhlvl1Templates"
val templateLemmas =
   [("dhlvl1.l1_learn_refines_a0_ia_skip_i",
     "{R01iai} Id, l1_learn ?m {> R01iai}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_learn_refines_a0_ia_skip_r",
     "{R01iar} Id, l1_learn ?m {> R01iar}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_learn_refines_learn",
     "{R01s} s0_learn ?m, l1_learn ?m {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.guessed_frame_dom_spec",
     "dom (guessed_frame ?R) = domain (role (guessed_runs ?R))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("dhlvl1.guessed_frame_xEnd", "guessed_frame ?R xEnd = Some End",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app (template_hole 4, template_hole 3)),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("dhlvl1.l1_step1_refines_skip",
     "{R01s} Id, l1_step1 ?Ra ?A ?B {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_step1_refines_a0i_skip_i",
     "{R01iai} Id, l1_step1 ?Ra ?A ?B {> R01iai}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_step1_refines_a0i_skip_r",
     "{R01iar} Id, l1_step1 ?Ra ?A ?B {> R01iar}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_step2_refines_skip",
     "{R01s} Id, l1_step2 ?Rb ?A ?B ?gnx {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_step4_refines_a0i_skip_i",
     "{R01iai} Id, l1_step4 ?Rb ?A ?B ?gnx {> R01iai}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.l1_step2_refines_a0i_skip_r",
     "{R01iar} Id, l1_step2 ?Rb ?A ?B ?gnx {> R01iar}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)
         )),
    ("dhlvl1.guessed_frame_payload_spec",
     "guessed_frame ?R ?x = Some ?y ==> ?y : payload",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.run_ended_not_None", "[| run_ended ?R; ?R = None |] ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            ),
        template_equation (template_var 0, template_hole 1)],
       template_predicate (template_hole 0))),
    ("dhlvl1.can_signal_trans",
     "[| can_signal ?s' ?A ?B; (?s, ?s') : TS.trans l1 |]
      ==> can_signal ?s ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 3)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("dhlvl1.l1_step4_refines_add_secret_skip",
     "{R01s} (s0_add_secret
               (Exp ?gnx
                 (NonceF (?Rb $ ny))))^=, l1_step4 ?Rb ?A ?B ?gnx {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 2),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2)))))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 3)),
           template_hole 11)
         )),
    ("dhlvl1.l1_step3_refines_add_secret_skip",
     "{R01s} (s0_add_secret
               (Exp ?gny
                 (NonceF (?Ra $ nx))))^=, l1_step3 ?Ra ?A ?B ?gny {> R01s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 3),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 2),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2)))))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 3)),
           template_hole 11)
         )),
    ("dhlvl1.l1_step2_refines_a0i_running_skip_i",
     "{R01iai} (a0i_running ?A ?B
                 (Exp ?gnx
                   (NonceF
                     (?Rb $ ny))))^=, l1_step2 ?Rb ?A ?B ?gnx {> R01iai}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_var 3),
                       template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2)))))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 11)
         )),
    ("dhlvl1.l1_step3_refines_a0i_running_skip_r",
     "{R01iar} (a0i_running ?A ?B
                 (Exp ?gny
                   (NonceF
                     (?Ra $ nx))))^=, l1_step3 ?Ra ?A ?B ?gny {> R01iar}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_var 3),
                       template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2)))))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 11)
         )),
    ("dhlvl1.guessed_frame_Init_xnx",
     "role (guessed_runs ?R) = Init ==>
      guessed_frame ?R xnx = Some (NonceF (?R $ nx))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 0)),
          template_hole 10)],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))))))))),
    ("dhlvl1.guessed_frame_Resp_xny",
     "role (guessed_runs ?R) = Resp ==>
      guessed_frame ?R xny = Some (NonceF (?R $ ny))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 0)),
          template_hole 10)],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))))))))),
    ("dhlvl1.run_ended_trans",
     "[| run_ended (progress ?s ?R); (?s, ?s') : TS.trans l1 |]
      ==> run_ended (progress ?s' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 1)),
             template_app (template_hole 5, template_hole 4))
           ))),
    ("dhlvl1.l1_iagreement_InitI",
     "(!!A B N.
          signalsInit ?x (Commit A B N)
          <= signalsInit ?x (Running A B N)) ==>
      ?x : l1_iagreement_Init",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_iagreement_RespI",
     "(!!A B N.
          signalsResp ?x (Commit A B N)
          <= signalsResp ?x (Running A B N)) ==>
      ?x : l1_iagreement_Resp",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.guessed_frame_Init_xgnx",
     "role (guessed_runs ?R) = Init ==>
      guessed_frame ?R xgnx = Some (Exp Gen (NonceF (?R $ nx)))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app (template_hole 15, template_var 0)),
          template_hole 14)],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 0),
           template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))))),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 8, template_hole 7)))))))))),
    ("dhlvl1.guessed_frame_Resp_xgny",
     "role (guessed_runs ?R) = Resp ==>
      guessed_frame ?R xgny = Some (Exp Gen (NonceF (?R $ ny)))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app (template_hole 15, template_var 0)),
          template_hole 14)],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 0),
           template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))))),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 8, template_hole 7)))))))))),
    ("dhlvl1.l1_step3_refines_a0i_commit_skip_i",
     "{R01iai Int
       UNIV \<times>
       l1_inv3} (a0i_commit ?A ?B
                  (Exp ?gny
                    (NonceF
                      (?Ra $ nx))))^=, l1_step3 ?Ra ?A ?B ?gny {> R01iai}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_app
                    (template_app (template_hole 13, template_hole 12),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_var 3),
                       template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2)))))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 14)
         )),
    ("dhlvl1.l1_step4_refines_a0i_commit_skip_r",
     "{R01iar Int
       UNIV \<times>
       l1_inv6} (a0i_commit ?A ?B
                  (Exp ?gnx
                    (NonceF
                      (?Rb $ ny))))^=, l1_step4 ?Rb ?A ?B ?gnx {> R01iar}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, template_hole 14),
                   template_app
                    (template_app (template_hole 13, template_hole 12),
                     t_empty))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app (template_hole 9, template_var 3),
                       template_var 2),
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2)))))))),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 14)
         )),
    ("dhlvl1.l1_iagreement_InitE",
     "[| ?x : l1_iagreement_Init;
         (!!A B N.
             signalsInit ?x (Commit A B N)
             <= signalsInit ?x (Running A B N)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_iagreement_RespE",
     "[| ?x : l1_iagreement_Resp;
         (!!A B N.
             signalsResp ?x (Commit A B N)
             <= signalsResp ?x (Running A B N)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_inv4D",
     "[| 0 < signalsResp ?x (Commit ?A ?B (Exp ?gnx (NonceF (?Rb $ ny))));
         ?x : l1_inv4 |]
      ==> guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |) &
          progress ?x ?Rb = Some {xny, xgnx, xgny, xsk, xEnd} &
          guessed_frame ?Rb xgnx = Some ?gnx",
     template_implication
      ([template_inequation
         (less_than, template_hole 27,
          template_app
           (template_app (template_hole 26, template_var 4),
            template_app
             (template_app
               (template_app (template_hole 25, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 24, template_var 1),
                template_app
                 (template_hole 23,
                  template_app
                   (template_hole 22,
                    template_app
                     (template_app (template_hole 21, template_var 0),
                      template_app
                       (template_hole 20,
                        template_app
                         (template_hole 19, template_hole 18))))))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_hole 16)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 0)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 2),
                     template_var 3),
                   template_hole 10))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 4),
                       template_var 0)),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 19, template_hole 18)))),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 20,
                               template_app
                                (template_hole 19,
                                 template_app
                                  (template_hole 4, template_hole 18))))),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 20,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 19,
                                     template_hole 18))))),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 20,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4, template_hole 18))))),
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_hole 27)),
                               template_hole 3)))))))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 20,
                         template_app
                          (template_hole 19,
                           template_app
                            (template_hole 4, template_hole 18)))))),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("dhlvl1.l1_inv2D",
     "[| guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |);
         in_progressS (progress ?x ?Rb) {xny, xgnx, xgny, xsk};
         guessed_frame ?Rb xgnx = Some ?gnx; can_signal ?x ?A ?B;
         ?x : l1_inv2 |]
      ==> 0 < signalsInit ?x
               (Running ?A ?B (Exp ?gnx (NonceF (?Rb $ ny))))",
     template_implication
      ([template_equation
         (template_app (template_hole 26, template_var 4),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 25, template_hole 24),
                template_var 3),
              template_var 2),
            template_hole 23)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 1),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_hole 19,
                    template_app
                     (template_hole 18,
                      template_app (template_hole 17, template_hole 16)))),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_hole 19,
                      template_app
                       (template_hole 18,
                        template_app
                         (template_hole 17,
                          template_app
                           (template_hole 15, template_hole 16))))),
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_hole 19,
                        template_app
                         (template_hole 18,
                          template_app
                           (template_hole 15,
                            template_app
                             (template_hole 17, template_hole 16))))),
                    template_app
                     (template_app
                       (template_hole 20,
                        template_app
                         (template_hole 19,
                          template_app
                           (template_hole 18,
                            template_app
                             (template_hole 15,
                              template_app
                               (template_hole 15, template_hole 16))))),
                      template_hole 14)))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 4),
            template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app
                 (template_hole 17,
                  template_app (template_hole 15, template_hole 16))))),
          template_app (template_hole 11, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            )],
       template_inequation
        (less_than, template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 3),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_hole 18,
                       template_app
                        (template_hole 17, template_hole 16))))))))))),
    ("dhlvl1.l1_inv5D",
     "[| guessed_runs ?Ra = (| role = Init, owner = ?A, partner = ?B |);
         in_progressS (progress ?x ?Ra) {xnx, xgnx, xgny, xsk, xEnd};
         guessed_frame ?Ra xgny = Some ?gny; can_signal ?x ?A ?B;
         ?x : l1_inv5 |]
      ==> 0 < signalsResp ?x
               (Running ?A ?B (Exp ?gny (NonceF (?Ra $ nx))))",
     template_implication
      ([template_equation
         (template_app (template_hole 26, template_var 4),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 25, template_hole 24),
                template_var 3),
              template_var 2),
            template_hole 23)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 1),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_hole 19,
                    template_app
                     (template_hole 18,
                      template_app (template_hole 17, template_hole 16)))),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_hole 19,
                      template_app
                       (template_hole 18,
                        template_app
                         (template_hole 15,
                          template_app
                           (template_hole 17, template_hole 16))))),
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_hole 19,
                        template_app
                         (template_hole 18,
                          template_app
                           (template_hole 17,
                            template_app
                             (template_hole 15, template_hole 16))))),
                    template_app
                     (template_app
                       (template_hole 20,
                        template_app
                         (template_hole 19,
                          template_app
                           (template_hole 18,
                            template_app
                             (template_hole 17,
                              template_app
                               (template_hole 17, template_hole 16))))),
                      template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_hole 19, template_hole 14)),
                        template_hole 13))))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app
                 (template_hole 17,
                  template_app (template_hole 15, template_hole 16))))),
          template_app (template_hole 10, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7)
            )],
       template_inequation
        (less_than, template_hole 14,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_hole 18,
                       template_app
                        (template_hole 17, template_hole 16))))))))))),
    ("dhlvl1.l1_inv4I",
     "(!!Rb A B gnx.
          0 < signalsResp ?x (Commit A B (Exp gnx (NonceF (Rb $ ny)))) ==>
          guessed_runs Rb = (| role = Resp, owner = B, partner = A |) &
          progress ?x Rb = Some {xny, xgnx, xgny, xsk, xEnd} &
          guessed_frame Rb xgnx = Some gnx) ==>
      ?x : l1_inv4",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_inv1D",
     "[| 0 < signalsInit ?x (Commit ?A ?B (Exp ?gny (NonceF (?Ra $ nx))));
         ?x : l1_inv1 |]
      ==> guessed_runs ?Ra = (| role = Init, owner = ?A, partner = ?B |) &
          progress ?x ?Ra = Some {xnx, xgnx, xgny, xsk, xEnd} &
          guessed_frame ?Ra xsk = Some (Exp ?gny (NonceF (?Ra $ nx)))",
     template_implication
      ([template_inequation
         (less_than, template_hole 27,
          template_app
           (template_app (template_hole 26, template_var 4),
            template_app
             (template_app
               (template_app (template_hole 25, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 24, template_var 1),
                template_app
                 (template_hole 23,
                  template_app
                   (template_hole 22,
                    template_app
                     (template_app (template_hole 21, template_var 0),
                      template_app
                       (template_hole 20,
                        template_app
                         (template_hole 19, template_hole 18))))))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_hole 16)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 0)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_var 3),
                     template_var 2),
                   template_hole 10))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 4),
                       template_var 0)),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 19, template_hole 18)))),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 20,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 19, template_hole 18))))),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 20,
                                 template_app
                                  (template_hole 19,
                                   template_app
                                    (template_hole 4, template_hole 18))))),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 20,
                                   template_app
                                    (template_hole 19,
                                     template_app
(template_hole 19, template_hole 18))))),
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_hole 27)),
                               template_hole 3)))))))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 20,
                         template_app
                          (template_hole 19,
                           template_app
                            (template_hole 19, template_hole 18)))))),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 24, template_var 1),
                     template_app
                      (template_hole 23,
                       template_app
                        (template_hole 22,
                         template_app
                          (template_app (template_hole 21, template_var 0),
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 19, template_hole 18))))))))))
           ))),
    ("dhlvl1.l1_inv2I",
     "(!!gnx A B Rb.
          [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
             in_progressS (progress ?x Rb) {xny, xgnx, xgny, xsk};
             guessed_frame Rb xgnx = Some gnx; can_signal ?x A B |]
          ==> 0 < signalsInit ?x
                   (Running A B (Exp gnx (NonceF (Rb $ ny))))) ==>
      ?x : l1_inv2",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_inv4E",
     "[| ?x : l1_inv4;
         (!!Rb A B gnx.
             0 < signalsResp ?x
                  (Commit A B (Exp gnx (NonceF (Rb $ ny)))) ==>
             guessed_runs Rb = (| role = Resp, owner = B, partner = A |) &
             progress ?x Rb = Some {xny, xgnx, xgny, xsk, xEnd} &
             guessed_frame Rb xgnx = Some gnx) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 1),
              template_hole 30)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 29, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_inv5I",
     "(!!gny A B Ra.
          [| guessed_runs Ra = (| role = Init, owner = A, partner = B |);
             in_progressS (progress ?x Ra) {xnx, xgnx, xgny, xsk, xEnd};
             guessed_frame Ra xgny = Some gny; can_signal ?x A B |]
          ==> 0 < signalsResp ?x
                   (Running A B (Exp gny (NonceF (Ra $ nx))))) ==>
      ?x : l1_inv5",
     template_implication
      ([template_predicate (template_app (template_hole 31, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_inv1I",
     "(!!Ra A B gny.
          0 < signalsInit ?x (Commit A B (Exp gny (NonceF (Ra $ nx)))) ==>
          guessed_runs Ra = (| role = Init, owner = A, partner = B |) &
          progress ?x Ra = Some {xnx, xgnx, xgny, xsk, xEnd} &
          guessed_frame Ra xsk = Some (Exp gny (NonceF (Ra $ nx)))) ==>
      ?x : l1_inv1",
     template_implication
      ([template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_inv2E",
     "[| ?x : l1_inv2;
         (!!gnx A B Rb.
             [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
                in_progressS (progress ?x Rb) {xny, xgnx, xgny, xsk};
                guessed_frame Rb xgnx = Some gnx; can_signal ?x A B |]
             ==> 0 < signalsInit ?x
                      (Running A B (Exp gnx (NonceF (Rb $ ny))))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 1),
              template_hole 29)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 28, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_inv5E",
     "[| ?x : l1_inv5;
         (!!gny A B Ra.
             [| guessed_runs Ra = (| role = Init, owner = A, partner = B |);
                in_progressS (progress ?x Ra) {xnx, xgnx, xgny, xsk, xEnd};
                guessed_frame Ra xgny = Some gny; can_signal ?x A B |]
             ==> 0 < signalsResp ?x
                      (Running A B (Exp gny (NonceF (Ra $ nx))))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 1),
              template_hole 29)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 28, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_inv1E",
     "[| ?x : l1_inv1;
         (!!Ra A B gny.
             0 < signalsInit ?x
                  (Commit A B (Exp gny (NonceF (Ra $ nx)))) ==>
             guessed_runs Ra = (| role = Init, owner = A, partner = B |) &
             progress ?x Ra = Some {xnx, xgnx, xgny, xsk, xEnd} &
             guessed_frame Ra xsk = Some (Exp gny (NonceF (Ra $ nx)))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 1),
              template_hole 30)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 29, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_inv3D",
     "[| guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |);
         in_progressS (progress ?x ?Rb) {xny, xgnx, xgny, xsk};
         guessed_frame ?Rb xgny = Some ?gny;
         guessed_frame ?Rb xgnx = Some (Exp Gen (NonceF (?Ra $ nx)));
         guessed_runs ?Ra = (| role = Init, owner = ?A, partner = ?B |);
         progress ?x ?Ra = Some {xnx, xgnx}; can_signal ?x ?A ?B;
         ?x : l1_inv3 |]
      ==> signalsInit ?x (Commit ?A ?B (Exp ?gny (NonceF (?Ra $ nx))))
          < signalsInit ?x (Running ?A ?B (Exp ?gny (NonceF (?Ra $ nx))))",
     template_implication
      ([template_equation
         (template_app (template_hole 31, template_var 5),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 30, template_hole 29),
                template_var 4),
              template_var 3),
            template_hole 28)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 2),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_hole 24,
                    template_app
                     (template_hole 23,
                      template_app (template_hole 22, template_hole 21)))),
                template_app
                 (template_app
                   (template_hole 25,
                    template_app
                     (template_hole 24,
                      template_app
                       (template_hole 23,
                        template_app
                         (template_hole 22,
                          template_app
                           (template_hole 20, template_hole 21))))),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app
                       (template_hole 24,
                        template_app
                         (template_hole 23,
                          template_app
                           (template_hole 20,
                            template_app
                             (template_hole 22, template_hole 21))))),
                    template_app
                     (template_app
                       (template_hole 25,
                        template_app
                         (template_hole 24,
                          template_app
                           (template_hole 23,
                            template_app
                             (template_hole 20,
                              template_app
                               (template_hole 20, template_hole 21))))),
                      template_hole 19)))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 5),
            template_app
             (template_hole 24,
              template_app
               (template_hole 23,
                template_app
                 (template_hole 20,
                  template_app (template_hole 22, template_hole 21))))),
          template_app (template_hole 16, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 5),
            template_app
             (template_hole 24,
              template_app
               (template_hole 23,
                template_app
                 (template_hole 22,
                  template_app (template_hole 20, template_hole 21))))),
          template_app
           (template_hole 16,
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13)),
              template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_app
                     (template_hole 23,
                      template_app
                       (template_hole 20, template_hole 21)))))))),
        template_equation
         (template_app (template_hole 31, template_var 0),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 30, template_hole 9),
                template_var 3),
              template_var 4),
            template_hole 28)),
        template_equation
         (template_app
           (template_app (template_hole 26, template_var 2),
            template_var 0),
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_hole 24,
                  template_app
                   (template_hole 23,
                    template_app (template_hole 20, template_hole 21)))),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_hole 24,
                    template_app
                     (template_hole 23,
                      template_app
                       (template_hole 22,
                        template_app
                         (template_hole 20, template_hole 21))))),
                template_hole 19)))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 4),
             template_app
              (template_app (template_hole 15, template_var 1),
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_hole 23,
                       template_app
                        (template_hole 20, template_hole 21)))))))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4),
             template_app
              (template_app (template_hole 15, template_var 1),
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_hole 23,
                       template_app
                        (template_hole 20, template_hole 21))))))))))),
    ("dhlvl1.l1_inv3I",
     "(!!A B Rb Ra gny.
          [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
             in_progressS (progress ?x Rb) {xny, xgnx, xgny, xsk};
             guessed_frame Rb xgny = Some gny;
             guessed_frame Rb xgnx = Some (Exp Gen (NonceF (Ra $ nx)));
             guessed_runs Ra = (| role = Init, owner = A, partner = B |);
             progress ?x Ra = Some {xnx, xgnx}; can_signal ?x A B |]
          ==> signalsInit ?x (Commit A B (Exp gny (NonceF (Ra $ nx))))
              < signalsInit ?x
                 (Running A B (Exp gny (NonceF (Ra $ nx))))) ==>
      ?x : l1_inv3",
     template_implication
      ([template_predicate (template_app (template_hole 36, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_inv3E",
     "[| ?x : l1_inv3;
         (!!A B Rb Ra gny.
             [| guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
                in_progressS (progress ?x Rb) {xny, xgnx, xgny, xsk};
                guessed_frame Rb xgny = Some gny;
                guessed_frame Rb xgnx = Some (Exp Gen (NonceF (Ra $ nx)));
                guessed_runs Ra = (| role = Init, owner = A, partner = B |);
                progress ?x Ra = Some {xnx, xgnx}; can_signal ?x A B |]
             ==> signalsInit ?x (Commit A B (Exp gny (NonceF (Ra $ nx))))
                 < signalsInit ?x
                    (Running A B (Exp gny (NonceF (Ra $ nx))))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 35, template_var 1),
              template_hole 34)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 33, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("dhlvl1.l1_inv6D",
     "[| guessed_runs ?Ra = (| role = Init, owner = ?A, partner = ?B |);
         in_progressS (progress ?x ?Ra) {xnx, xgnx, xgny, xsk, xEnd};
         guessed_frame ?Ra xgnx = Some ?gnx;
         guessed_frame ?Ra xgny = Some (Exp Gen (NonceF (?Rb $ ny)));
         guessed_runs ?Rb = (| role = Resp, owner = ?B, partner = ?A |);
         progress ?x ?Rb = Some {xny, xgnx, xgny, xsk}; can_signal ?x ?A ?B;
         ?x : l1_inv6 |]
      ==> signalsResp ?x (Commit ?A ?B (Exp ?gnx (NonceF (?Rb $ ny))))
          < signalsResp ?x (Running ?A ?B (Exp ?gnx (NonceF (?Rb $ ny))))",
     template_implication
      ([template_equation
         (template_app (template_hole 32, template_var 5),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 31, template_hole 30),
                template_var 4),
              template_var 3),
            template_hole 29)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app (template_hole 27, template_var 2),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_hole 25,
                    template_app
                     (template_hole 24,
                      template_app (template_hole 23, template_hole 22)))),
                template_app
                 (template_app
                   (template_hole 26,
                    template_app
                     (template_hole 25,
                      template_app
                       (template_hole 24,
                        template_app
                         (template_hole 21,
                          template_app
                           (template_hole 23, template_hole 22))))),
                  template_app
                   (template_app
                     (template_hole 26,
                      template_app
                       (template_hole 25,
                        template_app
                         (template_hole 24,
                          template_app
                           (template_hole 23,
                            template_app
                             (template_hole 21, template_hole 22))))),
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app
                         (template_hole 25,
                          template_app
                           (template_hole 24,
                            template_app
                             (template_hole 23,
                              template_app
                               (template_hole 23, template_hole 22))))),
                      template_app
                       (template_app
                         (template_hole 26,
                          template_app
                           (template_hole 25, template_hole 20)),
                        template_hole 19))))))
            ),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 5),
            template_app
             (template_hole 25,
              template_app
               (template_hole 24,
                template_app
                 (template_hole 21,
                  template_app (template_hole 23, template_hole 22))))),
          template_app (template_hole 16, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 5),
            template_app
             (template_hole 25,
              template_app
               (template_hole 24,
                template_app
                 (template_hole 23,
                  template_app (template_hole 21, template_hole 22))))),
          template_app
           (template_hole 16,
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13)),
              template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_app
                     (template_hole 24,
                      template_app
                       (template_hole 21, template_hole 22)))))))),
        template_equation
         (template_app (template_hole 32, template_var 0),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 31, template_hole 9),
                template_var 3),
              template_var 4),
            template_hole 29)),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 2),
            template_var 0),
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_hole 25,
                  template_app
                   (template_hole 24,
                    template_app (template_hole 21, template_hole 22)))),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_hole 25,
                    template_app
                     (template_hole 24,
                      template_app
                       (template_hole 21,
                        template_app
                         (template_hole 23, template_hole 22))))),
                template_app
                 (template_app
                   (template_hole 26,
                    template_app
                     (template_hole 25,
                      template_app
                       (template_hole 24,
                        template_app
                         (template_hole 23,
                          template_app
                           (template_hole 21, template_hole 22))))),
                  template_app
                   (template_app
                     (template_hole 26,
                      template_app
                       (template_hole 25,
                        template_app
                         (template_hole 24,
                          template_app
                           (template_hole 23,
                            template_app
                             (template_hole 23, template_hole 22))))),
                    template_hole 19)))))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 15, template_var 1),
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_hole 24,
                       template_app
                        (template_hole 21, template_hole 22)))))))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 15, template_var 1),
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_hole 24,
                       template_app
                        (template_hole 21, template_hole 22))))))))))),
    ("dhlvl1.l1_inv6I",
     "(!!A B Rb Ra gnx.
          [| guessed_runs Ra = (| role = Init, owner = A, partner = B |);
             in_progressS (progress ?x Ra) {xnx, xgnx, xgny, xsk, xEnd};
             guessed_frame Ra xgnx = Some gnx;
             guessed_frame Ra xgny = Some (Exp Gen (NonceF (Rb $ ny)));
             guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
             progress ?x Rb = Some {xny, xgnx, xgny, xsk};
             can_signal ?x A B |]
          ==> signalsResp ?x (Commit A B (Exp gnx (NonceF (Rb $ ny))))
              < signalsResp ?x
                 (Running A B (Exp gnx (NonceF (Rb $ ny))))) ==>
      ?x : l1_inv6",
     template_implication
      ([template_predicate (template_app (template_hole 37, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("dhlvl1.l1_inv6E",
     "[| ?x : l1_inv6;
         (!!A B Rb Ra gnx.
             [| guessed_runs Ra = (| role = Init, owner = A, partner = B |);
                in_progressS (progress ?x Ra) {xnx, xgnx, xgny, xsk, xEnd};
                guessed_frame Ra xgnx = Some gnx;
                guessed_frame Ra xgny = Some (Exp Gen (NonceF (Rb $ ny)));
                guessed_runs Rb = (| role = Resp, owner = B, partner = A |);
                progress ?x Rb = Some {xny, xgnx, xgny, xsk};
                can_signal ?x A B |]
             ==> signalsResp ?x (Commit A B (Exp gnx (NonceF (Rb $ ny))))
                 < signalsResp ?x
                    (Running A B (Exp gnx (NonceF (Rb $ ny))))) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 36, template_var 1),
              template_hole 35)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 34, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.dhlvl1Templates"
### 0.518s elapsed time, 0.722s cpu time, 0.076s GC time
val it = (): unit
