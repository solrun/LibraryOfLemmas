   [("Channels.extr_empty_chan", "extr ?bad ?IK {} = ?IK",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Channels.IK_subset_extr", "?IK <= extr ?bad ?IK ?chan",
     template_inequation
      (less_equals, template_var 2,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Channels.chan_subset_fake", "?chan <= fake ?bad ?IK ?chan",
     template_inequation
      (less_equals, template_var 2,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Channels.dy_fake_msg_empty", "dy_fake_msg ?bad {} {} = synth {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 0), template_hole 2),
         template_hole 1),
       template_app (template_hole 0, template_hole 2))),
    ("Channels.extr_subset_dy_fake_msg",
     "extr ?bad ?IK ?chan <= dy_fake_msg ?bad ?IK ?chan",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Channels.fake_intros", "?M : ?chan ==> ?M : fake ?bad ?IK ?chan",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Channels.extr_insert_IK_eq",
     "extr ?bad (insert ?X ?IK) ?CH = insert ?X (extr ?bad ?IK ?CH)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Channels.dy_fake_msg_mono_ik",
     "?G <= ?H ==> dy_fake_msg ?bad ?G ?C <= dy_fake_msg ?bad ?H ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Channels.fake_mono_ik",
     "?IK <= ?IK' ==> fake ?bad ?IK ?chan <= fake ?bad ?IK' ?chan",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Channels.extr_mono_IK",
     "?IK1.0 <= ?IK2.0 ==> extr ?bad ?IK1.0 ?H <= extr ?bad ?IK2.0 ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Channels.dy_fake_chan_mono_ik",
     "?T <= ?T' ==> dy_fake_chan ?bad ?T ?C <= dy_fake_chan ?bad ?T' ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Channels.dy_fake_chan_mono_chan",
     "?C <= ?C' ==> dy_fake_chan ?bad ?T ?C <= dy_fake_chan ?bad ?T ?C'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Channels.dy_fake_msg_mono_chan",
     "?G <= ?H ==> dy_fake_msg ?bad ?I ?G <= dy_fake_msg ?bad ?I ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Channels.extr_mono_chan",
     "?G <= ?H ==> extr ?bad ?IK ?G <= extr ?bad ?IK ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Channels.fake_mono_chan",
     "?chan <= ?chan' ==> fake ?bad ?IK ?chan <= fake ?bad ?IK ?chan'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Channels.dy_fake_msg_mono_bad",
     "?bad <= ?bad' ==> dy_fake_msg ?bad ?I ?C <= dy_fake_msg ?bad' ?I ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.extr_mono_bad",
     "?bad <= ?bad' ==> extr ?bad ?IK ?H <= extr ?bad' ?IK ?H",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.dy_fake_chan_mono_bad",
     "?bad <= ?bad' ==>
      dy_fake_chan ?bad ?I ?C <= dy_fake_chan ?bad' ?I ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.fake_mono_bad",
     "?bad <= ?bad' ==> fake ?bad ?IK ?chan <= fake ?bad' ?IK ?chan",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.dy_fake_msg_subset_synth_analz",
     "extr ?bad ?IK ?chan <= ?T ==>
      dy_fake_msg ?bad ?IK ?chan <= synth (analz ?T)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Channels.dy_fake_msg_insert",
     "?M : dy_fake_msg ?bad ?I ?C ==>
      ?M : dy_fake_msg ?bad ?I (insert ?X ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Channels.extr_insert",
     "?M : extr ?bad ?IK ?H ==> ?M : extr ?bad ?IK (insert ?C ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Channels.extr_insert_chan_eq",
     "extr ?bad ?IK (insert ?X ?CH) =
      extr ?bad ?IK {?X} Un extr ?bad ?IK ?CH",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Channels.synth_analz_insert_dy_fake_msg",
     "?M : dy_fake_msg ?bad ?IK ?CH ==>
      synth (analz (insert ?M ?IK)) <= dy_fake_msg ?bad ?IK ?CH",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.dy_fake_msg_extr",
     "extr ?bad ?ik ?chan <= synth (analz ?X) ==>
      dy_fake_msg ?bad ?ik ?chan <= synth (analz ?X)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Channels.dy_fake_msg_insert_dy_fake_msg",
     "?M : dy_fake_msg ?bad ?IK ?CH ==>
      dy_fake_msg ?bad (insert ?M ?IK) ?CH <= dy_fake_msg ?bad ?IK ?CH",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.extr_insert_dy_fake_msg",
     "?M : dy_fake_msg ?bad ?IK ?CH ==>
      extr ?bad (insert ?M ?IK) ?CH <= dy_fake_msg ?bad ?IK ?CH",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.dy_fake_chan_extr_insert",
     "?M : dy_fake_chan ?bad ?IK ?CH ==>
      extr ?bad ?IK (insert ?M ?CH) <= dy_fake_msg ?bad ?IK ?CH",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Channels.dy_fake_msg_monotone_ik",
     "[| ?c : dy_fake_msg ?bad ?G ?C; ?G <= ?H |]
      ==> ?c : dy_fake_msg ?bad ?H ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Channels.dy_fake_msg_monotone_bad",
     "[| ?c : dy_fake_msg ?bad ?I ?C; ?bad <= ?bad' |]
      ==> ?c : dy_fake_msg ?bad' ?I ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Channels.dy_fake_msg_monotone_chan",
     "[| ?c : dy_fake_msg ?bad ?I ?G; ?G <= ?H |]
      ==> ?c : dy_fake_msg ?bad ?I ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Channels.extr_monotone_chan",
     "[| ?c : extr ?bad ?IK ?G; ?G <= ?H |] ==> ?c : extr ?bad ?IK ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Channels.extr_monotone_bad",
     "[| ?c : extr ?bad ?IK ?H; ?bad <= ?bad' |]
      ==> ?c : extr ?bad' ?IK ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Channels.extr_monotone_IK",
     "[| ?c : extr ?bad ?IK1.0 ?H; ?IK1.0 <= ?IK2.0 |]
      ==> ?c : extr ?bad ?IK2.0 ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Channels.dy_fake_chan_monotone_bad",
     "[| ?c : dy_fake_chan ?bad ?I ?C; ?bad <= ?bad' |]
      ==> ?c : dy_fake_chan ?bad' ?I ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Channels.dy_fake_chan_monotone_ik",
     "[| ?c : dy_fake_chan ?bad ?T ?C; ?T <= ?T' |]
      ==> ?c : dy_fake_chan ?bad ?T' ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Channels.dy_fake_chan_monotone_chan",
     "[| ?c : dy_fake_chan ?bad ?T ?C; ?C <= ?C' |]
      ==> ?c : dy_fake_chan ?bad ?T ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Channels.fake_monotone_ik",
     "[| ?c : fake ?bad ?IK ?chan; ?IK <= ?IK' |]
      ==> ?c : fake ?bad ?IK' ?chan",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Channels.fake_monotone_chan",
     "[| ?c : fake ?bad ?IK ?chan; ?chan <= ?chan' |]
      ==> ?c : fake ?bad ?IK ?chan'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Channels.fake_monotone_bad",
     "[| ?c : fake ?bad ?IK ?chan; ?bad <= ?bad' |]
      ==> ?c : fake ?bad' ?IK ?chan",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Channels.extrp_extr_eq",
     "extrp (%x. x : ?bad) (%x. x : ?IK) (%x. x : ?H) =
      (%x. x : extr ?bad ?IK ?H)",
     template_equation
      (template_app
        (template_app (template_app (template_hole 4, t_empty), t_empty),
         t_empty),
       t_empty)),
    ("Channels.fakep_fake_eq",
     "fakep (%x. x : ?bad) (%x. x : ?IK) (%x. x : ?chan) =
      (%x. x : fake ?bad ?IK ?chan)",
     template_equation
      (template_app
        (template_app (template_app (template_hole 4, t_empty), t_empty),
         t_empty),
       t_empty)),
    ("Channels.extr_fake",
     "?X : fake ?bad ?IK ?chan ==>
      extr ?bad ?IK' {?X} <= ?IK Un extr ?bad ?IK' ?chan",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0),
             template_var 1))))),
    ("Channels.dy_fake_msg_insert_chan",
     "?x = insec | ?x = auth ==>
      ?M : dy_fake_msg ?bad ?IK (insert (Chan ?x ?A ?B ?M) ?CH)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_hole 5)),
              template_app
               (template_app (template_hole 6, template_var 6),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 2),
                       template_var 1),
                     template_var 5)),
                 template_var 0)))
           ))),
    ("Channels.dy_fake_chan_subset",
     "?CH <= fake ?bad (dy_fake_msg ?bad ?IK ?CH) ?CH' ==>
      dy_fake_chan ?bad ?IK ?CH
      <= fake ?bad (dy_fake_msg ?bad ?IK ?CH) ?CH'",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 3)),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 3)),
           template_var 0)))),
    ("Channels.fake_parts_extr_insert",
     "?X : fake ?bad ?IK ?CH ==>
      parts (extr ?bad ?IK' (insert ?X ?CH))
      <= parts (extr ?bad ?IK' ?CH) Un parts ?IK",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0),
                 template_var 1))),
           template_app (template_hole 3, template_var 2))))),
    ("Channels.fake_parts_extr_singleton",
     "?X : fake ?bad ?IK ?chan ==>
      parts (extr ?bad ?IK' {?X})
      <= parts ?IK Un parts (extr ?bad ?IK' ?chan)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_hole 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 0),
               template_var 1)))))),
    ("Channels.dy_fake_msg_mono",
     "[| ?b <= ?b'; ?I <= ?I'; ?C <= ?C' |]
      ==> dy_fake_msg ?b ?I ?C <= dy_fake_msg ?b' ?I' ?C'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Channels.extr_mono",
     "[| ?b <= ?b'; ?I <= ?I'; ?C <= ?C' |]
      ==> extr ?b ?I ?C <= extr ?b' ?I' ?C'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Channels.dy_fake_chan_mono",
     "[| ?b <= ?b'; ?I <= ?I'; ?C <= ?C' |]
      ==> dy_fake_chan ?b ?I ?C <= dy_fake_chan ?b' ?I' ?C'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Channels.fake_mono",
     "[| ?bad <= ?bad'; ?IK <= ?IK'; ?chan <= ?chan' |]
      ==> fake ?bad ?IK ?chan <= fake ?bad' ?IK' ?chan'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Channels.dy_fake_chan_insert_chan",
     "?x = insec | ?x = auth ==>
      Chan ?x ?A ?B ?M
      : dy_fake_chan ?bad ?IK (insert (Chan ?x ?A ?B ?M) ?CH)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_hole 5)),
              template_app
               (template_app (template_hole 6, template_var 6),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_var 0)))
           ))),
    ("Channels.dy_fake_chan_extr_insert_parts",
     "?M : dy_fake_chan ?bad ?IK ?CH ==>
      parts (extr ?bad ?IK (insert ?M ?CH))
      <= parts (extr ?bad ?IK ?CH) Un dy_fake_msg ?bad ?IK ?CH",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Channels.extr_fake_2",
     "[| ?c : extr ?bad ?IK' {?X}; ?X : fake ?bad ?IK ?chan |]
      ==> ?c : ?IK Un extr ?bad ?IK' ?chan",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3),
                 template_var 0)))
           ))),
    ("Channels.extr_insert_Confid",
     "[| ?A ~: ?bad; ?B ~: ?bad |]
      ==> extr ?bad ?IK (insert (Confid ?A ?B ?X) ?CH) = extr ?bad ?IK ?CH",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 4)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 5),
                   template_var 3),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Channels.Fake_insert_dy_fake_msg",
     "[| ?M : dy_fake_msg ?bad ?IK ?CH;
         extr ?bad ?IK ?CH <= synth (analz ?X) |]
      ==> synth (analz (insert ?M ?IK)) <= synth (analz ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Channels.fake_synth_analz_extr",
     "?X : fake ?bad (synth (analz (extr ?bad ?IK ?CH))) ?CH ==>
      synth (analz (extr ?bad ?IK (insert ?X ?CH))) =
      synth (analz (extr ?bad ?IK ?CH))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app
                         (template_app (template_hole 2, template_var 2),
                          template_var 1),
                        template_var 0)))),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)))))),
    ("Channels.fake_parts_extr_singleton_2",
     "[| ?c : parts (extr ?bad ?IK' {?X}); ?X : fake ?bad ?IK ?chan |]
      ==> ?c : parts ?IK Un parts (extr ?bad ?IK' ?chan)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_hole 3))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 5),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 1)),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 3),
                   template_var 0))))
           ))),
    ("Channels.dy_fake_msg_monotone",
     "[| ?c : dy_fake_msg ?b ?I ?C; ?b <= ?b'; ?I <= ?I'; ?C <= ?C' |]
      ==> ?c : dy_fake_msg ?b' ?I' ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 6),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Channels.extr_monotone",
     "[| ?c : extr ?b ?I ?C; ?b <= ?b'; ?I <= ?I'; ?C <= ?C' |]
      ==> ?c : extr ?b' ?I' ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 6),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Channels.dy_fake_chan_monotone",
     "[| ?c : dy_fake_chan ?b ?I ?C; ?b <= ?b'; ?I <= ?I'; ?C <= ?C' |]
      ==> ?c : dy_fake_chan ?b' ?I' ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 6),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Channels.fake_monotone",
     "[| ?c : fake ?bad ?IK ?chan; ?bad <= ?bad'; ?IK <= ?IK';
         ?chan <= ?chan' |]
      ==> ?c : fake ?bad' ?IK' ?chan'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 6),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Channels.dy_fake_chan_mono2",
     "[| extr ?bad ?IK ?chan <= synth (analz ?y);
         ?chan <= fake ?bad (synth (analz ?y)) ?z |]
      ==> dy_fake_chan ?bad ?IK ?chan <= fake ?bad (synth (analz ?y)) ?z",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1))),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1))),
           template_var 0)))),
    ("Channels.fake_intros",
     "[| ?M : ?IK; ?c = insec | ?c = confid | ?A : ?bad | ?B : ?bad |]
      ==> Chan ?c ?A ?B ?M : fake ?bad ?IK ?chan",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_hole 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 2))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 1),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 5),
               template_var 0))
           ))),
    ("Channels.extr_insert_Chan",
     "extr ?bad ?IK (insert (Chan ?c ?A ?B ?M) ?H) =
      (if ?c = insec | ?c = auth | ?A : ?bad | ?B : ?bad
       then insert ?M (extr ?bad ?IK ?H) else extr ?bad ?IK ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 6),
                template_var 5),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_hole 3)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_hole 2)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_var 6)),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 6))))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 9, template_var 6),
                     template_var 5),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 9, template_var 6),
                 template_var 5),
               template_var 0))
           ))),
    ("Channels.extr_insert_bad",
     "extr (insert ?A ?bad) ?IK ?CH
      <= extr ?bad ?IK ?CH Un
         {M. EX B. Confid ?A B M : ?CH |
                   Confid B ?A M : ?CH |
                   Secure ?A B M : ?CH | Secure B ?A M : ?CH}",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 6, t_empty))))]
