Loading theory "Draft.Infra" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1" via "Draft.Secrecy" via "Draft.Refinement")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "Draft.Messages" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1" via "Draft.Runs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Infra"
### 0.067s elapsed time, 0.292s cpu time, 0.000s GC time
Loading theory "Draft.Refinement" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1" via "Draft.Secrecy")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.146s elapsed time, 0.616s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Nat_Bijection"
### 0.317s elapsed time, 1.280s cpu time, 0.078s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "reachp"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.267s elapsed time, 1.044s cpu time, 0.152s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "behp"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Proofs for inductive predicate(s) "seq_liftp"
consts
  flat :: "'a list stream => 'a stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Stream"
### 1.079s elapsed time, 4.063s cpu time, 0.865s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs")
### theory "Draft.Refinement"
### 1.341s elapsed time, 5.086s cpu time, 0.944s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.777s elapsed time, 2.387s cpu time, 0.254s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.299s elapsed time, 7.472s cpu time, 1.874s GC time
Loading theory "Draft.Templates" (required by "Draft.sklvl1Templates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.140s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.sklvl1Templates")
Found termination order: "{}"
Proofs for inductive predicate(s) "eq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.532s elapsed time, 1.122s cpu time, 0.095s GC time
### theory "Draft.Messages"
### 3.426s elapsed time, 10.663s cpu time, 2.312s GC time
Loading theory "Draft.AuthenticationN" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1" via "Draft.AuthenticationI")
Loading theory "Draft.Message_derivation" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1" via "Draft.Secrecy" via "Draft.IK")
Loading theory "Draft.Runs" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1")
Proofs for inductive predicate(s) "synthp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "analzp"
  Proving monotonicity ...
[| ?x : analz ?H; !!X. X : ?H ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P X;
   !!X Y.
      [| \<langle>X, Y\<rangle> : analz ?H; ?P \<langle>X, Y\<rangle> |]
      ==> ?P Y;
   !!X Y.
      [| Enc X Y : analz ?H; ?P (Enc X Y);
         Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (pubK Y) : analz ?H; ?P (Aenc X (pubK Y));
         priK Y : analz ?H; ?P (priK Y) |]
      ==> ?P X;
   !!X Y.
      [| Aenc X (epubK Y) : analz ?H; ?P (Aenc X (epubK Y));
         epriK Y : synth (analz ?H Int Collect ?P) |]
      ==> ?P X;
   !!X Y.
      [| Sign X (priK Y) : analz ?H; ?P (Sign X (priK Y));
         pubK Y : analz ?H; ?P (pubK Y) |]
      ==> ?P X |]
==> ?P ?x
Found termination order: "{}"
Proofs for inductive predicate(s) "partsp"
  Proving monotonicity ...
### theory "Draft.AuthenticationN"
### 1.011s elapsed time, 3.196s cpu time, 1.203s GC time
Loading theory "Draft.AuthenticationI" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1")
Found termination order: "{}"
### theory "Draft.Message_derivation"
### 1.074s elapsed time, 3.400s cpu time, 1.288s GC time
Loading theory "Draft.IK" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1" via "Draft.Secrecy")
Loading theory "Draft.Payloads" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1")
Found termination order: "{}"
### theory "Draft.AuthenticationI"
### 0.105s elapsed time, 0.363s cpu time, 0.086s GC time
### theory "Draft.Runs"
### 1.119s elapsed time, 3.578s cpu time, 1.288s GC time
Proofs for inductive predicate(s) "cpayloadp"
  Proving monotonicity ...
### theory "Draft.IK"
### 0.137s elapsed time, 0.358s cpu time, 0.000s GC time
Loading theory "Draft.Secrecy" (required by "Draft.sklvl1Templates" via "Draft.sklvl1" via "Draft.dhlvl1")
### theory "Draft.Payloads"
### 0.424s elapsed time, 0.961s cpu time, 0.092s GC time
### theory "Draft.Secrecy"
### 0.345s elapsed time, 0.686s cpu time, 0.092s GC time
Loading theory "Draft.dhlvl1" (required by "Draft.sklvl1Templates" via "Draft.sklvl1")
Found termination order: "{}"
specification
  guessed_frame_dom_spec: dom (guessed_frame ?R) = domain (role (guessed_runs ?R))
  guessed_frame_payload_spec: guessed_frame ?R ?x = Some ?y ==> ?y : payload
  guessed_frame_Init_xnx: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xnx = Some (NonceF (?R $ nx))
  guessed_frame_Init_xgnx: role (guessed_runs ?R) = Init ==>
guessed_frame ?R xgnx = Some (Exp Gen (NonceF (?R $ nx)))
  guessed_frame_Resp_xny: role (guessed_runs ?R) = Resp ==>
guessed_frame ?R xny = Some (NonceF (?R $ ny))
  guessed_frame_Resp_xgny: role (guessed_runs ?R) = Resp ==>
guessed_frame ?R xgny = Some (Exp Gen (NonceF (?R $ ny)))
  guessed_frame_xEnd: guessed_frame ?R xEnd = Some End
### Ignoring duplicate safe introduction (intro!)
### ?m ?a ~= None ==> ?a : dom ?m
### Ignoring duplicate safe elimination (elim!)
### [| ?a : dom ?m; ?m ?a ~= None ==> PROP ?W |] ==> PROP ?W
### Ignoring duplicate safe introduction (intro!)
### ?m ?a ~= None ==> ?a : dom ?m
### Ignoring duplicate safe elimination (elim!)
### [| ?a : dom ?m; ?m ?a ~= None ==> PROP ?W |] ==> PROP ?W
### theory "Draft.dhlvl1"
### 0.812s elapsed time, 0.935s cpu time, 0.167s GC time
Loading theory "Draft.sklvl1" (required by "Draft.sklvl1Templates")
Found termination order: "{}"
### theory "Draft.sklvl1"
### 0.057s elapsed time, 0.058s cpu time, 0.000s GC time
*** Failed to load theory "Draft.sklvl1Templates" (unresolved "Draft.sklvl1")
*** Unknown ancestor theory "Key_Agreement_Strong_Adversaries.dhlvl1" (line 63 of "$AFP/Key_Agreement_Strong_Adversaries/sklvl1.thy")
*** At command "text" (line 51 of "$AFP/Key_Agreement_Strong_Adversaries/sklvl1.thy")
Exception- TOPLEVEL_ERROR raised
