   [("PAL.static_reduce", "static (reduce ?p)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("PAL.lower_lift", "lower (lift ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("PAL.lift_lower", "static ?p ==> lift (lower ?p) = ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("PAL.lift_semantics",
     "(?M, ?w \<Turnstile> ?p) = (?M, ?w \<Turnstile>\<^sub>! lift ?p)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PAL.reduce_semantics",
     "(?M, ?w \<Turnstile>\<^sub>! ?p) =
      (?M, ?w \<Turnstile>\<^sub>! reduce ?p)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PAL.ConE",
     "?A \<turnstile>\<^sub>! (?p \<^bold>\<and>\<^sub>! ?q) ==>
      ?A \<turnstile>\<^sub>! ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("PAL.ConE",
     "?A \<turnstile>\<^sub>! (?p \<^bold>\<and>\<^sub>! ?q) ==>
      ?A \<turnstile>\<^sub>! ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("PAL.Iff_reduce",
     "?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                               reduce ?p)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 0)))
         )),
    ("PAL.AK_PAK",
     "?A o lift \<turnstile> ?p ==> ?A \<turnstile>\<^sub>! lift ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 1, template_var 0))
           ))),
    ("PAL.eval_peval", "eval ?h (?g o lift) ?p = peval ?h ?g (lift ?p)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("PAL.static_reduce'",
     "[| static ?p; static ?r |] ==> static (reduce' ?r ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PAL.completeness",
     "ALL M w. M, w \<Turnstile>\<^sub>! ?p ==> ?A \<turnstile>\<^sub>! ?p",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("PAL.lower_semantics",
     "static ?p ==>
      (?M, ?w \<Turnstile> lower ?p) = (?M, ?w \<Turnstile>\<^sub>! ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("PAL.ptautology", "ptautology ?p ==> ?M, ?w \<Turnstile>\<^sub>! ?p",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("PAL.K'_A2'",
     "?A \<turnstile>\<^sub>! (K\<^sub>! ?i
                                (?p \<^bold>\<longrightarrow>\<^sub>!
                                 ?q) \<^bold>\<longrightarrow>\<^sub>!
                               K\<^sub>! ?i
                                ?p \<^bold>\<longrightarrow>\<^sub>!
                               K\<^sub>! ?i ?q)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("PAL.ConI",
     "[| ?A \<turnstile>\<^sub>! ?p; ?A \<turnstile>\<^sub>! ?q |]
      ==> ?A \<turnstile>\<^sub>! (?p \<^bold>\<and>\<^sub>! ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PAL.peval_eval",
     "static ?p ==> eval ?h ?g (lower ?p) = peval ?h (?g o lower) ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 2)),
           template_var 2)))),
    ("PAL.K'_map",
     "?A \<turnstile>\<^sub>! (?p \<^bold>\<longrightarrow>\<^sub>! ?q) ==>
      ?A \<turnstile>\<^sub>! (K\<^sub>! ?i
                                ?p \<^bold>\<longrightarrow>\<^sub>!
                               K\<^sub>! ?i ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("PAL.reduce'_semantics",
     "static ?q ==>
      (?M, ?w \<Turnstile>\<^sub>! [?p]\<^sub>! ?q) =
      (?M, ?w \<Turnstile>\<^sub>! reduce' ?p ?q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("PAL.static_completeness",
     "[| static ?p; ALL M w. M, w \<Turnstile>\<^sub>! ?p |]
      ==> ?A \<turnstile>\<^sub>! ?p",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("PAL.Iff_sym",
     "(?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                                ?q)) =
      (?A \<turnstile>\<^sub>! (?q \<^bold>\<longleftrightarrow>\<^sub>!
                                ?p))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("PAL.tautology_ptautology", "tautology ?p ==> ptautology (lift ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("PAL.peval_semantics",
     "peval (?val ?w) (psemantics (Kripke ?W ?val ?r) ?w) ?p =
      (Kripke ?W ?val ?r, ?w \<Turnstile>\<^sub>! ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 4, template_var 3)),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 1)),
           template_var 3),
         template_var 0))),
    ("PAL.Iff_reduce'",
     "static ?p ==>
      ?A \<turnstile>\<^sub>! ([?r]\<^sub>! ?p \<^bold>\<longleftrightarrow>\<^sub>!
                               reduce' ?r ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))))
           ))),
    ("PAL.ptautology_tautology",
     "[| static ?p; ptautology ?p |] ==> tautology (lower ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("PAL.Iff_Ann2",
     "?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                               ?p') ==>
      ?A \<turnstile>\<^sub>! ([?r]\<^sub>! ?p \<^bold>\<longleftrightarrow>\<^sub>!
                               [?r]\<^sub>! ?p')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("PAL.Iff_wk",
     "?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                               ?q) ==>
      ?A \<turnstile>\<^sub>! ((?r \<^bold>\<longrightarrow>\<^sub>!
                                ?p) \<^bold>\<longleftrightarrow>\<^sub>!
                               ?r \<^bold>\<longrightarrow>\<^sub>! ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("PAL.Iff_Iff",
     "[| ?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?p');
         ?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?q) |]
      ==> ?A \<turnstile>\<^sub>! (?p' \<^bold>\<longleftrightarrow>\<^sub>!
                                   ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 0)),
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("PAL.Iff_Ann1",
     "[| ?A \<turnstile>\<^sub>! (?r \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?r');
         static ?p |]
      ==> ?A \<turnstile>\<^sub>! ([?r]\<^sub>! ?p \<^bold>\<longleftrightarrow>\<^sub>!
                                   [?r']\<^sub>! ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2)))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))))
           ))),
    ("PAL.Iff_Con",
     "[| ?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?p');
         ?A \<turnstile>\<^sub>! (?q \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?q') |]
      ==> ?A \<turnstile>\<^sub>! (?p \<^bold>\<and>\<^sub>!
                                   ?q \<^bold>\<longleftrightarrow>\<^sub>!
                                   ?p' \<^bold>\<and>\<^sub>! ?q')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 0)),
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))))
           ))),
    ("PAL.Iff_Dis",
     "[| ?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?p');
         ?A \<turnstile>\<^sub>! (?q \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?q') |]
      ==> ?A \<turnstile>\<^sub>! (?p \<^bold>\<or>\<^sub>!
                                   ?q \<^bold>\<longleftrightarrow>\<^sub>!
                                   ?p' \<^bold>\<or>\<^sub>! ?q')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0)),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))))
           ))),
    ("PAL.Iff_Imp",
     "[| ?A \<turnstile>\<^sub>! (?p \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?p');
         ?A \<turnstile>\<^sub>! (?q \<^bold>\<longleftrightarrow>\<^sub>!
                                  ?q') |]
      ==> ?A \<turnstile>\<^sub>! ((?p \<^bold>\<longrightarrow>\<^sub>!
                                    ?q) \<^bold>\<longleftrightarrow>\<^sub>!
                                   ?p' \<^bold>\<longrightarrow>\<^sub>!
                                   ?q')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 0)),
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))))
           ))),
    ("PAL.soundness",
     "[| !!M w p. [| ?A p; ?P M |] ==> M, w \<Turnstile>\<^sub>! p;
         !!M p. ?P M ==> ?P (restrict M p); ?A \<turnstile>\<^sub>! ?p;
         ?P ?M |]
      ==> ?M, ?w \<Turnstile>\<^sub>! ?p",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 2)
            ),
        template_predicate (template_app (template_var 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)
           )))]
