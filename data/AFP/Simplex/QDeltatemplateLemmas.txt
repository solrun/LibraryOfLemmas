   [("QDelta.delta_gt_zero", "0 < \<delta>_min ?l",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("QDelta.delta_le_one", "\<delta>_min ?l <= 1",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("QDelta.delta_min_append",
     "\<delta>_min (?as @ ?bs) = min (\<delta>_min ?as) (\<delta>_min ?bs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("QDelta.val_scaleRat",
     "val (?c *R ?qd) ?\<delta> = ?c * val ?qd ?\<delta>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("QDelta.delta_min_mono",
     "set ?as <= set ?bs ==> \<delta>_min ?bs <= \<delta>_min ?as",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("QDelta.val_plus",
     "val (?qd1.0 + ?qd2.0) ?\<delta> =
      val ?qd1.0 ?\<delta> + val ?qd2.0 ?\<delta>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("QDelta.valuate_rat_valuate",
     "?lp \<lbrace> %v. val (?vl v) ?\<delta> \<rbrace> =
      val ?lp \<lbrace> ?vl \<rbrace> ?\<delta>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("QDelta.valuate_valuate_rat",
     "?lp \<lbrace> %v. QDelta (?vl v) 0 \<rbrace> =
      QDelta ?lp \<lbrace> ?vl \<rbrace> 0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("QDelta.qdfst_setsum",
     "finite ?A ==> qdfst (sum ?f ?A) = (SUM x:?A. qdfst (?f x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("QDelta.qdsnd_setsum",
     "finite ?A ==> qdsnd (sum ?f ?A) = (SUM x:?A. qdsnd (?f x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("QDelta.delta0",
     "?qd1.0 <= ?qd2.0 ==>
      ALL \<epsilon>.
         0 < \<epsilon> & \<epsilon> <= \<delta>0 ?qd1.0 ?qd2.0 -->
         val ?qd1.0 \<epsilon> <= val ?qd2.0 \<epsilon>",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("QDelta.delta_min",
     "ALL qd1 qd2. (qd1, qd2) : set ?qd --> qd1 <= qd2 ==>
      ALL \<epsilon>.
         0 < \<epsilon> & \<epsilon> <= \<delta>_min ?qd -->
         (ALL qd1 qd2.
             (qd1, qd2) : set ?qd -->
             val qd1 \<epsilon> <= val qd2 \<epsilon>)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty))))]
