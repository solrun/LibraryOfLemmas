   [("Abstract_Linear_Poly.valuate_zero",
     "0 \<lbrace> ?v \<rbrace> = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Abstract_Linear_Poly.coeff_zero_simp", "coeff 0 ?v = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Abstract_Linear_Poly.coeff_Var1", "coeff (Var ?x) ?x = 1",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Abstract_Linear_Poly.vars_uminus", "vars (- ?p) = vars ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Abstract_Linear_Poly.set_vars_list", "set (vars_list ?lp) = vars ?lp",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Abstract_Linear_Poly.valuate_Var",
     "Var ?x \<lbrace> ?v \<rbrace> = ?v ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Abstract_Linear_Poly.vars_Var", "vars (Var ?x) = {?x}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Abstract_Linear_Poly.valuate_lp_monom_1",
     "lp_monom 1 ?x \<lbrace> ?v \<rbrace> = ?v ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Abstract_Linear_Poly.vars_empty_zero", "(vars ?lp = {}) = (?lp = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Abstract_Linear_Poly.valuate_uminus",
     "- ?p \<lbrace> ?v \<rbrace> = - ?p \<lbrace> ?v \<rbrace>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.coeff_uminus",
     "coeff (- ?lp) ?var = - coeff ?lp ?var",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.valuate_lp_monom",
     "lp_monom ?c ?x \<lbrace> ?v \<rbrace> = ?c * ?v ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_var 0, template_var 1)))),
    ("Abstract_Linear_Poly.valuate_scaleRat",
     "?c *R ?lp \<lbrace> ?v \<rbrace> = ?c *R ?lp \<lbrace> ?v \<rbrace>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.valuate_opposite_val",
     "?p \<lbrace> %x. - ?v x \<rbrace> = - ?p \<lbrace> ?v \<rbrace>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), t_empty),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.coeff_scaleRat",
     "coeff (?k *R ?lp1.0) ?var = ?k * coeff ?lp1.0 ?var",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.zero_coeff_zero",
     "(?p = 0) = (ALL v. coeff ?p v = 0)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Abstract_Linear_Poly.coeff_zero",
     "(coeff ?p ?x ~= 0) = (?x : vars ?p)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Abstract_Linear_Poly.coeff_lp_monom",
     "coeff (lp_monom ?c ?v) ?v' = (if ?v = ?v' then ?c else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Abstract_Linear_Poly.valuate_minus",
     "?p1.0 - ?p2.0 \<lbrace> ?v \<rbrace> =
      ?p1.0 \<lbrace> ?v \<rbrace> - ?p2.0 \<lbrace> ?v \<rbrace>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.valuate_add",
     "?p1.0 + ?p2.0 \<lbrace> ?v \<rbrace> =
      ?p1.0 \<lbrace> ?v \<rbrace> + ?p2.0 \<lbrace> ?v \<rbrace>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.coeff_minus",
     "coeff (?lp1.0 - ?lp2.0) ?var = coeff ?lp1.0 ?var - coeff ?lp2.0 ?var",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.coeff_plus",
     "coeff (?lp1.0 + ?lp2.0) ?var = coeff ?lp1.0 ?var + coeff ?lp2.0 ?var",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Abstract_Linear_Poly.coeff_sum",
     "coeff (sum ?f ?is) ?x = (SUM i:?is. coeff (?f i) ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Abstract_Linear_Poly.vars_lp_monom",
     "vars (lp_monom ?r ?x) = (if ?r = 0 then {} else {?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Abstract_Linear_Poly.poly_eq_iff",
     "(?p = ?q) = (ALL v. coeff ?p v = coeff ?q v)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Abstract_Linear_Poly.linear_poly_sum",
     "?p \<lbrace> ?v \<rbrace> = (SUM x:vars ?p. coeff ?p x *R ?v x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Abstract_Linear_Poly.valuate_sum",
     "sum ?f ?A \<lbrace> ?v \<rbrace> =
      (SUM x:?A. ?f x \<lbrace> ?v \<rbrace>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Abstract_Linear_Poly.valuate_diff",
     "?p \<lbrace> ?v1.0 \<rbrace> - ?p \<lbrace> ?v2.0 \<rbrace> =
      ?p \<lbrace> %x. ?v1.0 x - ?v2.0 x \<rbrace>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Abstract_Linear_Poly.max_var_code",
     "max_var ?lp =
      (let vl = vars_list ?lp
       in if vl = [] then 0 else foldl max (hd vl) (tl vl))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         t_empty)))]
