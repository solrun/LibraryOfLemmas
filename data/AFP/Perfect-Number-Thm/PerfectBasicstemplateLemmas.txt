   [("PerfectBasics.coprime_multiplicity",
     "[| prime ?p; 0 < ?m |]
      ==> coprime ?p (?m div ?p ^ multiplicity ?p ?m)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("PerfectBasics.simplify_sum_of_powers",
     "(?x - 1) * sum ((^) ?x) {0..?n} = ?x ^ (?n + 1) - 1",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_hole 5)),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 5))),
         template_hole 5))),
    ("PerfectBasics.exp_is_max_div",
     "[| ?m ~= (0::?'a); prime ?p |]
      ==> ~ ?p dvd ?m div ?p ^ multiplicity ?p ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 1))))
               )
           )))]
