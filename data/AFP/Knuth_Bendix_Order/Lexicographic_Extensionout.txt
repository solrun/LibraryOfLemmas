Loading theory "Draft.Order_Pair" (required by "Draft.Lexicographic_ExtensionTemplates" via "Draft.Lexicographic_Extension")
Loading theory "Draft.Templates" (required by "Draft.Lexicographic_ExtensionTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.076s elapsed time, 0.187s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Lexicographic_ExtensionTemplates")
locale pre_order_pair
  fixes S :: "('a * 'a) set"
    and NS :: "('a * 'a) set"
  assumes "pre_order_pair S NS"
locale compat_pair
  fixes S :: "('a * 'a) set"
    and NS :: "('a * 'a) set"
  assumes "compat_pair S NS"
locale order_pair
  fixes S :: "('a * 'a) set"
    and NS :: "('a * 'a) set"
  assumes "order_pair S NS"
locale SN_ars
  fixes S :: "('a * 'a) set"
  assumes "SN_ars S"
locale SN_pair
  fixes S :: "('a * 'a) set"
    and NS :: "('a * 'a) set"
  assumes "SN_pair S NS"
locale SN_order_pair
  fixes S :: "('a * 'a) set"
    and NS :: "('a * 'a) set"
  assumes "SN_order_pair S NS"
### theory "Draft.Order_Pair"
### 0.193s elapsed time, 0.435s cpu time, 0.029s GC time
Loading theory "Draft.Lexicographic_Extension" (required by "Draft.Lexicographic_ExtensionTemplates")
Found termination order: "{}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.606s elapsed time, 1.259s cpu time, 0.118s GC time
### theory "Draft.Lexicographic_Extension"
### 0.596s elapsed time, 1.120s cpu time, 0.090s GC time
Loading theory "Draft.Lexicographic_ExtensionTemplates"
val templateLemmas =
   [("Lexicographic_Extension.lex_ext_least_1",
     "snd (lex_ext ?f ?m ?xs [])",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0))
         )),
    ("Lexicographic_Extension.lex_ext_least_2",
     "~ fst (lex_ext ?f ?m [] ?ys)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_hole 0),
                 template_var 0))
             )
         )),
    ("Lexicographic_Extension.lex_ext_unbounded_stri_imp_nstri",
     "fst (lex_ext_unbounded ?f ?xs ?ys) ==>
      snd (lex_ext_unbounded ?f ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Lexicographic_Extension.lex_ext_stri_imp_nstri",
     "fst (lex_ext ?f ?m ?xs ?ys) ==> snd (lex_ext ?f ?m ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Lexicographic_Extension.lex_two_refl",
     "[| refl ?ns1.0; refl ?ns2.0 |]
      ==> refl (lex_two ?s1.0 ?ns1.0 ?ns2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Lexicographic_Extension.lex_two_SN_order_pair",
     "[| SN_order_pair ?s1.0 ?ns1.0; SN_order_pair ?s2.0 ?ns2.0 |]
      ==> SN_order_pair (lex_two ?s1.0 ?ns1.0 ?s2.0)
           (lex_two ?s1.0 ?ns1.0 ?ns2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Lexicographic_Extension.lex_two_order_pair",
     "[| order_pair ?s1.0 ?ns1.0; order_pair ?s2.0 ?ns2.0 |]
      ==> order_pair (lex_two ?s1.0 ?ns1.0 ?s2.0)
           (lex_two ?s1.0 ?ns1.0 ?ns2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Lexicographic_Extension.lex_ext_to_lex_ext_unbounded",
     "[| length ?xs <= ?n; length ?ys <= ?n |]
      ==> lex_ext ?f ?n ?xs ?ys = lex_ext_unbounded ?f ?xs ?ys",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 1)))),
    ("Lexicographic_Extension.lex_two",
     "[| ?ns O ?s <= ?s; SN ?s; SN ?s2.0 |] ==> SN (lex_two ?s ?ns ?s2.0)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Lexicographic_Extension.all_nstri_imp_lex_nstri",
     "[| ALL i<length ?ys. snd (?f (?xs ! i) (?ys ! i));
         length ?ys <= length ?xs;
         length ?xs = length ?ys | length ?ys <= ?m |]
      ==> snd (lex_ext ?f ?m ?xs ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 6, template_var 1)),
                  template_app (template_hole 6, template_var 3))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 6, template_var 3)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1),
               template_var 3))
           ))),
    ("Lexicographic_Extension.lex_ext_SN_2",
     "[| !!x y z. [| snd (?g x y); fst (?g y z) |] ==> fst (?g x z);
         SN {(s, t). fst (?g s t)} |]
      ==> SN {(ys, xs). fst (lex_ext ?g ?m ys xs)}",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, t_empty))),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))),
             template_hole 0)
           ))),
    ("Lexicographic_Extension.lex_two_compat2",
     "[| ?ns1.0 O ?s1.0 <= ?s1.0; ?s1.0 O ?ns1.0 <= ?s1.0;
         ?s1.0 O ?s1.0 <= ?s1.0; ?ns1.0 O ?ns1.0 <= ?ns1.0;
         ?ns2.0 O ?s2.0 <= ?s2.0 |]
      ==> lex_two ?s1.0 ?ns1.0 ?ns2.0 O lex_two ?s1.0 ?ns1.0 ?s2.0
          <= lex_two ?s1.0 ?ns1.0 ?s2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 2),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 3),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0)))),
    ("Lexicographic_Extension.lex_two_compat'2",
     "[| ?ns1.0 O ?s1.0 <= ?s1.0; ?s1.0 O ?ns1.0 <= ?s1.0;
         ?s1.0 O ?s1.0 <= ?s1.0; ?ns1.0 O ?ns1.0 <= ?ns1.0;
         ?s2.0 O ?ns2.0 <= ?s2.0 |]
      ==> lex_two ?s1.0 ?ns1.0 ?s2.0 O lex_two ?s1.0 ?ns1.0 ?ns2.0
          <= lex_two ?s1.0 ?ns1.0 ?s2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 2),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 3),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 1)))),
    ("Lexicographic_Extension.lex_ext_unbounded_cong",
     "[| ?as = ?as'; ?bs = ?bs';
         !!i. [| i < length ?as'; i < length ?bs' |]
              ==> ?f (?as' ! i) (?bs' ! i) = ?g (?as' ! i) (?bs' ! i) |]
      ==> lex_ext_unbounded ?f ?as ?bs = lex_ext_unbounded ?g ?as' ?bs'",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2)))),
    ("Lexicographic_Extension.lex_ext_SN",
     "(!!x y z. [| snd (?g x y); fst (?g y z) |] ==> fst (?g x z)) ==>
      SN {(ys, xs).
          (ALL y:set ys. SN_on {(s, t). fst (?g s t)} {y}) &
          fst (lex_ext ?g ?m ys xs)}",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app (template_hole 10, t_empty))),
             template_hole 0)
           ))),
    ("Lexicographic_Extension.lex_ext_unbounded_total",
     "[| ALL (s, t):set (zip ?ss ?ts). s = t | fst (?f s t) | fst (?f t s);
         !!t. snd (?f t t); length ?ss = length ?ts |]
      ==> ?ss = ?ts |
          fst (lex_ext_unbounded ?f ?ss ?ts) |
          fst (lex_ext_unbounded ?f ?ts ?ss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1))),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2),
                     template_var 1))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 2))))
           ))),
    ("Lexicographic_Extension.lex_ext_total",
     "[| ALL (s, t):set (zip ?ss ?ts). s = t | fst (?f s t) | fst (?f t s);
         !!t. snd (?f t t); length ?ss = length ?ts |]
      ==> ?ss = ?ts |
          fst (lex_ext ?f ?n ?ss ?ts) | fst (lex_ext ?f ?n ?ts ?ss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2))),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0),
                       template_var 3),
                     template_var 2))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0),
                     template_var 2),
                   template_var 3))))
           ))),
    ("Lexicographic_Extension.lex_ext_cong",
     "[| length ?xs1.0 = length ?ys1.0; ?m1.0 = ?m2.0;
         length ?xs2.0 = length ?ys2.0;
         !!i. [| i < length ?ys1.0; i < length ?ys2.0 |]
              ==> ?f (?xs1.0 ! i) (?xs2.0 ! i) =
                  ?g (?ys1.0 ! i) (?ys2.0 ! i) |]
      ==> lex_ext ?f ?m1.0 ?xs1.0 ?xs2.0 = lex_ext ?g ?m2.0 ?ys1.0 ?ys2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 7),
          template_app (template_hole 7, template_var 6)),
        template_equation (template_var 5, template_var 4),
        template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 5),
             template_var 7),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 6),
           template_var 2)))),
    ("Lexicographic_Extension.lex_two_compat",
     "[| ?ns1.0 O ?s1.0 <= ?s1.0; ?s1.0 O ?ns1.0 <= ?s1.0;
         ?s1.0 O ?s1.0 <= ?s1.0; ?ns1.0 O ?ns1.0 <= ?ns1.0;
         ?ns2.0 O ?s2.0 <= ?s2.0;
         (?ab1.0, ?ab2.0) : lex_two ?s1.0 ?ns1.0 ?ns2.0;
         (?ab2.0, ?ab3.0) : lex_two ?s1.0 ?ns1.0 ?s2.0 |]
      ==> (?ab1.0, ?ab3.0) : lex_two ?s1.0 ?ns1.0 ?s2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 6), template_var 5),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 5), template_var 6),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 5), template_var 5),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 6), template_var 6),
          template_var 6),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 6),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 6),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 6),
               template_var 3))
           ))),
    ("Lexicographic_Extension.lex_two_compat'",
     "[| ?ns1.0 O ?s1.0 <= ?s1.0; ?s1.0 O ?ns1.0 <= ?s1.0;
         ?s1.0 O ?s1.0 <= ?s1.0; ?ns1.0 O ?ns1.0 <= ?ns1.0;
         ?s2.0 O ?ns2.0 <= ?s2.0;
         (?ab1.0, ?ab2.0) : lex_two ?s1.0 ?ns1.0 ?s2.0;
         (?ab2.0, ?ab3.0) : lex_two ?s1.0 ?ns1.0 ?ns2.0 |]
      ==> (?ab1.0, ?ab3.0) : lex_two ?s1.0 ?ns1.0 ?s2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 6), template_var 5),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 5), template_var 6),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 5), template_var 5),
          template_var 5),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 6), template_var 6),
          template_var 6),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 6),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 6),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 6),
               template_var 4))
           ))),
    ("Lexicographic_Extension.lex_ext_unbounded_mono",
     "[| !!i. [| i < length ?xs; i < length ?ys;
                 fst (?P (?xs ! i) (?ys ! i)) |]
              ==> fst (?P' (?xs ! i) (?ys ! i));
         !!i. [| i < length ?xs; i < length ?ys;
                 snd (?P (?xs ! i) (?ys ! i)) |]
              ==> snd (?P' (?xs ! i) (?ys ! i)) |]
      ==> (fst (lex_ext_unbounded ?P ?xs ?ys) -->
           fst (lex_ext_unbounded ?P' ?xs ?ys)) &
          (snd (lex_ext_unbounded ?P ?xs ?ys) -->
           snd (lex_ext_unbounded ?P' ?xs ?ys))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 3),
                       template_var 2))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3),
                     template_var 2))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 2))))
           ))),
    ("Lexicographic_Extension.lex_ext_unbounded_map_S",
     "[| !!i. [| i < length ?ss; i < length ?ts;
                 fst (?r (?ss ! i) (?ts ! i)) |]
              ==> fst (?r (map ?f ?ss ! i) (map ?f ?ts ! i));
         !!i. [| i < length ?ss; i < length ?ts;
                 snd (?r (?ss ! i) (?ts ! i)) |]
              ==> snd (?r (map ?f ?ss ! i) (map ?f ?ts ! i));
         fst (lex_ext_unbounded ?r ?ss ?ts) |]
      ==> fst (lex_ext_unbounded ?r (map ?f ?ss) (map ?f ?ts))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)))
           ))),
    ("Lexicographic_Extension.lex_ext_unbounded_map_NS",
     "[| !!i. [| i < length ?ss; i < length ?ts;
                 fst (?r (?ss ! i) (?ts ! i)) |]
              ==> fst (?r (map ?f ?ss ! i) (map ?f ?ts ! i));
         !!i. [| i < length ?ss; i < length ?ts;
                 snd (?r (?ss ! i) (?ts ! i)) |]
              ==> snd (?r (map ?f ?ss ! i) (map ?f ?ts ! i));
         snd (lex_ext_unbounded ?r ?ss ?ts) |]
      ==> snd (lex_ext_unbounded ?r (map ?f ?ss) (map ?f ?ts))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)))
           ))),
    ("Lexicographic_Extension.lex_ext_unbounded_map",
     "[| !!i. [| i < length ?ss; i < length ?ts;
                 fst (?r (?ss ! i) (?ts ! i)) |]
              ==> fst (?r (map ?f ?ss ! i) (map ?f ?ts ! i));
         !!i. [| i < length ?ss; i < length ?ts;
                 snd (?r (?ss ! i) (?ts ! i)) |]
              ==> snd (?r (map ?f ?ss ! i) (map ?f ?ts ! i)) |]
      ==> (fst (lex_ext_unbounded ?r ?ss ?ts) -->
           fst (lex_ext_unbounded ?r (map ?f ?ss) (map ?f ?ts))) &
          (snd (lex_ext_unbounded ?r ?ss ?ts) -->
           snd (lex_ext_unbounded ?r (map ?f ?ss) (map ?f ?ts)))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 3),
                       template_var 2))),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_var 3)),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 2))))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3),
                     template_var 2))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)))))
           ))),
    ("Lexicographic_Extension.lex_ext_unbounded_iff",
     "lex_ext_unbounded ?f ?xs ?ys =
      ((EX i<length ?xs.
           i < length ?ys &
           (ALL j<i. snd (?f (?xs ! j) (?ys ! j))) &
           fst (?f (?xs ! i) (?ys ! i))) |
       (ALL i<length ?ys. snd (?f (?xs ! i) (?ys ! i))) &
       length ?ys < length ?xs,
       (EX i<length ?xs.
           i < length ?ys &
           (ALL j<i. snd (?f (?xs ! j) (?ys ! j))) &
           fst (?f (?xs ! i) (?ys ! i))) |
       (ALL i<length ?ys. snd (?f (?xs ! i) (?ys ! i))) &
       length ?ys <= length ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 5, t_empty)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app (template_hole 6, template_var 1))))),
         template_app
          (template_app
            (template_hole 10, template_app (template_hole 9, t_empty)),
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 5, t_empty)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 0)),
               template_app (template_hole 6, template_var 1))))))),
    ("Lexicographic_Extension.lex_ext_iff",
     "lex_ext ?f ?m ?xs ?ys =
      ((length ?xs = length ?ys | length ?ys <= ?m) &
       ((EX i<length ?xs.
            i < length ?ys &
            (ALL j<i. snd (?f (?xs ! j) (?ys ! j))) &
            fst (?f (?xs ! i) (?ys ! i))) |
        (ALL i<length ?ys. snd (?f (?xs ! i) (?ys ! i))) &
        length ?ys < length ?xs),
       (length ?xs = length ?ys | length ?ys <= ?m) &
       ((EX i<length ?xs.
            i < length ?ys &
            (ALL j<i. snd (?f (?xs ! j) (?ys ! j))) &
            fst (?f (?xs ! i) (?ys ! i))) |
        (ALL i<length ?ys. snd (?f (?xs ! i) (?ys ! i))) &
        length ?ys <= length ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 8, template_var 1)),
                         template_app (template_hole 8, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 8, template_var 0)),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 6, t_empty)),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 4, t_empty)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 8, template_var 0)),
                       template_app (template_hole 8, template_var 1)))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 1)),
                       template_app (template_hole 8, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 8, template_var 0)),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 6, t_empty)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 4, t_empty)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 8, template_var 0)),
                     template_app (template_hole 8, template_var 1))))))
           ))),
    ("Lexicographic_Extension.lex_ext_compat",
     "(!!s t u.
          [| s : set ?ss; t : set ?ts; u : set ?us |]
          ==> (snd (?f s t) & fst (?f t u) --> fst (?f s u)) &
              (fst (?f s t) & snd (?f t u) --> fst (?f s u)) &
              (snd (?f s t) & snd (?f t u) --> snd (?f s u)) &
              (fst (?f s t) & fst (?f t u) --> fst (?f s u))) ==>
      (snd (lex_ext ?f ?n ?ss ?ts) & fst (lex_ext ?f ?n ?ts ?us) -->
       fst (lex_ext ?f ?n ?ss ?us)) &
      (fst (lex_ext ?f ?n ?ss ?ts) & snd (lex_ext ?f ?n ?ts ?us) -->
       fst (lex_ext ?f ?n ?ss ?us)) &
      (snd (lex_ext ?f ?n ?ss ?ts) & snd (lex_ext ?f ?n ?ts ?us) -->
       snd (lex_ext ?f ?n ?ss ?us)) &
      (fst (lex_ext ?f ?n ?ss ?ts) & fst (lex_ext ?f ?n ?ts ?us) -->
       fst (lex_ext ?f ?n ?ss ?us))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0),
                             template_var 4),
                           template_var 3))),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0),
                           template_var 3),
                         template_var 2)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0),
                       template_var 4),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0),
                               template_var 4),
                             template_var 3))),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0),
                             template_var 3),
                           template_var 2)))),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0),
                         template_var 4),
                       template_var 2)))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 0, template_var 1),
                                   template_var 0),
                                 template_var 4),
                               template_var 3))),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0),
                               template_var 3),
                             template_var 2)))),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0),
                           template_var 4),
                         template_var 2)))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0),
                               template_var 4),
                             template_var 3))),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0),
                             template_var 3),
                           template_var 2)))),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0),
                         template_var 4),
                       template_var 2))))))
           )))]:
   (string * thm * template) list
### theory "Draft.Lexicographic_ExtensionTemplates"
### 0.378s elapsed time, 0.531s cpu time, 0.084s GC time
val it = (): unit
