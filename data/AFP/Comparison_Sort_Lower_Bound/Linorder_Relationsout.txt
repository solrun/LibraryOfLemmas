Loading theory "HOL-Library.Cancellation" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations" via "HOL-Combinatorics.Multiset_Permutations" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations" via "HOL-Combinatorics.Multiset_Permutations" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.FuncSet" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations" via "HOL-Combinatorics.Multiset_Permutations" via "HOL-Combinatorics.Permutations" via "HOL-Library.Disjoint_Sets")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Combinatorics.Transposition"
### 0.148s elapsed time, 0.617s cpu time, 0.035s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.623s cpu time, 0.035s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.245s elapsed time, 0.964s cpu time, 0.069s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.FuncSet"
### 0.407s elapsed time, 1.633s cpu time, 0.104s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations" via "HOL-Combinatorics.Multiset_Permutations" via "HOL-Combinatorics.Permutations")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Nat_Bijection"
### 0.303s elapsed time, 1.199s cpu time, 0.069s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.561s elapsed time, 2.237s cpu time, 0.196s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations" via "HOL-Combinatorics.Multiset_Permutations" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Disjoint_Sets"
### 0.301s elapsed time, 1.169s cpu time, 0.235s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.135s elapsed time, 4.305s cpu time, 1.025s GC time
Loading theory "List-Index.List_Index" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations")
Found termination order: "size <*mlex*> {}"
consts
  find_index :: "('a => bool) => 'a list => nat"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.035s elapsed time, 3.920s cpu time, 0.963s GC time
Found termination order: "size <*mlex*> {}"
consts
  map_index' :: "nat => (nat => 'a => 'b) => 'a list => 'b list"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
consts
  insert_nth :: "nat => 'a => 'a list => 'a list"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "List-Index.List_Index"
### 0.395s elapsed time, 1.326s cpu time, 0.150s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.163s elapsed time, 7.154s cpu time, 1.462s GC time
Loading theory "Draft.Templates" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.ExtrEqs")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.057s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Linorder_RelationsMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.545s elapsed time, 1.147s cpu time, 0.130s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.213s elapsed time, 8.367s cpu time, 1.611s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations" via "HOL-Combinatorics.Multiset_Permutations")
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 1.008s elapsed time, 1.831s cpu time, 1.059s GC time
Loading theory "HOL-Combinatorics.Multiset_Permutations" (required by "Draft.Linorder_RelationsMoreTemplates" via "Draft.Linorder_Relations")
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
"{[4, 3, 2, 1], [3, 4, 2, 1], [4, 2, 3, 1], [2, 4, 3, 1], [3, 2, 4, 1],
  [2, 3, 4, 1], [4, 3, 1, 2], [3, 4, 1, 2], [4, 1, 3, 2], [1, 4, 3, 2],
  [3, 1, 4, 2], [1, 3, 4, 2], [4, 2, 1, 3], [2, 4, 1, 3], [4, 1, 2, 3],
  [1, 4, 2, 3], [2, 1, 4, 3], [1, 2, 4, 3], [3, 2, 1, 4], [2, 3, 1, 4],
  [3, 1, 2, 4], [1, 3, 2, 4], [2, 1, 3, 4], [1, 2, 3, 4]}"
  :: "int list set"
### theory "HOL-Combinatorics.Multiset_Permutations"
### 0.591s elapsed time, 0.834s cpu time, 0.118s GC time
Loading theory "Draft.Linorder_Relations" (required by "Draft.Linorder_RelationsMoreTemplates")
"{''dcba'', ''cdba'', ''dbca'', ''bdca'', ''cbda'', ''bcda'', ''dcab'',
  ''cdab'', ''dacb'', ''adcb'', ''cadb'', ''acdb'', ''dbac'', ''bdac'',
  ''dabc'', ''adbc'', ''badc'', ''abdc'', ''cbad'', ''bcad'', ''cabd'',
  ''acbd'', ''bacd'', ''abcd''}"
  :: "char list set"
Proofs for inductive predicate(s) "sorted_wrt"
  Proving monotonicity ...
consts
  insert_wrt :: "('a * 'a) set => 'a => 'a list => 'a list"
### theory "Draft.Linorder_Relations"
### 0.392s elapsed time, 0.592s cpu time, 0.082s GC time
Loading theory "Draft.Linorder_RelationsMoreTemplates"
val templateLemmas =
   [("Linorder_Relations.sorted_wrt_Nil",
     "Linorder_Relations.sorted_wrt ?R []",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Linorder_Relations.sorted_wrt_singleton",
     "Linorder_Relations.sorted_wrt ?R [?x]",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Linorder_Relations.linorder_rank_empty", "linorder_rank ?R {} ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Linorder_Relations.length_insort_wrt",
     "length (insort_wrt ?R ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Linorder_Relations.set_insort_wrt",
     "set (insort_wrt ?R ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Linorder_Relations.distinct_insort_wrt",
     "distinct (insort_wrt ?R ?xs) = distinct ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Linorder_Relations.mset_remdups",
     "mset (remdups ?xs) = mset_set (set ?xs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Linorder_Relations.mset_insort_wrt",
     "mset (insort_wrt ?R ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Linorder_Relations.sorted_wrt_linorder_of_list",
     "distinct ?xs ==>
      Linorder_Relations.sorted_wrt (linorder_of_list ?xs) ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Linorder_Relations.length_insert_wrt",
     "length (insert_wrt ?R ?x ?xs) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Linorder_Relations.linorder_linorder_of_list",
     "distinct ?xs ==> linorder_on (set ?xs) (linorder_of_list ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Linorder_Relations.set_insert_wrt",
     "set (insert_wrt ?R ?x ?xs) = insert ?x (set ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Linorder_Relations.mset_insert_wrt",
     "mset (insert_wrt ?R ?x ?xs) = add_mset ?x (mset ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Linorder_Relations.distinct_count_atmost_1'",
     "distinct ?xs = (ALL a. count (mset ?xs) a <= 1)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Linorder_Relations.linorder_rank_le",
     "finite ?A ==> linorder_rank ?R ?A ?x <= card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Linorder_Relations.mset_eq_imp_distinct_iff",
     "mset ?xs = mset ?ys ==> distinct ?xs = distinct ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Linorder_Relations.bij_betw_linorder_of_list",
     "finite ?A ==>
      bij_betw linorder_of_list (permutations_of_set ?A)
       {R. linorder_on ?A R}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Linorder_Relations.distinct_mset_mono",
     "[| distinct ?ys; mset ?xs <=# mset ?ys |] ==> distinct ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 2, template_var 0)))),
    ("Linorder_Relations.total_on_subset",
     "[| total_on ?B ?R; ?A <= ?B |] ==> total_on ?A ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Linorder_Relations.card_finite_linorders",
     "finite ?A ==> card {R. linorder_on ?A R} = fact (card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Linorder_Relations.linorder_rank_less",
     "[| finite ?A; ?x : ?A |] ==> linorder_rank ?R ?A ?x < card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("Linorder_Relations.sorted_wrt_insort",
     "[| linorder_on ?A ?R; set ?xs <= ?A |]
      ==> Linorder_Relations.sorted_wrt ?R (insort_wrt ?R ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linorder_Relations.linorder_sorted_wrt_list_of_set",
     "[| linorder_on ?A ?R; finite ?B; ?B <= ?A |]
      ==> distinct (sorted_wrt_list_of_set ?R ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linorder_Relations.sorted_wrt_Cons",
     "Linorder_Relations.sorted_wrt ?R (?x # ?xs) =
      ((ALL y:set ?xs. (?x, y) : ?R) &
       Linorder_Relations.sorted_wrt ?R ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty)),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 0)))),
    ("Linorder_Relations.linorder_sorted_wrt_list_of_set",
     "[| linorder_on ?A ?R; finite ?B; ?B <= ?A |]
      ==> Linorder_Relations.sorted_wrt ?R (sorted_wrt_list_of_set ?R ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linorder_Relations.linorder_rank_singleton",
     "linorder_rank ?R {?y} ?x =
      (if ?x ~= ?y & (?y, ?x) : ?R then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_var 1))),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0)),
                     template_var 2))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Linorder_Relations.sorted_wrt_list_set",
     "[| linorder_on ?A ?R; set ?xs <= ?A |]
      ==> sorted_wrt_list_of_set ?R (set ?xs) =
          insort_wrt ?R (remdups ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Linorder_Relations.linorder_sorted_wrt_list_of_set",
     "[| linorder_on ?A ?R; finite ?B; ?B <= ?A |]
      ==> set (sorted_wrt_list_of_set ?R ?B) = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Linorder_Relations.bij_betw_linorder_rank",
     "[| linorder_on ?B ?R; finite ?A; ?A <= ?B |]
      ==> bij_betw (linorder_rank ?R ?A) ?A {..<card ?A}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Linorder_Relations.sorted_wrt_many",
     "trans ?R ==>
      Linorder_Relations.sorted_wrt ?R (?x # ?y # ?xs) =
      ((?x, ?y) : ?R & Linorder_Relations.sorted_wrt ?R (?y # ?xs))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("Linorder_Relations.sorted_wrt_insert_wrt",
     "[| linorder_on ?A ?R; set (?x # ?xs) <= ?A;
         Linorder_Relations.sorted_wrt ?R ?xs |]
      ==> Linorder_Relations.sorted_wrt ?R (insert_wrt ?R ?x ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Linorder_Relations.sorted_wrt_snoc",
     "[| Linorder_Relations.sorted_wrt ?R ?xs; (last ?xs, ?y) : ?R;
         trans ?R |]
      ==> Linorder_Relations.sorted_wrt ?R (?xs @ [?y])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_var 0)),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Linorder_Relations.sorted_wrt_linorder_unique",
     "[| linorder_on ?A ?R; mset ?xs = mset ?ys;
         Linorder_Relations.sorted_wrt ?R ?xs;
         Linorder_Relations.sorted_wrt ?R ?ys |]
      ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Linorder_Relations.sorted_wrt_conv_nth",
     "Linorder_Relations.sorted_wrt ?R ?xs =
      (ALL i j. i < j & j < length ?xs --> (?xs ! i, ?xs ! j) : ?R)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Linorder_Relations.linorder_sorted_wrt_exists",
     "[| linorder_on ?A ?R; finite ?B; ?B <= ?A |]
      ==> EX xs.
             set xs = ?B &
             distinct xs & Linorder_Relations.sorted_wrt ?R xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Linorder_Relations.linorder_rank_mono",
     "[| linorder_on ?B ?R; finite ?A; ?A <= ?B; (?x, ?y) : ?R |]
      ==> linorder_rank ?R ?A ?x <= linorder_rank ?R ?A ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Linorder_Relations.sorted_wrt_imp_le_last",
     "[| Linorder_Relations.sorted_wrt ?R ?xs; ?xs ~= []; ?x : set ?xs;
         ?x ~= last ?xs |]
      ==> (?x, last ?xs) : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 2, template_var 1))),
             template_var 2)
           ))),
    ("Linorder_Relations.sorted_wrt_list_of_set_eqI",
     "[| linorder_on ?B ?R; ?A <= ?B; set ?xs = ?A; distinct ?xs;
         Linorder_Relations.sorted_wrt ?R ?xs |]
      ==> sorted_wrt_list_of_set ?R ?A = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_equation
         (template_app (template_hole 4, template_var 0), template_var 1),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Linorder_Relations.linorder_rank_union",
     "[| finite ?A; finite ?B; ?A Int ?B = {} |]
      ==> linorder_rank ?R (?A Un ?B) ?x =
          linorder_rank ?R ?A ?x + linorder_rank ?R ?B ?x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 3),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2),
             template_var 0))))),
    ("Linorder_Relations.linorder_rank_insert",
     "[| finite ?A; ?y ~: ?A |]
      ==> linorder_rank ?R (insert ?y ?A) ?x =
          (if ?x ~= ?y & (?y, ?x) : ?R then 1 else 0) +
          linorder_rank ?R ?A ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 3)
                )
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_var 3)),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 4, template_var 0),
                               template_var 2))),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_var 2),
                               template_var 0)),
                           template_var 1))),
                     template_hole 1),
                   template_hole 0)),
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 3),
                 template_var 0))
             )))),
    ("Linorder_Relations.linorder_rank_set_sorted_wrt",
     "[| linorder_on ?B ?R; set ?xs <= ?B;
         Linorder_Relations.sorted_wrt ?R ?xs; ?x : set ?xs; distinct ?xs |]
      ==> linorder_rank ?R (set ?xs) ?x = index ?xs ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 6, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Linorder_Relations.linorder_rank_eq_iff",
     "[| linorder_on ?B ?R; finite ?A; ?A <= ?B; ?x : ?A; ?y : ?A |]
      ==> (linorder_rank ?R ?A ?x = linorder_rank ?R ?A ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Linorder_Relations.linorder_rank_le_iff",
     "[| linorder_on ?B ?R; finite ?A; ?A <= ?B; ?x : ?A; ?y : ?A |]
      ==> (linorder_rank ?R ?A ?x <= linorder_rank ?R ?A ?y) =
          ((?x, ?y) : ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3)))),
    ("Linorder_Relations.sorted_wrt_linorder_index_le_iff",
     "[| linorder_on ?A ?R; set ?xs <= ?A;
         Linorder_Relations.sorted_wrt ?R ?xs; ?x : set ?xs; ?y : set ?xs |]
      ==> (index ?xs ?x <= index ?xs ?y) = ((?x, ?y) : ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 7, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3)))),
    ("Linorder_Relations.linorder_rank_strict_mono",
     "[| linorder_on ?B ?R; finite ?A; ?A <= ?B; ?y : ?A; (?y, ?x) : ?R;
         ?x ~= ?y |]
      ==> linorder_rank ?R ?A ?y < linorder_rank ?R ?A ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 3)
            ),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Linorder_Relations.sorted_wrt_append",
     "[| Linorder_Relations.sorted_wrt ?R ?xs;
         Linorder_Relations.sorted_wrt ?R ?ys;
         !!x y. [| x : set ?xs; y : set ?ys |] ==> (x, y) : ?R; trans ?R |]
      ==> Linorder_Relations.sorted_wrt ?R (?xs @ ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linorder_Relations.sorted_wrt_linorder_index_less_iff",
     "[| linorder_on ?A ?R; set ?xs <= ?A;
         Linorder_Relations.sorted_wrt ?R ?xs; ?x : set ?xs; ?y : set ?xs |]
      ==> (index ?xs ?x < index ?xs ?y) = ((?y, ?x) ~: ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 8, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 3))))),
    ("Linorder_Relations.sorted_wrt_linorder_imp_index_le",
     "[| linorder_on ?A ?R; set ?xs <= ?A;
         Linorder_Relations.sorted_wrt ?R ?xs; ?x : set ?xs; ?y : set ?xs;
         (?x, ?y) : ?R |]
      ==> index ?xs ?x <= index ?xs ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Linorder_Relations.sorted_wrt_linorder_index_le_imp",
     "[| linorder_on ?A ?R; set ?xs <= ?A;
         Linorder_Relations.sorted_wrt ?R ?xs; ?x : set ?xs; ?y : set ?xs;
         index ?xs ?x <= index ?xs ?y |]
      ==> (?x, ?y) : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("Linorder_Relations.linorder_on_cases",
     "[| linorder_on ?A ?R; ?x : ?A; ?y : ?A |]
      ==> ?x = ?y |
          (?x, ?y) : ?R & (?y, ?x) ~: ?R | (?y, ?x) : ?R & (?x, ?y) ~: ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0)),
                       template_var 2)),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 0),
                           template_var 1)),
                       template_var 2)))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1)),
                     template_var 2)),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0)),
                     template_var 2)))))
           ))),
    ("Linorder_Relations.sorted_wrt_distinct_linorder_nth",
     "[| linorder_on ?A ?R; set ?xs <= ?A;
         Linorder_Relations.sorted_wrt ?R ?xs; distinct ?xs;
         ?i < length ?xs; ?j < length ?xs |]
      ==> ((?xs ! ?i, ?xs ! ?j) : ?R) = (?i <= ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 2),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_var 3),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Linorder_RelationsMoreTemplates"
### 0.384s elapsed time, 0.546s cpu time, 0.052s GC time
val it = (): unit
