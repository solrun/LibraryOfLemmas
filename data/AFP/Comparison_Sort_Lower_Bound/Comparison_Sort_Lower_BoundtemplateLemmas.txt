   [("Comparison_Sort_Lower_Bound.count_wc_queries_empty",
     "count_wc_queries {} ?sorter = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Comparison_Sort_Lower_Bound.card_range_eval_sorter",
     "finite ?Rs ==>
      card ((%R. eval_sorter R ?e) ` ?Rs) <= 2 ^ count_wc_queries ?Rs ?e",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, t_empty), template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Comparison_Sort_Lower_Bound.count_wc_queries_aux",
     "[| !!R. R : ?Rs ==> ?sorter = ?sorter' R; ?Rs <= ?Rs'; finite ?Rs' |]
      ==> count_wc_queries ?Rs ?sorter
          <= (MAX R\<in>?Rs'. count_queries R (?sorter' R))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Comparison_Sort_Lower_Bound.two_power_count_queries_ge",
     "[| distinct ?xs;
         !!R. linorder_on (set ?xs) R ==>
              is_sorting R ?xs (eval_sorter R ?sorter) |]
      ==> fact (length ?xs)
          <= 2 ^ count_wc_queries {R. linorder_on (set ?xs) R} ?sorter",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0))))),
    ("Comparison_Sort_Lower_Bound.count_queries_ge",
     "[| distinct ?xs;
         !!R. linorder_on (set ?xs) R ==>
              is_sorting R ?xs (eval_sorter R ?sorter) |]
      ==> log 2 (fact (length ?xs))
          <= real (count_wc_queries {R. linorder_on (set ?xs) R} ?sorter)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0))))),
    ("Comparison_Sort_Lower_Bound.count_queries_bigomega",
     "(!!n R.
          linorder_on {..<n} R ==>
          is_sorting R [0..<n] (eval_sorter R (?sorter n))) ==>
      (%x. real (count_wc_queries {R. linorder_on {..<x} R} (?sorter x)))
      : \<Omega>(%x. real x * ln (real x))",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, t_empty),
             template_app
              (template_app (template_hole 3, template_hole 2), t_empty))
           )))]
