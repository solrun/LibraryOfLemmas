   [("Three_Circles.circle_diam_rescale",
     "?l < ?r ==>
      circle_diam ?l ?r =
      (%x. x * (complex_of_real ?r - complex_of_real ?l) +
           complex_of_real ?l) `
      circle_01_diam",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)))),
    ("Three_Circles.lower_circle_rescale",
     "?l < ?r ==>
      lower_circle ?l ?r =
      (%x. x * (complex_of_real ?r - complex_of_real ?l) +
           complex_of_real ?l) `
      lower_circle_01",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)))),
    ("Three_Circles.upper_circle_rescale",
     "?l < ?r ==>
      upper_circle ?l ?r =
      (%x. x * (complex_of_real ?r - complex_of_real ?l) +
           complex_of_real ?l) `
      upper_circle_01",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)))),
    ("Three_Circles.one_circle_01",
     "[| degree ?P <= ?p; ?P ~= 0;
         proots_count (map_poly complex_of_real ?P) circle_01_diam = 0 |]
      ==> Bernstein_changes_01 ?p ?P = 0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1)),
            template_hole 4),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Three_Circles.descartes_sign_zero",
     "[| !!x. poly (map_poly complex_of_real ?p) x = 0 ==> Re x <= 0;
         monic ?p |]
      ==> 0 <= coeff ?p ?i",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_app (template_hole 1, template_var 1)),
          template_hole 0)],
       template_inequation
        (less_equals, template_hole 4,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Three_Circles.two_circles_01",
     "[| degree ?P <= ?p; ?P ~= 0; ?p ~= 0;
         proots_count (map_poly complex_of_real ?P)
          (upper_circle_01 Un lower_circle_01) =
         1 |]
      ==> Bernstein_changes_01 ?p ?P = 1",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 15, template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_negation
         (template_equation (template_var 0, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 1)),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Three_Circles.one_circle",
     "[| ?l < ?r;
         proots_count (map_poly complex_of_real ?P) (circle_diam ?l ?r) = 0;
         ?P ~= 0; degree ?P <= ?p |]
      ==> Bernstein_changes ?p ?l ?r ?P = 0",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 1)),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)),
          template_hole 8),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3),
             template_var 2),
           template_var 1),
         template_hole 0))),
    ("Three_Circles.three_circles",
     "[| ?l < ?r; degree ?P <= ?p; ?P ~= 0; ?p ~= 0;
         proots_count (map_poly complex_of_real ?P) (circle_diam ?l ?r) =
         0 |]
      ==> Bernstein_changes ?p ?l ?r ?P = 0",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1)),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_hole 7)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3),
             template_var 2),
           template_var 1),
         template_hole 0))),
    ("Three_Circles.two_circles",
     "[| ?l < ?r; degree ?P <= ?p; ?P ~= 0; ?p ~= 0;
         proots_count (map_poly complex_of_real ?P)
          (upper_circle ?l ?r Un lower_circle ?l ?r) =
         1 |]
      ==> Bernstein_changes ?p ?l ?r ?P = 1",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_negation
         (template_equation (template_var 0, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 1)),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3),
             template_var 2),
           template_var 1),
         template_hole 0)))]
