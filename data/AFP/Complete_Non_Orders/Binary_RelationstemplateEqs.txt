   [("Binary_Relations.asympartp_sympartp", "asympartp (sympartp ?r) = bot",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Binary_Relations.sympartp_asympartp", "sympartp (asympartp ?r) = bot",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Binary_Relations.equivpartp_equivpartp",
     "equivpartp (equivpartp ?r) = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.equivpartp_sympartp",
     "equivpartp (sympartp ?r) = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Binary_Relations.sympartp_equivpartp",
     "sympartp (equivpartp ?r) = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.sympartp_sympartp",
     "sympartp (sympartp ?r) = sympartp ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.wfP_iff_well_founded_UNIV",
     "wfP ?r = well_founded UNIV ?r",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Binary_Relations.sympartp_reflclp_equivp",
     "sympartp ?r^== = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.reflclp_sympartp",
     "(sympartp ?r)^== = sympartp ?r^==",
     template_bimplication (template_dunno, template_dunno)),
    ("Binary_Relations.equivpartp_dual",
     "equivpartp (%x y. ?r y x) = equivpartp ?r",
     template_equation
      (template_app (template_hole 0, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.sympartp_dual",
     "sympartp (%x y. ?r y x) = sympartp ?r",
     template_equation
      (template_app (template_hole 0, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.extreme_UNIV",
     "extreme UNIV ?r ?t = (ALL x. ?r x ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Binary_Relations.asymmetric_iff_irreflexive_antisymmetric",
     "asymmetric ?A ?less =
      (irreflexive ?A ?less & antisymmetric ?A ?less)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Binary_Relations.connex_iff_semiconnex_reflexive",
     "connex ?A ?less_eq =
      (semiconnex ?A ?less_eq & reflexive ?A ?less_eq)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Binary_Relations.well_founded_Restrp",
     "well_founded ?A (?r \<restriction> ?B) = well_founded (?A Int ?B) ?r",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Binary_Relations.pre_well_ordered_iff",
     "pre_well_ordered_set ?A ?r =
      (total_quasi_ordered_set ?A ?r & well_founded ?A (asympartp ?r))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Binary_Relations.semiconnex_iff_neg_antisymmetric",
     "semiconnex ?A ?less = antisymmetric ?A (%x y. ~ ?less x y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Binary_Relations.well_related_iff_neg_well_founded",
     "well_related_set ?A ?less_eq =
      well_founded ?A (%x y. ~ ?less_eq y x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Binary_Relations.in_Imagep", "(?b : ?r ``` ?A) = (EX a:?A. ?r a ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Binary_Relations.Imagep_Image", "?r ``` ?A = {(a, b). ?r a b} `` ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty))),
         template_var 0))),
    ("Binary_Relations.subset_Imagep",
     "(?B <= ?r ``` ?A) = (ALL b:?B. EX a:?A. ?r a b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), t_empty))),
    ("Binary_Relations.bound_insert",
     "bound (insert ?x ?X) ?r ?b = (?r ?x ?b & bound ?X ?r ?b)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Binary_Relations.nontolerance",
     "(irreflexive ?A ?r & symmetric ?A ?r) =
      tolerance ?A (%x y. ~ ?r x y)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Binary_Relations.tranclp_trancl",
     "?r^++ = (%x y. (x, y) : {(a, b). ?r a b}^+)",
     template_equation
      (template_app (template_hole 5, template_var 0), t_empty)),
    ("Binary_Relations.well_founded_iff_ex_extremal",
     "well_founded ?A ?less =
      (ALL X<=?A. X ~= {} --> (EX x:X. ALL z:X. ~ ?less z x))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Binary_Relations.extreme_bound_singleton_refl",
     "extreme_bound ?A ?less_eq {?x} ?x = (?x : ?A & ?less_eq ?x ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           t_empty),
         template_var 1),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_var 0, template_var 1),
           template_var 1)))),
    ("Binary_Relations.extreme_bound_iff",
     "extreme_bound ?A ?less_eq ?X ?s =
      (?s : ?A &
       (ALL c:?A. (ALL x:?X. ?less_eq x c) --> ?less_eq ?s c) &
       (ALL x:?X. ?less_eq x ?s))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 3), t_empty)),
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)))))]
