   [("Complete_Relations.pair_complete_imp_directed",
     "pair_complete ?A ?less_eq ==> directed ?A ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Complete_Relations.complete_empty",
     "?CC-complete {} ?r = ({} ~: ?CC)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 1)))),
    ("Complete_Relations.extremed_iff_UNIV_complete",
     "extremed ?A ?less_eq = {?A}-complete ?A ?less_eq",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 1),
         template_var 0))),
    ("Complete_Relations.complete_cmono",
     "?CC <= ?DD ==> ?DD-complete <= ?CC-complete",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Complete_Relations.connex_directed_complete",
     "{DC. directed DC (<=)}-complete {C. connex C ?r} (<=)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 1, t_empty)),
           template_hole 2)
         )),
    ("Complete_Relations.pointed_iff_empty_complete",
     "extremed ?A ?less_eq = {{}}-complete ?A (%x y. ?less_eq y x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_var 1),
         t_empty))),
    ("Complete_Relations.complete_dual",
     "UNIV-complete ?A ?less_eq ==> UNIV-complete ?A (%x y. ?less_eq y x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             t_empty)
           ))),
    ("Complete_Relations.complete_union",
     "(?CC Un ?CC')-complete ?A ?r =
      (?CC-complete ?A ?r & ?CC'-complete ?A ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Complete_Relations.connex_dual_semicomplete",
     "semicomplete {C. connex C ?r} (%x y. y <= x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 2, t_empty)),
           t_empty)
         )),
    ("Complete_Relations.extremed_imp_ex_bound",
     "[| extremed ?A ?r; ?X <= ?A |] ==> EX b:?A. bound ?X ?r b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Complete_Relations.connex_directed_Un",
     "[| ?CC <= {C. connex C ?r}; directed ?CC (<=) |]
      ==> connex (\<Union> ?CC) ?r",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Complete_Relations.directed_complete_pair_complete_imp_extremed",
     "[| directed_complete ?A ?less_eq; pair_complete ?A ?less_eq;
         ?A ~= {} |]
      ==> extremed ?A ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Complete_Relations.pointed_directed_complete",
     "{X. directed X ?r}-complete ?A ?r =
      (directed_complete ?A ?r & extremed ?A (%x y. ?r y x))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_var 0),
         template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), t_empty)))),
    ("Complete_Relations.semicomplete_nonempty_imp_extremed",
     "[| semicomplete ?A ?r; ?A ~= {} |] ==> extremed ?A ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Complete_Relations.complete_iff_pointed_semicomplete",
     "UNIV-complete ?A ?less_eq =
      (semicomplete ?A ?less_eq & extremed ?A (%x y. ?less_eq y x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 7, template_app (template_hole 4, t_empty)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Complete_Relations.connex_bounded_complete",
     "bounded_complete {C. connex C ?r} (<=)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app (template_hole 3, t_empty)),
           t_empty)
         )),
    ("Complete_Relations.bounded_complete_iff_dual_semicomplete",
     "bounded_complete ?A ?less_eq = semicomplete ?A (%x y. ?less_eq y x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_var 1),
         t_empty))),
    ("Complete_Relations.conditionally_complete_imp_pair_complete_iff_directed",
     "conditionally_complete ?A ?less_eq ==>
      pair_complete ?A ?less_eq = directed ?A ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, t_empty)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complete_Relations.completeD",
     "[| ?CC-complete ?A ?r; ?X <= ?A; ?X : ?CC |]
      ==> Ex (extreme_bound ?A ?r ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty))
           ))),
    ("Complete_Relations.complete_iff_conditionally_complete_extremed_pointed",
     "UNIV-complete ?A ?less_eq =
      (conditionally_complete ?A ?less_eq &
       extremed ?A ?less_eq & extremed ?A (%x y. ?less_eq y x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_hole 8), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_hole 9, template_app (template_hole 6, t_empty)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty))))),
    ("Complete_Relations.directed_sets_directed_complete",
     "ALL DC<=?AA. (ALL X:DC. directed X ?r) --> \<Union> DC : ?AA ==>
      {DC. directed DC (<=)}-complete {X: ?AA. directed X ?r} (<=)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app (template_hole 1, t_empty)),
             template_hole 2)
           ))),
    ("Complete_Relations.completeI",
     "(!!X. [| X <= ?A; X : ?CC |] ==> Ex (extreme_bound ?A ?r X)) ==>
      ?CC-complete ?A ?r",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Complete_Relations.semicomplete_iff_conditionally_complete_extremed",
     "?A ~= {} ==>
      semicomplete ?A ?less_eq =
      (conditionally_complete ?A ?less_eq & extremed ?A ?less_eq)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Complete_Relations.pair_completeD",
     "[| pair_complete ?A ?r; ?x : ?A; ?y : ?A |]
      ==> Ex (extreme_bound ?A ?r {?x, ?y})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Complete_Relations.pair_completeI",
     "(!!x y. [| x : ?A; y : ?A |] ==> Ex (extreme_bound ?A ?r {x, y})) ==>
      pair_complete ?A ?r",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Complete_Relations.pointed_conditionally_complete_iff_bounded_complete",
     "?A ~= {} ==>
      (conditionally_complete ?A ?less_eq &
       extremed ?A (%x y. ?less_eq y x)) =
      bounded_complete ?A ?less_eq",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_var 1),
           template_var 0)))),
    ("Complete_Relations.conditionally_complete_dual",
     "conditionally_complete ?A ?less_eq ==>
      conditionally_complete ?A (%x y. ?less_eq y x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7, template_app (template_hole 6, t_empty)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 1),
             t_empty)
           ))),
    ("Complete_Relations.monotone_directed_complete",
     "[| directed_complete ?A ?r; ?f ` ?I <= ?A; directed ?I ?ri; ?I ~= {};
         monotone_on ?I ?ri ?r ?f |]
      ==> Ex (extreme_bound ?A ?r (?f ` ?I))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 11, template_var 2),
            template_var 1),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Complete_Relations.conditionally_complete_imp_nonempty_imp_ex_extreme_bound_iff_ex_bound",
     "[| conditionally_complete ?A ?r; ?X <= ?A; ?X ~= {} |]
      ==> Ex (extreme_bound ?A ?r ?X) = (EX b:?A. bound ?X ?r b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, t_empty)),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 11, template_var 2), t_empty))))]
