Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Binary_Relations" (required by "Draft.Binary_RelationsMoreTemplates")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.137s elapsed time, 0.548s cpu time, 0.067s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale less_eq_syntax
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
locale less_syntax
  fixes less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
locale equivalence_syntax
  fixes equiv :: "'a => 'a => bool"  (infix \<open>\<sim>\<close> 50)
Found termination order: "size_list size <*mlex*> {}"
locale less_eq_notations
  fixes
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
### theory "HOL-Library.Set_Algebras"
### 0.305s elapsed time, 1.213s cpu time, 0.142s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs")
locale less_notations
  fixes less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
locale related_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
locale reflexive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "reflexive A (\<sqsubseteq>)"
locale irreflexive
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "irreflexive A (\<sqsubset>)"
locale transitive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "transitive A (\<sqsubseteq>)"
locale symmetric
  fixes A :: "'a set"
    and equiv :: "'a => 'a => bool"  (infix \<open>\<sim>\<close> 50)
  assumes "symmetric A (\<sim>)"
### theory "HOL-Library.Nat_Bijection"
### 0.400s elapsed time, 1.593s cpu time, 0.142s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs")
### Cannot skip proof of schematic goal statement
locale antisymmetric
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "antisymmetric A (\<sqsubseteq>)"
locale semiattractive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "semiattractive A (\<sqsubseteq>)"
locale attractive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "attractive A (\<sqsubseteq>)"
### Cannot skip proof of schematic goal statement
### Rule already declared as introduction (intro)
### (!!x. ?f x = ?g x) ==> ?f = ?g
locale antisymmetric
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "antisymmetric A (\<sqsubseteq>)"
locale transitive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "transitive A (\<sqsubseteq>)"
### Cannot skip proof of schematic goal statement
### Rule already declared as introduction (intro)
### (!!x. ?f x = ?g x) ==> ?f = ?g
locale asymmetric
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "asymmetric A (\<sqsubset>)"
locale quasi_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "quasi_ordered_set A (\<sqsubseteq>)"
locale near_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "near_ordered_set A (\<sqsubseteq>)"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
locale pseudo_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "pseudo_ordered_set A (\<sqsubseteq>)"
locale partially_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "partially_ordered_set A (\<sqsubseteq>)"
Found termination order: "size <*mlex*> {}"
locale strict_ordered_set
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "strict_ordered_set A (\<sqsubset>)"
locale tolerance
  fixes A :: "'a set"
    and equiv :: "'a => 'a => bool"  (infix \<open>\<sim>\<close> 50)
  assumes "tolerance A (\<sim>)"
Found termination order: "size <*mlex*> {}"
### Cannot skip proof of schematic goal statement
locale partial_equivalence
  fixes A :: "'a set"
    and equiv :: "'a => 'a => bool"  (infix \<open>\<sim>\<close> 50)
  assumes "partial_equivalence A (\<sim>)"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
locale equivalence
  fixes A :: "'a set"
    and equiv :: "'a => 'a => bool"  (infix \<open>\<sim>\<close> 50)
  assumes "equivalence A (\<sim>)"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale semiconnex
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "semiconnex A (\<sqsubset>)"
consts
  snth :: "'a stream => nat => 'a"
locale semiconnex_irreflexive
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "semiconnex_irreflexive A (\<sqsubset>)"
consts
  stake :: "nat => 'a stream => 'a list"
locale connex
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "connex A (\<sqsubseteq>)"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale total_pseudo_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "total_pseudo_ordered_set A (\<sqsubseteq>)"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
locale total_quasi_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "total_quasi_ordered_set A (\<sqsubseteq>)"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
locale total_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "total_ordered_set A (\<sqsubseteq>)"
locale well_founded
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "well_founded A (\<sqsubset>)"
### theory "HOL-Library.BigO"
### 0.994s elapsed time, 3.771s cpu time, 0.746s GC time
### Cannot skip proof of schematic goal statement
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### Cannot skip proof of schematic goal statement
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale well_founded_ordered_set
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "well_founded_ordered_set A (\<sqsubset>)"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
locale well_related_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "well_related_set A (\<sqsubseteq>)"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
locale pre_well_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "pre_well_ordered_set A (\<sqsubseteq>)"
### theory "HOL-Library.Stream"
### 1.138s elapsed time, 4.129s cpu time, 0.841s GC time
Found termination order: "size <*mlex*> {}"
locale well_ordered_set
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "well_ordered_set A (\<sqsubseteq>)"
Found termination order: "size <*mlex*> {}"
locale connex
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "connex A (\<sqsubseteq>)"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale compatible
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "compatible A (\<sqsubseteq>) (\<sqsubset>)"
locale compatible_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "compatible_ordering A (\<sqsubseteq>) (\<sqsubset>)"
[| ?x \<sqsubset> ?y; ?y \<sqsubset> ?z; ?x : A; ?y : A; ?z : A |]
==> ?x \<sqsubset> ?z
[| ?x \<sqsubset> ?y; ?y \<sqsubset> ?x; ?x : A; ?y : A |] ==> False
?x : A ==> ~ ?x \<sqsubset> ?x
locale transitive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "transitive A (\<sqsubseteq>)"
Found termination order: "size <*mlex*> {}"
locale attractive_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "attractive_ordering A (\<sqsubseteq>) (\<sqsubset>)"
locale pseudo_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "pseudo_ordering A (\<sqsubseteq>) (\<sqsubset>)"
locale quasi_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "quasi_ordering A (\<sqsubseteq>) (\<sqsubset>)"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale partial_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "partial_ordering A (\<sqsubseteq>) (\<sqsubset>)"
locale well_founded_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "well_founded_ordering A (\<sqsubseteq>) (\<sqsubset>)"
locale total_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "total_ordering A (\<sqsubseteq>) (\<sqsubset>)"
locale strict_total_ordering
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "strict_total_ordering A (\<sqsubseteq>) (\<sqsubset>)"
class ord = type +
  fixes less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
Found termination order: "size <*mlex*> {}"
class compat = ord +
  assumes "compatible_ordering UNIV (<=) (<)"
### Cannot skip proof of schematic goal statement
[| ?a <= ?b; ?b <= ?c |] ==> ?a <= ?c
[| ?x < ?y; ?y < ?z |] ==> ?x < ?z
?x <= ?x
~ ?x < ?x
[| ?x < ?y; ?y < ?x |] ==> False
supremum {?x} ?x
### theory "HOL-Library.Tree"
### 2.089s elapsed time, 6.633s cpu time, 1.087s GC time
Loading theory "Draft.Templates" (required by "Draft.Binary_RelationsMoreTemplates" via "Draft.ExtrEqs")
class attractive_order = ord +
  assumes "attractive_ordering UNIV (<=) (<)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.112s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Binary_RelationsMoreTemplates")
### Cannot skip proof of schematic goal statement
[| ?C ~= {}; ALL y:?C. sympartp (<=) y ?x |] ==> supremum ?C ?x
class psorder = ord +
  assumes "pseudo_ordering UNIV (<=) (<)"
### Cannot skip proof of schematic goal statement
class qorder = ord +
  assumes "quasi_ordering UNIV (<=) (<)"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.538s elapsed time, 1.120s cpu time, 0.105s GC time
### Cannot skip proof of schematic goal statement
class porder = ord +
  assumes "partial_ordering UNIV (<=) (<)"
### Cannot skip proof of schematic goal statement
class wf_qorder = ord +
  assumes "well_founded_ordering UNIV (<=) (<)"
### Cannot skip proof of schematic goal statement
class totalorder = ord +
  assumes "total_ordering UNIV (<=) (<)"
### Cannot skip proof of schematic goal statement
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### Cannot skip proof of schematic goal statement
[| ?x < ?y; ?y < ?z |] ==> ?x < ?z
supremum {?x} ?y = (?x = ?y)
[| ?C ~= {}; ALL y:?C. sympartp (<=) y ?x |] ==> supremum ?C ?x
[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z
[| ?x <= ?y ==> ?P; ?y <= ?x ==> ?P |] ==> ?P
[| ?x < ?y ==> ?P; ?x = ?y ==> ?P; ?y < ?x ==> ?P |] ==> ?P
### Cannot skip proof of schematic goal statement
locale attractive
  fixes A :: "'a set"
    and
    less_eq :: "'a => 'a => bool"  (infix \<open>\<sqsubseteq>\<close> 50)
  assumes "attractive A (\<sqsubseteq>)"
### Cannot skip proof of schematic goal statement
### Rule already declared as introduction (intro)
### (!!x. ?f x = ?g x) ==> ?f = ?g
locale irreflexive
  fixes A :: "'a set"
    and less :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 50)
  assumes "irreflexive A (\<sqsubset>)"
### theory "Draft.Binary_Relations"
### 5.799s elapsed time, 11.441s cpu time, 1.431s GC time
Loading theory "Draft.Binary_RelationsMoreTemplates"
val templateLemmas =
   [("Binary_Relations.directed_empty", "directed {} ?less_eq",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Binary_Relations.transp_tranclp", "transp ?r^++",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Binary_Relations.equivpartI", "equivpartp ?r ?x ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Binary_Relations.sympartp_symmetric", "symmetric ?A (sympartp ?r)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Binary_Relations.tranclp_transitive", "transitive ?A ?r^++",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Binary_Relations.singleton_antisymmetric",
     "antisymmetric {?a} ?less_eq",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)
         )),
    ("Binary_Relations.monotone_on_id", "monotone_on ?X ?r ?r id",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 0),
           template_hole 0)
         )),
    ("Binary_Relations.asympartp_sympartp", "asympartp (sympartp ?r) = bot",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Binary_Relations.sympartp_asympartp", "sympartp (asympartp ?r) = bot",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Binary_Relations.equivpartp_equivpartp",
     "equivpartp (equivpartp ?r) = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.equivpartp_sympartp",
     "equivpartp (sympartp ?r) = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Binary_Relations.sympartp_equivpartp",
     "sympartp (equivpartp ?r) = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.sympartp_sympartp",
     "sympartp (sympartp ?r) = sympartp ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.wfP_iff_well_founded_UNIV",
     "wfP ?r = well_founded UNIV ?r",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Binary_Relations.sympartp_reflclp_equivp",
     "sympartp ?r^== = equivpartp ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.tranclp_id", "transp ?r ==> ?r^++ = ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Binary_Relations.reflclp_sympartp",
     "(sympartp ?r)^== = sympartp ?r^==",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ),
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("Binary_Relations.equivpartp_dual",
     "equivpartp (%x y. ?r y x) = equivpartp ?r",
     template_equation
      (template_app (template_hole 0, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.sympartp_dual",
     "sympartp (%x y. ?r y x) = sympartp ?r",
     template_equation
      (template_app (template_hole 0, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Binary_Relations.extremeD", "extreme ?X ?r ?e ==> ?e : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Binary_Relations.extreme_UNIV",
     "extreme UNIV ?r ?t = (ALL x. ?r x ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app (template_hole 0, t_empty))),
    ("Binary_Relations.monotone_on_cmono",
     "?A <= ?B ==> monotone_on ?B <= monotone_on ?A",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Binary_Relations.bound_cmono", "?X <= ?Y ==> bound ?Y <= bound ?X",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Binary_Relations.singleton_well_ordered",
     "?less_eq ?a ?a ==> well_ordered_set {?a} ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 1, template_var 0), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Binary_Relations.well_related_singleton_refl",
     "?less_eq ?x ?x ==> well_related_set {?x} ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 1, template_var 0), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Binary_Relations.sympartp_equivpartpI",
     "sympartp ?r ?x ?y ==> equivpartp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Binary_Relations.asymmetric_iff_irreflexive_antisymmetric",
     "asymmetric ?A ?less =
      (irreflexive ?A ?less & antisymmetric ?A ?less)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Binary_Relations.connex_iff_semiconnex_reflexive",
     "connex ?A ?less_eq =
      (semiconnex ?A ?less_eq & reflexive ?A ?less_eq)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Binary_Relations.well_founded_Restrp",
     "well_founded ?A (?r \<restriction> ?B) = well_founded (?A Int ?B) ?r",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Binary_Relations.well_founded_singleton",
     "~ ?r ?x ?x ==> well_founded {?x} ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_var 1, template_var 0),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_var 1)
           ))),
    ("Binary_Relations.pre_well_ordered_iff",
     "pre_well_ordered_set ?A ?r =
      (total_quasi_ordered_set ?A ?r & well_founded ?A (asympartp ?r))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Binary_Relations.semiconnex_iff_neg_antisymmetric",
     "semiconnex ?A ?less = antisymmetric ?A (%x y. ~ ?less x y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Binary_Relations.well_related_iff_neg_well_founded",
     "well_related_set ?A ?less_eq =
      well_founded ?A (%x y. ~ ?less_eq y x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Binary_Relations.in_Imagep", "(?b : ?r ``` ?A) = (EX a:?A. ?r a ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Binary_Relations.Imagep_Image", "?r ``` ?A = {(a, b). ?r a b} `` ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty))),
         template_var 0))),
    ("Binary_Relations.reflexive_irreflexive_is_empty",
     "[| reflexive ?A ?r; irreflexive ?A ?r |] ==> ?A = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Binary_Relations.well_founded_cmono",
     "[| ?r' <= ?r; well_founded ?A ?r |] ==> well_founded ?A ?r'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Binary_Relations.funpow_dom",
     "?f ` ?A <= ?A ==> (?f ^^ ?n) ` ?A <= ?A",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_var 1))),
    ("Binary_Relations.trivial_pre_well_order",
     "ALL a:?A. ALL b:?A. ?less_eq a b ==>
      pre_well_ordered_set ?A ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.trivial_well_related",
     "ALL a:?A. ALL b:?A. ?less_eq a b ==> well_related_set ?A ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.sympartpI",
     "[| ?r ?x ?y; ?r ?y ?x |] ==> sympartp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 0), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Binary_Relations.extremeD",
     "[| extreme ?X ?r ?e; ?x : ?X |] ==> ?r ?x ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 0), template_var 1)
           ))),
    ("Binary_Relations.subset_Imagep",
     "(?B <= ?r ``` ?A) = (ALL b:?B. EX a:?A. ?r a b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), t_empty))),
    ("Binary_Relations.bound_insert",
     "bound (insert ?x ?X) ?r ?b = (?r ?x ?b & bound ?X ?r ?b)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Binary_Relations.symmetric_antisymmetric_imp_eq",
     "[| symmetric ?A ?r; antisymmetric ?A ?r |]
      ==> ?r \<restriction> ?A <= (=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Binary_Relations.ImagepI",
     "[| ?a : ?A; ?r ?a ?b |] ==> ?b : ?r ``` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 1, template_var 3), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Binary_Relations.asympartpI",
     "[| ?r ?x ?y; ~ ?r ?y ?x |] ==> asympartp ?r ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_var 2, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Binary_Relations.nontolerance",
     "(irreflexive ?A ?r & symmetric ?A ?r) =
      tolerance ?A (%x y. ~ ?r x y)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Binary_Relations.boundI",
     "(!!x. x : ?X ==> ?r x ?b) ==> bound ?X ?r ?b",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Binary_Relations.equivpartpCI",
     "(?x ~= ?y ==> sympartp ?r ?x ?y) ==> equivpartp ?r ?x ?y",
     template_implication
      ([template_implication
         ([template_negation
            (template_equation (template_var 2, template_var 1))],
          template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2),
                template_var 1)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Binary_Relations.extremes_equiv",
     "[| extreme ?X ?r ?b; extreme ?X ?r ?c |] ==> sympartp ?r ?b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Binary_Relations.tranclp_trancl",
     "?r^++ = (%x y. (x, y) : {(a, b). ?r a b}^+)",
     template_equation
      (template_app (template_hole 5, template_var 0), t_empty)),
    ("Binary_Relations.monotone_connex_image",
     "[| monotone_on ?I ?ir ?r ?f; connex ?I ?ir |]
      ==> connex (?f ` ?I) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_var 1)
           ))),
    ("Binary_Relations.monotone_directed_image",
     "[| monotone_on ?I ?ir ?r ?f; directed ?I ?ir |]
      ==> directed (?f ` ?I) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_var 1)
           ))),
    ("Binary_Relations.monotone_on_dual",
     "monotone_on ?X ?r ?s ?f ==>
      monotone_on ?X (%x y. ?r y x) (%x y. ?s y x) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3), t_empty),
               t_empty),
             template_var 0)
           ))),
    ("Binary_Relations.sympartpE",
     "[| sympartp ?r ?x ?y; [| ?r ?x ?y; ?r ?y ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 3, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 3, template_var 1),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Binary_Relations.irreflexive_transitive_symmetric_is_empty",
     "[| irreflexive ?A ?r; transitive ?A ?r; symmetric ?A ?r |]
      ==> ?r \<restriction> ?A = bot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Binary_Relations.RestrpI",
     "[| ?a : ?A; ?b : ?A; ?r ?a ?b |] ==> (?r \<restriction> ?A) ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_var 3), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 3),
             template_var 1)
           ))),
    ("Binary_Relations.reflexiveE",
     "[| reflexive ?A ?r; (!!x. x : ?A ==> ?r x x) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 1, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Binary_Relations.extremeI",
     "[| ?e : ?X; !!x. x : ?X ==> ?r x ?e |] ==> extreme ?X ?r ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Binary_Relations.asympartpE",
     "[| asympartp ?r ?x ?y; [| ?r ?x ?y; ~ ?r ?y ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 3, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_var 3, template_var 1),
                       template_var 2)
                     )
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Binary_Relations.boundE",
     "[| bound ?X ?r ?b; (!!x. x : ?X ==> ?r x ?b) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 1, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Binary_Relations.well_foundedI_pf",
     "(!!X. [| X <= ?A; X <= (?less ``` X) Int ?A |] ==> X = {}) ==>
      well_founded ?A ?less",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.RestrpE",
     "[| (?r \<restriction> ?A) ?a ?b;
         [| ?a : ?A; ?b : ?A; ?r ?a ?b |] ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app (template_var 4, template_var 2),
                     template_var 1)
                   )],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Binary_Relations.well_founded_iff_ex_extremal",
     "well_founded ?A ?less =
      (ALL X<=?A. X ~= {} --> (EX x:X. ALL z:X. ~ ?less z x))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Binary_Relations.image_constant",
     "(!!i. i : ?I ==> ?f i = ?y) ==>
      ?f ` ?I = (if ?I = {} then {} else {?y})",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 2)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 2)),
                 template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 1))
             )))),
    ("Binary_Relations.directedD",
     "[| directed ?A ?r; ?x : ?A; ?y : ?A |]
      ==> EX z:?A. ?r ?x z & ?r ?y z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3), t_empty)
           ))),
    ("Binary_Relations.connexI",
     "(!!x y. [| x : ?A; y : ?A |] ==> ?less_eq x y | ?less_eq y x) ==>
      connex ?A ?less_eq",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.directed_extend",
     "[| directed ?X ?less_eq; directed ?Y ?less_eq;
         ALL x:?X. ALL y:?Y. ?less_eq x y |]
      ==> directed (?X Un ?Y) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.well_related_extend",
     "[| well_related_set ?A ?r; well_related_set ?B ?r;
         ALL a:?A. ALL b:?B. ?r a b |]
      ==> well_related_set (?A Un ?B) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.extreme_bound_singleton_refl",
     "extreme_bound ?A ?less_eq {?x} ?x = (?x : ?A & ?less_eq ?x ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           t_empty),
         template_var 1),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_var 0, template_var 1),
           template_var 1)))),
    ("Binary_Relations.closed_UN_well_founded",
     "ALL X:?XX.
         well_founded X ?r &
         (ALL x:X. ALL y:\<Union> ?XX. ?r y x --> y : X) ==>
      well_founded (\<Union> ?XX) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 2, template_var 1)),
             template_var 0)
           ))),
    ("Binary_Relations.extremeE",
     "[| extreme ?X ?r ?e;
         [| ?e : ?X; !!x. x : ?X ==> ?r x ?e |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)
               )],
          template_implication
           ([template_predicate (template_app (template_hole 0, t_empty))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Binary_Relations.extreme_bound_bound",
     "[| extreme_bound ?A ?less_eq ?X ?y; ?x : ?X |] ==> ?less_eq ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 0), template_var 1)
           ))),
    ("Binary_Relations.well_founded_extend",
     "[| well_founded ?A ?less; well_founded ?B ?less;
         ALL a:?A. ALL b:?B. ~ ?less b a |]
      ==> well_founded (?A Un ?B) ?less",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.monotone_onD",
     "[| monotone_on ?X ?r ?s ?f; ?r ?x ?y; ?x : ?X; ?y : ?X |]
      ==> ?s (?f ?x) (?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 1), template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app (template_var 2, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Binary_Relations.closed_UN_well_related",
     "ALL X:?XX.
         well_related_set X ?less_eq &
         (ALL x:X. ALL y:\<Union> ?XX. ~ ?less_eq x y --> y : X) ==>
      well_related_set (\<Union> ?XX) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 3, template_var 1)),
             template_var 0)
           ))),
    ("Binary_Relations.well_foundedI_extremal",
     "(!!X. [| X <= ?A; X ~= {} |] ==> EX x:X. ALL y:X. ~ ?less y x) ==>
      well_founded ?A ?less",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.equivpartpE",
     "[| equivpartp ?r ?x ?y; ?x = ?y ==> ?thesis;
         [| ?r ?x ?y; ?r ?y ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_var 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 3, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 3, template_var 1),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Binary_Relations.directedI",
     "(!!x y. [| x : ?A; y : ?A |] ==> EX z:?A. ?r x z & ?r y z) ==>
      directed ?A ?r",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.antisymmetric_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      antisymmetric ?A ?r = antisymmetric ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.asymmetric_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      asymmetric ?A ?r = asymmetric ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.attractive_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      attractive ?A ?r = attractive ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.connex_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      connex ?A ?r = connex ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.equivalence_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      equivalence ?A ?r = equivalence ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.irreflexive_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      irreflexive ?A ?r = irreflexive ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.near_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      near_ordered_set ?A ?r = near_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.partial_equivalence_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      partial_equivalence ?A ?r = partial_equivalence ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.partially_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      partially_ordered_set ?A ?r = partially_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.pseudo_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      pseudo_ordered_set ?A ?r = pseudo_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.quasi_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      quasi_ordered_set ?A ?r = quasi_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.reflexive_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      reflexive ?A ?r = reflexive ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.semiattractive_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      semiattractive ?A ?r = semiattractive ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.semiconnex_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      semiconnex ?A ?r = semiconnex ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.semiconnex_irreflexive_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      semiconnex_irreflexive ?A ?r = semiconnex_irreflexive ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.strict_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      strict_ordered_set ?A ?r = strict_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.symmetric_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      symmetric ?A ?r = symmetric ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.tolerance_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      tolerance ?A ?r = tolerance ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.total_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      total_ordered_set ?A ?r = total_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.total_pseudo_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      total_pseudo_ordered_set ?A ?r = total_pseudo_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.total_quasi_ordered_set_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      total_quasi_ordered_set ?A ?r = total_quasi_ordered_set ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.transitive_cong",
     "(!!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b) ==>
      transitive ?A ?r = transitive ?A ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Binary_Relations.connex_union",
     "[| connex ?X ?less_eq; connex ?Y ?less_eq;
         ALL x:?X. ALL y:?Y. ?less_eq x y | ?less_eq y x |]
      ==> connex (?X Un ?Y) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.monotone_onI",
     "(!!x y. [| x : ?X; y : ?X; ?r x y |] ==> ?s (?f x) (?f y)) ==>
      monotone_on ?X ?r ?s ?f",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Binary_Relations.pre_well_order_extend",
     "[| pre_well_ordered_set ?A ?r; pre_well_ordered_set ?B ?r;
         ALL a:?A. ALL b:?B. ?r a b & ~ ?r b a |]
      ==> pre_well_ordered_set (?A Un ?B) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.semiattractive_extend",
     "[| semiattractive ?A ?r; semiattractive ?B ?r;
         ALL a:?A. ALL b:?B. ?r a b & ~ ?r b a |]
      ==> semiattractive (?A Un ?B) ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.connexE",
     "[| connex ?A ?less_eq; ?x : ?A; ?y : ?A; ?less_eq ?x ?y ==> ?P;
         ?less_eq ?y ?x ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 4)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 3, template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 3, template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Binary_Relations.closed_UN_well_ordered",
     "[| antisymmetric (\<Union> ?XX) ?less_eq;
         ALL X:?XX.
            well_ordered_set X ?less_eq &
            (ALL x:X. ALL y:\<Union> ?XX. ~ ?less_eq x y --> y : X) |]
      ==> well_ordered_set (\<Union> ?XX) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 7, template_var 1)),
             template_var 0)
           ))),
    ("Binary_Relations.antisymmetric_union",
     "[| antisymmetric ?A ?less_eq; antisymmetric ?B ?less_eq;
         ALL a:?A. ALL b:?B. ?less_eq a b --> ?less_eq b a --> a = b |]
      ==> antisymmetric (?A Un ?B) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.monotone_onE",
     "[| monotone_on ?X ?r ?s ?f;
         (!!x y. [| x : ?X; y : ?X; ?r x y |] ==> ?s (?f x) (?f y)) ==>
         PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 1, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Binary_Relations.directed_union",
     "[| directed ?X ?less_eq; directed ?Y ?less_eq;
         ALL x:?X. ALL y:?Y. EX z:?X Un ?Y. ?less_eq x z & ?less_eq y z |]
      ==> directed (?X Un ?Y) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.directedE",
     "[| directed ?A ?less_eq; ?x : ?A; ?y : ?A;
         !!z. [| z : ?A; ?less_eq ?x z; ?less_eq ?y z |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Binary_Relations.monotone_extreme_imp_extreme_bound",
     "[| ?f ` ?I <= ?A; monotone_on ?I ?ir ?r ?f; extreme ?I ?ir ?e |]
      ==> extreme_bound ?A ?r (?f ` ?I) (?f ?e)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 5), template_var 4),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty),
             template_app (template_var 5, template_var 0))
           ))),
    ("Binary_Relations.extreme_bound_iff",
     "extreme_bound ?A ?less_eq ?X ?s =
      (?s : ?A &
       (ALL c:?A. (ALL x:?X. ?less_eq x c) --> ?less_eq ?s c) &
       (ALL x:?X. ?less_eq x ?s))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 3), t_empty)),
           template_app
            (template_app (template_hole 1, template_var 2), t_empty))))),
    ("Binary_Relations.well_order_extend",
     "[| well_ordered_set ?A ?less_eq; well_ordered_set ?B ?less_eq;
         ALL a:?A. ALL b:?B. ?less_eq a b --> ?less_eq b a --> a = b;
         ALL a:?A. ALL b:?B. ?less_eq a b |]
      ==> well_ordered_set (?A Un ?B) ?less_eq",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Binary_Relations.monotone_extreme_extreme_boundI",
     "[| ?f ` ?I <= ?A; monotone_on ?I ?ir ?r ?f; extreme ?I ?ir ?e;
         ?x = ?f ?e |]
      ==> extreme_bound ?A ?r (?f ` ?I) ?x",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 6), template_var 5),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 3),
                template_var 2),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_equation
         (template_var 0, template_app (template_var 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty),
             template_var 0)
           ))),
    ("Binary_Relations.extreme_bound_mono",
     "[| ?X <= ?Y; extreme_bound ?A ?less_eq ?X ?sX;
         extreme_bound ?A ?less_eq ?Y ?sY |]
      ==> ?less_eq ?sX ?sY",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Binary_Relations.extreme_bound_image_const",
     "[| ?less_eq ?x ?x; ?I ~= {}; !!i. i : ?I ==> ?f i = ?x; ?x : ?A |]
      ==> extreme_bound ?A ?less_eq (?f ` ?I) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 3)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty),
             template_var 3)
           ))),
    ("Binary_Relations.extreme_boundI",
     "[| !!b. [| bound ?X ?less_eq b; b : ?A |] ==> ?less_eq ?s b;
         !!x. x : ?X ==> ?less_eq x ?s; ?s : ?A |]
      ==> extreme_bound ?A ?less_eq ?X ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               t_empty),
             template_var 0)
           ))),
    ("Binary_Relations.extreme_bound_UN_const",
     "[| ?less_eq ?x ?x; ?I ~= {}; !!i y. i : ?I ==> ?P i y = (?x = y);
         ?x : ?A |]
      ==> extreme_bound ?A ?less_eq (UN i:?I. {y. ?P i y}) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 3)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 12)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               t_empty),
             template_var 3)
           ))),
    ("Binary_Relations.well_founded_cong",
     "[| !!a b. [| a : ?A; b : ?A |] ==> ?r a b = ?r' a b;
         !!a b. ?r' a b ==> (a : ?A) = (a : ?A');
         !!a b. ?r' a b ==> (b : ?A) = (b : ?A') |]
      ==> well_founded ?A ?r = well_founded ?A' ?r'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1))))]:
   (string * thm * template) list
### theory "Draft.Binary_RelationsMoreTemplates"
### 0.376s elapsed time, 0.641s cpu time, 0.057s GC time
val it = (): unit
