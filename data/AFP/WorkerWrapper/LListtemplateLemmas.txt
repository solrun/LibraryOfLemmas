   [("LList.lsingleton_not_bottom", "lsingleton$?x ~= \<bottom>",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_hole 0)
         )),
    ("LList.lall_strict", "lall$?p$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("LList.llist_map_eval_simps", "llist_map$?f$lnil = lnil",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("LList.llist_map_eval_simps", "llist_map$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("LList.ldropWhile_strict", "ldropWhile$?p$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("LList.lfilter_strict", "lfilter$?p$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("LList.lconcatMap_lsingleton", "lconcatMap$lsingleton$?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("LList.lappend_lnil_id_right", "?xs :++ lnil = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_var 0)),
    ("LList.lmap_strict", "lmap$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("LList.lconcatMap_comp_simps", "lconcatMap$?f$lnil = lnil",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("LList.lconcatMap_comp_simps", "lconcatMap$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("LList.deflation_llist_map",
     "deflation ?a ==> deflation (llist_map$?a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("LList.lmember_strict", "lmember$?eq$?x$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("LList.lfilter_const_true", "lfilter$(LAM x. TT)$?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, t_empty))),
         template_var 0),
       template_var 0)),
    ("LList.lzipWith_simps", "lzipWith$?f$lnil$lnil = lnil",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 0)),
             template_hole 2)),
         template_hole 1),
       template_hole 0)),
    ("LList.lzipWith_stricts", "lzipWith$?f$\<bottom>$?ys = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("LList.lzipWith0_stricts", "lzipWith0$?f$lnil$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 0)),
             template_hole 2)),
         template_hole 1),
       template_hole 0)),
    ("LList.lzipWith0_stricts", "lzipWith0$?f$\<bottom>$?ys = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("LList.isodefl_llist",
     "isodefl' ?fa ?pa ==> isodefl (llist_map$?fa) (llist_defl$?pa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("LList.lzipWith_simps", "lzipWith$?f$lnil$(?y :@ ?ys) = lnil",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2)),
             template_hole 4)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("LList.lzipWith0_undefs", "lzipWith0$?f$lnil$(?y :@ ?ys) = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2)),
             template_hole 4)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("LList.lzipWith_simps", "lzipWith$?f$(?x :@ ?xs)$lnil = lnil",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("LList.lzipWith_stricts",
     "lzipWith$?f$(?x :@ ?xs)$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("LList.lzipWith0_undefs", "lzipWith0$?f$(?x :@ ?xs)$lnil = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("LList.lzipWith0_stricts",
     "lzipWith0$?f$(?x :@ ?xs)$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("LList.lmap_not_bottoms",
     "?x ~= \<bottom> ==> lmap$?f$?x ~= \<bottom>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0)),
               template_var 1),
             template_hole 0)
           ))),
    ("LList.ldropWhile_lnil",
     "(ldropWhile$?p$?xs = lnil) = (lall$?p$?xs = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_var 0),
         template_hole 5),
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0),
         template_hole 0))),
    ("LList.lconcat_lappend_dist",
     "lconcat$(?xs :++ ?ys) = lconcat$?xs :++ lconcat$?ys",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1))),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)))),
    ("LList.lfilter_lnil",
     "(lfilter$?p$?xs = lnil) = (lall$(neg oo ?p)$?xs = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_hole 10),
               template_var 1)),
           template_var 0),
         template_hole 9),
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 1)),
                 template_var 1))),
           template_var 0),
         template_hole 0))),
    ("LList.lappend_assoc", "(?xs :++ ?ys) :++ ?zs = ?xs :++ ?ys :++ ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("LList.lmap_lmap", "lmap$?f$(lmap$?g$?xs) = lmap$(?f oo ?g)$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0))),
    ("LList.llist_map_eval_simps",
     "llist_map$?f$(?x :@ ?xs) = ?f$?x :@ llist_map$?f$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_var 0)))),
    ("LList.lconcatMap_comp_simps",
     "lconcatMap$?f$(?x :@ ?xs) = ?f$?x :++ lconcatMap$?f$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 2)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2)),
           template_var 0)))),
    ("LList.lmap_lappend_dist",
     "lmap$?f$(?xs :++ ?ys) = lmap$?f$?xs :++ lmap$?f$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 2)),
           template_var 0)))),
    ("LList.lconcatMap_lappend_dist",
     "lconcatMap$?f$(?xs :++ ?ys) =
      lconcatMap$?f$?xs :++ lconcatMap$?f$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 2)),
           template_var 0)))),
    ("LList.lconcatMap_assoc",
     "lconcatMap$?h$(lconcatMap$?g$?f) =
      lconcatMap$(LAM v. lconcatMap$?h$(?g$v))$?f",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, t_empty))),
         template_var 0))),
    ("LList.filter_filter",
     "lfilter$?p$(lfilter$?q$?xs) = lfilter$(LAM x. ?q$x andalso ?p$x)$?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, t_empty))),
         template_var 0))),
    ("LList.lappend_not_bottom",
     "[| ?xs ~= \<bottom>; ?xs = lnil ==> ?ys ~= \<bottom> |]
      ==> ?xs :++ ?ys ~= \<bottom>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_implication
         ([template_equation (template_var 1, template_hole 3)],
          template_negation
           (template_equation (template_var 0, template_hole 4)))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0),
             template_hole 4)
           ))),
    ("LList.llist_map_unfold",
     "llist_map$?a =
      llist_abs oo
      ssum_map$ID$(sprod_map$(u_map$?a)$(u_map$(llist_map$?a))) oo
      llist_rep",
     template_equation
      (template_app
        (template_app (template_hole 20, template_hole 19), template_var 0),
       template_app
        (template_app
          (template_hole 18,
           template_app
            (template_app (template_hole 17, template_hole 16),
             template_hole 15)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_hole 12),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_hole 8)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app (template_hole 20, template_hole 19),
                       template_var 0)))))),
           template_hole 0)))),
    ("LList.lzipWith_simps",
     "lzipWith$?f$(?x :@ ?xs)$(?y :@ ?ys) =
      ?f$?x$?y :@ lzipWith$?f$?xs$?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_hole 11),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 3)),
               template_var 2))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 1))),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_var 4)),
               template_var 2)),
           template_var 0)))),
    ("LList.llist_case_distr_strict",
     "?f$\<bottom> = \<bottom> ==>
      ?f$(llist_case$?g$?h$?xxs) =
      (case ?xxs of lnil => ?f$?g | x :@ xs => ?f$(?h$x$xs))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 3),
            template_hole 12),
          template_hole 11)],
       template_equation
        (template_app
          (template_app (template_hole 13, template_var 3),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 13, template_var 3),
                     template_var 2))),
               template_app (template_hole 2, t_empty))),
           template_var 0))))]
