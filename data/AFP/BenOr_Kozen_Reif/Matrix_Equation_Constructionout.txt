Loading theory "Draft.More_Matrix" (required by "Draft.Matrix_Equation_ConstructionTemplates" via "Draft.Matrix_Equation_Construction" via "Draft.BKR_Algorithm")
Loading theory "Draft.Templates" (required by "Draft.Matrix_Equation_ConstructionTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.171s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Matrix_Equation_ConstructionTemplates")
instantiation
  mat :: (conjugate) conjugate
  conjugate_mat == conjugate :: 'a mat => 'a mat
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.553s elapsed time, 1.113s cpu time, 0.131s GC time
locale vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
locale conjugatable_vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
locale conjugatable_vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
### theory "Draft.More_Matrix"
### 2.070s elapsed time, 2.998s cpu time, 0.677s GC time
Loading theory "Draft.BKR_Algorithm" (required by "Draft.Matrix_Equation_ConstructionTemplates" via "Draft.Matrix_Equation_Construction")
[| ?A : carrier_mat ?n ?n;
   gauss_jordan ?A (1\<^sub>m ?n) = (1\<^sub>m ?n, ?B') |]
==> ?A * ?B' = 1\<^sub>m ?n
[| ?A : carrier_mat ?n ?n;
   gauss_jordan ?A (1\<^sub>m ?n) = (1\<^sub>m ?n, ?B') |]
==> ?B' * ?A = 1\<^sub>m ?n
[| ?A : carrier_mat ?n ?n;
   gauss_jordan ?A (1\<^sub>m ?n) = (1\<^sub>m ?n, ?B') |]
==> ?B' : carrier_mat ?n ?n
consts
  matr_option :: "nat => 'a mat option => 'a mat"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.BKR_Algorithm"
### 1.041s elapsed time, 1.086s cpu time, 0.099s GC time
Loading theory "Draft.Matrix_Equation_Construction" (required by "Draft.Matrix_Equation_ConstructionTemplates")
?p ~= 0 ==> finite {x. poly ?p x = (0::?'a)}
construct_lhs_vector ?p ?qs ?signs ==
vec_of_list
 (map (%w. rat_of_int
            (int (length
                   (filter (%v. v = w)
                     (map (consistent_sign_vec_copr ?qs)
                       (characterize_root_list_p ?p))))))
   ?signs)
### theory "Draft.Matrix_Equation_Construction"
### 0.350s elapsed time, 0.390s cpu time, 0.071s GC time
Loading theory "Draft.Matrix_Equation_ConstructionTemplates"
val templateLemmas =
   [("Matrix_Equation_Construction.alt_matrix_char",
     "alt_matrix_A ?signs ?subsets = M_mat ?signs ?subsets",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix_Equation_Construction.mtx_row_length",
     "list_all (%r. length r = length ?signs) (map (mtx_row ?signs) ?ls)",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))
         )),
    ("Matrix_Equation_Construction.card_eq_const_sum",
     "finite ?A ==> ?k * real (card ?A) = (SUM x:?A. ?k)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Matrix_Equation_Construction.consistent_signs_at_roots_eq",
     "?p ~= 0 ==>
      consistent_signs_at_roots ?p ?qs =
      set (characterize_consistent_signs_at_roots ?p ?qs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Matrix_Equation_Construction.coprime_set_prod",
     "finite ?I ==> (ALL q:?I. coprime ?p q) --> coprime ?p (\<Prod>?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1), t_empty)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Matrix_Equation_Construction.map_vec_vec_of_list_eq_intro",
     "map ?f ?xs = map ?g ?ys ==>
      map_vec ?f (vec_of_list ?xs) = map_vec ?g (vec_of_list ?ys)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix_Equation_Construction.nonzero_hyp",
     "finite ?I ==> (ALL q:?I. q ~= 0) --> \<Prod>?I ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0), t_empty)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, t_empty),
                     template_var 0)),
                 template_hole 1)))
           ))),
    ("Matrix_Equation_Construction.subsets_are_rows",
     "ALL i<length ?subsets.
         row (alt_matrix_A ?signs ?subsets) i =
         vec (length ?signs) (%j. z (?subsets ! i) (?signs ! j))",
     template_predicate (template_app (template_hole 11, t_empty))),
    ("Matrix_Equation_Construction.signs_are_cols",
     "ALL i<length ?signs.
         col (alt_matrix_A ?signs ?subsets) i =
         vec (length ?subsets) (%j. z (?subsets ! j) (?signs ! i))",
     template_predicate (template_app (template_hole 11, t_empty))),
    ("Matrix_Equation_Construction.vec_of_list_dot_rewrite",
     "length ?xs = length ?ys ==>
      vec_of_list ?xs \<bullet> vec_of_list ?ys =
      sum_list (map2 (*) ?xs ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Matrix_Equation_Construction.csa_list_copr_rel",
     "[| ?p ~= 0; ALL q. List.member ?qs q --> coprime ?p q |]
      ==> characterize_consistent_signs_at_roots ?p ?qs =
          characterize_consistent_signs_at_roots_copr ?p ?qs",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Matrix_Equation_Construction.row_mat_of_rows_list",
     "[| list_all (%r. length r = ?nc) ?rs; ?i < length ?rs |]
      ==> row (mat_of_rows_list ?nc ?rs) ?i = vec_of_list (?rs ! ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, t_empty), template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Matrix_Equation_Construction.z_lemma",
     "[| ?sign : set (characterize_consistent_signs_at_roots_copr ?p ?qs);
         list_constr ?I (length ?qs) |]
      ==> z ?I ?sign = 1 | z ?I ?sign = - 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 3)),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_app (template_hole 0, template_hole 1)))
           ))),
    ("Matrix_Equation_Construction.construct_lhs_vector_cleaner",
     "?p ~= 0 ==>
      w_vec ?p ?qs ?signs =
      vec_of_list
       (map (%s. rat_of_int
                  (int (card
                         {x. poly ?p x = 0 &
                             consistent_sign_vec_copr ?qs x = s})))
         ?signs)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 14))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 12, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, t_empty), template_var 0))))),
    ("Matrix_Equation_Construction.mult_mat_vec_of_list",
     "[| length ?ls = ?nc; list_all (%r. length r = ?nc) ?rs |]
      ==> mat_of_rows_list ?nc ?rs *\<^sub>v vec_of_list ?ls =
          vec_of_list
           (map (%r. vec_of_list r \<bullet> vec_of_list ?ls) ?rs)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2), template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Matrix_Equation_Construction.z_signs",
     "[| list_all (%i. i < length ?signs) ?I;
         list_all (%s. s = 1 | s = - 1) ?signs |]
      ==> z ?I ?signs = 1 | z ?I ?signs = - 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_app (template_hole 1, template_hole 2)))
           ))),
    ("Matrix_Equation_Construction.in_set",
     "[| ?p ~= 0; ?x : {x. poly ?p x = 0};
         ?sign = consistent_sign_vec_copr ?qs ?x;
         list_constr ?I (length ?qs) |]
      ==> ?sign : set (characterize_consistent_signs_at_roots_copr ?p ?qs)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 12)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, t_empty))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)))
           ))),
    ("Matrix_Equation_Construction.construct_lhs_vector_clean",
     "[| ?p ~= 0; ?i < length ?signs |]
      ==> of_rat (w_vec ?p ?qs ?signs $ ?i) =
          of_nat
           (card
             {x. poly ?p x = 0 &
                 consistent_sign_vec_copr ?qs x = ?signs ! ?i})",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 16)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 14, template_var 1))],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 0),
                 template_var 1)),
             template_var 2)),
         template_app
          (template_hole 9,
           template_app
            (template_hole 8, template_app (template_hole 7, t_empty)))))),
    ("Matrix_Equation_Construction.lhs_dot_rewrite",
     "?p ~= 0 ==>
      vec_of_list (mtx_row ?signs ?I) \<bullet> w_vec ?p ?qs ?signs =
      (SUM s<-?signs. z ?I s *
                      rat_of_int
                       (int (card
                              {x. poly ?p x = 0 &
                                  consistent_sign_vec_copr ?qs x = s})))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 19))],
       template_equation
        (template_app
          (template_app
            (template_hole 17,
             template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 14, template_var 3),
               template_var 0),
             template_var 2)),
         template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, t_empty), template_var 2))))),
    ("Matrix_Equation_Construction.sum_list_distinct_filter",
     "[| distinct ?xs; distinct ?ys; set ?ys <= set ?xs;
         !!x. x : set ?xs - set ?ys ==> ?f x = 0 |]
      ==> sum_list (map ?f ?xs) = sum_list (map ?f ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Matrix_Equation_Construction.matrix_equation",
     "[| ?p ~= 0; distinct ?signs;
         set (characterize_consistent_signs_at_roots_copr ?p ?qs)
         <= set ?signs;
         ALL q. List.member ?qs q --> coprime ?p q;
         all_list_constr ?subsets (length ?qs) |]
      ==> satisfy_equation ?p ?qs ?subsets ?signs",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)),
          template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Matrix_Equation_Construction.restate_tarski2",
     "?p ~= 0 ==>
      changes_R_smods ?p (pderiv ?p * ?q) =
      int (card {x. poly ?p x = 0 & 0 < poly ?q x}) -
      int (card {x. poly ?p x = 0 & poly ?q x < 0})",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 13))],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1),
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, t_empty)))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, t_empty))))))),
    ("Matrix_Equation_Construction.construct_NofI_prop",
     "?p ~= 0 ==>
      construct_NofI ?p ?I =
      rat_of_int
       (int (card {x. poly ?p x = 0 & 0 < poly (prod_list ?I) x}) -
        int (card {x. poly ?p x = 0 & poly (prod_list ?I) x < 0}))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 13))],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1), template_var 0),
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 6, t_empty)))))))),
    ("Matrix_Equation_Construction.construct_lhs_vector_drop_consistent",
     "[| ?p ~= 0; distinct ?signs;
         set (characterize_consistent_signs_at_roots_copr ?p ?qs)
         <= set ?signs;
         list_constr ?I (length ?qs) |]
      ==> vec_of_list (mtx_row ?signs ?I) \<bullet> w_vec ?p ?qs ?signs =
          vec_of_list
           (mtx_row (characterize_consistent_signs_at_roots_copr ?p ?qs)
             ?I) \<bullet>
          w_vec ?p ?qs
           (characterize_consistent_signs_at_roots_copr ?p ?qs)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)),
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1)),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 1)))))),
    ("Matrix_Equation_Construction.nonzero_product",
     "[| ?p ~= 0; ALL q. List.member ?qs q --> coprime ?p q;
         ?x : {x. poly ?p x = 0}; list_constr ?I (length ?qs) |]
      ==> 0 < poly (prod_list (retrieve_polys ?qs ?I)) ?x |
          poly (prod_list (retrieve_polys ?qs ?I)) ?x < 0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 15)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 0))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 0))),
                   template_var 1)),
               template_hole 6))
           ))),
    ("Matrix_Equation_Construction.matrix_equation_main_step",
     "[| ?p ~= 0; distinct ?signs;
         set (characterize_consistent_signs_at_roots_copr ?p ?qs)
         <= set ?signs;
         list_constr ?I (length ?qs);
         ALL q. List.member ?qs q --> coprime ?p q |]
      ==> vec_of_list (mtx_row ?signs ?I) \<bullet> w_vec ?p ?qs ?signs =
          construct_NofI ?p (retrieve_polys ?qs ?I)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 17)),
        template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 1)),
          template_app (template_hole 14, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, template_var 1))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Matrix_Equation_Construction.relprime",
     "[| coprime ?p ?q; ?p ~= 0; ?q ~= 0 |]
      ==> changes_R_smods ?p (pderiv ?p) =
          int (card {x. poly ?p x = 0 & 0 < poly ?q x} +
               card {x. poly ?p x = 0 & poly ?q x < 0})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 1),
           template_app (template_hole 9, template_var 1)),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6, template_app (template_hole 5, t_empty))),
             template_app
              (template_hole 6,
               template_app (template_hole 5, t_empty))))))),
    ("Matrix_Equation_Construction.horiz_vector_helper_pos_ind",
     "[| ?p ~= 0; ALL q. List.member ?qs q --> coprime ?p q;
         ?x : {x. poly ?p x = 0}; ?sign = consistent_sign_vec_copr ?qs ?x |]
      ==> list_constr ?I (length ?qs) -->
          (0 < poly (prod_list (retrieve_polys ?qs ?I)) ?x) =
          (z ?I ?sign = 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 20)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, t_empty))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_app (template_hole 7, template_var 3))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 11),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 3),
                           template_var 0))),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 1)),
                 template_hole 0)))
           ))),
    ("Matrix_Equation_Construction.restate_tarski",
     "[| coprime ?p ?q; ?p ~= 0; ?q ~= 0 |]
      ==> changes_R_smods ?p (pderiv ?p * ?q) =
          int (card {x. poly ?p x = 0 & 0 < poly ?q x}) -
          int (card {x. poly ?p x = 0 & poly ?q x < 0})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 13)),
        template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_equation
        (template_app
          (template_app (template_hole 11, template_var 1),
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, t_empty)))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, t_empty))))))),
    ("Matrix_Equation_Construction.horiz_vector_helper_pos",
     "[| ?p ~= 0; ALL q. List.member ?qs q --> coprime ?p q;
         ?x : {x. poly ?p x = 0}; ?sign = consistent_sign_vec_copr ?qs ?x;
         list_constr ?I (length ?qs) |]
      ==> (0 < poly (prod_list (retrieve_polys ?qs ?I)) ?x) =
          (z ?I ?sign = 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 20)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 14, t_empty))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 3))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_hole 11),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 0))),
                  template_var 2))
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Matrix_Equation_Construction.horiz_vector_helper_neg",
     "[| ?p ~= 0; ALL q. List.member ?qs q --> coprime ?p q;
         ?x : {x. poly ?p x = 0}; ?sign = consistent_sign_vec_copr ?qs ?x;
         list_constr ?I (length ?qs) |]
      ==> (poly (prod_list (retrieve_polys ?qs ?I)) ?x < 0) =
          (z ?I ?sign = - 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 21)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app (template_hole 15, t_empty))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 8, template_var 3))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 0))),
                    template_var 2)),
                template_hole 12)
              )],
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1),
           template_app (template_hole 1, template_hole 0))))),
    ("Matrix_Equation_Construction.matrix_equation_pretty",
     "[| ?p ~= 0; !!q. q : set ?qs ==> coprime ?p q; distinct ?signs;
         consistent_signs_at_roots ?p ?qs <= set ?signs;
         !!l i. [| l : set ?subsets; i : set l |] ==> i < length ?qs |]
      ==> M_mat ?signs ?subsets *\<^sub>v w_vec ?p ?qs ?signs =
          v_vec ?p ?qs ?subsets",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 21)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 14, template_var 3),
            template_var 2),
          template_app (template_hole 13, template_var 1)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Matrix_Equation_Construction.matrix_equation_helper_step",
     "[| ?p ~= 0; distinct ?signs;
         set (characterize_consistent_signs_at_roots_copr ?p ?qs)
         <= set ?signs;
         list_constr ?I (length ?qs);
         ALL q. List.member ?qs q --> coprime ?p q |]
      ==> vec_of_list (mtx_row ?signs ?I) \<bullet> w_vec ?p ?qs ?signs =
          rat_of_int
           (int (card
                  {x. poly ?p x = 0 &
                      0 < poly (prod_list (retrieve_polys ?qs ?I)) x})) -
          rat_of_int
           (int (card
                  {x. poly ?p x = 0 &
                      poly (prod_list (retrieve_polys ?qs ?I)) x < 0}))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 27)),
        template_predicate
         (template_app (template_hole 26, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 24,
            template_app
             (template_app (template_hole 23, template_var 3),
              template_var 1)),
          template_app (template_hole 24, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 0),
              template_app (template_hole 21, template_var 1))
            ),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 12, template_var 3),
               template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty))))),
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, t_empty))))))))]:
   (string * thm * template) list
### theory "Draft.Matrix_Equation_ConstructionTemplates"
### 0.726s elapsed time, 0.894s cpu time, 0.105s GC time
val it = (): unit
