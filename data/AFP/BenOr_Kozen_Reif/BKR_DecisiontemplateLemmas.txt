   [("BKR_Decision.coprime_factorize",
     "pairwise_coprime_list (fst (factorize_polys ?qs))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("BKR_Decision.squash_idem", "squash (squash ?x) = squash ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Decision.squash_real_of_rat",
     "squash (real_of_rat ?x) = squash ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Decision.poly_list_set_fml",
     "set (poly_list ?fml) = set_fml ?fml",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Decision.index_of_aux_more", "?n <= index_of_aux ?ls ?p ?n",
     template_inequation
      (less_equals, template_var 2,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("BKR_Decision.length_sign_vec",
     "length (sign_vec ?ps ?x) = length ?ps",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("BKR_Decision.length_signs_at",
     "length (signs_at ?qs ?x) = length ?qs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("BKR_Decision.main_step",
     "set (find_consistent_signs ?qs) = consistent_sign_vectors ?qs UNIV",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("BKR_Decision.square_free_normalize",
     "square_free ?p ==> square_free (normalize ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("BKR_Decision.decision_procedure",
     "EX x. fml_sem ?fml x = decide_existential ?fml",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("BKR_Decision.squash_prod_list",
     "squash (prod_list ?ls) = prod_list (map squash ?ls)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("BKR_Decision.consistent_sign_vectors_consistent_sign_vectors_r",
     "consistent_sign_vectors_r (cast_rat_list ?qs) ?S =
      consistent_sign_vectors ?qs ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("BKR_Decision.decision_procedure",
     "(ALL x. fml_sem ?fml x) = decide_universal ?fml",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Decision.removeAt_distinct",
     "distinct ?fss ==> distinct (removeAt ?i ?fss)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("BKR_Decision.squash_pow", "squash (?x ^ ?y) = squash ?x ^ ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("BKR_Decision.coprime_r_zero1",
     "poly (coprime_r ?qs) (real_of_int (crb (prod_list ?qs))) = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_hole 0)),
    ("BKR_Decision.coprime_normalize",
     "comm_monoid_mult_class.coprime ?a ?b ==>
      comm_monoid_mult_class.coprime (normalize ?a) ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("BKR_Decision.squash_mult", "squash (?a * ?b) = squash ?a * squash ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("BKR_Decision.coprime_r_zero2",
     "poly (coprime_r ?qs) (real_of_int (- crb (prod_list ?qs))) = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))))),
       template_hole 0)),
    ("BKR_Decision.undo_normalize",
     "?a = Polynomial.smult (unit_factor (lead_coeff ?a)) (normalize ?a)",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.factorize_polys_irreducible_monic",
     "factorize_polys ?ps = (?fs, ?data) ==> distinct ?fs",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BKR_Decision.coprime_rat_poly_iff_coprimereal_poly",
     "comm_monoid_mult_class.coprime ?p ?q =
      comm_monoid_mult_class.coprime (real_of_rat_poly ?p)
       (real_of_rat_poly ?q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("BKR_Decision.range_eq", "?a = ?b --> range ?a = range ?b",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("BKR_Decision.factorize_polys_square_free_prod_list",
     "factorize_polys ?ps = (?fs, ?data) ==> square_free (prod_list ?fs)",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))
           ))),
    ("BKR_Decision.coprime_rat_poly_real_poly",
     "comm_monoid_mult_class.coprime ?p ?q ==>
      comm_monoid_mult_class.coprime (real_of_rat_poly ?p)
       (real_of_rat_poly ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("BKR_Decision.index_of_lookup",
     "?p : set ?ls ==> index_of ?ls ?p < length ?ls",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.mem_append",
     "List.member (?l1.0 @ ?l2.0) ?m =
      (List.member ?l1.0 ?m | List.member ?l2.0 ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("BKR_Decision.index_of_lookup",
     "?p : set ?ls ==> ?ls ! index_of ?ls ?p = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("BKR_Decision.factorize_rat_poly_monic_square_free_factorization",
     "factorize_rat_poly_monic ?f = (?c, ?fs) ==>
      square_free_factorization ?f (?c, ?fs)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("BKR_Decision.insertAt_nth",
     "?i <= length ?ls ==> insertAt ?i ?n ?ls ! ?i = ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("BKR_Decision.main_step_aux1",
     "fst (factorize_polys ?qs) = [] ==>
      set (find_consistent_signs ?qs) = consistent_sign_vectors ?qs UNIV",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_hole 5)],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("BKR_Decision.convert_closed",
     "?i : set_fml (fst (convert ?fml)) ==>
      ?i < length (snd (convert ?fml))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)))))),
    ("BKR_Decision.length_removeAt",
     "?i < length ?ls ==> length (removeAt ?i ?ls) = length ?ls - 1",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_hole 0)))),
    ("BKR_Decision.index_of_aux_lookup",
     "?p : set ?ls ==> index_of_aux ?ls ?p ?n - ?n < length ?ls",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("BKR_Decision.main_step_aux2",
     "0 < length (fst (factorize_polys ?qs)) ==>
      set (find_consistent_signs ?qs) = consistent_sign_vectors ?qs UNIV",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("BKR_Decision.coprime_mult",
     "[| algebraic_semidom_class.coprime ?a ?b;
         algebraic_semidom_class.coprime ?a ?c |]
      ==> algebraic_semidom_class.coprime ?a (?b * ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("BKR_Decision.hnz_prop",
     "has_no_zeros ?l = (~ (EX k<length ?l. ?l ! k = 0))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("BKR_Decision.insertAt_removeAt",
     "?i < length ?ls ==> insertAt ?i (?ls ! ?i) (removeAt ?i ?ls) = ?ls",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("BKR_Decision.index_of_aux_lookup",
     "?p : set ?ls ==> ?ls ! (index_of_aux ?ls ?p ?n - ?n) = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 0)),
         template_var 2))),
    ("BKR_Decision.normalize_coprime_degree",
     "[| normalize ?f = normalize ?g;
         comm_monoid_mult_class.coprime ?f ?g |]
      ==> degree ?f = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("BKR_Decision.factorize_polys_square_free",
     "[| factorize_polys ?ps = (?fs, ?data); ?f : set ?fs |]
      ==> square_free ?f",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.factorize_polys_undo_factorize_polys",
     "factorize_polys ?ps = (?ftrs, ?data) ==>
      undo_factorize_polys ?data (sign_vec ?ftrs ?x) = sign_vec ?ps ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("BKR_Decision.prod_zero",
     "ALL x. (poly (prod_list ?qs) x = 0) = (EX q:set ?qs. poly q x = 0)",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("BKR_Decision.convert_semantics",
     "fml_sem ?fml ?x =
      lookup_sem (fst (convert ?fml))
       (map (%p. rpoly p ?x) (snd (convert ?fml)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 1)))))),
    ("BKR_Decision.crb_lem_pos",
     "[| poly ?p ?x = 0; ?p ~= 0 |] ==> ?x < real_of_int (crb ?p)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 0),
          template_hole 6),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("BKR_Decision.factorize_polys_map_distinct",
     "[| factorize_polys ?ps = (?fs, ?data);
         ?fss = map real_of_rat_poly ?fs |]
      ==> distinct ?fss",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_hole 1)),
            template_var 2))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.crb_lem_neg",
     "[| poly ?p ?x = 0; ?p ~= 0 |] ==> real_of_int (- crb ?p) < ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("BKR_Decision.factorize_polys_map_square_free_prod_list",
     "[| factorize_polys ?ps = (?fs, ?data);
         ?fss = map real_of_rat_poly ?fs |]
      ==> square_free (prod_list ?fss)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("BKR_Decision.sign_vec_index_of",
     "?f : set ?ftrs ==>
      sign_vec ?ftrs ?x ! index_of ?ftrs ?f = squash (rpoly ?f ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 2)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)),
             template_var 0))))),
    ("BKR_Decision.signs_at_insert",
     "?i <= length ?qs ==>
      insertAt ?i (squash (poly ?p ?x)) (signs_at ?qs ?x) =
      signs_at (insertAt ?i ?p ?qs) ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 2)),
           template_var 0)))),
    ("BKR_Decision.squarefree_factorization_degree",
     "square_free_factorization ?p (?c, ?fs) ==>
      degree ?p = (SUM (f, c)<-?fs. (c + 1) * degree f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_var 0))))),
    ("BKR_Decision.same_sign_cond_rationals_reals",
     "0 < length (fst (factorize_polys ?qs)) ==>
      set (find_sgas (map real_of_rat_poly (fst (factorize_polys ?qs)))) =
      consistent_sign_vectors (fst (factorize_polys ?qs)) UNIV",
     template_implication
      ([template_inequation
         (less_than, template_hole 11,
          template_app
           (template_hole 10,
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0))))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 0))),
           template_hole 0)))),
    ("BKR_Decision.in_set_concat_map",
     "[| ?i < length ?ls; ?x : set (?f (?ls ! ?i)) |]
      ==> ?x : set (concat (map ?f ?ls))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_var 0,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("BKR_Decision.decide_univ_lem_helper",
     "(?fml_struct, ?polys) = convert ?fml ==>
      (ALL x. lookup_sem ?fml_struct (map (%p. rpoly p x) ?polys)) =
      decide_universal ?fml",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.decide_exis_lem_helper",
     "(?fml_struct, ?polys) = convert ?fml ==>
      (EX x. lookup_sem ?fml_struct (map (%p. rpoly p x) ?polys)) =
      decide_existential ?fml",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.consistent_signs_atw",
     "(!!p. p : set ?fs ==> poly p ?x ~= 0) ==>
      consistent_sign_vec_copr ?fs ?x = signs_at ?fs ?x",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("BKR_Decision.factorize_polys_irreducible_monic",
     "[| factorize_polys ?ps = (?fs, ?data); ?f : set ?fs |]
      ==> irreducible ?f & monic ?f",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 0))),
               template_hole 0))
           ))),
    ("BKR_Decision.factorize_polys_map_square_free",
     "[| factorize_polys ?ps = (?fs, ?data);
         ?fss = map real_of_rat_poly ?fs; ?f : set ?fss |]
      ==> square_free ?f",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 4),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("BKR_Decision.finite_prod_map_of_rat_poly_hom",
     "rpoly (PROD (a, b):?s. ?f a b) ?y =
      (PROD (a, b):?s. rpoly (?f a b) ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 1))),
    ("BKR_Decision.factorize_rat_poly_monic_irreducible_monic",
     "[| factorize_rat_poly_monic ?f = (?c, ?fs); (?fi, ?i) : set ?fs |]
      ==> irreducible ?fi & monic ?fi",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 1, template_var 1))),
               template_hole 0))
           ))),
    ("BKR_Decision.coprime_r_coprime_prop",
     "[| factorize_polys ?ps = (?fs, ?data);
         ?fss = map real_of_rat_poly ?fs; ?f : set ?fss |]
      ==> comm_monoid_mult_class.coprime ?f (coprime_r ?fss)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 4),
          template_app
           (template_app (template_hole 8, template_var 3),
            template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("BKR_Decision.coprime_r_nonzero",
     "[| factorize_polys ?ps = (?fs, ?data); ?fs ~= [];
         ?fss = map real_of_rat_poly ?fs |]
      ==> coprime_r ?fss ~= 0",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 3),
          template_app
           (template_app (template_hole 10, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3)),
            template_var 2))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("BKR_Decision.factorize_polys_map_coprime_pderiv",
     "[| factorize_polys ?ps = (?fs, ?data);
         ?fss = map real_of_rat_poly ?fs; ?f : set ?fss |]
      ==> comm_monoid_mult_class.coprime ?f (pderiv (prod_list ?fss))",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_hole 5)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("BKR_Decision.find_csas_lemma_onezero_gen",
     "[| factorize_polys ?qs = (?fs, ?data); ?fss = cast_rat_list ?fs |]
      ==> (?csa : consistent_sign_vectors_r ?fss UNIV &
           ~ has_no_zeros ?csa) =
          (?csa : set (find_sgas_aux ?fss))",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 4),
          template_app
           (template_app (template_hole 11, template_var 3),
            template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 9, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("BKR_Decision.factorize_polys_has_factors",
     "[| factorize_polys ?ps = (?ftrs, ?data); ?p : set ?ps;
         factorize_rat_poly_monic ?p = (?c, ?fs) |]
      ==> set (map fst ?fs) <= set ?ftrs",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 5),
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 5))
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app (template_hole 6, template_var 4)))),
    ("BKR_Decision.coprime_prod_list",
     "[| !!p. p : set ?ps ==> p ~= 0;
         comm_monoid_mult_class.coprime (prod_list ?ps) ?q; ?p : set ?ps |]
      ==> comm_monoid_mult_class.coprime ?p ?q",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("BKR_Decision.factorize_polys_coprime",
     "[| factorize_polys ?ps = (?fs, ?data); ?f : set ?fs; ?g : set ?fs;
         ?f ~= ?g |]
      ==> comm_monoid_mult_class.coprime ?f ?g",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 4),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 3))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BKR_Decision.sign_vec_semantics",
     "(!!i. i : set_fml ?fml ==> i < length ?ls) ==>
      lookup_sem ?fml (map (%p. rpoly p ?x) ?ls) =
      lookup_sem ?fml (sign_vec ?ls ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("BKR_Decision.Rolle_pderiv",
     "?x1.0 < ?x2.0 & poly ?q ?x1.0 = 0 & poly ?q ?x2.0 = 0 -->
      (EX w>?x1.0. w < ?x2.0 & poly (pderiv ?q) w = 0)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 2)),
                     template_hole 2)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 1)),
                   template_hole 2)))),
           template_app (template_hole 1, t_empty))
         )),
    ("BKR_Decision.convert_semantics_lem",
     "(!!p. p : set (poly_list ?fml) ==>
            ?ls ! index_of ?ps p = rpoly p ?x) ==>
      fml_sem ?fml ?x = lookup_sem (map_fml (index_of ?ps) ?fml) ?ls",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 7, template_var 1)),
               template_var 3)),
           template_var 2)))),
    ("BKR_Decision.find_csas_lemma_nozeros",
     "[| factorize_polys ?qs = (?fs, ?data); ?fs ~= [] |]
      ==> (?csa : consistent_sign_vectors ?fs UNIV & has_no_zeros ?csa) =
          (?csa
           : set (find_consistent_signs_at_roots
                   (coprime_r (cast_rat_list ?fs)) (cast_rat_list ?fs)))",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 3),
          template_app
           (template_app (template_hole 13, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_hole 5))),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2))),
               template_app (template_hole 0, template_var 2))))))),
    ("BKR_Decision.characterize_consistent_signs_at_roots_rw",
     "[| ?p ~= 0;
         !!q. q : set ?fs ==> comm_monoid_mult_class.coprime ?p q |]
      ==> set (characterize_consistent_signs_at_roots ?p ?fs) =
          consistent_sign_vectors_r ?fs {x. poly ?p x = 0}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, t_empty))))),
    ("BKR_Decision.irreducible_monic_coprime",
     "[| monic ?f; irreducible ?f; monic ?g; irreducible ?g; ?f ~= ?g |]
      ==> comm_monoid_mult_class.coprime ?f ?g",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 5, template_var 1)),
          template_hole 4),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 0),
            template_app (template_hole 5, template_var 0)),
          template_hole 4),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BKR_Decision.factorize_polys_undo_factorize_polys_set",
     "[| factorize_polys ?ps = (?ftrs, ?data);
         ?sgas = find_sgas (map real_of_rat_poly ?ftrs);
         set ?sgas = consistent_sign_vectors ?ftrs UNIV |]
      ==> set (map (undo_factorize_polys ?data) ?sgas) =
          consistent_sign_vectors ?ps UNIV",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6)),
              template_var 2))),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_hole 2))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_hole 2)))),
    ("BKR_Decision.finite_smult_distr",
     "distinct ?fs ==>
      (PROD (x, y):set ?fs. Polynomial.smult (?f x y) (?g x y)) =
      Polynomial.smult (PROD (x, y):set ?fs. ?f x y)
       (PROD (x, y):set ?fs. ?g x y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 2, template_var 2)))))),
    ("BKR_Decision.roots_of_coprime_r_capture_sgas_without_zeros",
     "[| pairwise_coprime_list ?qs; !!q. q : set ?qs ==> rsquarefree q;
         ?sga = sign_vec ?qs ?x1.0; has_no_zeros ?sga |]
      ==> EX w:roots_of_coprime_r (cast_rat_list ?qs).
             ?sga = sign_vec ?qs w",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))),
             t_empty)
           ))),
    ("BKR_Decision.factorize_polys_map_coprime",
     "[| factorize_polys ?ps = (?fs, ?data);
         ?fss = map real_of_rat_poly ?fs; ?f : set ?fss; ?g : set ?fss;
         ?f ~= ?g |]
      ==> comm_monoid_mult_class.coprime ?f ?g",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_hole 5)),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("BKR_Decision.universal_lookup_sem",
     "[| !!i. i : set_fml ?fml ==> i < length ?qs;
         set ?signs = consistent_sign_vectors ?qs UNIV |]
      ==> (ALL x. lookup_sem ?fml (map (%p. rpoly p x) ?qs)) =
          list_all (lookup_sem ?fml) ?signs",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_hole 9))],
       template_equation
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("BKR_Decision.zero_below",
     "has_no_zeros (sign_vec ?qs ?x1.0) ==>
      ALL x2<?x1.0.
         sign_vec ?qs ?x1.0 ~= sign_vec ?qs x2 -->
         (EX r<?x1.0. x2 <= r & (EX q:set ?qs. rpoly q r = 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("BKR_Decision.zero_above",
     "has_no_zeros (sign_vec ?qs ?x1.0) ==>
      ALL x2>?x1.0.
         sign_vec ?qs ?x1.0 ~= sign_vec ?qs x2 -->
         (EX r>?x1.0. r <= x2 & (EX q:set ?qs. rpoly q r = 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("BKR_Decision.existential_lookup_sem",
     "[| !!i. i : set_fml ?fml ==> i < length ?qs;
         set ?signs = consistent_sign_vectors ?qs UNIV |]
      ==> (EX x. lookup_sem ?fml (map (%p. rpoly p x) ?qs)) =
          (find (lookup_sem ?fml) ?signs ~= None)",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty)),
        template_equation
         (template_app (template_hole 14, template_var 0),
          template_app
           (template_app (template_hole 13, template_var 1),
            template_hole 12))],
       template_implication
        ([template_predicate (template_app (template_hole 10, t_empty))],
         template_negation
          (
             template_equation
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_var 0),
               template_hole 0)
             )))),
    ("BKR_Decision.coprime_over_reals_coprime_over_rats",
     "[| ?csa : consistent_sign_vectors ?qs UNIV;
         ?p1.0 ~= ?p2.0 &
         ?p1.0 < length ?csa &
         ?p2.0 < length ?csa & ?csa ! ?p1.0 = 0 & ?csa ! ?p2.0 = 0 |]
      ==> ~ algebraic_semidom_class.coprime (?qs ! ?p1.0) (?qs ! ?p2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_hole 10))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app (template_hole 5, template_var 3))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 6, template_var 0),
                      template_app (template_hole 5, template_var 3))),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 3, template_var 3),
                            template_var 1)),
                        template_hole 2)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 0)),
                      template_hole 2)))))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))
               )
           ))),
    ("BKR_Decision.sorted_list_lemma",
     "[| ?a < ?b; ?n + 1 < length ?l; sorted_wrt (<) ?l; ?l ! ?n < ?a;
         ?b < ?l ! (?n + 1) |]
      ==> \<nexists>x. List.member ?l x & ?a <= x & x <= ?b",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_hole 8),
          template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 11),
              template_var 0)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 0), template_var 1),
          template_var 3),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)))],
       template_negation
        (template_predicate (template_app (template_hole 3, t_empty))))),
    ("BKR_Decision.undo_factorize_correct",
     "[| factorize_rat_poly_monic ?p = (?c, ?fs);
         !!f p. (f, p) : set ?fs ==> f : set ?ftrs |]
      ==> undo_factorize (?c, map (%(f, pow). (index_of ?ftrs f, pow)) ?fs)
           (sign_vec ?ftrs ?x) =
          squash (rpoly ?p ?x)",
     template_implication
      ([template_equation
         (template_app (template_hole 20, template_var 4),
          template_app
           (template_app (template_hole 19, template_var 3),
            template_var 2)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 3),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty)),
                 template_var 2))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 4)),
             template_var 0))))),
    ("BKR_Decision.coprime_r_roots_prop",
     "ALL q1 q2.
         q1 ~= q2 & List.member ?qs q1 & List.member ?qs q2 -->
         comm_monoid_mult_class.coprime q1 q2 ==>
      ALL x1 x2.
         x1 < x2 &
         (EX q1:set ?qs. poly q1 x1 = 0) &
         (EX q2:set ?qs. poly q2 x2 = 0) -->
         (EX q>x1. q < x2 & poly (coprime_r ?qs) q = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("BKR_Decision.find_csa_at_index",
     "[| ?i < length ?fss;
         !!p q.
            [| p : set ?fss; q : set ?fss; p ~= q |]
            ==> comm_monoid_mult_class.coprime p q;
         !!p. p : set ?fss ==> p ~= 0; distinct ?fss |]
      ==> set (map (insertAt ?i 0)
                (find_consistent_signs_at_roots (?fss ! ?i)
                  (removeAt ?i ?fss))) =
          {v: consistent_sign_vectors_r ?fss UNIV. v ! ?i = 0}",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 23, template_var 0)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_equation
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, t_empty),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 1)),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0)))),
         template_app (template_hole 6, t_empty)))),
    ("BKR_Decision.roots_of_coprime_r_location_property",
     "[| pairwise_coprime_list ?qs; !!q. q : set ?qs ==> rsquarefree q;
         ?sga = sign_vec ?qs ?x1.0; has_no_zeros ?sga;
         ?zer_list = sorted_list_of_set {x. EX q:set ?qs. rpoly q x = 0} |]
      ==> ?zer_list ~= [] -->
          ?x1.0 < ?zer_list ! 0 |
          ?zer_list ! (length ?zer_list - 1) < ?x1.0 |
          (EX n<length ?zer_list - 1.
              ?zer_list ! n < ?x1.0 & ?x1.0 < ?zer_list ! (n + 1))",
     template_implication
      ([template_predicate
         (template_app (template_hole 30, template_var 3)),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 24, template_var 3),
            template_var 1)),
        template_predicate
         (template_app (template_hole 23, template_var 2)),
        template_equation
         (template_var 0,
          template_app
           (template_hole 21, template_app (template_hole 20, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 22, template_var 0),
                   template_hole 11))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_hole 7))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 0),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_var 0)),
                           template_hole 4))),
                     template_var 1)),
                 template_app (template_hole 3, t_empty))))
           )))]
