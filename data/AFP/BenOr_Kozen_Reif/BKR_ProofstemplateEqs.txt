   [("BKR_Proofs.mat_inverse_same", "mat_inverse_var ?A = mat_inverse ?A",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Proofs.dim_col_mat_of_rows_list",
     "dim_col (mat_of_rows_list ?nr ?ls) = ?nr",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("BKR_Proofs.rows_and_cols_transpose", "rows ?M = cols ?M\<^sup>T",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("BKR_Proofs.dim_col_matrix_A",
     "dim_col (M_mat ?signs ?subsets) = length ?signs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("BKR_Proofs.dim_row_mat_of_rows_list",
     "dim_row (mat_of_rows_list ?nr ?ls) = length ?ls",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Proofs.dim_row_matrix_A",
     "dim_row (M_mat ?signs ?subsets) = length ?subsets",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Proofs.rechar_take_cols",
     "take_cols_var ?A ?B = take_cols_from_matrix ?A ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("BKR_Proofs.size_of_rhs",
     "dim_vec (v_vec ?p ?qs ?subsets) = length ?subsets",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Proofs.size_of_lhs",
     "dim_vec (w_vec ?p ?qs ?signs) = length ?signs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("BKR_Proofs.take_rows_and_take_cols",
     "take_rows_from_matrix ?M ?r =
      (take_cols_from_matrix ?M\<^sup>T ?r)\<^sup>T",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("BKR_Proofs.length_signs_smash",
     "length (signs_smash ?signs1.0 ?signs2.0) =
      length ?signs1.0 * length ?signs2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("BKR_Proofs.length_subsets_smash",
     "length (subsets_smash ?n ?subs1.0 ?subs2.0) =
      length ?subs1.0 * length ?subs2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("BKR_Proofs.less_two", "(?j < Suc (Suc 0)) = (?j = 0 | ?j = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 4, template_hole 3)))
            )],
       template_dunno)),
    ("BKR_Proofs.reduction_subsets_is_get_subsets",
     "reduction_subsets ?p ?qs ?signs ?subsets ?m =
      get_subsets (reduce_system ?p (?qs, ?m, ?subsets, ?signs))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))))))),
    ("BKR_Proofs.reduction_signs_is_get_signs",
     "reduction_signs ?p ?qs ?signs ?subsets ?m =
      get_signs (reduce_system ?p (?qs, ?m, ?subsets, ?signs))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))))))),
    ("BKR_Proofs.getter_functions",
     "calculate_data ?p ?qs =
      (get_matrix (calculate_data ?p ?qs),
       get_subsets (calculate_data ?p ?qs),
       get_signs (calculate_data ?p ?qs))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)))))),
    ("BKR_Proofs.combining_to_smash",
     "combine_systems ?p (?qs1.0, ?m1.0, ?sub1.0, ?sgn1.0)
       (?qs2.0, ?m2.0, ?sub2.0, ?sgn2.0) =
      smash_systems ?p ?qs1.0 ?qs2.0 ?sub1.0 ?sub2.0 ?sgn1.0 ?sgn2.0 ?m1.0
       ?m2.0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 8),
           template_app
            (template_app (template_hole 3, template_var 7),
             template_app
              (template_app (template_hole 2, template_var 6),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4)))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 7),
                     template_var 3),
                   template_var 5),
                 template_var 1),
               template_var 4),
             template_var 0),
           template_var 6),
         template_var 2)))]
