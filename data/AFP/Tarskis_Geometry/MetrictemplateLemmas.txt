   [("Elementary_Metric_Spaces.bounded_ball", "bounded (ball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.bounded_cball", "bounded (cball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.open_ball", "open (ball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.closed_cball", "closed (cball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.compact_cball", "compact (cball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.bdd_below_image_dist",
     "bdd_below (dist ?x ` ?A)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))
         )),
    ("Metric_Arith.pre_arith_simps", "EX x. x = ?t",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Metric_Arith.pre_arith_simps", "EX x. ?t = x",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Metric_Arith.pre_arith_simps", "?P ~= (~ ?P)",
     template_negation
      (
         template_equation
          (template_var 0, template_app (template_hole 1, template_var 0))
         )),
    ("Metric_Arith.pre_arith_simps", "(~ ?P) ~= ?P",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_var 0)
         )),
    ("Elementary_Metric_Spaces.ball_trivial", "ball ?x 0 = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Elementary_Metric_Spaces.compact_eq_seq_compact_metric",
     "compact ?S = seq_compact ?S",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.complete_eq_closed",
     "uniform_space_class.complete ?S = closed ?S",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(EX x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Metric_Arith.nnf_thms", "(~ ~ ?P) = ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(False & ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(True & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P & False) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P & True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(False | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(True | ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | False) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?x = ?x) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(True = ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P = True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(False --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(True --> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P --> True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_empty1", "setdist {} ?t = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_refl", "setdist ?S ?S = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_empty2", "setdist ?t {} = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Elementary_Metric_Spaces.infdist_nonneg", "0 <= infdist ?x ?A",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.setdist_pos_le", "0 <= setdist ?s ?t",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(False = ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P = False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P --> False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.compact_closure",
     "compact (closure ?S) = bounded ?S",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P & ~ ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(~ ?P & ?P) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | ~ ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(~ ?P | ?P) = True",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.diameter_singleton", "diameter {?x} = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Elementary_Metric_Spaces.closed_limpts", "closed {x. x islimpt ?S}",
     template_predicate
      (
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))
         )),
    ("Elementary_Metric_Spaces.bounded_imp_bdd_above",
     "bounded ?S ==> bdd_above ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_imp_bdd_below",
     "bounded ?S ==> bdd_below ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.seq_compact_imp_Heine_Borel",
     "seq_compact ?S ==> compact ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.finite_imp_bounded",
     "finite ?S ==> bounded ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.compact_imp_bounded",
     "compact ?U ==> bounded ?U",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.compact_imp_complete",
     "compact ?s ==> uniform_space_class.complete ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.complete_imp_closed",
     "uniform_space_class.complete ?S ==> closed ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.cball_trivial", "cball ?x 0 = {?x}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Elementary_Metric_Spaces.sphere_trivial", "sphere ?x 0 = {?x}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Metric_Arith.pre_arith_simps", "(?a = ?b) = (?b = ?a)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation (template_var 0, template_var 1))),
    ("Elementary_Metric_Spaces.bdd_above_norm",
     "bdd_above (norm ` ?X) = bounded ?X",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.bounded_insert",
     "bounded (insert ?x ?S) = bounded ?S",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P --> ~ ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.setdist_sym",
     "setdist ?S ?T = setdist ?T ?S",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Elementary_Metric_Spaces.ball_subset_cball",
     "ball ?x ?e <= cball ?x ?e",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.sphere_cball", "sphere ?z ?r <= cball ?z ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.bounded_closure",
     "bounded ?S ==> bounded (closure ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_interior",
     "bounded ?S ==> bounded (interior ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_frontier_bounded",
     "bounded ?S ==> compact (frontier ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_frontier",
     "compact ?S ==> compact (frontier ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.interior_ball",
     "interior (ball ?x ?e) = ball ?x ?e",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.compact_eq_bounded_closed",
     "compact ?S = (bounded ?S & closed ?S)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Metric_Arith.nnf_thms", "(?P --> ?Q) = (~ ?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Elementary_Metric_Spaces.limpt_of_closure",
     "?x islimpt closure ?S = ?x islimpt ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Metric_Arith.nnf_simps", "(~ ?x < ?y) = (?y <= ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Metric_Arith.nnf_simps", "(~ ?x <= ?y) = (?y < ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. x ~= ?t) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(ALL x. ?t ~= x) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_closure_2",
     "setdist ?T (closure ?S) = setdist ?T ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.setdist_closure_1",
     "setdist (closure ?S) ?T = setdist ?S ?T",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Metric_Arith.real_abs_dist", "\<bar>dist ?x ?y\<bar> = dist ?x ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.continuous_on_setdist",
     "continuous_on ?T (%y. setdist {y} ?S)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)
         )),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_setdist",
     "uniformly_continuous_on ?T (%y. setdist {y} ?S)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)
         )),
    ("Elementary_Metric_Spaces.bounded_diff",
     "bounded ?S ==> bounded (?S - ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.diameter_ge_0",
     "bounded ?S ==> 0 <= diameter ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_fst",
     "bounded ?s ==> bounded (fst ` ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_snd",
     "bounded ?s ==> bounded (snd ` ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.frontier_subset_compact",
     "compact ?S ==> frontier ?S <= ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Elementary_Metric_Spaces.cauchy_imp_bounded",
     "Cauchy ?s ==> bounded (range ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Metric_Arith.pre_arith_simps", "(?P ~= ?Q) = (?P = (~ ?Q))",
     template_bimplication
      (template_negation
        (template_equation (template_var 1, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Metric_Arith.pre_arith_simps", "(?P & ?P & ?Q) = (?P & ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P | ?P | ?Q) = (?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.ball_eq_empty",
     "(ball ?x ?e = {}) = (?e <= 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Elementary_Metric_Spaces.cball_eq_empty",
     "(cball ?x ?e = {}) = (?e < 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Metric_Arith.pre_arith_simps", "((~ ?P) = (~ ?Q)) = (?P = ?Q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Elementary_Metric_Spaces.centre_in_ball",
     "(?x : ball ?x ?e) = (0 < ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Elementary_Metric_Spaces.centre_in_cball",
     "(?x : cball ?x ?e) = (0 <= ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Elementary_Metric_Spaces.infdist_eq_setdist",
     "infdist ?x ?A = setdist {?x} ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Elementary_Metric_Spaces.infdist_singleton",
     "infdist ?x {?y} = dist ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.bounded_subset_ballI",
     "?S <= ball ?x ?r ==> bounded ?S",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Elementary_Metric_Spaces.bounded_Un",
     "bounded (?S Un ?T) = (bounded ?S & bounded ?T)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Metric_Arith.nnf_thms", "(~ (?P & ?Q)) = (~ ?P | ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Metric_Arith.nnf_thms", "(~ (?P | ?Q)) = (~ ?P & ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Elementary_Metric_Spaces.convergent_eq_Cauchy",
     "(EX l. ?S \<longlonglongrightarrow> l) = Cauchy ?S",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.ball_divide_subset_numeral",
     "ball ?x (?e / numeral ?w) <= ball ?x ?e",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1))),
    ("Elementary_Metric_Spaces.cball_divide_subset_numeral",
     "cball ?x (?e / numeral ?w) <= cball ?x ?e",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1))),
    ("Elementary_Metric_Spaces.continuous_at_setdist",
     "isCont (%y. setdist {y} ?S) ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3)),
           t_empty)
         )),
    ("Elementary_Metric_Spaces.diameter_closure",
     "bounded ?S ==> diameter (closure ?S) = diameter ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Elementary_Metric_Spaces.cball_empty", "?e < 0 ==> cball ?x ?e = {}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Elementary_Metric_Spaces.sphere_empty",
     "?r < 0 ==> sphere ?a ?r = {}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Elementary_Metric_Spaces.ball_empty", "?e <= 0 ==> ball ?x ?e = {}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Elementary_Metric_Spaces.infdist_zero",
     "?a : ?A ==> infdist ?a ?A = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Elementary_Metric_Spaces.bounded_closed_imp_seq_compact",
     "[| bounded ?S; closed ?S |] ==> seq_compact ?S",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.cball_diff_eq_sphere",
     "cball ?a ?r - ball ?a ?r = sphere ?a ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.cball_diff_sphere",
     "cball ?a ?r - sphere ?a ?r = ball ?a ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.ball_eq_greaterThanLessThan",
     "ball ?a ?b = {?a - ?b<..<?a + ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_eq_atLeastAtMost",
     "cball ?a ?b = {?a - ?b..?a + ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.mem_ball",
     "(?y : ball ?x ?e) = (dist ?x ?y < ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Elementary_Metric_Spaces.mem_cball",
     "(?y : cball ?x ?e) = (dist ?x ?y <= ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Elementary_Metric_Spaces.mem_sphere",
     "(?y : sphere ?x ?e) = (dist ?x ?y = ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Elementary_Metric_Spaces.cball_eq_sing",
     "(cball ?x ?e = {?x}) = (?e = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_hole 2)),
       template_equation (template_var 0, template_hole 0))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. x = ?t --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. ?t = x --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(EX x. x = ?t & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(EX x. ?t = x & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Elementary_Metric_Spaces.setdist_singletons",
     "setdist {?x} {?y} = dist ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.infdist_triangle",
     "infdist ?x ?A <= infdist ?y ?A + dist ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_closure_image",
     "bounded (?f ` closure ?S) ==> bounded (?f ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.convergent_imp_bounded",
     "?S \<longlonglongrightarrow> ?l ==> bounded (range ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_Int",
     "bounded ?S | bounded ?T ==> bounded (?S Int ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_subset",
     "[| bounded ?T; ?S <= ?T |] ==> bounded ?S",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_iff",
     "bounded ?S = (EX a. ALL x:?S. norm x <= a)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Elementary_Metric_Spaces.bounded_real",
     "bounded ?S = (EX a. ALL x:?S. \<bar>x\<bar> <= a)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Metric_Arith.unfold_simps", "Ball ?A ?P = (ALL x. x : ?A --> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Metric_Arith.unfold_simps", "Bex ?A ?P = (EX x. x : ?A & ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Elementary_Metric_Spaces.bounded_norm_comp",
     "bounded ((%x. norm (?f x)) ` ?S) = bounded (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.infdist_triangle_abs",
     "\<bar>infdist ?x ?A - infdist ?y ?A\<bar> <= dist ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Elementary_Metric_Spaces.cball_sing", "?e = 0 ==> cball ?x ?e = {?x}",
     template_implication
      ([template_equation (template_var 1, template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.subset_ball",
     "?d <= ?e ==> ball ?x ?d <= ball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.subset_cball",
     "?d <= ?e ==> cball ?x ?d <= cball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.infdist_le",
     "?a : ?A ==> infdist ?x ?A <= dist ?x ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Elementary_Metric_Spaces.continuous_infdist",
     "continuous ?F ?f ==> continuous ?F (%x. infdist (?f x) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_infdist",
     "continuous_on ?S ?f ==> continuous_on ?S (%x. infdist (?f x) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Elementary_Metric_Spaces.mem_ball_imp_mem_cball",
     "?x : ball ?y ?e ==> ?x : cball ?y ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.limpt_of_limpts",
     "?x islimpt {y. y islimpt ?S} ==> ?x islimpt ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Elementary_Metric_Spaces.complete_Int_closed",
     "[| uniform_space_class.complete ?S; closed ?t |]
      ==> uniform_space_class.complete (?S Int ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_uniformly_continuous",
     "[| continuous_on ?S ?f; compact ?S |]
      ==> uniformly_continuous_on ?S ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Elementary_Metric_Spaces.ball_max_Un",
     "ball ?a (max ?r ?s) = ball ?a ?r Un ball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.ball_min_Int",
     "ball ?a (min ?r ?s) = ball ?a ?r Int ball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_max_Un",
     "cball ?a (max ?r ?s) = cball ?a ?r Un cball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_min_Int",
     "cball ?a (min ?r ?s) = cball ?a ?r Int cball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_any_center",
     "bounded ?S = (EX e. ALL y:?S. dist ?a y <= e)",
     template_equation
      (template_app (template_hole 4, template_var 1),
       template_app (template_hole 3, t_empty))),
    ("Metric_Arith.nnf_thms", "(?P = ?Q) = ((?P | ~ ?Q) & (~ ?P | ?Q))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Metric_Arith.metric_prenex", "(?P = ?Q) = (?P & ?Q | ~ ?P & ~ ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Metric_Arith.unfold_simps", "(?A <= ?B) = (ALL t. t : ?A --> t : ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Metric_Arith.pre_arith_simps",
     "(?z < max ?x ?y) = (?z < ?x | ?z < ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Metric_Arith.pre_arith_simps",
     "(max ?x ?y < ?z) = (?x < ?z & ?y < ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Metric_Arith.pre_arith_simps",
     "(?z <= max ?x ?y) = (?z <= ?x | ?z <= ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Metric_Arith.pre_arith_simps",
     "(max ?b ?c <= ?a) = (?b <= ?a & ?c <= ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Metric_Arith.unfold_simps", "(?c : ?A Un ?B) = (?c : ?A | ?c : ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Metric_Arith.Sup_insert_insert",
     "Sup (insert ?a (insert ?b ?s)) = Sup (insert (max ?a ?b) ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Elementary_Metric_Spaces.compact_sequence_with_limit",
     "?f \<longlonglongrightarrow> ?l ==> compact (insert ?l (range ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_var 0)),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("Elementary_Metric_Spaces.bounded_Times",
     "[| bounded ?s; bounded ?t |] ==> bounded (?s \<times> ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Elementary_Metric_Spaces.bounded_uniformly_continuous_image",
     "[| uniformly_continuous_on ?S ?f; bounded ?S |]
      ==> bounded (?f ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Metric_Arith.nnf_thms", "(?P ~= ?Q) = ((~ ?P | ~ ?Q) & (?P | ?Q))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.eventually_nhds_ball",
     "0 < ?d ==> \<forall>\<^sub>F x in nhds ?z. x : ball ?z ?d",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.ball_divide_subset",
     "1 <= ?d ==> ball ?x (?e / ?d) <= ball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_divide_subset",
     "1 <= ?d ==> cball ?x (?e / ?d) <= cball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.setdist_le_sing",
     "?x : ?S ==> setdist ?S ?T <= setdist {?x} ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)),
           template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_Union",
     "[| finite ?F; ALL S:?F. bounded S |] ==> bounded (\<Union> ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.diameter_subset",
     "[| ?S <= ?T; bounded ?T |] ==> diameter ?S <= diameter ?T",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.setdist_triangle",
     "setdist ?S ?T <= setdist ?S {?a} + setdist {?a} ?T",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 1)))),
    ("Elementary_Metric_Spaces.bounded_subset_ballD",
     "bounded ?S ==> EX r>0. ?S <= ball ?x r",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Elementary_Metric_Spaces.finite_ball_include",
     "finite ?S ==> EX e>0. ?S <= ball ?a e",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Elementary_Metric_Spaces.boundedI",
     "(!!x. x : ?S ==> norm x <= ?B) ==> bounded ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Elementary_Metric_Spaces.setdist_eq_0I",
     "[| ?x : ?S; ?x : ?T |] ==> setdist ?S ?T = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_closure",
     "[| uniformly_continuous_on ?S ?f; continuous_on (closure ?S) ?f |]
      ==> uniformly_continuous_on (closure ?S) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.closure_contains_Sup",
     "[| ?S ~= {}; bdd_above ?S |] ==> Sup ?S : closure ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.closure_contains_Inf",
     "[| ?S ~= {}; bdd_below ?S |] ==> Inf ?S : closure ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.complete_closed_subset",
     "[| closed ?S; ?S <= ?t; uniform_space_class.complete ?t |]
      ==> uniform_space_class.complete ?S",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Elementary_Metric_Spaces.bounded_subset_cball",
     "bounded ?S = (EX e x. ?S <= cball x e & 0 <= e)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Elementary_Metric_Spaces.bounded_two_points",
     "bounded ?S = (EX e. ALL x:?S. ALL y:?S. dist x y <= e)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Elementary_Metric_Spaces.mem_interior",
     "(?x : interior ?S) = (EX e>0. ball ?x e <= ?S)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Elementary_Metric_Spaces.mem_interior_cball",
     "(?x : interior ?S) = (EX e>0. cball ?x e <= ?S)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Metric_Arith.unfold_simps",
     "(?A Int ?B = {}) = (ALL x:?A. ALL y:?B. x ~= y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Metric_Arith.ball_insert",
     "(ALL x:insert ?a ?B. ?P x) = (?P ?a & (ALL x:?B. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Elementary_Metric_Spaces.setdist_eq_infdist",
     "setdist ?A ?B = (if ?A = {} then 0 else INF a\<in>?A. infdist a ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4)),
               template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 1)))
           ))),
    ("Elementary_Metric_Spaces.setdist_Lipschitz",
     "\<bar>setdist {?x} ?S - setdist {?y} ?S\<bar> <= dist ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_var 1))),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Elementary_Metric_Spaces.diameter_bounded",
     "bounded ?S ==> ALL x:?S. ALL y:?S. dist x y <= diameter ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.in_closure_iff_infdist_zero",
     "?A ~= {} ==> (?x : closure ?A) = (infdist ?x ?A = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app (template_hole 3, template_var 1))
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.open_contains_ball",
     "open ?S = (ALL x:?S. EX e>0. ball x e <= ?S)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app (template_hole 6, template_var 0), t_empty))),
    ("Elementary_Metric_Spaces.open_contains_cball",
     "open ?S = (ALL x:?S. EX e>0. cball x e <= ?S)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app (template_hole 6, template_var 0), t_empty))),
    ("Elementary_Metric_Spaces.islimpt_eq_infinite_ball",
     "?x islimpt ?S = (ALL e>0. infinite (?S Int ball ?x e))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Elementary_Metric_Spaces.islimpt_eq_infinite_cball",
     "?x islimpt ?S = (ALL e>0. infinite (?S Int cball ?x e))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Elementary_Metric_Spaces.perfect_choose_dist",
     "0 < ?r ==> EX a. a ~= ?x & dist a ?x < ?r",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.infdist_notempty",
     "?A ~= {} ==> infdist ?x ?A = Inf (dist ?x ` ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1))))),
    ("Elementary_Metric_Spaces.bounded_has_Sup",
     "[| bounded ?S; ?S ~= {} |] ==> ALL x:?S. x <= Sup ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.bounded_has_Inf",
     "[| bounded ?S; ?S ~= {} |] ==> ALL x:?S. Inf ?S <= x",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.infdist_le2",
     "[| ?a : ?A; dist ?x ?a <= ?d |] ==> infdist ?x ?A <= ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 3),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Elementary_Metric_Spaces.setdist_le_dist",
     "[| ?x : ?s; ?y : ?t |] ==> setdist ?s ?t <= dist ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("Elementary_Metric_Spaces.mem_ball_leI",
     "[| ?x : ball ?y ?e; ?e <= ?f |] ==> ?x : ball ?y ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.mem_cball_leI",
     "[| ?x : cball ?y ?e; ?e <= ?f |] ==> ?x : cball ?y ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.Inf_insert",
     "bounded ?S ==>
      Inf (insert ?x ?S) = (if ?S = {} then ?x else min ?x (Inf ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 5, template_var 1)))
             )))),
    ("Elementary_Metric_Spaces.Sup_insert",
     "bounded ?S ==>
      Sup (insert ?x ?S) = (if ?S = {} then ?x else max ?x (Sup ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 5, template_var 1)))
             )))),
    ("Elementary_Metric_Spaces.tendsto_infdist",
     "(?f \<longlongrightarrow> ?l) ?F ==>
      ((%x. infdist (?f x) ?A) \<longlongrightarrow> infdist ?l ?A) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Elementary_Metric_Spaces.disjoint_cballI",
     "?r + ?s < dist ?x ?y ==> cball ?x ?r Int cball ?y ?s = {}",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_hole 0))),
    ("Elementary_Metric_Spaces.disjoint_ballI",
     "?r + ?s <= dist ?x ?y ==> ball ?x ?r Int ball ?y ?s = {}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_hole 0))),
    ("Elementary_Metric_Spaces.infdist_mono",
     "[| ?A <= ?B; ?A ~= {} |] ==> infdist ?x ?B <= infdist ?x ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Elementary_Metric_Spaces.setdist_subset_left",
     "[| ?S ~= {}; ?S <= ?T |] ==> setdist ?T ?u <= setdist ?S ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.setdist_subset_right",
     "[| ?T ~= {}; ?T <= ?u |] ==> setdist ?S ?u <= setdist ?S ?T",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Elementary_Metric_Spaces.closed_contains_Sup",
     "[| ?S ~= {}; bdd_above ?S; closed ?S |] ==> Sup ?S : ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.closed_contains_Inf",
     "[| ?S ~= {}; bdd_below ?S; closed ?S |] ==> Inf ?S : ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.atLeastAtMost_eq_cball",
     "{?a..?b} = cball ((?a + ?b) / 2) ((?b - ?a) / 2)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Elementary_Metric_Spaces.greaterThanLessThan_eq_ball",
     "{?a<..<?b} = ball ((?a + ?b) / 2) ((?b - ?a) / 2)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Elementary_Metric_Spaces.compact_eq_Bolzano_Weierstrass",
     "compact ?S =
      (ALL T. infinite T & T <= ?S --> (EX x:?S. x islimpt T))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Elementary_Metric_Spaces.closure_approachable",
     "(?x : closure ?S) = (ALL e>0. EX y:?S. dist y ?x < e)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Elementary_Metric_Spaces.closure_approachable_le",
     "(?x : closure ?S) = (ALL e>0. EX y:?S. dist y ?x <= e)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Elementary_Metric_Spaces.open_contains_ball_eq",
     "open ?S ==> (?x : ?S) = (EX e>0. ball ?x e <= ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_var 1),
         template_app (template_hole 5, t_empty)))),
    ("Elementary_Metric_Spaces.eventually_at_ball",
     "0 < ?d ==>
      \<forall>\<^sub>F t in at ?z within ?A. t : ball ?z ?d & t : ?A",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_UN",
     "[| finite ?A; ALL x:?A. bounded (?B x) |]
      ==> bounded (\<Union> (?B ` ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Elementary_Metric_Spaces.in_closed_iff_infdist_zero",
     "[| closed ?A; ?A ~= {} |] ==> (?x : ?A) = (infdist ?x ?A = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1)
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.closure_approachableD",
     "[| ?x : closure ?S; 0 < ?e |] ==> EX y:?S. dist ?x y < ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Elementary_Metric_Spaces.compact_Inter",
     "[| !!S. S : ?\<F> ==> compact S; ?\<F> ~= {} |]
      ==> compact (\<Inter> ?\<F>)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.diameter_bounded_bound",
     "[| bounded ?S; ?x : ?S; ?y : ?S |] ==> dist ?x ?y <= diameter ?S",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Elementary_Metric_Spaces.open_contains_cball_eq",
     "open ?S ==> ALL x. (x : ?S) = (EX e>0. cball x e <= ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Elementary_Metric_Spaces.at_within_ball",
     "[| 0 < ?e; dist ?x ?y < ?e |] ==> at ?y within ball ?x ?e = at ?y",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.bounded_dist_comp",
     "[| bounded (?f ` ?S); bounded (?g ` ?S) |]
      ==> bounded ((%x. dist (?f x) (?g x)) ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Elementary_Metric_Spaces.cball_trans",
     "[| ?y : cball ?z ?b; ?x : cball ?y ?a |] ==> ?x : cball ?z (?b + ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Elementary_Metric_Spaces.infdist_pos_not_in_closed",
     "[| closed ?S; ?S ~= {}; ?x ~: ?S |] ==> 0 < infdist ?x ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)
                )
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.closed_approachable",
     "closed ?S ==> (ALL e>0. EX y:?S. dist y ?x < e) = (?x : ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.openI",
     "(!!x. x : ?S ==> EX e>0. ball x e <= ?S) ==> open ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.Bolzano_Weierstrass_imp_bounded",
     "(!!T. [| infinite T; T <= ?S |] ==> EX x:?S. x islimpt T) ==>
      bounded ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.diameter_compact_attained",
     "[| compact ?S; ?S ~= {} |]
      ==> EX x:?S. EX y:?S. dist x y = diameter ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.islimpt_approachable",
     "?x islimpt ?S = (ALL e>0. EX x':?S. x' ~= ?x & dist x' ?x < e)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.islimpt_approachable_le",
     "?x islimpt ?S = (ALL e>0. EX x':?S. x' ~= ?x & dist x' ?x <= e)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.finite_set_avoid",
     "finite ?S ==> EX d>0. ALL x:?S. x ~= ?a --> d <= dist ?a x",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Elementary_Metric_Spaces.ball_scale",
     "?a ~= 0 ==>
      (*\<^sub>R) ?a ` ball ?c ?r =
      ball (?a *\<^sub>R ?c) (\<bar>?a\<bar> * ?r)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("Elementary_Metric_Spaces.cball_scale",
     "?a ~= 0 ==>
      (*\<^sub>R) ?a ` cball ?c ?r =
      cball (?a *\<^sub>R ?c) (\<bar>?a\<bar> * ?r)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("Elementary_Metric_Spaces.bounded_has_Sup",
     "[| bounded ?S; ?S ~= {} |]
      ==> ALL b. (ALL x:?S. x <= b) --> Sup ?S <= b",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.bounded_has_Inf",
     "[| bounded ?S; ?S ~= {} |]
      ==> ALL b. (ALL x:?S. b <= x) --> b <= Inf ?S",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.distance_attains_sup",
     "[| compact ?s; ?s ~= {} |]
      ==> EX x:?s. ALL y:?s. dist ?a y <= dist ?a x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Elementary_Metric_Spaces.compact_infdist_le",
     "[| ?A ~= {}; compact ?A; 0 < ?e |]
      ==> compact {x. infdist x ?A <= ?e}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 2, t_empty))
           ))),
    ("Elementary_Metric_Spaces.closed_subset_contains_Sup",
     "[| closed ?C; ?A <= ?C; ?A ~= {}; bdd_above ?A |] ==> Sup ?A : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Elementary_Metric_Spaces.closed_subset_contains_Inf",
     "[| closed ?C; ?A <= ?C; ?A ~= {}; bdd_below ?A |] ==> Inf ?A : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Elementary_Metric_Spaces.open_real",
     "open ?s =
      (ALL x:?s. EX e>0. ALL x'. \<bar>x' - x\<bar> < e --> x' : ?s)",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app (template_hole 9, template_var 0), t_empty))),
    ("Elementary_Metric_Spaces.islimpt_approachable_real",
     "?x islimpt ?s =
      (ALL e>0. EX x':?s. x' ~= ?x & \<bar>x' - ?x\<bar> < e)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.eventually_at_ball'",
     "0 < ?d ==>
      \<forall>\<^sub>F t in at ?z within ?A.
         t : ball ?z ?d & t ~= ?z & t : ?A",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.separate_point_closed",
     "[| closed ?s; ?a ~: ?s |] ==> EX d>0. ALL x:?s. d <= dist ?a x",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.discrete_imp_closed",
     "[| 0 < ?e; ALL x:?S. ALL y:?S. dist y x < ?e --> y = x |]
      ==> closed ?S",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0), t_empty)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.atLeastAtMost_subset_contains_Inf",
     "[| ?A ~= {}; ?a <= ?b; ?A <= {?a..?b} |] ==> Inf ?A : {?a..?b}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.closure_Int_ball_not_empty",
     "[| ?S <= closure ?T; ?x : ?S; 0 < ?r |] ==> ?T Int ball ?x ?r ~= {}",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.Lim",
     "(?f \<longlongrightarrow> ?l) ?net =
      (?net = bot |
       (ALL e>0. \<forall>\<^sub>F x in ?net. dist (?f x) ?l < e))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Elementary_Metric_Spaces.not_trivial_limit_within_ball",
     "(at ?x within ?S ~= bot) = (ALL e>0. ?S Int ball ?x e - {?x} ~= {})",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 1),
               template_var 0)),
           template_hole 10)),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.infdist_Un_min",
     "[| ?A ~= {}; ?B ~= {} |]
      ==> infdist ?x (?A Un ?B) = min (infdist ?x ?A) (infdist ?x ?B)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Elementary_Metric_Spaces.bounded_infinite_imp_islimpt",
     "[| ?T <= ?S; bounded ?S; infinite ?T; !!x. x islimpt ?S ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_closed_imp_Cauchy_continuous",
     "[| continuous_on ?S ?f; closed ?S; Cauchy ?\<sigma>;
         !!n. ?\<sigma> n : ?S |]
      ==> Cauchy (?f o ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_eq_totally_bounded",
     "compact ?s =
      (uniform_space_class.complete ?s &
       (ALL e>0. EX k. finite k & ?s <= (UN x:k. ball x e)))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app (template_hole 9, t_empty)))),
    ("Elementary_Metric_Spaces.limpt_sequential_inj",
     "?x islimpt ?S =
      (EX f. (ALL n. f n : ?S - {?x}) &
             inj f & f \<longlonglongrightarrow> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1), template_var 0),
       template_app (template_hole 11, t_empty))),
    ("Elementary_Metric_Spaces.diameter_bounded",
     "bounded ?S ==>
      ALL d>0. d < diameter ?S --> (EX x:?S. EX y:?S. d < dist x y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.diameter_lower_bounded",
     "[| bounded ?S; 0 < ?d; ?d < diameter ?S |]
      ==> EX x:?S. EX y:?S. ?d < dist x y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_closed_Collect_le",
     "[| continuous_on ?s ?f; continuous_on ?s ?g; closed ?s |]
      ==> closed {x: ?s. ?f x <= ?g x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_extension_at_closure",
     "[| uniformly_continuous_on ?X ?f; ?x : closure ?X;
         !!l. (?f \<longlongrightarrow> l) (at ?x within ?X) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.openin_contains_ball",
     "openin (top_of_set ?T) ?S =
      (?S <= ?T & (ALL x:?S. EX e>0. ball x e Int ?T <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_hole 8)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 0), t_empty)))),
    ("Elementary_Metric_Spaces.openin_contains_cball",
     "openin (top_of_set ?T) ?S =
      (?S <= ?T & (ALL x:?S. EX e>0. cball x e Int ?T <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_hole 8)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 0), t_empty)))),
    ("Elementary_Metric_Spaces.openE",
     "[| open ?S; ?x : ?S; !!e. [| 0 < e; ball ?x e <= ?S |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_at_ball",
     "isCont ?f ?x = (ALL e>0. EX d>0. ?f ` ball ?x d <= ball (?f ?x) e)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 1),
             template_hole 10)),
         template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.seq_compact_imp_totally_bounded",
     "seq_compact ?S ==>
      ALL e>0. EX k. finite k & k <= ?S & ?S <= (UN x:k. ball x e)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Elementary_Metric_Spaces.closed_real",
     "closed ?s =
      (ALL x.
          (ALL e>0. EX x':?s. x' ~= x & \<bar>x' - x\<bar> < e) -->
          x : ?s)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.le_setdist_iff",
     "(?d <= setdist ?S ?T) =
      ((ALL x:?S. ALL y:?T. ?d <= dist x y) &
       (?S = {} | ?T = {} --> ?d <= 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1), t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_hole 1)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1))),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_hole 0)))
           ))),
    ("Elementary_Metric_Spaces.compact_sup_maxdistance",
     "[| compact ?S; ?S ~= {} |]
      ==> EX x:?S. EX y:?S. ALL u:?S. ALL v:?S. dist u v <= dist x y",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.Lim_dist_ubound",
     "[| ?net ~= bot; (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. dist ?a (?f x) <= ?e |]
      ==> dist ?a ?l <= ?e",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Elementary_Metric_Spaces.continuous_ge_on_closure",
     "[| continuous_on (closure ?s) ?f; ?x : closure ?s;
         !!x. x : ?s ==> ?a <= ?f x |]
      ==> ?a <= ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_var 2, template_var 1)))),
    ("Elementary_Metric_Spaces.continuous_le_on_closure",
     "[| continuous_on (closure ?s) ?f; ?x : closure ?s;
         !!x. x : ?s ==> ?f x <= ?a |]
      ==> ?f ?x <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_var 0))),
    ("Elementary_Metric_Spaces.continuous_within_ball",
     "continuous (at ?x within ?s) ?f =
      (ALL e>0. EX d>0. ?f ` (ball ?x d Int ?s) <= ball (?f ?x) e)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.Lim_transform_within_set",
     "[| (?f \<longlongrightarrow> ?l) (at ?a within ?S);
         \<forall>\<^sub>F x in at ?a. (x : ?S) = (x : ?T) |]
      ==> (?f \<longlongrightarrow> ?l) (at ?a within ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app (template_hole 5, template_var 3)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.infdist_attains_inf",
     "[| closed ?X; ?X ~= {};
         !!x. [| x : ?X; infdist ?y ?X = dist ?y x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.setdist_attains_inf",
     "[| compact ?B; ?B ~= {};
         !!y. [| y : ?B; setdist ?A ?B = infdist y ?A |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.frontier_straddle",
     "(?a : frontier ?S) =
      (ALL e>0.
          (EX x:?S. dist ?a x < e) & (EX x. x ~: ?S & dist ?a x < e))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.separate_closed_compact",
     "[| closed ?s; compact ?t; ?s Int ?t = {} |]
      ==> EX d>0. ALL x:?s. ALL y:?t. d <= dist x y",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.separate_compact_closed",
     "[| compact ?s; closed ?t; ?s Int ?t = {} |]
      ==> EX d>0. ALL x:?s. ALL y:?t. d <= dist x y",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.continuous_at_eps_delta",
     "isCont ?f ?x =
      (ALL e>0.
          EX d>0. ALL x'. dist x' ?x < d --> dist (?f x') (?f ?x) < e)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_hole 9)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.continuous_at_avoid",
     "[| isCont ?f ?x; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 2), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.banach_fix_type",
     "[| 0 <= ?c; ?c < 1; ALL x y. dist (?f x) (?f y) <= ?c * dist x y |]
      ==> EX! x. ?f x = x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 5),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Elementary_Metric_Spaces.continuous_within_eps_delta",
     "continuous (at ?x within ?s) ?f =
      (ALL e>0.
          EX d>0. ALL x':?s. dist x' ?x < d --> dist (?f x') (?f ?x) < e)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.continuous_within_avoid",
     "[| continuous (at ?x within ?s) ?f; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y:?s. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 3), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.compact_fip_Heine_Borel",
     "[| !!T. T : ?\<F> ==> compact T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |] ==> \<Inter> \<F>' ~= {} |]
      ==> \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_iff",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL e>0.
             EX d>0. ALL x':?s. dist x' x < d --> dist (?f x') (?f x) < e)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, template_var 1), t_empty))),
    ("Elementary_Metric_Spaces.continuous_on_closure_sequentially",
     "continuous_on (closure ?S) ?f =
      (ALL x a.
          a : closure ?S &
          (ALL n. x n : ?S) & x \<longlonglongrightarrow> a -->
          (?f o x) \<longlonglongrightarrow> ?f a)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app (template_hole 12, template_var 1)),
         template_var 0),
       template_app (template_hole 11, t_empty))),
    ("Elementary_Metric_Spaces.continuous_at_real_range",
     "isCont ?f ?x =
      (ALL e>0.
          EX d>0.
             ALL x'. norm (x' - ?x) < d --> \<bar>?f x' - ?f ?x\<bar> < e)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_var 1),
             template_hole 11)),
         template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.diameter_le",
     "[| ?S ~= {} | 0 <= ?d;
         !!x y. [| x : ?S; y : ?S |] ==> norm (x - y) <= ?d |]
      ==> diameter ?S <= ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Elementary_Metric_Spaces.continuous_on_real_range",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL e>0.
             EX d>0.
                ALL x':?s.
                   norm (x' - x) < d --> \<bar>?f x' - ?f x\<bar> < e)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 10, template_var 1), t_empty))),
    ("Elementary_Metric_Spaces.distance_attains_inf",
     "[| closed ?s; ?s ~= {};
         !!x. [| x : ?s; !!y. y : ?s ==> dist ?a x <= dist ?a y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_on_avoid",
     "[| continuous_on ?s ?f; ?x : ?s; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y:?s. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.le_setdistI",
     "[| ?s ~= {}; ?t ~= {};
         !!x y. [| x : ?s; y : ?t |] ==> ?d <= dist x y |]
      ==> ?d <= setdist ?s ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Elementary_Metric_Spaces.setdist_unique",
     "[| ?a : ?S; ?b : ?T;
         !!x y. x : ?S & y : ?T ==> dist ?a ?b <= dist x y |]
      ==> setdist ?S ?T = dist ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 1)))),
    ("Elementary_Metric_Spaces.Lim_at",
     "?f \<midarrow>?a\<rightarrow> ?l =
      (ALL e>0.
          EX d>0.
             ALL x. 0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 2),
           template_app (template_hole 11, template_var 1)),
         template_app
          (template_app (template_hole 10, template_var 0),
           template_hole 9)),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.continuous_on_open_avoid",
     "[| continuous_on ?s ?f; open ?s; ?x : ?s; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.Lim_within",
     "(?f \<longlongrightarrow> ?l) (at ?a within ?S) =
      (ALL e>0.
          EX d>0.
             ALL x:?S.
                0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 3),
           template_app (template_hole 10, template_var 2)),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.Lim_within_le",
     "(?f \<longlongrightarrow> ?l) (at ?a within ?S) =
      (ALL e>0.
          EX d>0.
             ALL x:?S.
                0 < dist x ?a & dist x ?a <= d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 3),
           template_app (template_hole 11, template_var 2)),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.continuous_onI",
     "(!!x e.
          [| 0 < e; x : ?s |]
          ==> EX d>0.
                 ALL x':?s. dist x' x < d --> dist (?f x') (?f x) <= e) ==>
      continuous_on ?s ?f",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Elementary_Metric_Spaces.compact_in_open_separated",
     "[| ?A ~= {}; compact ?A; open ?B; ?A <= ?B;
         !!e. [| 0 < e; {x. infdist x ?A <= e} <= ?B |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.closed_imp_fip_compact",
     "[| closed ?S; !!T. T : ?\<F> ==> compact T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |]
            ==> ?S Int \<Inter> \<F>' ~= {} |]
      ==> ?S Int \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_closure",
     "continuous_on (closure ?S) ?f =
      (ALL x e.
          x : closure ?S & 0 < e -->
          (EX d>0.
              ALL y. y : ?S & dist y x < d --> dist (?f y) (?f x) < e))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 1)),
         template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.Lim_withinI",
     "(!!e. 0 < e ==>
            EX d>0.
               ALL x:?S.
                  0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l <= e) ==>
      (?f \<longlongrightarrow> ?l) (at ?a within ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3))
           ))),
    ("Elementary_Metric_Spaces.continuous_transform_within",
     "[| continuous (at ?x within ?s) ?f; 0 < ?d; ?x : ?s;
         !!x'. [| x' : ?s; dist x' ?x < ?d |] ==> ?f x' = ?g x' |]
      ==> continuous (at ?x within ?s) ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.continuous_at_right_real_increasing",
     "(!!x y. x <= y ==> ?f x <= ?f y) ==>
      continuous (at_right ?a) ?f =
      (ALL e>0. EX d>0. ?f (?a + d) - ?f ?a < e)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 0),
               template_app (template_hole 8, template_var 0))),
           template_var 1),
         template_app (template_hole 7, t_empty)))),
    ("Elementary_Metric_Spaces.continuous_at_left_real_increasing",
     "(!!x y. x <= y ==> ?f x <= ?f y) ==>
      continuous (at_left ?a) ?f =
      (ALL e>0. EX delta>0. ?f ?a - ?f (?a - delta) < e)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 0),
               template_app (template_hole 7, template_var 0))),
           template_var 1),
         template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.setdist_ltE",
     "[| setdist ?S ?T < ?b; ?S ~= {}; ?T ~= {};
         !!x y. [| x : ?S; y : ?T; dist x y < ?b |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_var 1),
        template_negation
         (template_equation (template_var 3, template_hole 3)),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_sequentially",
     "uniformly_continuous_on ?s ?f =
      (ALL x y.
          (ALL n. x n : ?s) &
          (ALL n. y n : ?s) &
          (%n. dist (x n) (y n)) \<longlonglongrightarrow> 0 -->
          (%n. dist (?f (x n)) (?f (y n))) \<longlonglongrightarrow> 0)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.continuous_within_E",
     "[| continuous (at ?x within ?s) ?f; 0 < ?e;
         !!d. [| 0 < d;
                 !!x'. [| x' : ?s; dist x' ?x <= d |]
                       ==> dist (?f x') (?f ?x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.closed_fip_Heine_Borel",
     "[| closed ?S; ?T : ?\<F>; bounded ?T; !!T. T : ?\<F> ==> closed T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |] ==> \<Inter> \<F>' ~= {} |]
      ==> \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.Edelstein_fix",
     "[| compact ?S; ?S ~= {}; ?g ` ?S <= ?S;
         ALL x:?S. ALL y:?S. x ~= y --> dist (?g x) (?g y) < dist x y |]
      ==> EX! x. x : ?S & ?g x = x",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 0), template_var 1),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1), t_empty)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Elementary_Metric_Spaces.Heine_Borel_lemma",
     "[| compact ?S; ?S <= \<Union> ?\<G>; !!G. G : ?\<G> ==> open G;
         !!e. [| 0 < e; !!x. x : ?S ==> EX G:?\<G>. ball x e <= G |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_onE",
     "[| continuous_on ?s ?f; ?x : ?s; 0 < ?e;
         !!d. [| 0 < d;
                 !!x'. [| x' : ?s; dist x' ?x <= d |]
                       ==> dist (?f x') (?f ?x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 4)
            ),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_onE",
     "[| uniformly_continuous_on ?s ?f; 0 < ?e;
         !!d. [| 0 < d;
                 !!x x'.
                    [| x : ?s; x' : ?s; dist x' x < d |]
                    ==> dist (?f x') (?f x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.closed_imp_fip",
     "[| closed ?S; ?T : ?\<F>; bounded ?T; !!T. T : ?\<F> ==> closed T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |]
            ==> ?S Int \<Inter> \<F>' ~= {} |]
      ==> ?S Int \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.bounded_closed_nest",
     "[| !!n. closed (?S n); !!n. ?S n ~= {};
         !!m n. m <= n ==> ?S n <= ?S m; bounded (?S 0);
         !!a. (!!n. a : ?S n) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_var 1, template_hole 2))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.banach_fix",
     "[| uniform_space_class.complete ?s; ?s ~= {}; 0 <= ?c; ?c < 1;
         ?f ` ?s <= ?s;
         ALL x:?s. ALL y:?s. dist (?f x) (?f y) <= ?c * dist x y |]
      ==> EX! x. x : ?s & ?f x = x",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_inequation (less_equals, template_hole 11, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 9),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 0), template_var 2),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Elementary_Metric_Spaces.Lebesgue_number_lemma",
     "[| compact ?S; ?\<C> ~= {}; ?S <= \<Union> ?\<C>;
         !!B. B : ?\<C> ==> open B;
         !!\<delta>.
            [| 0 < \<delta>;
               !!T. [| T <= ?S; diameter T < \<delta> |]
                    ==> EX B:?\<C>. T <= B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.decreasing_closed_nest_sing",
     "[| !!n. closed (?S n); !!n. ?S n ~= {};
         !!m n. m <= n ==> ?S n <= ?S m;
         !!e. 0 < e ==> EX n. ALL x:?S n. ALL y:?S n. dist x y < e |]
      ==> EX a. \<Inter> (range ?S) = {a}",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.decreasing_closed_nest",
     "[| !!n. closed (?S n); !!n. ?S n ~= {};
         !!m n. m <= n ==> ?S n <= ?S m;
         !!e. 0 < e ==> EX n. ALL x:?S n. ALL y:?S n. dist x y < e;
         !!a. (!!n. a : ?S n) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_extension_on_closure",
     "[| uniformly_continuous_on ?X ?f;
         !!g. [| uniformly_continuous_on (closure ?X) g;
                 !!x. x : ?X ==> ?f x = g x;
                 !!Y h x.
                    [| ?X <= Y; Y <= closure ?X; continuous_on Y h;
                       !!x. x : ?X ==> ?f x = h x; x : Y |]
                    ==> h x = g x |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.compact_lemma_general",
     "[| finite ?basis;
         !!k. k : ?basis ==> bounded ((%x. ?proj x k) ` range ?f);
         !!e k. k : ?basis ==> ?proj (?unproj e) k = e k;
         !!x. ?unproj (?proj x) = x |]
      ==> ALL d<=?basis.
             EX l r.
                strict_mono r &
                (ALL e>0.
                    \<forall>\<^sub>F n in sequentially.
                       ALL i:d. dist (?proj (?f (r n)) i) (?proj l i) < e)",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 3)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Elementary_Metric_Spaces.compact_uniformly_equicontinuous",
     "[| compact ?S;
         !!x e.
            [| x : ?S; 0 < e |]
            ==> EX d>0.
                   ALL f:?\<F>.
                      ALL x':?S. dist x' x < d --> dist (f x') (f x) < e;
         0 < ?e;
         !!d. [| 0 < d;
                 !!f x x'.
                    [| f : ?\<F>; x : ?S; x' : ?S; dist x' x < d |]
                    ==> dist (f x') (f x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation (less_than, template_hole 9, template_var 1),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0)))]
