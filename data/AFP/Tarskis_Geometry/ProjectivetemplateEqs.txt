   [("Projective.cltn2_abs_rep", "cltn2_abs (cltn2_rep ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.cltn2_left_id", "cltn2_compose cltn2_id ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Projective.cltn2_transpose_transpose",
     "cltn2_transpose (cltn2_transpose ?A) = ?A",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.L2P_P2L", "L2P (P2L ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.apply_cltn2_id", "apply_cltn2 ?p cltn2_id = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Projective.proj2_abs_rep", "proj2_abs (proj2_rep ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.apply_cltn2_line_id", "apply_cltn2_line ?l cltn2_id = ?l",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Projective.P2L_L2P", "P2L (L2P ?l) = ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.proj2_line_abs_rep",
     "proj2_line_abs (proj2_line_rep ?l) = ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.cart2_proj2", "cart2_pt (proj2_pt ?v) = ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.cltn2_left_inverse",
     "cltn2_compose (cltn2_inverse ?A) ?A = cltn2_id",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Projective.cart2_append1_proj2",
     "cart2_append1 (proj2_pt ?v) = vector2_append1 ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Projective.apply_cltn2_inv",
     "apply_cltn2 (apply_cltn2 ?b ?g) (cltn2_inverse ?g) = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("Projective.apply_cltn2_line_inv",
     "apply_cltn2_line (apply_cltn2_line ?b ?g) (cltn2_inverse ?g) = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("Projective.P2L_to_L2P", "(P2L ?p = ?l) = (?p = L2P ?l)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Projective.cltn2_inverse_compose",
     "cltn2_inverse (cltn2_compose ?x ?y) =
      cltn2_compose (cltn2_inverse ?y) (cltn2_inverse ?x)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Projective.cltn2_transpose_compose",
     "cltn2_transpose (cltn2_compose ?A ?B) =
      cltn2_compose (cltn2_transpose ?B) (cltn2_transpose ?A)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Projective.apply_cltn2_preserve_incident",
     "proj2_incident (apply_cltn2 ?p ?A) (apply_cltn2_line ?l ?A) =
      proj2_incident ?p ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("Projective.cltn2_assoc",
     "cltn2_compose (cltn2_compose ?A ?B) ?C =
      cltn2_compose ?A (cltn2_compose ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projective.cltn2_inverse_inv",
     "inv\<^bsub>(| carrier = UNIV, monoid.mult = cltn2_compose, one = cltn2_id |)\<^esub> ?A =
      cltn2_inverse ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_hole 1))),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Projective.apply_cltn2_compose",
     "apply_cltn2 (apply_cltn2 ?p ?A) ?B =
      apply_cltn2 ?p (cltn2_compose ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projective.apply_cltn2_line_compose",
     "apply_cltn2_line (apply_cltn2_line ?l ?A) ?B =
      apply_cltn2_line ?l (cltn2_compose ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projective.apply_cltn2_incident",
     "proj2_incident ?p (apply_cltn2_line ?l ?A) =
      proj2_incident (apply_cltn2 ?p (cltn2_inverse ?A)) ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("Projective.proj2_Col_iff_set_Col",
     "proj2_Col ?p ?q ?r = proj2_set_Col {?p, ?q, ?r}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Projective.proj2_Col_iff_euclid",
     "proj2_Col (proj2_pt ?a) (proj2_pt ?b) (proj2_pt ?c) =
      real_euclid.Col ?a ?b ?c",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Projective.cross_ratio_swap_34",
     "cross_ratio ?p ?q ?s ?r = 1 / cross_ratio ?p ?q ?r ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0),
           template_var 1)))),
    ("Projective.proj2_Col_iff_not_invertible",
     "proj2_Col ?p ?q ?r =
      (~ invertible (vector [proj2_rep ?p, proj2_rep ?q, proj2_rep ?r]))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0)))))))),
    ("Projective.not_invertible_iff_proj2_set_Col",
     "(~ invertible (vector [proj2_rep ?p, proj2_rep ?q, proj2_rep ?r])) =
      proj2_set_Col {?p, ?q, ?r}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0)),
                   template_hole 3)))))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))))))]
