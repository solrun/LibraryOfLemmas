Loading theory "HOL-Library.Cancellation" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
Loading theory "HOL-Library.FuncSet" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.616s cpu time, 0.034s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
### theory "HOL-Combinatorics.Transposition"
### 0.184s elapsed time, 0.749s cpu time, 0.034s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.FuncSet"
### 0.452s elapsed time, 1.789s cpu time, 0.174s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
### theory "HOL-Library.Cancellation"
### 0.463s elapsed time, 1.846s cpu time, 0.174s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Infinite_Set"
### 0.328s elapsed time, 1.287s cpu time, 0.140s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.353s elapsed time, 1.385s cpu time, 0.140s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Disjoint_Sets"
### 0.286s elapsed time, 1.134s cpu time, 0.130s GC time
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type" via "HOL-Library.Cardinality")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.622s elapsed time, 2.302s cpu time, 0.815s GC time
Loading theory "HOL-Library.Product_Plus" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space" via "HOL-Analysis.Product_Vector")
instantiation
  prod :: (zero, zero) zero
  zero_prod == zero_class.zero :: 'a * 'b
instantiation
  prod :: (plus, plus) plus
  plus_prod == plus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (minus, minus) minus
  minus_prod == minus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (uminus, uminus) uminus
  uminus_prod == uminus :: 'a * 'b => 'a * 'b
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
### theory "HOL-Library.Product_Plus"
### 0.113s elapsed time, 0.440s cpu time, 0.044s GC time
Loading theory "HOL-Library.Product_Order" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space")
  Proving monotonicity ...
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
instantiation
  prod :: (inf, inf) inf
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (sup, sup) sup
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
consts
  snth :: "'a stream => nat => 'a"
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
consts
  stake :: "nat => 'a stream => 'a list"
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
consts
  sdrop :: "nat => 'a stream => 'a stream"
instantiation
  prod :: (Inf, Inf) Inf
  Inf_prod == Inf :: ('a * 'b) set => 'a * 'b
instantiation
  prod :: (Sup, Sup) Sup
  Sup_prod == Sup :: ('a * 'b) set => 'a * 'b
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### theory "HOL-Library.Product_Order"
### 0.223s elapsed time, 0.884s cpu time, 0.072s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
consts
  cycle :: "'a list => 'a stream"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Phantom_Type"
### 0.802s elapsed time, 3.004s cpu time, 0.875s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type")
consts
  flat :: "'a list stream => 'a stream"
### Additional type variable(s) in locale specification "CARD_1": 'a
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Set_Algebras"
### 0.257s elapsed time, 1.005s cpu time, 0.168s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Stream"
### 1.188s elapsed time, 4.520s cpu time, 1.099s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms" via "HOL-Library.Countable_Set")
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### Additional type variable(s) in locale specification "card2": 'a
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
### Additional type variable(s) in locale specification "countable": 'a
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
consts
  mset :: "'a list => 'a multiset"
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
### theory "HOL-Library.Cardinality"
### 0.774s elapsed time, 3.047s cpu time, 0.321s GC time
Loading theory "HOL-Library.Numeral_Type" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
instantiation
  num1 :: CARD_1
instantiation
  num1 :: {comm_monoid_mult,numeral,comm_ring}
  uminus_num1 == uminus :: num1 => num1
  zero_num1 == zero_class.zero :: num1
  minus_num1 == minus :: num1 => num1 => num1
  plus_num1 == plus :: num1 => num1 => num1
  one_num1 == one_class.one :: num1
  times_num1 == times :: num1 => num1 => num1
instantiation
  num1 :: linorder
  less_eq_num1 == less_eq :: num1 => num1 => bool
  less_num1 == less :: num1 => num1 => bool
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
locale mod_type
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_type n Rep Abs"
locale mod_ring
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_ring n Rep Abs"
instantiation
  bit0 :: (finite) {minus,one,plus,times,uminus,zero}
  bit1 :: (finite) {minus,one,plus,times,uminus,zero}
  zero_bit0 == zero_class.zero :: 'a bit0
  uminus_bit0 == uminus :: 'a bit0 => 'a bit0
  times_bit0 == times :: 'a bit0 => 'a bit0 => 'a bit0
  plus_bit0 == plus :: 'a bit0 => 'a bit0 => 'a bit0
  one_bit0 == one_class.one :: 'a bit0
  minus_bit0 == minus :: 'a bit0 => 'a bit0 => 'a bit0
  zero_bit1 == zero_class.zero :: 'a bit1
  uminus_bit1 == uminus :: 'a bit1 => 'a bit1
  times_bit1 == times :: 'a bit1 => 'a bit1 => 'a bit1
  plus_bit1 == plus :: 'a bit1 => 'a bit1 => 'a bit1
  one_bit1 == one_class.one :: 'a bit1
  minus_bit1 == minus :: 'a bit1 => 'a bit1 => 'a bit1
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
instantiation
  bit0 :: (finite) linorder
  bit1 :: (finite) linorder
  less_eq_bit0 == less_eq :: 'a bit0 => 'a bit0 => bool
  less_bit0 == less :: 'a bit0 => 'a bit0 => bool
  less_eq_bit1 == less_eq :: 'a bit1 => 'a bit1 => bool
  less_bit1 == less :: 'a bit1 => 'a bit1 => bool
Found termination order: "size <*mlex*> {}"
instantiation
  num0 :: equal
  equal_num0 == equal_class.equal :: num0 => num0 => bool
instantiation
  num1 :: equal
  equal_num1 == equal_class.equal :: num1 => num1 => bool
instantiation
  num1 :: enum
  enum_num1 == enum_class.enum :: num1 list
  enum_all_num1 == enum_class.enum_all :: (num1 => bool) => bool
  enum_ex_num1 == enum_class.enum_ex :: (num1 => bool) => bool
instantiation
  num0 :: card_UNIV
  num1 :: card_UNIV
  card_UNIV_num0 == card_UNIV_class.card_UNIV :: (num0, nat) phantom
  finite_UNIV_num0 == finite_UNIV :: (num0, bool) phantom
  card_UNIV_num1 == card_UNIV_class.card_UNIV :: (num1, nat) phantom
  finite_UNIV_num1 == finite_UNIV :: (num1, bool) phantom
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) equal
  bit1 :: (finite) equal
  equal_bit0 == equal_class.equal :: 'a bit0 => 'a bit0 => bool
  equal_bit1 == equal_class.equal :: 'a bit1 => 'a bit1 => bool
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.253s elapsed time, 4.928s cpu time, 0.514s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology" via "HOL-Library.Set_Idioms")
instantiation
  bit0 :: (finite) enum
  enum_bit0 == enum_class.enum :: 'a bit0 list
  enum_all_bit0 == enum_class.enum_all :: ('a bit0 => bool) => bool
  enum_ex_bit0 == enum_class.enum_ex :: ('a bit0 => bool) => bool
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
instantiation
  bit1 :: (finite) enum
  enum_bit1 == enum_class.enum :: 'a bit1 list
  enum_all_bit1 == enum_class.enum_all :: ('a bit1 => bool) => bool
  enum_ex_bit1 == enum_class.enum_ex :: ('a bit1 => bool) => bool
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) finite_UNIV
  bit1 :: (finite) finite_UNIV
  finite_UNIV_bit0 == finite_UNIV :: ('a bit0, bool) phantom
  finite_UNIV_bit1 == finite_UNIV :: ('a bit1, bool) phantom
instantiation
  bit0 :: ({card_UNIV,finite}) card_UNIV
  bit1 :: ({card_UNIV,finite}) card_UNIV
  card_UNIV_bit0 == card_UNIV_class.card_UNIV :: ('a bit0, nat) phantom
  card_UNIV_bit1 == card_UNIV_class.card_UNIV :: ('a bit1, nat) phantom
### theory "HOL-Library.Numeral_Type"
### 0.774s elapsed time, 3.037s cpu time, 0.346s GC time
Loading theory "HOL-Analysis.Metric_Arith" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Set"
### 0.498s elapsed time, 1.941s cpu time, 0.241s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
signature METRIC_ARITH =
  sig
    val argo_timeout: real Config.T
    val metric_arith_tac: Proof.context -> int -> tactic
    val trace: bool Config.T
  end
structure Metric_Arith: METRIC_ARITH
### theory "HOL-Analysis.Metric_Arith"
### 0.661s elapsed time, 2.591s cpu time, 0.258s GC time
Loading theory "HOL-Library.Set_Idioms" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
### theory "HOL-Library.Tree"
### 2.130s elapsed time, 8.364s cpu time, 0.890s GC time
Loading theory "Draft.Templates" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs")
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.269s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Inner_Product" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
### theory "HOL-Library.Set_Idioms"
### 0.248s elapsed time, 0.966s cpu time, 0.137s GC time
Loading theory "HOL-Analysis.Abstract_Topology" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 4.020s elapsed time, 15.626s cpu time, 2.280s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Determinants")
class real_inner = dist_norm + real_vector + sgn_div_norm +
  uniformity_dist + open_uniformity +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. inner x y = inner y x"
    and "inner_add_left": "!!x y z. inner (x + y) z = inner x z + inner y z"
    and
    "inner_scaleR_left": "!!r x y. inner (r *\<^sub>R x) y = r * inner x y"
    and "inner_ge_zero": "!!x. 0 <= inner x x"
    and "inner_eq_zero_iff": "!!x. (inner x x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (inner x x)"
instantiation
  real :: real_inner
  inner_real == inner :: real => real => real
instantiation
  complex :: real_inner
  inner_complex == inner :: complex => complex => real
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
Proofs for inductive predicate(s) "swapidseq"
bundle inner_syntax
bundle no_inner_syntax
### theory "HOL-Analysis.Inner_Product"
### 1.453s elapsed time, 5.657s cpu time, 1.690s GC time
Loading theory "HOL-Analysis.L2_Norm" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
  Proving monotonicity ...
### theory "HOL-Analysis.L2_Norm"
### 0.106s elapsed time, 0.414s cpu time, 0.065s GC time
Loading theory "HOL-Analysis.Operator_Norm" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
### theory "HOL-Analysis.Operator_Norm"
### 0.116s elapsed time, 0.453s cpu time, 0.064s GC time
Loading theory "HOL-Analysis.Product_Vector" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 1.740s elapsed time, 6.605s cpu time, 3.029s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.MetricMoreTemplates" via "Draft.ExtrEqs")
locale module_prod
  fixes s1 :: "'a => 'b => 'b"
    and s2 :: "'a => 'c => 'c"
  assumes "module_prod s1 s2"
locale vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
  assumes "vector_space_prod (*a) (*b)"
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (real_vector, real_vector) real_vector
  scaleR_prod == scaleR :: real => 'a * 'b => 'a * 'b
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (metric_space, metric_space) dist
  dist_prod == dist :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (uniformity, uniformity) uniformity
  uniformity_prod == uniformity :: (('a * 'b) * 'a * 'b) filter
### theory "HOL-Library.Countable_Complete_Lattices"
### 3.085s elapsed time, 11.876s cpu time, 3.680s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
instantiation
  prod :: (uniform_space, uniform_space) uniform_space
instantiation
  prod :: (metric_space, metric_space) uniformity_dist
instantiation
  prod :: (metric_space, metric_space) metric_space
instantiation
  prod :: (real_normed_vector, real_normed_vector) real_normed_vector
  sgn_prod == sgn :: 'a * 'b => 'a * 'b
  norm_prod == norm :: 'a * 'b => real
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Discrete"
### 0.179s elapsed time, 0.709s cpu time, 0.088s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2")
locale finite_dimensional_vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and B1 :: "'b set"
    and B2 :: "'c set"
  assumes "finite_dimensional_vector_space_prod (*a) (*b) B1 B2"
### theory "HOL-Analysis.Product_Vector"
### 1.399s elapsed time, 5.329s cpu time, 1.958s GC time
Loading theory "HOL-Analysis.Elementary_Topology" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Library.BigO"
### 0.895s elapsed time, 3.506s cpu time, 0.596s GC time
Loading theory "HOL-Analysis.Euclidean_Space" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
### theory "HOL-Library.Indicator_Function"
### 0.469s elapsed time, 1.831s cpu time, 0.357s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MetricMoreTemplates")
Proofs for inductive predicate(s) "generate_topology_on"
  Proving monotonicity ...
class topological_space = open +
  assumes "open_UNIV": "open UNIV"
  assumes "open_Int": "!!S T. [| open S; open T |] ==> open (S Int T)"
  assumes "open_Union": "!!K. Ball K open ==> open (\<Union> K)"
### theory "HOL-Analysis.Abstract_Topology"
### 3.593s elapsed time, 13.903s cpu time, 4.094s GC time
Loading theory "HOL-Analysis.Abstract_Limits" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Function_Topology")
locale countable_basis
  fixes p :: "'a set => bool"
    and B :: "'a set set"
  assumes "countable_basis p B"
class second_countable_topology = topological_space +
  assumes
    "ex_countable_subbasis":
      "EX B. countable B & open = generate_topology B"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.722s elapsed time, 2.849s cpu time, 0.464s GC time
Loading theory "HOL-Library.Liminf_Limsup" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
### theory "HOL-Analysis.Abstract_Limits"
### 0.233s elapsed time, 0.921s cpu time, 0.087s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat")
class euclidean_space = real_inner +
  fixes Basis :: "'a set"
  assumes "nonempty_Basis": "Basis ~= {}"
  assumes "finite_Basis": "finite Basis"
  assumes
    "inner_Basis":
      "!!u v.
          [| u : Basis; v : Basis |]
          ==> inner u v = (if u = v then 1 else 0)"
  assumes
    "euclidean_all_zero_iff":
      "!!x. (ALL u:Basis. inner x u = 0) = (x = (0::'a))"
### theory "HOL-Library.Liminf_Limsup"
### 0.527s elapsed time, 2.068s cpu time, 0.362s GC time
Loading theory "HOL-Library.Sum_of_Squares" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Norm_Arith")
### theory "HOL-Library.Order_Continuity"
### 0.649s elapsed time, 2.539s cpu time, 0.467s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
instantiation
  real :: euclidean_space
  Basis_real == Basis :: real set
instantiation
  complex :: euclidean_space
  Basis_complex == Basis :: complex set
instantiation
  prod :: (real_inner, real_inner) real_inner
  inner_prod == inner :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (euclidean_space, euclidean_space) euclidean_space
  Basis_prod == Basis :: ('a * 'b) set
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
### theory "HOL-Analysis.Euclidean_Space"
### 1.837s elapsed time, 7.207s cpu time, 1.266s GC time
Loading theory "HOL-Analysis.Finite_Cartesian_Product" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Cartesian_Space")
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
### theory "HOL-Analysis.Elementary_Topology"
### 2.148s elapsed time, 8.415s cpu time, 1.455s GC time
Loading theory "HOL-Analysis.Linear_Algebra" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine")
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.798s elapsed time, 3.096s cpu time, 0.514s GC time
Loading theory "HOL-Analysis.Abstract_Topology_2" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
### ML warning (line 261 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_abs) has not been referenced.
### ML warning (line 265 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_max) has not been referenced.
### ML warning (line 269 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_min) has not been referenced.
### ML warning (line 379 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Pattern is not exhaustive.
signature FUNC =
  sig
    exception DUP of key
    exception SAME
    exception UNDEF of key
    val apply: 'a table -> key -> 'a
    val applyd: 'a table -> (key -> 'a) -> key -> 'a
    val build: ('a table -> 'a table) -> 'a table
    val choose: 'a table -> key * 'a
    val combine:
       ('a -> 'a -> 'a) -> ('a -> bool) -> 'a table -> 'a table -> 'a table
    val cons_list: key * 'a -> 'a list table -> 'a list table
    val default: key * 'a -> 'a table -> 'a table
    val defined: 'a table -> key -> bool
    val delete: key -> 'a table -> 'a table
    val delete_safe: key -> 'a table -> 'a table
    val dest: 'a table -> (key * 'a) list
    val dest_list: 'a list table -> (key * 'a) list
    val dom: 'a table -> key list
    val empty: 'a table
    val exists: (key * 'a -> bool) -> 'a table -> bool
    val fold: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val fold_rev: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val forall: (key * 'a -> bool) -> 'a table -> bool
    val get_first: (key * 'a -> 'b option) -> 'a table -> 'b option
    val insert: ('a * 'a -> bool) -> key * 'a -> 'a table -> 'a table
    val insert_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val insert_set: key -> set -> set
    val is_empty: 'a table -> bool
    val is_single: 'a table -> bool
    val join: (key -> 'a * 'a -> 'a) -> 'a table * 'a table -> 'a table
    type key
    val keys: 'a table -> key list
    val lookup: 'a table -> key -> 'a option
    val lookup_key: 'a table -> key -> (key * 'a) option
    val lookup_list: 'a list table -> key -> 'a list
    val make: (key * 'a) list -> 'a table
    val make_list: (key * 'a) list -> 'a list table
    val make_set: key list -> set
    val map: (key -> 'a -> 'b) -> 'a table -> 'b table
    val map_default: key * 'a -> ('a -> 'a) -> 'a table -> 'a table
    val map_entry: key -> ('a -> 'a) -> 'a table -> 'a table
    val max: 'a table -> (key * 'a) option
    val member: ('a * 'b -> bool) -> 'b table -> key * 'a -> bool
    val merge: ('a * 'a -> bool) -> 'a table * 'a table -> 'a table
    val merge_list:
       ('a * 'a -> bool) -> 'a list table * 'a list table -> 'a list table
    val min: 'a table -> (key * 'a) option
    val onefunc: key * 'a -> 'a table
    val remove: ('a * 'b -> bool) -> key * 'a -> 'b table -> 'b table
    val remove_list:
       ('a * 'b -> bool) -> key * 'a -> 'b list table -> 'b list table
    val remove_set: key -> set -> set
    type set = unit table
    type 'a table
    val tryapplyd: 'a table -> key -> 'a -> 'a
    val update: key * 'a -> 'a table -> 'a table
    val update_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val update_new: key * 'a -> 'a table -> 'a table
    val updatep: (key * 'a -> bool) -> key * 'a -> 'a table -> 'a table
  end
functor FuncFun (Key: KEY): FUNC
signature REAL_ARITH =
  sig
    type cert_conv = cterm -> thm * pss_tree
    val cterm_of_rat: Rat.rat -> cterm
    val dest_ratconst: cterm -> Rat.rat
    val gen_gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * conv * conv * prover
           -> cert_conv
    val gen_prover_real_arith: Proof.context -> prover -> cert_conv
    val gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * prover
           -> cert_conv
    val is_ratconst: cterm -> bool
    datatype positivstellensatz
    =
         Axiom_eq of int
       | Axiom_le of int
       | Axiom_lt of int
       | Eqmul of FuncUtil.poly * positivstellensatz
       | Product of positivstellensatz * positivstellensatz
       | Rational_eq of Rat.rat
       | Rational_le of Rat.rat
       | Rational_lt of Rat.rat
       | Square of FuncUtil.poly
       | Sum of positivstellensatz * positivstellensatz
    type prover =
       tree_choice list ->
         (thm list * thm list * thm list -> positivstellensatz -> thm) ->
           thm list * thm list * thm list -> thm * pss_tree
    datatype pss_tree
    = Branch of pss_tree * pss_tree | Cert of positivstellensatz | Trivial
    val real_linear_prover:
       (thm list * thm list * thm list -> positivstellensatz -> thm) ->
         thm list * thm list * thm list -> thm * pss_tree
    datatype tree_choice = Left | Right
  end
structure FuncUtil:
  sig
    structure Ctermfunc: FUNC
    structure Intfunc: FUNC
    structure Intpairfunc: FUNC
    structure Monomialfunc: FUNC
    structure Ratfunc: FUNC
    structure Symfunc: FUNC
    structure Termfunc: FUNC
    val dest_monomial: 'a Ctermfunc.table -> (cterm * 'a) list
    type monomial = int Ctermfunc.table
    val monomial_ord: int Ctermfunc.table * int Ctermfunc.table -> order
    val monomial_order: int Ctermfunc.table * int Ctermfunc.table -> order
    type poly = Rat.rat Monomialfunc.table
  end
structure RealArith: REAL_ARITH
signature POSITIVSTELLENSATZ_TOOLS =
  sig
    val print_cert: RealArith.pss_tree -> string
    val read_cert: Proof.context -> string -> RealArith.pss_tree
  end
structure Positivstellensatz_Tools: POSITIVSTELLENSATZ_TOOLS
class real_inner = real_normed_vector +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. x \<bullet> y = y \<bullet> x"
    and
    "inner_add_left":
      "!!x y z. (x + y) \<bullet> z = x \<bullet> z + y \<bullet> z"
    and
    "inner_scaleR_left":
      "!!r x y. r *\<^sub>R x \<bullet> y = r * (x \<bullet> y)"
    and "inner_ge_zero": "!!x. 0 <= x \<bullet> x"
    and "inner_eq_zero_iff": "!!x. (x \<bullet> x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (x \<bullet> x)"
signature SUM_OF_SQUARES =
  sig
    exception Failure of string
    val debug: bool Config.T
    val debug_message: Proof.context -> (unit -> string) -> unit
    datatype proof_method
    = Certificate of RealArith.pss_tree | Prover of string -> string
    val sos_tac:
       (RealArith.pss_tree -> unit) ->
         proof_method -> Proof.context -> int -> tactic
    val trace: bool Config.T
    val trace_message: Proof.context -> (unit -> string) -> unit
  end
structure Sum_of_Squares: SUM_OF_SQUARES
signature SOS_WRAPPER =
  sig val sos_tac: Proof.context -> string option -> int -> tactic end
structure SOS_Wrapper: SOS_WRAPPER
### theory "HOL-Library.Sum_of_Squares"
### 1.443s elapsed time, 5.615s cpu time, 0.862s GC time
Loading theory "HOL-Library.Extended_Real" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
bundle vec_syntax
bundle no_vec_syntax
instantiation
  vec :: (zero, finite) zero
  zero_vec == zero_class.zero :: ('a, 'b) vec
instantiation
  vec :: (plus, finite) plus
  plus_vec == plus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (minus, finite) minus
  minus_vec == minus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (uminus, finite) uminus
  uminus_vec == uminus :: ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (times, finite) times
  times_vec == times :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (one, finite) one
  one_vec == one_class.one :: ('a, 'b) vec
instantiation
  vec :: (ord, finite) ord
  less_eq_vec == less_eq :: ('a, 'b) vec => ('a, 'b) vec => bool
  less_vec == less :: ('a, 'b) vec => ('a, 'b) vec => bool
instantiation
  vec :: (real_vector, finite) real_vector
  scaleR_vec == scaleR :: real => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (topological_space, finite) topological_space
  open_vec == open :: ('a, 'b) vec set => bool
instantiation
  vec :: (metric_space, finite) dist
  dist_vec == dist :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (metric_space, finite) uniformity_dist
  uniformity_vec == uniformity :: (('a, 'b) vec * ('a, 'b) vec) filter
instantiation
  vec :: (metric_space, finite) metric_space
instantiation
  vec :: (real_normed_vector, finite) real_normed_vector
  sgn_vec == sgn :: ('a, 'b) vec => ('a, 'b) vec
  norm_vec == norm :: ('a, 'b) vec => real
instantiation
  enat :: linorder_topology
  open_enat == open :: enat set => bool
### theory "HOL-Analysis.Linear_Algebra"
### 1.123s elapsed time, 4.348s cpu time, 0.671s GC time
Loading theory "HOL-Analysis.Affine" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Convex")
instantiation
  vec :: (real_inner, finite) real_inner
  inner_vec == inner :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (euclidean_space, finite) euclidean_space
  Basis_vec == Basis :: ('a, 'b) vec set
instantiation
  ereal :: uminus
  uminus_ereal == uminus :: ereal => ereal
### theory "HOL-Analysis.Affine"
### 0.585s elapsed time, 2.228s cpu time, 0.588s GC time
Loading theory "HOL-Analysis.Convex" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space")
### theory "HOL-Analysis.Finite_Cartesian_Product"
### 1.915s elapsed time, 7.388s cpu time, 1.381s GC time
Loading theory "HOL-Analysis.Cartesian_Space" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
Found termination order: "{}"
instantiation
  ereal :: infinity
  infinity_ereal == infinity :: ereal
### theory "HOL-Analysis.Abstract_Topology_2"
### 1.547s elapsed time, 5.958s cpu time, 1.202s GC time
Loading theory "HOL-Analysis.Connected" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
instantiation
  ereal :: abs
  abs_ereal == abs :: ereal => ereal
instantiation
  ereal :: {comm_monoid_add,zero_neq_one}
  one_ereal == one_class.one :: ereal
  zero_ereal == zero_class.zero :: ereal
  plus_ereal == plus :: ereal => ereal => ereal
instantiation
  ereal :: linorder
  less_eq_ereal == less_eq :: ereal => ereal => bool
  less_ereal == less :: ereal => ereal => bool
### theory "HOL-Analysis.Connected"
### 1.015s elapsed time, 3.790s cpu time, 2.647s GC time
Loading theory "HOL-Analysis.Function_Topology" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
instantiation
  ereal :: {comm_monoid_mult,sgn}
  sgn_ereal == sgn :: ereal => ereal
  times_ereal == times :: ereal => ereal => ereal
instantiation
  fun :: (type, topological_space) topological_space
  open_fun == open :: ('a => 'b) set => bool
instantiation
  ereal :: minus
  minus_ereal == minus :: ereal => ereal => ereal
instantiation
  ereal :: inverse
  inverse_ereal == inverse :: ereal => ereal
  divide_ereal == divide :: ereal => ereal => ereal
### theory "HOL-Analysis.Convex"
### 1.706s elapsed time, 6.472s cpu time, 3.093s GC time
Loading theory "HOL-Analysis.Elementary_Metric_Spaces" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space" via "HOL-Analysis.Elementary_Normed_Spaces")
### theory "HOL-Analysis.Function_Topology"
### 0.757s elapsed time, 2.933s cpu time, 0.522s GC time
Loading theory "HOL-Analysis.Norm_Arith" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space")
instantiation
  ereal :: lattice
  inf_ereal == inf :: ereal => ereal => ereal
  sup_ereal == sup :: ereal => ereal => ereal
instantiation
  ereal :: complete_lattice
  Inf_ereal == Inf :: ereal set => ereal
  Sup_ereal == Sup :: ereal set => ereal
  bot_ereal == bot :: ereal
  top_ereal == top :: ereal
locale linear_first_finite_dimensional_vector_space
  fixes scaleB :: "'a => 'b => 'b"  (infixr \<open>*b\<close> 75)
    and scaleC :: "'a => 'c => 'c"  (infixr \<open>*c\<close> 75)
    and BasisB :: "'b set"
    and f :: "'b => 'c"
  assumes "linear_first_finite_dimensional_vector_space (*b) (*c) BasisB f"
instantiation
  ereal :: linear_continuum_topology
  open_ereal == open :: ereal set => bool
### ML warning (line 103 of "~~/src/HOL/Analysis/normarith.ML"):
### Matches are not exhaustive.
signature NORM_ARITH =
  sig
    val norm_arith: Proof.context -> conv
    val norm_arith_tac: Proof.context -> int -> tactic
  end
structure NormArith: NORM_ARITH
### theory "HOL-Analysis.Norm_Arith"
### 0.333s elapsed time, 1.259s cpu time, 0.224s GC time
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
### theory "HOL-Analysis.Cartesian_Space"
### 2.515s elapsed time, 9.395s cpu time, 3.717s GC time
Loading theory "HOL-Analysis.Determinants" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis")
class heine_borel = metric_space +
  assumes
    "bounded_imp_convergent_subsequence":
      "!!f. bounded (range f) ==>
            EX l r. strict_mono r & (f o r) \<longlonglongrightarrow> l"
### theory "HOL-Library.Extended_Real"
### 4.697s elapsed time, 17.393s cpu time, 7.832s GC time
Loading theory "HOL-Library.Extended_Nonnegative_Real" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Analysis.Extended_Real_Limits")
"- \<infinity>"
  :: "ereal"
"\<infinity>"
  :: "ereal"
### theory "HOL-Analysis.Determinants"
### 11.668s elapsed time, 38.687s cpu time, 35.467s GC time
"ereal (13 / 4)"
  :: "ereal"
instantiation
  ennreal :: complete_linorder
  Inf_ennreal == Inf :: ennreal set => ennreal
  Sup_ennreal == Sup :: ennreal set => ennreal
  bot_ennreal == bot :: ennreal
  sup_ennreal == sup :: ennreal => ennreal => ennreal
  top_ennreal == top :: ennreal
  inf_ennreal == inf :: ennreal => ennreal => ennreal
  less_eq_ennreal == less_eq :: ennreal => ennreal => bool
  less_ennreal == less :: ennreal => ennreal => bool
"True"
  :: "bool"
"True"
  :: "bool"
instantiation
  ennreal :: infinity
  infinity_ennreal == infinity :: ennreal
instantiation
  ennreal :: {comm_semiring_1,semiring_1_no_zero_divisors}
  zero_ennreal == zero_class.zero :: ennreal
  plus_ennreal == plus :: ennreal => ennreal => ennreal
  one_ennreal == one_class.one :: ennreal
  times_ennreal == times :: ennreal => ennreal => ennreal
instantiation
  ennreal :: minus
  minus_ennreal == minus :: ennreal => ennreal => ennreal
### theory "HOL-Analysis.Elementary_Metric_Spaces"
### 12.615s elapsed time, 41.841s cpu time, 35.969s GC time
Loading theory "HOL-Analysis.Elementary_Normed_Spaces" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space" via "HOL-Analysis.Topology_Euclidean_Space")
instantiation
  ennreal :: inverse
  inverse_ennreal == inverse :: ennreal => ennreal
  divide_ennreal == divide :: ennreal => ennreal => ennreal
structure Cancel_Ennreal_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  ennreal :: linear_continuum_topology
  open_ennreal == open :: ennreal set => bool
### theory "HOL-Library.Extended_Nonnegative_Real"
### 11.325s elapsed time, 36.318s cpu time, 32.468s GC time
### theory "HOL-Analysis.Elementary_Normed_Spaces"
### 1.003s elapsed time, 1.766s cpu time, 0.231s GC time
Loading theory "HOL-Analysis.Topology_Euclidean_Space" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space" via "HOL-Analysis.Convex_Euclidean_Space")
### theory "HOL-Analysis.Topology_Euclidean_Space"
### 1.439s elapsed time, 1.643s cpu time, 0.274s GC time
Loading theory "HOL-Analysis.Convex_Euclidean_Space" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Ordered_Euclidean_Space")
Loading theory "HOL-Analysis.Line_Segment" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative")
Loading theory "HOL-Analysis.Extended_Real_Limits" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
### theory "HOL-Analysis.Line_Segment"
### 0.800s elapsed time, 2.505s cpu time, 0.504s GC time
### theory "HOL-Analysis.Convex_Euclidean_Space"
### 0.876s elapsed time, 2.651s cpu time, 0.504s GC time
Loading theory "HOL-Analysis.Ordered_Euclidean_Space" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis")
Loading theory "HOL-Analysis.Starlike" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis")
### theory "HOL-Analysis.Extended_Real_Limits"
### 0.898s elapsed time, 2.719s cpu time, 0.504s GC time
Loading theory "HOL-Analysis.Summation_Tests" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit")
### theory "HOL-Analysis.Summation_Tests"
### 0.773s elapsed time, 2.404s cpu time, 0.383s GC time
Loading theory "HOL-Analysis.Uniform_Limit" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
class ordered_euclidean_space = Inf + Sup + euclidean_space + abs + inf +
  sup + ord +
  assumes
    "eucl_le":
      "!!x y. (x <= y) = (ALL i:Basis. x \<bullet> i <= y \<bullet> i)"
  assumes "eucl_less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
  assumes
    "eucl_inf":
      "!!x y.
          inf x y =
          (SUM i:Basis. inf (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_sup":
      "!!x y.
          sup x y =
          (SUM i:Basis. sup (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Inf":
      "!!X. Inf X = (SUM i:Basis. (INF x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Sup":
      "!!X. Sup X = (SUM i:Basis. (SUP x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_abs":
      "!!x. \<bar>x\<bar> =
            (SUM i:Basis. \<bar>x \<bullet> i\<bar> *\<^sub>R i)"
### theory "HOL-Analysis.Uniform_Limit"
### 0.581s elapsed time, 1.803s cpu time, 0.300s GC time
Loading theory "HOL-Analysis.Bounded_Linear_Function" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space" via "HOL-Analysis.Derivative")
?a : affine hull ?S ==> aff_dim ?S = int (dim ((+) (- ?a) ` ?S))
### theory "HOL-Analysis.Starlike"
### 1.639s elapsed time, 5.078s cpu time, 0.808s GC time
instantiation
  blinfun :: (real_normed_vector, real_normed_vector) real_normed_vector
  uminus_blinfun == uminus ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  zero_blinfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>L 'b
  minus_blinfun == minus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  plus_blinfun == plus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  sgn_blinfun == sgn ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  norm_blinfun == norm :: 'a \<Rightarrow>\<^sub>L 'b => real
  scaleR_blinfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  dist_blinfun == dist ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b => real
  uniformity_blinfun == uniformity ::
    ('a \<Rightarrow>\<^sub>L 'b * 'a \<Rightarrow>\<^sub>L 'b) filter
  open_blinfun == open :: ('a \<Rightarrow>\<^sub>L 'b) set => bool
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
### theory "HOL-Analysis.Bounded_Linear_Function"
### 1.540s elapsed time, 3.536s cpu time, 0.376s GC time
Loading theory "HOL-Analysis.Derivative" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3" via "HOL-Analysis.Cartesian_Euclidean_Space")
instantiation
  prod :: (abs, abs) abs
  abs_prod == abs :: 'a * 'b => 'a * 'b
instantiation
  vec :: (ordered_euclidean_space, finite) ordered_euclidean_space
  abs_vec == abs :: ('a, 'b) vec => ('a, 'b) vec
  inf_vec == inf :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  sup_vec == sup :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  Inf_vec == Inf :: ('a, 'b) vec set => ('a, 'b) vec
  Sup_vec == Sup :: ('a, 'b) vec set => ('a, 'b) vec
### theory "HOL-Analysis.Ordered_Euclidean_Space"
### 3.078s elapsed time, 8.146s cpu time, 1.059s GC time
### theory "HOL-Analysis.Derivative"
### 1.316s elapsed time, 1.621s cpu time, 0.240s GC time
Loading theory "HOL-Analysis.Cartesian_Euclidean_Space" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis" via "HOL-Analysis.Cross3")
Loading theory "HOL-Analysis.Lipschitz" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis")
bundle lipschitz_syntax
bundle no_lipschitz_syntax
### theory "HOL-Analysis.Cartesian_Euclidean_Space"
### 0.257s elapsed time, 0.563s cpu time, 0.108s GC time
Loading theory "HOL-Analysis.Cross3" (required by "Draft.MetricMoreTemplates" via "Draft.Metric" via "HOL-Analysis.Multivariate_Analysis")
### theory "HOL-Analysis.Lipschitz"
### 0.419s elapsed time, 0.923s cpu time, 0.183s GC time
bundle cross3_syntax
bundle no_cross3_syntax
### theory "HOL-Analysis.Cross3"
### 1.658s elapsed time, 2.004s cpu time, 0.285s GC time
Loading theory "HOL-Analysis.Multivariate_Analysis" (required by "Draft.MetricMoreTemplates" via "Draft.Metric")
### theory "HOL-Analysis.Multivariate_Analysis"
### 0.793s elapsed time, 0.795s cpu time, 0.000s GC time
Loading theory "Draft.Metric" (required by "Draft.MetricMoreTemplates")
locale semimetric
  fixes dist :: "'p => 'p => real"
  assumes "semimetric dist"
locale metric
  fixes dist :: "'p => 'p => real"
  assumes "metric dist"
### theory "Draft.Metric"
### 0.073s elapsed time, 0.109s cpu time, 0.050s GC time
Loading theory "Draft.MetricMoreTemplates"
val templateLemmas =
   [("Elementary_Metric_Spaces.bounded_ball", "bounded (ball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.bounded_cball", "bounded (cball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.open_ball", "open (ball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.closed_cball", "closed (cball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.compact_cball", "compact (cball ?x ?e)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Elementary_Metric_Spaces.bdd_below_image_dist",
     "bdd_below (dist ?x ` ?A)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))
         )),
    ("Metric_Arith.pre_arith_simps", "EX x. x = ?t",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Metric_Arith.pre_arith_simps", "EX x. ?t = x",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Metric_Arith.pre_arith_simps", "?P ~= (~ ?P)",
     template_negation
      (
         template_equation
          (template_var 0, template_app (template_hole 1, template_var 0))
         )),
    ("Metric_Arith.pre_arith_simps", "(~ ?P) ~= ?P",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_var 0)
         )),
    ("Elementary_Metric_Spaces.ball_trivial", "ball ?x 0 = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Elementary_Metric_Spaces.compact_eq_seq_compact_metric",
     "compact ?S = seq_compact ?S",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.complete_eq_closed",
     "uniform_space_class.complete ?S = closed ?S",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(EX x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Metric_Arith.nnf_thms", "(~ ~ ?P) = ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(False & ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(True & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P & False) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P & True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(False | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(True | ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | False) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?x = ?x) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(True = ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P = True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(False --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(True --> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Metric_Arith.pre_arith_simps", "(?P --> True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_empty1", "setdist {} ?t = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_refl", "setdist ?S ?S = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_empty2", "setdist ?t {} = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Elementary_Metric_Spaces.infdist_nonneg", "0 <= infdist ?x ?A",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.setdist_pos_le", "0 <= setdist ?s ?t",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(False = ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P = False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P --> False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.compact_closure",
     "compact (closure ?S) = bounded ?S",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P & ~ ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(~ ?P & ?P) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(?P | ~ ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(~ ?P | ?P) = True",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Elementary_Metric_Spaces.diameter_singleton", "diameter {?x} = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Elementary_Metric_Spaces.closed_limpts", "closed {x. x islimpt ?S}",
     template_predicate
      (
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))
         )),
    ("Elementary_Metric_Spaces.bounded_imp_bdd_above",
     "bounded ?S ==> bdd_above ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_imp_bdd_below",
     "bounded ?S ==> bdd_below ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.seq_compact_imp_Heine_Borel",
     "seq_compact ?S ==> compact ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.finite_imp_bounded",
     "finite ?S ==> bounded ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.compact_imp_bounded",
     "compact ?U ==> bounded ?U",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.compact_imp_complete",
     "compact ?s ==> uniform_space_class.complete ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.complete_imp_closed",
     "uniform_space_class.complete ?S ==> closed ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.cball_trivial", "cball ?x 0 = {?x}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Elementary_Metric_Spaces.sphere_trivial", "sphere ?x 0 = {?x}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Metric_Arith.pre_arith_simps", "(?a = ?b) = (?b = ?a)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation (template_var 0, template_var 1))),
    ("Elementary_Metric_Spaces.bdd_above_norm",
     "bdd_above (norm ` ?X) = bounded ?X",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.bounded_insert",
     "bounded (insert ?x ?S) = bounded ?S",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P --> ~ ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.setdist_sym",
     "setdist ?S ?T = setdist ?T ?S",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Elementary_Metric_Spaces.ball_subset_cball",
     "ball ?x ?e <= cball ?x ?e",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.sphere_cball", "sphere ?z ?r <= cball ?z ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.bounded_closure",
     "bounded ?S ==> bounded (closure ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_interior",
     "bounded ?S ==> bounded (interior ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_frontier_bounded",
     "bounded ?S ==> compact (frontier ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_frontier",
     "compact ?S ==> compact (frontier ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.interior_ball",
     "interior (ball ?x ?e) = ball ?x ?e",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.compact_eq_bounded_closed",
     "compact ?S = (bounded ?S & closed ?S)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Metric_Arith.nnf_thms", "(?P --> ?Q) = (~ ?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Elementary_Metric_Spaces.limpt_of_closure",
     "?x islimpt closure ?S = ?x islimpt ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Metric_Arith.nnf_simps", "(~ ?x < ?y) = (?y <= ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Metric_Arith.nnf_simps", "(~ ?x <= ?y) = (?y < ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. x ~= ?t) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("Metric_Arith.pre_arith_simps", "(ALL x. ?t ~= x) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("Elementary_Metric_Spaces.setdist_closure_2",
     "setdist ?T (closure ?S) = setdist ?T ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.setdist_closure_1",
     "setdist (closure ?S) ?T = setdist ?S ?T",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Metric_Arith.real_abs_dist", "\<bar>dist ?x ?y\<bar> = dist ?x ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.continuous_on_setdist",
     "continuous_on ?T (%y. setdist {y} ?S)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)
         )),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_setdist",
     "uniformly_continuous_on ?T (%y. setdist {y} ?S)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)
         )),
    ("Elementary_Metric_Spaces.bounded_diff",
     "bounded ?S ==> bounded (?S - ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.diameter_ge_0",
     "bounded ?S ==> 0 <= diameter ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_fst",
     "bounded ?s ==> bounded (fst ` ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_snd",
     "bounded ?s ==> bounded (snd ` ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.frontier_subset_compact",
     "compact ?S ==> frontier ?S <= ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Elementary_Metric_Spaces.cauchy_imp_bounded",
     "Cauchy ?s ==> bounded (range ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Metric_Arith.pre_arith_simps", "(?P ~= ?Q) = (?P = (~ ?Q))",
     template_bimplication
      (template_negation
        (template_equation (template_var 1, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Metric_Arith.pre_arith_simps", "(?P & ?P & ?Q) = (?P & ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Metric_Arith.pre_arith_simps", "(?P | ?P | ?Q) = (?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.ball_eq_empty",
     "(ball ?x ?e = {}) = (?e <= 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Elementary_Metric_Spaces.cball_eq_empty",
     "(cball ?x ?e = {}) = (?e < 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Metric_Arith.pre_arith_simps", "((~ ?P) = (~ ?Q)) = (?P = ?Q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Elementary_Metric_Spaces.centre_in_ball",
     "(?x : ball ?x ?e) = (0 < ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Elementary_Metric_Spaces.centre_in_cball",
     "(?x : cball ?x ?e) = (0 <= ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Elementary_Metric_Spaces.infdist_eq_setdist",
     "infdist ?x ?A = setdist {?x} ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Elementary_Metric_Spaces.infdist_singleton",
     "infdist ?x {?y} = dist ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.bounded_subset_ballI",
     "?S <= ball ?x ?r ==> bounded ?S",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Elementary_Metric_Spaces.bounded_Un",
     "bounded (?S Un ?T) = (bounded ?S & bounded ?T)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Metric_Arith.nnf_thms", "(~ (?P & ?Q)) = (~ ?P | ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Metric_Arith.nnf_thms", "(~ (?P | ?Q)) = (~ ?P & ~ ?Q)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Elementary_Metric_Spaces.convergent_eq_Cauchy",
     "(EX l. ?S \<longlonglongrightarrow> l) = Cauchy ?S",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Elementary_Metric_Spaces.ball_divide_subset_numeral",
     "ball ?x (?e / numeral ?w) <= ball ?x ?e",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1))),
    ("Elementary_Metric_Spaces.cball_divide_subset_numeral",
     "cball ?x (?e / numeral ?w) <= cball ?x ?e",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1))),
    ("Elementary_Metric_Spaces.continuous_at_setdist",
     "isCont (%y. setdist {y} ?S) ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3)),
           t_empty)
         )),
    ("Elementary_Metric_Spaces.diameter_closure",
     "bounded ?S ==> diameter (closure ?S) = diameter ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Elementary_Metric_Spaces.cball_empty", "?e < 0 ==> cball ?x ?e = {}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Elementary_Metric_Spaces.sphere_empty",
     "?r < 0 ==> sphere ?a ?r = {}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Elementary_Metric_Spaces.ball_empty", "?e <= 0 ==> ball ?x ?e = {}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Elementary_Metric_Spaces.infdist_zero",
     "?a : ?A ==> infdist ?a ?A = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Elementary_Metric_Spaces.bounded_closed_imp_seq_compact",
     "[| bounded ?S; closed ?S |] ==> seq_compact ?S",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.cball_diff_eq_sphere",
     "cball ?a ?r - ball ?a ?r = sphere ?a ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.cball_diff_sphere",
     "cball ?a ?r - sphere ?a ?r = ball ?a ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.ball_eq_greaterThanLessThan",
     "ball ?a ?b = {?a - ?b<..<?a + ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_eq_atLeastAtMost",
     "cball ?a ?b = {?a - ?b..?a + ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.mem_ball",
     "(?y : ball ?x ?e) = (dist ?x ?y < ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Elementary_Metric_Spaces.mem_cball",
     "(?y : cball ?x ?e) = (dist ?x ?y <= ?e)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Elementary_Metric_Spaces.mem_sphere",
     "(?y : sphere ?x ?e) = (dist ?x ?y = ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Elementary_Metric_Spaces.cball_eq_sing",
     "(cball ?x ?e = {?x}) = (?e = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_hole 2)),
       template_equation (template_var 0, template_hole 0))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. x = ?t --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(ALL x. ?t = x --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(EX x. x = ?t & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Metric_Arith.pre_arith_simps", "(EX x. ?t = x & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("Elementary_Metric_Spaces.setdist_singletons",
     "setdist {?x} {?y} = dist ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Elementary_Metric_Spaces.infdist_triangle",
     "infdist ?x ?A <= infdist ?y ?A + dist ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_closure_image",
     "bounded (?f ` closure ?S) ==> bounded (?f ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.convergent_imp_bounded",
     "?S \<longlonglongrightarrow> ?l ==> bounded (range ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_Int",
     "bounded ?S | bounded ?T ==> bounded (?S Int ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_subset",
     "[| bounded ?T; ?S <= ?T |] ==> bounded ?S",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_iff",
     "bounded ?S = (EX a. ALL x:?S. norm x <= a)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Elementary_Metric_Spaces.bounded_real",
     "bounded ?S = (EX a. ALL x:?S. \<bar>x\<bar> <= a)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Metric_Arith.unfold_simps", "Ball ?A ?P = (ALL x. x : ?A --> ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Metric_Arith.unfold_simps", "Bex ?A ?P = (EX x. x : ?A & ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Elementary_Metric_Spaces.bounded_norm_comp",
     "bounded ((%x. norm (?f x)) ` ?S) = bounded (?f ` ?S)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.infdist_triangle_abs",
     "\<bar>infdist ?x ?A - infdist ?y ?A\<bar> <= dist ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Elementary_Metric_Spaces.cball_sing", "?e = 0 ==> cball ?x ?e = {?x}",
     template_implication
      ([template_equation (template_var 1, template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.subset_ball",
     "?d <= ?e ==> ball ?x ?d <= ball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.subset_cball",
     "?d <= ?e ==> cball ?x ?d <= cball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.infdist_le",
     "?a : ?A ==> infdist ?x ?A <= dist ?x ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Elementary_Metric_Spaces.continuous_infdist",
     "continuous ?F ?f ==> continuous ?F (%x. infdist (?f x) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_infdist",
     "continuous_on ?S ?f ==> continuous_on ?S (%x. infdist (?f x) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Elementary_Metric_Spaces.mem_ball_imp_mem_cball",
     "?x : ball ?y ?e ==> ?x : cball ?y ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.limpt_of_limpts",
     "?x islimpt {y. y islimpt ?S} ==> ?x islimpt ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Elementary_Metric_Spaces.complete_Int_closed",
     "[| uniform_space_class.complete ?S; closed ?t |]
      ==> uniform_space_class.complete (?S Int ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_uniformly_continuous",
     "[| continuous_on ?S ?f; compact ?S |]
      ==> uniformly_continuous_on ?S ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Elementary_Metric_Spaces.ball_max_Un",
     "ball ?a (max ?r ?s) = ball ?a ?r Un ball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.ball_min_Int",
     "ball ?a (min ?r ?s) = ball ?a ?r Int ball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_max_Un",
     "cball ?a (max ?r ?s) = cball ?a ?r Un cball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_min_Int",
     "cball ?a (min ?r ?s) = cball ?a ?r Int cball ?a ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_any_center",
     "bounded ?S = (EX e. ALL y:?S. dist ?a y <= e)",
     template_equation
      (template_app (template_hole 4, template_var 1),
       template_app (template_hole 3, t_empty))),
    ("Metric_Arith.nnf_thms", "(?P = ?Q) = ((?P | ~ ?Q) & (~ ?P | ?Q))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Metric_Arith.metric_prenex", "(?P = ?Q) = (?P & ?Q | ~ ?P & ~ ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Metric_Arith.unfold_simps", "(?A <= ?B) = (ALL t. t : ?A --> t : ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Metric_Arith.pre_arith_simps",
     "(?z < max ?x ?y) = (?z < ?x | ?z < ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Metric_Arith.pre_arith_simps",
     "(max ?x ?y < ?z) = (?x < ?z & ?y < ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Metric_Arith.pre_arith_simps",
     "(?z <= max ?x ?y) = (?z <= ?x | ?z <= ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Metric_Arith.pre_arith_simps",
     "(max ?b ?c <= ?a) = (?b <= ?a & ?c <= ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Metric_Arith.unfold_simps", "(?c : ?A Un ?B) = (?c : ?A | ?c : ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Metric_Arith.Sup_insert_insert",
     "Sup (insert ?a (insert ?b ?s)) = Sup (insert (max ?a ?b) ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Elementary_Metric_Spaces.compact_sequence_with_limit",
     "?f \<longlonglongrightarrow> ?l ==> compact (insert ?l (range ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_var 0)),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("Elementary_Metric_Spaces.bounded_Times",
     "[| bounded ?s; bounded ?t |] ==> bounded (?s \<times> ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Elementary_Metric_Spaces.bounded_uniformly_continuous_image",
     "[| uniformly_continuous_on ?S ?f; bounded ?S |]
      ==> bounded (?f ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Metric_Arith.nnf_thms", "(?P ~= ?Q) = ((~ ?P | ~ ?Q) & (?P | ?Q))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.eventually_nhds_ball",
     "0 < ?d ==> \<forall>\<^sub>F x in nhds ?z. x : ball ?z ?d",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.ball_divide_subset",
     "1 <= ?d ==> ball ?x (?e / ?d) <= ball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.cball_divide_subset",
     "1 <= ?d ==> cball ?x (?e / ?d) <= cball ?x ?e",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Elementary_Metric_Spaces.setdist_le_sing",
     "?x : ?S ==> setdist ?S ?T <= setdist {?x} ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)),
           template_var 0)))),
    ("Elementary_Metric_Spaces.bounded_Union",
     "[| finite ?F; ALL S:?F. bounded S |] ==> bounded (\<Union> ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.diameter_subset",
     "[| ?S <= ?T; bounded ?T |] ==> diameter ?S <= diameter ?T",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.setdist_triangle",
     "setdist ?S ?T <= setdist ?S {?a} + setdist {?a} ?T",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 1)))),
    ("Elementary_Metric_Spaces.bounded_subset_ballD",
     "bounded ?S ==> EX r>0. ?S <= ball ?x r",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Elementary_Metric_Spaces.finite_ball_include",
     "finite ?S ==> EX e>0. ?S <= ball ?a e",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Elementary_Metric_Spaces.boundedI",
     "(!!x. x : ?S ==> norm x <= ?B) ==> bounded ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Elementary_Metric_Spaces.setdist_eq_0I",
     "[| ?x : ?S; ?x : ?T |] ==> setdist ?S ?T = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_closure",
     "[| uniformly_continuous_on ?S ?f; continuous_on (closure ?S) ?f |]
      ==> uniformly_continuous_on (closure ?S) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.closure_contains_Sup",
     "[| ?S ~= {}; bdd_above ?S |] ==> Sup ?S : closure ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.closure_contains_Inf",
     "[| ?S ~= {}; bdd_below ?S |] ==> Inf ?S : closure ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.complete_closed_subset",
     "[| closed ?S; ?S <= ?t; uniform_space_class.complete ?t |]
      ==> uniform_space_class.complete ?S",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Elementary_Metric_Spaces.bounded_subset_cball",
     "bounded ?S = (EX e x. ?S <= cball x e & 0 <= e)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Elementary_Metric_Spaces.bounded_two_points",
     "bounded ?S = (EX e. ALL x:?S. ALL y:?S. dist x y <= e)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Elementary_Metric_Spaces.mem_interior",
     "(?x : interior ?S) = (EX e>0. ball ?x e <= ?S)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Elementary_Metric_Spaces.mem_interior_cball",
     "(?x : interior ?S) = (EX e>0. cball ?x e <= ?S)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Metric_Arith.unfold_simps",
     "(?A Int ?B = {}) = (ALL x:?A. ALL y:?B. x ~= y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Metric_Arith.ball_insert",
     "(ALL x:insert ?a ?B. ?P x) = (?P ?a & (ALL x:?B. ?P x))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Elementary_Metric_Spaces.setdist_eq_infdist",
     "setdist ?A ?B = (if ?A = {} then 0 else INF a\<in>?A. infdist a ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4)),
               template_hole 3),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 1)))
           ))),
    ("Elementary_Metric_Spaces.setdist_Lipschitz",
     "\<bar>setdist {?x} ?S - setdist {?y} ?S\<bar> <= dist ?x ?y",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_var 1))),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Elementary_Metric_Spaces.diameter_bounded",
     "bounded ?S ==> ALL x:?S. ALL y:?S. dist x y <= diameter ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.in_closure_iff_infdist_zero",
     "?A ~= {} ==> (?x : closure ?A) = (infdist ?x ?A = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app (template_hole 3, template_var 1))
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.open_contains_ball",
     "open ?S = (ALL x:?S. EX e>0. ball x e <= ?S)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app (template_hole 6, template_var 0), t_empty))),
    ("Elementary_Metric_Spaces.open_contains_cball",
     "open ?S = (ALL x:?S. EX e>0. cball x e <= ?S)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app (template_hole 6, template_var 0), t_empty))),
    ("Elementary_Metric_Spaces.islimpt_eq_infinite_ball",
     "?x islimpt ?S = (ALL e>0. infinite (?S Int ball ?x e))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Elementary_Metric_Spaces.islimpt_eq_infinite_cball",
     "?x islimpt ?S = (ALL e>0. infinite (?S Int cball ?x e))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Elementary_Metric_Spaces.perfect_choose_dist",
     "0 < ?r ==> EX a. a ~= ?x & dist a ?x < ?r",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.infdist_notempty",
     "?A ~= {} ==> infdist ?x ?A = Inf (dist ?x ` ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1))))),
    ("Elementary_Metric_Spaces.bounded_has_Sup",
     "[| bounded ?S; ?S ~= {} |] ==> ALL x:?S. x <= Sup ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.bounded_has_Inf",
     "[| bounded ?S; ?S ~= {} |] ==> ALL x:?S. Inf ?S <= x",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.infdist_le2",
     "[| ?a : ?A; dist ?x ?a <= ?d |] ==> infdist ?x ?A <= ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 3),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Elementary_Metric_Spaces.setdist_le_dist",
     "[| ?x : ?s; ?y : ?t |] ==> setdist ?s ?t <= dist ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("Elementary_Metric_Spaces.mem_ball_leI",
     "[| ?x : ball ?y ?e; ?e <= ?f |] ==> ?x : ball ?y ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.mem_cball_leI",
     "[| ?x : cball ?y ?e; ?e <= ?f |] ==> ?x : cball ?y ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.Inf_insert",
     "bounded ?S ==>
      Inf (insert ?x ?S) = (if ?S = {} then ?x else min ?x (Inf ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 5, template_var 1)))
             )))),
    ("Elementary_Metric_Spaces.Sup_insert",
     "bounded ?S ==>
      Sup (insert ?x ?S) = (if ?S = {} then ?x else max ?x (Sup ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 5, template_var 1)))
             )))),
    ("Elementary_Metric_Spaces.tendsto_infdist",
     "(?f \<longlongrightarrow> ?l) ?F ==>
      ((%x. infdist (?f x) ?A) \<longlongrightarrow> infdist ?l ?A) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Elementary_Metric_Spaces.disjoint_cballI",
     "?r + ?s < dist ?x ?y ==> cball ?x ?r Int cball ?y ?s = {}",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_hole 0))),
    ("Elementary_Metric_Spaces.disjoint_ballI",
     "?r + ?s <= dist ?x ?y ==> ball ?x ?r Int ball ?y ?s = {}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_hole 0))),
    ("Elementary_Metric_Spaces.infdist_mono",
     "[| ?A <= ?B; ?A ~= {} |] ==> infdist ?x ?B <= infdist ?x ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Elementary_Metric_Spaces.setdist_subset_left",
     "[| ?S ~= {}; ?S <= ?T |] ==> setdist ?T ?u <= setdist ?S ?u",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Elementary_Metric_Spaces.setdist_subset_right",
     "[| ?T ~= {}; ?T <= ?u |] ==> setdist ?S ?u <= setdist ?S ?T",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Elementary_Metric_Spaces.closed_contains_Sup",
     "[| ?S ~= {}; bdd_above ?S; closed ?S |] ==> Sup ?S : ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.closed_contains_Inf",
     "[| ?S ~= {}; bdd_below ?S; closed ?S |] ==> Inf ?S : ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.atLeastAtMost_eq_cball",
     "{?a..?b} = cball ((?a + ?b) / 2) ((?b - ?a) / 2)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Elementary_Metric_Spaces.greaterThanLessThan_eq_ball",
     "{?a<..<?b} = ball ((?a + ?b) / 2) ((?b - ?a) / 2)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Elementary_Metric_Spaces.compact_eq_Bolzano_Weierstrass",
     "compact ?S =
      (ALL T. infinite T & T <= ?S --> (EX x:?S. x islimpt T))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Elementary_Metric_Spaces.closure_approachable",
     "(?x : closure ?S) = (ALL e>0. EX y:?S. dist y ?x < e)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Elementary_Metric_Spaces.closure_approachable_le",
     "(?x : closure ?S) = (ALL e>0. EX y:?S. dist y ?x <= e)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Elementary_Metric_Spaces.open_contains_ball_eq",
     "open ?S ==> (?x : ?S) = (EX e>0. ball ?x e <= ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_var 1),
         template_app (template_hole 5, t_empty)))),
    ("Elementary_Metric_Spaces.eventually_at_ball",
     "0 < ?d ==>
      \<forall>\<^sub>F t in at ?z within ?A. t : ball ?z ?d & t : ?A",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.bounded_UN",
     "[| finite ?A; ALL x:?A. bounded (?B x) |]
      ==> bounded (\<Union> (?B ` ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Elementary_Metric_Spaces.in_closed_iff_infdist_zero",
     "[| closed ?A; ?A ~= {} |] ==> (?x : ?A) = (infdist ?x ?A = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1)
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.closure_approachableD",
     "[| ?x : closure ?S; 0 < ?e |] ==> EX y:?S. dist ?x y < ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Elementary_Metric_Spaces.compact_Inter",
     "[| !!S. S : ?\<F> ==> compact S; ?\<F> ~= {} |]
      ==> compact (\<Inter> ?\<F>)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Elementary_Metric_Spaces.diameter_bounded_bound",
     "[| bounded ?S; ?x : ?S; ?y : ?S |] ==> dist ?x ?y <= diameter ?S",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Elementary_Metric_Spaces.open_contains_cball_eq",
     "open ?S ==> ALL x. (x : ?S) = (EX e>0. cball x e <= ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Elementary_Metric_Spaces.at_within_ball",
     "[| 0 < ?e; dist ?x ?y < ?e |] ==> at ?y within ball ?x ?e = at ?y",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("Elementary_Metric_Spaces.bounded_dist_comp",
     "[| bounded (?f ` ?S); bounded (?g ` ?S) |]
      ==> bounded ((%x. dist (?f x) (?g x)) ` ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))
           ))),
    ("Elementary_Metric_Spaces.cball_trans",
     "[| ?y : cball ?z ?b; ?x : cball ?y ?a |] ==> ?x : cball ?z (?b + ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Elementary_Metric_Spaces.infdist_pos_not_in_closed",
     "[| closed ?S; ?S ~= {}; ?x ~: ?S |] ==> 0 < infdist ?x ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)
                )
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.closed_approachable",
     "closed ?S ==> (ALL e>0. EX y:?S. dist y ?x < e) = (?x : ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Elementary_Metric_Spaces.openI",
     "(!!x. x : ?S ==> EX e>0. ball x e <= ?S) ==> open ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.Bolzano_Weierstrass_imp_bounded",
     "(!!T. [| infinite T; T <= ?S |] ==> EX x:?S. x islimpt T) ==>
      bounded ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.diameter_compact_attained",
     "[| compact ?S; ?S ~= {} |]
      ==> EX x:?S. EX y:?S. dist x y = diameter ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.islimpt_approachable",
     "?x islimpt ?S = (ALL e>0. EX x':?S. x' ~= ?x & dist x' ?x < e)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.islimpt_approachable_le",
     "?x islimpt ?S = (ALL e>0. EX x':?S. x' ~= ?x & dist x' ?x <= e)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.finite_set_avoid",
     "finite ?S ==> EX d>0. ALL x:?S. x ~= ?a --> d <= dist ?a x",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Elementary_Metric_Spaces.ball_scale",
     "?a ~= 0 ==>
      (*\<^sub>R) ?a ` ball ?c ?r =
      ball (?a *\<^sub>R ?c) (\<bar>?a\<bar> * ?r)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("Elementary_Metric_Spaces.cball_scale",
     "?a ~= 0 ==>
      (*\<^sub>R) ?a ` cball ?c ?r =
      cball (?a *\<^sub>R ?c) (\<bar>?a\<bar> * ?r)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("Elementary_Metric_Spaces.bounded_has_Sup",
     "[| bounded ?S; ?S ~= {} |]
      ==> ALL b. (ALL x:?S. x <= b) --> Sup ?S <= b",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.bounded_has_Inf",
     "[| bounded ?S; ?S ~= {} |]
      ==> ALL b. (ALL x:?S. b <= x) --> b <= Inf ?S",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.distance_attains_sup",
     "[| compact ?s; ?s ~= {} |]
      ==> EX x:?s. ALL y:?s. dist ?a y <= dist ?a x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Elementary_Metric_Spaces.compact_infdist_le",
     "[| ?A ~= {}; compact ?A; 0 < ?e |]
      ==> compact {x. infdist x ?A <= ?e}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 2, t_empty))
           ))),
    ("Elementary_Metric_Spaces.closed_subset_contains_Sup",
     "[| closed ?C; ?A <= ?C; ?A ~= {}; bdd_above ?A |] ==> Sup ?A : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Elementary_Metric_Spaces.closed_subset_contains_Inf",
     "[| closed ?C; ?A <= ?C; ?A ~= {}; bdd_below ?A |] ==> Inf ?A : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Elementary_Metric_Spaces.open_real",
     "open ?s =
      (ALL x:?s. EX e>0. ALL x'. \<bar>x' - x\<bar> < e --> x' : ?s)",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app (template_hole 9, template_var 0), t_empty))),
    ("Elementary_Metric_Spaces.islimpt_approachable_real",
     "?x islimpt ?s =
      (ALL e>0. EX x':?s. x' ~= ?x & \<bar>x' - ?x\<bar> < e)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.eventually_at_ball'",
     "0 < ?d ==>
      \<forall>\<^sub>F t in at ?z within ?A.
         t : ball ?z ?d & t ~= ?z & t : ?A",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.separate_point_closed",
     "[| closed ?s; ?a ~: ?s |] ==> EX d>0. ALL x:?s. d <= dist ?a x",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.discrete_imp_closed",
     "[| 0 < ?e; ALL x:?S. ALL y:?S. dist y x < ?e --> y = x |]
      ==> closed ?S",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0), t_empty)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Elementary_Metric_Spaces.atLeastAtMost_subset_contains_Inf",
     "[| ?A ~= {}; ?a <= ?b; ?A <= {?a..?b} |] ==> Inf ?A : {?a..?b}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.closure_Int_ball_not_empty",
     "[| ?S <= closure ?T; ?x : ?S; 0 < ?r |] ==> ?T Int ball ?x ?r ~= {}",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.Lim",
     "(?f \<longlongrightarrow> ?l) ?net =
      (?net = bot |
       (ALL e>0. \<forall>\<^sub>F x in ?net. dist (?f x) ?l < e))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Elementary_Metric_Spaces.not_trivial_limit_within_ball",
     "(at ?x within ?S ~= bot) = (ALL e>0. ?S Int ball ?x e - {?x} ~= {})",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 1),
               template_var 0)),
           template_hole 10)),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.infdist_Un_min",
     "[| ?A ~= {}; ?B ~= {} |]
      ==> infdist ?x (?A Un ?B) = min (infdist ?x ?A) (infdist ?x ?B)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Elementary_Metric_Spaces.bounded_infinite_imp_islimpt",
     "[| ?T <= ?S; bounded ?S; infinite ?T; !!x. x islimpt ?S ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_closed_imp_Cauchy_continuous",
     "[| continuous_on ?S ?f; closed ?S; Cauchy ?\<sigma>;
         !!n. ?\<sigma> n : ?S |]
      ==> Cauchy (?f o ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.compact_eq_totally_bounded",
     "compact ?s =
      (uniform_space_class.complete ?s &
       (ALL e>0. EX k. finite k & ?s <= (UN x:k. ball x e)))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app (template_hole 9, t_empty)))),
    ("Elementary_Metric_Spaces.limpt_sequential_inj",
     "?x islimpt ?S =
      (EX f. (ALL n. f n : ?S - {?x}) &
             inj f & f \<longlonglongrightarrow> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1), template_var 0),
       template_app (template_hole 11, t_empty))),
    ("Elementary_Metric_Spaces.diameter_bounded",
     "bounded ?S ==>
      ALL d>0. d < diameter ?S --> (EX x:?S. EX y:?S. d < dist x y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.diameter_lower_bounded",
     "[| bounded ?S; 0 < ?d; ?d < diameter ?S |]
      ==> EX x:?S. EX y:?S. ?d < dist x y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_closed_Collect_le",
     "[| continuous_on ?s ?f; continuous_on ?s ?g; closed ?s |]
      ==> closed {x: ?s. ?f x <= ?g x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_extension_at_closure",
     "[| uniformly_continuous_on ?X ?f; ?x : closure ?X;
         !!l. (?f \<longlongrightarrow> l) (at ?x within ?X) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.openin_contains_ball",
     "openin (top_of_set ?T) ?S =
      (?S <= ?T & (ALL x:?S. EX e>0. ball x e Int ?T <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_hole 8)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 0), t_empty)))),
    ("Elementary_Metric_Spaces.openin_contains_cball",
     "openin (top_of_set ?T) ?S =
      (?S <= ?T & (ALL x:?S. EX e>0. cball x e Int ?T <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_hole 8)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 0), t_empty)))),
    ("Elementary_Metric_Spaces.openE",
     "[| open ?S; ?x : ?S; !!e. [| 0 < e; ball ?x e <= ?S |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_at_ball",
     "isCont ?f ?x = (ALL e>0. EX d>0. ?f ` ball ?x d <= ball (?f ?x) e)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 1),
             template_hole 10)),
         template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.seq_compact_imp_totally_bounded",
     "seq_compact ?S ==>
      ALL e>0. EX k. finite k & k <= ?S & ?S <= (UN x:k. ball x e)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Elementary_Metric_Spaces.closed_real",
     "closed ?s =
      (ALL x.
          (ALL e>0. EX x':?s. x' ~= x & \<bar>x' - x\<bar> < e) -->
          x : ?s)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.le_setdist_iff",
     "(?d <= setdist ?S ?T) =
      ((ALL x:?S. ALL y:?T. ?d <= dist x y) &
       (?S = {} | ?T = {} --> ?d <= 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1), t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_hole 1)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1))),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_hole 0)))
           ))),
    ("Elementary_Metric_Spaces.compact_sup_maxdistance",
     "[| compact ?S; ?S ~= {} |]
      ==> EX x:?S. EX y:?S. ALL u:?S. ALL v:?S. dist u v <= dist x y",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("Elementary_Metric_Spaces.Lim_dist_ubound",
     "[| ?net ~= bot; (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. dist ?a (?f x) <= ?e |]
      ==> dist ?a ?l <= ?e",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Elementary_Metric_Spaces.continuous_ge_on_closure",
     "[| continuous_on (closure ?s) ?f; ?x : closure ?s;
         !!x. x : ?s ==> ?a <= ?f x |]
      ==> ?a <= ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_var 2, template_var 1)))),
    ("Elementary_Metric_Spaces.continuous_le_on_closure",
     "[| continuous_on (closure ?s) ?f; ?x : closure ?s;
         !!x. x : ?s ==> ?f x <= ?a |]
      ==> ?f ?x <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_var 0))),
    ("Elementary_Metric_Spaces.continuous_within_ball",
     "continuous (at ?x within ?s) ?f =
      (ALL e>0. EX d>0. ?f ` (ball ?x d Int ?s) <= ball (?f ?x) e)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.Lim_transform_within_set",
     "[| (?f \<longlongrightarrow> ?l) (at ?a within ?S);
         \<forall>\<^sub>F x in at ?a. (x : ?S) = (x : ?T) |]
      ==> (?f \<longlongrightarrow> ?l) (at ?a within ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app (template_hole 5, template_var 3)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("Elementary_Metric_Spaces.infdist_attains_inf",
     "[| closed ?X; ?X ~= {};
         !!x. [| x : ?X; infdist ?y ?X = dist ?y x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.setdist_attains_inf",
     "[| compact ?B; ?B ~= {};
         !!y. [| y : ?B; setdist ?A ?B = infdist y ?A |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.frontier_straddle",
     "(?a : frontier ?S) =
      (ALL e>0.
          (EX x:?S. dist ?a x < e) & (EX x. x ~: ?S & dist ?a x < e))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.separate_closed_compact",
     "[| closed ?s; compact ?t; ?s Int ?t = {} |]
      ==> EX d>0. ALL x:?s. ALL y:?t. d <= dist x y",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.separate_compact_closed",
     "[| compact ?s; closed ?t; ?s Int ?t = {} |]
      ==> EX d>0. ALL x:?s. ALL y:?t. d <= dist x y",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 0),
          template_hole 7)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.continuous_at_eps_delta",
     "isCont ?f ?x =
      (ALL e>0.
          EX d>0. ALL x'. dist x' ?x < d --> dist (?f x') (?f ?x) < e)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_hole 9)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.continuous_at_avoid",
     "[| isCont ?f ?x; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 2), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.banach_fix_type",
     "[| 0 <= ?c; ?c < 1; ALL x y. dist (?f x) (?f y) <= ?c * dist x y |]
      ==> EX! x. ?f x = x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 5),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Elementary_Metric_Spaces.continuous_within_eps_delta",
     "continuous (at ?x within ?s) ?f =
      (ALL e>0.
          EX d>0. ALL x':?s. dist x' ?x < d --> dist (?f x') (?f ?x) < e)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.continuous_within_avoid",
     "[| continuous (at ?x within ?s) ?f; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y:?s. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 3), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.compact_fip_Heine_Borel",
     "[| !!T. T : ?\<F> ==> compact T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |] ==> \<Inter> \<F>' ~= {} |]
      ==> \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_iff",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL e>0.
             EX d>0. ALL x':?s. dist x' x < d --> dist (?f x') (?f x) < e)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, template_var 1), t_empty))),
    ("Elementary_Metric_Spaces.continuous_on_closure_sequentially",
     "continuous_on (closure ?S) ?f =
      (ALL x a.
          a : closure ?S &
          (ALL n. x n : ?S) & x \<longlonglongrightarrow> a -->
          (?f o x) \<longlonglongrightarrow> ?f a)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app (template_hole 12, template_var 1)),
         template_var 0),
       template_app (template_hole 11, t_empty))),
    ("Elementary_Metric_Spaces.continuous_at_real_range",
     "isCont ?f ?x =
      (ALL e>0.
          EX d>0.
             ALL x'. norm (x' - ?x) < d --> \<bar>?f x' - ?f ?x\<bar> < e)",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_var 1),
             template_hole 11)),
         template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.diameter_le",
     "[| ?S ~= {} | 0 <= ?d;
         !!x y. [| x : ?S; y : ?S |] ==> norm (x - y) <= ?d |]
      ==> diameter ?S <= ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Elementary_Metric_Spaces.continuous_on_real_range",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL e>0.
             EX d>0.
                ALL x':?s.
                   norm (x' - x) < d --> \<bar>?f x' - ?f x\<bar> < e)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 10, template_var 1), t_empty))),
    ("Elementary_Metric_Spaces.distance_attains_inf",
     "[| closed ?s; ?s ~= {};
         !!x. [| x : ?s; !!y. y : ?s ==> dist ?a x <= dist ?a y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_on_avoid",
     "[| continuous_on ?s ?f; ?x : ?s; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y:?s. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.le_setdistI",
     "[| ?s ~= {}; ?t ~= {};
         !!x y. [| x : ?s; y : ?t |] ==> ?d <= dist x y |]
      ==> ?d <= setdist ?s ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Elementary_Metric_Spaces.setdist_unique",
     "[| ?a : ?S; ?b : ?T;
         !!x y. x : ?S & y : ?T ==> dist ?a ?b <= dist x y |]
      ==> setdist ?S ?T = dist ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 1)))),
    ("Elementary_Metric_Spaces.Lim_at",
     "?f \<midarrow>?a\<rightarrow> ?l =
      (ALL e>0.
          EX d>0.
             ALL x. 0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 2),
           template_app (template_hole 11, template_var 1)),
         template_app
          (template_app (template_hole 10, template_var 0),
           template_hole 9)),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.continuous_on_open_avoid",
     "[| continuous_on ?s ?f; open ?s; ?x : ?s; ?f ?x ~= ?a |]
      ==> EX e>0. ALL y. dist ?x y < e --> ?f y ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 2, template_var 1), template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.Lim_within",
     "(?f \<longlongrightarrow> ?l) (at ?a within ?S) =
      (ALL e>0.
          EX d>0.
             ALL x:?S.
                0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 3),
           template_app (template_hole 10, template_var 2)),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Elementary_Metric_Spaces.Lim_within_le",
     "(?f \<longlongrightarrow> ?l) (at ?a within ?S) =
      (ALL e>0.
          EX d>0.
             ALL x:?S.
                0 < dist x ?a & dist x ?a <= d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 12, template_var 3),
           template_app (template_hole 11, template_var 2)),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.continuous_onI",
     "(!!x e.
          [| 0 < e; x : ?s |]
          ==> EX d>0.
                 ALL x':?s. dist x' x < d --> dist (?f x') (?f x) <= e) ==>
      continuous_on ?s ?f",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Elementary_Metric_Spaces.compact_in_open_separated",
     "[| ?A ~= {}; compact ?A; open ?B; ?A <= ?B;
         !!e. [| 0 < e; {x. infdist x ?A <= e} <= ?B |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.closed_imp_fip_compact",
     "[| closed ?S; !!T. T : ?\<F> ==> compact T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |]
            ==> ?S Int \<Inter> \<F>' ~= {} |]
      ==> ?S Int \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.continuous_on_closure",
     "continuous_on (closure ?S) ?f =
      (ALL x e.
          x : closure ?S & 0 < e -->
          (EX d>0.
              ALL y. y : ?S & dist y x < d --> dist (?f y) (?f x) < e))",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 1)),
         template_var 0),
       template_app (template_hole 9, t_empty))),
    ("Elementary_Metric_Spaces.Lim_withinI",
     "(!!e. 0 < e ==>
            EX d>0.
               ALL x:?S.
                  0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l <= e) ==>
      (?f \<longlongrightarrow> ?l) (at ?a within ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3))
           ))),
    ("Elementary_Metric_Spaces.continuous_transform_within",
     "[| continuous (at ?x within ?s) ?f; 0 < ?d; ?x : ?s;
         !!x'. [| x' : ?s; dist x' ?x < ?d |] ==> ?f x' = ?g x' |]
      ==> continuous (at ?x within ?s) ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3)),
             template_var 0)
           ))),
    ("Elementary_Metric_Spaces.continuous_at_right_real_increasing",
     "(!!x y. x <= y ==> ?f x <= ?f y) ==>
      continuous (at_right ?a) ?f =
      (ALL e>0. EX d>0. ?f (?a + d) - ?f ?a < e)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 0),
               template_app (template_hole 8, template_var 0))),
           template_var 1),
         template_app (template_hole 7, t_empty)))),
    ("Elementary_Metric_Spaces.continuous_at_left_real_increasing",
     "(!!x y. x <= y ==> ?f x <= ?f y) ==>
      continuous (at_left ?a) ?f =
      (ALL e>0. EX delta>0. ?f ?a - ?f (?a - delta) < e)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 0),
               template_app (template_hole 7, template_var 0))),
           template_var 1),
         template_app (template_hole 6, t_empty)))),
    ("Elementary_Metric_Spaces.setdist_ltE",
     "[| setdist ?S ?T < ?b; ?S ~= {}; ?T ~= {};
         !!x y. [| x : ?S; y : ?T; dist x y < ?b |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_var 1),
        template_negation
         (template_equation (template_var 3, template_hole 3)),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_sequentially",
     "uniformly_continuous_on ?s ?f =
      (ALL x y.
          (ALL n. x n : ?s) &
          (ALL n. y n : ?s) &
          (%n. dist (x n) (y n)) \<longlonglongrightarrow> 0 -->
          (%n. dist (?f (x n)) (?f (y n))) \<longlonglongrightarrow> 0)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app (template_hole 10, t_empty))),
    ("Elementary_Metric_Spaces.continuous_within_E",
     "[| continuous (at ?x within ?s) ?f; 0 < ?e;
         !!d. [| 0 < d;
                 !!x'. [| x' : ?s; dist x' ?x <= d |]
                       ==> dist (?f x') (?f ?x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.closed_fip_Heine_Borel",
     "[| closed ?S; ?T : ?\<F>; bounded ?T; !!T. T : ?\<F> ==> closed T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |] ==> \<Inter> \<F>' ~= {} |]
      ==> \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.Edelstein_fix",
     "[| compact ?S; ?S ~= {}; ?g ` ?S <= ?S;
         ALL x:?S. ALL y:?S. x ~= y --> dist (?g x) (?g y) < dist x y |]
      ==> EX! x. x : ?S & ?g x = x",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 0), template_var 1),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1), t_empty)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Elementary_Metric_Spaces.Heine_Borel_lemma",
     "[| compact ?S; ?S <= \<Union> ?\<G>; !!G. G : ?\<G> ==> open G;
         !!e. [| 0 < e; !!x. x : ?S ==> EX G:?\<G>. ball x e <= G |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.continuous_onE",
     "[| continuous_on ?s ?f; ?x : ?s; 0 < ?e;
         !!d. [| 0 < d;
                 !!x'. [| x' : ?s; dist x' ?x <= d |]
                       ==> dist (?f x') (?f ?x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 4)
            ),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_onE",
     "[| uniformly_continuous_on ?s ?f; 0 < ?e;
         !!d. [| 0 < d;
                 !!x x'.
                    [| x : ?s; x' : ?s; dist x' x < d |]
                    ==> dist (?f x') (?f x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.closed_imp_fip",
     "[| closed ?S; ?T : ?\<F>; bounded ?T; !!T. T : ?\<F> ==> closed T;
         !!\<F>'.
            [| finite \<F>'; \<F>' <= ?\<F> |]
            ==> ?S Int \<Inter> \<F>' ~= {} |]
      ==> ?S Int \<Inter> ?\<F> ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Elementary_Metric_Spaces.bounded_closed_nest",
     "[| !!n. closed (?S n); !!n. ?S n ~= {};
         !!m n. m <= n ==> ?S n <= ?S m; bounded (?S 0);
         !!a. (!!n. a : ?S n) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_var 1, template_hole 2))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.banach_fix",
     "[| uniform_space_class.complete ?s; ?s ~= {}; 0 <= ?c; ?c < 1;
         ?f ` ?s <= ?s;
         ALL x:?s. ALL y:?s. dist (?f x) (?f y) <= ?c * dist x y |]
      ==> EX! x. x : ?s & ?f x = x",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_inequation (less_equals, template_hole 11, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 9),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 0), template_var 2),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Elementary_Metric_Spaces.Lebesgue_number_lemma",
     "[| compact ?S; ?\<C> ~= {}; ?S <= \<Union> ?\<C>;
         !!B. B : ?\<C> ==> open B;
         !!\<delta>.
            [| 0 < \<delta>;
               !!T. [| T <= ?S; diameter T < \<delta> |]
                    ==> EX B:?\<C>. T <= B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.decreasing_closed_nest_sing",
     "[| !!n. closed (?S n); !!n. ?S n ~= {};
         !!m n. m <= n ==> ?S n <= ?S m;
         !!e. 0 < e ==> EX n. ALL x:?S n. ALL y:?S n. dist x y < e |]
      ==> EX a. \<Inter> (range ?S) = {a}",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Elementary_Metric_Spaces.decreasing_closed_nest",
     "[| !!n. closed (?S n); !!n. ?S n ~= {};
         !!m n. m <= n ==> ?S n <= ?S m;
         !!e. 0 < e ==> EX n. ALL x:?S n. ALL y:?S n. dist x y < e;
         !!a. (!!n. a : ?S n) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.uniformly_continuous_on_extension_on_closure",
     "[| uniformly_continuous_on ?X ?f;
         !!g. [| uniformly_continuous_on (closure ?X) g;
                 !!x. x : ?X ==> ?f x = g x;
                 !!Y h x.
                    [| ?X <= Y; Y <= closure ?X; continuous_on Y h;
                       !!x. x : ?X ==> ?f x = h x; x : Y |]
                    ==> h x = g x |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Elementary_Metric_Spaces.compact_lemma_general",
     "[| finite ?basis;
         !!k. k : ?basis ==> bounded ((%x. ?proj x k) ` range ?f);
         !!e k. k : ?basis ==> ?proj (?unproj e) k = e k;
         !!x. ?unproj (?proj x) = x |]
      ==> ALL d<=?basis.
             EX l r.
                strict_mono r &
                (ALL e>0.
                    \<forall>\<^sub>F n in sequentially.
                       ALL i:d. dist (?proj (?f (r n)) i) (?proj l i) < e)",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 3)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Elementary_Metric_Spaces.compact_uniformly_equicontinuous",
     "[| compact ?S;
         !!x e.
            [| x : ?S; 0 < e |]
            ==> EX d>0.
                   ALL f:?\<F>.
                      ALL x':?S. dist x' x < d --> dist (f x') (f x) < e;
         0 < ?e;
         !!d. [| 0 < d;
                 !!f x x'.
                    [| f : ?\<F>; x : ?S; x' : ?S; dist x' x < d |]
                    ==> dist (f x') (f x) < ?e |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation (less_than, template_hole 9, template_var 1),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.MetricMoreTemplates"
### 0.833s elapsed time, 1.117s cpu time, 0.078s GC time
val it = (): unit
