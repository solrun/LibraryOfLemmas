   [("Miscellany.card_le_UNIV", "card ?A <= CARD(?'n)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Miscellany.sym_allrel", "sym (?A \<times> ?A)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Miscellany.trans_allrel", "trans (?A \<times> ?A)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Miscellany.equiv_allrel", "equiv ?A (?A \<times> ?A)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Miscellany.rotate2_rotate2", "rotate2 (rotate2 ?x) = - ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Miscellany.refl_on_allrel", "refl_on ?A (?A \<times> ?A)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Miscellany.scalar_equiv", "?r *s ?x = ?r *\<^sub>R ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Miscellany.rotate2_uminus", "rotate2 (- ?x) = - rotate2 ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Miscellany.card_insert_ge", "card ?A <= card (insert ?x ?A)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Miscellany.rotate2_eq", "(rotate2 ?x = rotate2 ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Miscellany.rotate2_dot",
     "rotate2 ?u \<bullet> rotate2 ?v = ?u \<bullet> ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Miscellany.rotate2_scaleR",
     "rotate2 (?k *\<^sub>R ?x) = ?k *\<^sub>R rotate2 ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Miscellany.card_suc_ge_insert", "card (insert ?x ?A) <= card ?A + 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Miscellany.rotate2", "rotate2 ?x $ 2 = ?x $ 1",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app (template_hole 5, template_var 0), template_hole 0))),
    ("Miscellany.unordered_pair_equality", "{?p, ?q} = {?q, ?p}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Miscellany.rotate2", "rotate2 ?x $ 1 = - ?x $ 2",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Miscellany.sym_restrict", "sym ?r ==> sym (Restr ?r ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0), t_empty)))
           ))),
    ("Miscellany.eq_3_or_of_3",
     "?j = 3 | (EX j'. ?j = of_int (Rep_bit1 j'))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)))),
           template_app (template_hole 2, t_empty))
         )),
    ("Miscellany.dot_right_diff_distrib",
     "?x \<bullet> (?u - ?v) = ?x \<bullet> ?u - ?x \<bullet> ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Miscellany.dot_left_diff_distrib",
     "(?u - ?v) \<bullet> ?x = ?u \<bullet> ?x - ?v \<bullet> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Miscellany.choose_1", "card ?S = 1 ==> EX x. ?S = {x}",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Miscellany.sgn_plus", "sgn ?x = sgn ?y ==> sgn (?x + ?y) = sgn ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Miscellany.sgn_plus_abs",
     "\<bar>?y\<bar> < \<bar>?x\<bar> ==> sgn (?x + ?y) = sgn ?x",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Miscellany.invertible_times_eq_zero",
     "[| invertible ?A; ?A *v ?x = 0 |] ==> ?x = 0",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Miscellany.times_invertible_eq_zero",
     "[| invertible ?A; ?x v* ?A = 0 |] ==> ?x = 0",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Miscellany.norm_dist_dot",
     "(norm_dist ?x ?y)\<^sup>2 = (?x - ?y) \<bullet> (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Miscellany.equiv_restrict",
     "equiv ?A ?r ==> equiv (?A Int ?B) (Restr ?r ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0), t_empty)))
           ))),
    ("Miscellany.refl_on_restrict",
     "refl_on ?A ?r ==> refl_on (?A Int ?B) (Restr ?r ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0), t_empty)))
           ))),
    ("Miscellany.abs_plus",
     "sgn ?x = sgn ?y ==>
      \<bar>?x + ?y\<bar> = \<bar>?x\<bar> + \<bar>?y\<bar>",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Miscellany.equiv_Int",
     "[| equiv ?A ?r; equiv ?B ?s |] ==> equiv (?A Int ?B) (?r Int ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Miscellany.quotient_element_nonempty",
     "[| equiv ?A ?r; ?X : ?A // ?r |] ==> EX x. x : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Miscellany.Image_refl_on_nonempty",
     "[| refl_on ?A ?r; ?x : ?A |] ==> ?x : ?r `` {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Miscellany.sgn_div",
     "[| ?y ~= (0::?'a); sgn ?x = sgn ?y |] ==> (0::?'a) < ?x / ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_than, template_hole 3,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Miscellany.choose_2", "card ?S = 2 ==> EX x y. ?S = {x, y}",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Miscellany.dot2_rearrange",
     "[| ?u \<bullet> ?x = 0; ?x ~= 0 |]
      ==> EX k. ?u = k *\<^sub>R rotate2 ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 0),
          template_hole 6),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Miscellany.unordered_pair_element_equality",
     "[| {?p, ?q} = {?r, ?s}; ?p = ?r |] ==> ?q = ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_hole 1)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1))),
        template_equation (template_var 3, template_var 1)],
       template_equation (template_var 2, template_var 0))),
    ("Miscellany.am_gm2",
     "[| 0 <= ?a; 0 <= ?b |] ==> sqrt (?a * ?b) <= (?a + ?b) / 2",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1),
        template_inequation (less_equals, template_hole 7, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Miscellany.card_gt_0_diff_singleton",
     "[| 0 < card ?S; ?x : ?S |] ==> card (?S - {?x}) = card ?S - 1",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 1)),
           template_hole 0)))),
    ("Miscellany.choose_3", "card ?S = 3 ==> EX x y z. ?S = {x, y, z}",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Miscellany.real2_orthogonal_dep2",
     "[| ?x ~= 0; ?u \<bullet> ?x = 0; ?v \<bullet> ?x = 0 |]
      ==> dep2 ?u ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_hole 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 2),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Miscellany.partition_Image_element",
     "[| equiv ?A ?r; ?X : ?A // ?r; ?x : ?X |] ==> ?r `` {?x} = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_var 1))),
    ("Miscellany.real2_eq",
     "[| ?u $ 1 = ?v $ 1; ?u $ 2 = ?v $ 2 |] ==> ?u = ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_hole 1))),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_hole 1))))],
       template_equation (template_var 1, template_var 0))),
    ("Miscellany.am_gm2",
     "[| 0 <= ?a; 0 <= ?b |]
      ==> (sqrt (?a * ?b) = (?a + ?b) / 2) = (?a = ?b)",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation (less_equals, template_hole 9, template_var 0)],
       template_bimplication
        (template_equation
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))),
         template_equation (template_var 1, template_var 0)))),
    ("Miscellany.dot2_rearrange_1",
     "[| ?u \<bullet> ?x = 0; ?x $ 1 ~= 0 |]
      ==> ?u = (?u $ 2 / ?x $ 1) *\<^sub>R rotate2 ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0),
          template_hole 10),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, template_var 0),
                template_hole 7),
              template_hole 10)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)))),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7))),
           template_app (template_hole 0, template_var 0))))),
    ("Miscellany.dot2_rearrange_2",
     "[| ?u \<bullet> ?x = 0; ?x $ 2 ~= 0 |]
      ==> ?u = - (?u $ 1 / ?x $ 2) *\<^sub>R rotate2 ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 1),
            template_var 0),
          template_hole 11),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 9, template_var 0),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 11)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)))))),
           template_app (template_hole 0, template_var 0))))),
    ("Miscellany.cosine_rule",
     "(norm_dist ?a ?c)\<^sup>2 =
      (norm_dist ?a ?b)\<^sup>2 + (norm_dist ?b ?c)\<^sup>2 +
      2 * ((?a - ?b) \<bullet> (?b - ?c))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_hole 5))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_var 0)),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 1)),
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 5))))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 6, template_hole 5))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))))))]
