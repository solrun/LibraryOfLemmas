   [("Projective.cltn2_rep_invertible", "invertible (cltn2_rep ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Projective.proj2_Col_coincide", "proj2_Col ?a ?a ?c",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Projective.proj2_line_rep_non_zero", "proj2_line_rep ?l ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Projective.proj2_rep_non_zero", "proj2_rep ?x ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Projective.vector2_append1_non_zero", "vector2_append1 ?v ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Projective.proj2_not_self_incident", "~ proj2_incident ?p (P2L ?p)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Projective.cltn2_abs_rep", "cltn2_abs (cltn2_rep ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.cltn2_left_id", "cltn2_compose cltn2_id ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Projective.cltn2_transpose_transpose",
     "cltn2_transpose (cltn2_transpose ?A) = ?A",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.L2P_P2L", "L2P (P2L ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.apply_cltn2_id", "apply_cltn2 ?p cltn2_id = ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Projective.proj2_abs_rep", "proj2_abs (proj2_rep ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.apply_cltn2_line_id", "apply_cltn2_line ?l cltn2_id = ?l",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Projective.P2L_L2P", "P2L (L2P ?l) = ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.proj2_line_abs_rep",
     "proj2_line_abs (proj2_line_rep ?l) = ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.cart2_proj2", "cart2_pt (proj2_pt ?v) = ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Projective.proj2_line_through_incident",
     "proj2_incident ?p (proj2_line_through ?p ?q)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Projective.proj2_line_through_incident",
     "proj2_incident ?q (proj2_line_through ?p ?q)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Projective.proj2_intersection_incident",
     "proj2_incident (proj2_intersection ?l ?m) ?l",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("Projective.proj2_intersection_incident",
     "proj2_incident (proj2_intersection ?l ?m) ?m",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Projective.proj2_rep_in", "proj2_rep ?x : Rep_proj2 ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Projective.cltn2_rep_in", "cltn2_rep ?B : Rep_cltn2 ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Projective.cltn2_left_inverse",
     "cltn2_compose (cltn2_inverse ?A) ?A = cltn2_id",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Projective.cart2_append1_proj2",
     "cart2_append1 (proj2_pt ?v) = vector2_append1 ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Projective.cltn2_left_inverse_ex",
     "EX B. cltn2_compose B ?A = cltn2_id",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Projective.rep_mult_line_rep_non_zero",
     "cltn2_rep ?A *v proj2_line_rep ?l ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Projective.rep_mult_rep_non_zero",
     "proj2_rep ?p v* cltn2_rep ?A ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Projective.apply_cltn2_inv",
     "apply_cltn2 (apply_cltn2 ?b ?g) (cltn2_inverse ?g) = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("Projective.apply_cltn2_line_inv",
     "apply_cltn2_line (apply_cltn2_line ?b ?g) (cltn2_inverse ?g) = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("Projective.P2L_to_L2P", "(P2L ?p = ?l) = (?p = L2P ?l)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Projective.proj2_another_point_on_line",
     "EX q. q ~= ?p & proj2_incident q ?l",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Projective.proj2_another_line_through_point",
     "EX m. m ~= ?l & proj2_incident ?p m",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Projective.z_non_zero_proj2_pt", "z_non_zero (proj2_pt ?v)",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_hole 0)
         )),
    ("Projective.cltn2_inverse_compose",
     "cltn2_inverse (cltn2_compose ?x ?y) =
      cltn2_compose (cltn2_inverse ?y) (cltn2_inverse ?x)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Projective.cltn2_transpose_compose",
     "cltn2_transpose (cltn2_compose ?A ?B) =
      cltn2_compose (cltn2_transpose ?B) (cltn2_transpose ?A)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Projective.proj2_incident_switch",
     "proj2_incident ?p ?l ==> proj2_incident (L2P ?l) (P2L ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Projective.proj2_Col_permute",
     "proj2_Col ?a ?b ?c ==> proj2_Col ?a ?c ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Projective.proj2_Col_permute",
     "proj2_Col ?a ?b ?c ==> proj2_Col ?b ?a ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Projective.L2P_inj", "L2P ?l = L2P ?m ==> ?l = ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Projective.apply_cltn2_preserve_incident",
     "proj2_incident (apply_cltn2 ?p ?A) (apply_cltn2_line ?l ?A) =
      proj2_incident ?p ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("Projective.cltn2_assoc",
     "cltn2_compose (cltn2_compose ?A ?B) ?C =
      cltn2_compose ?A (cltn2_compose ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projective.cltn2_inverse_inv",
     "inv\<^bsub>(| carrier = UNIV, monoid.mult = cltn2_compose, one = cltn2_id |)\<^esub> ?A =
      cltn2_inverse ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_hole 1))),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Projective.apply_cltn2_compose",
     "apply_cltn2 (apply_cltn2 ?p ?A) ?B =
      apply_cltn2 ?p (cltn2_compose ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projective.apply_cltn2_line_compose",
     "apply_cltn2_line (apply_cltn2_line ?l ?A) ?B =
      apply_cltn2_line ?l (cltn2_compose ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Projective.cltn2_rep_abs",
     "invertible ?A ==>
      (?A, cltn2_rep (cltn2_abs ?A)) : invertible_proportionality",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_hole 0)
           ))),
    ("Projective.cltn2_transpose_abs",
     "invertible ?M ==>
      cltn2_transpose (cltn2_abs ?M) =
      cltn2_abs (Finite_Cartesian_Product.transpose ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Projective.proj2_subset_Col",
     "[| ?T <= ?S; proj2_set_Col ?S |] ==> proj2_set_Col ?T",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Projective.apply_cltn2_incident",
     "proj2_incident ?p (apply_cltn2_line ?l ?A) =
      proj2_incident (apply_cltn2 ?p (cltn2_inverse ?A)) ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("Projective.apply_cltn2_injective",
     "apply_cltn2 ?p ?C = apply_cltn2 ?q ?C ==> ?p = ?q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("Projective.apply_cltn2_line_injective",
     "apply_cltn2_line ?l ?C = apply_cltn2_line ?m ?C ==> ?l = ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("Projective.proj2_Col_iff_set_Col",
     "proj2_Col ?p ?q ?r = proj2_set_Col {?p, ?q, ?r}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Projective.proj2_Col_iff_euclid",
     "proj2_Col (proj2_pt ?a) (proj2_pt ?b) (proj2_pt ?c) =
      real_euclid.Col ?a ?b ?c",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Projective.cross_ratio_swap_34",
     "cross_ratio ?p ?q ?s ?r = 1 / cross_ratio ?p ?q ?r ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0),
           template_var 1)))),
    ("Projective.proj2_rep_abs",
     "?v : non_zero_vectors ==>
      (?v, proj2_rep (proj2_abs ?v)) : proportionality",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Projective.proj2_abs_mult",
     "?c ~= 0 ==> proj2_abs (?c *\<^sub>R ?v) = proj2_abs ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Projective.proj2_abs_mult_rep",
     "?c ~= 0 ==> proj2_abs (?c *\<^sub>R proj2_rep ?x) = ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Projective.cltn2_abs_mult_rep",
     "?k ~= 0 ==> cltn2_abs (?k *\<^sub>R cltn2_rep ?A) = ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Projective.proj2_line_abs_mult",
     "?k ~= 0 ==> proj2_line_abs (?k *\<^sub>R ?v) = proj2_line_abs ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Projective.non_zero_mult_rep_non_zero",
     "?v ~= 0 ==> ?v v* cltn2_rep ?C ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_hole 2)
           ))),
    ("Projective.cltn2_compose_right_abs",
     "invertible ?M ==>
      cltn2_compose ?A (cltn2_abs ?M) = cltn2_abs (cltn2_rep ?A ** ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("Projective.cltn2_compose_left_abs",
     "invertible ?M ==>
      cltn2_compose (cltn2_abs ?M) ?A = cltn2_abs (?M ** cltn2_rep ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Projective.apply_cltn2_right_abs",
     "invertible ?M ==>
      apply_cltn2 ?p (cltn2_abs ?M) = proj2_abs (proj2_rep ?p v* ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("Projective.proj2_pt_scalar",
     "EX c. c ~= 0 &
            proj2_rep (proj2_pt ?v) = c *\<^sub>R vector2_append1 ?v",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("Projective.proj2_rep_independent",
     "?p ~= ?q ==> independent {proj2_rep ?p, proj2_rep ?q}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0)),
                     template_hole 0)))
               )
           ))),
    ("Projective.apply_cltn2_left_abs",
     "?v ~= 0 ==>
      apply_cltn2 (proj2_abs ?v) ?C = proj2_abs (?v v* cltn2_rep ?C)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Projective.cart2_append1_non_zero",
     "z_non_zero ?p ==> cart2_append1 ?p ~= 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Projective.proj2_abs_cart2_append1",
     "z_non_zero ?p ==> proj2_abs (cart2_append1 ?p) = ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Projective.proj2_cart2",
     "z_non_zero ?p ==> proj2_pt (cart2_pt ?p) = ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Projective.proj2_incident_right_abs",
     "?v ~= 0 ==>
      proj2_incident ?p (proj2_line_abs ?v) =
      (proj2_rep ?p \<bullet> ?v = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 1))
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 1),
           template_hole 0)))),
    ("Projective.proj2_incident_left_abs",
     "?v ~= 0 ==>
      proj2_incident (proj2_abs ?v) ?l =
      (?v \<bullet> proj2_line_rep ?l = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Projective.cart2_append1",
     "z_non_zero ?p ==> vector2_append1 (cart2_pt ?p) = cart2_append1 ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0)),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Projective.cltn2_abs_mult",
     "[| ?k ~= 0; invertible ?A |]
      ==> cltn2_abs (?k *\<^sub>R ?A) = cltn2_abs ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Projective.proj2_Col_iff_not_invertible",
     "proj2_Col ?p ?q ?r =
      (~ invertible (vector [proj2_rep ?p, proj2_rep ?q, proj2_rep ?r]))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0)))))))),
    ("Projective.cltn2_rep_abs2",
     "invertible ?A ==>
      EX k. k ~= 0 & cltn2_rep (cltn2_abs ?A) = k *\<^sub>R ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Projective.apply_cltn2_preserve_set_Col",
     "proj2_set_Col ?S ==> proj2_set_Col {apply_cltn2 p ?C |p. p : ?S}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Projective.not_proj2_set_Col_iff_span",
     "card ?S = 3 ==>
      (~ proj2_set_Col ?S) = (span (proj2_rep ` ?S) = UNIV)",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 0),
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_hole 8)))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0))
              )],
         template_equation
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_hole 0)))),
    ("Projective.cltn2_compose_abs",
     "[| invertible ?M; invertible ?N |]
      ==> cltn2_compose (cltn2_abs ?M) (cltn2_abs ?N) =
          cltn2_abs (?M ** ?N)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Projective.fourth_proj2_no_3_Col",
     "~ proj2_Col ?p ?q ?r ==> EX s. proj2_no_3_Col {s, ?r, ?p, ?q}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Projective.cart2_append1_z",
     "z_non_zero ?p ==> cart2_append1 ?p $ 3 = 1",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_hole 0))),
    ("Projective.cltn2_abs_rep_abs_mult",
     "[| invertible ?M; invertible ?N |]
      ==> cltn2_abs (cltn2_rep (cltn2_abs ?M) ** ?N) =
          cltn2_abs (?M ** ?N)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 1))),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Projective.proj2_no_3_Col_span",
     "[| proj2_no_3_Col ?S; ?p : ?S |]
      ==> span (proj2_rep ` (?S - {?p})) = UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)))),
         template_hole 0))),
    ("Projective.cross_ratio_1_equal",
     "[| cross_ratio_correct ?p ?q ?r ?s; cross_ratio ?p ?q ?r ?s = 1 |]
      ==> ?r = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0),
          template_hole 1)],
       template_equation (template_var 1, template_var 0))),
    ("Projective.proj2_incident_Col",
     "[| proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l |]
      ==> proj2_Col ?p ?q ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Projective.proj2_line_rep_abs",
     "?v ~= 0 ==>
      EX k. k ~= 0 & proj2_line_rep (proj2_line_abs ?v) = k *\<^sub>R ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Projective.proj2_rep_abs2",
     "?v ~= 0 ==> EX k. k ~= 0 & proj2_rep (proj2_abs ?v) = k *\<^sub>R ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Projective.cross_ratio_correct_cltn2",
     "cross_ratio_correct ?p ?q ?r ?s ==>
      cross_ratio_correct (apply_cltn2 ?p ?C) (apply_cltn2 ?q ?C)
       (apply_cltn2 ?r ?C) (apply_cltn2 ?s ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Projective.apply_cltn2_abs",
     "[| ?x ~= 0; invertible ?A |]
      ==> apply_cltn2 (proj2_abs ?x) (cltn2_abs ?A) = proj2_abs (?x v* ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Projective.proj2_abs_abs_mult",
     "[| proj2_abs ?v = proj2_abs ?w; ?w ~= 0 |]
      ==> EX c. ?v = c *\<^sub>R ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Projective.proj2_line_abs_abs_mult",
     "[| proj2_line_abs ?v = proj2_line_abs ?w; ?w ~= 0 |]
      ==> EX k. ?v = k *\<^sub>R ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Projective.cart2_append1_inj",
     "[| z_non_zero ?p; cart2_append1 ?p = cart2_append1 ?q |] ==> ?p = ?q",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 1)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Projective.proj2_line_through_unique",
     "[| ?p ~= ?q; proj2_incident ?p ?l; proj2_incident ?q ?l |]
      ==> ?l = proj2_line_through ?p ?q",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Projective.proj2_intersection_unique",
     "[| ?l ~= ?m; proj2_incident ?p ?l; proj2_incident ?p ?m |]
      ==> ?p = proj2_intersection ?l ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Projective.not_invertible_iff_proj2_set_Col",
     "(~ invertible (vector [proj2_rep ?p, proj2_rep ?q, proj2_rep ?r])) =
      proj2_set_Col {?p, ?q, ?r}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0)),
                   template_hole 3)))))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Projective.proj2_rep_cart2_append1",
     "z_non_zero ?p ==>
      proj2_rep ?p = proj2_rep ?p $ 3 *\<^sub>R cart2_append1 ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0)),
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4)))),
           template_app (template_hole 0, template_var 0))))),
    ("Projective.proj2_incident_abs",
     "[| ?v ~= 0; ?w ~= 0 |]
      ==> proj2_incident (proj2_abs ?v) (proj2_line_abs ?w) =
          (?v \<bullet> ?w = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_app (template_hole 3, template_var 0))
              )],
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)))),
    ("Projective.apply_cltn2_imp_mult",
     "apply_cltn2 ?p ?C = ?q ==>
      EX k. k ~= 0 &
            proj2_rep ?p v* cltn2_rep ?C = k *\<^sub>R proj2_rep ?q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 2),
            template_var 1),
          template_var 0)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Projective.cross_ratio_swap_13_24",
     "[| cross_ratio_correct ?p ?q ?r ?s; ?r ~= ?s |]
      ==> cross_ratio ?r ?s ?p ?q = cross_ratio ?p ?q ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Projective.proj2_incident_iff_Col",
     "[| ?p ~= ?q; proj2_incident ?p ?l; proj2_incident ?q ?l |]
      ==> proj2_incident ?r ?l = proj2_Col ?p ?q ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Projective.proj2_Col_iff",
     "?a ~= ?r ==>
      proj2_Col ?a ?r ?t =
      (?t = ?a |
       (EX i. ?t = proj2_abs (i *\<^sub>R proj2_rep ?a + proj2_rep ?r)))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 2)),
               template_app (template_hole 4, t_empty))
             )))),
    ("Projective.cross_ratio_swap_12",
     "[| cross_ratio_correct ?p ?q ?r ?s; cross_ratio_correct ?q ?p ?r ?s |]
      ==> cross_ratio ?q ?p ?r ?s = 1 / cross_ratio ?p ?q ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("Projective.proj2_line_rep_dependent",
     "[| ?i *\<^sub>R proj2_line_rep ?l + ?j *\<^sub>R proj2_line_rep ?m =
         0;
         ?i ~= 0 | ?j ~= 0 |]
      ==> ?l = ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2))),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_hole 1))),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Projective.proj2_rep_dependent",
     "[| ?i *\<^sub>R proj2_rep ?v + ?j *\<^sub>R proj2_rep ?w = 0;
         ?i ~= 0 | ?j ~= 0 |]
      ==> ?v = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2))),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_hole 1))),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Projective.proj2_incident_unique",
     "[| proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;
         proj2_incident ?q ?m |]
      ==> ?p = ?q | ?l = ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Projective.statement53_existence",
     "ALL i. proj2_no_3_Col (range (($) (?p $ i))) ==>
      EX C. ALL j. apply_cltn2 (?p $ 0 $ j) C = ?p $ 1 $ j",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Projective.apply_cltn2_linear",
     "?j *\<^sub>R ?v + ?k *\<^sub>R ?w ~= 0 ==>
      ?j *\<^sub>R (?v v* cltn2_rep ?C) +
      ?k *\<^sub>R (?w v* cltn2_rep ?C) ~=
      0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_hole 2)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app (template_hole 0, template_var 0)))),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 0, template_var 0)))),
             template_hole 2)
           ))),
    ("Projective.proj2_Col_coeff_unique",
     "[| ?a ~= ?r;
         proj2_abs (?i *\<^sub>R proj2_rep ?a + proj2_rep ?r) =
         proj2_abs (?j *\<^sub>R proj2_rep ?a + proj2_rep ?r) |]
      ==> ?i = ?j",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 3))),
              template_app (template_hole 1, template_var 2))),
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_app (template_hole 1, template_var 3))),
              template_app (template_hole 1, template_var 2))))],
       template_equation (template_var 1, template_var 0))),
    ("Projective.cross_ratio_abs2",
     "?p ~= ?q ==>
      cross_ratio ?p ?q
       (proj2_abs (?i *\<^sub>R proj2_rep ?p + proj2_rep ?q))
       (proj2_abs (?j *\<^sub>R proj2_rep ?p + proj2_rep ?q)) =
      ?j / ?i",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app (template_hole 1, template_var 3))),
                 template_app (template_hole 1, template_var 2)))),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 3))),
               template_app (template_hole 1, template_var 2)))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Projective.proj2_Col_coeff_abs",
     "[| ?p ~= ?q; ?j ~= 0 |]
      ==> proj2_Col_coeff ?p ?q
           (proj2_abs
             (?i *\<^sub>R proj2_rep ?p + ?j *\<^sub>R proj2_rep ?q)) =
          ?i / ?j",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 3))),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_var 2))))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Projective.cross_ratio_unique",
     "[| cross_ratio_correct ?p ?q ?r ?s; cross_ratio_correct ?p ?q ?r ?t;
         cross_ratio ?p ?q ?r ?s = cross_ratio ?p ?q ?r ?t |]
      ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Projective.proj2_Col_coeff",
     "[| proj2_Col ?a ?r ?t; ?a ~= ?r; ?t ~= ?a |]
      ==> ?t =
          proj2_abs
           (proj2_Col_coeff ?a ?r ?t *\<^sub>R proj2_rep ?a +
            proj2_rep ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_hole 0, template_var 1)))))),
    ("Projective.proj2_Col_distinct_coeff_non_zero",
     "[| proj2_Col ?p ?q ?r; ?p ~= ?q; ?r ~= ?p; ?r ~= ?q |]
      ==> proj2_Col_coeff ?p ?q ?r ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 2)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Projective.cross_ratio_equal_1",
     "[| proj2_Col ?p ?q ?r; ?p ~= ?q; ?r ~= ?p; ?r ~= ?q |]
      ==> cross_ratio ?p ?q ?r ?r = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 2)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_var 0),
         template_hole 0))),
    ("Projective.cart2_injective",
     "[| z_non_zero ?p; z_non_zero ?q; cart2_pt ?p = cart2_pt ?q |]
      ==> ?p = ?q",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 1)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_hole 3)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Projective.apply_cltn2_line_unique",
     "[| ?p ~= ?q; proj2_incident ?p ?l; proj2_incident ?q ?l;
         proj2_incident (apply_cltn2 ?p ?C) ?m;
         proj2_incident (apply_cltn2 ?q ?C) ?m |]
      ==> apply_cltn2_line ?l ?C = ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Projective.apply_cltn2_unique",
     "[| ?l ~= ?m; proj2_incident ?p ?l; proj2_incident ?p ?m;
         proj2_incident ?q (apply_cltn2_line ?l ?C);
         proj2_incident ?q (apply_cltn2_line ?m ?C) |]
      ==> apply_cltn2 ?p ?C = ?q",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Projective.proj2_incident_iff",
     "[| ?p ~= ?q; proj2_incident ?p ?l; proj2_incident ?q ?l |]
      ==> proj2_incident ?r ?l =
          (?r = ?p |
           (EX k. ?r =
                  proj2_abs (k *\<^sub>R proj2_rep ?p + proj2_rep ?q)))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 1)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 3)),
               template_app (template_hole 4, t_empty))
             )))),
    ("Projective.statement52_existence",
     "proj2_no_3_Col (insert ?a3.0 (range (($) ?a))) ==>
      EX A. apply_cltn2 (proj2_abs (vector [1, 1, 1])) A = ?a3.0 &
            (ALL j. apply_cltn2 (proj2_abs (axis j 1)) A = ?a $ j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 1),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 0)),
                  template_hole 11)))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Projective.apply_cltn2_linear",
     "?j *\<^sub>R ?v + ?k *\<^sub>R ?w ~= 0 ==>
      apply_cltn2 (proj2_abs (?j *\<^sub>R ?v + ?k *\<^sub>R ?w)) ?C =
      proj2_abs
       (?j *\<^sub>R (?v v* cltn2_rep ?C) +
        ?k *\<^sub>R (?w v* cltn2_rep ?C))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 1)))),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_var 0)))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0)))))))),
    ("Projective.proj2_Col_coeff_unique'",
     "[| ?a ~= 0; ?r ~= 0; proj2_abs ?a ~= proj2_abs ?r;
         proj2_abs (?i *\<^sub>R ?a + ?r) =
         proj2_abs (?j *\<^sub>R ?a + ?r) |]
      ==> ?i = ?j",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 2)),
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 3)),
              template_var 2)))],
       template_equation (template_var 1, template_var 0))),
    ("Projective.proj2_set_Col_expand",
     "[| proj2_set_Col ?S; {?p, ?q, ?r} <= ?S; ?p ~= ?q; ?r ~= ?p |]
      ==> EX k. ?r = proj2_abs (k *\<^sub>R proj2_rep ?p + proj2_rep ?q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_hole 7))),
          template_var 3),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Projective.dependent_proj2_abs",
     "[| ?p ~= 0; ?q ~= 0; ?i ~= 0 | ?j ~= 0;
         ?i *\<^sub>R ?p + ?j *\<^sub>R ?q = 0 |]
      ==> proj2_abs ?p = proj2_abs ?q",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 7)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_hole 4))),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 3)),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)),
          template_hole 7)],
       template_equation
        (template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 2)))),
    ("Projective.proj2_set_Col_coeff",
     "[| proj2_set_Col ?S; {?p, ?q, ?r} <= ?S; ?p ~= ?q; ?r ~= ?p |]
      ==> ?r =
          proj2_abs
           (proj2_Col_coeff ?p ?q ?r *\<^sub>R proj2_rep ?p +
            proj2_rep ?q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_hole 7))),
          template_var 3),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_hole 0, template_var 1)))))),
    ("Projective.cross_ratio_product",
     "[| proj2_Col ?p ?q ?s; ?p ~= ?q; ?s ~= ?p; ?s ~= ?q |]
      ==> cross_ratio ?p ?q ?r ?s * cross_ratio ?p ?q ?s ?t =
          cross_ratio ?p ?q ?r ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 4, template_var 3)),
        template_negation
         (template_equation (template_var 2, template_var 4)),
        template_negation
         (template_equation (template_var 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Projective.statement55",
     "[| ?p ~= ?q; apply_cltn2 ?p ?C = ?q; apply_cltn2 ?q ?C = ?p;
         proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l |]
      ==> apply_cltn2 (apply_cltn2 ?r ?C) ?C = ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 2),
          template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_var 2),
         template_var 0))),
    ("Projective.cross_ratio_equal_cltn2",
     "[| cross_ratio_correct ?p ?q ?r ?s;
         cross_ratio_correct (apply_cltn2 ?p ?C) (apply_cltn2 ?q ?C)
          (apply_cltn2 ?r ?C) ?t;
         cross_ratio (apply_cltn2 ?p ?C) (apply_cltn2 ?q ?C)
          (apply_cltn2 ?r ?C) ?t =
         cross_ratio ?p ?q ?r ?s |]
      ==> ?t = apply_cltn2 ?s ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 1)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 1)),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1)),
            template_var 0),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2))],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 1)))),
    ("Projective.proj2_Col_iff_euclid_cart2",
     "[| z_non_zero ?p; z_non_zero ?q; z_non_zero ?r |]
      ==> proj2_Col ?p ?q ?r =
          real_euclid.Col (cart2_pt ?p) (cart2_pt ?q) (cart2_pt ?r)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 1)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Projective.cross_ratio_cltn2",
     "[| proj2_set_Col {?p, ?q, ?r, ?s}; ?p ~= ?q; ?r ~= ?p; ?s ~= ?p |]
      ==> cross_ratio (apply_cltn2 ?p ?C) (apply_cltn2 ?q ?C)
           (apply_cltn2 ?r ?C) (apply_cltn2 ?s ?C) =
          cross_ratio ?p ?q ?r ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5)))))
            ),
        template_negation
         (template_equation (template_var 4, template_var 3)),
        template_negation
         (template_equation (template_var 2, template_var 4)),
        template_negation
         (template_equation (template_var 1, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1)))),
    ("Projective.euclid_B_cart2_common_line",
     "[| z_non_zero ?p; z_non_zero ?q; z_non_zero ?r;
         B\<^sub>\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r |]
      ==> EX l. proj2_incident ?p l &
                proj2_incident ?q l & proj2_incident ?r l",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 1)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2)),
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Projective.proj2_Col_abs",
     "[| ?p ~= 0; ?q ~= 0; ?r ~= 0; ?i ~= 0 | ?j ~= 0 | ?k ~= 0;
         ?i *\<^sub>R ?p + ?j *\<^sub>R ?q + ?k *\<^sub>R ?r = 0 |]
      ==> proj2_Col (proj2_abs ?p) (proj2_abs ?q) (proj2_abs ?r)",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 7)),
        template_negation
         (template_equation (template_var 4, template_hole 7)),
        template_negation
         (template_equation (template_var 3, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 4))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_hole 4))),
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 5, template_var 0),
                    template_hole 4))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 5)),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 4))),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)),
          template_hole 7)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 5)),
               template_app (template_hole 0, template_var 4)),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Projective.cross_ratio_abs",
     "[| ?u ~= 0; ?v ~= 0; proj2_abs ?u ~= proj2_abs ?v; ?j ~= 0; ?l ~= 0 |]
      ==> cross_ratio (proj2_abs ?u) (proj2_abs ?v)
           (proj2_abs (?i *\<^sub>R ?u + ?j *\<^sub>R ?v))
           (proj2_abs (?k *\<^sub>R ?u + ?l *\<^sub>R ?v)) =
          ?j * ?k / (?i * ?l)",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 9)),
        template_negation
         (template_equation (template_var 4, template_hole 9)),
        template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 5),
              template_app (template_hole 7, template_var 4))
            ),
        template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 7, template_var 5)),
               template_app (template_hole 7, template_var 4)),
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 5)),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 4)))),
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 5)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 4)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Projective.euclid_Col_cart2_incident",
     "[| z_non_zero ?p; z_non_zero ?q; z_non_zero ?r; ?p ~= ?q;
         proj2_incident ?p ?l; proj2_incident ?q ?l;
         real_euclid.Col (cart2_pt ?p) (cart2_pt ?q) (cart2_pt ?r) |]
      ==> proj2_incident ?r ?l",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 1)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_hole 5)
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_app (template_hole 0, template_var 3)),
                template_app (template_hole 0, template_var 2)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 0)
           ))),
    ("Projective.cltn2_three_point_line",
     "[| ?p ~= ?q; ?r ~= ?p; ?r ~= ?q; proj2_incident ?p ?l;
         proj2_incident ?q ?l; proj2_incident ?r ?l; apply_cltn2 ?p ?C = ?p;
         apply_cltn2 ?q ?C = ?q; apply_cltn2 ?r ?C = ?r;
         proj2_incident ?s ?l |]
      ==> apply_cltn2 ?s ?C = ?s",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4)),
        template_negation
         (template_equation (template_var 3, template_var 5)),
        template_negation
         (template_equation (template_var 3, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 5), template_var 1),
          template_var 5),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 1),
          template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Projective.cart2_append1_between",
     "[| z_non_zero ?p; z_non_zero ?q; z_non_zero ?r |]
      ==> (B\<^sub>\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r) =
          (EX k>=0.
              k <= 1 &
              cart2_append1 ?q =
              k *\<^sub>R cart2_append1 ?r +
              (1 - k) *\<^sub>R cart2_append1 ?p)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 2)),
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13))),
              template_hole 12)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 1)),
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13))),
              template_hole 12)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 0)),
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13))),
              template_hole 12)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 2)),
             template_app (template_hole 9, template_var 1)),
           template_app (template_hole 9, template_var 0)),
         template_app (template_hole 8, t_empty)))),
    ("Projective.cart2_append1_between_right_strict",
     "[| z_non_zero ?p; z_non_zero ?q; z_non_zero ?r;
         B\<^sub>\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r; ?q ~= ?r |]
      ==> EX k>=0.
             k < 1 &
             cart2_append1 ?q =
             k *\<^sub>R cart2_append1 ?r +
             (1 - k) *\<^sub>R cart2_append1 ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 2)),
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 14))),
              template_hole 13)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 1)),
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 14))),
              template_hole 13)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 0)),
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_hole 14))),
              template_hole 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 2)),
                template_app (template_hole 11, template_var 1)),
              template_app (template_hole 11, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Projective.cart2_append1_between_strict",
     "[| z_non_zero ?p; z_non_zero ?q; z_non_zero ?r;
         B\<^sub>\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r; ?q ~= ?p;
         ?q ~= ?r |]
      ==> EX k>0.
             k < 1 &
             cart2_append1 ?q =
             k *\<^sub>R cart2_append1 ?r +
             (1 - k) *\<^sub>R cart2_append1 ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 2)),
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13))),
              template_hole 12)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 1)),
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13))),
              template_hole 12)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 0)),
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13))),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_app (template_hole 10, template_var 1)),
              template_app (template_hole 10, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty))))]
