Loading theory "Draft.Optimize_Integer" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Print" via "Draft.Optimize_Float")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Ex_InterTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Ex_InterTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Tree" (required by "Draft.Ex_InterTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.148s elapsed time, 0.584s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Ex_InterTemplates" via "Draft.ExtrEqs")
### theory "Draft.Optimize_Integer"
### 0.281s elapsed time, 1.122s cpu time, 0.059s GC time
Loading theory "Draft.Optimize_Float" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Print")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### Code generator: dropping subsumed code equation
### bitlen ?x == if 0 < ?x then bitlen (?x div 2) + 1 else 0
### Code generator: dropping subsumed code equation
### Float ?m1.0 ?e1.0 + Float ?m2.0 ?e2.0 ==
### if ?m1.0 = 0 then Float ?m2.0 ?e2.0
### else if ?m2.0 = 0 then Float ?m1.0 ?e1.0
###      else if ?e1.0 <= ?e2.0
###           then Float (?m1.0 + ?m2.0 * 2 ^ nat (?e2.0 - ?e1.0)) ?e1.0
###           else Float (?m2.0 + ?m1.0 * 2 ^ nat (?e1.0 - ?e2.0)) ?e2.0
### Code generator: dropping subsumed code equation
### real_of_float (Float ?m ?e) ==
### if 0 <= ?e then real_of_int ?m * 2 ^ nat ?e
### else real_of_int ?m / 2 ^ nat (- ?e)
consts
  snth :: "'a stream => nat => 'a"
### Code generator: dropping subsumed code equation
### float_down ?p (Float ?m ?e) ==
### if ?p + ?e < 0 then Float (div_twopow ?m (nat (- (?p + ?e)))) (- ?p)
### else Float ?m ?e
### Code generator: dropping subsumed code equation
### lapprox_posrat ?prec ?x ?y ==
### let l = rat_precision ?prec (int ?x) (int ?y);
###     x = if 0 <= l then ?x * 2 ^ nat l div ?y
###         else ?x div 2 ^ nat (- l) div ?y
### in normfloat (Float (int x) (- l))
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
### Code generator: dropping subsumed code equation
### rapprox_posrat ?prec ?x ?y ==
### let l = rat_precision ?prec (int ?x) (int ?y);
###     (r, s) =
###       if 0 <= l then (int ?x * 2 ^ nat l, int ?y)
###       else (int ?x, int ?y * 2 ^ nat (- l));
###     d = r div s; m = r mod s
### in normfloat (Float (d + (if m = 0 | ?y = 0 then 0 else 1)) (- l))
consts
  right :: "'a tree => 'a tree"
### Code generator: dropping subsumed code equation
### float_round_down ?prec (Float ?m ?e) ==
### let d = bitlen \<bar>?m\<bar> - int ?prec - 1
### in if 0 < d then Float (div_twopow ?m (nat d)) (?e + d) else Float ?m ?e
### Code generator: dropping subsumed code equation
### int_floor_fl (Float ?m ?e) ==
### if 0 <= ?e then ?m * 2 ^ nat ?e else ?m div 2 ^ nat (- ?e)
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Code generator: dropping subsumed code equation
### floor_fl (Float ?m ?e) ==
### if 0 <= ?e then Float ?m ?e else Float (?m div 2 ^ nat (- ?e)) 0
### theory "Draft.Optimize_Float"
### 0.395s elapsed time, 1.517s cpu time, 0.189s GC time
Loading theory "Draft.Affine_Arithmetic_Auxiliarities" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection" via "Draft.Polygon" via "Draft.Counterclockwise_2D_Strict")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Affine_Arithmetic_Auxiliarities"
### 0.134s elapsed time, 0.541s cpu time, 0.000s GC time
Loading theory "Draft.Counterclockwise" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection" via "Draft.Polygon" via "Draft.Counterclockwise_2D_Strict" via "Draft.Counterclockwise_Vector")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale linorder_list0
  fixes le :: "'a => 'a => bool"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 0.929s elapsed time, 3.589s cpu time, 0.353s GC time
Loading theory "Draft.Executable_Euclidean_Space" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection" via "Draft.Affine_Form")
Proofs for inductive predicate(s) "sortedP"
  Proving monotonicity ...
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.161s elapsed time, 4.510s cpu time, 0.412s GC time
locale linorder_list
  fixes le :: "'a => 'a => bool"
    and S :: "'a set"
  assumes "linorder_list le S"
locale ccw_system0
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
Found termination order: "size <*mlex*> {}"
locale ccw_system12
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system12 ccw S"
locale ccw_system123
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system123 ccw S"
locale ccw_system4
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system4 ccw S"
Found termination order: "size <*mlex*> {}"
locale ccw_system1235'
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system1235' ccw S"
locale ccw_system1235
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system1235 ccw S"
locale ccw_system
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system ccw S"
### theory "Draft.Counterclockwise"
### 0.779s elapsed time, 2.664s cpu time, 0.776s GC time
Loading theory "Draft.Counterclockwise_Vector" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection" via "Draft.Polygon" via "Draft.Counterclockwise_2D_Strict")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale ccw_vector_space
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_vector_space ccw S"
Found termination order: "size <*mlex*> {}"
locale ccw_convex
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
    and oriented :: "'a => 'a => bool"
  assumes "ccw_convex ccw S oriented"
### theory "Draft.Counterclockwise_Vector"
### 0.154s elapsed time, 0.463s cpu time, 0.000s GC time
Loading theory "Draft.Counterclockwise_2D_Strict" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection" via "Draft.Polygon")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Counterclockwise_2D_Strict"
### 0.638s elapsed time, 1.915s cpu time, 0.245s GC time
Loading theory "Draft.Counterclockwise_2D_Arbitrary" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection")
Loading theory "Draft.Polygon" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection")
### theory "HOL-Library.Tree"
### 2.508s elapsed time, 8.714s cpu time, 1.270s GC time
Loading theory "Draft.Templates" (required by "Draft.Ex_InterTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.133s elapsed time, 0.528s cpu time, 0.099s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Ex_InterTemplates")
consts
  polychain_of :: "'a => 'a list => ('a * 'a) list"
consts
  dirvec :: "'a * 'a => 'a"
### theory "Draft.Polygon"
### 0.502s elapsed time, 1.945s cpu time, 0.243s GC time
### theory "Draft.Counterclockwise_2D_Arbitrary"
### 0.501s elapsed time, 1.936s cpu time, 0.243s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.908s elapsed time, 2.666s cpu time, 1.030s GC time
class executable_euclidean_space = ordered_euclidean_space +
  fixes Basis_list :: "'a list"
    and eucl_down :: "int => 'a => 'a"
    and eucl_truncate_down :: "nat => 'a => 'a"
    and eucl_truncate_up :: "nat => 'a => 'a"
  assumes
    "eucl_down_def":
      "!!p b.
          eucl_down p b =
          (SUM i:Basis. round_down p (b \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_truncate_down_def":
      "!!q b.
          eucl_truncate_down q b =
          (SUM i:Basis. truncate_down q (b \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_truncate_up_def":
      "!!q b.
          eucl_truncate_up q b =
          (SUM i:Basis. truncate_up q (b \<bullet> i) *\<^sub>R i)"
  assumes "Basis_list": "set Basis_list = Basis"
  assumes "distinct_Basis_list": "distinct Basis_list"
instantiation
  real :: executable_euclidean_space
  Basis_list_real == Basis_list :: real list
  eucl_down_real == eucl_down :: int => real => real
  eucl_truncate_down_real == eucl_truncate_down :: nat => real => real
  eucl_truncate_up_real == eucl_truncate_up :: nat => real => real
instantiation
  prod :: (executable_euclidean_space, executable_euclidean_space)
    executable_euclidean_space
  Basis_list_prod == Basis_list :: ('a * 'b) list
  eucl_down_prod == eucl_down :: int => 'a * 'b => 'a * 'b
  eucl_truncate_down_prod == eucl_truncate_down :: nat => 'a * 'b => 'a * 'b
  eucl_truncate_up_prod == eucl_truncate_up :: nat => 'a * 'b => 'a * 'b
instantiation
  vec :: (executable_euclidean_space, enum) executable_euclidean_space
  Basis_list_vec == Basis_list :: ('a, 'b) vec list
  eucl_down_vec == eucl_down :: int => ('a, 'b) vec => ('a, 'b) vec
  eucl_truncate_down_vec == eucl_truncate_down ::
    nat => ('a, 'b) vec => ('a, 'b) vec
  eucl_truncate_up_vec == eucl_truncate_up ::
    nat => ('a, 'b) vec => ('a, 'b) vec
locale blinfun_syntax
### theory "Draft.Executable_Euclidean_Space"
### 3.407s elapsed time, 8.721s cpu time, 2.125s GC time
Loading theory "Draft.Affine_Form" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Intersection")
Loading theory "Draft.Floatarith_Expression" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Affine_Code" via "Draft.Affine_Approximation" via "Draft.Straight_Line_Program")
consts
  interpret_floatariths :: "floatarith list => real list => real list"
instantiation
  floatarith :: {inverse,minus,one,plus,times,uminus,zero}
  zero_floatarith == zero_class.zero :: floatarith
  uminus_floatarith == uminus :: floatarith => floatarith
  times_floatarith == times :: floatarith => floatarith => floatarith
  plus_floatarith == plus :: floatarith => floatarith => floatarith
  one_floatarith == one_class.one :: floatarith
  minus_floatarith == minus :: floatarith => floatarith => floatarith
  inverse_floatarith == inverse :: floatarith => floatarith
  divide_floatarith == divide :: floatarith => floatarith => floatarith
consts
  Sum\<^sub>e :: "('a => 'b) => 'a list => 'b"
instantiation
  pdevs :: (equal) equal
  equal_pdevs == equal_class.equal :: 'a pdevs => 'a pdevs => bool
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  max_Var_floatarith :: "floatarith => nat"
consts
  max_Var_floatariths :: "floatarith list => nat"
consts
  max_Var_form :: "form => nat"
### theory "Draft.Affine_Form"
### 2.230s elapsed time, 5.194s cpu time, 1.441s GC time
Loading theory "Draft.Intersection" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter")
consts
  fresh_floatarith :: "floatarith => nat => bool"
consts
  fresh_floatariths :: "floatarith list => nat => bool"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### ML warning (line 976 of "$AFP/Affine_Arithmetic/Floatarith_Expression.thy"):
### Pattern is not exhaustive.
### ML warning (line 978 of "$AFP/Affine_Arithmetic/Floatarith_Expression.thy"):
### Pattern is not exhaustive.
### ML warning (line 1013 of "$AFP/Affine_Arithmetic/Floatarith_Expression.thy"):
### Pattern is not exhaustive.
### ML warning (line 1031 of "$AFP/Affine_Arithmetic/Floatarith_Expression.thy"):
### Pattern is not exhaustive.
val mk_congeq = fn: Proof.context -> term list -> thm -> string list * thm
val mk_congs = fn:
   Proof.context ->
     thm list -> (string list * thm) list * (typ * ('a list * 'b list)) list
val interpret_floatariths_congs = fn: Proof.context -> thm list
val preproc_form_conv = fn: Proof.context -> conv
val reify_floatariths_tac = fn: Proof.context -> int -> tactic
### Cannot skip proof of schematic goal statement
val interpret_floatariths_step_tac = fn: Proof.context -> int -> tactic
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
Found termination order: "{}"
consts
  bound_intersect_2d ::
    "nat
     => ((real * real) * real * real) list => real => (real * real) option"
consts
  freshs_floatarith :: "floatarith => nat list => bool"
### theory "Draft.Intersection"
### 3.145s elapsed time, 7.241s cpu time, 1.979s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  isnFDERIV ::
    "nat
     => floatarith list => nat list => nat list => real list => nat => bool"
consts
  isnFDERIV_approx ::
    "nat
     => nat
        => floatarith list
           => nat list
              => nat list => float interval option list => nat => bool"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Floatarith_Expression"
### 8.402s elapsed time, 16.021s cpu time, 4.044s GC time
Loading theory "Draft.Straight_Line_Program" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Affine_Code" via "Draft.Affine_Approximation")
deriving "compare_order" instance for type "Float.float"
deriving "compare" instance for type "Float.float"
deriving "linorder" instance for type "Approximation.floatarith"
generating comparator for type "Approximation.floatarith"
consts
  interpret_slp :: "floatarith list => real list => real list"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  slp_of_fas' ::
    "floatarith list
     => (floatarith, nat) mapping
        => floatarith list => (floatarith, nat) mapping * floatarith list"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Straight_Line_Program"
### 5.719s elapsed time, 7.020s cpu time, 1.178s GC time
Loading theory "Draft.Affine_Approximation" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter" via "Draft.Affine_Code")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
consts
  points_of_aform :: "'a * 'a pdevs => 'a list"
"float_plus_down"
  :: "nat => float => float => float"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
consts
  approx_floatariths_aformerr ::
    "nat
     => floatarith list
        => ((real * real pdevs) * real) list
           => ((real * real pdevs) * real) list option"
consts
  approx_slp ::
    "nat
     => floatarith list
        => ((real * real pdevs) * real) list
           => ((real * real pdevs) * real) list option"
### theory "Draft.Affine_Approximation"
### 3.380s elapsed time, 3.833s cpu time, 0.506s GC time
Loading theory "Draft.Affine_Code" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter")
consts
  degree_list :: "(nat * 'a) list => nat"
Found termination order:
  "(%p. size_list size (snd (snd (snd (snd p))))) <*mlex*>
   (%p. size_list size (fst (snd (snd (snd p))))) <*mlex*> {}"
consts
  update_list :: "nat => 'a => (nat * 'a) list => (nat * 'a) list"
### theory "Draft.Affine_Code"
### 1.327s elapsed time, 1.471s cpu time, 0.192s GC time
Loading theory "Draft.Print" (required by "Draft.Ex_InterTemplates" via "Draft.Ex_Inter")
deriving "show" instance for type "Float.float"
consts
  showsp_float10 :: "nat => float10 => char list => char list"
deriving "show" instance for type "Print.float10"
deriving "show" instance for type "Real.real"
Found termination order: "{}"
### theory "Draft.Print"
### 1.217s elapsed time, 1.303s cpu time, 0.121s GC time
Loading theory "Draft.Ex_Inter" (required by "Draft.Ex_InterTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val ri1 = fn:
   unit ->
     (Isabelle10575794.Generated_Code.real *
      (Isabelle10575794.Generated_Code.real *
       (Isabelle10575794.Generated_Code.real *
        (Isabelle10575794.Generated_Code.real *
         (Isabelle10575794.Generated_Code.real *
          (Isabelle10575794.Generated_Code.real *
           (Isabelle10575794.Generated_Code.real *
            (Isabelle10575794.Generated_Code.real *
             (Isabelle10575794.Generated_Code.real *
              Isabelle10575794.Generated_Code.real)))))))))
     *
     (Isabelle10575794.Generated_Code.real *
      (Isabelle10575794.Generated_Code.real *
       (Isabelle10575794.Generated_Code.real *
        (Isabelle10575794.Generated_Code.real *
         (Isabelle10575794.Generated_Code.real *
          (Isabelle10575794.Generated_Code.real *
           (Isabelle10575794.Generated_Code.real *
            (Isabelle10575794.Generated_Code.real *
             (Isabelle10575794.Generated_Code.real *
              Isabelle10575794.Generated_Code.real))))))))
     )
     Isabelle10575794.Generated_Code.pdevs
val ri2 = fn:
   unit ->
     (Isabelle10575794.Generated_Code.real *
      (Isabelle10575794.Generated_Code.real *
       (Isabelle10575794.Generated_Code.real *
        (Isabelle10575794.Generated_Code.real *
         (Isabelle10575794.Generated_Code.real *
          (Isabelle10575794.Generated_Code.real *
           (Isabelle10575794.Generated_Code.real *
            (Isabelle10575794.Generated_Code.real *
             (Isabelle10575794.Generated_Code.real *
              Isabelle10575794.Generated_Code.real)))))))))
     *
     (Isabelle10575794.Generated_Code.real *
      (Isabelle10575794.Generated_Code.real *
       (Isabelle10575794.Generated_Code.real *
        (Isabelle10575794.Generated_Code.real *
         (Isabelle10575794.Generated_Code.real *
          (Isabelle10575794.Generated_Code.real *
           (Isabelle10575794.Generated_Code.real *
            (Isabelle10575794.Generated_Code.real *
             (Isabelle10575794.Generated_Code.real *
              Isabelle10575794.Generated_Code.real))))))))
     )
     Isabelle10575794.Generated_Code.pdevs
val ri3 = fn:
   unit ->
     (Isabelle10575794.Generated_Code.real *
      (Isabelle10575794.Generated_Code.real *
       (Isabelle10575794.Generated_Code.real *
        (Isabelle10575794.Generated_Code.real *
         (Isabelle10575794.Generated_Code.real *
          (Isabelle10575794.Generated_Code.real *
           (Isabelle10575794.Generated_Code.real *
            (Isabelle10575794.Generated_Code.real *
             (Isabelle10575794.Generated_Code.real * ...)))))))))
     *
     (Isabelle10575794.Generated_Code.real *
      (Isabelle10575794.Generated_Code.real *
       (Isabelle10575794.Generated_Code.real *
        (Isabelle10575794.Generated_Code.real *
         (Isabelle10575794.Generated_Code.real *
          (Isabelle10575794.Generated_Code.real *
           (Isabelle10575794.Generated_Code.real *
            (Isabelle10575794.Generated_Code.real *
             (Isabelle10575794.Generated_Code.real * ...))))))))
     )
     Isabelle10575794.Generated_Code.pdevs
val iter = fn: (unit -> 'a) -> int -> 'a
val it =
   ((Ratreal
      (Frct (Int_of_integer 3675172506975, Int_of_integer 35184372088832)),
     (Ratreal
       (Frct (Int_of_integer 6675295890371, Int_of_integer 70368744177664)),
      (Ratreal
        (Frct (Int_of_integer 425436828397, Int_of_integer 4398046511104)),
       (Ratreal
         (
            Frct
             (Int_of_integer 1733042442549, Int_of_integer 17592186044416)
            ),
        (Ratreal
          (
             Frct
              (Int_of_integer 935559424677, Int_of_integer 8796093022208)
             ),
         (Ratreal
           (
              Frct
               (Int_of_integer 3189948467849, Int_of_integer 35184372088832)
              ),
          (Ratreal
            (
               Frct
                (Int_of_integer 6111640025081,
                 Int_of_integer 70368744177664)
               ),
           (Ratreal
             (
                Frct
                 (Int_of_integer 1765907648565,
                  Int_of_integer 17592186044416)
                ),
            (Ratreal
              (
                 Frct
                  (Int_of_integer 4287226986379,
                   Int_of_integer 35184372088832)
                 ),
             Ratreal
              (
                 Frct
                  (Int_of_integer 1661599626391,
                   Int_of_integer 17592186044416)
                 )))))))))),
    Pdevs
     (
        Abs_slist
         [(Nat 9,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    Ratreal
                     (
                        Frct
                         (Int_of_integer 14126463083680059,
                          Int_of_integer 35184372088832)
                        ))))))))))),
          (Nat 8,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal
                     (
                        Frct
                         (Int_of_integer 6359770429741721,
                          Int_of_integer 17592186044416)
                        ),
                    Ratreal
                     (Frct (Int_of_integer 0, Int_of_integer 1)))))))))))),
          (Nat 7,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal
                    (
                       Frct
                        (Int_of_integer 5486648307914813,
                         Int_of_integer 17592186044416)
                       ),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    Ratreal
                     (Frct (Int_of_integer 0, Int_of_integer 1)))))))))))),
          (Nat 6,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal
                   (
                      Frct
                       (Int_of_integer 28158362808887967,
                        Int_of_integer 70368744177664)
                      ),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    Ratreal
                     (Frct (Int_of_integer 0, Int_of_integer 1)))))))))))),
          (Nat 5,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal
                  (
                     Frct
                      (Int_of_integer 5089781140020457,
                       Int_of_integer 17592186044416)
                     ),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (..., ...)),
                    Ratreal (Frct (..., ...)))))))))))),
          (Nat 4,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal
                 (
                    Frct
                     (Int_of_integer 11285561618366089,
                      Int_of_integer 35184372088832)
                    ),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (..., ...)),
                   (Ratreal (Frct (..., ...)),
                    Ratreal (Frct (..., ...)))))))))))),
          (Nat 3,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal
                (
                   Frct
                    (Int_of_integer 2809559666041635,
                     Int_of_integer 8796093022208)
                   ),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (..., ...)),
                  (Ratreal (Frct (..., ...)),
                   (Ratreal ..., Ratreal ...)))))))))),
          (Nat 2,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal
               (
                  Frct
                   (Int_of_integer 694047938901645,
                    Int_of_integer 2199023255552)
                  ),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (..., ...)),
                 (Ratreal (Frct (..., ...)),
                  (Ratreal ..., (..., ...)))))))))),
          (Nat 1,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal
              (
                 Frct
                  (Int_of_integer 20918708496451027,
                   Int_of_integer 70368744177664)
                 ),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (..., ...)),
                (Ratreal (Frct (..., ...)),
                 (Ratreal ..., (..., (..., ...)))))))))),
          (Nat 0,
           (Ratreal
             (
                Frct
                 (Int_of_integer 13854085216035039,
                  Int_of_integer 35184372088832)
                ),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (..., ...)),
               (Ratreal (Frct (..., ...)),
                (Ratreal ..., (..., (..., (...))))))))))]
        )):
   (?.Generated_Code.real *
    (?.Generated_Code.real *
     (?.Generated_Code.real *
      (?.Generated_Code.real *
       (?.Generated_Code.real *
        (?.Generated_Code.real *
         (?.Generated_Code.real *
          (?.Generated_Code.real *
           (?.Generated_Code.real * ?.Generated_Code.real)))))))))
   *
   (?.Generated_Code.real *
    (?.Generated_Code.real *
     (?.Generated_Code.real *
      (?.Generated_Code.real *
       (?.Generated_Code.real *
        (?.Generated_Code.real *
         (?.Generated_Code.real *
          (?.Generated_Code.real *
           (?.Generated_Code.real * ?.Generated_Code.real))))))))
   )
   Generated_Code.pdevs
val it =
   ((Ratreal
      (Frct (Int_of_integer 188218823585, Int_of_integer 4398046511104)),
     (Ratreal
       (Frct (Int_of_integer 996097353883, Int_of_integer 17592186044416)),
      (Ratreal
        (Frct (Int_of_integer 948365824497, Int_of_integer 17592186044416)),
       (Ratreal
         (
            Frct
             (Int_of_integer 2201721443595, Int_of_integer 35184372088832)
            ),
        (Ratreal
          (
             Frct
              (Int_of_integer 2443026516719, Int_of_integer 35184372088832)
             ),
         (Ratreal
           (
              Frct
               (Int_of_integer 214459600837, Int_of_integer 4398046511104)
              ),
          (Ratreal
            (
               Frct
                (Int_of_integer 29911901005, Int_of_integer 549755813888)
               ),
           (Ratreal
             (
                Frct
                 (Int_of_integer 501043273417, Int_of_integer 8796093022208)
                ),
            (Ratreal
              (
                 Frct
                  (Int_of_integer 852027638289,
                   Int_of_integer 17592186044416)
                 ),
             Ratreal
              (
                 Frct
                  (Int_of_integer 2019138393217,
                   Int_of_integer 35184372088832)
                 )))))))))),
    Pdevs
     (
        Abs_slist
         [(Nat 9,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    Ratreal
                     (
                        Frct
                         (Int_of_integer 21435438858502871,
                          Int_of_integer 35184372088832)
                        ))))))))))),
          (Nat 8,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal
                     (
                        Frct
                         (Int_of_integer 12249497583084103,
                          Int_of_integer 17592186044416)
                        ),
                    Ratreal
                     (Frct (Int_of_integer 0, Int_of_integer 1)))))))))))),
          (Nat 7,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal
                    (
                       Frct
                        (Int_of_integer 13213234849176667,
                         Int_of_integer 17592186044416)
                       ),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    Ratreal
                     (Frct (Int_of_integer 0, Int_of_integer 1)))))))))))),
          (Nat 6,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal
                   (
                      Frct
                       (Int_of_integer 3019856669361313,
                        Int_of_integer 4398046511104)
                      ),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    Ratreal
                     (Frct (Int_of_integer 0, Int_of_integer 1)))))))))))),
          (Nat 5,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal
                  (
                     Frct
                      (Int_of_integer 1647687426801773,
                       Int_of_integer 2199023255552)
                     ),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (..., ...)),
                    Ratreal (Frct (..., ...)))))))))))),
          (Nat 4,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal
                 (
                    Frct
                     (Int_of_integer 22472969804975691,
                      Int_of_integer 35184372088832)
                    ),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (..., ...)),
                   (Ratreal (Frct (..., ...)),
                    Ratreal (Frct (..., ...)))))))))))),
          (Nat 3,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal
                (
                   Frct
                    (Int_of_integer 21829032009041843,
                     Int_of_integer 35184372088832)
                   ),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (..., ...)),
                  (Ratreal (Frct (..., ...)),
                   (Ratreal ..., Ratreal ...)))))))))),
          (Nat 2,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal
               (
                  Frct
                   (Int_of_integer 5875149991903409,
                    Int_of_integer 8796093022208)
                  ),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (..., ...)),
                 (Ratreal (Frct (..., ...)),
                  (Ratreal ..., (..., ...)))))))))),
          (Nat 1,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal
              (
                 Frct
                  (Int_of_integer 11977661173756259,
                   Int_of_integer 17592186044416)
                 ),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (..., ...)),
                (Ratreal (Frct (..., ...)),
                 (Ratreal ..., (..., (..., ...)))))))))),
          (Nat 0,
           (Ratreal
             (
                Frct
                 (Int_of_integer 6976155025277863,
                  Int_of_integer 8796093022208)
                ),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (..., ...)),
               (Ratreal (Frct (..., ...)),
                (Ratreal ..., (..., (..., (...))))))))))]
        )):
   (?.Generated_Code.real *
    (?.Generated_Code.real *
     (?.Generated_Code.real *
      (?.Generated_Code.real *
       (?.Generated_Code.real *
        (?.Generated_Code.real *
         (?.Generated_Code.real *
          (?.Generated_Code.real *
           (?.Generated_Code.real * ?.Generated_Code.real)))))))))
   *
   (?.Generated_Code.real *
    (?.Generated_Code.real *
     (?.Generated_Code.real *
      (?.Generated_Code.real *
       (?.Generated_Code.real *
        (?.Generated_Code.real *
         (?.Generated_Code.real *
          (?.Generated_Code.real *
           (?.Generated_Code.real * ?.Generated_Code.real))))))))
   )
   Generated_Code.pdevs
val it =
   ((Ratreal
      (Frct (Int_of_integer 1213522450997, Int_of_integer 35184372088832)),
     (Ratreal
       (Frct (Int_of_integer 2260641433515, Int_of_integer 70368744177664)),
      (Ratreal
        (Frct (Int_of_integer 206208774147, Int_of_integer 4398046511104)),
       (Ratreal
         (
            Frct
             (Int_of_integer 1644732334125, Int_of_integer 35184372088832)
            ),
        (Ratreal
          (
             Frct
              (Int_of_integer 3507881085247, Int_of_integer 70368744177664)
             ),
         (Ratreal
           (
              Frct
               (Int_of_integer 3432621667203, Int_of_integer 70368744177664)
              ),
          (Ratreal
            (
               Frct
                (Int_of_integer 952001048627, Int_of_integer 35184372088832)
               ),
           (Ratreal
             (
                Frct
                 (Int_of_integer 2448939438483,
                  Int_of_integer 70368744177664)
                ),
            (Ratreal
              (
                 Frct
                  (Int_of_integer 749046360259,
                   Int_of_integer 17592186044416)
                 ),
             (Ratreal
               (
                  Frct
                   (Int_of_integer 1613442646069,
                    Int_of_integer 35184372088832)
                  ),
              (Ratreal
                (
                   Frct
                    (Int_of_integer 3341316496455,
                     Int_of_integer 70368744177664)
                   ),
               (Ratreal
                 (
                    Frct
                     (Int_of_integer 1421309288341,
                      Int_of_integer 35184372088832)
                    ),
                (Ratreal
                  (
                     Frct
                      (Int_of_integer 3342602395377,
                       Int_of_integer 70368744177664)
                     ),
                 (Ratreal
                   (
                      Frct
                       (Int_of_integer 417664562057,
                        Int_of_integer 8796093022208)
                      ),
                  (Ratreal
                    (
                       Frct
                        (Int_of_integer 2969022505117,
                         Int_of_integer 70368744177664)
                       ),
                   (Ratreal (Frct (..., ...)),
                    (Ratreal (Frct (..., ...)),
                     (Ratreal ..., (..., ...))))))))))))))))))),
    Pdevs
     (
        Abs_slist
         [(Nat 19,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                     (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                      (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                       (Ratreal (Frct (..., ...)),
                        (Ratreal (Frct (..., ...)),
                         (Ratreal ..., (..., (..., (...))))))))))))))))))),
          (Nat 18,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                     (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                      (Ratreal (Frct (..., ...)),
                       (Ratreal (Frct (..., ...)),
                        (Ratreal ..., (..., (..., (...)))))))))))))))))),
          (Nat 17,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                     (Ratreal (Frct (..., ...)),
                      (Ratreal (Frct (..., ...)),
                       (Ratreal ..., (..., (..., (...))))))))))))))))),
          (Nat 16,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                    (Ratreal (Frct (..., ...)),
                     (Ratreal (Frct (..., ...)),
                      (Ratreal ..., (..., (..., (...)))))))))))))))),
          (Nat 15,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                   (Ratreal (Frct (..., ...)),
                    (Ratreal (Frct (..., ...)),
                     (Ratreal ..., (..., (..., (...))))))))))))))),
          (Nat 14,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                  (Ratreal (Frct (..., ...)),
                   (Ratreal (Frct (..., ...)),
                    (Ratreal ..., (..., (..., (...)))))))))))))),
          (Nat 13,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                 (Ratreal (Frct (..., ...)),
                  (Ratreal (Frct (..., ...)),
                   (Ratreal ..., (..., (..., (...))))))))))))),
          (Nat 12,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
                (Ratreal (Frct (..., ...)),
                 (Ratreal (Frct (..., ...)),
                  (Ratreal ..., (..., (..., (...)))))))))))),
          (Nat 11,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
               (Ratreal (Frct (..., ...)),
                (Ratreal (Frct (..., ...)),
                 (Ratreal ..., (..., (..., (...))))))))))),
          (Nat 10,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
              (Ratreal (Frct (..., ...)),
               (Ratreal (Frct (..., ...)),
                (Ratreal ..., (..., (..., (...)))))))))),
          (Nat 9,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
             (Ratreal (Frct (..., ...)),
              (Ratreal (Frct (..., ...)),
               (Ratreal ..., (..., (..., (...))))))))),
          (Nat 8,
           (Ratreal (Frct (Int_of_integer 0, Int_of_integer 1)),
            (Ratreal (Frct (..., ...)),
             (Ratreal (Frct (..., ...)),
              (Ratreal ..., (..., (..., (...)))))))),
          (Nat 7,
           (Ratreal (Frct (..., ...)),
            (Ratreal (Frct (..., ...)),
             (Ratreal ..., (..., (..., (...))))))),
          (Nat 6,
           (Ratreal (Frct (..., ...)), (Ratreal ..., (..., (..., (...)))))),
          (Nat 5, (Ratreal ..., (..., (..., (...))))),
          (Nat 4, (..., (..., (...)))), (..., (..., (...))), ...]
        )):
   (?.Generated_Code.real *
    (?.Generated_Code.real *
     (?.Generated_Code.real *
      (?.Generated_Code.real *
       (?.Generated_Code.real *
        (?.Generated_Code.real *
         (?.Generated_Code.real *
          (?.Generated_Code.real *
           (?.Generated_Code.real * (?.Generated_Code.real * ...))))))))))
   *
   (?.Generated_Code.real *
    (?.Generated_Code.real *
     (?.Generated_Code.real *
      (?.Generated_Code.real *
       (?.Generated_Code.real *
        (?.Generated_Code.real *
         (?.Generated_Code.real *
          (?.Generated_Code.real * (?.Generated_Code.real * ...))))))))
   )
   Generated_Code.pdevs
### theory "Draft.Ex_Inter"
### 16.008s elapsed time, 18.234s cpu time, 3.162s GC time
Loading theory "Draft.Ex_InterTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Ex_InterTemplates"
### 1.997s elapsed time, 3.826s cpu time, 2.226s GC time
val it = (): unit
