   [("Optimize_Float.compute_bitlen",
     "bitlen ?a = (if 0 < ?a then log2 ?a + 1 else 0)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)),
         template_hole 3))),
    ("Optimize_Float.compute_floor_fl",
     "floor_fl (Float ?m ?e) =
      (if 0 <= ?e then Float ?m ?e
       else Float (?m div Optimize_Integer.power_int 2 (- ?e)) 0)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0)),
           template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_app (template_hole 0, template_var 0)))),
           template_hole 6)))),
    ("Optimize_Float.compute_int_floor_fl",
     "int_floor_fl (Float ?m ?e) =
      (if 0 <= ?e then ?m * Optimize_Integer.power_int 2 ?e
       else ?m div Optimize_Integer.power_int 2 (- ?e))",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 0)),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 0, template_var 0)))))),
    ("Optimize_Float.compute_real_of_float",
     "real_of_float (Float ?m ?e) =
      (if 0 <= ?e then real_of_int ?m * 2 ^ nat ?e
       else real_of_int ?m /
            real_of_int (Optimize_Integer.power_int 2 (- ?e)))",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app (template_hole 14, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_hole 11),
               template_var 0)),
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 1)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 1)),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 6, template_hole 5))),
               template_app (template_hole 0, template_var 0))))))),
    ("Optimize_Float.compute_float_down",
     "float_down ?p (Float ?m ?e) =
      (if ?p + ?e < 0
       then Float (?m div Optimize_Integer.power_int 2 (- (?p + ?e))) (- ?p)
       else Float ?m ?e)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 0)),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_var 0))))),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)))),
    ("Optimize_Float.compute_float_truncate_down",
     "float_round_down ?prec (Float ?m ?e) =
      (let d = bitlen \<bar>?m\<bar> - int ?prec - 1
       in if 0 < d
          then let P = Optimize_Integer.power_int 2 d; n = ?m div P
               in Float n (?e + d)
          else Float ?m ?e)",
     template_equation
      (template_app
        (template_app (template_hole 16, template_var 2),
         template_app
          (template_app (template_hole 15, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 11, template_var 1))),
                 template_app (template_hole 10, template_var 2))),
             template_hole 9)),
         t_empty))),
    ("Optimize_Float.compute_lapprox_posrat",
     "lapprox_posrat ?prec ?x ?y =
      (let l = rat_precision ?prec (int ?x) (int ?y);
           d = if 0 <= l
               then int ?x * Optimize_Integer.power_int 2 l div int ?y
               else int ?x div Optimize_Integer.power_int 2 (- l) div int ?y
       in normfloat (Float d (- l)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 15, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_app (template_hole 13, template_var 2),
               template_app (template_hole 12, template_var 1)),
             template_app (template_hole 12, template_var 0))),
         t_empty))),
    ("Optimize_Float.compute_float_plus",
     "Float ?m1.0 ?e1.0 + Float ?m2.0 ?e2.0 =
      (if ?m1.0 = 0 then Float ?m2.0 ?e2.0
       else if ?m2.0 = 0 then Float ?m1.0 ?e1.0
            else if ?e1.0 <= ?e2.0
                 then Float
                       (?m1.0 +
                        ?m2.0 *
                        Optimize_Integer.power_int 2 (?e2.0 - ?e1.0))
                       ?e1.0
                 else Float
                       (?m2.0 +
                        ?m1.0 *
                        Optimize_Integer.power_int 2 (?e1.0 - ?e2.0))
                       ?e2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_hole 8)),
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_hole 8)),
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 7, template_var 2),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 6, template_var 3),
                         template_app
                          (template_app (template_hole 5, template_var 1),
                           template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2, template_hole 1))),
                             template_app
                              (template_app
                                (template_hole 0, template_var 0),
                               template_var 2))))),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 2, template_hole 1))),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_var 0))))),
                   template_var 0))))
           ))),
    ("Optimize_Float.compute_rapprox_posrat",
     "rapprox_posrat ?prec ?x ?y =
      (let l = rat_precision ?prec (int ?x) (int ?y);
           (r, s) =
             if 0 <= l
             then (int ?x * Optimize_Integer.power_int 2 l, int ?y)
             else (int ?x, int ?y * Optimize_Integer.power_int 2 (- l));
           d = r div s; m = r mod s
       in normfloat (Float (d + (if m = 0 | ?y = 0 then 0 else 1)) (- l)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 26, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 25,
           template_app
            (template_app
              (template_app (template_hole 24, template_var 2),
               template_app (template_hole 23, template_var 1)),
             template_app (template_hole 23, template_var 0))),
         t_empty)))]
