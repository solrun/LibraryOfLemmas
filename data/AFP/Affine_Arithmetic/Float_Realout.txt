Loading theory "Draft.Optimize_Integer" (required by "Draft.Float_RealTemplates" via "Draft.Float_Real" via "Draft.Optimize_Float")
Loading theory "HOL-Library.Stream" (required by "Draft.Float_RealTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Float_RealTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Float_RealTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.133s elapsed time, 0.528s cpu time, 0.068s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Float_RealTemplates" via "Draft.ExtrEqs")
### theory "Draft.Optimize_Integer"
### 0.312s elapsed time, 1.245s cpu time, 0.068s GC time
Loading theory "Draft.Optimize_Float" (required by "Draft.Float_RealTemplates" via "Draft.Float_Real")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### Code generator: dropping subsumed code equation
### bitlen ?x == if 0 < ?x then bitlen (?x div 2) + 1 else 0
### Code generator: dropping subsumed code equation
### Float ?m1.0 ?e1.0 + Float ?m2.0 ?e2.0 ==
### if ?m1.0 = 0 then Float ?m2.0 ?e2.0
### else if ?m2.0 = 0 then Float ?m1.0 ?e1.0
###      else if ?e1.0 <= ?e2.0
###           then Float (?m1.0 + ?m2.0 * 2 ^ nat (?e2.0 - ?e1.0)) ?e1.0
###           else Float (?m2.0 + ?m1.0 * 2 ^ nat (?e1.0 - ?e2.0)) ?e2.0
### Code generator: dropping subsumed code equation
### real_of_float (Float ?m ?e) ==
### if 0 <= ?e then real_of_int ?m * 2 ^ nat ?e
### else real_of_int ?m / 2 ^ nat (- ?e)
### Code generator: dropping subsumed code equation
### float_down ?p (Float ?m ?e) ==
### if ?p + ?e < 0 then Float (div_twopow ?m (nat (- (?p + ?e)))) (- ?p)
### else Float ?m ?e
### Code generator: dropping subsumed code equation
### lapprox_posrat ?prec ?x ?y ==
### let l = rat_precision ?prec (int ?x) (int ?y);
###     x = if 0 <= l then ?x * 2 ^ nat l div ?y
###         else ?x div 2 ^ nat (- l) div ?y
### in normfloat (Float (int x) (- l))
consts
  snth :: "'a stream => nat => 'a"
### Code generator: dropping subsumed code equation
### rapprox_posrat ?prec ?x ?y ==
### let l = rat_precision ?prec (int ?x) (int ?y);
###     (r, s) =
###       if 0 <= l then (int ?x * 2 ^ nat l, int ?y)
###       else (int ?x, int ?y * 2 ^ nat (- l));
###     d = r div s; m = r mod s
### in normfloat (Float (d + (if m = 0 | ?y = 0 then 0 else 1)) (- l))
Found termination order: "size <*mlex*> {}"
### Code generator: dropping subsumed code equation
### float_round_down ?prec (Float ?m ?e) ==
### let d = bitlen \<bar>?m\<bar> - int ?prec - 1
### in if 0 < d then Float (div_twopow ?m (nat d)) (?e + d) else Float ?m ?e
### Code generator: dropping subsumed code equation
### int_floor_fl (Float ?m ?e) ==
### if 0 <= ?e then ?m * 2 ^ nat ?e else ?m div 2 ^ nat (- ?e)
### Code generator: dropping subsumed code equation
### floor_fl (Float ?m ?e) ==
### if 0 <= ?e then Float ?m ?e else Float (?m div 2 ^ nat (- ?e)) 0
### theory "Draft.Optimize_Float"
### 0.392s elapsed time, 1.501s cpu time, 0.166s GC time
Loading theory "Draft.Float_Real" (required by "Draft.Float_RealTemplates")
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Code generator: dropping subsumed code equation
### 0 == Ratreal 0
### Code generator: dropping subsumed code equation
### 1 == Ratreal 1
### Constructor as head in equation, in theorem:
### real_of_float (Float ?m ?e) ==
### if 0 <= ?e then real_of_int ?m * 2 ^ nat ?e
### else real_of_int ?m / real_of_int (Optimize_Integer.power_int 2 (- ?e))
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.Float_Real"
### 0.126s elapsed time, 0.479s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 0.941s elapsed time, 3.425s cpu time, 0.288s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.159s elapsed time, 4.155s cpu time, 0.452s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.085s elapsed time, 5.442s cpu time, 0.960s GC time
Loading theory "Draft.Templates" (required by "Draft.Float_RealTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.080s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Float_RealTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.546s elapsed time, 0.603s cpu time, 0.074s GC time
Loading theory "Draft.Float_RealTemplates"
val templateLemmas =
   [("Float_Real.real_floor_code'",
     "\<lfloor>real_of_float ?x\<rfloor> = int_floor_fl ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Float_Real.of_rat_numeral_eq",
     "real_of_float (numeral ?w) = Ratreal (numeral ?w)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Float_Real.real_abs_code'",
     "\<bar>real_of_float ?x\<bar> = real_of_float \<bar>?x\<bar>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Float_Real.real_uminus_code'",
     "- real_of_float ?x = real_of_float (- ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Float_Real.real_equal_code",
     "equal_class.equal (real_of_float ?x) (real_of_float ?y) =
      equal_class.equal ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Float_Real.real_less_code'",
     "(real_of_float ?x < real_of_float ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Float_Real.real_less_eq_code'",
     "(real_of_float ?x <= real_of_float ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Float_Real.compute_round_down",
     "round_down ?prec (real_of_float ?f) =
      real_of_float (float_down ?prec ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.compute_round_up",
     "round_up ?prec (real_of_float ?f) =
      real_of_float (float_up ?prec ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.compute_truncate_down",
     "truncate_down ?prec (real_of_float ?f) =
      real_of_float (float_round_down ?prec ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.compute_truncate_up",
     "truncate_up ?prec (real_of_float ?f) =
      real_of_float (float_round_up ?prec ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.real_minus_code'",
     "real_of_float ?x - real_of_float ?y = real_of_float (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.real_plus_code'",
     "real_of_float ?x + real_of_float ?y = real_of_float (?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.real_times_code'",
     "real_of_float ?x * real_of_float ?y = real_of_float (?x * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Float_Real.real_inverse_code'",
     "inverse (FloatR ?a ?b) =
      (if FloatR ?a ?b = 2 then FloatR 1 (- 1)
       else if ?a = 1 then FloatR 1 (- ?b)
            else Code.abort STR ''inverse not of 2''
                  (%_. inverse (FloatR ?a ?b)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_var 1),
                         template_var 0))),
                   template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_hole 8)))),
               template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 7),
                   template_app (template_hole 6, template_hole 7)))),
             template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 7)),
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_hole 7),
                     template_app (template_hole 6, template_var 0)))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 2),
                           template_hole 1),
                         template_hole 2),
                       template_hole 2),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 1),
                           template_hole 2),
                         template_hole 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 1),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 2),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 2), template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 2),
 template_hole 1),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 2),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 2),
   template_hole 1),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 2),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 2), template_hole 1),
     template_hole 2),
   template_hole 1),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 2),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 1), template_hole 1),
       template_hole 1),
     template_hole 1),
   template_hole 1),
 template_hole 2),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 1),
           template_hole 2),
         template_hole 2),
       template_hole 2),
     template_hole 1),
   template_hole 2),
 template_hole 2),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 2),
           template_hole 2),
         template_hole 2),
       template_hole 1),
     template_hole 2),
   template_hole 2),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 1),
               template_hole 1),
             template_hole 2),
           template_hole 1),
         template_hole 2),
       template_hole 2),
     template_hole 2),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 1),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2),
                 template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 2),
         template_hole 2),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 1),
                     template_hole 2),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_hole 2),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_hole 1),
                     template_hole 1),
                   template_hole 1),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 1),
                         template_hole 2),
                       template_hole 1),
                     template_hole 1),
                   template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 0))))))))))))))))),
                 t_empty)))
           ))),
    ("Float_Real.real_divide_code'",
     "FloatR ?a ?b / FloatR ?c ?d =
      (if FloatR ?c ?d = 2
       then if ?a mod 2 = 0 then FloatR (?a div 2) ?b
            else FloatR ?a (?b - 1)
       else if ?c = 1 then FloatR ?a (?b - ?d)
            else Code.abort STR ''division not by 2''
                  (%_. FloatR ?a ?b / FloatR ?c ?d))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_var 2))),
              template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 16, template_var 1),
                         template_var 0))),
                   template_app
                    (template_hole 14,
                     template_app (template_hole 13, template_hole 12)))),
               template_app
                (template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app (template_hole 10, template_var 3),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 13, template_hole 12)))),
                       template_hole 8)),
                   template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 7, template_var 3),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 13, template_hole 12)))),
                       template_var 2))),
                 template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 16, template_var 3),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_hole 5))))),
             template_app
              (template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app (template_hole 11, template_var 1),
                     template_hole 5)),
                 template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 16, template_var 3),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 2),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_hole 1),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 1), template_hole 2),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 1),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 1),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 1), template_hole 2),
   template_hole 2),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 1),
     template_hole 1),
   template_hole 1),
 template_hole 2),
                                     template_hole 1),
                                   template_hole 1),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 1),
       template_hole 1),
     template_hole 1),
   template_hole 2),
 template_hole 1),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 2),
         template_hole 2),
       template_hole 2),
     template_hole 2),
   template_hole 1),
 template_hole 2),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_hole 1),
         template_hole 1),
       template_hole 2),
     template_hole 1),
   template_hole 1),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 1),
     template_hole 1),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2),
                 template_hole 2),
               template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 2),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 1),
                   template_hole 2),
                 template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_hole 2),
                     template_hole 2),
                   template_hole 1),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 2),
                       template_hole 2),
                     template_hole 2),
                   template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 1),
                         template_hole 2),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_hole 2),
               template_hole 0)))))))))))))))))),
                 t_empty)))
           )))]:
   (string * thm * template) list
### theory "Draft.Float_RealTemplates"
### 0.324s elapsed time, 0.424s cpu time, 0.000s GC time
val it = (): unit
