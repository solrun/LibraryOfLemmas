   [("Counterclockwise_2D_Arbitrary.ccw_system12_axioms",
     "ccw_system12 ccw ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Counterclockwise_2D_Arbitrary.ccw_system123_axioms",
     "ccw_system123 ccw ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Counterclockwise_2D_Arbitrary.ccw_system4_axioms",
     "ccw_system4 ccw ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Counterclockwise_2D_Arbitrary.lex_refl",
     "Counterclockwise_2D_Arbitrary.lex ?p ?p",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Counterclockwise_2D_Arbitrary.ccw_self", "ccw ?a ?a ?b",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1),
           template_var 0)
         )),
    ("Counterclockwise_2D_Arbitrary.ccw_sefl'", "ccw ?a ?b ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Counterclockwise_2D_Arbitrary.ccw_self", "ccw ?b ?a ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Counterclockwise_2D_Arbitrary.lexs_irrefl", "~ lexs ?p ?p",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)
             )
         )),
    ("Counterclockwise_2D_Arbitrary.lex_uminus0",
     "Counterclockwise_2D_Arbitrary.lex (- ?a) 0 =
      Counterclockwise_2D_Arbitrary.lex 0 ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_hole 0), template_var 0))),
    ("Counterclockwise_2D_Arbitrary.not_lex",
     "(~ Counterclockwise_2D_Arbitrary.lex ?x ?y) = lexs ?y ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Counterclockwise_2D_Arbitrary.not_lexs",
     "(~ lexs ?x ?y) = Counterclockwise_2D_Arbitrary.lex ?y ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Counterclockwise_2D_Arbitrary.lexs_imp_lex",
     "lexs ?x ?y ==> Counterclockwise_2D_Arbitrary.lex ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.eq_lex_refl",
     "?x = ?y ==> Counterclockwise_2D_Arbitrary.lex ?x ?y",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lexs_imp_neq",
     "lexs ?a ?b ==> ?a ~= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Counterclockwise_2D_Arbitrary.cyclic",
     "ccw ?p ?q ?r ==> ccw ?q ?r ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw'_imp_ccw",
     "ccw' ?a ?b ?c ==> ccw ?a ?b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_diff2",
     "Counterclockwise_2D_Arbitrary.lex ?c (?a - ?b) =
      Counterclockwise_2D_Arbitrary.lex (?c + ?b) ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Counterclockwise_2D_Arbitrary.lex_diff1",
     "Counterclockwise_2D_Arbitrary.lex (?a - ?b) ?c =
      Counterclockwise_2D_Arbitrary.lex ?a (?c + ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Counterclockwise_2D_Arbitrary.nlex_ccw_left",
     "Counterclockwise_2D_Arbitrary.lex ?x 0 ==> ccw 0 (0, 1) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 4),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_sym_eq_iff",
     "Counterclockwise_2D_Arbitrary.lex ?a ?b ==>
      Counterclockwise_2D_Arbitrary.lex ?b ?a = (?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1)
              )],
         template_equation (template_var 1, template_var 0)))),
    ("Counterclockwise_2D_Arbitrary.not_lex_eq",
     "(~ Counterclockwise_2D_Arbitrary.lex ?a ?b) =
      (Counterclockwise_2D_Arbitrary.lex ?b ?a & ?b ~= ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_translate",
     "ccw ?p (?p + ?q) (?p + ?r) = ccw 0 ?q ?r",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 0), template_var 1),
         template_var 0))),
    ("Counterclockwise_2D_Arbitrary.sum_list_eq0I",
     "ALL x:set ?xs. x = (0::?'a) ==> sum_list ?xs = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Counterclockwise_2D_Arbitrary.lex_sym_eqI",
     "[| Counterclockwise_2D_Arbitrary.lex ?a ?b;
         Counterclockwise_2D_Arbitrary.lex ?b ?a |]
      ==> ?a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Counterclockwise_2D_Arbitrary.lex_trans",
     "[| Counterclockwise_2D_Arbitrary.lex ?a ?b;
         Counterclockwise_2D_Arbitrary.lex ?b ?c |]
      ==> Counterclockwise_2D_Arbitrary.lex ?a ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_lexs_trans",
     "[| Counterclockwise_2D_Arbitrary.lex ?x ?y; lexs ?y ?z |]
      ==> lexs ?x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lexs_lex_trans",
     "[| lexs ?x ?y; Counterclockwise_2D_Arbitrary.lex ?y ?z |]
      ==> lexs ?x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lexs_trans",
     "[| lexs ?x ?y; lexs ?y ?z |] ==> lexs ?x ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_translate_origin",
     "NO_MATCH (0::?'a) ?a ==>
      Counterclockwise_2D_Arbitrary.lex ?a ?b =
      Counterclockwise_2D_Arbitrary.lex 0 (?b - ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Counterclockwise_2D_Arbitrary.lex_neq_trans",
     "[| Counterclockwise_2D_Arbitrary.lex ?a ?b; ?a ~= ?b |]
      ==> lexs ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.neq_lex_trans",
     "[| ?a ~= ?b; Counterclockwise_2D_Arbitrary.lex ?a ?b |]
      ==> lexs ?a ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.nlex_add",
     "[| Counterclockwise_2D_Arbitrary.lex ?a 0;
         Counterclockwise_2D_Arbitrary.lex ?b 0 |]
      ==> Counterclockwise_2D_Arbitrary.lex (?a + ?b) 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.sum_list_nlex_eq_zero_iff",
     "list_all (%x. Counterclockwise_2D_Arbitrary.lex x 0) ?xs ==>
      (sum_list ?xs = 0) = list_all ((=) 0) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 0)
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 0), template_hole 3),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 1, template_hole 3)),
               template_var 0)
             )))),
    ("Counterclockwise_2D_Arbitrary.lex_sum_list",
     "(!!x. x : set ?xs ==> Counterclockwise_2D_Arbitrary.lex x 0) ==>
      Counterclockwise_2D_Arbitrary.lex (sum_list ?xs) 0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_hole 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_translate_origin",
     "NO_MATCH (0::?'a) ?p ==> ccw ?p ?q ?r = ccw 0 (?q - ?p) (?r - ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Counterclockwise_2D_Arbitrary.lex_ccw_left",
     "[| Counterclockwise_2D_Arbitrary.lex ?x ?y; 0 < ?r |]
      ==> ccw ?y (?y + (0, ?r)) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_hole 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_sorted_scaleR",
     "[| ccw.sortedP 0 ?xs; 0 < ?r |]
      ==> ccw.sortedP 0 (map ((*\<^sub>R) ?r) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4)),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Counterclockwise_2D_Arbitrary.coll_minus_eq",
     "coll (?x - ?a) (?x - ?b) (?x - ?c) = coll ?a ?b ?c",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Counterclockwise_2D_Arbitrary.ccw_switch23",
     "det3 0 ?P ?Q ~= 0 ==> (~ ccw 0 ?Q ?P) = ccw 0 ?P ?Q",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1),
           template_var 0)))),
    ("Counterclockwise_2D_Arbitrary.lex_scaleR_nonneg",
     "[| Counterclockwise_2D_Arbitrary.lex ?a ?b; 0 <= ?r |]
      ==> Counterclockwise_2D_Arbitrary.lex ?a
           (?a + ?r *\<^sub>R (?b - ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))))
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_scale23",
     "[| ccw 0 ?a ?b; 0 < ?r |]
      ==> ccw 0 (?r *\<^sub>R ?a) (?r *\<^sub>R ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_ncoll_imp_ccw",
     "[| ccw ?a ?b ?c; det3 ?a ?b ?c ~= 0 |] ==> ccw' ?a ?b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.sum_list_eq_0_iff_nonpos",
     "list_all (%x. x <= (0::?'a)) ?xs ==>
      (sum_list ?xs = (0::?'a)) = (ALL n:set ?xs. n = (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 5),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("Counterclockwise_2D_Arbitrary.ccw0_uminus",
     "det3 0 ?a ?b ~= 0 ==> ccw 0 (- ?a) (- ?b) = ccw 0 ?a ?b",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 4),
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 4),
             template_var 1),
           template_var 0)))),
    ("Counterclockwise_2D_Arbitrary.lex_total",
     "Counterclockwise_2D_Arbitrary.lex ?t ?q & ?t ~= ?q |
      Counterclockwise_2D_Arbitrary.lex ?q ?t & ?t ~= ?q | ?t = ?q",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 1)),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Counterclockwise_2D_Arbitrary.lex_scale2_zero",
     "Counterclockwise_2D_Arbitrary.lex 0 (?v *\<^sub>R ?u) =
      (if 0 < ?v then Counterclockwise_2D_Arbitrary.lex 0 ?u
       else if ?v < 0 then Counterclockwise_2D_Arbitrary.lex ?u 0
            else True)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 5)),
           template_hole 0)))),
    ("Counterclockwise_2D_Arbitrary.lex_scale1_zero",
     "Counterclockwise_2D_Arbitrary.lex (?v *\<^sub>R ?u) 0 =
      (if 0 < ?v then Counterclockwise_2D_Arbitrary.lex ?u 0
       else if ?v < 0 then Counterclockwise_2D_Arbitrary.lex 0 ?u
            else True)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 4)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 6, template_hole 4),
               template_var 0)),
           template_hole 0)))),
    ("Counterclockwise_2D_Arbitrary.ccw_uminus3",
     "det3 ?a ?b ?c ~= 0 ==> ccw (- ?a) (- ?b) (- ?c) = ccw ?a ?b ?c",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Counterclockwise_2D_Arbitrary.nlex_sum",
     "[| finite ?X;
         !!x. x : ?X ==> Counterclockwise_2D_Arbitrary.lex (?f x) 0 |]
      ==> Counterclockwise_2D_Arbitrary.lex (sum ?f ?X) 0",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw0_upward",
     "[| 0 < fst ?a; snd ?a = 0; snd ?a < snd ?b |] ==> ccw 0 ?a ?b",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 5),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.sum_list_nlex_eq_zeroI",
     "[| list_all (%x. Counterclockwise_2D_Arbitrary.lex x 0) ?xs;
         sum_list ?xs = 0; ?x : set ?xs |]
      ==> ?x = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_equation (template_var 0, template_hole 4))),
    ("Counterclockwise_2D_Arbitrary.ccw_minus3",
     "det3 ?a ?b ?c ~= 0 ==>
      ccw (?x - ?a) (?x - ?b) (?x - ?c) = ccw ?a ?b ?c",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1)))),
    ("Counterclockwise_2D_Arbitrary.psi_notI",
     "[| distinct3 ?p ?q ?r; psi ?p ?q ?r |] ==> ~ psi ?q ?p ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 0)),
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_var 0)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)
               )
           ))),
    ("Counterclockwise_2D_Arbitrary.psi_scale",
     "psi 0 (?r *\<^sub>R ?a) (?r *\<^sub>R ?b) =
      (if 0 < ?r then psi 0 ?a ?b
       else if ?r < 0 then psi ?b ?a 0 else True)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 1),
               template_hole 5)),
           template_hole 0)))),
    ("Counterclockwise_2D_Arbitrary.psi_scale",
     "psi (?r *\<^sub>R ?a) 0 (?r *\<^sub>R ?b) =
      (if 0 < ?r then psi ?a 0 ?b
       else if ?r < 0 then psi ?b 0 ?a else True)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_hole 4),
         template_app
          (template_app (template_hole 5, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 4),
               template_var 1)),
           template_hole 0)))),
    ("Counterclockwise_2D_Arbitrary.psi_scale",
     "psi (?r *\<^sub>R ?a) (?r *\<^sub>R ?b) 0 =
      (if 0 < ?r then psi ?a ?b 0
       else if ?r < 0 then psi 0 ?b ?a else True)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0),
             template_hole 4)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 4),
                 template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("Counterclockwise_2D_Arbitrary.lex_convex_self2",
     "[| Counterclockwise_2D_Arbitrary.lex ?p ?q; 0 <= ?a; ?a <= 1 |]
      ==> Counterclockwise_2D_Arbitrary.lex ?p
           (?a *\<^sub>R ?p + (1 - ?a) *\<^sub>R ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 4, template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_hole 3),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_convex_self2",
     "[| Counterclockwise_2D_Arbitrary.lex ?p ?q; 0 <= ?a; ?a <= 1 |]
      ==> Counterclockwise_2D_Arbitrary.lex
           (?a *\<^sub>R ?p + (1 - ?a) *\<^sub>R ?q) ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 4, template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_hole 3),
                       template_var 0)),
                   template_var 1))),
             template_var 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_scaleR2",
     "[| det3 0 ?xr ?P ~= 0; 0 < ?e; ccw 0 ?xr ?P |]
      ==> ccw 0 ?xr (?e *\<^sub>R ?P)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 4),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 4),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_scaleR1",
     "[| det3 0 ?xr ?P ~= 0; 0 < ?e; ccw 0 ?xr ?P |]
      ==> ccw 0 (?e *\<^sub>R ?xr) ?P",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 4),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 4),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.abs_add_nlex",
     "[| coll 0 ?a ?b; Counterclockwise_2D_Arbitrary.lex ?a 0;
         Counterclockwise_2D_Arbitrary.lex ?b 0 |]
      ==> \<bar>?a + ?b\<bar> = \<bar>?a\<bar> + \<bar>?b\<bar>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1),
            template_var 0),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Counterclockwise_2D_Arbitrary.ccw_translate3",
     "[| det3 0 ?a ?b ~= 0; ?x < 1; ccw 0 ?a ?b |]
      ==> ccw 0 ?a (?x *\<^sub>R ?a + ?b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 2),
                template_var 1),
              template_hole 5)
            ),
        template_inequation (less_than, template_var 0, template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 6),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 6),
               template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_translate3_minus",
     "[| det3 0 ?a ?b ~= 0; ?x < 1; ccw 0 ?a (?b - ?x *\<^sub>R ?a) |]
      ==> ccw 0 ?a ?b",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 2),
                template_var 1),
              template_hole 5)
            ),
        template_inequation (less_than, template_var 0, template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 6),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 6),
               template_var 2),
             template_var 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_fst_zero_imp",
     "[| fst ?x = 0; Counterclockwise_2D_Arbitrary.lex ?x 0;
         Counterclockwise_2D_Arbitrary.lex ?y 0; det3 0 ?x ?y ~= 0 |]
      ==> ccw' 0 ?y ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 1, template_hole 3),
                  template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 0),
             template_var 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_convex2",
     "[| Counterclockwise_2D_Arbitrary.lex ?p ?q;
         Counterclockwise_2D_Arbitrary.lex ?p ?r; 0 <= ?u; ?u <= 1 |]
      ==> Counterclockwise_2D_Arbitrary.lex ?p
           (?u *\<^sub>R ?q + (1 - ?u) *\<^sub>R ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 4, template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_hole 3),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_convex2'",
     "[| Counterclockwise_2D_Arbitrary.lex ?q ?p;
         Counterclockwise_2D_Arbitrary.lex ?r ?p; 0 <= ?u; ?u <= 1 |]
      ==> Counterclockwise_2D_Arbitrary.lex
           (?u *\<^sub>R ?q + (1 - ?u) *\<^sub>R ?r) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_inequation (less_equals, template_hole 4, template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_hole 3),
                       template_var 0)),
                   template_var 1))),
             template_var 2)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_translate3_aux",
     "[| det3 0 ?a ?b ~= 0; ?x < 1;
         ccw 0 (?a - ?x *\<^sub>R ?a) (?b - ?x *\<^sub>R ?a) |]
      ==> ccw 0 ?a ?b",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 2),
                template_var 1),
              template_hole 5)
            ),
        template_inequation (less_than, template_var 0, template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 6),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 0),
                    template_var 2))),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 6),
               template_var 2),
             template_var 1)
           ))),
    ("Counterclockwise_2D_Arbitrary.abs_sum_list_coll",
     "[| list_all (coll 0 ?x) ?xs; ?x ~= 0;
         list_all (%x. Counterclockwise_2D_Arbitrary.lex x 0) ?xs |]
      ==> \<bar>sum_list ?xs\<bar> = sum_list (map abs ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty), template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0))))),
    ("Counterclockwise_2D_Arbitrary.nondegenerate",
     "[| distinct3 ?p ?q ?r; in3 ?S ?p ?q ?r |]
      ==> ccw ?p ?q ?r | ccw ?p ?r ?q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 0)),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 2))
           ))),
    ("Counterclockwise_2D_Arbitrary.not_ccw_eq",
     "[| distinct3 ?p ?q ?r; in3 ?S ?p ?q ?r |]
      ==> (~ ccw ?p ?q ?r) = ccw ?p ?r ?q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 0)),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 2)))),
    ("Counterclockwise_2D_Arbitrary.ccw_antisym",
     "[| distinct3 ?p ?q ?r; in3 ?S ?p ?q ?r; ccw ?p ?q ?r |]
      ==> ~ ccw ?p ?r ?q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 0)),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 2)
               )
           ))),
    ("Counterclockwise_2D_Arbitrary.psi_convex3",
     "[| psi ?a ?b ?c; psi ?a ?b ?d; 0 <= ?u; 0 <= ?v; ?u + ?v = 1 |]
      ==> psi ?a ?b (?u *\<^sub>R ?c + ?v *\<^sub>R ?d)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_inequation (less_equals, template_hole 5, template_var 1),
        template_inequation (less_equals, template_hole 5, template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Counterclockwise_2D_Arbitrary.psi_convex2",
     "[| psi ?a ?c ?b; psi ?a ?d ?b; 0 <= ?u; 0 <= ?v; ?u + ?v = 1 |]
      ==> psi ?a (?u *\<^sub>R ?c + ?v *\<^sub>R ?d) ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 2),
              template_var 3)
            ),
        template_inequation (less_equals, template_hole 5, template_var 1),
        template_inequation (less_equals, template_hole 5, template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 3)
           ))),
    ("Counterclockwise_2D_Arbitrary.psi_convex1",
     "[| psi ?c ?a ?b; psi ?d ?a ?b; 0 <= ?u; 0 <= ?v; ?u + ?v = 1 |]
      ==> psi (?u *\<^sub>R ?c + ?v *\<^sub>R ?d) ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_hole 5, template_var 1),
        template_inequation (less_equals, template_hole 5, template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 5)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2))),
               template_var 4),
             template_var 3)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw'_subst_psi_disj",
     "[| coll ?t ?r ?s; psi ?t ?r ?s | psi ?t ?s ?r | psi ?s ?r ?t;
         ?s ~= ?t; ccw' ?t ?r ?p |]
      ==> ccw' ?t ?s ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 1),
                    template_var 2)),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 2),
                  template_var 3)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.psi_disjuncts",
     "distinct3 ?p ?q ?r ==>
      psi ?p ?q ?r |
      psi ?p ?r ?q |
      psi ?q ?r ?p | psi ?q ?p ?r | psi ?r ?p ?q | psi ?r ?q ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 0)),
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 2),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 2),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 1),
                       template_var 2))))))
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_sorted_implies_ccw'_sortedP",
     "[| !!y z. [| y : set ?Ps; z : set ?Ps; y ~= z |] ==> det3 0 y z ~= 0;
         ccw.sortedP 0 ?Ps; distinct ?Ps |]
      ==> ccw'.sortedP 0 ?Ps",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_hole 5)),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 0, template_hole 5)),
             template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.coll_convex",
     "[| coll ?a ?b ?c; coll ?a ?b ?d; 0 <= ?u; 0 <= ?v; ?u + ?v = 1 |]
      ==> coll ?a ?b (?u *\<^sub>R ?c + ?v *\<^sub>R ?d)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_var 3),
          template_hole 5),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_var 2),
          template_hole 5),
        template_inequation (less_equals, template_hole 5, template_var 1),
        template_inequation (less_equals, template_hole 5, template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 5),
             template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_hole 5))),
    ("Counterclockwise_2D_Arbitrary.not_coll_ordered_lexI",
     "[| ?l ~= ?x0.0; Counterclockwise_2D_Arbitrary.lex ?x1.0 ?r;
         Counterclockwise_2D_Arbitrary.lex ?x1.0 ?l;
         Counterclockwise_2D_Arbitrary.lex ?r ?x0.0;
         Counterclockwise_2D_Arbitrary.lex ?l ?x0.0; ccw' ?x0.0 ?l ?x1.0;
         ccw' ?x0.0 ?x1.0 ?r |]
      ==> det3 ?x0.0 ?l ?r ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 0),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_convex3",
     "[| Counterclockwise_2D_Arbitrary.lex ?p ?q;
         Counterclockwise_2D_Arbitrary.lex ?q ?r; 0 <= ?a; 0 <= ?b; 0 <= ?c;
         ?a + ?b + ?c = 1;
         ?comb = ?a *\<^sub>R ?p + ?b *\<^sub>R ?q + ?c *\<^sub>R ?r |]
      ==> Counterclockwise_2D_Arbitrary.lex ?comb ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_hole 6, template_var 3),
        template_inequation (less_equals, template_hole 6, template_var 2),
        template_inequation (less_equals, template_hole 6, template_var 1),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2)),
            template_var 1),
          template_hole 3),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 6)),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 5))),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 4)
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_convex3",
     "[| Counterclockwise_2D_Arbitrary.lex ?p ?q;
         Counterclockwise_2D_Arbitrary.lex ?q ?r; 0 <= ?a; 0 <= ?b; 0 <= ?c;
         ?a + ?b + ?c = 1;
         ?comb = ?a *\<^sub>R ?p + ?b *\<^sub>R ?q + ?c *\<^sub>R ?r |]
      ==> Counterclockwise_2D_Arbitrary.lex ?p ?comb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_hole 6, template_var 3),
        template_inequation (less_equals, template_hole 6, template_var 2),
        template_inequation (less_equals, template_hole 6, template_var 1),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2)),
            template_var 1),
          template_hole 3),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 6)),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 5))),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 6), template_var 0)
           ))),
    ("Counterclockwise_2D_Arbitrary.contra1",
     "distinct4 ?s ?p ?q ?r ==>
      ~ (Counterclockwise_2D_Arbitrary.lex ?p ?q &
         Counterclockwise_2D_Arbitrary.lex ?q ?r &
         Counterclockwise_2D_Arbitrary.lex ?r ?s & indelta ?s ?p ?q ?r)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 0)),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1)),
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 2),
                                  template_var 0)),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 1),
                                template_var 0))))))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 1),
                           template_var 0)),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_var 3),
                             template_var 0)),
                         template_app
                          (template_app
                            (template_app (template_hole 0, template_var 2),
                             template_var 1),
                           template_var 3))))))
               )
           ))),
    ("Counterclockwise_2D_Arbitrary.contra2",
     "distinct4 ?s ?p ?q ?r ==>
      ~ (Counterclockwise_2D_Arbitrary.lex ?s ?p &
         Counterclockwise_2D_Arbitrary.lex ?p ?q &
         Counterclockwise_2D_Arbitrary.lex ?q ?r & indelta ?s ?p ?q ?r)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 0)),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1)),
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 2),
                                  template_var 0)),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 1),
                                template_var 0))))))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 1),
                           template_var 0)),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_var 3),
                             template_var 0)),
                         template_app
                          (template_app
                            (template_app (template_hole 0, template_var 2),
                             template_var 1),
                           template_var 3))))))
               )
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_convex'",
     "[| 0 <= ?u; 0 <= ?v; ?u + ?v = 1; ccw ?a ?b ?c; coll ?a ?b ?c;
         ccw ?a ?b ?d; det3 ?a ?b ?d ~= 0 |]
      ==> ccw ?a ?b (?u *\<^sub>R ?c + ?v *\<^sub>R ?d)",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 5),
        template_inequation (less_equals, template_hole 8, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 5), template_var 4),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 8),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 0),
              template_hole 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Counterclockwise_2D_Arbitrary.lex_contr",
     "[| distinct4 ?t ?s ?q ?r; Counterclockwise_2D_Arbitrary.lex ?t ?s;
         Counterclockwise_2D_Arbitrary.lex ?s ?r; coll ?t ?s ?r;
         ccw' ?t ?s ?q; ccw' ?t ?q ?r |]
      ==> False",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_var 3),
                          template_var 0)),
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 6, template_var 2),
                                template_var 1)),
                            template_app
                             (template_app
                               (template_hole 7,
                                template_app
                                 (template_app
                                   (template_hole 6, template_var 2),
                                  template_var 0)),
                              template_app
                               (template_app
                                 (template_hole 6, template_var 1),
                                template_var 0))))))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 0),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("Counterclockwise_2D_Arbitrary.ccw_convex",
     "[| 0 <= ?u; 0 <= ?v; ?u + ?v = 1; ccw ?a ?b ?c; ccw ?a ?b ?d;
         [| coll ?a ?b ?c; coll ?a ?b ?d |]
         ==> Counterclockwise_2D_Arbitrary.lex ?b ?a |]
      ==> ccw ?a ?b (?u *\<^sub>R ?c + ?v *\<^sub>R ?d)",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 5),
        template_inequation (less_equals, template_hole 8, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 5), template_var 4),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 0)
            ),
        template_implication
         ([template_equation
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1),
             template_hole 8)],
          template_implication
           ([template_equation
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2),
                 template_var 0),
               template_hole 8)],
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 3)
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Counterclockwise_2D_Arbitrary.contra4",
     "[| distinct4 ?s ?r ?q ?p; Counterclockwise_2D_Arbitrary.lex ?q ?p;
         Counterclockwise_2D_Arbitrary.lex ?p ?r;
         Counterclockwise_2D_Arbitrary.lex ?r ?s; ccw ?r ?q ?s;
         ccw ?r ?s ?p; ccw ?r ?q ?p |]
      ==> False",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 0)),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1)),
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 2),
                                  template_var 0)),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 1),
                                template_var 0))))))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("Counterclockwise_2D_Arbitrary.contra3",
     "distinct4 ?s ?p ?q ?r ==>
      ~ (Counterclockwise_2D_Arbitrary.lex ?p ?r &
         Counterclockwise_2D_Arbitrary.lex ?p ?s &
         Counterclockwise_2D_Arbitrary.lex ?q ?r &
         Counterclockwise_2D_Arbitrary.lex ?q ?s & insquare ?p ?r ?q ?s)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_var 0)),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1)),
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 2),
                                  template_var 0)),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 1),
                                template_var 0))))))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 3)),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_var 0),
                             template_var 1)),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 0, template_var 0),
                                 template_var 1),
                               template_var 3)),
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_app
                                    (template_hole 0, template_var 1),
                                   template_var 3),
                                 template_var 2)),
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_var 2),
                               template_var 0))))))))
               )
           ))),
    ("Counterclockwise_2D_Arbitrary.interior'",
     "[| distinct4 ?p ?q ?r ?t; in4 ?S ?p ?q ?r ?t; ccw ?p ?q ?t;
         ccw ?q ?r ?t; ccw ?r ?p ?t |]
      ==> ccw ?p ?q ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_var 2)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_var 1)),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 3),
                                template_var 2)),
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 3),
                                  template_var 1)),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1))))))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 0)),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 0)))),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 4),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("Counterclockwise_2D_Arbitrary.interior",
     "[| distinct4 ?p ?q ?r ?t; in4 ?S ?p ?q ?r ?t; ccw ?t ?q ?r;
         ccw ?p ?t ?r; ccw ?p ?q ?t |]
      ==> ccw ?p ?q ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_var 2)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_var 1)),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 3),
                                template_var 2)),
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 3),
                                  template_var 1)),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1))))))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 0)),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 0)))),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("Counterclockwise_2D_Arbitrary.ccw_transitive_contr",
     "[| ccw ?t ?s ?p; ccw ?t ?s ?q; ccw ?t ?s ?r; ccw ?t ?p ?q;
         ccw ?t ?q ?r; ccw ?t ?r ?p; distinct5 ?t ?s ?p ?q ?r |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 0),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 2)),
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_var 1)),
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_var 0)),
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 3,
                            template_app
                             (template_app
                               (template_hole 2,
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 3),
                                  template_var 2)),
                              template_app
                               (template_app
                                 (template_hole 2,
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 3),
                                    template_var 1)),
                                template_app
                                 (template_app
                                   (template_hole 2,
                                    template_app
                                     (template_app
 (template_hole 1, template_var 3),
template_var 0)),
                                  template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 3,
template_app
 (template_app
   (template_hole 2,
    template_app
     (template_app (template_hole 1, template_var 2), template_var 1)),
  template_app
   (template_app
     (template_hole 2,
      template_app
       (template_app (template_hole 1, template_var 2), template_var 0)),
    template_app
     (template_app (template_hole 1, template_var 1),
      template_var 0))))))))))))))
                )
            )],
       template_predicate (template_hole 0))),
    ("Counterclockwise_2D_Arbitrary.ccw_two_up_contra",
     "[| ccw' ?t ?p ?q; ccw' ?t ?q ?r; ccw ?t ?s ?p; ccw ?t ?s ?q;
         ccw ?t ?s ?r; ccw ?t ?p ?q; ccw ?t ?q ?r; ccw ?t ?r ?p;
         distinct5 ?t ?s ?p ?q ?r |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 1),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3)),
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app
                         (template_app (template_hole 1, template_var 4),
                          template_var 2)),
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 1, template_var 4),
                            template_var 1)),
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 3,
                            template_app
                             (template_app
                               (template_hole 2,
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 0),
                                  template_var 3)),
                              template_app
                               (template_app
                                 (template_hole 2,
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 0),
                                    template_var 2)),
                                template_app
                                 (template_app
                                   (template_hole 2,
                                    template_app
                                     (template_app
 (template_hole 1, template_var 0),
template_var 1)),
                                  template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 3,
template_app
 (template_app
   (template_hole 2,
    template_app
     (template_app (template_hole 1, template_var 3), template_var 2)),
  template_app
   (template_app
     (template_hole 2,
      template_app
       (template_app (template_hole 1, template_var 3), template_var 1)),
    template_app
     (template_app (template_hole 1, template_var 2),
      template_var 1))))))))))))))
                )
            )],
       template_predicate (template_hole 0)))]
