### theory "Draft.Ex_Affine_ApproximationTemplates"
### 2.682s elapsed time, 8.443s cpu time, 2.459s GC time
"[(FloatR 128 51,
   pdevs
    [(47, FloatR 0 0), (46, FloatR 2 41), (45, FloatR 2 40),
     (44, FloatR 2 39), (43, FloatR 2 38), (42, FloatR 2 37),
     (41, FloatR 2 36), (40, FloatR 2 35), (39, FloatR 2 34),
     (38, FloatR 2 33), (37, FloatR 2 32), (36, FloatR 2 31),
     (35, FloatR 2 30), (34, FloatR 2 29), (33, FloatR 2 28),
     (32, FloatR 2 27), (31, FloatR 2 26), (30, FloatR 2 25),
     (29, FloatR 2 24), (28, FloatR 2 23), (27, FloatR 2 22),
     (26, FloatR 2 21), (25, FloatR 2 20), (24, FloatR 2 19),
     (23, FloatR 2 18), (22, FloatR 2 17), (21, FloatR 2 16),
     (20, FloatR 2 15), (19, FloatR 2 14), (18, FloatR 2 13),
     (17, FloatR 2 12), (16, FloatR 2 11), (15, FloatR 2 10),
     (14, FloatR 2 9), (13, FloatR 2 8), (12, FloatR 2 7), (11, FloatR 2 6),
     (10, FloatR 2 5), (9, FloatR 2 4), (8, FloatR 2 3), (7, FloatR 2 2),
     (6, FloatR 1 1), (5, FloatR 1 0), (4, FloatR 192 42),
     (3, FloatR 191 42), (2, FloatR 5 (- 1)), (1, FloatR 255 42),
     (0, FloatR 1 (- 1))]),
  (FloatR 128 51,
   pdevs
    [(47, FloatR 0 0), (46, FloatR 0 0), (45, FloatR 0 0), (44, FloatR 0 0),
     (43, FloatR 0 0), (42, FloatR 0 0), (41, FloatR 0 0), (40, FloatR 0 0),
     (39, FloatR 0 0), (38, FloatR 0 0), (37, FloatR 0 0), (36, FloatR 0 0),
     (35, FloatR 0 0), (34, FloatR 0 0), (33, FloatR 0 0), (32, FloatR 0 0),
     (31, FloatR 0 0), (30, FloatR 0 0), (29, FloatR 0 0), (28, FloatR 0 0),
     (27, FloatR 0 0), (26, FloatR 0 0), (25, FloatR 0 0), (24, FloatR 0 0),
     (23, FloatR 0 0), (22, FloatR 0 0), (21, FloatR 0 0), (20, FloatR 0 0),
     (19, FloatR 0 0), (18, FloatR 0 0), (17, FloatR 0 0), (16, FloatR 0 0),
     (15, FloatR 0 0), (14, FloatR 0 0), (13, FloatR 0 0), (12, FloatR 0 0),
     (11, FloatR 0 0), (10, FloatR 0 0), (9, FloatR 0 0), (8, FloatR 0 0),
     (7, FloatR 0 0), (6, FloatR 0 0), (4, FloatR 192 42),
     (3, FloatR 192 42), (2, FloatR 0 0), (1, FloatR 128 43)]),
  (FloatR 128 51,
   pdevs
    [(48, FloatR 0 0), (47, FloatR 0 0), (46, FloatR 0 0), (45, FloatR 0 0),
     (44, FloatR 0 0), (43, FloatR 0 0), (42, FloatR 0 0), (41, FloatR 0 0),
     (40, FloatR 0 0), (39, FloatR 0 0), (38, FloatR 0 0), (37, FloatR 0 0),
     (36, FloatR 0 0), (35, FloatR 0 0), (34, FloatR 0 0), (33, FloatR 0 0),
     (32, FloatR 0 0), (31, FloatR 0 0), (30, FloatR 0 0), (29, FloatR 0 0),
     (28, FloatR 0 0), (27, FloatR 0 0), (26, FloatR 0 0), (25, FloatR 0 0),
     (24, FloatR 0 0), (23, FloatR 0 0), (22, FloatR 0 0), (21, FloatR 0 0),
     (20, FloatR 0 0), (19, FloatR 0 0), (18, FloatR 0 0), (17, FloatR 0 0),
     (16, FloatR 0 0), (15, FloatR 0 0), (14, FloatR 0 0), (13, FloatR 0 0),
     (12, FloatR 0 0), (11, FloatR 0 0), (10, FloatR 0 0), (9, FloatR 0 0),
     (8, FloatR 0 0), (7, FloatR 0 0), (6, FloatR 0 0), (4, FloatR 192 42),
     (3, FloatR 192 42), (2, FloatR 0 0), (1, FloatR 128 43)])]"
  :: "(real * real pdevs) list"
"((FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
  pdevs
   [(211, FloatR 0 0, FloatR 0 0, FloatR 1214694609 (- 4)),
    (210, FloatR 0 0, FloatR 1214694609 (- 4), FloatR 0 0),
    (209, FloatR 1214694609 (- 4), FloatR 0 0, FloatR 0 0),
    (207, FloatR 0 (- 5), FloatR 0 (- 5), FloatR 0 (- 5)),
    (206, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (204, FloatR 0 (- 6), FloatR 0 (- 6), FloatR 0 (- 6)),
    (203, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (201, FloatR 0 (- 7), FloatR 0 (- 7), FloatR 0 (- 7)),
    (200, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (198, FloatR 0 (- 8), FloatR 0 (- 8), FloatR 0 (- 8)),
    (197, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (195, FloatR 0 (- 9), FloatR 0 (- 9), FloatR 0 (- 9)),
    (194, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (192, FloatR 0 (- 10), FloatR 0 (- 10), FloatR 0 (- 10)),
    (191, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (189, FloatR 0 (- 11), FloatR 0 (- 11), FloatR 0 (- 11)),
    (188, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (186, FloatR 0 (- 12), FloatR 0 (- 12), FloatR 0 (- 12)),
    (185, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (183, FloatR 0 (- 13), FloatR 0 (- 13), FloatR 0 (- 13)),
    (182, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (180, FloatR 0 (- 14), FloatR 0 (- 14), FloatR 0 (- 14)),
    (179, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (177, FloatR 0 (- 15), FloatR 0 (- 15), FloatR 0 (- 15)),
    (176, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (174, FloatR 0 (- 16), FloatR 0 (- 16), FloatR 0 (- 16)),
    (173, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (171, FloatR 0 (- 17), FloatR 0 (- 17), FloatR 0 (- 17)),
    (170, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (168, FloatR 0 (- 18), FloatR 0 (- 18), FloatR 0 (- 18)),
    (167, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (165, FloatR 0 (- 19), FloatR 0 (- 19), FloatR 0 (- 19)),
    (164, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (162, FloatR 0 (- 20), FloatR 0 (- 20), FloatR 0 (- 20)),
    (161, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (159, FloatR 0 (- 21), FloatR 0 (- 21), FloatR 0 (- 21)),
    (158, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (156, FloatR 0 (- 22), FloatR 0 (- 22), FloatR 0 (- 22)),
    (155, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (153, FloatR 0 (- 27), FloatR 0 (- 27), FloatR 0 (- 27)),
    (152, FloatR 0 0, FloatR 0 0, FloatR 0 0),
    (151, FloatR 0 (- 35), FloatR 0 (- 35), FloatR 0 (- 35)),
    (150, FloatR 0 (- 29), FloatR 0 (- 29), FloatR 0 (- 29)),
    (149, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (148, FloatR 0 (- 35), FloatR 0 (- 35), FloatR 0 (- 35)),
    (147, FloatR 0 (- 31), FloatR 0 (- 31), FloatR 0 (- 31)),
    (146, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (145, FloatR 0 (- 36), FloatR 0 (- 36), FloatR 0 (- 36)),
    (144, FloatR 0 (- 32), FloatR 0 (- 32), FloatR 0 (- 32)),
    (143, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (142, FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
    (141, FloatR 0 (- 33), FloatR 0 (- 33), FloatR 0 (- 33)),
    (140, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (139, FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
    (138, FloatR 0 (- 33), FloatR 0 (- 33), FloatR 0 (- 33)),
    (137, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (136, FloatR 0 (- 38), FloatR 0 (- 38), FloatR 0 (- 38)),
    (135, FloatR 0 (- 34), FloatR 0 (- 34), FloatR 0 (- 34)),
    (134, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (133, FloatR 0 (- 38), FloatR 0 (- 38), FloatR 0 (- 38)),
    (132, FloatR 0 (- 34), FloatR 0 (- 34), FloatR 0 (- 34)),
    (131, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (130, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (129, FloatR 0 (- 35), FloatR 0 (- 35), FloatR 0 (- 35)),
    (128, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (127, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (126, FloatR 0 (- 35), FloatR 0 (- 35), FloatR 0 (- 35)),
    (125, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (124, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (123, FloatR 0 (- 36), FloatR 0 (- 36), FloatR 0 (- 36)),
    (122, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (121, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (120, FloatR 0 (- 36), FloatR 0 (- 36), FloatR 0 (- 36)),
    (119, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (118, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (117, FloatR 0 (- 36), FloatR 0 (- 36), FloatR 0 (- 36)),
    (116, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (115, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (114, FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
    (113, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (112, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (111, FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
    (110, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (109, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (108, FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
    (107, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (106, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (105, FloatR 0 (- 38), FloatR 0 (- 38), FloatR 0 (- 38)),
    (104, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (103, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (102, FloatR 0 (- 38), FloatR 0 (- 38), FloatR 0 (- 38)),
    (101, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (100, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (99, FloatR 0 (- 38), FloatR 0 (- 38), FloatR 0 (- 38)),
    (98, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (97, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (96, FloatR 0 (- 38), FloatR 0 (- 38), FloatR 0 (- 38)),
    (95, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (94, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (93, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (92, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (91, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (90, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (89, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (88, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (87, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (86, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (85, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (84, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (83, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (82, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (81, FloatR 0 (- 39), FloatR 0 (- 39), FloatR 0 (- 39)),
    (80, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (79, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (78, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (77, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (76, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (75, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (74, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (73, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (72, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (71, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (70, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (69, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40)),
    (68, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (67, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (66, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (65, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (64, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (63, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (62, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (61, FloatR 0 (- 45), FloatR 0 (- 45), FloatR 0 (- 45)),
    (60, FloatR 0 (- 41), FloatR 0 (- 41), FloatR 0 (- 41)),
    (59, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (58, FloatR 0 (- 45), FloatR 0 (- 45), FloatR 0 (- 45)),
    (57, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (56, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (55, FloatR 0 (- 45), FloatR 0 (- 45), FloatR 0 (- 45)),
    (54, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (53, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (52, FloatR 0 (- 45), FloatR 0 (- 45), FloatR 0 (- 45)),
    (51, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (50, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (49, FloatR 0 (- 45), FloatR 0 (- 45), FloatR 0 (- 45)),
    (48, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (47, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (46, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (45, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (44, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (43, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (42, FloatR 0 (- 45), FloatR 0 (- 45), FloatR 0 (- 45)),
    (41, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (40, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (39, FloatR 0 (- 47), FloatR 0 (- 47), FloatR 0 (- 47)),
    (38, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (37, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (36, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (35, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (34, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (33, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (32, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (31, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (30, FloatR 0 (- 44), FloatR 0 (- 44), FloatR 0 (- 44)),
    (29, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (28, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (27, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (26, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (25, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (24, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (23, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (22, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (21, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (20, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (19, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (18, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (17, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (16, FloatR 0 (- 46), FloatR 0 (- 46), FloatR 0 (- 46)),
    (15, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (14, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (13, FloatR 0 (- 47), FloatR 0 (- 47), FloatR 0 (- 47)),
    (12, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (11, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (10, FloatR 0 (- 47), FloatR 0 (- 47), FloatR 0 (- 47)),
    (9, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (8, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (7, FloatR 0 (- 47), FloatR 0 (- 47), FloatR 0 (- 47)),
    (6, FloatR 0 (- 42), FloatR 0 (- 42), FloatR 0 (- 42)),
    (5, FloatR 0 (- 43), FloatR 0 (- 43), FloatR 0 (- 43)),
    (4, FloatR 0 (- 67), FloatR 0 (- 67), FloatR 0 (- 67)),
    (3, FloatR 0 (- 62), FloatR 0 (- 62), FloatR 0 (- 62)),
    (2, FloatR 0 (- 63), FloatR 0 (- 63), FloatR 0 (- 63)),
    (1, FloatR 0 (- 37), FloatR 0 (- 37), FloatR 0 (- 37)),
    (0, FloatR 0 (- 40), FloatR 0 (- 40), FloatR 0 (- 40))])"
  :: "(real * real * real) * (real * real * real) pdevs"
val it = (): uni
