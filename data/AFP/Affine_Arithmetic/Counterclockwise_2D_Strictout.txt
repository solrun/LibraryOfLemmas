Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Stream" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Affine_Arithmetic_Auxiliarities" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.Counterclockwise_2D_Strict")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Affine_Arithmetic_Auxiliarities"
### 0.125s elapsed time, 0.504s cpu time, 0.059s GC time
Loading theory "Draft.Counterclockwise" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.Counterclockwise_2D_Strict" via "Draft.Counterclockwise_Vector")
### theory "HOL-Library.Function_Algebras"
### 0.137s elapsed time, 0.547s cpu time, 0.059s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.ExtrEqs")
locale linorder_list0
  fixes le :: "'a => 'a => bool"
Proofs for inductive predicate(s) "sortedP"
  Proving monotonicity ...
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale linorder_list
  fixes le :: "'a => 'a => bool"
    and S :: "'a set"
  assumes "linorder_list le S"
locale ccw_system0
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
locale ccw_system12
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system12 ccw S"
consts
  snth :: "'a stream => nat => 'a"
locale ccw_system123
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system123 ccw S"
consts
  left :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  right :: "'a tree => 'a tree"
locale ccw_system4
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system4 ccw S"
consts
  sdrop :: "nat => 'a stream => 'a stream"
locale ccw_system1235'
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system1235' ccw S"
Found termination order: "size <*mlex*> {}"
locale ccw_system1235
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system1235 ccw S"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
locale ccw_system
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_system ccw S"
### theory "Draft.Counterclockwise"
### 0.481s elapsed time, 1.872s cpu time, 0.181s GC time
Loading theory "Draft.Counterclockwise_Vector" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.Counterclockwise_2D_Strict")
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
locale ccw_vector_space
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
  assumes "ccw_vector_space ccw S"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale ccw_convex
  fixes ccw :: "'a => 'a => 'a => bool"
    and S :: "'a set"
    and oriented :: "'a => 'a => bool"
  assumes "ccw_convex ccw S oriented"
### theory "Draft.Counterclockwise_Vector"
### 0.162s elapsed time, 0.620s cpu time, 0.088s GC time
Loading theory "Draft.Counterclockwise_2D_Strict" (required by "Draft.Counterclockwise_2D_StrictTemplates")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.873s elapsed time, 3.387s cpu time, 0.437s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.766s elapsed time, 2.940s cpu time, 0.378s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Counterclockwise_2D_Strict"
### 0.641s elapsed time, 1.668s cpu time, 0.546s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.827s elapsed time, 5.243s cpu time, 1.061s GC time
Loading theory "Draft.Templates" (required by "Draft.Counterclockwise_2D_StrictTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.114s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Counterclockwise_2D_StrictTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.430s elapsed time, 0.439s cpu time, 0.000s GC time
Loading theory "Draft.Counterclockwise_2D_StrictTemplates"
val templateLemmas =
   [("Counterclockwise_2D_Strict.coll_zero1", "coll 0 0 ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.coll_zero", "coll 0 ?z 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.coll_self", "coll 0 ?z ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.det3_self23", "coll ?a ?b ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.det3_same", "coll ?a ?x ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 0),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.det3_self12", "coll ?b ?b ?a",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.det3_rotate",
     "det3 ?a ?b ?c = det3 ?c ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Counterclockwise_2D_Strict.det3_switch",
     "det3 ?a ?b ?c = - det3 ?a ?c ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 1)))),
    ("Counterclockwise_2D_Strict.det3_switch'",
     "det3 ?a ?b ?c = - det3 ?b ?a ?c",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Counterclockwise_2D_Strict.nonzero_fstI",
     "fst ?x ~= (0::?'a) ==> ?x ~= 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Counterclockwise_2D_Strict.nonzero_sndI",
     "snd ?x ~= (0::?'b) ==> ?x ~= 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Counterclockwise_2D_Strict.ccw'_contra",
     "ccw' ?t ?r ?q ==> ccw' ?t ?q ?r = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.coll_commute",
     "coll 0 ?a ?b = coll 0 ?b ?a",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.ccw'_not_coll",
     "ccw' ?a ?b ?c ==> det3 ?a ?b ?c ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Strict.ccw'_not_coll",
     "ccw' ?a ?b ?c ==> det3 ?a ?c ?b ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Strict.ccw'_not_coll",
     "ccw' ?a ?b ?c ==> det3 ?b ?a ?c ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Strict.ccw'_not_coll",
     "ccw' ?a ?b ?c ==> det3 ?b ?c ?a ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_var 2),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Strict.ccw'_not_coll",
     "ccw' ?a ?b ?c ==> det3 ?c ?a ?b ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_var 1),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Strict.ccw'_not_coll",
     "ccw' ?a ?b ?c ==> det3 ?c ?b ?a ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1),
               template_var 2),
             template_hole 0)
           ))),
    ("Counterclockwise_2D_Strict.det30_uminus3",
     "coll 0 ?a (- ?b) = coll 0 ?a ?b",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.det30_uminus2",
     "coll 0 (- ?a) ?b = coll 0 ?a ?b",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.coll_scaleR",
     "coll 0 ?x ?y ==> coll 0 (?r *\<^sub>R ?x) ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2),
            template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_hole 1))),
    ("Counterclockwise_2D_Strict.coll_add_cancel",
     "coll 0 ?a (?a + ?b) ==> coll 0 ?a ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.neq_left_right_of",
     "[| ccw' ?a ?b ?c; ccw' ?a ?c ?d |] ==> ?b ~= ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_var 0)))),
    ("Counterclockwise_2D_Strict.not_ccw'_eq",
     "(~ ccw' ?t ?p ?s) = (ccw' ?t ?s ?p | coll ?t ?s ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_hole 0))
           ))),
    ("Counterclockwise_2D_Strict.det30_minus_scaled3",
     "coll 0 ?a (?b - ?x *\<^sub>R ?a) = coll 0 ?a ?b",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 1),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.det30_scaled_minus3",
     "coll 0 ?a (?e *\<^sub>R ?a - ?b) = coll 0 ?a ?b",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.det30_plus_scaled3",
     "coll 0 ?a (?b + ?x *\<^sub>R ?a) = coll 0 ?a ?b",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 1),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.det3_zero_translate_plus'",
     "coll ?a (?a + ?b) (?a + ?c) = coll 0 ?b ?c",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_hole 1),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 1),
           template_var 0),
         template_hole 1))),
    ("Counterclockwise_2D_Strict.det3_eq_zeroI",
     "?p = ?q + ?x *\<^sub>R (?t - ?q) ==> coll ?q ?t ?p",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0),
           template_var 3),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.det3_translate_origin",
     "NO_MATCH (0::?'a) ?p ==> det3 ?p ?q ?r = det3 0 (?q - ?p) (?r - ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Counterclockwise_2D_Strict.ccw'_sorted_scaleR",
     "[| ccw'.sortedP 0 ?xs; 0 < ?r |]
      ==> ccw'.sortedP 0 (map ((*\<^sub>R) ?r) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4)),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Counterclockwise_2D_Strict.scaleR_left_normalize",
     "(?a *\<^sub>R ?b = ?c) =
      (if ?a = 0 then ?c = (0::?'a) else ?b = ?c /\<^sub>R ?a)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("Counterclockwise_2D_Strict.coll_scaleR_right_eq",
     "coll 0 ?y (?r *\<^sub>R ?x) = (?r = 0 | coll 0 ?y ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 2),
                   template_var 0)),
               template_hole 1))
           ))),
    ("Counterclockwise_2D_Strict.coll_scaleR_left_eq",
     "coll 0 (?r *\<^sub>R ?x) ?y = (?r = 0 | coll 0 ?x ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 1),
                   template_var 0)),
               template_hole 1))
           ))),
    ("Counterclockwise_2D_Strict.det3_zero_translate_plus",
     "coll (?a + ?x) (?b + ?x) (?c + ?x) = coll ?a ?b ?c",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_hole 0),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Counterclockwise_2D_Strict.det3_nonneg_scaleR1_eq",
     "0 < ?e ==>
      (0 <= det3 0 (?e *\<^sub>R ?xr) ?P) = (0 <= det3 0 ?xr ?P)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 5),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 5),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 0))))),
    ("Counterclockwise_2D_Strict.det3_eq_zero",
     "?e ~= 0 ==> coll 0 ?xr (?e *\<^sub>R ?Q) = coll 0 ?xr ?Q",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_hole 4),
         template_equation
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 0),
           template_hole 4)))),
    ("Counterclockwise_2D_Strict.det30_zero_scaleR2",
     "[| 0 < ?e; coll 0 ?P ?xr |] ==> coll 0 ?P (?e *\<^sub>R ?xr)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_hole 4))),
    ("Counterclockwise_2D_Strict.det30_zero_scaleR1",
     "[| 0 < ?e; coll 0 ?xr ?P |] ==> coll 0 (?e *\<^sub>R ?xr) ?P",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 4))),
    ("Counterclockwise_2D_Strict.det3_nonneg_scaleR1",
     "[| 0 < ?e; 0 <= det3 0 ?xr ?P |]
      ==> 0 <= det3 0 (?e *\<^sub>R ?xr) ?P",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation
         (less_equals, template_hole 4,
          template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Counterclockwise_2D_Strict.coll_scale",
     "[| coll 0 ?r ?q; ?r ~= 0 |] ==> EX x. ?q = x *\<^sub>R ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1),
            template_var 0),
          template_hole 4),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Counterclockwise_2D_Strict.det30_minus_scaled2",
     "coll 0 (?a - ?x *\<^sub>R ?a) ?b =
      (if ?x = 1 then True else coll 0 ?a ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2))),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 1)),
               template_hole 0),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 2),
                   template_var 0)),
               template_hole 3))
           ))),
    ("Counterclockwise_2D_Strict.sum_list_filter_coll_ex_scale",
     "?z ~= 0 ==> EX r. sum_list (filter (coll 0 ?z) ?zs) = r *\<^sub>R ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Counterclockwise_2D_Strict.det30_plus_scaled2",
     "coll 0 (?a + ?x *\<^sub>R ?a) ?b =
      (if ?x = - 1 then True else coll 0 ?a ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 2))),
           template_var 0),
         template_hole 4),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_app (template_hole 2, template_hole 1))),
               template_hole 0),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_var 2),
                   template_var 0)),
               template_hole 4))
           ))),
    ("Counterclockwise_2D_Strict.coll_sum_list",
     "(!!y. y : set ?ys ==> coll 0 ?x y) ==> coll 0 ?x (sum_list ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_hole 1))),
    ("Counterclockwise_2D_Strict.sum_list_posI",
     "[| !!x. x : set ?xs ==> (0::?'a) < x; ?xs ~= [] |]
      ==> (0::?'a) < sum_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_inequation
        (less_than, template_hole 4,
         template_app (template_hole 0, template_var 0)))),
    ("Counterclockwise_2D_Strict.coll_add",
     "[| coll 0 ?x ?y; coll 0 ?x ?z |] ==> coll 0 ?x (?y + ?z)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2),
            template_var 1),
          template_hole 1),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2),
            template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("Counterclockwise_2D_Strict.coll_ex_scaling",
     "[| ?b ~= ?c; coll ?a ?b ?c |]
      ==> EX r. ?a = ?b + r *\<^sub>R (?c - ?b)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 0),
              template_var 2),
            template_var 1),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Counterclockwise_2D_Strict.det3_nonneg_scaleR_segment2",
     "[| 0 <= det3 ?x ?y ?z; 0 < ?a |]
      ==> 0 <= det3 ?x ((1 - ?a) *\<^sub>R ?x + ?a *\<^sub>R ?y) ?z",
     template_implication
      ([template_inequation
         (less_equals, template_hole 6,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1)),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_inequation
        (less_equals, template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)),
                   template_var 3)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2))),
           template_var 1)))),
    ("Counterclockwise_2D_Strict.coll_trans",
     "[| coll 0 ?a ?b; coll 0 ?a ?c; ?a ~= 0 |] ==> coll 0 ?b ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2),
            template_var 1),
          template_hole 2),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2),
            template_var 0),
          template_hole 2),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0),
         template_hole 2))),
    ("Counterclockwise_2D_Strict.ccw'_subst_collinear",
     "[| coll ?t ?r ?s; ?s ~= ?t; ccw' ?t ?r ?p |]
      ==> ccw' ?t ?s ?p | ccw' ?t ?p ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 4),
        template_negation
         (template_equation (template_var 1, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Counterclockwise_2D_Strict.sum_list_coll_ex_scale",
     "[| !!x. x : set ?xs ==> coll 0 ?z x; ?z ~= 0 |]
      ==> EX r. sum_list ?xs = r *\<^sub>R ?z",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Counterclockwise_2D_Strict.det_identity",
     "det3 ?t ?p ?q * det3 ?t ?s ?r + det3 ?t ?q ?r * det3 ?t ?s ?p +
      det3 ?t ?r ?p * det3 ?t ?s ?q =
      0",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1),
                 template_var 3)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 2))),
       template_hole 0)),
    ("Counterclockwise_2D_Strict.coll_scale_pair",
     "[| coll 0 (?a, ?b) (?c, ?d); (?a, ?b) ~= 0 |]
      ==> EX x. (?c, ?d) = x *\<^sub>R (?a, ?b)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2)),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)),
          template_hole 4),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_hole 6)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Counterclockwise_2D_Strict.det3_nonneg_scaleR_segment1",
     "[| 0 <= det3 ?x ?y ?z; 0 <= ?a; ?a < 1 |]
      ==> 0 <= det3 ((1 - ?a) *\<^sub>R ?x + ?a *\<^sub>R ?y) ?y ?z",
     template_implication
      ([template_inequation
         (less_equals, template_hole 6,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_hole 6, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 3)],
       template_inequation
        (less_equals, template_hole 6,
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_hole 3),
                         template_var 0)),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_var 2),
           template_var 1)))),
    ("Counterclockwise_2D_Strict.cramer",
     "det3 ?s ?t ?q ~= 0 ==>
      det3 ?t ?p ?r =
      (det3 ?t ?q ?r * det3 ?s ?t ?p + det3 ?t ?p ?q * det3 ?s ?t ?r) /
      det3 ?s ?t ?q",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 2),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 4),
                       template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 1),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 3),
                   template_var 0)))),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3),
             template_var 2))))),
    ("Counterclockwise_2D_Strict.det3_eq_det",
     "det3 (?xa, ?ya) (?xb, ?yb) (?xc, ?yc) =
      det (vector
            [vector [?xa, ?ya, 1], vector [?xb, ?yb, 1],
             vector [?xc, ?yc, 1]])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 8, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 1))))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 1))))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 1))))),
                 template_hole 0))))))),
    ("Counterclockwise_2D_Strict.convex_comb_dets",
     "0 < det3 ?p ?q ?r ==>
      ?s =
      (det3 ?s ?q ?r / det3 ?p ?q ?r) *\<^sub>R ?p +
      (det3 ?p ?s ?r / det3 ?p ?q ?r) *\<^sub>R ?q +
      (det3 ?p ?q ?s / det3 ?p ?q ?r) *\<^sub>R ?r",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app
                            (template_app (template_hole 4, template_var 0),
                             template_var 2),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 2),
                         template_var 1))),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 0),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 2),
                       template_var 1))),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 2),
                   template_var 1))),
             template_var 1))))),
    ("Counterclockwise_2D_Strict.det3_pos_transitive",
     "[| 0 < det3 ?t ?s ?p; 0 <= det3 ?t ?s ?q; 0 <= det3 ?t ?s ?r;
         0 <= det3 ?t ?p ?q; 0 < det3 ?t ?q ?r |]
      ==> 0 < det3 ?t ?p ?r",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3),
            template_var 1)),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3),
            template_var 0)),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 2),
            template_var 1)),
        template_inequation
         (less_than, template_hole 2,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 1),
            template_var 0))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Counterclockwise_2D_Strict.det3_pos_transitive_coll",
     "[| 0 < det3 ?t ?s ?p; 0 <= det3 ?t ?s ?r; 0 <= det3 ?t ?p ?q;
         0 < det3 ?t ?q ?r; coll ?t ?s ?q |]
      ==> 0 < det3 ?t ?p ?r",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_hole 3,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_var 1)),
        template_inequation
         (less_equals, template_hole 3,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 2),
            template_var 0)),
        template_inequation
         (less_than, template_hole 3,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 0),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_var 0),
          template_hole 3)],
       template_inequation
        (less_than, template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 2),
           template_var 1)))),
    ("Counterclockwise_2D_Strict.coll_add_trans",
     "[| coll 0 ?x (?y + ?z); coll 0 ?y ?z; ?x ~= 0; ?y ~= 0; ?z ~= 0;
         ?y + ?z ~= 0 |]
      ==> coll 0 ?x ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_hole 2),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1),
            template_var 0),
          template_hole 2),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_var 0),
         template_hole 2))),
    ("Counterclockwise_2D_Strict.four_points_aligned",
     "[| coll ?t ?p ?q; coll ?t ?q ?r; distinct5 ?t ?s ?p ?q ?r |]
      ==> coll ?p ?q ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3),
            template_var 2),
          template_hole 3),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 2),
            template_var 1),
          template_hole 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 4),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 4),
                        template_var 3)),
                    template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 4),
                          template_var 2)),
                      template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 4),
                            template_var 1)),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 2,
                            template_app
                             (template_app
                               (template_hole 1,
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 0),
                                  template_var 3)),
                              template_app
                               (template_app
                                 (template_hole 1,
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 0),
                                    template_var 2)),
                                template_app
                                 (template_app
                                   (template_hole 1,
                                    template_app
                                     (template_app
 (template_hole 0, template_var 0),
template_var 1)),
                                  template_app
                                   (template_hole 2,
                                    template_app
                                     (template_hole 2,
template_app
 (template_app
   (template_hole 1,
    template_app
     (template_app (template_hole 0, template_var 3), template_var 2)),
  template_app
   (template_app
     (template_hole 1,
      template_app
       (template_app (template_hole 0, template_var 3), template_var 1)),
    template_app
     (template_app (template_hole 0, template_var 2),
      template_var 1))))))))))))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 1),
         template_hole 3))),
    ("Counterclockwise_2D_Strict.four_points_aligned",
     "[| coll ?t ?p ?q; coll ?t ?q ?r; distinct5 ?t ?s ?p ?q ?r |]
      ==> coll ?t ?r ?p",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3),
            template_var 2),
          template_hole 3),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 2),
            template_var 1),
          template_hole 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 4),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 4),
                        template_var 3)),
                    template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 4),
                          template_var 2)),
                      template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 4),
                            template_var 1)),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 2,
                            template_app
                             (template_app
                               (template_hole 1,
                                template_app
                                 (template_app
                                   (template_hole 0, template_var 0),
                                  template_var 3)),
                              template_app
                               (template_app
                                 (template_hole 1,
                                  template_app
                                   (template_app
                                     (template_hole 0, template_var 0),
                                    template_var 2)),
                                template_app
                                 (template_app
                                   (template_hole 1,
                                    template_app
                                     (template_app
 (template_hole 0, template_var 0),
template_var 1)),
                                  template_app
                                   (template_hole 2,
                                    template_app
                                     (template_hole 2,
template_app
 (template_app
   (template_hole 1,
    template_app
     (template_app (template_hole 0, template_var 3), template_var 2)),
  template_app
   (template_app
     (template_hole 1,
      template_app
       (template_app (template_hole 0, template_var 3), template_var 1)),
    template_app
     (template_app (template_hole 0, template_var 2),
      template_var 1))))))))))))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_var 1),
           template_var 3),
         template_hole 3))),
    ("Counterclockwise_2D_Strict.coll_sum_list_trans",
     "[| ?xs ~= []; coll 0 ?a (sum_list ?xs);
         !!x. x : set ?xs ==> coll 0 x ?y;
         !!x. x : set ?xs ==> coll 0 x (sum_list ?xs);
         !!x. x : set ?xs ==> 0 < snd x; ?a ~= 0 |]
      ==> coll 0 ?a ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 11)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 1),
            template_app (template_hole 7, template_var 2)),
          template_hole 6),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_hole 8),
             template_var 1),
           template_var 0),
         template_hole 6)))]:
   (string * thm * template) list
### theory "Draft.Counterclockwise_2D_StrictTemplates"
### 0.717s elapsed time, 0.953s cpu time, 0.160s GC time
val it = (): unit
