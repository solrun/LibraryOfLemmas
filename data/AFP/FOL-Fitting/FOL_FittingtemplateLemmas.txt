   [("FOL_Fitting.finite_char", "finite_char (mk_finite_char ?C)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.close_closed", "subset_closed (close ?C)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.finite_params", "finite (params ?p)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.finite_paramst", "finite (paramst ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.finite_paramst", "finite (paramsts ?ts)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.closed_hterm", "closedt 0 (term_of_hterm ?ht)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.closed_hterm", "closedts 0 (terms_of_hterms ?hts)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("FOL_Fitting.close_subset", "?C <= close ?C",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("FOL_Fitting.mk_alt_consistency_subset", "?C <= mk_alt_consistency ?C",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("FOL_Fitting.is_chain_extend", "is_chain (extend ?S ?C ?f)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("FOL_Fitting.ex_closed", "EX m. FOL_Fitting.closed m ?p",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("FOL_Fitting.ex_closed'", "EX m. closedt m ?t",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("FOL_Fitting.ex_closed'", "EX n. closedts n ?l",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("FOL_Fitting.psubstt_id", "psubstt id ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("FOL_Fitting.params_lift", "paramst (liftt ?t) = paramst ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("FOL_Fitting.params_lift", "paramsts (liftts ?ts) = paramsts ?ts",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("FOL_Fitting.psubstt_id", "psubstts (%x. x) ?ts = ?ts",
     template_equation
      (template_app
        (template_app (template_hole 0, t_empty), template_var 0),
       template_var 0)),
    ("FOL_Fitting.Extend_subset", "?S <= Extend ?S ?C ?f",
     template_inequation
      (less_equals, template_var 2,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("FOL_Fitting.finite_char_closed",
     "finite_char ?C ==> subset_closed ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FOL_Fitting.ex_closure", "EX m. FOL_Fitting.closed 0 (put_unis m ?p)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("FOL_Fitting.subst_0_lift", "liftts ?l[?s/0] = ?l",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_var 1)),
    ("FOL_Fitting.herbrand_evalt'",
     "evalts ?e HApp (terms_of_hterms ?hts) = ?hts",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("FOL_Fitting.subst_0_lift", "liftt ?t[?s/0] = ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_var 1)),
    ("FOL_Fitting.herbrand_evalt'",
     "evalt ?e HApp (term_of_hterm ?ht) = ?ht",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("FOL_Fitting.alt_consistency",
     "consistency ?C ==> alt_consistency (mk_alt_consistency ?C)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Fitting.close_consistency",
     "consistency ?C ==> consistency (close ?C)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Fitting.mk_alt_consistency_closed",
     "subset_closed ?C ==> subset_closed (mk_alt_consistency ?C)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Fitting.subst_size_form",
     "FOL_Fitting.size_form (?p[?t/?i]) = FOL_Fitting.size_form ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("FOL_Fitting.set_inter_compl_diff", "- ?A Int ?B = ?B - ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("FOL_Fitting.finite_char_subset",
     "subset_closed ?C ==> ?C <= mk_finite_char ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 0)))),
    ("FOL_Fitting.psubst_image", "params (psubst ?f ?p) = ?f ` params ?p",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FOL_Fitting.psubstt_image",
     "paramst (psubstt ?f ?t) = ?f ` paramst ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FOL_Fitting.psubstt_image",
     "paramsts (psubstts ?f ?ts) = ?f ` paramsts ?ts",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FOL_Fitting.psubst_closed",
     "FOL_Fitting.closed ?i (psubst ?f ?p) = FOL_Fitting.closed ?i ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("FOL_Fitting.psubstt_closed",
     "closedt ?i (psubstt ?f ?t) = closedt ?i ?t",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("FOL_Fitting.psubstt_closed",
     "closedts ?i (psubstts ?f ?ts) = closedts ?i ?ts",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("FOL_Fitting.psubstt_lift",
     "psubstts ?f (liftts ?ts) = liftts (psubstts ?f ?ts)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("FOL_Fitting.psubstt_lift",
     "psubstt ?f (liftt ?t) = liftt (psubstt ?f ?t)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("FOL_Fitting.lift_closed", "closedt 0 ?t ==> closedt 0 (liftt ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Fitting.lift_closed",
     "closedts 0 ?ts ==> closedts 0 (liftts ?ts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Fitting.tnd",
     "[] \<turnstile> Or (Pred ?p []) (Neg (Pred ?p []))",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1))))
         )),
    ("FOL_Fitting.closed_put_unis",
     "FOL_Fitting.closed ?m (put_unis ?k ?p) =
      FOL_Fitting.closed (?m + ?k) ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("FOL_Fitting.put_unis_collapse",
     "put_unis ?m (put_unis ?n ?p) = put_unis (?m + ?n) ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("FOL_Fitting.Class'",
     "Neg ?A # ?G \<turnstile> ?A ==> ?G \<turnstile> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("FOL_Fitting.finite_alt_consistency",
     "[| alt_consistency ?C; subset_closed ?C |]
      ==> alt_consistency (mk_finite_char ?C)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FOL_Fitting.lift_subc",
     "liftts (subc_list ?c ?s ?l) = subc_list ?c (liftt ?s) (liftts ?l)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("FOL_Fitting.lift_subc",
     "liftt (subc_term ?c ?s ?t) = subc_term ?c (liftt ?s) (liftt ?t)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("FOL_Fitting.herbrand_evalt",
     "closedt 0 ?t ==> term_of_hterm (evalt ?e HApp ?t) = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_var 1)),
         template_var 1))),
    ("FOL_Fitting.herbrand_evalt",
     "closedts 0 ?ts ==> terms_of_hterms (evalts ?e HApp ?ts) = ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_var 1)),
         template_var 1))),
    ("FOL_Fitting.shift_eq",
     "?i = ?j ==> (?e\<langle>?i:?T\<rangle>) ?j = ?T",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_var 0))),
    ("FOL_Fitting.lift_lemma",
     "evalt (?e\<langle>0:?z\<rangle>) ?f (liftt ?t) = evalt ?e ?f ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_var 0))),
    ("FOL_Fitting.lift_lemma",
     "evalts (?e\<langle>0:?z\<rangle>) ?f (liftts ?ts) = evalts ?e ?f ?ts",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_var 0))),
    ("FOL_Fitting.shift_gt",
     "?j < ?i ==> (?e\<langle>?i:?T\<rangle>) ?j = ?e ?j",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("FOL_Fitting.subc_new", "new ?c ?p ==> subc ?c ?s ?p = ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.new_lift", "new_term ?c ?t ==> new_term ?c (liftt ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("FOL_Fitting.subc_new'", "new_term ?c ?t ==> subc_term ?c ?s ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.new_lift", "new_list ?c ?l ==> new_list ?c (liftts ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("FOL_Fitting.subc_new'", "new_list ?c ?l ==> subc_list ?c ?s ?l = ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.closed_mono",
     "[| ?i <= ?j; FOL_Fitting.closed ?i ?p |]
      ==> FOL_Fitting.closed ?j ?p",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("FOL_Fitting.closedt_mono",
     "[| ?i <= ?j; closedt ?i ?t |] ==> closedt ?j ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("FOL_Fitting.closedt_mono",
     "[| ?i <= ?j; closedts ?i ?ts |] ==> closedts ?j ?ts",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("FOL_Fitting.psubst_eval'",
     "evalt ?e ?f (psubstt ?h ?t) = evalt ?e (%p. ?f (?h p)) ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_var 0))),
    ("FOL_Fitting.semantics_put_imps",
     "(?e,?f,?g,?z \<Turnstile> ?p) = eval ?e ?f ?g (put_imps ?p ?z)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("FOL_Fitting.psubst_eval'",
     "evalts ?e ?f (psubstts ?h ?ts) = evalts ?e (%p. ?f (?h p)) ?ts",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_var 0))),
    ("FOL_Fitting.lift_subst",
     "liftts (?l[?u/?m]) = liftts ?l[liftt ?u/?m + 1]",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("FOL_Fitting.lift_subst",
     "liftt (?t[?u/?m]) = liftt ?t[liftt ?u/?m + 1]",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("FOL_Fitting.psubstt_subst",
     "psubstts ?f (?ts[?u/?i]) = psubstts ?f ?ts[psubstt ?f ?u/?i]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("FOL_Fitting.psubst_subst",
     "psubst ?f (?P[?t/?i]) = psubst ?f ?P[psubstt ?f ?t/?i]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("FOL_Fitting.psubstt_subst",
     "psubstt ?f (?t[?u/?i]) = psubstt ?f ?t[psubstt ?f ?u/?i]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_var 0))),
    ("FOL_Fitting.shift_lt",
     "?i < ?j ==> (?e\<langle>?i:?T\<rangle>) ?j = ?e (?j - 1)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("FOL_Fitting.member_psubst",
     "?p : set ?z ==> psubst ?f ?p : set (map (psubst ?f) ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0)),
                 template_var 1)))
           ))),
    ("FOL_Fitting.psubst_new",
     "new ?c ?p ==> psubst (id(?c := ?x)) ?p = ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.new_subc_same",
     "new_term ?c ?s ==> new ?c (subc ?c ?s ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.new_subc_same'",
     "new_term ?c ?s ==> new_term ?c (subc_term ?c ?s ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.new_subc_same'",
     "new_term ?c ?s ==> new_list ?c (subc_list ?c ?s ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.psubst_new'",
     "new_term ?c ?t ==> psubstt (id(?c := ?x)) ?t = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.psubst_new'",
     "new_list ?c ?l ==> psubstts (id(?c := ?x)) ?l = ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.cut",
     "[| ?G \<turnstile> ?A; ?A # ?G \<turnstile> ?B |]
      ==> ?G \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("FOL_Fitting.shift_commute",
     "?e\<langle>?i:?U\<rangle>\<langle>0:?T\<rangle> =
      ?e\<langle>0:?T\<rangle>\<langle>Suc ?i:?U\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2)),
         template_var 1))),
    ("FOL_Fitting.psubst_eval",
     "eval ?e ?f ?g (psubst ?h ?p) = eval ?e (%p. ?f (?h p)) ?g ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4), t_empty),
           template_var 2),
         template_var 0))),
    ("FOL_Fitting.psubst_new_free",
     "?c ~= ?n ==> new ?n (psubst (id(?n := ?c)) ?p)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 1),
                         template_var 2)),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.psubst_new_free'",
     "?c ~= ?n ==> new_term ?n (psubstt (id(?n := ?c)) ?t)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 1),
                         template_var 2)),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.psubst_new_free'",
     "?c ~= ?n ==> new_list ?n (psubstts (id(?n := ?c)) ?l)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 1),
                         template_var 2)),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.member_subc",
     "?p : set ?z ==> subc ?c ?s ?p : set (subcs ?c ?s ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)))
           ))),
    ("FOL_Fitting.subset_cons",
     "set ?z <= set ?z' ==> set (?p # ?z) <= set (?p # ?z')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("FOL_Fitting.consts_for_unis",
     "[] \<turnstile> put_unis (length ?cs) ?p ==>
      [] \<turnstile> consts_for_unis (put_unis (length ?cs) ?p) ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0)),
               template_var 1))
           ))),
    ("FOL_Fitting.subcs_news", "news ?c ?z ==> subcs ?c ?s ?z = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.is_chainD",
     "[| is_chain ?f; ?x : ?f ?m |] ==> ?x : ?f (?m + ?n)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_var 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_var 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("FOL_Fitting.peirce",
     "[] \<turnstile> Impl
                       (Impl (Impl (Pred ?P []) (Pred ?Q [])) (Pred ?P []))
                       (Pred ?P [])",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_hole 0)),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0))),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))
         )),
    ("FOL_Fitting.drinker",
     "[] \<turnstile> Exists
                       (Impl (Pred ?P [Var 0]) (Forall (Pred ?P [Var 0])))",
     template_predicate
      (
         template_app
          (template_app (template_hole 9, template_hole 8),
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)),
                     template_hole 1))),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)),
                     template_hole 1))))))
         )),
    ("FOL_Fitting.doublep_infinite_params",
     "infinite (- \<Union> (params ` psubst ((*) 2) ` ?S))",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 4, t_empty)),
                       template_var 0)))))
             )
         )),
    ("FOL_Fitting.correctness",
     "?G \<turnstile> ?p ==> ALL e f g. e,f,g,?G \<Turnstile> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("FOL_Fitting.subset_in_close",
     "?S <= ?S' ==> ?S' Un ?x : ?C --> ?S Un ?x : close ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("FOL_Fitting.psubst_upd",
     "new ?x ?P ==> psubst (?f(?x := ?y)) ?P = psubst ?f ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("FOL_Fitting.psubstt_upd",
     "new_term ?x ?t ==> psubstt (?f(?x := ?y)) ?t = psubstt ?f ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("FOL_Fitting.psubstt_upd",
     "new_list ?x ?ts ==> psubstts (?f(?x := ?y)) ?ts = psubstts ?f ?ts",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("FOL_Fitting.completeness",
     "ALL e f g. e,f,g,?z \<Turnstile> ?p ==> ?z \<turnstile> ?p",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("FOL_Fitting.subst_closed",
     "[| closedt 0 ?t; FOL_Fitting.closed (Suc ?i) ?p |]
      ==> FOL_Fitting.closed ?i (?p[?t/?i])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("FOL_Fitting.subst_closedt",
     "[| closedt 0 ?u; closedt (Suc ?i) ?t |] ==> closedt ?i (?t[?u/?i])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("FOL_Fitting.subst_closedt",
     "[| closedt 0 ?u; closedts (Suc ?i) ?ts |]
      ==> closedts ?i (?ts[?u/?i])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("FOL_Fitting.shift_imp_assum",
     "[| infinite UNIV; ?z \<turnstile> Impl ?p ?q |]
      ==> ?p # ?z \<turnstile> ?q",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("FOL_Fitting.vars_for_consts",
     "[| infinite (- params ?p); [] \<turnstile> ?p |]
      ==> [] \<turnstile> vars_for_consts ?p ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FOL_Fitting.subst_lemma'",
     "evalt ?e ?f (?t[?u/?i]) =
      evalt (?e\<langle>?i:evalt ?e ?f ?u\<rangle>) ?f ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 1))),
           template_var 3),
         template_var 2))),
    ("FOL_Fitting.subst_lemma'",
     "evalts ?e ?f (?ts[?u/?i]) =
      evalts (?e\<langle>?i:evalt ?e ?f ?u\<rangle>) ?f ?ts",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1))),
           template_var 3),
         template_var 2))),
    ("FOL_Fitting.fresh_constant",
     "infinite UNIV ==> EX c. c ~: set ?cs & new c ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_hole 5))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("FOL_Fitting.deriv_psubst",
     "[| infinite UNIV; ?z \<turnstile> ?p |]
      ==> map (psubst ?f) ?z \<turnstile> psubst ?f ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FOL_Fitting.sub_put_unis",
     "put_unis ?k ?p[App ?c []/?i] = put_unis ?k (?p[App ?c []/?i + ?k])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("FOL_Fitting.upd_lemma'",
     "new_term ?n ?t ==> evalt ?e (?f(?n := ?x)) ?t = evalt ?e ?f ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 3)))),
    ("FOL_Fitting.upd_lemma'",
     "new_list ?n ?ts ==> evalts ?e (?f(?n := ?x)) ?ts = evalts ?e ?f ?ts",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 3)))),
    ("FOL_Fitting.map_psubst_new",
     "news ?c ?z ==> map (psubst (id(?c := ?x))) ?z = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0))),
           template_var 1),
         template_var 1))),
    ("FOL_Fitting.deriv_subc",
     "[| infinite UNIV; ?z \<turnstile> ?p |]
      ==> subcs ?c ?s ?z \<turnstile> subc ?c ?s ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("FOL_Fitting.ForallE'",
     "[| ?G \<turnstile> Forall ?a; ?a[?t/0] # ?G \<turnstile> ?B |]
      ==> ?G \<turnstile> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1),
                      template_hole 0)),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3), template_var 0)
           ))),
    ("FOL_Fitting.is_chainD'",
     "[| is_chain ?f; ?x : ?f ?m; ?m <= ?k |] ==> ?x : ?f ?k",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app (template_var 3, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_var 3, template_var 0))
           ))),
    ("FOL_Fitting.subst_lemma",
     "eval ?e ?f ?g (?a[?t/?i]) =
      eval (?e\<langle>?i:evalt ?e ?f ?t\<rangle>) ?f ?g ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 1))),
             template_var 4),
           template_var 3),
         template_var 2))),
    ("FOL_Fitting.map_psubst_new_free",
     "?c ~= ?n ==> news ?n (map (psubst (id(?n := ?c))) ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 1),
                     template_var 2))),
               template_var 0))
           ))),
    ("FOL_Fitting.psubst_new_away",
     "new ?fresh ?p ==>
      psubst (id(?fresh := ?c)) (psubst (id(?c := ?fresh)) ?p) = ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0),
                 template_var 2)),
             template_var 1)),
         template_var 1))),
    ("FOL_Fitting.psubst_new_away'",
     "new_term ?fresh ?t ==>
      psubstt (id(?fresh := ?c)) (psubstt (id(?c := ?fresh)) ?t) = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0),
                 template_var 2)),
             template_var 1)),
         template_var 1))),
    ("FOL_Fitting.psubst_new_away'",
     "new_list ?fresh ?l ==>
      psubstts (id(?fresh := ?c)) (psubstts (id(?c := ?fresh)) ?l) = ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0),
                 template_var 2)),
             template_var 1)),
         template_var 1))),
    ("FOL_Fitting.valid_put_unis",
     "ALL e f g. eval e f g ?p ==> eval ?e ?f ?g (put_unis ?m ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4))
           ))),
    ("FOL_Fitting.remove_imps",
     "[| infinite (- params ?p); ?z' \<turnstile> put_imps ?p ?z |]
      ==> rev ?z @ ?z' \<turnstile> ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)),
             template_var 2)
           ))),
    ("FOL_Fitting.extend_maximal",
     "[| ALL y. EX n. y = ?f n; finite_char ?C |]
      ==> maximal (Extend ?S ?C ?f) ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 2)),
             template_var 1)
           ))),
    ("FOL_Fitting.weaken_assumptions",
     "[| infinite UNIV; ?z \<turnstile> ?p; set ?z <= set ?z' |]
      ==> ?z' \<turnstile> ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 1)
           ))),
    ("FOL_Fitting.upd_lemma",
     "new ?n ?p ==> eval ?e (?f(?n := ?x)) ?g ?p = eval ?e ?f ?g ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("FOL_Fitting.closed_max",
     "[| FOL_Fitting.closed ?m ?p; FOL_Fitting.closed ?n ?q |]
      ==> FOL_Fitting.closed (max ?m ?n) ?p &
          FOL_Fitting.closed (max ?m ?n) ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0))
           ))),
    ("FOL_Fitting.subst_new",
     "[| new_term ?c ?s; new ?c ?p |] ==> new ?c (?p[?s/?m])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.subst_new'",
     "[| new_term ?c ?s; new_term ?c ?t |] ==> new_term ?c (?t[?s/?m])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 1, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.subst_new'",
     "[| new_term ?c ?s; new_list ?c ?l |] ==> new_list ?c (?l[?s/?m])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2),
                     template_var 0)))
               )
           ))),
    ("FOL_Fitting.new_subc",
     "[| new_term ?d ?s; new ?d ?p |] ==> new ?d (subc ?c ?s ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2),
                     template_var 1)))
               )
           ))),
    ("FOL_Fitting.new_subc'",
     "[| new_term ?d ?s; new_term ?d ?t |]
      ==> new_term ?d (subc_term ?c ?s ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 1, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2),
                     template_var 1)))
               )
           ))),
    ("FOL_Fitting.new_subc'",
     "[| new_term ?d ?s; new_list ?d ?l |]
      ==> new_list ?d (subc_list ?c ?s ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 1, template_var 1))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 2),
                     template_var 1)))
               )
           ))),
    ("FOL_Fitting.sat_consistency",
     "consistency
       {S. infinite (- \<Union> (params ` S)) &
           (EX f. ALL p:S. eval ?e f ?g p)}",
     template_predicate
      (
         template_app
          (template_hole 11, template_app (template_hole 10, t_empty))
         )),
    ("FOL_Fitting.fresh_constants",
     "infinite UNIV ==>
      EX cs. length cs = ?m & list_all (%c. new c ?p) cs & distinct cs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_hole 8))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("FOL_Fitting.subc_sub_0_new",
     "new_term ?c ?t ==>
      subc ?c ?s (?p[?t/0]) = subc ?c (liftt ?s) ?p[?t/0]",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_hole 1)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app (template_hole 0, template_var 1)),
                 template_var 0)),
             template_var 2),
           template_hole 1)))),
    ("FOL_Fitting.finite_params_extend",
     "infinite (INT p:?S. - params p) ==>
      infinite (INT p:extend ?S ?C ?f ?n. - params p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, t_empty),
                      template_var 3)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 3),
                           template_var 2),
                         template_var 1),
                       template_var 0))))
               )
           ))),
    ("FOL_Fitting.chain_union_closed",
     "[| finite_char ?C; is_chain ?f; ALL n. ?f n : ?C |]
      ==> \<Union> (range ?f) : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_hole 0))),
             template_var 1)
           ))),
    ("FOL_Fitting.chain_index",
     "[| is_chain ?f; finite ?F; ?F <= \<Union> (range ?f) |]
      ==> EX n. ?F <= ?f n",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("FOL_Fitting.remove_unis_sentence",
     "[| infinite (- params ?p); FOL_Fitting.closed 0 (put_unis ?m ?p);
         [] \<turnstile> put_unis ?m ?p |]
      ==> [] \<turnstile> ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("FOL_Fitting.ex_all_commute",
     "[] \<turnstile> Impl (Exists (Forall (Pred ?p [Var 1, Var 0])))
                       (Forall (Exists (Pred ?p [Var 0, Var 1])))",
     template_predicate
      (
         template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_hole 1)),
                         template_hole 0)))))),
             template_app
              (template_hole 6,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 1)),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)),
                       template_hole 0)))))))
         )),
    ("FOL_Fitting.new_subc_put'",
     "new_term ?c ?s ==>
      subc_list ?c ?s (?l[?u/?m]) =
      subc_list ?c ?s (?l[subc_term ?c ?s ?u/?m])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_var 0))))),
    ("FOL_Fitting.new_subc_put",
     "new_term ?c ?s ==>
      subc ?c ?s (?p[?t/?m]) = subc ?c ?s (?p[subc_term ?c ?s ?t/?m])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_var 0))))),
    ("FOL_Fitting.new_subc_put'",
     "new_term ?c ?s ==>
      subc_term ?c ?s (?t[?u/?m]) =
      subc_term ?c ?s (?t[subc_term ?c ?s ?u/?m])",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_var 0))))),
    ("FOL_Fitting.subc_subst_new",
     "new_term ?c ?t ==>
      subc ?c (?s[?t/?m]) (?p[?t/?m]) = subc ?c ?s ?p[?t/?m]",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("FOL_Fitting.subc_subst_new'",
     "new_term ?c ?u ==>
      subc_list ?c (?s[?u/?m]) (?l[?u/?m]) = subc_list ?c ?s ?l[?u/?m]",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("FOL_Fitting.subc_subst_new'",
     "new_term ?c ?u ==>
      subc_term ?c (?s[?u/?m]) (?t[?u/?m]) = subc_term ?c ?s ?t[?u/?m]",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("FOL_Fitting.map_psubst_new_away",
     "news ?fresh ?z ==>
      map (psubst (id(?fresh := ?c))) (map (psubst (id(?c := ?fresh))) ?z) =
      ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0),
                   template_var 2))),
             template_var 1)),
         template_var 1))),
    ("FOL_Fitting.subc_sub_closed_var",
     "[| new ?c ?p; FOL_Fitting.closed (Suc ?m) ?p |]
      ==> subc ?c (Var ?m) (?p[App ?c []/?m]) = ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 0)),
         template_var 1))),
    ("FOL_Fitting.subc_sub_closed_var'",
     "[| new_term ?c ?t; closedt (Suc ?m) ?t |]
      ==> subc_term ?c (Var ?m) (?t[App ?c []/?m]) = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 0)),
         template_var 1))),
    ("FOL_Fitting.subc_sub_closed_var'",
     "[| new_list ?c ?l; closedts (Suc ?m) ?l |]
      ==> subc_list ?c (Var ?m) (?l[App ?c []/?m]) = ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app (template_hole 8, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 0)),
         template_var 1))),
    ("FOL_Fitting.list_upd_lemma",
     "news ?n ?G ==>
      list_all (eval ?e (?f(?n := ?x)) ?g) ?G =
      list_all (eval ?e ?f ?g) ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 5),
                   template_var 1)),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 0)),
           template_var 4)))),
    ("FOL_Fitting.new_psubst_image",
     "[| new ?c ?p; ?d ~: ?f ` params ?p |]
      ==> new ?d (psubst (?f(?c := ?d)) ?p)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_app (template_hole 5, template_var 2)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 3),
                         template_var 1)),
                     template_var 2)))
               )
           ))),
    ("FOL_Fitting.new_psubst_image'",
     "[| new_term ?c ?t; ?d ~: ?f ` paramst ?t |]
      ==> new_term ?d (psubstt (?f(?c := ?d)) ?t)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_app (template_hole 5, template_var 2)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 3),
                         template_var 1)),
                     template_var 2)))
               )
           ))),
    ("FOL_Fitting.new_psubst_image'",
     "[| new_list ?c ?l; ?d ~: ?f ` paramsts ?l |]
      ==> new_list ?d (psubstts (?f(?c := ?d)) ?l)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_app (template_hole 5, template_var 2)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 0),
                           template_var 3),
                         template_var 1)),
                     template_var 2)))
               )
           ))),
    ("FOL_Fitting.ex_all_commute_eval",
     "eval ?e ?f ?g
       (Impl (Exists (Forall (Pred ?p [Var 1, Var 0])))
         (Forall (Exists (Pred ?p [Var 0, Var 1]))))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_hole 1)),
                         template_hole 0)))))),
             template_app
              (template_hole 6,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 1)),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)),
                       template_hole 0)))))))
         )),
    ("FOL_Fitting.extend_in_C",
     "[| alt_consistency ?C; ?S : ?C; infinite (- \<Union> (params ` ?S)) |]
      ==> extend ?S ?C ?f ?n : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, t_empty),
                        template_var 2))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("FOL_Fitting.news_subcs",
     "[| new_term ?d ?s; news ?d ?z |] ==> news ?d (subcs ?c ?s ?z)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("FOL_Fitting.hintikka_Extend_S",
     "[| consistency ?C; ?S : ?C; infinite (- \<Union> (params ` ?S)) |]
      ==> hintikka
           (Extend ?S (mk_finite_char (mk_alt_consistency (close ?C)))
             from_nat)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, t_empty),
                        template_var 0))))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)))),
               template_hole 0))
           ))),
    ("FOL_Fitting.natded_complete",
     "[| FOL_Fitting.closed 0 ?p; list_all (FOL_Fitting.closed 0) ?ps;
         ALL e f g. e,f,g,?ps \<Turnstile> ?p |]
      ==> ?ps \<turnstile> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 7, template_hole 6)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("FOL_Fitting.subst_new_all",
     "[| ?a ~: set ?cs; list_all (%c. new c ?p) ?cs |]
      ==> list_all (%c. new c (?p[App ?a []/?m])) ?cs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_var 2)
           ))),
    ("FOL_Fitting.psubst_new_subset",
     "[| set ?z <= set ?z'; ?c ~: \<Union> (params ` set ?z) |]
      ==> set ?z <= set (map (psubst (id(?c := ?n))) ?z')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, t_empty),
                      template_app (template_hole 9, template_var 3))))
                )
            )],
       template_inequation
        (less_equals, template_app (template_hole 9, template_var 3),
         template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1),
                   template_var 0))),
             template_var 2))))),
    ("FOL_Fitting.vars_for_consts_for_unis",
     "[| FOL_Fitting.closed (length ?cs) ?p; list_all (%c. new c ?p) ?cs;
         distinct ?cs |]
      ==> vars_for_consts (consts_for_unis (put_unis (length ?cs) ?p) ?cs)
           ?cs =
          ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 1)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 9, template_var 1)),
                   template_var 0)),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("FOL_Fitting.Extend_in_C",
     "[| alt_consistency ?C; finite_char ?C; ?S : ?C;
         infinite (- \<Union> (params ` ?S)) |]
      ==> Extend ?S ?C ?f : ?C",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, t_empty),
                        template_var 1))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 2)
           ))),
    ("FOL_Fitting.infinite_params_available",
     "infinite (- \<Union> (params ` ?S)) ==>
      EX x. x ~: \<Union> (params ` (extend ?S ?C ?f ?n Un {?f ?n}))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, t_empty),
                        template_var 3))))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("FOL_Fitting.extend_in_C_stop",
     "[| extend ?S ?C ?f ?n : ?C; extend ?S ?C ?f ?n Un {?f ?n} ~: ?C |]
      ==> extend ?S ?C ?f (Suc ?n) : ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 0)),
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app (template_var 1, template_var 0)),
                        template_hole 1))),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 2)
           ))),
    ("FOL_Fitting.subc_psubst",
     "ALL x:params ?p. x ~= ?c --> ?f x ~= ?f ?c ==>
      psubst ?f (subc ?c ?s ?p) =
      subc (?f ?c) (psubstt ?f ?s) (psubst ?f ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 3))))),
    ("FOL_Fitting.subc_psubst'",
     "ALL x:paramst ?t. x ~= ?c --> ?f x ~= ?f ?c ==>
      psubstt ?f (subc_term ?c ?s ?t) =
      subc_term (?f ?c) (psubstt ?f ?s) (psubstt ?f ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_var 1, template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 3))))),
    ("FOL_Fitting.subc_psubst'",
     "ALL x:paramsts ?l. x ~= ?c --> ?f x ~= ?f ?c ==>
      psubstts ?f (subc_list ?c ?s ?l) =
      subc_list (?f ?c) (psubstt ?f ?s) (psubstts ?f ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 3)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 3))))),
    ("FOL_Fitting.news_psubst",
     "[| news ?c ?z; ?d ~: ?f ` \<Union> (params ` set ?z) |]
      ==> news ?d (map (psubst (?f(?c := ?d))) ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, t_empty), template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_app (template_hole 8, template_var 0),
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, t_empty),
                        template_app (template_hole 5, template_var 2)))))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 1))),
               template_var 2))
           ))),
    ("FOL_Fitting.extend_hintikka",
     "[| finite_char ?C; infinite (- \<Union> (params ` ?S));
         ALL y. EX n. y = ?f n; alt_consistency ?C; ?S : ?C |]
      ==> hintikka (Extend ?S ?C ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 11,
                  template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, t_empty),
                        template_var 1))))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("FOL_Fitting.subcs_psubst",
     "ALL x:\<Union> (params ` set ?z). x ~= ?c --> ?f x ~= ?f ?c ==>
      map (psubst ?f) (subcs ?c ?s ?z) =
      subcs (?f ?c) (psubstt ?f ?s) (map (psubst ?f) ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, t_empty),
                    template_app (template_hole 10, template_var 3)))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 3))))),
    ("FOL_Fitting.extend_in_C_no_delta",
     "[| extend ?S ?C ?f ?n Un {?f ?n} : ?C; ALL p. ?f ?n ~= Exists p;
         ALL p. ?f ?n ~= Neg (Forall p) |]
      ==> extend ?S ?C ?f (Suc ?n) : ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 9, template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app (template_var 1, template_var 0)),
                    template_hole 7))),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 2)
           ))),
    ("FOL_Fitting.chain_union_closed'",
     "[| is_chain ?f; ALL n. ?f n : ?C; ALL S':?C. ALL S<=S'. S : ?C;
         finite ?S'; ?S' <= \<Union> (range ?f) |]
      ==> ?S' : ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1), t_empty)
            ),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, t_empty), template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 1)
           ))),
    ("FOL_Fitting.extend_in_C_Exists",
     "[| alt_consistency ?C; infinite (- \<Union> (params ` ?S));
         extend ?S ?C ?f ?n Un {?f ?n} : ?C; EX p. ?f ?n = Exists p |]
      ==> extend ?S ?C ?f (Suc ?n) : ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, t_empty),
                        template_var 2))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 2),
                          template_var 3),
                        template_var 1),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_var 1, template_var 0)),
                    template_hole 4))),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 3)
           ))),
    ("FOL_Fitting.hintikka_model",
     "hintikka ?H ==>
      (?p : ?H -->
       FOL_Fitting.closed 0 ?p -->
       eval ?e HApp (%a ts. Pred a (terms_of_hterms ts) : ?H) ?p) &
      (Neg ?p : ?H -->
       FOL_Fitting.closed 0 ?p -->
       eval ?e HApp (%a ts. Pred a (terms_of_hterms ts) : ?H) (Neg ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 0),
                         template_hole 3),
                       t_empty),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 0, template_var 1)),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 0),
                       template_hole 3),
                     t_empty),
                   template_app (template_hole 0, template_var 1)))))
           ))),
    ("FOL_Fitting.model_existence",
     "[| consistency ?C; ?S : ?C; infinite (- \<Union> (params ` ?S));
         ?p : ?S; FOL_Fitting.closed 0 ?p |]
      ==> eval ?e HApp
           (%a ts.
               Pred a (terms_of_hterms ts)
               : Extend ?S (mk_finite_char (mk_alt_consistency (close ?C)))
                  from_nat)
           ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 2),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 16,
                  template_app
                   (template_hole 15,
                    template_app
                     (template_hole 14,
                      template_app
                       (template_app (template_hole 13, t_empty),
                        template_var 2))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7),
               t_empty),
             template_var 1)
           ))),
    ("FOL_Fitting.Exists_in_extend",
     "[| extend ?S ?C ?f ?n Un {?f ?n} : ?C; Exists ?P = ?f ?n |]
      ==> ?P[App (SOME k.
                     k ~: \<Union>
                           (params ` (extend ?S ?C ?f ?n Un {?f ?n})))
              []/0]
          : extend ?S ?C ?f (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 16, template_var 4),
                          template_var 3),
                        template_var 2),
                      template_var 1)),
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app (template_var 2, template_var 1)),
                    template_hole 14))),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 12, template_var 0),
          template_app (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 0),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 8, t_empty)),
                     template_hole 2)),
                 template_hole 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 16, template_var 4),
                   template_var 3),
                 template_var 2),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("FOL_Fitting.Neg_Forall_in_extend",
     "[| extend ?S ?C ?f ?n Un {?f ?n} : ?C; Neg (Forall ?P) = ?f ?n |]
      ==> Neg (?P[App (SOME k.
                          k ~: \<Union>
                                (params ` (extend ?S ?C ?f ?n Un {?f ?n})))
                   []/0])
          : extend ?S ?C ?f (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 17, template_var 4),
                          template_var 3),
                        template_var 2),
                      template_var 1)),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app (template_var 2, template_var 1)),
                    template_hole 15))),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 0)),
          template_app (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, t_empty)),
                       template_hole 2)),
                   template_hole 1))),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 17, template_var 4),
                   template_var 3),
                 template_var 2),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("FOL_Fitting.extend_in_C_Neg_Forall",
     "[| alt_consistency ?C; infinite (- \<Union> (params ` ?S));
         extend ?S ?C ?f ?n Un {?f ?n} : ?C; ALL p. ?f ?n ~= Exists p;
         EX p. ?f ?n = Neg (Forall p) |]
      ==> extend ?S ?C ?f (Suc ?n) : ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 16,
                  template_app
                   (template_hole 15,
                    template_app
                     (template_hole 14,
                      template_app
                       (template_app (template_hole 13, t_empty),
                        template_var 2))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 9, template_var 2),
                          template_var 3),
                        template_var 1),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app (template_var 1, template_var 0)),
                    template_hole 7))),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_var 3)
           ))),
    ("FOL_Fitting.loewenheim_skolem",
     "ALL p:?S. eval ?e ?f ?g p ==>
      ALL p:?S.
         FOL_Fitting.closed 0 p -->
         eval ?e' (%n. HApp (2 * n))
          (%a ts.
              Pred a (terms_of_hterms ts)
              : Extend (psubst ((*) 2) ` ?S)
                 (mk_finite_char
                   (mk_alt_consistency
                     (close
                       {S. infinite (- \<Union> (params ` S)) &
                           (EX f. ALL p:S. eval ?e f ?g p)})))
                 from_nat)
          p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 4), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 29, template_var 4), t_empty)
           )))]
