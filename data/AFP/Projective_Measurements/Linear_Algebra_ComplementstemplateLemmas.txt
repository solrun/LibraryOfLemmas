   [("Linear_Algebra_Complements.rank_1_proj_hermitian",
     "hermitian (rank_1_proj ?v)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Linear_Algebra_Complements.rank_1_proj_square_mat",
     "square_mat (rank_1_proj ?v)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Linear_Algebra_Complements.zero_hermitian",
     "hermitian (0\<^sub>m ?n ?n)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Linear_Algebra_Complements.zero_projector",
     "projector (0\<^sub>m ?n ?n)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Linear_Algebra_Complements.smult_one",
     "(1::?'a) \<cdot>\<^sub>m ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Linear_Algebra_Complements.dagger_adjoint",
     "?M\<^sup>\<dagger> = Complex_Matrix.adjoint ?M",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Linear_Algebra_Complements.rank_1_proj_dim",
     "dim_row (rank_1_proj ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Linear_Algebra_Complements.rank_1_proj_adjoint",
     "Complex_Matrix.adjoint (rank_1_proj ?v) = rank_1_proj ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Linear_Algebra_Complements.vec_norm_eq_cpx_vec_length",
     "vec_norm ?v = complex_of_real \<parallel>?v\<parallel>",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Linear_Algebra_Complements.trace_1",
     "Complex_Matrix.trace (1\<^sub>m ?n) = of_nat ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Linear_Algebra_Complements.projector_hermitian",
     "projector ?M ==> hermitian ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Linear_Algebra_Complements.projector_positive",
     "projector ?M ==> Complex_Matrix.positive ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Linear_Algebra_Complements.bra_vec_carrier",
     "bra_vec ?v : carrier_mat 1 (dim_vec ?v)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Linear_Algebra_Complements.rank_1_proj_carrier",
     "rank_1_proj ?v : carrier_mat (dim_vec ?v) (dim_vec ?v)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Linear_Algebra_Complements.projector_square_eq",
     "projector ?M ==> ?M * ?M = ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 0),
         template_var 0))),
    ("Linear_Algebra_Complements.rank_1_proj_density",
     "\<parallel>?v\<parallel> = 1 ==> density_operator (rank_1_proj ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Linear_Algebra_Complements.rank_1_proj_positive",
     "\<parallel>?v\<parallel> = 1 ==>
      Complex_Matrix.positive (rank_1_proj ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Linear_Algebra_Complements.rank_1_proj_projector",
     "\<parallel>?v\<parallel> = 1 ==> projector (rank_1_proj ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Linear_Algebra_Complements.tensor_vec_dim",
     "dim_vec (?u \<otimes> ?v) = dim_vec ?u * dim_vec ?v",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Linear_Algebra_Complements.smult_smult_times",
     "?a \<cdot>\<^sub>m (?k \<cdot>\<^sub>m ?A) =
      ?a * ?k \<cdot>\<^sub>m ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Linear_Algebra_Complements.outer_prod_smult_left",
     "outer_prod (?a \<cdot>\<^sub>v ?v) ?w =
      ?a \<cdot>\<^sub>m outer_prod ?v ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Linear_Algebra_Complements.hermitian_square",
     "hermitian ?M ==> ?M : carrier_mat (dim_row ?M) (dim_row ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Linear_Algebra_Complements.rank_1_proj_trace",
     "\<parallel>?v\<parallel> = 1 ==>
      Complex_Matrix.trace (rank_1_proj ?v) = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Linear_Algebra_Complements.outer_prod_smult_right",
     "outer_prod ?v (?a \<cdot>\<^sub>v ?w) =
      conjugate ?a \<cdot>\<^sub>m outer_prod ?v ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Linear_Algebra_Complements.mult_conj_cmod_square",
     "?z * conjugate ?z = complex_of_real ((cmod ?z)\<^sup>2)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 0),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Linear_Algebra_Complements.integrable_real_mult_right",
     "integrable ?M ?f ==> integrable ?M (%w. ?c * ?f w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Linear_Algebra_Complements.vec_norm_sq_cpx_vec_length_sq",
     "(vec_norm ?v)\<^sup>2 =
      complex_of_real (\<parallel>?v\<parallel>\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3)))))),
    ("Linear_Algebra_Complements.state_qbit_norm_sq",
     "?v : state_qbit ?n ==> \<parallel>?v\<parallel>\<^sup>2 = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Linear_Algebra_Complements.tensor_mat_carrier",
     "?U \<Otimes> ?V
      : carrier_mat (dim_row ?U * dim_row ?V) (dim_col ?U * dim_col ?V)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Linear_Algebra_Complements.mat_mult_ket_carrier",
     "?A : carrier_mat ?n ?m ==> ?A * |?v\<rangle> : carrier_mat ?n 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 0))
           ))),
    ("Linear_Algebra_Complements.mult_real_cpx",
     "?a : \<real> ==>
      ?a * complex_of_real (Re ?b) = complex_of_real (Re (?a * ?b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))))),
    ("Linear_Algebra_Complements.hermitian_smult",
     "[| ?A : carrier_mat ?n ?n; hermitian ?A |]
      ==> hermitian (complex_of_real ?a \<cdot>\<^sub>m ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 2))
           ))),
    ("Linear_Algebra_Complements.outer_prod_minus_left",
     "dim_vec ?v = dim_vec ?x ==>
      outer_prod (?v - ?x) ?w = outer_prod ?v ?w - outer_prod ?x ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Linear_Algebra_Complements.outer_prod_add_left",
     "dim_vec ?v = dim_vec ?x ==>
      outer_prod (?v + ?x) ?w = outer_prod ?v ?w + outer_prod ?x ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Linear_Algebra_Complements.outer_prod_minus_right",
     "dim_vec ?w = dim_vec ?x ==>
      outer_prod ?v (?w - ?x) = outer_prod ?v ?w - outer_prod ?v ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Linear_Algebra_Complements.outer_prod_add_right",
     "dim_vec ?w = dim_vec ?x ==>
      outer_prod ?v (?w + ?x) = outer_prod ?v ?w + outer_prod ?v ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Linear_Algebra_Complements.tensor_mat_id",
     "[| 0 < ?d1.0; 0 < ?d2.0 |]
      ==> 1\<^sub>m ?d1.0 \<Otimes> 1\<^sub>m ?d2.0 =
          1\<^sub>m (?d1.0 * ?d2.0)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Linear_Algebra_Complements.cpx_vec_length_square",
     "\<parallel>?v\<parallel>\<^sup>2 =
      (SUM i = 0..<dim_vec ?v. (cmod (?v $ i))\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Linear_Algebra_Complements.mat_unit_vec_col",
     "[| ?A : carrier_mat ?n ?n; ?i < ?n |]
      ==> ?A *\<^sub>v unit_vec ?n ?i = Matrix.col ?A ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Linear_Algebra_Complements.mat_mult_ket",
     "[| ?A : carrier_mat ?n ?m; dim_vec ?v = ?m |]
      ==> ?A * |?v\<rangle> = |?A *\<^sub>v ?v\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 4, template_var 0), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Linear_Algebra_Complements.unitary_eigenvalues_norm_square",
     "[| Complex_Matrix.unitary ?U; ?U : carrier_mat ?n ?n;
         eigenvalue ?U ?k |]
      ==> conjugate ?k * ?k = 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_hole 0))),
    ("Linear_Algebra_Complements.disjoint_Un",
     "[| disjoint_family_on ?A (insert ?x ?F); ?x ~: ?F |]
      ==> ?A ?x Int \<Union> (?A ` ?F) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0))),
         template_hole 0))),
    ("Linear_Algebra_Complements.tensor_mat_unitary",
     "[| Complex_Matrix.unitary ?U; Complex_Matrix.unitary ?V;
         0 < dim_row ?U; 0 < dim_row ?V |]
      ==> Complex_Matrix.unitary (?U \<Otimes> ?V)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 1)),
        template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linear_Algebra_Complements.sum_4_elems",
     "sum ?f {..<4} = ?f 0 + ?f 1 + ?f 2 + ?f 3",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 5, template_hole 4))))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_var 0, template_hole 2)),
                 template_app (template_var 0, template_hole 1))),
             template_app
              (template_var 0,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))))),
         template_app
          (template_var 0,
           template_app
            (template_hole 6,
             template_app (template_hole 0, template_hole 4)))))),
    ("Linear_Algebra_Complements.trace_add",
     "[| square_mat ?A; square_mat ?B; dim_row ?A = dim_row ?B |]
      ==> Complex_Matrix.trace (?A + ?B) =
          Complex_Matrix.trace ?A + Complex_Matrix.trace ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Linear_Algebra_Complements.diagonal_unit_vec",
     "[| ?B : carrier_mat ?n ?n; diagonal_mat ?B |]
      ==> ?B *\<^sub>v unit_vec ?n ?i =
          ?B $$ (?i, ?i) \<cdot>\<^sub>v unit_vec ?n ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 0))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Linear_Algebra_Complements.sum_2_elems",
     "[| ?I = {?a, ?b}; ?a ~= ?b |] ==> sum ?f ?I = ?f ?a + ?f ?b",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5))),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty), template_var 3),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 0, template_var 2)),
           template_app (template_var 0, template_var 1))))),
    ("Linear_Algebra_Complements.hermitian_minus",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n; hermitian ?A;
         hermitian ?B |]
      ==> hermitian (?A - ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Linear_Algebra_Complements.hermitian_add",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n; hermitian ?A;
         hermitian ?B |]
      ==> hermitian (?A + ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Linear_Algebra_Complements.outer_prod_tensor_comm",
     "[| 0 < dim_vec ?a; 0 < dim_vec ?b |]
      ==> outer_prod (?u \<otimes> ?v) (?a \<otimes> ?b) =
          outer_prod ?u ?a \<Otimes> outer_prod ?v ?b",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 3)),
        template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("Linear_Algebra_Complements.rank_1_proj_coord",
     "[| ?i < dim_vec ?v; ?j < dim_vec ?v |]
      ==> rank_1_proj ?v $$ (?i, ?j) = ?v $ ?i * cnj (?v $ ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("Linear_Algebra_Complements.positive_proj_trace",
     "[| projector ?P; Complex_Matrix.positive ?R; ?P : carrier_mat ?n ?n;
         ?R : carrier_mat ?n ?n |]
      ==> 0 <= Complex_Matrix.trace (?R * ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Linear_Algebra_Complements.projector_collapse_trace",
     "[| projector ?P; ?P : carrier_mat ?n ?n; ?R : carrier_mat ?n ?n |]
      ==> Complex_Matrix.trace (?P * ?R * ?P) =
          Complex_Matrix.trace (?R * ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Linear_Algebra_Complements.unitary_density",
     "[| density_operator ?R; Complex_Matrix.unitary ?U;
         ?R : carrier_mat ?n ?n; ?U : carrier_mat ?n ?n |]
      ==> density_operator (?U * ?R * Complex_Matrix.adjoint ?U)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Linear_Algebra_Complements.mat_vec_mult_assoc",
     "[| ?A : carrier_mat ?n ?p; ?B : carrier_mat ?p ?q; dim_vec ?v = ?q |]
      ==> ?A *\<^sub>v (?B *\<^sub>v ?v) = ?A * ?B *\<^sub>v ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 3, template_var 0), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 0)))),
    ("Linear_Algebra_Complements.pos_sum_1_le",
     "[| finite ?I; ALL i:?I. 0 <= ?f i; sum ?f ?I = 1; ?j : ?I |]
      ==> ?f ?j <= 1",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, t_empty), template_var 2),
          template_hole 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_hole 1))),
    ("Linear_Algebra_Complements.mat_minus_minus",
     "[| ?A : carrier_mat ?n ?m; ?B : carrier_mat ?n ?m;
         ?C : carrier_mat ?n ?m |]
      ==> ?A - (?B - ?C) = ?A - ?B + ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_var 0)))),
    ("Linear_Algebra_Complements.outer_trace_inner",
     "[| ?A : carrier_mat ?n ?n; dim_vec ?u = ?n; dim_vec ?v = ?n |]
      ==> Complex_Matrix.trace (outer_prod ?u ?v * ?A) =
          Complex_Matrix.inner_prod ?v (?A *\<^sub>v ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 7, template_var 1), template_var 2),
        template_equation
         (template_app (template_hole 7, template_var 0), template_var 2)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Linear_Algebra_Complements.fct_bound'",
     "[| ?f (- 1) + ?f 1 = 1; 0 <= ?f 1; 0 <= ?f (- 1) |]
      ==> \<bar>?f 1 - ?f (- 1)\<bar> <= 1",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_var 0,
                template_app (template_hole 6, template_hole 5))),
            template_app (template_var 0, template_hole 5)),
          template_hole 4),
        template_inequation
         (less_equals, template_hole 2,
          template_app (template_var 0, template_hole 5)),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_var 0,
            template_app (template_hole 6, template_hole 5)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 0, template_hole 5)),
             template_app
              (template_var 0,
               template_app (template_hole 6, template_hole 5)))),
         template_hole 4))),
    ("Linear_Algebra_Complements.trace_proj_pos_real",
     "[| projector ?P; Complex_Matrix.positive ?R; ?P : carrier_mat ?n ?n;
         ?R : carrier_mat ?n ?n |]
      ==> complex_of_real (Re (Complex_Matrix.trace (?R * ?P))) =
          Complex_Matrix.trace (?R * ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Linear_Algebra_Complements.index_tensor_vec",
     "[| 0 < dim_vec ?v; ?i < dim_vec ?u * dim_vec ?v |]
      ==> (?u \<otimes> ?v) $ ?i =
          ?u $ (?i div dim_vec ?v) * ?v $ (?i mod dim_vec ?v)",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 7, template_var 0)),
            template_app (template_hole 7, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 7, template_var 2)))),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 7, template_var 2))))))),
    ("Linear_Algebra_Complements.tensor_mat_hermitian",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n' ?n'; 0 < ?n; 0 < ?n';
         hermitian ?A; hermitian ?B |]
      ==> hermitian (?A \<Otimes> ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 0))
            ),
        template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_predicate (template_app (template_hole 1, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("Linear_Algebra_Complements.outer_minus_minus",
     "[| dim_vec ?a = dim_vec ?b; dim_vec ?u = dim_vec ?v |]
      ==> outer_prod (?a - ?b) (?u - ?v) =
          outer_prod ?a ?u - outer_prod ?a ?v - outer_prod ?b ?u +
          outer_prod ?b ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 0))),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("Linear_Algebra_Complements.mat_prod_unit_vec_cong",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n;
         !!i. i < ?n ==>
              ?A *\<^sub>v unit_vec ?n i = ?B *\<^sub>v unit_vec ?n i |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 2, template_var 0))),
    ("Linear_Algebra_Complements.sum_but_one",
     "[| ALL j<?n. j ~= ?i --> ?f j = (0::?'a); ?i < ?n |]
      ==> (SUM j = 0..<?n. ?f j * ?g j) = ?f ?i * ?g ?i",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_than, template_var 2, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 1, template_var 2)),
           template_app (template_var 0, template_var 2))))),
    ("Linear_Algebra_Complements.disj_family_sum",
     "[| finite ?I; disjoint_family_on ?A ?I;
         !!i. i : ?I ==> finite (?A i) |]
      ==> sum ?f (\<Union> (?A ` ?I)) = (SUM n:?I. sum ?f (?A n))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 2))),
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("Linear_Algebra_Complements.fct_bound",
     "[| ?f (- 1) + ?f 1 = 1; 0 <= ?f 1; 0 <= ?f (- 1) |]
      ==> - 1 <= ?f 1 - ?f (- 1) & ?f 1 - ?f (- 1) <= 1",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_var 0,
                template_app (template_hole 7, template_hole 6))),
            template_app (template_var 0, template_hole 6)),
          template_hole 5),
        template_inequation
         (less_equals, template_hole 3,
          template_app (template_var 0, template_hole 6)),
        template_inequation
         (less_equals, template_hole 3,
          template_app
           (template_var 0,
            template_app (template_hole 7, template_hole 6)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 0, template_hole 6)),
                   template_app
                    (template_var 0,
                     template_app (template_hole 7, template_hole 6))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 0, template_hole 6)),
                   template_app
                    (template_var 0,
                     template_app (template_hole 7, template_hole 6)))),
               template_hole 5))
           ))),
    ("Linear_Algebra_Complements.inner_prod_adjoint_comp",
     "[| ?U : carrier_mat ?n ?n; ?V : carrier_mat ?n ?n; ?i < ?n; ?j < ?n |]
      ==> Complex_Matrix.inner_prod (Matrix.col ?V ?i) (Matrix.col ?U ?j) =
          (Complex_Matrix.adjoint ?V * ?U) $$ (?i, ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 3))
            ),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 0)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 4)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Linear_Algebra_Complements.rank_1_proj_mat_col",
     "[| ?A : carrier_mat ?n ?n; ?i < ?n; ?j < ?n; ?k < ?n |]
      ==> rank_1_proj (Matrix.col ?A ?i) $$ (?j, ?k) =
          ?A $$ (?j, ?i) * conjugate (?A $$ (?k, ?i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 3))
            ),
        template_inequation (less_than, template_var 2, template_var 3),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 2))),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2))),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2))))))),
    ("Linear_Algebra_Complements.last_subset",
     "[| ?A <= {?a, ?b}; ?a ~= ?b; ?A ~= {?a, ?b}; ?A ~= {}; ?A ~= {?a} |]
      ==> ?A = {?b}",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3))),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_negation
         (
            template_equation
             (template_var 2,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)))
            ),
        template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_negation
         (
            template_equation
             (template_var 2,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)))),
    ("Linear_Algebra_Complements.tensor_mat_adjoint",
     "[| ?m1.0 : carrier_mat ?r1.0 ?c1.0; ?m2.0 : carrier_mat ?r2.0 ?c2.0;
         0 < ?c1.0; 0 < ?c2.0; 0 < ?r1.0; 0 < ?r2.0 |]
      ==> Complex_Matrix.adjoint (?m1.0 \<Otimes> ?m2.0) =
          Complex_Matrix.adjoint ?m1.0 \<Otimes>
          Complex_Matrix.adjoint ?m2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_inequation (less_than, template_hole 3, template_var 3),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation (less_than, template_hole 3, template_var 4),
        template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 5)),
           template_app (template_hole 1, template_var 2))))),
    ("Linear_Algebra_Complements.times_diag_index",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n; diagonal_mat ?B;
         ?j < ?n; ?i < ?n |]
      ==> Matrix.row (?A * ?B) ?j $ ?i = diag_mat ?B ! ?i * ?A $$ (?j, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 3))
            ),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Linear_Algebra_Complements.index_tensor_mat'",
     "[| 0 < dim_col ?A; 0 < dim_col ?B; ?i < dim_row ?A * dim_row ?B;
         ?j < dim_col ?A * dim_col ?B |]
      ==> (?A \<Otimes> ?B) $$ (?i, ?j) =
          ?A $$ (?i div dim_row ?B, ?j div dim_col ?B) *
          ?B $$ (?i mod dim_row ?B, ?j mod dim_col ?B)",
     template_implication
      ([template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 3)),
        template_inequation
         (less_than, template_hole 10,
          template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 7, template_var 2))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 9, template_var 3)),
            template_app (template_hole 9, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app (template_hole 7, template_var 2))),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 9, template_var 2))))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app (template_hole 7, template_var 2))),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 9, template_var 2))))))))]
