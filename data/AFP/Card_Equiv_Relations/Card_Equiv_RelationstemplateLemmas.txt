   [("Card_Equiv_Relations.finite_equiv",
     "finite ?A ==> finite {R. equiv ?A R}",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Card_Equiv_Relations.card_equiv_rel_eq_card_partitions",
     "card {R. equiv ?A R} = card {P. partition_on ?A P}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, t_empty)),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Card_Equiv_Relations.card_equiv_rel_eq_Bell",
     "finite ?A ==> card {R. equiv ?A R} = Bell (card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Card_Equiv_Relations.bij_betw_partition_of",
     "bij_betw ((//) ?A) {R. equiv ?A R} {P. partition_on ?A P}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 3, t_empty)),
           template_app (template_hole 1, t_empty))
         )),
    ("Card_Equiv_Relations.equiv_quotient_eq_quotient_on_UNIV",
     "equiv ?A ?R ==> ?A // ?R = UNIV // ?R - {{}}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 5, template_hole 3),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Card_Equiv_Relations.card_equiv_rel_eq_sum_Stirling",
     "finite ?A ==>
      card {R. equiv ?A R} = sum (Stirling (card ?A)) {..card ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))))),
    ("Card_Equiv_Relations.equiv_relation_of_partition_of",
     "equiv ?A ?R ==> {(x, y). EX X:?A // ?R. x : X & y : X} = ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_var 0))),
    ("Card_Equiv_Relations.card_equiv_k_classes_eq_card_partitions_k_parts",
     "card {R. equiv ?A R & card (?A // R) = ?k} =
      card {P. partition_on ?A P & card P = ?k}",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, t_empty)),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Card_Equiv_Relations.bij_betw_partition_of_equiv_with_k_classes",
     "bij_betw ((//) ?A) {R. equiv ?A R & card (?A // R) = ?k}
       {P. partition_on ?A P & card P = ?k}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 8, t_empty),
             template_app (template_hole 6, t_empty)),
           template_app (template_hole 1, t_empty))
         ))]
