   [("Bird_Tree.even_odd_mirror_path_involution",
     "even_mirror_path (even_mirror_path ?path) = ?path",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Bird_Tree.even_odd_mirror_path_involution",
     "odd_mirror_path (odd_mirror_path ?path) = ?path",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Bird_Tree.even_mirror_simps",
     "tree.root (even_mirror ?t) = tree.root ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Bird_Tree.odd_mirror_simps",
     "tree.root (odd_mirror ?t) = tree.root ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Bird_Tree.even_mirror_pure", "even_mirror (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bird_Tree.odd_mirror_pure", "odd_mirror (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bird_Tree.even_mirror_simps",
     "tree.left (even_mirror ?t) = odd_mirror (tree.right ?t)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Bird_Tree.odd_mirror_simps",
     "tree.left (odd_mirror ?t) = even_mirror (tree.left ?t)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Bird_Tree.even_mirror_simps",
     "tree.right (even_mirror ?t) = odd_mirror (tree.left ?t)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Bird_Tree.odd_mirror_simps",
     "tree.right (odd_mirror ?t) = even_mirror (tree.right ?t)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Bird_Tree.even_odd_mirror_pure",
     "even_odd_mirror ?even (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bird_Tree.even_odd_mirror_path_injective",
     "(even_mirror_path ?path = even_mirror_path ?path') =
      (?path = ?path')",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Bird_Tree.even_odd_mirror_path_injective",
     "(odd_mirror_path ?path = odd_mirror_path ?path') = (?path = ?path')",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Bird_Tree.even_mirror_ap_tree",
     "even_mirror (?f \<diamondop> ?x) =
      even_mirror ?f \<diamondop> even_mirror ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Bird_Tree.odd_mirror_ap_tree",
     "odd_mirror (?f \<diamondop> ?x) =
      odd_mirror ?f \<diamondop> odd_mirror ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Bird_Tree.even_mirror_traverse_tree",
     "tree.root (traverse_tree ?path (even_mirror ?t)) =
      tree.root (traverse_tree (even_mirror_path ?path) ?t)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Bird_Tree.odd_mirror_traverse_tree",
     "tree.root (traverse_tree ?path (odd_mirror ?t)) =
      tree.root (traverse_tree (odd_mirror_path ?path) ?t)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Bird_Tree.even_odd_mirror_ap_tree",
     "even_odd_mirror ?even (?f \<diamondop> ?x) =
      even_odd_mirror ?even ?f \<diamondop> even_odd_mirror ?even ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Bird_Tree.bird_rationals",
     "[| 0 < ?m; 0 < ?n |]
      ==> tree.root
           (traverse_tree (odd_mirror_path (mk_path ?m ?n))
             (pure rat_of \<diamondop> bird)) =
          Fract (int ?m) (int ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 1),
        template_inequation (less_than, template_hole 11, template_var 0)],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty))),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Bird_Tree.bird_rationals_not_repeated",
     "tree.root (traverse_tree ?path (pure rat_of \<diamondop> bird)) =
      tree.root (traverse_tree ?path' (pure rat_of \<diamondop> bird)) ==>
      ?path = ?path'",
     template_implication
      ([template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, t_empty))),
                template_hole 1))),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, t_empty))),
                template_hole 1))))],
       template_equation (template_var 1, template_var 0)))]
