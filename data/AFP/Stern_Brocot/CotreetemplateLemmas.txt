   [("Cotree.pure_tree_simps", "tree.root (pure ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Cotree.pure_tree_parametric",
     "rel_fun ?A (Cotree.tree.rel_tree ?A) pure pure",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Cotree.mirror_pure", "Cotree.mirror (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cotree.pure_tree_simps", "tree.left (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cotree.pure_tree_simps", "tree.right (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cotree.ap_tree_identity", "pure id \<diamondop> ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Cotree.tree_recurse_simps", "tree.root (tree_recurse ?l ?r ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Cotree.traverse_tree_pure_tree",
     "traverse_tree ?path (pure ?x) = pure ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cotree.map_tree_ap_tree_pure_tree",
     "pure ?f \<diamondop> ?u = Cotree.tree.map_tree ?f ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cotree.map_pure_tree",
     "Cotree.tree.map_tree ?f (pure ?x) = pure (?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Cotree.unfold_tree_simps",
     "tree.root (unfold_tree ?g1.0 ?g22.0 ?g32.0 ?a) = ?g1.0 ?a",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_var 3, template_var 0))),
    ("Cotree.pure_tree_unfold",
     "pure ?x = Cotree.tree.Node ?x (pure ?x) (pure ?x)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Cotree.ap_tree_homomorphism",
     "pure ?f \<diamondop> pure ?x = pure (?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Cotree.mirror_ap_tree",
     "Cotree.mirror (?f \<diamondop> ?x) =
      Cotree.mirror ?f \<diamondop> Cotree.mirror ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cotree.ap_tree_K_tree",
     "pure (%x y. x) \<diamondop> ?u \<diamondop> ?v = ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 1)),
         template_var 0),
       template_var 1)),
    ("Cotree.unfold_tree_tree_iterate",
     "unfold_tree ?out ?l ?r =
      Cotree.tree.map_tree ?out o tree_iterate ?l ?r",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Cotree.ap_tree_interchange",
     "?t \<diamondop> pure ?x = pure (%f. f ?x) \<diamondop> ?t",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 1))),
    ("Cotree.traverse_tree_map_tree",
     "traverse_tree ?path (Cotree.tree.map_tree ?f ?t) =
      Cotree.tree.map_tree ?f (traverse_tree ?path ?t)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Cotree.traverse_tree_append",
     "traverse_tree (?path @ ?ext) ?t =
      traverse_tree ?ext (traverse_tree ?path ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Cotree.rel_tree_rootD",
     "Cotree.tree.rel_tree ?A ?x ?y ==> ?A (tree.root ?x) (tree.root ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Cotree.traverse_tree_simps",
     "traverse_tree (?d # ?path) =
      traverse_tree ?path o (case ?d of L => tree.left | R => tree.right)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 1)))),
    ("Cotree.mirror_unfold",
     "Cotree.mirror (Cotree.tree.Node ?x ?l ?r) =
      Cotree.tree.Node ?x (Cotree.mirror ?r) (Cotree.mirror ?l)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Cotree.tree_recurse_simps",
     "tree.left (tree_recurse ?l ?r ?x) =
      Cotree.tree.map_tree ?l (tree_recurse ?l ?r ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Cotree.tree_recurse_simps",
     "tree.right (tree_recurse ?l ?r ?x) =
      Cotree.tree.map_tree ?r (tree_recurse ?l ?r ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Cotree.rel_tree_leftD",
     "Cotree.tree.rel_tree ?A ?x ?y ==>
      Cotree.tree.rel_tree ?A (tree.left ?x) (tree.left ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Cotree.rel_tree_rightD",
     "Cotree.tree.rel_tree ?A ?x ?y ==>
      Cotree.tree.rel_tree ?A (tree.right ?x) (tree.right ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Cotree.pure_tree_unique",
     "?f = Cotree.tree.Node ?x ?f ?f ==> ?f = pure ?x",
     template_implication
      ([template_equation
         (template_var 1,
          template_app
           (template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1),
            template_var 1))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Cotree.traverse_tree_ap",
     "traverse_tree ?path (?f \<diamondop> ?x) =
      traverse_tree ?path ?f \<diamondop> traverse_tree ?path ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Cotree.unfold_tree_simps",
     "tree.left (unfold_tree ?g1.0 ?g22.0 ?g32.0 ?a) =
      unfold_tree ?g1.0 ?g22.0 ?g32.0 (?g22.0 ?a)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Cotree.unfold_tree_simps",
     "tree.right (unfold_tree ?g1.0 ?g22.0 ?g32.0 ?a) =
      unfold_tree ?g1.0 ?g22.0 ?g32.0 (?g32.0 ?a)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_var 1, template_var 0)))),
    ("Cotree.ap_tree_composition",
     "pure (o) \<diamondop> ?r1.0 \<diamondop> ?r2.0 \<diamondop> ?r3.0 =
      ?r1.0 \<diamondop> (?r2.0 \<diamondop> ?r3.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Cotree.ap_tree_extensional",
     "(!!x. ?f \<diamondop> x = ?g \<diamondop> x) ==> ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Cotree.traverse_tree_tree_iterate",
     "traverse_tree ?path (tree_iterate ?l ?r ?s) =
      tree_iterate ?l ?r (traverse_path ?l ?r ?path ?s)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0)))),
    ("Cotree.ap_tree_W_tree",
     "pure (%f x. f x x) \<diamondop> ?f \<diamondop> ?x =
      ?f \<diamondop> ?x \<diamondop> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Cotree.ap_tree_strong_extensional",
     "(!!x. ?f \<diamondop> pure x = ?g \<diamondop> pure x) ==> ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Cotree.tree_recurse_unfold",
     "tree_recurse ?l ?r ?x =
      Cotree.tree.Node ?x (Cotree.tree.map_tree ?l (tree_recurse ?l ?r ?x))
       (Cotree.tree.map_tree ?r (tree_recurse ?l ?r ?x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Cotree.ap_tree_pure_Node",
     "pure ?f \<diamondop> Cotree.tree.Node ?x ?l ?r =
      Cotree.tree.Node (?f ?x) (pure ?f \<diamondop> ?l)
       (pure ?f \<diamondop> ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 3, template_var 2)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 3)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3)),
           template_var 0)))),
    ("Cotree.ap_tree_Node_Node",
     "Cotree.tree.Node ?f ?fl ?fr \<diamondop> Cotree.tree.Node ?x ?l ?r =
      Cotree.tree.Node (?f ?x) (?fl \<diamondop> ?l) (?fr \<diamondop> ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 5, template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Cotree.ap_tree_C_tree",
     "pure (%f x y. f y x) \<diamondop> ?u \<diamondop> ?v \<diamondop> ?w =
      ?u \<diamondop> ?w \<diamondop> ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, t_empty)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Cotree.tree_iterate_fusion",
     "[| ?h o ?l = ?l' o ?h; ?h o ?r = ?r' o ?h |]
      ==> Cotree.tree.map_tree ?h (tree_iterate ?l ?r ?x) =
          tree_iterate ?l' ?r' (?h ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 5))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_app (template_var 5, template_var 0))))),
    ("Cotree.tree_recurse_fusion",
     "[| ?h o ?l = ?l' o ?h; ?h o ?r = ?r' o ?h |]
      ==> Cotree.tree.map_tree ?h (tree_recurse ?l ?r ?x) =
          tree_recurse ?l' ?r' (?h ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 5))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_app (template_var 5, template_var 0))))),
    ("Cotree.map_unfold_tree",
     "Cotree.tree.map_tree ?G
       (unfold_tree (%f. f ?x) (%f. f o ?l) (%f. f o ?r) ?F) =
      unfold_tree (%f. f ?x) (%f. f o ?l) (%f. f o ?r) (?G o ?F)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty), t_empty),
             t_empty),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_app (template_hole 2, t_empty), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 0)))),
    ("Cotree.unfold_tree_unique",
     "[| !!s. tree.root (?f s) = ?ROOT s;
         !!s. tree.left (?f s) = ?f (?LEFT s);
         !!s. tree.right (?f s) = ?f (?RIGHT s) |]
      ==> ?f ?s = unfold_tree ?ROOT ?LEFT ?RIGHT ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_var 4, template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Cotree.tree_recurse_iterate",
     "[| !!x y z. ?f (?f x y) z = ?f x (?f y z); !!x. ?f x ?\<epsilon> = x;
         !!x. ?f ?\<epsilon> x = x |]
      ==> tree_recurse (?f ?l) (?f ?r) ?\<epsilon> =
          tree_iterate (%x. ?f x ?l) (%x. ?f x ?r) ?\<epsilon>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 3, template_var 0)),
           template_var 2),
         template_app
          (template_app (template_app (template_hole 0, t_empty), t_empty),
           template_var 2)))),
    ("Cotree.set_tree_induct",
     "[| ?x : Cotree.tree.set_tree ?t; !!t. ?P (tree.root t) t;
         !!x t.
            [| x : Cotree.tree.set_tree (tree.left t); ?P x (tree.left t) |]
            ==> ?P x t;
         !!x t.
            [| x : Cotree.tree.set_tree (tree.right t);
               ?P x (tree.right t) |]
            ==> ?P x t |]
      ==> ?P ?x ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Cotree.corec_tree_cong",
     "[| !!x. ?stopL x ==> ?STOPL x = ?STOPL' x;
         !!x. ~ ?stopL x ==> ?LEFT x = ?LEFT' x;
         !!x. ?stopR x ==> ?STOPR x = ?STOPR' x;
         !!x. ~ ?stopR x ==> ?RIGHT x = ?RIGHT' x |]
      ==> corec_tree ?ROOT ?stopL ?STOPL ?LEFT ?stopR ?STOPR ?RIGHT =
          corec_tree ?ROOT ?stopL ?STOPL' ?LEFT' ?stopR ?STOPR' ?RIGHT'",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 10),
                   template_var 9),
                 template_var 7),
               template_var 5),
             template_var 4),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 10),
                   template_var 8),
                 template_var 6),
               template_var 5),
             template_var 3),
           template_var 1))))]
