Loading theory "Draft.Floyd_Warshall" (required by "Draft.Floyd_WarshallTemplates")
Loading theory "HOL-Library.Stream" (required by "Draft.Floyd_WarshallTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Floyd_WarshallTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Floyd_WarshallTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.176s elapsed time, 0.698s cpu time, 0.071s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Floyd_WarshallTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.310s elapsed time, 1.209s cpu time, 0.195s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Floyd_WarshallTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.071s elapsed time, 4.045s cpu time, 0.941s GC time
Found termination order: "size <*mlex*> {}"
"as @ x # bs @ x # cs @ x # ds"
  :: "'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.926s elapsed time, 3.349s cpu time, 0.781s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. size (fst (snd (snd (snd p))))) <*mlex*>
   (%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.921s elapsed time, 5.644s cpu time, 1.080s GC time
Loading theory "Draft.Templates" (required by "Draft.Floyd_WarshallTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.161s cpu time, 0.057s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Floyd_WarshallTemplates")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.724s elapsed time, 1.703s cpu time, 0.643s GC time
Found termination order:
  "(%p. size_list size (snd (snd (snd p)))) <*mlex*> {}"
### theory "Draft.Floyd_Warshall"
### 3.810s elapsed time, 9.108s cpu time, 1.947s GC time
Loading theory "Draft.Floyd_WarshallTemplates"
val templateLemmas =
   [("Floyd_Warshall.remove_all_removes", "?x ~: set (remove_all ?x ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))
             )
         )),
    ("Floyd_Warshall.remove_all_rev_removes",
     "?x ~: set (remove_all_rev ?x ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))
             )
         )),
    ("Floyd_Warshall.remove_all_subs", "set (remove_all ?x ?xs) <= set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Floyd_Warshall.remove_all_cycles_subs",
     "set (remove_all_cycles ?xs ?ys) <= set ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Floyd_Warshall.remove_all_rev_subs",
     "set (remove_all_rev ?x ?xs) <= set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Floyd_Warshall.rem_cycles_distinct",
     "distinct (rem_cycles ?i ?j ?xs)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 0))))
         )),
    ("Floyd_Warshall.remove_all_distinct",
     "distinct ?xs ==> distinct (?x # remove_all ?x ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Floyd_Warshall.remove_all_rev_distinct",
     "distinct ?xs ==> distinct (?x # remove_all_rev ?x ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Floyd_Warshall.rem_cycles_removes_last",
     "?j ~: set (rem_cycles ?i ?j ?xs)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 0)))))
             )
         )),
    ("Floyd_Warshall.remove_cycles_subs",
     "set (remove_cycles ?xs ?x ?ys) <= set ?xs Un set ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("Floyd_Warshall.start_remove_subs",
     "set (start_remove ?xs ?x ?ys) <= set ?xs Un set ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("Floyd_Warshall.rem_cycles_subs",
     "set (rem_cycles ?i ?j ?xs) <= set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)))),
       template_app (template_hole 3, template_var 0))),
    ("Floyd_Warshall.distinct_remove_cycles_inv",
     "distinct (?xs @ ?ys) ==> distinct (remove_cycles ?xs ?x ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Floyd_Warshall.remove_all_cycles_distinct",
     "set ?ys <= set ?xs ==> distinct (remove_all_cycles ?xs ?ys)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Floyd_Warshall.remove_cycles_one",
     "remove_cycles (?as @ ?x # ?xs) ?x ?ys =
      remove_cycles (?x # ?xs) ?x ?ys",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("Floyd_Warshall.FW_out_of_bounds1",
     "?n < ?i ==> FW ?M ?n ?i ?j = ?M ?i ?j",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_app (template_var 1, template_var 2),
           template_var 0)))),
    ("Floyd_Warshall.FW_out_of_bounds2",
     "?n < ?j ==> FW ?M ?n ?i ?j = ?M ?i ?j",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_var 1, template_var 0),
           template_var 2)))),
    ("Floyd_Warshall.cnt_rev", "cnt ?x (rev ?xs) = cnt ?x ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Floyd_Warshall.remove_cycles_id",
     "?x ~: set ?xs ==> remove_cycles ?xs ?x ?ys = rev ?ys @ ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Floyd_Warshall.start_remove_id",
     "?x ~: set ?xs ==> start_remove ?xs ?x ?ys = rev ?ys @ ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Floyd_Warshall.remove_cycles_ends_cycle",
     "remove_cycles ?xs ?x ?ys ~= rev ?ys @ ?xs ==> ?x : set ?xs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Floyd_Warshall.cnt_remove_all_cycles",
     "?x : set ?xs ==> cnt ?x (remove_all_cycles ?xs ?ys) <= 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("Floyd_Warshall.cnt_distinct_intro",
     "ALL x:set ?xs. cnt x ?xs <= 1 ==> distinct ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Floyd_Warshall.rem_cycles_distinct'",
     "?i ~= ?j ==> distinct (?i # ?j # rem_cycles ?i ?j ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 0))))))
           ))),
    ("Floyd_Warshall.remove_cycles_self",
     "?x : set ?xs ==>
      remove_cycles (remove_cycles ?xs ?x ?ys) ?x ?zs =
      remove_cycles ?xs ?x ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 1)))),
    ("Floyd_Warshall.cnt_remove_all_mono",
     "cnt ?y (remove_all_cycles ?xs ?ys) <= max 1 (cnt ?y ?ys)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Floyd_Warshall.start_remove_removes",
     "cnt ?x (start_remove ?xs ?x ?ys) <= Suc (cnt ?x ?ys)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 0))))),
    ("Floyd_Warshall.fw_canonical_id",
     "[| canonical_subs ?n {0..?k} ?M; ?k <= ?n |] ==> fw ?M ?n ?k = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Floyd_Warshall.remove_cycles_removes",
     "cnt ?x (remove_cycles ?xs ?x ?ys) <= max 1 (cnt ?x ?ys)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0))))),
    ("Floyd_Warshall.cnt_mono",
     "cnt ?a (?b # ?xs) <= cnt ?a (?b # ?c # ?xs)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Floyd_Warshall.remove_cycles_begins_with",
     "?x : set ?xs ==>
      EX zs. remove_cycles ?xs ?x ?ys = ?x # zs & ?x ~: set zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Floyd_Warshall.fw_upd_canonical_subs_id",
     "[| canonical_subs ?n {?k} ?M; ?i <= ?n; ?j <= ?n |]
      ==> fw_upd ?M ?k ?i ?j = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("Floyd_Warshall.fwi_canonical_id",
     "[| canonical_subs ?n {?k} ?M; ?i <= ?n; ?j <= ?n; ?k <= ?n |]
      ==> fwi ?M ?n ?k ?i ?j = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 3),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("Floyd_Warshall.remove_cycles_cnt_id",
     "?x ~= ?y ==>
      cnt ?y (remove_cycles ?xs ?x ?ys) <= cnt ?y ?ys + cnt ?y ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_var 1)))))),
    ("Floyd_Warshall.start_remove_cnt_id",
     "?x ~= ?y ==>
      cnt ?y (start_remove ?xs ?x ?ys) <= cnt ?y ?ys + cnt ?y ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_var 1)))))),
    ("Floyd_Warshall.remove_cycles_cycles",
     "?x : set ?xs ==>
      EX xxs as.
         as @ concat (map ((#) ?x) xxs) @ remove_cycles ?xs ?x ?ys = ?xs &
         ?x ~: set as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Floyd_Warshall.start_remove_decomp",
     "?x : set ?xs ==>
      EX as bs.
         ?xs = as @ ?x # bs &
         start_remove ?xs ?x ?ys = rev ?ys @ as @ remove_cycles bs ?x [?x]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Floyd_Warshall.cyc_free_diag_dest'",
     "[| ALL i xs.
            i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?m i i xs;
         ?i <= ?n |]
      ==> (0::?'a) <= ?m ?i ?i",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_var 1, template_var 0),
           template_var 0)))),
    ("Floyd_Warshall.FW_canonical_id", "canonical ?M ?k ==> FW ?M ?k = ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 1),
         template_var 0))),
    ("Floyd_Warshall.fwi_characteristic",
     "[| canonical_subs ?n ?I ?M; ?I <= {0..?n}; ?k <= ?n |]
      ==> canonical_subs ?n (?I Un {?k}) (FWI ?M ?n ?k) |
          (EX i<=?n. FWI ?M ?n ?k i i < (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 3)),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 13, template_var 3),
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5))),
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 3),
                   template_var 0))),
             template_app (template_hole 3, t_empty))
           ))),
    ("Floyd_Warshall.diag_cyc_free_neutral",
     "[| ALL i xs.
            i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?M i i xs;
         ALL k<=?n. ?M k k <= (0::?'a) |]
      ==> ALL i<=?n. ?M i i = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Floyd_Warshall.FW_cyc_free_preservation",
     "ALL i xs.
         i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?m i i xs ==>
      ALL i xs.
         i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len (FW ?m ?n) i i xs",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Floyd_Warshall.FW_diag_neutral_preservation",
     "[| ALL i<=?n. ?M i i = (0::?'a);
         ALL i xs.
            i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?M i i xs |]
      ==> ALL i<=?n. FW ?M ?n i i = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Floyd_Warshall.fw_upd_canonical_id",
     "[| canonical ?M ?n; ?i <= ?n; ?j <= ?n; ?k <= ?n |]
      ==> fw_upd ?M ?k ?i ?j = ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 2),
           template_var 1),
         template_var 3))),
    ("Floyd_Warshall.canonical_len",
     "[| canonical ?M ?n; ?i <= ?n; ?j <= ?n; set ?xs <= {0..?n} |]
      ==> ?M ?i ?j <= len ?M ?i ?j ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 4))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_var 3, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Floyd_Warshall.fw_canonical",
     "ALL i xs.
         i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?m i i xs ==>
      canonical (FW ?m ?n) ?n",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Floyd_Warshall.D_cycle_free_len_dest",
     "[| cycle_free ?m ?n; ALL i<=?n. ALL j<=?n. D ?m i j ?n = ?m' i j;
         ?i <= ?n; ?j <= ?n; set ?xs <= {0..?n} |]
      ==> EX ys. set ys <= {0..?n} & len ?m' ?i ?j ?xs = len ?m ?i ?j ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 4))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Floyd_Warshall.D_cyc_free_preservation",
     "[| ALL i xs.
            i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?m i i xs;
         ALL i<=?n. ALL j<=?n. D ?m i j ?n = ?m' i j |]
      ==> ALL i xs.
             i <= ?n & set xs <= {0..?n} --> (0::?'a) <= len ?m' i i xs",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Floyd_Warshall.FW_fixed_preservation",
     "[| ?i <= ?n; ?M 0 ?i + ?M ?i 0 = (0::?'a); canonical (FW ?M ?n) ?n;
         ALL i xs.
            i <= ?n & set xs <= {0..?n} -->
            (0::?'a) <= len (FW ?M ?n) i i xs |]
      ==> FW ?M ?n 0 ?i + FW ?M ?n ?i 0 = (0::?'a)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_var 0, template_hole 11),
                template_var 2)),
            template_app
             (template_app (template_var 0, template_var 2),
              template_hole 11)),
          template_hole 10),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1),
                   template_var 1),
                 template_hole 11),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1),
                 template_var 1),
               template_var 2),
             template_hole 11)),
         template_hole 10)))]:
   (string * thm * template) list
### theory "Draft.Floyd_WarshallTemplates"
### 0.316s elapsed time, 0.584s cpu time, 0.045s GC time
val it = (): unit
