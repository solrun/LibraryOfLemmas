   [("IMO2019_Q4.multiplicity_prime_fact",
     "prime ?p ==> multiplicity ?p (fact ?n) = legendre_aux (real ?n) ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("IMO2019_Q4.Sigma_insert",
     "Sigma (insert ?x ?A) ?f = Pair ?x ` ?f ?x Un Sigma ?A ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_var 0, template_var 2))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("IMO2019_Q4.atLeastAtMost_nat_numeral",
     "{?m..numeral ?k} =
      (if ?m <= numeral ?k then insert (numeral ?k) {?m..pred_numeral ?k}
       else {})",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app (template_hole 1, template_var 0)))),
         template_hole 0))),
    ("IMO2019_Q4.greaterThanAtMost_nat_numeral",
     "{?m<..numeral ?k} =
      (if ?m < numeral ?k then insert (numeral ?k) {?m<..pred_numeral ?k}
       else {})",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app (template_hole 1, template_var 0)))),
         template_hole 0))),
    ("IMO2019_Q4.prime_multiplicity_prime",
     "[| prime ?p; prime ?q |]
      ==> multiplicity ?p ?q = (if ?p = ?q then 1 else 0)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_hole 1),
               template_hole 0)
             )))),
    ("IMO2019_Q4.legendre_aux_ge",
     "[| prime ?p; 1 <= ?k |]
      ==> nat \<lfloor>?k / real ?p\<rfloor> <= legendre_aux ?k ?p",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_inequation (less_equals, template_hole 6, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("IMO2019_Q4.legendre_aux_less",
     "[| prime ?p; 1 <= ?k |]
      ==> real (legendre_aux ?k ?p) < ?k / (real ?p - 1)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_inequation (less_equals, template_hole 5, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 1)),
             template_hole 5))))),
    ("IMO2019_Q4.fact_ge_power",
     "[| ?c ^ ?n0.0 <= fact ?n0.0; ?c <= ?n0.0 + 1; ?n0.0 <= ?n |]
      ==> ?c ^ ?n <= fact ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 1)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_hole 0)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 2), template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("IMO2019_Q4.n_less_7",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> ?n < 7",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 1),
        template_inequation (less_than, template_hole 10, template_var 0),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app
           (template_app (template_hole 7, t_empty),
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_hole 4,
           template_app
            (template_hole 0,
             template_app (template_hole 0, template_hole 2)))))),
    ("IMO2019_Q4.k_gt_T",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> ?n * (?n - 1) div 2 < ?k",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 1),
        template_inequation (less_than, template_hole 12, template_var 0),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app
           (template_app (template_hole 9, t_empty),
            template_app (template_hole 3, template_var 0)))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 0))),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_var 1))),
    ("IMO2019_Q4.T_ge_half_k",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> ?k div 2 <= ?n * (?n - 1) div 2",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 1),
        template_inequation (less_than, template_hole 13, template_var 0),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_app
           (template_app (template_hole 10, t_empty),
            template_app (template_hole 4, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_hole 5))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_hole 0))),
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_hole 5)))))),
    ("IMO2019_Q4.n_k_in_set",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> (?n, ?k) : {(1, 1), (2, 3)}",
     template_implication
      ([template_inequation (less_than, template_hole 15, template_var 1),
        template_inequation (less_than, template_hole 15, template_var 0),
        template_equation
         (template_app (template_hole 13, template_var 1),
          template_app
           (template_app (template_hole 12, t_empty),
            template_app (template_hole 6, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 4, template_hole 2),
                   template_hole 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 7))),
                     template_app
                      (template_hole 9,
                       template_app (template_hole 1, template_hole 7)))),
                 template_hole 0)))
           ))),
    ("IMO2019_Q4.rhs_less",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> (PROD i<?n. 2 ^ ?n - 2 ^ i) < 2 ^ ?n\<^sup>2",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 9, template_var 0),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app (template_hole 6, t_empty),
            template_app (template_hole 0, template_var 0)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))))),
    ("IMO2019_Q4.multiplicity_2_rhs",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> multiplicity 2 (PROD i<?n. 2 ^ ?n - 2 ^ i) = ?n * (?n - 1) div 2",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 1),
        template_inequation (less_than, template_hole 13, template_var 0),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_app
           (template_app (template_hole 10, t_empty),
            template_app (template_hole 4, template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_app
            (template_app (template_hole 10, t_empty),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_hole 0))),
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_hole 5)))))),
    ("IMO2019_Q4.rhs_altdef",
     "[| 0 < ?k; 0 < ?n; fact ?k = (PROD i<?n. 2 ^ ?n - 2 ^ i) |]
      ==> (PROD i<?n. 2 ^ ?n - 2 ^ i) =
          2 ^ (?n * (?n - 1) div 2) * (PROD i = 1..?n. 2 ^ i - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 1),
        template_inequation (less_than, template_hole 13, template_var 0),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_app
           (template_app (template_hole 10, t_empty),
            template_app (template_hole 4, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 10, t_empty),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_hole 1))),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))))),
           template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 0))))))]
