   [("Priority_Queue_Braun.braun_del_min",
     "braun ?t ==> braun (del_min ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Priority_Queue_Braun.braun_insert",
     "braun ?t ==> braun (Priority_Queue_Braun.insert ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Priority_Queue_Braun.heap_insert",
     "heap ?t ==> heap (Priority_Queue_Braun.insert ?x ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Priority_Queue_Braun.size_insert",
     "size (Priority_Queue_Braun.insert ?x ?t) = size ?t + 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Priority_Queue_Braun.set_insert",
     "set_tree (Priority_Queue_Braun.insert ?x ?t) = {?x} Un set_tree ?t",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app (template_hole 4, template_var 0)))),
    ("Priority_Queue_Braun.mset_insert",
     "mset_tree (Priority_Queue_Braun.insert ?x ?t) =
      {#?x#} + mset_tree ?t",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app (template_hole 4, template_var 0)))),
    ("Priority_Queue_Braun.heap_del_min",
     "[| heap ?t; braun ?t |] ==> heap (del_min ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Priority_Queue_Braun.size_del_min",
     "braun ?t ==> size (del_min ?t) = size ?t - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("Priority_Queue_Braun.braun_sift_down",
     "braun \<langle>?l, ?a, ?r\<rangle> ==> braun (sift_down ?l ?a ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Priority_Queue_Braun.get_min",
     "[| heap ?t; ?t ~= \<langle>\<rangle> |]
      ==> get_min ?t = Min_mset (mset_tree ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Priority_Queue_Braun.height_size_braun",
     "braun ?t ==> 2 ^ height ?t <= 2 * size ?t + 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("Priority_Queue_Braun.size_sift_down",
     "braun \<langle>?l, ?a, ?r\<rangle> ==>
      size (sift_down ?l ?a ?r) = size ?l + size ?r + 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 2)),
               template_app (template_hole 3, template_var 0))),
           template_hole 0)))),
    ("Priority_Queue_Braun.heap_sift_down",
     "[| braun \<langle>?l, ?a, ?r\<rangle>; heap ?l; heap ?r |]
      ==> heap (sift_down ?l ?a ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Priority_Queue_Braun.del_left_braun",
     "[| del_left ?t = (?x, ?t'); ?t ~= \<langle>\<rangle>; braun ?t |]
      ==> braun ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_predicate
         (template_app (template_hole 0, template_var 2))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Priority_Queue_Braun.del_left_heap",
     "[| del_left ?t = (?x, ?t'); ?t ~= \<langle>\<rangle>; heap ?t |]
      ==> heap ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_predicate
         (template_app (template_hole 0, template_var 2))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Priority_Queue_Braun.mset_del_min",
     "[| braun ?t; ?t ~= \<langle>\<rangle> |]
      ==> mset_tree (del_min ?t) = mset_tree ?t - {#get_min ?t#}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("Priority_Queue_Braun.del_left_size",
     "[| del_left ?t = (?x, ?t'); ?t ~= \<langle>\<rangle> |]
      ==> size ?t = size ?t' + 1",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_hole 0)))),
    ("Priority_Queue_Braun.set_sift_down",
     "braun \<langle>?l, ?a, ?r\<rangle> ==>
      set_tree (sift_down ?l ?a ?r) = {?a} Un (set_tree ?l Un set_tree ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 4, template_var 0)))))),
    ("Priority_Queue_Braun.mset_sift_down",
     "braun \<langle>?l, ?a, ?r\<rangle> ==>
      mset_tree (sift_down ?l ?a ?r) =
      {#?a#} + (mset_tree ?l + mset_tree ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 4, template_var 0)))))),
    ("Priority_Queue_Braun.del_left_set",
     "[| del_left ?t = (?x, ?t'); ?t ~= \<langle>\<rangle> |]
      ==> set_tree ?t = {?x} Un set_tree ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_app (template_hole 3, template_var 0))))),
    ("Priority_Queue_Braun.del_left_mset_plus",
     "[| del_left ?t = (?x, ?t'); ?t ~= \<langle>\<rangle> |]
      ==> mset_tree ?t = {#?x#} + mset_tree ?t'",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_app (template_hole 3, template_var 0))))),
    ("Priority_Queue_Braun.del_left_mset",
     "[| del_left ?t = (?x, ?t'); ?t ~= \<langle>\<rangle> |]
      ==> ?x :# mset_tree ?t & mset_tree ?t' = mset_tree ?t - {#?x#}",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 2)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 4, template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))))
           )))]
