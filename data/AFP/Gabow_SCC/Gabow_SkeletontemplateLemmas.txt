   [("Gabow_Skeleton.path_seg_simps", "path_seg ?p ?i (Suc ?i) = ?p ! ?i",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Gabow_Skeleton.GS_sel_simps", "GS.I (?S, ?B, ?I, ?P) = ?I",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_var 1)),
    ("Gabow_Skeleton.GS_sel_simps", "GS.S (?S, ?B, ?I, ?P) = ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_var 3)),
    ("Gabow_Skeleton.GS_sel_simps", "GS.B (?S, ?B, ?I, ?P) = ?B",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_var 2)),
    ("Gabow_Skeleton.GS_sel_simps", "GS.P (?S, ?B, ?I, ?P) = ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_var 0)),
    ("Gabow_Skeleton.path_seg_drop",
     "\<Union> (set (drop ?i ?p)) = path_seg ?p ?i (length ?p)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Gabow_Skeleton.path_seg_simps", "?j <= ?i ==> path_seg ?p ?i ?j = {}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_var 2),
         template_hole 0))),
    ("Gabow_Skeleton.discard_stat_refine",
     "?m1.0 <= ?m2.0 ==> stat_newnode_nres >>= (%_. ?m1.0) <= ?m2.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           t_empty),
         template_var 0))),
    ("Gabow_Skeleton.discard_stat_refine",
     "?m1.0 <= ?m2.0 ==> stat_start_nres >>= (%_. ?m1.0) <= ?m2.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           t_empty),
         template_var 0))),
    ("Gabow_Skeleton.discard_stat_refine",
     "?m1.0 <= ?m2.0 ==> stat_stop_nres >>= (%_. ?m1.0) <= ?m2.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           t_empty),
         template_var 0))),
    ("Gabow_Skeleton.GS_initial_correct",
     "[| (?I, ?D) : oGS_rel; ?v0.0 ~: ?D |]
      ==> GS_invar (GS_initial_impl ?I ?v0.0 ?succs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_hole 4)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0))
           ))),
    ("Gabow_Skeleton.path_seg_butlast",
     "?p ~= [] ==>
      path_seg ?p 0 (length ?p - Suc 0) = \<Union> (set (butlast ?p))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app (template_hole 3, template_hole 6))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Gabow_Skeleton.find_max_nat_correct",
     "[| ?P 0; 0 < ?u |] ==> find_max_nat ?u ?P = Max {i. i < ?u & ?P i}",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 6)),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Gabow_Skeleton.GS_initial_correct",
     "[| (?I, ?D) : oGS_rel; ?v0.0 ~: ?D |]
      ==> GS.\<alpha> (GS_initial_impl ?I ?v0.0 ?succs) =
          ([{?v0.0}], ?D, {?v0.0} \<times> ?succs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2)),
              template_hole 12)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3)),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3)),
               t_empty)))))),
    ("Gabow_Skeleton.find_max_nat_param",
     "[| (?n, ?n') : nat_rel;
         !!j j'.
            [| (j, j') : nat_rel; j' < ?n' |]
            ==> (?P j, ?P' j') : bool_rel |]
      ==> (find_max_nat ?n ?P, find_max_nat ?n' ?P') : nat_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_hole 6)
           ))),
    ("Gabow_Skeleton.idx_of_props",
     "[| ALL i j v.
            i < length ?p & j < length ?p & v : ?p ! i & v : ?p ! j -->
            i = j;
         ?v : \<Union> (set ?p) |]
      ==> idx_of ?p ?v < length ?p",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app (template_hole 6, template_var 1)))),
    ("Gabow_Skeleton.idx_of_props",
     "[| ALL i j v.
            i < length ?p & j < length ?p & v : ?p ! i & v : ?p ! j -->
            i = j;
         ?v : \<Union> (set ?p) |]
      ==> ?v : ?p ! idx_of ?p ?v",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Gabow_Skeleton.idx_of_uniq",
     "[| ALL i j v.
            i < length ?p & j < length ?p & v : ?p ! i & v : ?p ! j -->
            i = j;
         ?i < length ?p; ?v : ?p ! ?i |]
      ==> idx_of ?p ?v = ?i",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Gabow_Skeleton.find_max_nat_autoref",
     "[| (?n, ?n') : nat_rel;
         !!j j'.
            [| (j, j') : nat_rel; j' < ?n' |]
            ==> (?P j, ?P' $ j') : bool_rel |]
      ==> (find_max_nat ?n ?P,
           (Autoref_Tagging.OP find_max_nat :::
            nat_rel \<rightarrow>
            (nat_rel \<rightarrow> bool_rel) \<rightarrow> nat_rel) $
           ?n' $
           ?P')
          : nat_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_var 2)),
              template_hole 21)
            ),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app (template_hole 14, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_hole 14)),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 7, template_hole 6),
                                   template_hole 21)),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_app
(template_app
  (template_hole 2,
   template_app
    (template_app (template_hole 1, template_hole 0), template_hole 21)),
 template_hole 15))),
                                 template_hole 21))))),
                       template_var 2)),
                   template_var 0))),
             template_hole 21)
           )))]
