   [("CupCake_Semantics.cupcake_nsLookup_eq",
     "nsLookup ?ns (Short ?n) = cupcake_nsLookup ?ns ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CupCake_Semantics.list_all2_shortcircuit_mono",
     "?R <= ?Q ==> list_all2_shortcircuit ?R <= list_all2_shortcircuit ?Q",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CupCake_Semantics.list_all2_shortcircuit_rval",
     "list_all2_shortcircuit ?P ?xs (map Rval ?ys) =
      list_all2 (%x y. ?P x (Rval y)) ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0))),
    ("CupCake_Semantics.cupcake_pmatch_eq",
     "is_cupcake_pat ?pat ==>
      pmatch_single ?envC ?s ?pat ?v0.0 ?env =
      cupcake_pmatch ?envC ?pat ?v0.0 ?env",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 4),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4),
             template_var 1),
           template_var 0)))),
    ("CupCake_Semantics.list_all2_shortcircuit_weaken",
     "[| list_all2_shortcircuit ?P ?xs ?ys;
         !!xs ys. ?P xs ys ==> ?Q xs ys |]
      ==> list_all2_shortcircuit ?Q ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("CupCake_Semantics.cupcake_match_result_eq",
     "cupcake_clauses ?pes ==>
      match_result ?env ?s ?v ?pes ?err_v =
      map_result (%(e, uu_, env'). (e, env')) id
       (cupcake_match_result (sem_env.c ?env) ?v ?pes ?err_v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13, template_app (template_hole 12, t_empty)),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_var 1),
               template_var 4),
             template_var 0))))),
    ("CupCake_Semantics.cupcake_match_resultE",
     "[| cupcake_match_result ?cenv ?v0.0 ?pes ?err_v =
         Rval (?e, ?p, ?env');
         !!init rest.
            [| ?pes = init @ (?p, ?e) # rest; distinct (pat_bindings ?p []);
               list_all
                (%(p, e).
                    cupcake_pmatch ?cenv p ?v0.0 [] = No_match &
                    distinct (pat_bindings p []))
                init;
               cupcake_pmatch ?cenv ?p ?v0.0 [] = Match ?env' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_var 3),
              template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1)))),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("CupCake_Semantics.list_all2_shortcircuit_induct",
     "[| list_all2_shortcircuit ?P ?xs ?ys; ?R [] [];
         !!x xs y ys.
            [| ?P x (Rval y); list_all2_shortcircuit ?P xs ys; ?R xs ys |]
            ==> ?R (x # xs) (Rval y # ys);
         !!x xs y ys. ?P x (Rerr y) ==> ?R (x # xs) (Rerr y # ys) |]
      ==> ?R ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 10),
              template_hole 9)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           )))]
