   [("Propositional_Logic.fair_stl", "fair ?rs ==> fair (stl ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Propositional_Logic.sdrop_fair", "fair ?rs ==> fair (sdrop ?m ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Propositional_Logic.max_depth_0",
     "(max_depth ?\<phi> = 0) = (EX n. ?\<phi> = Atom n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Propositional_Logic.pos_least",
     "shd (sdrop ?n ?rs) = ?r ==> pos ?rs ?r <= ?n",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Propositional_Logic.enabled_R",
     "?s : UNIV ==> EX r:R. EX sl. eff' r ?s = Some sl",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             t_empty)
           ))),
    ("Propositional_Logic.per", "?r : R ==> per ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_hole 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, t_empty), template_hole 5),
               template_hole 0),
             template_var 0)
           ))),
    ("Propositional_Logic.pos",
     "[| fair ?rs; ?r : R |] ==> shd (sdrop (pos ?rs ?r) ?rs) = ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 6))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)),
         template_var 0))),
    ("Propositional_Logic.trim_fair",
     "[| ?s : UNIV; fair ?rs |] ==> fair (trim ?rs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, t_empty), template_var 0),
               template_var 1))
           ))),
    ("Propositional_Logic.trim_in_R",
     "[| ?s : UNIV; fair ?rs |] ==> shd (trim ?rs ?s) : R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, t_empty),
                     template_var 0),
                   template_var 1))),
             template_app (template_hole 0, template_hole 7))
           ))),
    ("Propositional_Logic.minWait_ex",
     "[| ?s : UNIV; fair ?rs |] ==> EX n. enabled (shd (sdrop n ?rs)) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Propositional_Logic.eff_S",
     "[| ?s : UNIV; ?r : R; eff' ?r ?s = Some ?sl; ?s' |\<in>| ?sl |]
      ==> ?s' : UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_hole 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_hole 4))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 3),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7)
           ))),
    ("Propositional_Logic.pickEff",
     "enabled ?r ?s ==> eff' ?r ?s = Some (pickEff ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty), template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 1),
             template_var 0))))),
    ("Propositional_Logic.minWait_least",
     "enabled (shd (sdrop ?n ?rs)) ?s ==> minWait ?rs ?s <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty),
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, t_empty), template_var 1),
           template_var 0),
         template_var 2))),
    ("Propositional_Logic.wf_ipath_epath",
     "[| Propositional_Logic.wf ?t; ipath ?t ?steps |] ==> epath ?steps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_hole 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_hole 2),
             template_var 0)
           ))),
    ("Propositional_Logic.wf_mkTree",
     "[| ?s : UNIV; fair ?rs |] ==> Propositional_Logic.wf (mkTree ?rs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), template_hole 5),
             template_app
              (template_app
                (template_app (template_hole 0, t_empty), template_var 0),
               template_var 1))
           ))),
    ("Propositional_Logic.trim_enabled",
     "[| ?s : UNIV; fair ?rs |] ==> enabled (shd (trim ?rs ?s)) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, t_empty),
                     template_var 0),
                   template_var 1))),
             template_var 1)
           ))),
    ("Propositional_Logic.max_depth_Suc",
     "(max_depth ?\<phi> = Suc ?n) =
      ((EX \<psi>. ?\<phi> = Neg \<psi> & max_depth \<psi> = ?n) |
       (EX \<psi>1 \<psi>2.
           ?\<phi> = Conj \<psi>1 \<psi>2 &
           max (max_depth \<psi>1) (max_depth \<psi>2) = ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)))),
    ("Propositional_Logic.trim_alt",
     "[| ?s : UNIV; fair ?rs |]
      ==> trim ?rs ?s = sdrop (minWait ?rs ?s) ?rs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, t_empty), template_var 0),
               template_var 1)),
           template_var 0)))),
    ("Propositional_Logic.ipath_mkTree_Saturated",
     "[| ?s : UNIV; fair ?rs; ipath (mkTree ?rs ?s) ?steps |]
      ==> Saturated ?steps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, t_empty),
                    template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_hole 6),
             template_var 0)
           ))),
    ("Propositional_Logic.minWait_le_pos",
     "[| fair ?rs; ?r : R; enabled ?r ?s |]
      ==> minWait ?rs ?s <= pos ?rs ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 2),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Propositional_Logic.ipath_mkTree_saturated",
     "[| ?s : UNIV; fair ?rs; ipath (mkTree ?rs ?s) ?steps; ?r : R |]
      ==> saturated ?r ?steps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app (template_hole 6, t_empty),
                    template_var 2),
                  template_var 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_hole 8))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 0),
             template_var 1)
           ))),
    ("Propositional_Logic.ipath_mkTree_sdrop",
     "[| ?s : UNIV; fair ?rs; ipath (mkTree ?rs ?s) ?steps |]
      ==> EX n s'.
             s' : UNIV & ipath (mkTree (sdrop n ?rs) s') (sdrop ?m ?steps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 8, t_empty),
                    template_var 2),
                  template_var 3)),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Propositional_Logic.mkTree_unfold",
     "mkTree ?rs ?s =
      (case trim ?rs ?s of
       r ## s' =>
         Abstract_Completeness.tree.Node (?s, r)
          (mkTree s' |`| pickEff r ?s))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, t_empty), template_var 1),
           template_var 0)))),
    ("Propositional_Logic.ipath_mkTree_ev",
     "[| ?s : UNIV; fair ?rs; ipath (mkTree ?rs ?s) ?steps; ?r : R;
         alw (holds (enabledAtStep ?r)) ?steps |]
      ==> ev (holds (%step. snd step = ?r)) ?steps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_hole 16)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 12, t_empty),
                    template_var 2),
                  template_var 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 5, t_empty)),
             template_var 1)
           ))),
    ("Propositional_Logic.extendLevel_Nsteps",
     "[| i.R ?belowN = {\<phi>. max_depth \<phi> < ?n};
         i.R ?N = {\<phi>. max_depth \<phi> = ?n} |]
      ==> EX belowNext Next.
             (extendLevel ^^ ?m) (?belowN, ?N) = (belowNext, Next) &
             i.R belowNext = {\<phi>. max_depth \<phi> < ?n + ?m} &
             i.R Next = {\<phi>. max_depth \<phi> = ?n + ?m}",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 3),
          template_app (template_hole 10, t_empty)),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_app (template_hole 10, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Propositional_Logic.extendLevel_step",
     "[| i.R ?belowN = {\<phi>. max_depth \<phi> < ?n};
         i.R ?N = {\<phi>. max_depth \<phi> = ?n}; ?st = (?belowN, ?N) |]
      ==> EX belowNext Next.
             extendLevel ?st = (belowNext, Next) &
             i.R belowNext = {\<phi>. max_depth \<phi> < Suc ?n} &
             i.R Next = {\<phi>. max_depth \<phi> = Suc ?n}",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 3),
          template_app (template_hole 9, t_empty)),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, t_empty)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Propositional_Logic.epath_completeness_Saturated",
     "?s : UNIV ==>
      (EX t. fst (tree.root t) = ?s &
             Propositional_Logic.wf t & tfinite t) |
      (EX steps. fst (shd steps) = ?s & epath steps & Saturated steps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 0),
              template_hole 16)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 14, t_empty)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Propositional_Logic.extendLevel",
     "EX belowNext Next.
         (extendLevel ^^ ?m) (atoms, depth1) = (belowNext, Next) &
         i.R belowNext = {\<phi>. max_depth \<phi> < 1 + ?m} &
         i.R Next = {\<phi>. max_depth \<phi> = 1 + ?m}",
     template_predicate (template_app (template_hole 25, t_empty))),
    ("Propositional_Logic.stake_pos_minWait",
     "[| fair ?rs; minWait ?rs ?s < pos ?rs ?r; ?r : R; ?s : UNIV |]
      ==> pos (stl (trim ?rs ?s)) ?r = pos ?rs ?r - Suc (minWait ?rs ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_hole 15),
              template_var 2)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 13, t_empty), template_var 2),
            template_var 1),
          template_app
           (template_app (template_hole 9, template_var 2),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, t_empty), template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 9, template_var 2),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 13, t_empty), template_var 2),
               template_var 1)))))),
    ("Propositional_Logic.per_alw",
     "[| per ?r; epath ?steps & fst (shd ?steps) : UNIV |]
      ==> alw (%xs. holds (enabledAtStep ?r) xs -->
                    holds (%step. snd step = ?r) xs |
                    nxt (holds (enabledAtStep ?r)) xs)
           ?steps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, t_empty),
                  template_hole 14),
                template_hole 13),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 11, t_empty),
                    template_hole 14),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0))),
                template_hole 13))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, t_empty), template_var 0)
           ))),
    ("Propositional_Logic.in_cont_mkTree",
     "[| ?s : UNIV; fair ?rs; ?t' |\<in>| cont (mkTree ?rs ?s) |]
      ==> EX sl' s'.
             s' : UNIV &
             eff' (shd (trim ?rs ?s)) ?s = Some sl' &
             s' |\<in>| sl' & ?t' = mkTree (stl (trim ?rs ?s)) s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_hole 16)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 11, t_empty),
                    template_var 1),
                  template_var 2)))
            )],
       template_predicate (template_app (template_hole 7, t_empty))))]
