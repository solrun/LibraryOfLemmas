   [("SC.BotL_canonical", "\<bottom>, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)
         )),
    ("SC.Bot_delR_simp",
     "?\<Gamma> \<Rightarrow> \<bottom>, ?\<Delta> =
      ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("SC.Ax_canonical",
     "Atom ?k, ?\<Gamma> \<Rightarrow> Atom ?k, ?\<Delta>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))
         )),
    ("SC.weakenR_set",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F + ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SC.weakenR",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SC.weakenL_set",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?F + ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("SC.weakenL",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?F, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("SC.extended_Ax",
     "?\<Gamma> \<inter># ?\<Delta> ~= {#} ==>
      ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SC.Bot_delR",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?\<Delta> - (\<bottom>, {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)))
           ))),
    ("SC.NotR_inv",
     "?\<Gamma> \<Rightarrow> \<^bold>\<not> ?F, ?\<Delta> ==>
      ?F, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("SC.NotL_inv",
     "\<^bold>\<not> ?F, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Stream.sdrop_while_SCons",
     "sdrop_while ?P (?a ## ?s) =
      (if ?P ?a then sdrop_while ?P ?s else ?a ## ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SC.inR1",
     "?\<Gamma> \<Rightarrow> ?G, ?H, ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?H, ?G, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SC.ImpR_inv",
     "?\<Gamma> \<Rightarrow> ?F \<^bold>\<rightarrow> ?G, ?\<Delta> ==>
      ?F, ?\<Gamma> \<Rightarrow> ?G, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("SC.OrR_inv",
     "?\<Gamma> \<Rightarrow> ?F \<^bold>\<or> ?G, ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F, ?G, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("SC.inL1",
     "?G, ?H, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?H, ?G, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_var 0)
           ))),
    ("SC.AndL_inv",
     "?F \<^bold>\<and> ?G, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?F, ?G, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("SC.AndR_inv",
     "?\<Gamma> \<Rightarrow> ?F \<^bold>\<and> ?G, ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F, ?\<Delta> &
      ?\<Gamma> \<Rightarrow> ?G, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))
           ))),
    ("SC.ImpL_inv",
     "?F \<^bold>\<rightarrow> ?G, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F, ?\<Delta> &
      ?G, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("SC.OrL_inv",
     "?F \<^bold>\<or> ?G, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?F, ?\<Gamma> \<Rightarrow> ?\<Delta> &
      ?G, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("SC.inR2",
     "?\<Gamma> \<Rightarrow> ?F, ?G, ?H, ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?G, ?H, ?F, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))))
           ))),
    ("SC.inL2",
     "?F, ?G, ?H, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?G, ?H, ?F, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)))),
             template_var 0)
           ))),
    ("SC.sc_insertion_ordering",
     "NO_MATCH (?I \<^bold>\<rightarrow> ?J) ?H ==>
      ?H, ?F \<^bold>\<rightarrow> ?G, ?S =
      ?F \<^bold>\<rightarrow> ?G, ?H, ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("SC.lem1",
     "?x ~= ?y ==>
      (?x, ?M = ?y, ?N) = (?x :# ?N & ?M = ?y, ?N - (?x, {#}))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_hole 0)))))
             )))),
    ("SC.lem2",
     "?x ~= ?y ==>
      (?x, ?M = ?y, ?N) = (?y :# ?M & ?N = ?x, ?M - (?y, {#}))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app (template_hole 2, template_var 1))),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_hole 0)))))
             )))),
    ("SC.sc_insertion_ordering",
     "[| NO_MATCH (?I \<^bold>\<rightarrow> ?J) ?H;
         NO_MATCH (?I \<^bold>\<or> ?J) ?H |]
      ==> ?H, ?F \<^bold>\<or> ?G, ?S = ?F \<^bold>\<or> ?G, ?H, ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("SC.sc_insertion_ordering",
     "[| NO_MATCH (?I \<^bold>\<rightarrow> ?J) ?H;
         NO_MATCH (?I \<^bold>\<or> ?J) ?H;
         NO_MATCH (?I \<^bold>\<and> ?J) ?H |]
      ==> ?H, ?F \<^bold>\<and> ?G, ?S = ?F \<^bold>\<and> ?G, ?H, ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("SC.sc_insertion_ordering",
     "[| NO_MATCH (?I \<^bold>\<rightarrow> ?J) ?H;
         NO_MATCH (?I \<^bold>\<or> ?J) ?H;
         NO_MATCH (?I \<^bold>\<and> ?J) ?H;
         NO_MATCH (\<^bold>\<not> ?J) ?H |]
      ==> ?H, \<^bold>\<not> ?G, ?S = \<^bold>\<not> ?G, ?H, ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("SC.sc_insertion_ordering",
     "[| NO_MATCH (?I \<^bold>\<rightarrow> ?J) ?H;
         NO_MATCH (?I \<^bold>\<or> ?J) ?H;
         NO_MATCH (?I \<^bold>\<and> ?J) ?H;
         NO_MATCH (\<^bold>\<not> ?J) ?H; NO_MATCH \<bottom> ?H |]
      ==> ?H, \<bottom>, ?S = \<bottom>, ?H, ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("SC.sc_insertion_ordering",
     "[| NO_MATCH (?I \<^bold>\<rightarrow> ?J) ?H;
         NO_MATCH (?I \<^bold>\<or> ?J) ?H;
         NO_MATCH (?I \<^bold>\<and> ?J) ?H;
         NO_MATCH (\<^bold>\<not> ?J) ?H; NO_MATCH \<bottom> ?H;
         NO_MATCH (Atom ?k) ?H |]
      ==> ?H, Atom ?l, ?S = Atom ?l, ?H, ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 7, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)))))]
