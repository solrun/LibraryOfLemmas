   [("SC_Cut.contractR",
     "?\<Gamma> \<Rightarrow> ?F, ?F, ?\<Delta> ==>
      ?\<Gamma> \<Rightarrow> ?F, ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SC_Cut.contractL",
     "?F, ?F, ?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?F, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("SC_Cut.cut",
     "[| ?\<Gamma> \<Rightarrow> ?F, ?\<Delta>;
         ?F, ?\<Gamma> \<Rightarrow> ?\<Delta> |]
      ==> ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SC_Cut.Cut_Atom_pre",
     "[| Atom ?k, ?\<Gamma> \<Rightarrow> ?\<Delta>;
         ?\<Gamma> \<Rightarrow> Atom ?k, ?\<Delta> |]
      ==> ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("SC_Cut.cut_cf",
     "[| ?\<Gamma> \<Rightarrow> ?A, ?\<Delta>;
         ?A, ?\<Gamma>' \<Rightarrow> ?\<Delta>' |]
      ==> ?\<Gamma> + ?\<Gamma>' \<Rightarrow> ?\<Delta> + ?\<Delta>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SC_Cut.contract",
     "(?F, ?F, ?\<Gamma> \<Rightarrow> ?\<Delta> -->
       ?F, ?\<Gamma> \<Rightarrow> ?\<Delta>) &
      (?\<Gamma> \<Rightarrow> ?F, ?F, ?\<Delta> -->
       ?\<Gamma> \<Rightarrow> ?F, ?\<Delta>)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1))),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))
         )),
    ("SC_Cut.contraction_admissibility",
     "[| !!\<Gamma>' \<Delta>' A.
            [| \<Gamma>' \<Rightarrow> A, \<Delta>';
               A, \<Gamma>' \<Rightarrow> \<Delta>' |]
            ==> \<Gamma>' \<Rightarrow> \<Delta>';
         ?F, ?F, ?\<Gamma> \<Rightarrow> ?\<Delta> |]
      ==> ?F, ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("SC_Cut.cut_cs_cf",
     "[| !!A \<Gamma> \<Delta>.
            [| \<Gamma> \<Rightarrow> A, \<Delta>;
               A, \<Gamma> \<Rightarrow> \<Delta> |]
            ==> \<Gamma> \<Rightarrow> \<Delta>;
         ?\<Gamma> \<Rightarrow> ?A, ?\<Delta>;
         ?A, ?\<Gamma>' \<Rightarrow> ?\<Delta>' |]
      ==> ?\<Gamma> + ?\<Gamma>' \<Rightarrow> ?\<Delta> + ?\<Delta>'",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("SC_Cut.cut_cf_cs",
     "[| !!A \<Gamma> \<Gamma>' \<Delta> \<Delta>'.
            [| \<Gamma> \<Rightarrow> A, \<Delta>;
               A, \<Gamma>' \<Rightarrow> \<Delta>' |]
            ==> \<Gamma> + \<Gamma>' \<Rightarrow> \<Delta> + \<Delta>';
         ?\<Gamma> \<Rightarrow> ?A, ?\<Delta>;
         ?A, ?\<Gamma> \<Rightarrow> ?\<Delta> |]
      ==> ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           )))]
