   [("ND_Compl_Truthtable.lemma0", "?\<A> \<Turnstile> turn_true ?\<A> ?F",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("ND_Compl_Truthtable.line_suitable_junctors",
     "line_suitable ?\<A> (\<^bold>\<not> ?F) = line_suitable ?\<A> ?F",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("ND_Compl_Truthtable.ND_sound_complete",
     "({} \<turnstile> ?F) = \<Turnstile> ?F",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("ND_Compl_Truthtable.turn_true_simps",
     "?\<A> \<Turnstile> ?F ==> turn_true ?\<A> ?F = ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("ND_Compl_Truthtable.ND_complete",
     "\<Turnstile> ?F ==> {} \<turnstile> ?F",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("ND_Compl_Truthtable.NotD",
     "?\<Gamma> \<turnstile> \<^bold>\<not> ?F ==>
      ?F \<triangleright> ?\<Gamma> \<turnstile> \<bottom>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("ND_Compl_Truthtable.truthline_ND_proof",
     "line_suitable ?Z ?F ==>
      line_assm ?\<A> ?Z \<turnstile> turn_true ?\<A> ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("ND_Compl_Truthtable.turn_true_simps",
     "~ ?\<A> \<Turnstile> ?F ==> turn_true ?\<A> ?F = \<^bold>\<not> ?F",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("ND_Compl_Truthtable.line_suitable_junctors",
     "line_suitable ?\<A> (?F \<^bold>\<and> ?G) =
      (line_suitable ?\<A> ?F & line_suitable ?\<A> ?G)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("ND_Compl_Truthtable.line_suitable_junctors",
     "line_suitable ?\<A> (?F \<^bold>\<rightarrow> ?G) =
      (line_suitable ?\<A> ?F & line_suitable ?\<A> ?G)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("ND_Compl_Truthtable.line_suitable_junctors",
     "line_suitable ?\<A> (?F \<^bold>\<or> ?G) =
      (line_suitable ?\<A> ?F & line_suitable ?\<A> ?G)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("ND_Compl_Truthtable.deconstruct_assm_set",
     "(!!\<A>. line_assm \<A> (?k \<triangleright> ?Z) \<turnstile> ?F) ==>
      line_assm ?\<A> ?Z \<turnstile> ?F",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("ND_Compl_Truthtable.line_assm_Cons",
     "line_assm ?\<A> (?k \<triangleright> ?ks) =
      (if ?\<A> ?k then Atom ?k
       else \<^bold>\<not> (Atom ?k)) \<triangleright> line_assm ?\<A> ?ks",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_var 2, template_var 1)),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0))))]
