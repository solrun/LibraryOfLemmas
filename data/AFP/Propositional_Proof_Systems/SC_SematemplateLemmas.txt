   [("SC_Sema.SC_sound_complete",
     "?\<Gamma> \<Rightarrow> ?\<Delta> =
      \<Turnstile> ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("SC_Sema.SC_soundness",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      \<Turnstile> ?\<Gamma> \<Rightarrow> ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SC_Sema.sequent_intuitonistic_semantics",
     "\<Turnstile> ?\<Gamma> \<Rightarrow> ?\<delta>, {#} =
      set_mset ?\<Gamma> \<TTurnstile> ?\<delta>",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("SC_Sema.scc_ce_distinct",
     "(?C, ?E) : sc ?\<Gamma> ?G ?\<Delta> ?D ==> set ?C Int set ?E = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 5)),
           template_app (template_hole 1, template_var 4)),
         template_hole 0))),
    ("SC_Sema.SC_counterexample'",
     "(?C, ?D) : sc ?\<Gamma> [] ?\<Delta> [] ==>
      (%k. k : set ?C) \<not>\<Turnstile> mset ?\<Gamma> \<Rightarrow>
    mset ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 1),
                    template_hole 5),
                  template_var 0),
                template_hole 5))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, t_empty),
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("SC_Sema.sc_sim",
     "sc ?\<Gamma> ?A ?\<Delta> ?B = {} ==>
      image_mset Atom (mset ?A) + mset ?\<Gamma> \<Rightarrow>
      image_mset Atom (mset ?B) + mset ?\<Delta>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0),
          template_hole 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 2))),
                 template_app (template_hole 0, template_var 3))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("SC_Sema.SC_counterexample",
     "(?C, ?D) : sc ?\<Gamma> ?A ?\<Delta> ?B ==>
      (%a. a : set ?C) \<not>\<Turnstile> image_mset Atom (mset ?A) +
    mset ?\<Gamma> \<Rightarrow>
    image_mset Atom (mset ?B) + mset ?\<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 7, t_empty),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_app (template_hole 1, template_var 2))),
                     template_app (template_hole 0, template_var 3))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_app (template_hole 1, template_var 0))),
                   template_app (template_hole 0, template_var 1)))
               )
           )))]
