   [("Tseytin.freshnats_code", "freshnats.nfresh ?S 0 = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Tseytin.atoms_biimp",
     "atoms (?F \<^bold>\<leftrightarrow> ?G) = atoms ?F Un atoms ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Tseytin.map_of_map_apsnd",
     "map_of (map (apsnd ?t) ?M) = map_option ?t o map_of ?M",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Tseytin.biimp_size",
     "size (?F \<^bold>\<leftrightarrow> ?G) = 2 * (size ?F + size ?G) + 3",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 7, template_var 1)),
               template_app (template_hole 7, template_var 0)))),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_hole 1))))),
    ("Tseytin.freshnats_code",
     "freshnats.nfresh ?S (Suc ?n) =
      (let f = freshnat ?S
       in f # freshnats.nfresh (f \<triangleright> ?S) ?n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         t_empty)))]
