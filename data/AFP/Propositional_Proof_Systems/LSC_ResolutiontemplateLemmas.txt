   [("LSC_Resolution.LSC_Resolution",
     "?\<Gamma> \<Rightarrow>\<^sub>n ==>
      \<Union> (cnf ` nnf ` set_mset ?\<Gamma>) \<turnstile> \<box>",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 0))))),
             template_hole 0)
           ))),
    ("LSC_Resolution.SC_Resolution",
     "?\<Gamma> \<Rightarrow> {#} ==>
      \<Union> (cnf ` nnf ` set_mset ?\<Gamma>) \<turnstile> \<box>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app (template_hole 1, template_var 0))))),
             template_hole 0)
           ))),
    ("LSC_Resolution.Resolution_SC1",
     "?S \<turnstile> \<box> ==>
      EX F. cnf (nnf F) <= ?S & F, {#} \<Rightarrow> {#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("LSC_Resolution.Resolution_LSC1",
     "?S \<turnstile> \<box> ==>
      EX F. is_nnf F & cnf F <= ?S & F, {#} \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_hole 8)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("LSC_Resolution.CSC_Resolution_pre",
     "[| ?\<Gamma> \<Rightarrow>\<^sub>n;
         \<forall>\<gamma>:#?\<Gamma>. is_cnf \<gamma> |]
      ==> \<Union> (cnf ` set_mset ?\<Gamma>) \<turnstile> \<box>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 6, template_var 0)))),
             template_hole 0)
           ))),
    ("LSC_Resolution.literal_subset_sandwich",
     "[| is_lit_plus ?F; cnf ?F = {?C}; ?R <= ?C |]
      ==> ?R = \<box> | ?R = ?C",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("LSC_Resolution.Resolution_LSC_pre",
     "[| ?S \<turnstile> ?R; finite ?R; finite ?S; Ball ?S finite |]
      ==> EX S' R'.
             ALL \<Gamma>.
                set R' = ?R &
                set (map set S') = ?S &
                (disj_of_clause
                  R', image_mset disj_of_clause (mset S') +
                      \<Gamma> \<Rightarrow>\<^sub>n -->
                 image_mset disj_of_clause (mset S') +
                 \<Gamma> \<Rightarrow>\<^sub>n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 18, template_var 0)),
        template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_hole 18)
            )],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("LSC_Resolution.Resolution_LSC_pre_nodisj",
     "[| ?S \<turnstile> ?R; finite ?R; finite ?S; Ball ?S finite |]
      ==> EX S' R'.
             ALL \<Gamma>.
                is_nnf_mset \<Gamma> -->
                is_disj R' &
                is_nnf S' &
                cnf R' = {?R} &
                cnf S' <= ?S &
                (R', S', \<Gamma> \<Rightarrow>\<^sub>n -->
                 S', \<Gamma> \<Rightarrow>\<^sub>n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 17, template_var 0)),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_hole 17)
            )],
       template_predicate (template_app (template_hole 14, t_empty))))]
