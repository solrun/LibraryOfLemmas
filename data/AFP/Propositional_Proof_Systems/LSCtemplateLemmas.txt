   [("LSC.SC_LSC",
     "?\<Gamma> \<Rightarrow> {#} = ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("LSC.LSC_to_SC",
     "?\<Gamma> \<Rightarrow>\<^sub>n ==> ?\<Gamma> \<Rightarrow> {#}",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("LSC.LSC_weaken_set",
     "?\<Gamma> \<Rightarrow>\<^sub>n ==>
      ?\<Gamma> + ?\<Theta> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("LSC.LSC_weaken",
     "?\<Gamma> \<Rightarrow>\<^sub>n ==>
      ?F, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("LSC.LSC_NNF",
     "?\<Gamma> \<Rightarrow>\<^sub>n ==>
      image_mset nnf ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("LSC.SC_to_LSC",
     "?\<Gamma> \<Rightarrow> ?\<Delta> ==>
      ?\<Gamma> +
      image_mset \<^bold>\<not> ?\<Delta> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("LSC.LSC_BigAndL",
     "mset ?F + ?\<Gamma> \<Rightarrow>\<^sub>n ==>
      \<^bold>\<And>?F, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("LSC.LSC_Contract",
     "?F, ?F, ?\<Gamma> \<Rightarrow>\<^sub>n ==>
      ?F, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("LSC.LSC_AndL_inv",
     "?F \<^bold>\<and> ?G, ?\<Gamma> \<Rightarrow>\<^sub>n ==>
      ?F, ?G, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("LSC.LHCut",
     "[| ?F, ?\<Gamma> \<Rightarrow>\<^sub>n;
         \<^bold>\<not> ?F, ?\<Gamma> \<Rightarrow>\<^sub>n |]
      ==> ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 2, template_var 0)))),
    ("LSC.LSC_cnf",
     "[| ?\<Gamma> \<Rightarrow>\<^sub>n; is_nnf_mset ?\<Gamma> |]
      ==> image_mset cnf_form_of ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("LSC.LSC_OrL_inv",
     "?F \<^bold>\<or> ?G, ?\<Gamma> \<Rightarrow>\<^sub>n ==>
      ?F, ?\<Gamma> \<Rightarrow>\<^sub>n &
      ?G, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))
           ))),
    ("LSC.dnf",
     "?F \<^bold>\<and>
      (?G \<^bold>\<or> ?H), ?\<Gamma> \<Rightarrow>\<^sub>n =
      (?F \<^bold>\<and> ?G) \<^bold>\<or>
      (?F \<^bold>\<and> ?H), ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1))),
           template_var 0)))),
    ("LSC.dnf",
     "(?G \<^bold>\<or> ?H) \<^bold>\<and>
      ?F, ?\<Gamma> \<Rightarrow>\<^sub>n =
      (?G \<^bold>\<and> ?F) \<^bold>\<or>
      (?H \<^bold>\<and> ?F), ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_var 0)))),
    ("LSC.cnf",
     "?F \<^bold>\<or>
      (?G \<^bold>\<and> ?H), ?\<Gamma> \<Rightarrow>\<^sub>n =
      (?F \<^bold>\<or> ?G) \<^bold>\<and>
      (?F \<^bold>\<or> ?H), ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1))),
           template_var 0)))),
    ("LSC.cnf",
     "(?G \<^bold>\<and> ?H) \<^bold>\<or>
      ?F, ?\<Gamma> \<Rightarrow>\<^sub>n =
      (?G \<^bold>\<or> ?F) \<^bold>\<and>
      (?H \<^bold>\<or> ?F), ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_var 0)))),
    ("LSC.LSC_Top_unused",
     "[| ?\<Gamma> \<Rightarrow>\<^sub>n; is_nnf_mset ?\<Gamma> |]
      ==> ?\<Gamma> -
          (\<^bold>\<not> \<bottom>, {#}) \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)),
                 template_hole 0)))
           ))),
    ("LSC.mset_concat_map_cons",
     "mset (concat (map (%c. ?F c # ?G c) ?S)) =
      mset (map ?F ?S) + mset (concat (map ?G ?S))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("LSC.LSC_sim_Resolution1",
     "?S \<^bold>\<or> ?T, ?\<Gamma> \<Rightarrow>\<^sub>n ==>
      Atom ?k \<^bold>\<or>
      ?S, \<^bold>\<not> (Atom ?k) \<^bold>\<or>
          ?T, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 0,
                         template_app (template_hole 1, template_var 0))),
                     template_var 2)),
                 template_var 1)))
           ))),
    ("LSC.LSC_need_it_once_have_many",
     "[| ?A : set ?F;
         form_of_lit ?A \<^bold>\<or>
         disj_of_clause
          (removeAll ?A ?F), ?\<Gamma> \<Rightarrow>\<^sub>n |]
      ==> disj_of_clause ?F, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 2)),
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1)))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))
           ))),
    ("LSC.distrib1",
     "[| ?F, ?\<Gamma> \<Rightarrow>\<^sub>n;
         image_mset disj_of_clause (mset ?G) +
         ?\<Gamma> \<Rightarrow>\<^sub>n |]
      ==> mset (map (%d. ?F \<^bold>\<or> disj_of_clause d) ?G) +
          ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 0))),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, t_empty),
                     template_var 0))),
               template_var 1))
           ))),
    ("LSC.LSC_BigAndL_inv",
     "[| \<^bold>\<And>?F, ?\<Gamma> \<Rightarrow>\<^sub>n;
         ALL f:set ?F. is_nnf f; is_nnf_mset ?\<Gamma> |]
      ==> mset ?F + ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("LSC.two_list_induct",
     "[| ?P [] []; !!a S T. ?P S T ==> ?P (a # S) T &&& ?P S (a # T) |]
      ==> ?P ?S ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_hole 4),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("LSC.distrib",
     "[| image_mset disj_of_clause (mset ?F) +
         ?\<Gamma> \<Rightarrow>\<^sub>n;
         image_mset disj_of_clause (mset ?G) +
         ?\<Gamma> \<Rightarrow>\<^sub>n |]
      ==> mset
           (concat
             (map (%c. map (%d. disj_of_clause c \<^bold>\<or>
                                disj_of_clause d)
                        ?G)
               ?F)) +
          ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_var 2))),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app (template_hole 5, template_var 0))),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_var 2)))),
               template_var 1))
           ))),
    ("LSC.LSC_reassociate_Ands",
     "[| {#disj_of_clause c \<^bold>\<or> disj_of_clause d. (c, d) :# ?C#} +
         ?\<Gamma> \<Rightarrow>\<^sub>n;
         is_nnf_mset ?\<Gamma> |]
      ==> {#disj_of_clause (c @ d). (c, d) :# ?C#} +
          ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, t_empty)),
                    template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, t_empty)),
                   template_var 1)),
               template_var 0))
           ))),
    ("LSC.LSC_Sim_resolution_la",
     "[| disj_of_clause
          (removeAll (?k\<^sup>+) ?F @
           removeAll (?k\<inverse>) ?G), ?\<Gamma> \<Rightarrow>\<^sub>n;
         ?k\<^sup>+ : set ?F; ?k\<inverse> : set ?G |]
      ==> disj_of_clause
           ?F, disj_of_clause ?G, ?\<Gamma> \<Rightarrow>\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app (template_hole 3, template_var 3)),
                          template_var 2)),
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app (template_hole 2, template_var 3)),
                        template_var 1)))),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 3)),
              template_app (template_hole 0, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 2, template_var 3)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 1)),
                 template_var 0)))
           )))]
