   [("Splay_Tree.size_splay_max", "size (splay_max ?t) = size ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Splay_Tree.size_splay", "size (splay ?a ?t) = size ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Splay_Tree.inorder_splay", "inorder (splay ?x ?t) = inorder ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Splay_Tree.splay_max_Leaf_iff",
     "(splay_max ?t = \<langle>\<rangle>) = (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Splay_Tree.splay_Leaf_iff",
     "(splay ?a ?t = \<langle>\<rangle>) = (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Splay_Tree.splay_max_code",
     "splay_max ?t =
      (case ?t of \<langle>\<rangle> => ?t
       | \<langle>la, a, \<langle>\<rangle>\<rangle> => ?t
       | \<langle>la, a, \<langle>lb, b, rb\<rangle>\<rangle> =>
           if rb = \<langle>\<rangle>
           then \<langle>\<langle>la, a, lb\<rangle>, b, rb\<rangle>
           else case splay_max rb of
                \<langle>lc, c, rc\<rangle> =>
                  \<langle>\<langle>\<langle>la, a, lb\<rangle>, b,
                            lc\<rangle>,
                   c, rc\<rangle>)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 0), t_empty),
         template_var 0))),
    ("Splay_Tree.splay_code",
     "splay ?x \<langle>?AB, ?b, ?CD\<rangle> =
      (case cmp ?x ?b of
       LT =>
         case ?AB of \<langle>\<rangle> => \<langle>?AB, ?b, ?CD\<rangle>
         | \<langle>A, a, B\<rangle> =>
             case cmp ?x a of
             LT =>
               if A = \<langle>\<rangle>
               then \<langle>A, a, \<langle>B, ?b, ?CD\<rangle>\<rangle>
               else case splay ?x A of
                    \<langle>A\<^sub>1, a', A\<^sub>2\<rangle> =>
                      \<langle>A\<^sub>1, a',
                       \<langle>A\<^sub>2, a,
                        \<langle>B, ?b, ?CD\<rangle>\<rangle>\<rangle>
             | EQ => \<langle>A, a, \<langle>B, ?b, ?CD\<rangle>\<rangle>
             | GT =>
                 if B = \<langle>\<rangle>
                 then \<langle>A, a, \<langle>B, ?b, ?CD\<rangle>\<rangle>
                 else case splay ?x B of
                      \<langle>B\<^sub>1, b', B\<^sub>2\<rangle> =>
                        \<langle>\<langle>A, a, B\<^sub>1\<rangle>, b',
                         \<langle>B\<^sub>2, ?b, ?CD\<rangle>\<rangle>
       | EQ => \<langle>?AB, ?b, ?CD\<rangle>
       | GT =>
           case ?CD of \<langle>\<rangle> => \<langle>?AB, ?b, ?CD\<rangle>
           | \<langle>C, c, D\<rangle> =>
               case cmp ?x c of
               LT =>
                 if C = \<langle>\<rangle>
                 then \<langle>\<langle>?AB, ?b, C\<rangle>, c, D\<rangle>
                 else case splay ?x C of
                      \<langle>C\<^sub>1, c', C\<^sub>2\<rangle> =>
                        \<langle>\<langle>?AB, ?b, C\<^sub>1\<rangle>, c',
                         \<langle>C\<^sub>2, c, D\<rangle>\<rangle>
               | EQ => \<langle>\<langle>?AB, ?b, C\<rangle>, c, D\<rangle>
               | GT =>
                   if D = \<langle>\<rangle>
                   then \<langle>\<langle>?AB, ?b, C\<rangle>, c, D\<rangle>
                   else case splay ?x D of
                        \<langle>D\<^sub>1, d, D\<^sub>2\<rangle> =>
                          \<langle>\<langle>\<langle>?AB, ?b, C\<rangle>, c,
                                    D\<^sub>1\<rangle>,
                           d, D\<^sub>2\<rangle>)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_var 2),
                         template_var 1),
                       template_var 0)),
                   t_empty),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1),
                   template_var 0)),
               t_empty),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1))))]
