   [("Splay_Map.inorder_splay",
     "inorder (Splay_Map.splay ?x ?t) = inorder ?t",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Splay_Map.splay_Leaf_iff",
     "(Splay_Map.splay ?x ?t = \<langle>\<rangle>) =
      (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Splay_Map.inorder_inv_delete", "True & sorted1 (inorder ?t) ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_app (template_hole 0, template_var 0))))
            )],
       template_predicate (template_hole 5))),
    ("Splay_Map.invar_delete",
     "invar ?m ==> invar (Splay_Map.delete ?a ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2), t_empty),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2), t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Splay_Map.invar_update", "invar ?m ==> invar (update ?a ?b ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2), t_empty),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2), t_empty),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Splay_Map.lookup_eq",
     "sorted1 (inorder ?t) ==>
      lookup ?t ?x = AList_Upd_Del.map_of (inorder ?t) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Splay_Map.map_delete",
     "invar ?m ==>
      lookup (Splay_Map.delete ?a ?m) = (lookup ?m)(?a := None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6), t_empty),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 1)),
             template_var 0),
           template_hole 0)))),
    ("Splay_Map.inorder_delete_splay",
     "sorted1 (inorder ?t) ==>
      inorder (Splay_Map.delete ?x ?t) =
      AList_Upd_Del.del_list ?x (inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 1))))),
    ("Splay_Map.inorder_lookup",
     "True & sorted1 (inorder ?t) ==>
      lookup ?t ?a = AList_Upd_Del.map_of (inorder ?t) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Splay_Map.map_update",
     "invar ?m ==> lookup (update ?a ?b ?m) = lookup ?m(?a |-> ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6), t_empty),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 2)),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Splay_Map.inorder_update_splay",
     "sorted1 (inorder ?t) ==>
      inorder (update ?x ?y ?t) = upd_list ?x ?y (inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 3, template_var 2))))),
    ("Splay_Map.inorder_delete",
     "True & sorted1 (inorder ?t) ==>
      inorder (Splay_Map.delete ?a ?t) =
      AList_Upd_Del.del_list ?a (inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1))))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 1))))),
    ("Splay_Map.inorder_update",
     "True & sorted1 (inorder ?t) ==>
      inorder (update ?a ?b ?t) = upd_list ?a ?b (inorder ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 2))))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app (template_hole 3, template_var 2))))),
    ("Splay_Map.inorder_splay_maxD",
     "[| splay_max ?t = \<langle>?l, ?a, ?r\<rangle>;
         sorted1 (inorder ?t) |]
      ==> inorder ?l @ [?a] = inorder ?t & ?r = \<langle>\<rangle>",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app (template_hole 6, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_var 2)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_hole 1))),
                 template_app (template_hole 6, template_var 3))),
             template_app
              (template_app (template_hole 13, template_var 0),
               template_hole 0))
           ))),
    ("Splay_Map.sorted_splay",
     "[| sorted1 (inorder ?t);
         Splay_Map.splay ?x ?t = \<langle>?l, ?a, ?r\<rangle> |]
      ==> Sorted_Less.sorted
           (map fst (inorder ?l) @ ?x # map fst (inorder ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app (template_hole 5, template_var 4)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 4),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 0)))))
           ))),
    ("Splay_Map.splay_map_of_inorder",
     "[| Splay_Map.splay ?x ?t = \<langle>?l, ?a, ?r\<rangle>;
         sorted1 (inorder ?t) |]
      ==> AList_Upd_Del.map_of (inorder ?t) ?x =
          (if ?x = fst ?a then Some (snd ?a) else None)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app (template_hole 7, template_var 3)))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 7, template_var 3)),
                template_var 4)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app (template_hole 8, template_var 1))),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1))),
               template_hole 0)
             )))),
    ("Splay_Map.splay_code",
     "Splay_Map.splay ?x ?t =
      (case ?t of \<langle>\<rangle> => \<langle>\<rangle>
       | \<langle>al, a, ar\<rangle> =>
           case cmp ?x (fst a) of
           LT =>
             case al of \<langle>\<rangle> => ?t
             | \<langle>bl, b, br\<rangle> =>
                 case cmp ?x (fst b) of
                 LT =>
                   if bl = \<langle>\<rangle>
                   then \<langle>bl, b, \<langle>br, a, ar\<rangle>\<rangle>
                   else case Splay_Map.splay ?x bl of
                        \<langle>bll, y, blr\<rangle> =>
                          \<langle>bll, y,
                           \<langle>blr, b,
                            \<langle>br, a, ar\<rangle>\<rangle>\<rangle>
                 | EQ =>
                     \<langle>bl, b, \<langle>br, a, ar\<rangle>\<rangle>
                 | GT =>
                     if br = \<langle>\<rangle>
                     then \<langle>bl, b,
                           \<langle>br, a, ar\<rangle>\<rangle>
                     else case Splay_Map.splay ?x br of
                          \<langle>brl, y, brr\<rangle> =>
                            \<langle>\<langle>bl, b, brl\<rangle>, y,
                             \<langle>brr, a, ar\<rangle>\<rangle>
           | EQ => ?t
           | GT =>
               case ar of \<langle>\<rangle> => ?t
               | \<langle>bl, b, br\<rangle> =>
                   case cmp ?x (fst b) of
                   LT =>
                     if bl = \<langle>\<rangle>
                     then \<langle>\<langle>al, a, bl\<rangle>, b,
                           br\<rangle>
                     else case Splay_Map.splay ?x bl of
                          \<langle>bll, y, blr\<rangle> =>
                            \<langle>\<langle>al, a, bll\<rangle>, y,
                             \<langle>blr, b, br\<rangle>\<rangle>
                   | EQ =>
                       \<langle>\<langle>al, a, bl\<rangle>, b, br\<rangle>
                   | GT =>
                       if br = \<langle>\<rangle>
                       then \<langle>\<langle>al, a, bl\<rangle>, b,
                             br\<rangle>
                       else case Splay_Map.splay ?x br of
                            \<langle>bll, y, blr\<rangle> =>
                              \<langle>\<langle>\<langle>al, a, bl\<rangle>,
  b, bll\<rangle>,
                               y, blr\<rangle>)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), t_empty),
         template_var 0)))]
