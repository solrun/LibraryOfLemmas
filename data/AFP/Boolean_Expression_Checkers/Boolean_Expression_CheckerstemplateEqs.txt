   [("Boolean_Expression_Checkers.bool_tests",
     "bool_sat_test ?b = (EX s. val_bool_expr ?b s)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Boolean_Expression_Checkers.bool_tests",
     "bool_taut_test ?b = (ALL s. val_bool_expr ?b s)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Boolean_Expression_Checkers.taut_test_ifex",
     "taut_test_ifex ?t = (ALL s. val_ifex ?t s)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Boolean_Expression_Checkers.val_ifex",
     "val_ifex (ifex_of ?b) ?s = val_bool_expr ?b ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Boolean_Expression_Checkers.bool_tests",
     "bool_equiv_test ?b1.0 ?b2.0 =
      (ALL s. val_bool_expr ?b1.0 s = val_bool_expr ?b2.0 s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Boolean_Expression_Checkers.bool_tests",
     "bool_impl_test ?b1.0 ?b2.0 =
      (ALL s. val_bool_expr ?b1.0 s --> val_bool_expr ?b2.0 s)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Boolean_Expression_Checkers.taut_test_rec",
     "taut_test_rec ?t ?env = (ALL s. agree s ?env --> val_ifex ?t s)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Boolean_Expression_Checkers.val_mkIF",
     "val_ifex (mkIF ?x ?t1.0 ?t2.0) ?s = val_ifex (IF ?x ?t1.0 ?t2.0) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Boolean_Expression_Checkers.lookup_update_unfold",
     "Mapping.lookup (Mapping.update ?k ?v ?m) ?k' =
      (if ?k = ?k' then Some ?v else Mapping.lookup ?m ?k')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno))]
