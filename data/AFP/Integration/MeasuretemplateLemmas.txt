   [("Measure.mkdisjoint_mon_conv",
     "?A\<up>?B ==> \<Union> (range (mkdisjoint ?A)) = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)),
         template_var 0))),
    ("Measure.measurable_lift",
     "[| sigma_algebra ?a; ?f : measurable ?a ?b |]
      ==> ?f : measurable ?a (sigma ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Measure.mkdisjoint_un",
     "(!!n. ?A n <= ?A (Suc n)) ==>
      ?A ?n = \<Union> (mkdisjoint ?A ` {..?n})",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Measure.mkdisjoint_disj",
     "[| !!n. ?A n <= ?A (Suc n); ?m ~= ?n |]
      ==> mkdisjoint ?A ?m Int mkdisjoint ?A ?n = {}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_hole 0))),
    ("Measure.measure_mon_conv",
     "[| measure_space ?M; !!n. ?A n : measurable_sets ?M; ?A\<up>?B |]
      ==> (%n. Measure.measure ?M (?A n))
          \<longlonglongrightarrow> Measure.measure ?M ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Measure.measure_additive",
     "[| measure_space ?M; ?a Int ?b = {}; ?a : measurable_sets ?M;
         ?b : measurable_sets ?M |]
      ==> Measure.measure ?M (?a Un ?b) =
          Measure.measure ?M ?a + Measure.measure ?M ?b",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 0),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)))))]
