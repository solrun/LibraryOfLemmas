   [("MonConv.realfun_mon_conv_le", "?x\<up>?y ==> ?x ?i <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_var 1))),
    ("MonConv.real_mon_conv_le", "?x\<up>?y ==> ?x ?i <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_var 1))),
    ("MonConv.mon_conv_mon", "?x\<up>?y ==> ?x ?i <= ?x (?m + ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 1),
         template_app
          (template_var 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("MonConv.realfun_mon_conv_iff",
     "?u\<up>?f = (ALL w. (%n. ?u n w)\<up>?f w)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("MonConv.limseq_shift_iff",
     "(%m. ?x (m + ?i)) \<longlonglongrightarrow> ?y =
      ?x \<longlonglongrightarrow> ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("MonConv.real_mon_conv_times",
     "[| ?x\<up>?y; 0 <= ?z |] ==> (%m. ?z * ?x m)\<up>?z * ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("MonConv.real_mon_conv_add",
     "[| ?x\<up>?y; ?a\<up>?b |] ==> (%m. ?x m + ?a m)\<up>?y + ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("MonConv.real_mon_conv_outgrow",
     "[| ?x\<up>?y; ?z < ?y |] ==> EX n. ALL m>=n. ?z < ?x m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("MonConv.realfun_mon_conv_times",
     "[| ?x\<up>?y; 0 <= ?z |] ==> (%m w. ?z * ?x m w)\<up>(%w. ?z * ?y w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_predicate
        (template_app (template_app (template_hole 3, t_empty), t_empty)))),
    ("MonConv.realfun_mon_conv_add",
     "[| ?x\<up>?y; ?a\<up>?b |]
      ==> (%m w. ?x m w + ?a m w)\<up>(%w. ?y w + ?b w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_app (template_hole 1, t_empty), t_empty)))),
    ("MonConv.realfun_mon_conv_bound",
     "[| !!n. ?c n <= ?c (Suc n); !!n. ?c n <= ?x |]
      ==> EX l. ?c\<up>l & l <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("MonConv.real_mon_conv_bound",
     "[| !!n. ?c n <= ?c (Suc n); !!n. ?c n <= ?x |]
      ==> EX l. ?c\<up>l & l <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("MonConv.real_mon_conv_dom",
     "[| ?x\<up>?y; !!n. ?c n <= ?c (Suc n); ?c <= ?x |]
      ==> EX l. ?c\<up>l & l <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate (template_app (template_hole 1, t_empty))))]
