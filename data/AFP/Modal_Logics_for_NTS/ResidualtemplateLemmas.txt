   [("Residual.residual_abs_rep", "abs_residual (rep_residual ?res) = ?res",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Residual.bn_subset_supp", "bn ?\<alpha> <= supp ?\<alpha>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Residual.residual_rep_abs",
     "alpha_residual (rep_residual (abs_residual ?r)) ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("Residual.finite_supp_abs_residual_pair",
     "finite (supp \<langle>?\<alpha>,?P\<rangle>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))
         )),
    ("Residual.bn_abs_residual_fresh",
     "bn ?\<alpha> \<sharp>* \<langle>?\<alpha>,?P\<rangle>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Residual.alpha_residual_permute_rep_commute",
     "alpha_residual (?p \<bullet> rep_residual ?res)
       (rep_residual (?p \<bullet> ?res))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Residual.alpha_residual_eqvt",
     "alpha_residual ?r1.0 ?r2.0 ==>
      alpha_residual (?p \<bullet> ?r1.0) (?p \<bullet> ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Residual.supp_abs_residual_pair",
     "supp \<langle>?\<alpha>,?P\<rangle> =
      supp (?\<alpha>, ?P) - bn ?\<alpha>",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("Residual.abs_residual_pair_eqvt",
     "?p \<bullet> \<langle>?\<alpha>,?P\<rangle> =
      \<langle>?p \<bullet> ?\<alpha>,?p \<bullet> ?P\<rangle>",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Residual.set_bounded_supp",
     "[| finite ?S; !!x. x : ?X ==> supp x <= ?S |] ==> supp ?X <= ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Residual.residual_empty_bn_eq_iff",
     "bn ?\<alpha>1.0 = {} ==>
      (\<langle>?\<alpha>1.0,?P1.0\<rangle> =
       \<langle>?\<alpha>2.0,?P2.0\<rangle>) =
      (?\<alpha>1.0 = ?\<alpha>2.0 & ?P1.0 = ?P2.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3), template_hole 7)],
       template_bimplication
        (template_equation
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))
             )))),
    ("Residual.residual_strong_induct",
     "(!!act state c.
          bn act \<sharp>* c ==> ?P c \<langle>act,state\<rangle>) ==>
      ?P ?c ?residual",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Residual.residual_eq_iff_perm",
     "(\<langle>?\<alpha>1.0,?P1.0\<rangle> =
       \<langle>?\<alpha>2.0,?P2.0\<rangle>) =
      (EX p. supp (?\<alpha>1.0, ?P1.0) - bn ?\<alpha>1.0 =
             supp (?\<alpha>2.0, ?P2.0) - bn ?\<alpha>2.0 &
             (supp (?\<alpha>1.0, ?P1.0) - bn ?\<alpha>1.0) \<sharp>* p &
             p \<bullet> (?\<alpha>1.0, ?P1.0) = (?\<alpha>2.0, ?P2.0) &
             p \<bullet> bn ?\<alpha>1.0 = bn ?\<alpha>2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2))),
         template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0))),
       template_app (template_hole 9, t_empty))),
    ("Residual.residual_eq_iff_perm_renaming",
     "(\<langle>?\<alpha>1.0,?P1.0\<rangle> =
       \<langle>?\<alpha>2.0,?P2.0\<rangle>) =
      (EX p. supp (?\<alpha>1.0, ?P1.0) - bn ?\<alpha>1.0 =
             supp (?\<alpha>2.0, ?P2.0) - bn ?\<alpha>2.0 &
             (supp (?\<alpha>1.0, ?P1.0) - bn ?\<alpha>1.0) \<sharp>* p &
             p \<bullet> (?\<alpha>1.0, ?P1.0) = (?\<alpha>2.0, ?P2.0) &
             p \<bullet> bn ?\<alpha>1.0 = bn ?\<alpha>2.0 &
             supp p <= bn ?\<alpha>1.0 Un p \<bullet> bn ?\<alpha>1.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_var 3),
               template_var 2))),
         template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_var 1),
             template_var 0))),
       template_app (template_hole 12, t_empty)))]
