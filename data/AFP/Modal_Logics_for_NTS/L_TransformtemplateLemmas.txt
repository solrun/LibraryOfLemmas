   [("L_Transform.L_transform_formula_hereditarily_fs",
     "Formula.hereditarily_fs (L_transform_formula ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("L_Transform.supp_AC", "supp (AC ?x) = supp ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("L_Transform.supp_EF", "supp (EF ?x) = supp ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("L_Transform.supp_Act",
     "supp (L_action.Act ?\<alpha>) = supp ?\<alpha>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("L_Transform.supp_Eff", "supp (Eff ?f) = supp ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("L_Transform.L_transform_Not",
     "L_transform (FL_Formula.Not ?x) = Formula.Not (L_transform ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("L_Transform.L_transform_Tree\<^sub>\<alpha>_Not\<^sub>\<alpha>",
     "L_transform_Tree\<^sub>\<alpha>
       (FL_Formula.Not\<^sub>\<alpha> ?t\<^sub>\<alpha>) =
      Formula.Not\<^sub>\<alpha>
       (L_transform_Tree\<^sub>\<alpha> ?t\<^sub>\<alpha>)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("L_Transform.L_transform_formula_Not",
     "L_transform_formula (FL_Formula.Not ?x) =
      Formula.Not\<^sub>\<alpha> (L_transform_formula ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("L_Transform.L_transform_Tree\<^sub>\<alpha>_preserves_hereditarily_fs",
     "FL_Formula.hereditarily_fs ?t\<^sub>\<alpha> ==>
      Formula.hereditarily_fs
       (L_transform_Tree\<^sub>\<alpha> ?t\<^sub>\<alpha>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("L_Transform.L_transform_Tree\<^sub>\<alpha>_Conj\<^sub>\<alpha>",
     "L_transform_Tree\<^sub>\<alpha>
       (FL_Formula.Conj\<^sub>\<alpha> ?tset\<^sub>\<alpha>) =
      Formula.Conj\<^sub>\<alpha>
       (map_bset L_transform_Tree\<^sub>\<alpha> ?tset\<^sub>\<alpha>)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("L_Transform.L_transform_eqvt",
     "?p \<bullet> L_transform ?x = L_transform (?p \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("L_Transform.L_transform_Tree_eqvt",
     "?p \<bullet> L_transform_Tree ?t =
      L_transform_Tree (?p \<bullet> ?t)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("L_Transform.L_transform_Tree\<^sub>\<alpha>_eqvt",
     "?p \<bullet> L_transform_Tree\<^sub>\<alpha> ?t\<^sub>\<alpha> =
      L_transform_Tree\<^sub>\<alpha> (?p \<bullet> ?t\<^sub>\<alpha>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("L_Transform.L_transform_formula_eqvt",
     "?p \<bullet> L_transform_formula ?x =
      L_transform_formula (?p \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("L_Transform.L_transform_Pred",
     "L_transform (FL_Formula.Pred ?f ?\<phi>) =
      Formula.Act (Eff ?f) (Formula.Pred ?\<phi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("L_Transform.L_transform_Tree\<^sub>\<alpha>_Pred\<^sub>\<alpha>",
     "L_transform_Tree\<^sub>\<alpha>
       (FL_Formula.Pred\<^sub>\<alpha> ?f ?\<phi>) =
      Formula.Act\<^sub>\<alpha> (Eff ?f)
       (Formula.Pred\<^sub>\<alpha> ?\<phi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("L_Transform.L_transform_formula_Pred",
     "L_transform_formula (FL_Formula.Pred ?f ?\<phi>) =
      Formula.Act\<^sub>\<alpha> (Eff ?f)
       (Formula.Pred\<^sub>\<alpha> ?\<phi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("L_Transform.alpha_Tree_L_transform_Tree",
     "?t1.0 =\<^sub>\<alpha> ?t2.0 ==>
      L_transform_Tree ?t1.0 = L_transform_Tree ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("L_Transform.finite_supp_map_bset_L_transform",
     "finite (supp ?xset) ==> finite (supp (map_bset L_transform ?xset))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("L_Transform.finite_supp_map_bset_L_transform_Tree\<^sub>\<alpha>",
     "finite (supp ?tset\<^sub>\<alpha>) ==>
      finite
       (supp
         (map_bset L_transform_Tree\<^sub>\<alpha> ?tset\<^sub>\<alpha>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("L_Transform.L_transform_Conj",
     "finite (supp ?xset) ==>
      L_transform (FL_Formula.Conj ?xset) =
      Formula.Conj (map_bset L_transform ?xset)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0))))),
    ("L_Transform.L_transform_formula_Conj",
     "finite (supp ?xset) ==>
      L_transform_formula (FL_Formula.Conj ?xset) =
      Formula.Conj\<^sub>\<alpha> (map_bset L_transform_formula ?xset)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 0))))),
    ("L_Transform.L_transform_Act",
     "L_transform (FL_Formula.Act ?f ?\<alpha> ?x) =
      Formula.Act (Eff ?f)
       (Formula.Act (L_action.Act ?\<alpha>) (L_transform ?x))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("L_Transform.L_transform_Tree\<^sub>\<alpha>_Act\<^sub>\<alpha>",
     "L_transform_Tree\<^sub>\<alpha>
       (FL_Formula.Act\<^sub>\<alpha> ?f ?\<alpha> ?t\<^sub>\<alpha>) =
      Formula.Act\<^sub>\<alpha> (Eff ?f)
       (Formula.Act\<^sub>\<alpha> (L_action.Act ?\<alpha>)
         (L_transform_Tree\<^sub>\<alpha> ?t\<^sub>\<alpha>))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("L_Transform.L_transform_formula_Act",
     "L_transform_formula (FL_Formula.Act ?f ?\<alpha> ?x) =
      Formula.Act\<^sub>\<alpha> (Eff ?f)
       (Formula.Act\<^sub>\<alpha> (L_action.Act ?\<alpha>)
         (L_transform_formula ?x))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 4, template_var 0)))))]
