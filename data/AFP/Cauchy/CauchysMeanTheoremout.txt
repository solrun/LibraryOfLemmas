Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.538s cpu time, 0.049s GC time
Loading theory "Draft.CauchysMeanTheorem" (required by "Draft.CauchysMeanTheoremMoreTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.204s elapsed time, 0.835s cpu time, 0.049s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.CauchysMeanTheorem"
### 0.240s elapsed time, 0.943s cpu time, 0.098s GC time
### theory "HOL-Library.Nat_Bijection"
### 0.391s elapsed time, 1.560s cpu time, 0.148s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.770s elapsed time, 2.503s cpu time, 0.343s GC time
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.002s elapsed time, 2.838s cpu time, 0.805s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.959s elapsed time, 5.049s cpu time, 1.047s GC time
Loading theory "Draft.Templates" (required by "Draft.CauchysMeanTheoremMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CauchysMeanTheoremMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.449s elapsed time, 0.508s cpu time, 0.073s GC time
Loading theory "Draft.CauchysMeanTheoremMoreTemplates"
val templateLemmas =
   [("CauchysMeanTheorem.pos_single", "pos [?x] = (0 < ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("CauchysMeanTheorem.pos_imp_ne", "pos ?xs ==> ?xs ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("CauchysMeanTheorem.pos_mean", "pos ?xs ==> 0 < mean ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("CauchysMeanTheorem.\<gamma>_eq_sym",
     "\<gamma>_eq (?a, ?b) = \<gamma>_eq (?b, ?a)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CauchysMeanTheorem.list_sum_mean",
     "sum_list ?xs = mean ?xs * real (length ?xs)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("CauchysMeanTheorem.CauchysMeanTheorem",
     "pos ?z ==> gmean ?z <= mean ?z",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("CauchysMeanTheorem.remove1_retains_prod",
     "?a : set ?xs --> prod_list ?xs = prod_list (remove1 ?a ?xs) * ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_var 1)))
         )),
    ("CauchysMeanTheorem.CauchysMeanTheorem_Eq",
     "pos ?z ==> (gmean ?z = mean ?z) = (het ?z = 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_bimplication
        (template_equation
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 0)),
         template_equation
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CauchysMeanTheorem.list_mean_cons",
     "?xs ~= [] ==> mean (mean ?xs # ?xs) = mean ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("CauchysMeanTheorem.het_base",
     "pos ?x & het ?x = 0 ==> gmean ?x = mean ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0)),
                template_hole 3))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("CauchysMeanTheorem.sum_list_rmv1",
     "?a : set ?xs ==> sum_list (remove1 ?a ?xs) = sum_list ?xs - ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 1)))),
    ("CauchysMeanTheorem.CauchysMeanTheorem_Less",
     "[| pos ?z; 0 < het ?z |] ==> gmean ?z < mean ?z",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("CauchysMeanTheorem.list_sum_distrib_aux",
     "sum_list ?xs / ?n + sum_list ?xs =
      ((1::?'a) + (1::?'a) / ?n) * sum_list ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0)),
         template_app (template_hole 2, template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_hole 0),
             template_app
              (template_app (template_hole 3, template_hole 0),
               template_var 0))),
         template_app (template_hole 2, template_var 1)))),
    ("CauchysMeanTheorem.\<gamma>_eq_trans",
     "[| \<gamma>_eq (?x, ?y); \<gamma>_eq (?y, ?z) |]
      ==> \<gamma>_eq (?x, ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CauchysMeanTheorem.pos_imp_rmv_pos",
     "[| remove1 ?a ?xs ~= []; pos ?xs |] ==> pos (remove1 ?a ?xs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("CauchysMeanTheorem.list_eq_prod",
     "prod_list (list_eq ?xs ?m) = ?m ^ length (list_eq ?xs ?m)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0))))),
    ("CauchysMeanTheorem.pos_cons",
     "?xs ~= [] --> pos (?x # ?xs) = (if 0 < ?x then pos ?xs else False)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 7))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0)),
                 template_app (template_hole 5, template_var 1)),
               template_hole 0)))
         )),
    ("CauchysMeanTheorem.het_gt_0_imp_noteq_ne",
     "0 < het ?l ==> list_neq ?l (mean ?l) ~= []",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 3, t_empty), template_var 0),
             template_hole 0)
           ))),
    ("CauchysMeanTheorem.el_gt0_imp_prod_gt0",
     "(!!y. y : set ?xs ==> (0::?'a) < y) ==> (0::?'a) < prod_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("CauchysMeanTheorem.list_eq_sum",
     "sum_list (list_eq ?xs ?m) = ?m * real (length (list_eq ?xs ?m))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, t_empty),
               template_var 0)))))),
    ("CauchysMeanTheorem.sum_list_length_split",
     "length ?xs = length (list_neq ?xs ?m) + length (list_eq ?xs ?m)",
     template_equation
      (template_app (template_hole 4, template_var 1),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, t_empty), template_var 1))))),
    ("CauchysMeanTheorem.sum_list_split",
     "sum_list ?xs =
      sum_list (list_neq ?xs ?m) + sum_list (list_eq ?xs ?m)",
     template_equation
      (template_app (template_hole 3, template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1))))),
    ("CauchysMeanTheorem.prod_list_split",
     "prod_list ?xs =
      prod_list (list_neq ?xs ?m) * prod_list (list_eq ?xs ?m)",
     template_equation
      (template_app (template_hole 3, template_var 1),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, t_empty), template_var 1))))),
    ("CauchysMeanTheorem.prod_list_het0",
     "?x ~= [] & het ?x = 0 ==> prod_list ?x = mean ?x ^ length ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 0),
                    template_hole 8))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_hole 5))
            )],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("CauchysMeanTheorem.list_mean_eq_iff",
     "[| sum_list ?one = sum_list ?two; length ?one = length ?two |]
      ==> mean ?one = mean ?two",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("CauchysMeanTheorem.sum_list_mono_gt",
     "?xs ~= [] & Ball (set ?xs) ((<) ?m) ==>
      ?m * real (length ?xs) < sum_list ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_app (template_hole 4, template_var 0)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 1)))),
    ("CauchysMeanTheorem.mean_gt_0",
     "?xs ~= [] & 0 < ?x & 0 < mean ?xs ==> 0 < mean (?x # ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_hole 4))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 0)),
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app (template_hole 1, template_var 1))))
            )],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("CauchysMeanTheorem.sum_list_mono_lt",
     "?xs ~= [] & (ALL x:set ?xs. x < ?m) ==>
      sum_list ?xs < ?m * real (length ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                t_empty))
            )],
       template_inequation
        (less_than, template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("CauchysMeanTheorem.het_gt_0I",
     "[| ?a : set ?xs; ?b : set ?xs; ?a ~= ?b |] ==> 0 < het ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 1)))),
    ("CauchysMeanTheorem.prod_exp",
     "4 * (?x * ?y) = (?x + ?y)\<^sup>2 - (?x - ?y)\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app (template_hole 5, template_hole 4)))))),
    ("CauchysMeanTheorem.abs_less_imp_sq_less",
     "\<bar>?x - ?y\<bar> < \<bar>?z - ?w\<bar> ==>
      (?x - ?y)\<^sup>2 < (?z - ?w)\<^sup>2",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("CauchysMeanTheorem.le_diff_imp_gt_prod",
     "[| \<bar>?x - ?y\<bar> < \<bar>?z - ?w\<bar>; ?x + ?y = ?z + ?w |]
      ==> ?z * ?w < ?x * ?y",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0))),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("CauchysMeanTheorem.list_neq_remove1",
     "?a ~= ?m & ?a : set ?xs ==>
      length (list_neq (remove1 ?a ?xs) ?m) < length (list_neq ?xs ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 0)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("CauchysMeanTheorem.pick_one_lt",
     "list_neq ?xs (mean ?xs) ~= [] ==>
      EX e. e : set (list_neq ?xs (mean ?xs)) & e < mean ?xs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, t_empty), template_var 0),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("CauchysMeanTheorem.pick_one_gt",
     "list_neq ?xs (mean ?xs) ~= [] ==>
      EX e. e : set (list_neq ?xs (mean ?xs)) & mean ?xs < e",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, t_empty), template_var 0),
              template_hole 5)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("CauchysMeanTheorem.new_list_gt_gmean",
     "[| pos ?xs; 0 < het ?xs |]
      ==> EX xs'.
             gmean ?xs < gmean xs' &
             \<gamma>_eq (xs', ?xs) & het xs' < het ?xs & pos xs'",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("CauchysMeanTheorem.existence_of_het0",
     "?p = het ?x & 0 < ?p & pos ?x ==>
      EX y. gmean ?x < gmean y & \<gamma>_eq (?x, y) & het y = 0 & pos y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app (template_hole 8, template_var 0))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 1)),
                template_app (template_hole 5, template_var 0)))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("CauchysMeanTheorem.list_gmean_gt_iff",
     "[| 0 < prod_list ?one; 0 < prod_list ?two; ?one ~= []; ?two ~= [];
         prod_list ?two < prod_list ?one; length ?one = length ?two |]
      ==> gmean ?two < gmean ?one",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_inequation
         (less_than, template_app (template_hole 6, template_var 0),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1))))]:
   (string * thm * template) list
### theory "Draft.CauchysMeanTheoremMoreTemplates"
### 0.296s elapsed time, 0.382s cpu time, 0.000s GC time
val it = (): unit
