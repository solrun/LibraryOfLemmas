   [("PromelaDatastructures.comparator_varType_pointwise",
     "peq_comp comparator_varType ?x\<^sub>0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("PromelaDatastructures.comparator_variable_pointwise",
     "peq_comp comparator_variable ?x\<^sub>0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("PromelaDatastructures.comparator_varType_pointwise",
     "psym_comp comparator_varType ?x\<^sub>0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("PromelaDatastructures.comparator_variable_pointwise",
     "psym_comp comparator_variable ?x\<^sub>0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("PromelaDatastructures.comparator_varType_pointwise",
     "ptrans_comp comparator_varType ?x\<^sub>0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("PromelaDatastructures.comparator_variable_pointwise",
     "ptrans_comp comparator_variable ?x\<^sub>0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("PromelaDatastructures.comparator_varType_simps",
     "comparator_varType VTChan (VTBounded ?y ?ya) = Gt",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("PromelaDatastructures.comparator_varType_simps",
     "comparator_varType (VTBounded ?x ?xa) VTChan = Lt",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("PromelaDatastructures.comparator_iarray",
     "comparator ?comp\<^sub>'\<^sub>a ==>
      comparator (comparator_iarray ?comp\<^sub>'\<^sub>a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("PromelaDatastructures.walk_array_foldl",
     "walk_array ?f ?a ?x = foldl ?f ?x (list_of_array ?a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("PromelaDatastructures.walk_iarray_foldl",
     "walk_iarray ?f ?a ?x = foldl ?f ?x (IArray.list_of ?a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("PromelaDatastructures.walk_array_foldl'",
     "walk_array ?f (Array ?xs) ?x = foldl ?f ?x ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("PromelaDatastructures.walk_iarray_foldl'",
     "walk_iarray ?f (IArray ?xs) ?x = foldl ?f ?x ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("PromelaDatastructures.comparator_variable_simps",
     "comparator_variable (Var ?x ?xa) (VArray ?yb ?yc ?yd) = Lt",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("PromelaDatastructures.comparator_variable_simps",
     "comparator_variable (VArray ?x ?xa ?xb) (Var ?y ?ya) = Gt",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("PromelaDatastructures.pState2HASH_eq",
     "pState2HASH ?x = pState2HASH ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("PromelaDatastructures.gState2HASH_eq",
     "gState2HASH ?x = gState2HASH ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("PromelaDatastructures.comparator_iarray_simps",
     "comparator_iarray ?comp\<^sub>'\<^sub>a (IArray ?x) (IArray ?y) =
      comparator_list ?comp\<^sub>'\<^sub>a ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("PromelaDatastructures.AL_update_idem",
     "Assoc_List.lookup ?ls ?k = Some ?v ==>
      Assoc_List.update ?k ?v ?ls = ?ls",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("PromelaDatastructures.walk_array_Cons",
     "walk_array ?f (Array (?a # ?xs)) ?b =
      walk_array ?f (Array ?xs) (?f ?b ?a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_var 3, template_var 0),
           template_var 2)))),
    ("PromelaDatastructures.walk_iarray_Cons",
     "walk_iarray ?f (IArray (?a # ?xs)) ?b =
      walk_iarray ?f (IArray ?xs) (?f ?b ?a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_var 3, template_var 0),
           template_var 2)))),
    ("PromelaDatastructures.AL_update_delete_idem",
     "Assoc_List.lookup ?ls ?k = None ==>
      Assoc_List.delete ?k (Assoc_List.update ?k ?v ?ls) = ?ls",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_var 2))),
    ("PromelaDatastructures.walk_array_append",
     "walk_array ?f (Array (?xs @ [?x])) ?b =
      ?f (walk_array ?f (Array ?xs) ?b) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_var 0),
       template_app
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app (template_hole 3, template_var 2)),
             template_var 0)),
         template_var 1))),
    ("PromelaDatastructures.walk_iarray_append",
     "walk_iarray ?f (IArray (?xs @ [?x])) ?b =
      ?f (walk_iarray ?f (IArray ?xs) ?b) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))),
         template_var 0),
       template_app
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app (template_hole 3, template_var 2)),
             template_var 0)),
         template_var 1))),
    ("PromelaDatastructures.comparator_varType_simps",
     "comparator_varType (VTBounded ?x ?xa) (VTBounded ?y ?ya) =
      (case comparator_of ?x ?y of Eq => comparator_of ?xa ?ya | Lt => Lt
       | Gt => Gt)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_hole 1),
           template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 1)))),
    ("PromelaDatastructures.comparator_variable_simps",
     "comparator_variable (Var ?x ?xa) (Var ?y ?ya) =
      (case comparator_varType ?x ?y of Eq => comparator_of ?xa ?ya
       | Lt => Lt | Gt => Gt)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("PromelaDatastructures.AL_update_update_idem",
     "Assoc_List.lookup ?ls ?k = Some ?v ==>
      Assoc_List.update ?k ?v (Assoc_List.update ?k ?v2.0 ?ls) = ?ls",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 3)),
         template_var 3))),
    ("PromelaDatastructures.comparator_iarray_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_iarray ?x\<^sub>0 ==>
          peq_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      peq_comp (comparator_iarray ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("PromelaDatastructures.comparator_iarray_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_iarray ?x\<^sub>0 ==>
          psym_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      psym_comp (comparator_iarray ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("PromelaDatastructures.comparator_iarray_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_iarray ?x\<^sub>0 ==>
          ptrans_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      ptrans_comp (comparator_iarray ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("PromelaDatastructures.walk_array'_Cons",
     "walk_array' ?f (Array (?a # ?xs)) ?x ?l (Suc ?p) =
      walk_array' ?f (Array ?xs) ?x ?l ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3))),
             template_var 2),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app (template_hole 2, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("PromelaDatastructures.walk_iarray'_Cons",
     "walk_iarray' ?f (IArray (?a # ?xs)) ?x ?l (Suc ?p) =
      walk_iarray' ?f (IArray ?xs) ?x ?l ?p",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3))),
             template_var 2),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app (template_hole 2, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("PromelaDatastructures.comparator_variable_simps",
     "comparator_variable (VArray ?x ?xa ?xb) (VArray ?yb ?yc ?yd) =
      (case comparator_varType ?x ?yb of
       Eq =>
         case comparator_of ?xa ?yc of
         Eq => comparator_iarray comparator_of ?xb ?yd | Lt => Lt | Gt => Gt
       | Lt => Lt | Gt => Gt)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 3),
                         template_var 0)),
                     template_hole 3),
                   template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1))),
             template_hole 3),
           template_hole 2),
         template_app
          (template_app (template_hole 0, template_var 5),
           template_var 2)))),
    ("PromelaDatastructures.cvm_fold_cong",
     "[| ?cvm = ?cvm'; ?stepss = ?stepss';
         !!x d. x : set ?stepss ==> ?g d x = ?g' d x |]
      ==> cvm_fold ?g ?cvm ?stepss = cvm_fold ?g' ?cvm' ?stepss'",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2)))),
    ("PromelaDatastructures.printList_cong",
     "[| ?xs = ?xs'; ?l = ?l'; ?r = ?r'; ?sep = ?sep';
         !!x. x : set ?xs ==> ?f x = ?f' x |]
      ==> printList ?f ?xs ?l ?r ?sep = printList ?f' ?xs' ?l' ?r' ?sep'",
     template_implication
      ([template_equation (template_var 9, template_var 8),
        template_equation (template_var 7, template_var 6),
        template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 9),
               template_var 7),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 8),
               template_var 6),
             template_var 4),
           template_var 2))))]
