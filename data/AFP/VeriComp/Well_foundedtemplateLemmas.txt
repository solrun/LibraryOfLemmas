   [("Well_founded.lex_list_well_founded",
     "well_founded ?order ==> well_founded (lexp ?order)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Well_founded.lex_list_wfP", "wfP ?order ==> wfP (lexp ?order)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Well_founded.lex_prodp_well_founded",
     "[| well_founded ?r1.0; well_founded ?r2.0 |]
      ==> well_founded (lex_prodp ?r1.0 ?r2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Well_founded.lex_prodp_wfP",
     "[| wfP ?r1.0; wfP ?r2.0 |] ==> wfP (lex_prodp ?r1.0 ?r2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Well_founded.lexp_prepend",
     "lexp ?order ?ys ?zs ==> lexp ?order (?xs @ ?ys) (?xs @ ?zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Well_founded.lexp_lex",
     "lexp ?order ?xs ?ys = ((?xs, ?ys) : lex {(x, y). ?order x y})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty)))))),
    ("Well_founded.induct",
     "(!!x. (!!y. (case y of () => %(). False) x ==> ?P y) ==> ?P x) ==>
      ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Well_founded.lex_prodp_lex_prod",
     "lex_prodp ?r1.0 ?r2.0 ?x ?y =
      ((?x, ?y) : {(x, y). ?r1.0 x y} <*lex*> {(x, y). ?r2.0 x y})",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty))),
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty))))))]
