Loading theory "Draft.Behaviour" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler" via "Draft.Language" via "Draft.Semantics")
Loading theory "Draft.Transfer_Extras" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler" via "Draft.Language" via "Draft.Semantics")
Loading theory "Draft.Well_founded" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler" via "Draft.Language" via "Draft.Semantics" via "Draft.Inf")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
locale well_founded
  fixes R :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 70)
  assumes "well_founded (\<sqsubset>)"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.Transfer_Extras"
### 0.040s elapsed time, 0.191s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Proofs for inductive predicate(s) "lexp"
  Proving monotonicity ...
### theory "Draft.Well_founded"
### 0.088s elapsed time, 0.383s cpu time, 0.000s GC time
Loading theory "Draft.Inf" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler" via "Draft.Language" via "Draft.Semantics")
Proofs for coinductive predicate(s) "inf"
  Proving monotonicity ...
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.556s cpu time, 0.042s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Proofs for coinductive predicate(s) "inf_wf"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Inf"
### 0.079s elapsed time, 0.302s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.221s elapsed time, 0.881s cpu time, 0.074s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.328s elapsed time, 1.286s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Behaviour"
### 0.602s elapsed time, 2.397s cpu time, 0.195s GC time
Loading theory "Draft.Semantics" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler" via "Draft.Language")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
locale semantics
  fixes
    step :: "'state => 'state => bool"
      (infix \<open>\<rightarrow>\<close> 50)
    and final :: "'state => bool"
  assumes "semantics (\<rightarrow>) final"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "state_behaves"
  Proving monotonicity ...
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.Semantics"
### 0.331s elapsed time, 1.302s cpu time, 0.106s GC time
Loading theory "Draft.Language" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
locale language
  fixes step :: "'state => 'state => bool"
    and final :: "'state => bool"
    and load :: "'prog => 'state => bool"
  assumes "language step final"
locale language
  fixes step :: "'state => 'state => bool"
    and final :: "'state => bool"
    and load :: "'prog => 'state => bool"
  assumes "language step final"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Language"
### 0.087s elapsed time, 0.331s cpu time, 0.073s GC time
Loading theory "Draft.Simulation" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint" via "Draft.Compiler")
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
locale backward_simulation
  fixes step1 :: "'state1 => 'state1 => bool"
    and step2 :: "'state2 => 'state2 => bool"
    and final1 :: "'state1 => bool"
    and final2 :: "'state2 => bool"
    and
    order :: "'index => 'index => bool"
      (infix \<open>\<sqsubset>\<close> 70)
    and match :: "'index => 'state1 => 'state2 => bool"
  assumes
    "backward_simulation step1 step2 final1 final2 (\<sqsubset>) match"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale forward_simulation
  fixes step1 :: "'state1 => 'state1 => bool"
    and step2 :: "'state2 => 'state2 => bool"
    and final1 :: "'state1 => bool"
    and final2 :: "'state2 => bool"
    and
    order :: "'index => 'index => bool"
      (infix \<open>\<sqsubset>\<close> 70)
    and match :: "'index => 'state1 => 'state2 => bool"
  assumes "forward_simulation step1 step2 final1 final2 (\<sqsubset>) match"
### theory "HOL-Library.BigO"
### 0.988s elapsed time, 3.746s cpu time, 0.838s GC time
[| ?r^++ ?a ?b; !!y. ?r ?a y ==> ?P y;
   !!y z. [| ?r^++ ?a y; ?r y z; ?P y |] ==> ?P z |]
==> ?P ?b
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
locale bisimulation
  fixes step1 :: "'state1 => 'state1 => bool"
    and step2 :: "'state2 => 'state2 => bool"
    and final1 :: "'state1 => bool"
    and final2 :: "'state2 => bool"
    and order :: "'index => 'index => bool"
    and match :: "'index => 'state1 => 'state2 => bool"
  assumes "bisimulation step1 step2 final1 final2 order match"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.086s elapsed time, 4.046s cpu time, 0.877s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
[| !!x y. ?P [] x y; !!i x y. ?P [i] x y;
   !!i v va x z. (!!xa. ?P (v # va) xa z) ==> ?P (i # v # va) x z |]
==> ?P ?a0.0 ?a1.0 ?a2.0
Found termination order: "size <*mlex*> {}"
### theory "Draft.Simulation"
### 0.571s elapsed time, 1.763s cpu time, 0.619s GC time
Loading theory "Draft.Compiler" (required by "Draft.FixpointMoreTemplates" via "Draft.Fixpoint")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale compiler
  fixes step1 :: "'state1 => 'state1 => bool"
    and step2 :: "'state2 => 'state2 => bool"
    and final1 :: "'state1 => bool"
    and final2 :: "'state2 => bool"
    and load1 :: "'prog1 => 'state1 => bool"
    and load2 :: "'prog2 => 'state2 => bool"
    and order :: "'index => 'index => bool"
    and match :: "'index => 'state1 => 'state2 => bool"
    and compile :: "'prog1 => 'prog2 option"
  assumes
    "compiler step1 step2 final1 final2 load1 load2 order match compile"
### theory "Draft.Compiler"
### 0.251s elapsed time, 0.534s cpu time, 0.062s GC time
Loading theory "Draft.Fixpoint" (required by "Draft.FixpointMoreTemplates")
### theory "Draft.Fixpoint"
### 0.078s elapsed time, 0.158s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.986s elapsed time, 6.110s cpu time, 1.064s GC time
Loading theory "Draft.Templates" (required by "Draft.FixpointMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.065s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.FixpointMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.461s elapsed time, 0.501s cpu time, 0.048s GC time
Loading theory "Draft.FixpointMoreTemplates"
val templateLemmas =
   [("Fixpoint.fixpoint_eq_comp_pow",
     "EX n. fixpoint ?m ?f ?x = option_comp_pow ?f n ?x",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Fixpoint.fixpoint_to_comp_pow",
     "fixpoint ?m ?f ?x = ?y ==> EX n. option_comp_pow ?f n ?x = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Fixpoint.compiler_composition_fixpoint",
     "compiler ?step ?step ?final ?final ?load ?load ?order ?match
       ?compile ==>
      compiler ?step ?step ?final ?final ?load ?load (lexp ?order^++)
       (rel_comp_pow ?match) (fixpoint ?m ?compile)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 5, template_var 6),
                            template_var 6),
                          template_var 5),
                        template_var 5),
                      template_var 4),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_var 6),
                           template_var 6),
                         template_var 5),
                       template_var 5),
                     template_var 4),
                   template_var 4),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3))),
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           )))]:
   (string * thm * template) list
### theory "Draft.FixpointMoreTemplates"
### 0.319s elapsed time, 0.456s cpu time, 0.054s GC time
val it = (): unit
