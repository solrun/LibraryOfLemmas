Loading theory "Draft.Well_founded" (required by "Draft.InfMoreTemplates" via "Draft.Inf")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
locale well_founded
  fixes R :: "'a => 'a => bool"  (infix \<open>\<sqsubset>\<close> 70)
  assumes "well_founded (\<sqsubset>)"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Proofs for inductive predicate(s) "lexp"
  Proving monotonicity ...
### theory "Draft.Well_founded"
### 0.103s elapsed time, 0.442s cpu time, 0.000s GC time
Loading theory "Draft.Inf" (required by "Draft.InfMoreTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for coinductive predicate(s) "inf"
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.575s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
  Proving monotonicity ...
Proofs for coinductive predicate(s) "inf_wf"
  Proving monotonicity ...
### theory "Draft.Inf"
### 0.078s elapsed time, 0.299s cpu time, 0.042s GC time
### theory "HOL-Library.Set_Algebras"
### 0.217s elapsed time, 0.855s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.380s elapsed time, 1.351s cpu time, 0.135s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.738s elapsed time, 2.269s cpu time, 0.335s GC time
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.766s elapsed time, 2.160s cpu time, 0.242s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.830s elapsed time, 4.155s cpu time, 0.886s GC time
Loading theory "Draft.Templates" (required by "Draft.InfMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.119s cpu time, 0.049s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.InfMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.455s elapsed time, 0.461s cpu time, 0.000s GC time
Loading theory "Draft.InfMoreTemplates"
val templateLemmas =
   [("Set_Interval.Inf_greaterThan", "Inf {?x<..} = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Conditionally_Complete_Lattices.cInf_greaterThan", "Inf {?x<..} = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Predicate.eval_Inf", "pred.eval (Inf ?A) = Inf (pred.eval ` ?A)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Complete_Lattices.Inf_apply", "Inf ?A ?x = (INF f\<in>?A. f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Relation.Inf_INT_eq", "Inf ?S = (%x. x : \<Inter> (Collect ` ?S))",
     template_equation
      (template_app (template_hole 4, template_var 0), t_empty)),
    ("Set_Interval.Inf_greaterThanAtMost", "?x < ?y ==> Inf {?x<..?y} = ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Set_Interval.Inf_greaterThanLessThan",
     "?x < ?y ==> Inf {?x<..<?y} = ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Conditionally_Complete_Lattices.cInf_greaterThanAtMost",
     "?y < ?x ==> Inf {?y<..?x} = ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Conditionally_Complete_Lattices.cInf_greaterThanLessThan",
     "?y < ?x ==> Inf {?y<..<?x} = ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Complete_Lattices.Inf1_D", "[| Inf ?A ?a; ?P : ?A |] ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Complete_Lattices.Inf1_I", "(!!P. P : ?A ==> P ?a) ==> Inf ?A ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Inf.inf_wf_to_inf",
     "[| well_founded ?order; inf_wf ?r ?order ?n ?x |] ==> Inf.inf ?r ?x",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Complete_Lattices.Inf2_D", "[| Inf ?A ?a ?b; ?r : ?A |] ==> ?r ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Relation.Inf_INT_eq2",
     "Inf ?S = (%x y. (x, y) : \<Inter> (Collect ` case_prod ` ?S))",
     template_equation
      (template_app (template_hole 7, template_var 0), t_empty)),
    ("Conditionally_Complete_Lattices.cInf_eq_Min",
     "[| finite ?X; ?X ~= {} |] ==> Inf ?X = Min ?X",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Complete_Lattices.Inf2_I",
     "(!!r. r : ?A ==> r ?a ?b) ==> Inf ?A ?a ?b",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Filter.Inf_filter_parametric",
     "[| bi_unique ?A; bi_total ?A |]
      ==> rel_fun (rel_set (rel_filter ?A)) (rel_filter ?A) Inf Inf",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_app (template_hole 2, template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Inf.step_inf",
     "[| right_unique ?r; ?r ?x ?y; Inf.inf ?r ?x |] ==> Inf.inf ?r ?y",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Filter.eventually_Inf",
     "eventually ?P (Inf ?B) =
      (EX X<=?B. finite X & eventually ?P (Inf X))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Conditionally_Complete_Lattices.Inf_insert_finite",
     "finite ?S ==>
      Inf (insert ?x ?S) = (if ?S = {} then ?x else min ?x (Inf ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 5, template_var 1)))
             )))),
    ("Hilbert_Choice.mono_bij_Inf",
     "[| mono ?f; bij ?f |] ==> ?f (Inf ?A) = Inf (?f ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Inf.star_inf",
     "[| right_unique ?r; ?r^** ?x ?y; Inf.inf ?r ?x |] ==> Inf.inf ?r ?y",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Topological_Spaces.Inf_lim",
     "[| !!n. ?b n : ?s; ?b \<longlonglongrightarrow> ?a |]
      ==> Inf ?s <= ?a",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Topological_Spaces.Inf_as_limit",
     "?A ~= {} ==>
      EX u. (ALL n. u n : ?A) & u \<longlonglongrightarrow> Inf ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Conditionally_Complete_Lattices.finite_less_Inf_iff",
     "[| finite ?X; ?X ~= {} |] ==> (?a < Inf ?X) = (ALL x:?X. ?a < x)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Complete_Lattices.Inf1_E",
     "[| Inf ?A ?a; ?P ?a ==> ?thesis; ?P ~: ?A ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 1, template_var 2))],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Filter.Inf_filter_not_bot",
     "(!!X. [| X <= ?B; finite X |] ==> Inf X ~= bot) ==> Inf ?B ~= bot",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Inf.inf_wf_to_step_inf_wf",
     "[| well_founded ?order; inf_wf ?r ?order ?n ?x |]
      ==> EX y m. ?r ?x y & inf_wf ?r ?order m y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Archimedean_Field.cInf_asclose",
     "[| ?S ~= {}; ALL x:?S. \<bar>x - ?l\<bar> <= ?e |]
      ==> \<bar>Inf ?S - ?l\<bar> <= ?e",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_var 0))),
    ("Archimedean_Field.cInf_abs_ge",
     "[| ?S ~= {}; !!x. x : ?S ==> \<bar>x\<bar> <= ?a |]
      ==> \<bar>Inf ?S\<bar> <= ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Complete_Lattices.Inf2_E",
     "[| Inf ?A ?a ?b; ?r ?a ?b ==> ?thesis; ?r ~: ?A ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 1, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4)
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Conditionally_Complete_Lattices.finite_imp_less_Inf",
     "[| finite ?X; ?x : ?X; !!x. x : ?X ==> ?a < x |] ==> ?a < Inf ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 2)))),
    ("Topological_Spaces.continuous_at_Inf_antimono",
     "[| antimono ?f; continuous (at_right (Inf ?S)) ?f; ?S ~= {};
         bdd_below ?S |]
      ==> ?f (Inf ?S) = Sup (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)))),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Topological_Spaces.continuous_at_Inf_mono",
     "[| mono ?f; continuous (at_right (Inf ?S)) ?f; ?S ~= {};
         bdd_below ?S |]
      ==> ?f (Inf ?S) = Inf (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)))),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Conditionally_Complete_Lattices.cInf_eq",
     "[| !!x. x : ?X ==> ?a <= x;
         !!y. (!!x. x : ?X ==> y <= x) ==> y <= ?a |]
      ==> Inf ?X = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Filter.eventually_Inf_base",
     "[| ?B ~= {};
         !!F G. [| F : ?B; G : ?B |] ==> EX x:?B. x <= inf_class.inf F G |]
      ==> eventually ?P (Inf ?B) = (EX b:?B. eventually ?P b)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 1), t_empty))))]:
   (string * thm * template) list
### theory "Draft.InfMoreTemplates"
### 0.294s elapsed time, 0.442s cpu time, 0.071s GC time
val it = (): unit
