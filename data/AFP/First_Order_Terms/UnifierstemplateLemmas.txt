   [("Unifiers.is_imgu_imp_is_mgu",
     "is_imgu ?\<sigma> ?E ==> is_mgu ?\<sigma> ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Unifiers.subst_set_reflects_unifiable",
     "unifiable (subst_set ?\<sigma> ?E) ==> unifiable ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Unifiers.unifiers_insert_ident",
     "unifiers (insert (?t, ?t) ?E) = unifiers ?E",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Unifiers.unifiers_Un",
     "unifiers (?s Un ?t) = unifiers ?s Int unifiers ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Unifiers.is_mgu_insert_trivial",
     "is_mgu ?\<sigma> (insert (?t, ?t) ?E) = is_mgu ?\<sigma> ?E",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("Unifiers.unifiers_insert_swap",
     "unifiers (insert (?s, ?t) ?E) = unifiers (insert (?t, ?s) ?E)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Unifiers.unifiers_subst_set",
     "(?\<tau> : unifiers (subst_set ?\<sigma> ?E)) =
      (?\<sigma> \<circ>\<^sub>s ?\<tau> : unifiers ?E)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("Unifiers.unifiable_insert_swap",
     "unifiable (insert (?s, ?t) ?E) = unifiable (insert (?t, ?s) ?E)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Unifiers.unifiers_insert_Var_swap",
     "unifiers (insert (?t, Var ?x) ?E) =
      unifiers (insert (Var ?x, ?t) ?E)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 2)),
           template_var 0)))),
    ("Unifiers.is_mgu_insert_swap",
     "is_mgu ?\<sigma> (insert (?s, ?t) ?E) =
      is_mgu ?\<sigma> (insert (?t, ?s) ?E)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Unifiers.is_mgu_insert_Var_swap",
     "is_mgu ?\<sigma> (insert (?t, Var ?x) ?E) =
      is_mgu ?\<sigma> (insert (Var ?x, ?t) ?E)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 2)),
           template_var 0)))),
    ("Unifiers.unifiers_insert_VarD",
     "?\<sigma> : unifiers (insert (?t, Var ?x) ?E) ==>
      subst ?x ?t \<circ>\<^sub>s ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_app (template_hole 3, template_var 1))),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 3),
         template_var 3))),
    ("Unifiers.unifiers_insert_VarD",
     "?\<sigma> : unifiers (insert (Var ?x, ?t) ?E) ==>
      subst ?x ?t \<circ>\<^sub>s ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 2)),
                      template_var 1)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 3),
         template_var 3))),
    ("Unifiers.unifiers_insert",
     "unifiers (insert ?p ?t) =
      {\<sigma>. fst ?p \<cdot> \<sigma> = snd ?p \<cdot> \<sigma>} Int
      unifiers ?t",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app (template_hole 7, template_var 0)))),
    ("Unifiers.unifiers_insert_Var_left",
     "?\<sigma> : unifiers (insert (Var ?x, ?t) ?E) ==>
      ?\<sigma> : unifiers (subst_set (subst ?x ?t) ?E)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app (template_hole 2, template_var 2)),
                      template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("Unifiers.in_vars_is_Fun_not_unifiable",
     "[| ?x : vars_term ?t; is_Fun ?t |] ==> ~ unifiable {(Var ?x, ?t)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 1)),
                       template_var 0)),
                   template_hole 0))
               )
           ))),
    ("Unifiers.unifiers_occur_left_is_Fun",
     "[| ?x : vars_term ?t; is_Fun ?t |]
      ==> unifiers (insert (Var ?x, ?t) ?E) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_hole 0))),
    ("Unifiers.unifiers_occur_left_Fun",
     "?x : \<Union> (vars_term ` set ?ts) ==>
      unifiers (insert (Var ?x, Fun ?f ?ts) ?E) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, t_empty),
                  template_app (template_hole 7, template_var 2))))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2))),
             template_var 0)),
         template_hole 0))),
    ("Unifiers.unifiers_occur_left_not_Var",
     "[| ?x : vars_term ?t; ?t ~= Var ?x |]
      ==> unifiers (insert (Var ?x, ?t) ?E) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 5, template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_hole 0))),
    ("Unifiers.map_eq_set_zipD",
     "[| map ?f ?xs = map ?f ?ys; (?x, ?y) : set (zip ?xs ?ys) |]
      ==> ?f ?x = ?f ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)))
            )],
       template_equation
        (template_app (template_var 4, template_var 1),
         template_app (template_var 4, template_var 0)))),
    ("Unifiers.is_mgu_insert_decomp",
     "length ?ss = length ?ts ==>
      is_mgu ?\<sigma> (insert (Fun ?f ?ss, Fun ?f ?ts) ?E) =
      is_mgu ?\<sigma> (?E Un set (zip ?ss ?ts))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 4),
          template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 3))),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3))))))),
    ("Unifiers.unifiers_set_zip",
     "length ?ss = length ?ts ==>
      unifiers (set (zip ?ss ?ts)) =
      {\<sigma>.
       map (%t. t \<cdot> \<sigma>) ?ss =
       map (%t. t \<cdot> \<sigma>) ?ts}",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app (template_hole 3, t_empty)))),
    ("Unifiers.in_unifiersE",
     "[| ?\<sigma> : unifiers ?E;
         (!!e. e : ?E ==>
               fst e \<cdot> ?\<sigma> = snd e \<cdot> ?\<sigma>) ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Unifiers.is_mgu_subst_set_subst",
     "[| ?x ~: vars_term ?t;
         is_mgu ?\<sigma> (subst_set (subst ?x ?t) ?E) |]
      ==> is_mgu (subst ?x ?t \<circ>\<^sub>s ?\<sigma>)
           (insert (Var ?x, ?t) ?E)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app (template_hole 7, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_var 2)),
               template_var 0))
           ))),
    ("Unifiers.unifiers_Fun",
     "(?\<sigma> : unifiers {(Fun ?f ?ss, Fun ?g ?ts)}) =
      (length ?ss = length ?ts &
       ?f = ?g & ?\<sigma> : unifiers (set (zip ?ss ?ts)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 3),
                          template_var 2)),
                      template_app
                       (template_app (template_hole 7, template_var 1),
                        template_var 0))),
                  template_hole 6)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 11, template_var 4),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0))))))
           )))]
