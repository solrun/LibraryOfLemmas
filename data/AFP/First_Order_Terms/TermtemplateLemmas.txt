   [("Term.finite_vars_term", "finite (vars_term ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Term.finite_subst_domain_subst",
     "finite (subst_domain (subst ?x ?y))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Term.subst_apply_term_empty", "?t \<cdot> Var = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Term.subst_simps", "subst ?x (Var ?x) = Var",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_hole 0)),
    ("Term.subst_simps", "subst ?x ?t ?x = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1),
       template_var 0)),
    ("Term.num_funs_subst",
     "num_funs ?t <= num_funs (?t \<cdot> ?\<sigma>)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term.finite_Union_vars_term",
     "finite (\<Union> (vars_term ` set ?ts))",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Term.subst_compose",
     "(?\<sigma> \<circ>\<^sub>s ?\<tau>) ?x =
      ?\<sigma> ?x \<cdot> ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 0)),
         template_var 1))),
    ("Term.subst_domain_compose",
     "subst_domain (?\<sigma> \<circ>\<^sub>s ?\<tau>)
      <= subst_domain ?\<sigma> Un subst_domain ?\<tau>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Term.subst_compose_assoc",
     "?\<sigma> \<circ>\<^sub>s ?\<tau> \<circ>\<^sub>s ?\<mu> =
      ?\<sigma> \<circ>\<^sub>s (?\<tau> \<circ>\<^sub>s ?\<mu>)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term.subst_subst_compose",
     "?t \<cdot> ?\<sigma> \<circ>\<^sub>s ?\<tau> =
      ?t \<cdot> ?\<sigma> \<cdot> ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Term.subst_subst",
     "?t \<cdot> ?\<sigma> \<cdot> ?\<tau> =
      ?t \<cdot> ?\<sigma> \<circ>\<^sub>s ?\<tau>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term.vars_term_subst",
     "vars_term (?t \<cdot> ?\<sigma>) =
      \<Union> (vars_term ` ?\<sigma> ` vars_term ?t)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 5),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Term.subst_idemp_iff",
     "(?\<sigma> \<circ>\<^sub>s ?\<sigma> = ?\<sigma>) =
      (subst_domain ?\<sigma> Int range_vars ?\<sigma> = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 0), template_var 0),
         template_var 0),
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Term.range_vars_subst_compose_subset",
     "range_vars (?\<sigma> \<circ>\<^sub>s ?\<tau>)
      <= range_vars ?\<sigma> - subst_domain ?\<tau> Un range_vars ?\<tau>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Term.subst_subst_domain",
     "subst_domain (subst ?x ?t) = (if ?t = Var ?x then {} else {?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_hole 2, template_var 1))),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 1))
           ))),
    ("Term.subst_subst_range",
     "subst_range (subst ?x ?t) = (if ?t = Var ?x then {} else {?t})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_hole 2, template_var 1))),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 1))
           ))),
    ("Term.subst_ident",
     "?x ~: vars_term ?t ==> ?t \<cdot> subst ?x ?u = ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Term.subst_term_eqI",
     "(!!t. t \<cdot> ?\<sigma> = t \<cdot> ?\<tau>) ==>
      ?\<sigma> = ?\<tau>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Term.subst_compose_left_idemp",
     "?\<sigma> ?x = ?t \<cdot> ?\<sigma> ==>
      subst ?x ?t \<circ>\<^sub>s ?\<sigma> = ?\<sigma>",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_var 2))),
    ("Term.is_VarE", "[| is_Var ?t; !!x. ?t = Var x ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Term.term_subst_eq_conv",
     "(?t \<cdot> ?\<sigma> = ?t \<cdot> ?\<tau>) =
      (ALL x:vars_term ?t. ?\<sigma> x = ?\<tau> x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         t_empty))),
    ("Term.subst_self_idemp",
     "?x ~: vars_term ?t ==>
      subst ?x ?t \<circ>\<^sub>s subst ?x ?t = subst ?x ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Term.term_subst_eq_rev",
     "?t \<cdot> ?\<sigma> = ?t \<cdot> ?\<tau> ==>
      ALL x:vars_term ?t. ?\<sigma> x = ?\<tau> x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             t_empty)
           ))),
    ("Term.num_funs_0",
     "[| num_funs ?t = 0; !!x. ?t = Var x ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Term.subst_apply_left_idemp",
     "?\<sigma> ?x = ?t \<cdot> ?\<sigma> ==>
      ?s \<cdot> subst ?x ?t \<cdot> ?\<sigma> = ?s \<cdot> ?\<sigma>",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 3)))),
    ("Term.is_Fun_num_funs_less",
     "[| ?x : vars_term ?t; is_Fun ?t |]
      ==> num_funs (?\<sigma> ?x) < num_funs (?t \<cdot> ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1, template_app (template_var 0, template_var 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Term.is_FunE", "[| is_Fun ?t; !!f ts. ?t = Fun f ts ==> ?P |] ==> ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Term.term_subst_eq",
     "(!!x. x : vars_term ?t ==> ?\<sigma> x = ?\<tau> x) ==>
      ?t \<cdot> ?\<sigma> = ?t \<cdot> ?\<tau>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Term.vars_term_subset_subst_eq",
     "[| vars_term ?t <= vars_term ?s;
         ?s \<cdot> ?\<sigma> = ?s \<cdot> ?\<tau> |]
      ==> ?t \<cdot> ?\<sigma> = ?t \<cdot> ?\<tau>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Term.range_varsE",
     "[| ?x : range_vars ?\<sigma>;
         !!t. [| ?x : vars_term t; t : subst_range ?\<sigma> |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Term.subst_apply_eq_Var",
     "[| ?s \<cdot> ?\<sigma> = Var ?x;
         !!y. [| ?s = Var y; ?\<sigma> y = Var ?x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Term.vars_term_disjoint_imp_unifier",
     "[| vars_term ?s Int vars_term ?t = {};
         ?s \<cdot> ?\<sigma> = ?t \<cdot> ?\<tau> |]
      ==> EX \<mu>. ?s \<cdot> \<mu> = ?t \<cdot> \<mu>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 3)),
            template_app (template_hole 4, template_var 2)),
          template_hole 3),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Term.subst_domain_subst_compose",
     "subst_domain (?\<sigma> \<circ>\<^sub>s ?\<tau>) =
      subst_domain ?\<sigma> -
      {x. EX y. ?\<sigma> x = Var y & ?\<tau> y = Var x} Un
      (subst_domain ?\<tau> - subst_domain ?\<sigma>)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 1)),
             template_app (template_hole 4, t_empty))),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 8, template_var 0)),
           template_app (template_hole 8, template_var 1))))),
    ("Term.sum_list_map_num_funs_subst",
     "sum_list (map (num_funs o (%t. t \<cdot> ?\<sigma>)) ?ts) =
      sum_list (map num_funs ?ts) ==>
      ALL i<length ?ts.
         num_funs (?ts ! i \<cdot> ?\<sigma>) = num_funs (?ts ! i)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  t_empty)),
              template_var 0)),
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_hole 5),
              template_var 0)))],
       template_predicate (template_app (template_hole 4, t_empty))))]
