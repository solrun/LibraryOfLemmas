Loading theory "Draft.Term" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Draft.Unifiers")
Loading theory "HOL-Library.Cancellation" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Draft.Term_Pair_Multiset" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Option_Monad" via "HOL-Library.Monad_Syntax")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.100s elapsed time, 0.422s cpu time, 0.000s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Option_Monad")
### theory "HOL-Library.Function_Algebras"
### 0.115s elapsed time, 0.483s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting")
### theory "HOL-Library.Monad_Syntax"
### 0.029s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.Option_Monad" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Infinite_Set"
### 0.250s elapsed time, 0.971s cpu time, 0.122s GC time
Loading theory "Abstract-Rewriting.Seq" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting")
### theory "Draft.Option_Monad"
### 0.257s elapsed time, 0.999s cpu time, 0.122s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.438s elapsed time, 1.754s cpu time, 0.122s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Draft.Term_Pair_Multiset")
locale infinitely_many
  fixes p :: "nat => bool"
  assumes "infinitely_many p"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Abstract-Rewriting.Seq"
### 0.456s elapsed time, 1.672s cpu time, 0.477s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Library.Nat_Bijection"
### 0.474s elapsed time, 1.732s cpu time, 0.552s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### Partially applied constant "Term.term.Var" on left hand side of equation, in theorem:
### monoid_mult.prod_list Var (\<circ>\<^sub>s) ?xs ==
### foldr (\<circ>\<^sub>s) ?xs Var
Found termination order: "{}"
### theory "HOL-Library.Set_Algebras"
### 0.190s elapsed time, 0.742s cpu time, 0.082s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Term"
### 1.129s elapsed time, 4.335s cpu time, 0.756s GC time
Loading theory "Draft.Unifiers" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification")
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.Unifiers"
### 0.194s elapsed time, 0.752s cpu time, 0.142s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting" via "Regular-Sets.Regexp_Method" via "Regular-Sets.Equivalence_Checking")
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "{}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
consts
  left :: "'a tree => 'a tree"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "{}"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.While_Combinator"
### 0.666s elapsed time, 2.455s cpu time, 0.811s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Stream"
### 1.149s elapsed time, 4.364s cpu time, 1.034s GC time
Loading theory "Regular-Sets.Regular_Set" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting" via "Regular-Sets.Regexp_Method" via "Regular-Sets.Equivalence_Checking" via "Regular-Sets.NDerivative" via "Regular-Sets.Regular_Exp")
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
overloading
  lang_pow \<equiv> compow :: nat => 'a list set => 'a list set
consts
  lang_pow :: "nat => 'a list set => 'a list set"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
### theory "Regular-Sets.Regular_Set"
### 0.274s elapsed time, 1.073s cpu time, 0.142s GC time
Loading theory "Regular-Sets.Regular_Exp" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting" via "Regular-Sets.Regexp_Method" via "Regular-Sets.Equivalence_Checking" via "Regular-Sets.NDerivative")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.207s elapsed time, 4.525s cpu time, 1.482s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.601s elapsed time, 9.482s cpu time, 2.577s GC time
Loading theory "Draft.Templates" (required by "Draft.UnificationMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.078s elapsed time, 0.239s cpu time, 0.061s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.UnificationMoreTemplates")
consts
  lang :: "'a rexp => 'a list set"
consts
  nullable :: "'a rexp => bool"
consts
  rexp_empty :: "'a rexp => bool"
instantiation
  rexp :: (order) order
  less_eq_rexp == less_eq :: 'a rexp => 'a rexp => bool
  less_rexp == less :: 'a rexp => 'a rexp => bool
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.656s elapsed time, 2.125s cpu time, 0.232s GC time
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 4.065s elapsed time, 14.164s cpu time, 3.152s GC time
Loading theory "Draft.Term_Pair_Multiset" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  rexp :: (linorder) linorder
### theory "Regular-Sets.Regular_Exp"
### 2.530s elapsed time, 8.084s cpu time, 1.849s GC time
Loading theory "Regular-Sets.NDerivative" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting" via "Regular-Sets.Regexp_Method" via "Regular-Sets.Equivalence_Checking")
Loading theory "Regular-Sets.Relation_Interpretation" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting" via "Regular-Sets.Regexp_Method")
consts
  rel :: "('a => ('b * 'b) set) => 'a rexp => ('b * 'b) set"
consts
  word_rel :: "('a => ('b * 'b) set) => 'a list => ('b * 'b) set"
### theory "Regular-Sets.Relation_Interpretation"
### 0.083s elapsed time, 0.266s cpu time, 0.100s GC time
### theory "Draft.Term_Pair_Multiset"
### 0.302s elapsed time, 0.782s cpu time, 0.100s GC time
Found termination order:
  "(%p. size (fst p)) <*mlex*> (%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  norm :: "'a rexp => 'a rexp"
consts
  nderiv :: "'a => 'a rexp => 'a rexp"
### theory "Regular-Sets.NDerivative"
### 1.799s elapsed time, 2.829s cpu time, 0.327s GC time
Loading theory "Regular-Sets.Equivalence_Checking" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting" via "Regular-Sets.Regexp_Method")
Proofs for coinductive predicate(s) "bisimilar"
  Proving monotonicity ...
consts
  add_atoms :: "'a rexp => 'a list => 'a list"
### theory "Regular-Sets.Equivalence_Checking"
### 0.172s elapsed time, 0.176s cpu time, 0.000s GC time
Loading theory "Regular-Sets.Regexp_Method" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification" via "Abstract-Rewriting.Abstract_Rewriting")
consts
  rel_of_regexp :: "('a * 'a) set list => nat rexp => ('a * 'a) set"
consts
  rel_eq :: "nat rexp * nat rexp => ('a * 'a) set list => bool"
val regexp_conv = fn: Proof.context -> conv
### theory "Regular-Sets.Regexp_Method"
### 0.436s elapsed time, 0.487s cpu time, 0.070s GC time
Loading theory "Abstract-Rewriting.Abstract_Rewriting" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification" via "Draft.Abstract_Unification")
Found termination order: "{}"
Proofs for inductive predicate(s) "SN_partp"
  Proving monotonicity ...
### theory "Abstract-Rewriting.Abstract_Rewriting"
### 0.858s elapsed time, 1.069s cpu time, 0.286s GC time
Loading theory "Draft.Abstract_Unification" (required by "Draft.UnificationMoreTemplates" via "Draft.Unification")
Proofs for inductive predicate(s) "UNIF1"
  Proving monotonicity ...
Proofs for inductive predicate(s) "UNIF"
  Proving monotonicity ...
### theory "Draft.Abstract_Unification"
### 0.880s elapsed time, 1.998s cpu time, 1.560s GC time
Loading theory "Draft.Unification" (required by "Draft.UnificationMoreTemplates")
Found termination order: "{}"
### theory "Draft.Unification"
### 0.509s elapsed time, 0.553s cpu time, 0.061s GC time
Loading theory "Draft.UnificationMoreTemplates"
val templateLemmas =
   [("Unification.finite_subst_domain_subst_of",
     "finite (subst_domain (subst_of ?xs))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Abstract_Unification.compose_simps",
     "compose (Var # ?ss) = compose ?ss",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Abstract_Unification.compose_simps",
     "compose (?\<sigma> # ?ss) = ?\<sigma> \<circ>\<^sub>s compose ?ss",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Abstract_Unification.set_mset_subst_mset",
     "set_mset (subst_mset ?\<sigma> ?E) =
      subst_set ?\<sigma> (set_mset ?E)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Abstract_Unification.compose_append",
     "compose (?ss @ ?ts) = compose ?ss \<circ>\<^sub>s compose ?ts",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Unification.subst_of_append",
     "subst_of (?ss @ ?ts) = subst_of ?ts \<circ>\<^sub>s subst_of ?ss",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 2, template_var 1)))),
    ("Unification.subst_of_simps",
     "subst_of ((?x, Var ?x) # ?ss) = subst_of ?ss",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 1))),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Abstract_Unification.unifiable_imp_empty",
     "unifiable (set_mset ?E) ==> (?E, {#}) : unif^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Abstract_Unification.UNIF_empty_imp_is_mgu_compose",
     "UNIF ?ss ?E {#} ==> is_mgu (compose ?ss) (set_mset ?E)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Abstract_Unification.UNIF1_range_vars_subset",
     "UNIF1 ?\<sigma> ?E ?E' ==> range_vars ?\<sigma> <= vars_mset ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Abstract_Unification.UNIF1_subst_domain_subset",
     "UNIF1 ?\<sigma> ?E ?E' ==> subst_domain ?\<sigma> <= vars_mset ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Abstract_Unification.UNIF1_vars_mset_leq",
     "UNIF1 ?\<sigma> ?E ?E' ==> vars_mset ?E' <= vars_mset ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Abstract_Unification.UNIF1_unifD",
     "UNIF1 ?\<sigma> ?E ?E' ==> (?E, ?E') : unif",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Abstract_Unification.UNIF1_unifless",
     "UNIF1 ?\<sigma> ?E ?E' ==> (?E', ?E) : unifless",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("Unification.mgu_finite_subst_domain",
     "mgu ?s ?t = Some ?\<sigma> ==> finite (subst_domain ?\<sigma>)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Abstract_Unification.unif_rtrancl_empty_imp_unifiable",
     "(?E, {#}) : unif^* ==> unifiable (set_mset ?E)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Abstract_Unification.unif_UNIF1_conv",
     "((?E, ?E') : unif) = (EX \<sigma>. UNIF1 \<sigma> ?E ?E')",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Abstract_Unification.UNIF_range_vars_subset",
     "UNIF ?ss ?E ?E' ==> range_vars (compose ?ss) <= vars_mset ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("Abstract_Unification.UNIF_subst_domain_subset",
     "UNIF ?ss ?E ?E' ==> subst_domain (compose ?ss) <= vars_mset ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("Unification.unify_complete",
     "unify ?E ?bs = None ==> unifiers (set ?E) = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Abstract_Unification.vars_mset_psubset_uniflessI",
     "vars_mset ?M < vars_mset ?N ==> (?M, ?N) : unifless",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Abstract_Unification.unif_imp_converse_unifless",
     "(?x, ?y) : unif ==> (?y, ?x) : unifless",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("Unification.subst_of_simps",
     "subst_of (?b # ?ss) =
      subst_of ?ss \<circ>\<^sub>s subst (fst ?b) (snd ?b)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1))))),
    ("Abstract_Unification.unif_rtrancl_UNIF_conv",
     "((?E, ?E') : unif^*) = (EX ss. UNIF ss ?E ?E')",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Unification.subst_list_append",
     "subst_list ?\<sigma> (?xs @ ?ys) =
      subst_list ?\<sigma> ?xs @ subst_list ?\<sigma> ?ys",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Abstract_Unification.union_commutes",
     "?M + mset ?xs + ?N = ?M + ?N + mset ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Unification.mset_subst_list",
     "mset (subst_list (subst ?x ?t) ?ys) =
      subst_mset (subst ?x ?t) (mset ?ys)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Abstract_Unification.UNIF1_subst_domain_range_vars_Int",
     "UNIF1 ?\<sigma> ?E ?E' ==>
      subst_domain ?\<sigma> Int range_vars ?\<sigma> = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 2)),
         template_hole 0))),
    ("Abstract_Unification.UNIF1_subst_domain_Int",
     "UNIF1 ?\<sigma> ?E ?E' ==>
      subst_domain ?\<sigma> Int vars_mset ?E' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Unification.unify_sound",
     "unify ?E [] = Some ?cs ==> is_imgu (subst_of ?cs) (set ?E)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Abstract_Unification.empty_not_reachable_imp_not_unifiable",
     "(?E, {#}) ~: unif^* ==> ~ unifiable (set_mset ?E)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 0),
                      template_hole 4)),
                  template_app (template_hole 3, template_hole 2))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Abstract_Unification.UNIF_idemp",
     "UNIF ?ss ?E ?E' ==>
      compose ?ss \<circ>\<^sub>s compose ?ss = compose ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 2)),
         template_app (template_hole 0, template_var 2)))),
    ("Abstract_Unification.union_commutes",
     "?M + {#?x#} + ?N = ?M + ?N + {#?x#}",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Abstract_Unification.UNIF_subst_domain_range_vars_Int",
     "UNIF ?ss ?E ?E' ==>
      subst_domain (compose ?ss) Int range_vars (compose ?ss) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 2))),
         template_hole 0))),
    ("Abstract_Unification.unifiable_imp_unif",
     "unifiable {?e} ==> EX E'. ({#?e#}, E') : unif",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 0),
                template_hole 6))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Unification.mgu_complete",
     "mgu ?s ?t = None ==> unifiers {(?s, ?t)} = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 0),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_hole 1)),
         template_hole 0))),
    ("Unification.mgu_sound",
     "mgu ?s ?t = Some ?\<sigma> ==> is_imgu ?\<sigma> {(?s, ?t)}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_hole 0))
           ))),
    ("Abstract_Unification.unif_preserves_unifiable",
     "[| (?E, ?E') : unif; unifiable (set_mset ?E) |]
      ==> unifiable (set_mset ?E')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Abstract_Unification.unifiable_imp_empty_or_unif",
     "unifiable (set_mset ?E) ==> ?E = {#} | (EX E'. (?E, E') : unif)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Abstract_Unification.UNIF1_mono",
     "UNIF1 ?\<sigma> ?E ?E' ==>
      UNIF1 ?\<sigma> (?E + ?M) (?E' + subst_mset ?\<sigma> ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("Unification.mgu_subst_domain",
     "mgu ?s ?t = Some ?\<sigma> ==>
      subst_domain ?\<sigma> <= vars_term ?s Un vars_term ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 1))))),
    ("Abstract_Unification.unif_rtrancl_preserves_unifiable",
     "[| (?E, ?E') : unif^*; unifiable (set_mset ?E) |]
      ==> unifiable (set_mset ?E')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Abstract_Unification.not_UNIF1_singleton_Var_right",
     "~ UNIF1 Var {#(Var ?x, Var ?y)#} {#} ==> ?x ~= ?y",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_app
                           (template_hole 2,
                            template_app (template_hole 4, template_var 1)),
                          template_app (template_hole 4, template_var 0))),
                      template_hole 1)),
                  template_hole 1)
                )
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Abstract_Unification.UNIF1_singleton_Var_right",
     "?x ~: vars_term ?t ==> UNIF1 (subst ?x ?t) {#(?t, Var ?x)#} {#}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app (template_hole 6, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app (template_hole 1, template_var 1))),
                 template_hole 0)),
             template_hole 0)
           ))),
    ("Abstract_Unification.UNIF1_singleton_Var_left",
     "?x ~: vars_term ?t ==> UNIF1 (subst ?x ?t) {#(Var ?x, ?t)#} {#}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app (template_hole 6, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)),
                     template_var 0)),
                 template_hole 0)),
             template_hole 0)
           ))),
    ("Abstract_Unification.irreducible_reachable_imp_not_unifiable",
     "[| (?E, ?E') : unif^!; ?E' ~= {#} |] ==> ~ unifiable (set_mset ?E)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_hole 5))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("Abstract_Unification.not_unifiable_imp_not_empty_NF",
     "~ unifiable (set_mset ?E) ==> EX E'. E' ~= {#} & (?E, E') : unif^!",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Abstract_Unification.not_UNIF1_singleton_Var_right",
     "~ UNIF1 (subst ?x (Var ?y)) {#(Var ?x, Var ?y)#} {#} ==> ?x = ?y",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_app (template_hole 4, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_app
                           (template_hole 2,
                            template_app (template_hole 4, template_var 1)),
                          template_app (template_hole 4, template_var 0))),
                      template_hole 1)),
                  template_hole 1)
                )
            )],
       template_equation (template_var 1, template_var 0))),
    ("Abstract_Unification.vars_mset_subset_size_mset_uniflessI",
     "[| vars_mset ?M <= vars_mset ?N; size_mset ?M < size_mset ?N |]
      ==> (?M, ?N) : unifless",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Abstract_Unification.unif_mono",
     "(?E, ?E') : unif ==>
      EX \<sigma>. (?E + ?M, ?E' + subst_mset \<sigma> ?M) : unif",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Abstract_Unification.UNIF1_preserves_unifiers",
     "[| UNIF1 ?\<sigma> ?E ?E'; ?\<tau> : unifiers (set_mset ?E) |]
      ==> ?\<sigma> \<circ>\<^sub>s ?\<tau> : unifiers (set_mset ?E')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Unification.unify_None",
     "unify ?E ?ss = None ==> EX E'. E' ~= {#} & (mset ?E, E') : unif^!",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0),
          template_hole 10)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Abstract_Unification.UNIF1_singleton_decomp",
     "length ?ss = length ?ts ==>
      UNIF1 Var {#(Fun ?f ?ss, Fun ?f ?ts)#} (mset (zip ?ss ?ts))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 1))),
                 template_hole 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Abstract_Unification.unif_rtrancl_mono",
     "(?E, ?E') : unif^* ==>
      EX \<sigma>. (?E + ?M, ?E' + subst_mset \<sigma> ?M) : unif^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app (template_hole 4, template_hole 3))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Unification.decompose_None",
     "decompose (Fun ?f ?ss) (Fun ?g ?ts) = None ==>
      ?f ~= ?g | length ?ss ~= length ?ts",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2)),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)),
          template_hole 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1))),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Unification.decompose_Some",
     "decompose (Fun ?f ?ss) (Fun ?g ?ts) = Some ?E ==>
      ?f = ?g & length ?ss = length ?ts & ?E = zip ?ss ?ts",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3)),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)),
          template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 3)),
                   template_app (template_hole 2, template_var 1))),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))))
           ))),
    ("Unification.unify_Some_UNIF",
     "unify ?E ?bs = Some ?cs ==>
      EX ds ss.
         ?cs = ds @ ?bs & subst_of ds = compose ss & UNIF ss (mset ?E) {#}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 2),
            template_var 1),
          template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Abstract_Unification.foldr_assoc",
     "(!!f g h. ?b (?b f g) h = ?b f (?b g h)) ==>
      foldr ?b ?xs (?b ?y ?z) = ?b (foldr ?b ?xs ?y) ?z",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_var 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Abstract_Unification.not_unifD",
     "\<nexists>E'. ({#?e#}, E') : unif ==>
      (EX x t.
          (?e = (Var x, t) | ?e = (t, Var x)) &
          x : vars_term t & is_Fun t) |
      (EX f g ss ts.
          ?e = (Fun f ss, Fun g ts) & (f ~= g | length ss ~= length ts))",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 21, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 14, t_empty)),
             template_app (template_hole 5, t_empty))
           )))]:
   (string * thm * template) list
### theory "Draft.UnificationMoreTemplates"
### 0.456s elapsed time, 0.628s cpu time, 0.000s GC time
val it = (): unit
