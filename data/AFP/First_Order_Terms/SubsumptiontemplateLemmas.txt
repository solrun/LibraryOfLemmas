   [("Subsumption.subsumeseq_term_refl", "?t \<le>\<cdot> ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Subsumption.num_syms_1", "1 <= num_syms ?t",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Subsumption.num_unique_vars_Var_1", "num_unique_vars (Var ?x) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Subsumption.num_syms_ge_num_unique_vars",
     "num_unique_vars ?t <= num_syms ?t",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Subsumption.num_vars_geq_num_unique_vars",
     "num_unique_vars ?t <= num_vars ?t",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Subsumption.num_syms_geq_num_vars", "num_vars ?t <= num_syms ?t",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Subsumption.num_syms_subst",
     "num_syms ?t <= num_syms (?t \<cdot> ?\<sigma>)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Subsumption.sum_list_map_unique_vars",
     "num_unique_vars (Fun ?f ?ts) <= sum_list (map num_unique_vars ?ts)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Subsumption.subsumeseq_term_iff",
     "(?t \<le>\<cdot> ?s) = (EX \<sigma>. ?s = ?t \<cdot> \<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Subsumption.subsumeseq_term_trans",
     "[| ?s \<le>\<cdot> ?t; ?t \<le>\<cdot> ?u |] ==> ?s \<le>\<cdot> ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Subsumption.num_unique_vars_Fun_Cons",
     "num_unique_vars (Fun ?f (?t # ?ts))
      <= num_unique_vars ?t + num_unique_vars (Fun ?f ?ts)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Subsumption.emv_subsumeseq_term_imp_num_unique_vars_le",
     "[| emv ?s ?t; ?t \<le>\<cdot> ?s |]
      ==> num_unique_vars ?s <= num_unique_vars ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Subsumption.bij_Var_subst_compose_Var",
     "bij ?g ==> (Var o ?g) \<circ>\<^sub>s (Var o inv ?g) = Var",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 0),
                template_hole 8),
              template_hole 7)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_hole 8),
               template_var 0))),
         template_hole 1))),
    ("Subsumption.emv_subst_imp_num_unique_vars_le",
     "[| emv ?s ?t; ?s = ?t \<cdot> ?\<sigma> |]
      ==> num_unique_vars ?s <= num_unique_vars ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Subsumption.subsumeseq_termE",
     "[| ?s \<le>\<cdot> ?t;
         !!\<sigma>. ?t = ?s \<cdot> \<sigma> ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Subsumption.emv_subst_imp_is_Var",
     "[| emv ?s ?t; ?s = ?t \<cdot> ?\<sigma> |]
      ==> ALL x:vars_term ?t. is_Var (?\<sigma> x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             t_empty)
           ))),
    ("Subsumption.emv_subst_vars_term",
     "[| emv ?s ?t; ?s = ?t \<cdot> ?\<sigma> |]
      ==> vars_term ?s = (the_Var o ?\<sigma>) ` vars_term ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("Subsumption.subsumeseq_term_size_emv",
     "[| ?t \<le>\<cdot> ?s; num_syms ?s = num_syms ?t;
         num_funs ?s = num_funs ?t |]
      ==> emv ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 2, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Subsumption.subst_size_emv",
     "[| ?s = ?t \<cdot> ?\<tau>; num_syms ?s = num_syms ?t;
         num_funs ?s = num_funs ?t |]
      ==> emv ?s ?t",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Subsumption.num_syms_num_unique_vars_clash",
     "[| ALL i. num_syms (?f i) = num_syms (?f (Suc i));
         ALL i. num_unique_vars (?f i) < num_unique_vars (?f (Suc i)) |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_hole 0))),
    ("Subsumption.sum_list_map_num_syms_subst",
     "sum_list (map (num_syms o (%t. t \<cdot> ?\<sigma>)) ?ts) =
      sum_list (map num_syms ?ts) ==>
      ALL i<length ?ts.
         num_syms (?ts ! i \<cdot> ?\<sigma>) = num_syms (?ts ! i)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  t_empty)),
              template_var 0)),
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_hole 5),
              template_var 0)))],
       template_predicate (template_app (template_hole 4, t_empty))))]
