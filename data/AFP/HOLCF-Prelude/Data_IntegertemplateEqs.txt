   [("Data_Integer.Integer_arith_strict", "\<bottom> - ?x = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Data_Integer.Integer_arith_strict", "?x - \<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Data_Integer.Integer_arith_strict", "\<bottom> + ?x = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Data_Integer.Integer_arith_strict", "?x + \<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Data_Integer.Integer_arith_strict", "\<bottom> * ?x = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Data_Integer.Integer_arith_strict", "?x * \<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Data_Integer.numeral_Integer_eq", "numeral ?k = MkI$(numeral ?k)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Data_Integer.minus_Integer_eq_bottom_iff",
     "(- ?x = \<bottom>) = (?x = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Data_Integer.eq_Integer_numeral_simps", "eq$0$(numeral ?k) = FF",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Data_Integer.le_Integer_numeral_simps", "le$1$(numeral ?k) = TT",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Data_Integer.le_Integer_numeral_simps", "le$0$(numeral ?k) = TT",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Data_Integer.lt_Integer_numeral_simps", "lt$0$(numeral ?k) = TT",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Data_Integer.eq_Integer_numeral_simps", "eq$(numeral ?k)$0 = FF",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("Data_Integer.le_Integer_numeral_simps", "le$(numeral ?k)$0 = FF",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("Data_Integer.lt_Integer_numeral_simps", "lt$(numeral ?k)$1 = FF",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("Data_Integer.lt_Integer_numeral_simps", "lt$(numeral ?k)$0 = FF",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("Data_Integer.compare_Integer_numeral_simps",
     "compare$0$(numeral ?k) = LT",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Data_Integer.compare_Integer_numeral_simps",
     "compare$(numeral ?k)$0 = GT",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0))),
         template_hole 1),
       template_hole 0)),
    ("Data_Integer.MkI_eq_1_iff", "(MkI$?n = 1) = (?n = 1)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Data_Integer.MkI_eq_0_iff", "(MkI$?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Data_Integer.Integer_arith_simps", "- MkI$?a = MkI$(- ?a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Data_Integer.MkI_eq_numeral_iff",
     "(MkI$?n = numeral ?k) = (?n = numeral ?k)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Data_Integer.diff_Integer_eq_bottom_iff",
     "(?x - ?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Data_Integer.plus_Integer_eq_bottom_iff",
     "(?x + ?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Data_Integer.mult_Integer_eq_bottom_iff",
     "(?x * ?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Data_Integer.Integer_arith_simps", "MkI$?a - MkI$?b = MkI$(?a - ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Data_Integer.Integer_arith_simps", "MkI$?a + MkI$?b = MkI$(?a + ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Data_Integer.plus_MkI_MkI", "MkI$?x + MkI$?y = MkI$(?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Data_Integer.Integer_arith_simps", "MkI$?a * MkI$?b = MkI$(?a * ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Data_Integer.eq_Integer_numeral_simps",
     "eq$(numeral ?k)$(numeral ?l) = (if ?k = ?l then TT else FF)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 1))),
              template_app (template_hole 4, template_var 0))
            )],
       template_dunno)),
    ("Data_Integer.le_Integer_numeral_simps",
     "le$(numeral ?k)$(numeral ?l) = (if ?k <= ?l then TT else FF)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 1))),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Data_Integer.lt_Integer_numeral_simps",
     "lt$(numeral ?k)$(numeral ?l) = (if ?k < ?l then TT else FF)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 1))),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Data_Integer.eq_Integer_bottom_iff",
     "(eq$?x$?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Data_Integer.le_Integer_bottom_iff",
     "(le$?x$?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Data_Integer.lt_Integer_bottom_iff",
     "(lt$?x$?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Data_Integer.compare_Integer_bottom_iff",
     "(compare$?x$?y = \<bottom>) = (?x = \<bottom> | ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_dunno)),
    ("Data_Integer.eq_MkI_MkI",
     "eq$(MkI$?m)$(MkI$?n) = (if ?m = ?n then TT else FF)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 1))),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_dunno)),
    ("Data_Integer.le_MkI_MkI",
     "le$(MkI$?x)$(MkI$?y) = (if ?x <= ?y then TT else FF)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Data_Integer.lt_MkI_MkI",
     "lt$(MkI$?x)$(MkI$?y) = (if ?x < ?y then TT else FF)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Data_Integer.compare_Integer_numeral_simps",
     "compare$(numeral ?k)$(numeral ?l) =
      (if ?k < ?l then LT else if ?l < ?k then GT else EQ)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app (template_hole 5, template_var 1))),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1)),
             template_hole 1),
           template_hole 0)))),
    ("Data_Integer.compare_MkI_MkI",
     "compare$(MkI$?x)$(MkI$?y) =
      (if ?x < ?y then LT else if ?y < ?x then GT else EQ)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1))),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1)),
             template_hole 1),
           template_hole 0))))]
