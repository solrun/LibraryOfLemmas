   [("Data_Bool.neg_neg", "neg$(neg$?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Data_Bool.neg_eq_bottom_iff",
     "(neg$?x = \<bottom>) = (?x = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Data_Bool.neg_eq_FF_iff", "(neg$?x = FF) = (?x = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Data_Bool.neg_eq_TT_iff", "(neg$?x = TT) = (?x = FF)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Data_Bool.neg_eq_simps", "neg$?x = \<bottom> ==> ?x = \<bottom>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Data_Bool.neg_eq_simps", "neg$?x = FF ==> ?x = TT",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 0),
          template_hole 1)],
       template_equation (template_var 0, template_hole 0))),
    ("Data_Bool.neg_eq_simps", "neg$?x = TT ==> ?x = FF",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 0),
          template_hole 1)],
       template_equation (template_var 0, template_hole 0))),
    ("Data_Bool.neg_eq", "(neg$?x = neg$?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Data_Bool.andalso_eq_TT_iff",
     "((?x andalso ?y) = TT) = (?x = TT & ?y = TT)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 1))
           ))),
    ("Data_Bool.orelse_eq_FF_iff",
     "((?x orelse ?y) = FF) = (?x = FF & ?y = FF)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 1))
           ))),
    ("Data_Bool.neg_andalso",
     "neg$(?x andalso ?y) = (neg$?x orelse neg$?y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_hole 0),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("Data_Bool.neg_orelse", "neg$(?x orelse ?y) = (neg$?x andalso neg$?y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_hole 0),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("Data_Bool.andalso_eq_bottom_iff",
     "((?x andalso ?y) = \<bottom>) =
      (?x = \<bottom> | ?x = TT & ?y = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 3)))
           ))),
    ("Data_Bool.andalso_eq_FF_iff",
     "((?x andalso ?y) = FF) = (?x = FF | ?x = TT & ?y = FF)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1)),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 3)))
           ))),
    ("Data_Bool.andalso_assoc",
     "((?x andalso ?y) andalso ?z) = (?x andalso ?y andalso ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Data_Bool.orelse_assoc",
     "((?x orelse ?y) orelse ?z) = (?x orelse ?y orelse ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Data_Bool.eq_eqI",
     "[| ?x = \<bottom> ==> ?y = \<bottom>;
         ?y = \<bottom> ==> ?x = \<bottom>; ?x = TT ==> ?y = TT;
         ?y = TT ==> ?x = TT |]
      ==> ?x = ?y",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_equation (template_var 0, template_hole 1)),
        template_implication
         ([template_equation (template_var 0, template_hole 1)],
          template_equation (template_var 1, template_hole 1)),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_equation (template_var 0, template_hole 0)),
        template_implication
         ([template_equation (template_var 0, template_hole 0)],
          template_equation (template_var 1, template_hole 0))],
       template_equation (template_var 1, template_var 0)))]
