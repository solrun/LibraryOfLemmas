   [("Equivalence_Checking2.atoms_norm",
     "atoms (Equivalence_Checking2.norm ?r) <= atoms ?r",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Equivalence_Checking2.atoms_nderiv",
     "atoms (nderiv ?a ?r) <= atoms ?r",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Equivalence_Checking2.lang_norm",
     "lang ?S (Equivalence_Checking2.norm ?r) = lang ?S ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Equivalence_Checking2.set_add_atoms",
     "set (add_atoms ?r ?as) = atoms ?r Un set ?as",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Equivalence_Checking2.atoms_nPlus",
     "atoms (nPlus ?r ?s) = atoms ?r Un atoms ?s",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Equivalence_Checking2.atoms_nInter",
     "atoms (nInter ?r ?s) <= atoms ?r Un atoms ?s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Equivalence_Checking2.atoms_nTimes",
     "atoms (nTimes ?r ?s) <= atoms ?r Un atoms ?s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Equivalence_Checking2.lang_nInter",
     "lang ?S (nInter ?r ?s) = lang ?S (rexp.Inter ?r ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Equivalence_Checking2.lang_nPlus",
     "lang ?S (nPlus ?r ?s) = lang ?S (Plus ?r ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Equivalence_Checking2.lang_nTimes",
     "lang ?S (nTimes ?r ?s) = lang ?S (Times ?r ?s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Equivalence_Checking2.soundness",
     "check_eqv ?as ?r ?s ==> lang (set ?as) ?r = lang (set ?as) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Equivalence_Checking2.lang_nderiv",
     "?a : ?S ==> lang ?S (nderiv ?a ?r) = Deriv ?a (lang ?S ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Equivalence_Checking2.equal_if_bisimilar",
     "[| ?K <= lists ?S; ?L <= lists ?S; bisimilar ?S ?K ?L |] ==> ?K = ?L",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Equivalence_Checking2.bisim_lang_eq",
     "[| is_bisimulation ?as ?ps; (?r, ?s) : set ?ps |]
      ==> lang (set ?as) ?r = lang (set ?as) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0)))),
    ("Equivalence_Checking2.closure_sound",
     "[| closure ?as ([(?r, ?s)], []) = Some ([], ?ps);
         atoms ?r Un atoms ?s <= set ?as |]
      ==> lang (set ?as) ?r = lang (set ?as) ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 2),
                      template_var 1)),
                  template_hole 7)),
              template_hole 7)),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 10, template_hole 7),
              template_var 0))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2)),
            template_app (template_hole 3, template_var 1)),
          template_app (template_hole 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 3)),
           template_var 1)))),
    ("Equivalence_Checking2.language_coinduct",
     "[| !!K L. ?R K L ==> K <= lists ?S & L <= lists ?S; ?R ?K ?L;
         !!K L. ?R K L ==> ([] : K) = ([] : L);
         !!K L x. [| ?R K L; x : ?S |] ==> ?R (Deriv x K) (Deriv x L) |]
      ==> ?K = ?L",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation (template_var 1, template_var 0)))]
