   [("IEEE_Properties.one_word_le", "?a <= 1",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("IEEE_Properties.emax_pos", "0 < emax ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("IEEE_Properties.emax_pos", "emax ?x ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("IEEE_Properties.minus_minus_float", "- (- ?f) = ?f",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("IEEE_Properties.unat_one_word_le", "unat ?a <= Suc 0",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("IEEE_Properties.float_distinct", "~ (is_denormal ?a & is_zero ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct",
     "~ (is_infinity ?a & is_denormal ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct_finite",
     "~ (is_infinity ?a & is_finite ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_infinity ?a & is_normal ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_infinity ?a & is_zero ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_nan ?a & is_denormal ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct_finite",
     "~ (is_nan ?a & is_finite ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_nan ?a & is_infinity ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_nan ?a & is_normal ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_nan ?a & is_zero ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.float_distinct", "~ (is_normal ?a & is_denormal ?a)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("IEEE_Properties.exponent_uminus",
     "IEEE.exponent (- ?f) = IEEE.exponent ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.fraction_uminus", "fraction (- ?f) = fraction ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.is_denormal_minus_float",
     "is_denormal (- ?f) = is_denormal ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.is_finite_uminus", "is_finite (- ?a) = is_finite ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.is_infinity_uminus",
     "is_infinity (- ?a) = is_infinity ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.is_nan_uminus", "is_nan (- ?a) = is_nan ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.is_normal_minus_float",
     "is_normal (- ?f) = is_normal ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.is_zero_uminus", "is_zero (- ?a) = is_zero ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.float_zero2", "is_zero (- ?x) = is_zero ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.exponent_le", "IEEE.exponent ?a <= mask LENGTH(?'a)",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("IEEE_Properties.float_neg_sign", "sign ?a ~= sign (- ?a)",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("IEEE_Properties.exponent_not_less",
     "~ mask LENGTH(?'a) < IEEE.exponent ?a",
     template_negation
      (
         template_inequation
          (less_than,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("IEEE_Properties.float_eq_refl", "?a \<doteq> ?a = (~ is_nan ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("IEEE_Properties.is_finite_zerosign",
     "is_finite (zerosign ?s ?a) = is_finite ?a",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("IEEE_Properties.denormal_imp_not_zero",
     "is_denormal ?f ==> ~ is_zero ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IEEE_Properties.finite_infinity", "is_finite ?a ==> ~ is_infinity ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IEEE_Properties.finite_nan", "is_finite ?a ==> ~ is_nan ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IEEE_Properties.nan_not_finite", "is_nan ?x ==> ~ is_finite ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IEEE_Properties.normal_imp_not_denormal",
     "is_normal ?f ==> ~ is_denormal ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IEEE_Properties.normal_imp_not_zero", "is_normal ?f ==> ~ is_zero ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("IEEE_Properties.float_cases_finite",
     "is_nan ?a | is_infinity ?a | is_finite ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("IEEE_Properties.sign_minus_float", "sign (- ?f) = 1 - sign ?f",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("IEEE_Properties.bitlen_denormal_mantissa",
     "bitlen \<bar>denormal_mantissa ?x\<bar> <= int LENGTH(?'f)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("IEEE_Properties.val_zero", "is_zero ?a ==> valof ?a = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("IEEE_Properties.float_le_infinity",
     "~ is_nan ?a ==> ?a <= \<infinity>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_inequation (less_equals, template_var 0, template_hole 0))),
    ("IEEE_Properties.bitlen_normal_mantissa",
     "bitlen \<bar>normal_mantissa ?x\<bar> = int (Suc LENGTH(?'f))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("IEEE_Properties.is_finite_closest",
     "is_finite (closest ?v ?p {a. is_finite a} ?x)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app (template_hole 0, t_empty)),
             template_var 0))
         )),
    ("IEEE_Properties.signzero_zero",
     "is_zero ?a ==> valof (zerosign ?s ?a) = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("IEEE_Properties.of_int_leI", "?w <= ?z ==> of_int ?w <= of_int ?z",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("IEEE_Properties.valof_nonpos", "sign ?x = 1 ==> valof ?x <= 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_hole 0))),
    ("IEEE_Properties.valof_nonneg", "sign ?x = 0 ==> 0 <= valof ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("IEEE_Properties.factor_minus", "?x * ?a - ?x = ?x * (?a - (1::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("IEEE_Properties.emax_eq", "emax ?x = 2 ^ LENGTH(?'e) - 1",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("IEEE_Properties.neg_zerosign",
     "- zerosign ?s ?a = zerosign (1 - ?s) (- ?a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("IEEE_Properties.float_frac_le", "fraction ?a <= 2 ^ LENGTH(?'f) - 1",
     template_inequation
      (less_equals, template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("IEEE_Properties.valof_uminus",
     "is_finite ?a ==> valof (- ?a) = - valof ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("IEEE_Properties.float_exp_le",
     "is_finite ?a ==>
      IEEE.exponent ?a <= emax TYPE((?'e, ?'f) IEEE.float) - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)))),
    ("IEEE_Properties.float_abs",
     "~ is_nan ?a ==> \<bar>- ?a\<bar> = \<bar>?a\<bar>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("IEEE_Properties.float_neg_sign1",
     "(sign ?a = sign (- ?b)) = (sign ?a ~= sign ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_negation
        (
           template_equation
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0))
           ))),
    ("IEEE_Properties.defloat_float_zerosign_round_finite",
     "\<bar>?x\<bar> < threshold TYPE((?'e, ?'f) IEEE.float) ==>
      is_finite (zerosign ?s (IEEE.round To_nearest ?x))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)))
           ))),
    ("IEEE_Properties.float_le_topfloat",
     "[| is_finite ?a; 1 < LENGTH(?'e) |] ==> ?a <= topfloat",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_hole 2))],
       template_inequation (less_equals, template_var 0, template_hole 0))),
    ("IEEE_Properties.float_cases",
     "is_nan ?a |
      is_infinity ?a | is_normal ?a | is_denormal ?a | is_zero ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 0)))))
         )),
    ("IEEE_Properties.closest_is_closest",
     "?s ~= {} ==> is_closest ?v ?s ?x (closest ?v ?p ?s ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 3),
               template_var 1))
           ))),
    ("IEEE_Properties.float_plus_comm_eq",
     "[| is_finite ?a; is_finite ?b |] ==> ?a + ?b = ?b + ?a",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("IEEE_Properties.float_val_lt_threshold",
     "[| is_finite ?a; 1 < LENGTH(?'e) |]
      ==> valof ?a < threshold TYPE((?'e, ?'f) IEEE.float)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 5, template_hole 4))],
       template_inequation
        (less_than, template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("IEEE_Properties.float_val_le_largest",
     "[| is_finite ?a; 1 < LENGTH(?'e) |]
      ==> valof ?a <= largest TYPE((?'e, ?'f) IEEE.float)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 5, template_hole 4))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("IEEE_Properties.less_int_natI",
     "[| 0 <= ?x; nat ?x < nat ?y |] ==> ?x < ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("IEEE_Properties.real_le_intI",
     "[| \<lfloor>?x\<rfloor> <= \<lfloor>?y\<rfloor>; ?x : \<int> |]
      ==> ?x <= ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("IEEE_Properties.float_sign_le",
     "(- 1) ^ sign ?a = 1 | (- 1) ^ sign ?a = - 1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)),
                   template_app (template_hole 0, template_var 0))),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)),
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 2, template_hole 1)))
         )),
    ("IEEE_Properties.exp_less", "?a <= ?b ==> 2 ^ ?a <= 2 ^ ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("IEEE_Properties.div_less",
     "?a <= ?b & (0::?'a) < ?c ==> ?a / ?c <= ?b / ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("IEEE_Properties.float_le_neg",
     "[| is_finite ?a; is_finite ?b |] ==> (~ ?a < ?b) = (?b <= ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("IEEE_Properties.error_is_zero",
     "[| is_finite ?a; 1 < LENGTH(?'e) |]
      ==> error TYPE((?'e, ?'f) IEEE.float) (valof ?a) = 0",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("IEEE_Properties.float_val_gt_threshold",
     "[| 1 < LENGTH(?'e); is_finite ?a |]
      ==> - threshold TYPE((?'e, ?'f) IEEE.float) < valof ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, template_hole 6)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("IEEE_Properties.float_val_ge_largest",
     "[| 1 < LENGTH(?'e); is_finite ?a |]
      ==> - largest TYPE((?'e, ?'f) IEEE.float) <= valof ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app (template_hole 7, template_hole 6)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("IEEE_Properties.float_val_ge_bottomfloat",
     "[| 1 < LENGTH(?'e); is_finite ?a |]
      ==> valof (- topfloat) <= valof ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 6, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_app (template_hole 2, template_var 0)))),
    ("IEEE_Properties.is_closest_exists",
     "[| finite ?s; ?s ~= {} |] ==> EX a. is_closest ?v ?s ?x a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("IEEE_Properties.closest_in_set",
     "[| finite ?s; ?s ~= {} |] ==> closest ?v ?p ?s ?x : ?s",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 0)),
             template_var 3)
           ))),
    ("IEEE_Properties.float_eq",
     "[| is_finite ?a; is_finite ?b |]
      ==> ?a \<doteq> ?b = (valof ?a = valof ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("IEEE_Properties.float_lt",
     "[| is_finite ?a; is_finite ?b |]
      ==> (?a < ?b) = (valof ?a < valof ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("IEEE_Properties.float_le",
     "[| is_finite ?a; is_finite ?b |]
      ==> (?a <= ?b) = (valof ?a <= valof ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("IEEE_Properties.real_le_power_numeral_diff",
     "(real ?a <= numeral ?b ^ ?n - 1) = (?a <= numeral ?b ^ ?n - 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_var 0)),
           template_hole 5)),
       template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("IEEE_Properties.float_leI",
     "[| is_finite ?a; is_finite ?b; valof ?a <= valof ?b |] ==> ?a <= ?b",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("IEEE_Properties.float_ge_bottomfloat",
     "[| 1 < LENGTH(?'e); is_finite ?a; is_finite ?a |]
      ==> - topfloat <= ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 5, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_hole 0),
         template_var 0))),
    ("IEEE_Properties.closest_is_closest_finite",
     "[| finite ?s; ?s ~= {} |]
      ==> is_closest ?v ?s ?x (closest ?v ?p ?s ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 3),
               template_var 1))
           ))),
    ("IEEE_Properties.sign_cases",
     "[| sign ?x = 0 ==> ?thesis; sign ?x = 1 ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation
            (template_app (template_hole 2, template_var 1),
             template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_app (template_hole 2, template_var 1),
             template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("IEEE_Properties.normal_exponent_bounds_int",
     "is_normal ?x ==>
      normal_exponent ?x <= 2 ^ (LENGTH(?'e) - 1) - int LENGTH(?'f) - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 13, template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_hole 8))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5)),
                     template_hole 4))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)))),
    ("IEEE_Properties.error_at_worst_lemma",
     "[| \<bar>?x\<bar> < threshold TYPE((?'e, ?'f) IEEE.float);
         is_finite ?a |]
      ==> \<bar>error TYPE((?'e, ?'f) IEEE.float) ?x\<bar>
          <= \<bar>valof ?a - ?x\<bar>",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 2, template_hole 5),
             template_var 1)),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("IEEE_Properties.float_plus_comm",
     "[| is_finite ?a; is_finite ?b; is_finite (?a + ?b) |]
      ==> (?a + ?b) \<doteq> (?b + ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("IEEE_Properties.normal_exponent_bounds_real",
     "is_normal ?x ==>
      real_of_int (normal_exponent ?x)
      <= 2 ^ (LENGTH(?'e) - 1) - real LENGTH(?'f) - 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app (template_hole 13, template_var 0)),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_hole 8))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5)),
                     template_hole 4))),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)))),
    ("IEEE_Properties.float_plus_minus",
     "[| is_finite ?a; is_finite ?b; is_finite (?a - ?b) |]
      ==> (?a + - ?b) \<doteq> (?a - ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("IEEE_Properties.is_infinity_cases",
     "[| is_infinity ?x; ?x = \<infinity> ==> ?thesis;
         ?x = - \<infinity> ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 0, template_hole 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("IEEE_Properties.is_zero_cases",
     "[| is_zero ?x; ?x = 0 ==> ?thesis; ?x = - 0 ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 0, template_hole 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("IEEE_Properties.normal_exponent_bounds_int",
     "is_normal ?x ==>
      2 - 2 ^ (LENGTH(?'e) - 1) - int LENGTH(?'f) <= normal_exponent ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_hole 9))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_hole 9))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5)),
                   template_hole 4)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 0)))),
    ("IEEE_Properties.real_of_int_le_2_powr_bitlenI",
     "[| bitlen \<bar>?x\<bar> <= ?m; real_of_int ?m <= ?n |]
      ==> real_of_int ?x <= 2 powr ?n - 1",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 2)),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0)),
           template_hole 0)))),
    ("IEEE_Properties.finite_float_sub",
     "[| is_finite ?a; is_finite ?b;
         \<bar>valof ?a - valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> is_finite (?a - ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 3, template_var 0))),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IEEE_Properties.finite_float_add",
     "[| is_finite ?a; is_finite ?b;
         \<bar>valof ?a + valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> is_finite (?a + ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 3, template_var 0))),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IEEE_Properties.finite_float_mul",
     "[| is_finite ?a; is_finite ?b;
         \<bar>valof ?a * valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> is_finite (?a * ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 3, template_var 0))),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IEEE_Properties.normal_exponent_bounds_real",
     "is_normal ?x ==>
      2 - 2 ^ (LENGTH(?'e) - 1) - real LENGTH(?'f)
      <= real_of_int (normal_exponent ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_hole 10))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 11, template_hole 10))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)),
                   template_hole 5)))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("IEEE_Properties.bound_at_worst_lemma",
     "[| \<bar>?x\<bar> < threshold TYPE((?'e, ?'f) IEEE.float);
         is_finite ?a |]
      ==> \<bar>valof (IEEE.round To_nearest ?x) - ?x\<bar>
          <= \<bar>valof ?a - ?x\<bar>",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_hole 6)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1))),
             template_var 1)),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_var 1))))),
    ("IEEE_Properties.float_eqI",
     "[| sign ?x = sign ?y; fraction ?x = fraction ?y;
         IEEE.exponent ?x = IEEE.exponent ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("IEEE_Properties.float_lt_trans",
     "[| is_finite ?a; is_finite ?b; is_finite ?c; ?a < ?b; ?b < ?c |]
      ==> ?a < ?c",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("IEEE_Properties.float_le_less_trans",
     "[| is_finite ?a; is_finite ?b; is_finite ?c; ?a <= ?b; ?b < ?c |]
      ==> ?a < ?c",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("IEEE_Properties.float_le_trans",
     "[| is_finite ?a; is_finite ?b; is_finite ?c; ?a <= ?b; ?b <= ?c |]
      ==> ?a <= ?c",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("IEEE_Properties.float_neg_add",
     "[| is_finite ?a; is_finite ?b; is_finite (?a - ?b) |]
      ==> valof ?a + valof (- ?b) = valof ?a - valof ?b",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("IEEE_Properties.finite_float_div",
     "[| is_finite ?a; is_finite ?b; ~ is_zero ?b;
         \<bar>valof ?a / valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> is_finite (?a / ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 3, template_var 0))),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IEEE_Properties.closest_is_everything",
     "[| finite ?s; ?s ~= {} |]
      ==> is_closest ?v ?s ?x (closest ?v ?p ?s ?x) &
          ((EX b. is_closest ?v ?s ?x b & ?p b) -->
           ?p (closest ?v ?p ?s ?x))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_negation
         (template_equation (template_var 3, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 3),
                   template_var 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 0),
                     template_var 3),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_app
                (template_var 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 0),
                     template_var 3),
                   template_var 1))))
           ))),
    ("IEEE_Properties.error_float_sub",
     "[| is_finite ?a; is_finite ?b;
         \<bar>valof ?a - valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> valof (?a - ?b) =
          valof ?a - valof ?b +
          error TYPE((?'e, ?'f) IEEE.float) (valof ?a - valof ?b)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app (template_hole 6, template_var 0))),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0))),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0))))))),
    ("IEEE_Properties.error_float_add",
     "[| is_finite ?a; is_finite ?b;
         \<bar>valof ?a + valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> valof (?a + ?b) =
          valof ?a + valof ?b +
          error TYPE((?'e, ?'f) IEEE.float) (valof ?a + valof ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 9, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 5, template_var 0))),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app (template_hole 5, template_var 0))))))),
    ("IEEE_Properties.error_float_mul",
     "[| is_finite ?a; is_finite ?b;
         \<bar>valof ?a * valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> valof (?a * ?b) =
          valof ?a * valof ?b +
          error TYPE((?'e, ?'f) IEEE.float) (valof ?a * valof ?b)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_inequation
         (less_than,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app (template_hole 6, template_var 0))),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0))),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0))))))),
    ("IEEE_Properties.error_float_div",
     "[| is_finite ?a; is_finite ?b; ~ is_zero ?b;
         \<bar>valof ?a / valof ?b\<bar>
         < threshold TYPE((?'e, ?'f) IEEE.float) |]
      ==> valof (?a / ?b) =
          valof ?a / valof ?b +
          error TYPE((?'e, ?'f) IEEE.float) (valof ?a / valof ?b)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 10, template_var 0))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app (template_hole 6, template_var 0))),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0))),
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 6, template_var 0))))))),
    ("IEEE_Properties.valof_eq",
     "valof ?x =
      (if IEEE.exponent ?x = 0
       then (- 1) ^ sign ?x * (2 / 2 ^ bias TYPE((?'a, ?'b) IEEE.float)) *
            (real (fraction ?x) / 2 ^ LENGTH(?'b))
       else (- 1) ^ sign ?x *
            (2 ^ IEEE.exponent ?x / 2 ^ bias TYPE((?'a, ?'b) IEEE.float)) *
            (1 + real (fraction ?x) / 2 ^ LENGTH(?'b)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 19,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app (template_hole 17, template_var 0)),
                   template_hole 16)),
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13, template_hole 12)),
                         template_app (template_hole 11, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_hole 7))),
                       template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8, template_hole 7))),
                         template_app
                          (template_hole 6, template_hole 5))))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 7))),
                     template_app (template_hole 2, template_hole 1))))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 13, template_hole 12)),
                       template_app (template_hole 11, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8, template_hole 7))),
                         template_app (template_hole 17, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_hole 7))),
                       template_app (template_hole 6, template_hole 5))))),
               template_app
                (template_app (template_hole 0, template_hole 12),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0))),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 7))),
                     template_app (template_hole 2, template_hole 1))))))
           ))),
    ("IEEE_Properties.float_induct",
     "[| !!x. [| is_normal x;
                 valof x =
                 real_of_int (normal_mantissa x) *
                 2 powr real_of_int (normal_exponent x) |]
              ==> ?P x;
         !!x. [| is_denormal x;
                 valof x =
                 real_of_int (denormal_mantissa x) *
                 2 powr
                 real_of_int
                  (denormal_exponent TYPE((?'e, ?'f) IEEE.float)) |]
              ==> ?P x;
         ?P 0; ?P (- 0); ?P \<infinity>; ?P (- \<infinity>);
         !!x. is_nan x ==> ?P x |]
      ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 2, template_hole 3))
            ),
        template_predicate (template_app (template_var 1, template_hole 1)),
        template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
