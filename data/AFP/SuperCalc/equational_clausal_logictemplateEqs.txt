   [("equational_clausal_logic.composition_of_substs_cl",
     "subst_cl (subst_cl ?C ?\<sigma>) ?\<eta> =
      subst_cl ?C (?\<sigma> \<lozenge> ?\<eta>)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("equational_clausal_logic.composition_of_substs",
     "?t \<lhd> ?\<sigma> \<lhd> ?\<eta> =
      ?t \<lhd> ?\<sigma> \<lozenge> ?\<eta>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("equational_clausal_logic.composition_of_substs_lit",
     "subst_lit (subst_lit ?l ?\<sigma>) ?\<eta> =
      subst_lit ?l (?\<sigma> \<lozenge> ?\<eta>)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("equational_clausal_logic.composition_of_substs_eq",
     "subst_equation (subst_equation ?e ?\<sigma>) ?\<eta> =
      subst_equation ?e (?\<sigma> \<lozenge> ?\<eta>)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0))))]
