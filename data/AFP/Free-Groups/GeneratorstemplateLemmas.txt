   [("Generators.gen_spanp_gen_span_eq",
     "gen_spanp ?G (%x. x : ?gens) =
      (%x. x : \<langle>?gens\<rangle>\<^bsub>?G\<^esub>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       t_empty)),
    ("Generators.group_homI",
     "[| ?h ` carrier ?g1.0 <= carrier ?g2.0;
         ALL x:carrier ?g1.0.
            ALL y:carrier ?g1.0.
               ?h (x \<otimes>\<^bsub>?g1.0\<^esub> y) =
               ?h x \<otimes>\<^bsub>?g2.0\<^esub> ?h y |]
      ==> ?h : hom ?g1.0 ?g2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app (template_hole 7, template_var 1)),
          template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 7, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Generators.hom_unique_on_span",
     "[| Group.group ?G; Group.group ?H; ?gens <= carrier ?G;
         ?h : hom ?G ?H; ?h' : hom ?G ?H; ALL g:?gens. ?h g = ?h' g |]
      ==> ALL x:\<langle>?gens\<rangle>\<^bsub>?G\<^esub>. ?h x = ?h' x",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             t_empty)
           ))),
    ("Generators.group_isoI",
     "[| Group.group ?G; Group.group ?H;
         ALL x:carrier ?G.
            ?h x = \<one>\<^bsub>?H\<^esub> -->
            x = \<one>\<^bsub>?G\<^esub>;
         ?h ` carrier ?G = carrier ?H;
         ALL x:carrier ?G.
            ALL y:carrier ?G.
               ?h (x \<otimes>\<^bsub>?G\<^esub> y) =
               ?h x \<otimes>\<^bsub>?H\<^esub> ?h y |]
      ==> ?h : Group.iso ?G ?H",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 2)),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_app (template_hole 12, template_var 2)),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           )))]
