   [("Lexer.Prf_elims", "\<turnstile> ?v : Zero ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate (template_var 0))),
    ("Lexer.Posix_elims", "?s \<in> Zero \<rightarrow> ?v ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_hole 0),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("Lexer.flat_Stars",
     "Lexer.flat (Stars ?vs) = concat (map Lexer.flat ?vs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Lexer.mkeps_nullable", "nullable ?r ==> \<turnstile> mkeps ?r : ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Lexer.mkeps_flat", "nullable ?r ==> Lexer.flat (mkeps ?r) = []",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Lexer.Posix_mkeps",
     "nullable ?r ==> [] \<in> ?r \<rightarrow> mkeps ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lexer.Posix1a",
     "?s \<in> ?r \<rightarrow> ?v ==> \<turnstile> ?v : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lexer.L_flat_Prf1",
     "\<turnstile> ?v : ?r ==> Lexer.flat ?v : lang ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lexer.Posix1", "?s \<in> ?r \<rightarrow> ?v ==> Lexer.flat ?v = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 2))),
    ("Lexer.Posix1", "?s \<in> ?r \<rightarrow> ?v ==> ?s : lang ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Lexer.lexer_correct_None", "(?s ~: lang ?r) = (lexer ?r ?s = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Lexer.lexer_correctness",
     "(lexer ?r ?s = Some ?v) = ?s \<in> ?r \<rightarrow> ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Lexer.lexer_correctness",
     "(lexer ?r ?s = None) = (\<nexists>v. ?s \<in> ?r \<rightarrow> v)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Lexer.Prf_injval",
     "\<turnstile> ?v : deriv ?c ?r ==> \<turnstile> injval ?r ?c ?v : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Lexer.Prf_Stars",
     "ALL v:set ?vs. \<turnstile> v : ?r ==>
      \<turnstile> Stars ?vs : Star ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lexer.Prf_elims",
     "[| \<turnstile> ?v : One; ?v = Void ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Lexer.L_flat_Prf", "lang ?r = {Lexer.flat v |v. \<turnstile> v : ?r}",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Lexer.Posix_determ",
     "[| ?s \<in> ?r \<rightarrow> ?v1.0; ?s \<in> ?r \<rightarrow> ?v2.0 |]
      ==> ?v1.0 = ?v2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Lexer.L_flat_Prf2",
     "?s : lang ?r ==> EX v. \<turnstile> v : ?r & Lexer.flat v = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lexer.Prf_elims",
     "[| \<turnstile> ?v : Atom ?c; ?v = Atm ?c ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 0, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Lexer.Prf_injval_flat",
     "\<turnstile> ?v : deriv ?c ?r ==>
      Lexer.flat (injval ?r ?c ?v) = ?c # Lexer.flat ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 2, template_var 2))))),
    ("Lexer.Posix_injval",
     "?s \<in> deriv ?c ?r \<rightarrow> ?v ==>
      (?c # ?s) \<in> ?r \<rightarrow> injval ?r ?c ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 3)),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Lexer.lexer_correct_Some",
     "(?s : lang ?r) =
      (EX v. lexer ?r ?s = Some v & ?s \<in> ?r \<rightarrow> v)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Lexer.Star_string",
     "?s : star ?A ==> EX ss. concat ss = ?s & (ALL s:set ss. s : ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lexer.Posix_elims",
     "[| ?s \<in> One \<rightarrow> ?v; [| ?s = []; ?v = Void |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_hole 4),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 2)],
          template_implication
           ([template_equation (template_var 1, template_hole 0)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lexer.Posix_elims",
     "[| ?s \<in> Atom ?c \<rightarrow> ?v;
         [| ?s = [?c]; ?v = Atm ?c |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 3,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2))],
          template_implication
           ([template_equation
              (template_var 1,
               template_app (template_hole 0, template_var 2))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lexer.Prf_elims",
     "[| \<turnstile> ?v : Times ?r1.0 ?r2.0;
         !!v1 v2.
            [| ?v = Seq v1 v2; \<turnstile> v1 : ?r1.0;
               \<turnstile> v2 : ?r2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Lexer.Star_val",
     "ALL s:set ?ss. EX v. s = Lexer.flat v & \<turnstile> v : ?r ==>
      EX vs.
         concat (map Lexer.flat vs) = concat ?ss &
         (ALL v:set vs. \<turnstile> v : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lexer.Prf_elims",
     "[| \<turnstile> ?v : Plus ?r1.0 ?r2.0;
         !!v1. [| ?v = val.Left v1; \<turnstile> v1 : ?r1.0 |] ==> ?P;
         !!v2. [| ?v = val.Right v2; \<turnstile> v2 : ?r2.0 |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Lexer.Posix_elims",
     "[| ?s \<in> Plus ?r1.0 ?r2.0 \<rightarrow> ?v;
         !!v. [| ?v = val.Left v; ?s \<in> ?r1.0 \<rightarrow> v |] ==> ?P;
         !!v. [| ?v = val.Right v; ?s \<in> ?r2.0 \<rightarrow> v;
                 ?s ~: lang ?r1.0 |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Lexer.Posix_elims",
     "[| ?s \<in> Times ?r1.0 ?r2.0 \<rightarrow> ?v;
         !!s1 v1 s2 v2.
            [| ?s = s1 @ s2; ?v = Seq v1 v2;
               s1 \<in> ?r1.0 \<rightarrow> v1;
               s2 \<in> ?r2.0 \<rightarrow> v2;
               ALL s\<^sub>3.
                  s1 @ s\<^sub>3 : lang ?r1.0 -->
                  s\<^sub>3 = [] |
                  (ALL s\<^sub>4.
                      s\<^sub>3 @ s\<^sub>4 = s2 -->
                      s\<^sub>4 ~: lang ?r2.0) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 4),
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Lexer.Posix_elims",
     "[| ?s \<in> Star ?r \<rightarrow> ?v;
         !!s1 v s2 vs.
            [| ?s = s1 @ s2; ?v = Stars (v # vs);
               s1 \<in> ?r \<rightarrow> v;
               s2 \<in> Star ?r \<rightarrow> Stars vs; Lexer.flat v ~= [];
               ALL s\<^sub>3.
                  s1 @ s\<^sub>3 : lang ?r -->
                  s\<^sub>3 = [] |
                  (ALL s\<^sub>4.
                      s\<^sub>3 @ s\<^sub>4 = s2 -->
                      s\<^sub>4 ~: star (lang ?r)) |]
            ==> ?P;
         [| ?s = []; ?v = Stars [] |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 3),
                template_app (template_hole 18, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 7)],
          template_implication
           ([template_equation
              (template_var 1,
               template_app (template_hole 11, template_hole 0))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0)))]
