   [("Pairing_Heap_Tree_Analysis.link_size", "size (link ?hp) = size ?hp",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Pairing_Heap_Tree_Analysis.size_pass\<^sub>1",
     "size (pass\<^sub>1 ?hp) = size ?hp",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Pairing_Heap_Tree_Analysis.size_pass\<^sub>2",
     "size (pass\<^sub>2 ?hp) = size ?hp",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Pairing_Heap_Tree_Analysis.pass\<^sub>1_len",
     "len (pass\<^sub>1 ?h) <= len ?h",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Pairing_Heap_Tree_Analysis.is_root_del_min",
     "is_root ?h ==> is_root (del_min ?h)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Pairing_Heap_Tree_Analysis.is_root_insert",
     "is_root ?h ==> is_root (Pairing_Heap_Tree.insert ?x ?h)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Pairing_Heap_Tree_Analysis.ppos", "is_root ?s ==> 0 <= \<Phi> ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Pairing_Heap_Tree_Analysis.inv_state",
     "Pairing_Heap_Tree_Analysis.wf ?ot ==> is_root (state ?ot)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Pairing_Heap_Tree_Analysis.is_root_merge",
     "[| is_root ?h1.0; is_root ?h2.0 |] ==> is_root (merge ?h1.0 ?h2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pairing_Heap_Tree_Analysis.t_sum_le_U_sum",
     "Pairing_Heap_Tree_Analysis.wf ?ot ==> cost_sum ?ot <= U_sum ?ot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 3),
             template_hole 0),
           template_var 0)))),
    ("Pairing_Heap_Tree_Analysis.t_sum_le_a_sum",
     "Pairing_Heap_Tree_Analysis.wf ?ot ==> cost_sum ?ot <= acost_sum ?ot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 3),
               template_hole 2),
             template_hole 0),
           template_var 0)))),
    ("Pairing_Heap_Tree_Analysis.a_sum_le_U_sum",
     "Pairing_Heap_Tree_Analysis.wf ?ot ==> acost_sum ?ot <= U_sum ?ot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_hole 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 4),
             template_hole 0),
           template_var 0)))),
    ("Pairing_Heap_Tree_Analysis.\<Delta>\<Phi>_pass1_ub_pass1",
     "?hs ~= \<langle>\<rangle> ==>
      \<Phi> (pass\<^sub>1 ?hs) - \<Phi> ?hs <= ub_pass\<^sub>1 ?hs",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Pairing_Heap_Tree_Analysis.size_merge",
     "[| is_root ?h1.0; is_root ?h2.0 |]
      ==> size (merge ?h1.0 ?h2.0) = size ?h1.0 + size ?h2.0",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Pairing_Heap_Tree_Analysis.inv_exec",
     "[| ALL s:set ?ss. is_root s; length ?ss = arity ?f |]
      ==> is_root (exec ?f ?ss)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Pairing_Heap_Tree_Analysis.t_sum_a_sum",
     "Pairing_Heap_Tree_Analysis.wf ?ot ==>
      cost_sum ?ot = acost_sum ?ot - \<Phi> (state ?ot)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 5),
                   template_hole 4),
                 template_hole 1),
               template_var 0)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 0)))))),
    ("Pairing_Heap_Tree_Analysis.\<Delta>\<Phi>_pass2",
     "?hs ~= \<langle>\<rangle> ==>
      \<Phi> (pass\<^sub>2 ?hs) - \<Phi> ?hs <= log 2 (real (size ?hs))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0))),
           template_app (template_hole 7, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Pairing_Heap_Tree_Analysis.\<Delta>\<Phi>_insert",
     "is_root ?hp ==>
      \<Phi> (Pairing_Heap_Tree.insert ?x ?hp) - \<Phi> ?hp
      <= log 2 (real (size ?hp + 1))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_app (template_hole 9, template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_hole 0)))))),
    ("Pairing_Heap_Tree_Analysis.a_le_U",
     "[| ALL s:set ?ss. is_root s; length ?ss = arity ?f |]
      ==> acost ?f ?ss <= U ?f ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_hole 1),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Pairing_Heap_Tree_Analysis.\<Delta>\<Phi>_pass1",
     "?hs ~= \<langle>\<rangle> ==>
      \<Phi> (pass\<^sub>1 ?hs) - \<Phi> ?hs
      <= 2 * log 2 (real (size ?hs)) - real (len ?hs) + 2",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 0))),
           template_app (template_hole 10, template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4))),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0))))),
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0)))),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4)))))),
    ("Pairing_Heap_Tree_Analysis.U",
     "[| ALL s:set ?ss. is_root s; length ?ss = arity ?f |]
      ==> real (cost ?f ?ss) + \<Phi> (exec ?f ?ss) -
          sum_list (map \<Phi> ?ss)
          <= U ?f ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 1)),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_app (template_hole 10, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1))),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 4),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Pairing_Heap_Tree_Analysis.\<Delta>\<Phi>_del_min",
     "?hs ~= \<langle>\<rangle> ==>
      \<Phi> (del_min \<langle>?hs, ?x, \<langle>\<rangle>\<rangle>) -
      \<Phi> \<langle>?hs, ?x, \<langle>\<rangle>\<rangle>
      <= 3 * log 2 (real (size ?hs)) - real (len ?hs) + 2",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 15))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app (template_hole 10, template_var 1),
                     template_var 0),
                   template_hole 15)))),
           template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 0),
               template_hole 15))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 3, template_hole 5))),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1))))),
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 1)))),
           template_app
            (template_hole 7,
             template_app (template_hole 3, template_hole 5)))))),
    ("Pairing_Heap_Tree_Analysis.\<Delta>\<Phi>_merge",
     "[| ?h1.0 = \<langle>?hs1.0, ?x1.0, \<langle>\<rangle>\<rangle>;
         ?h2.0 = \<langle>?hs2.0, ?x2.0, \<langle>\<rangle>\<rangle> |]
      ==> \<Phi> (merge ?h1.0 ?h2.0) - \<Phi> ?h1.0 - \<Phi> ?h2.0
          <= log 2 (real (size ?h1.0 + size ?h2.0)) + 1",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3),
            template_hole 13)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 14, template_var 1),
              template_var 0),
            template_hole 13))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 5),
                     template_var 2))),
               template_app (template_hole 10, template_var 5))),
           template_app (template_hole 10, template_var 2)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 5)),
                   template_app (template_hole 1, template_var 2))))),
           template_hole 0))))]
