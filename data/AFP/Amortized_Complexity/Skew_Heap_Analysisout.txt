Loading theory "Draft.Priority_Queue_ops_merge" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis" via "Skew_Heap.Skew_Heap" via "HOL-Library.Tree_Multiset" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.119s elapsed time, 0.491s cpu time, 0.040s GC time
Loading theory "HOL-Library.Pattern_Aliases" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis" via "Skew_Heap.Skew_Heap")
### ML warning (line 135 of "~~/src/HOL/Library/Pattern_Aliases.thy"):
### Pattern is not exhaustive.
val check_pattern_syntax = fn: term -> term
val uncheck_pattern_syntax = fn: Proof.context -> term -> term
bundle pattern_aliases
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
val it = (): unit
### theory "HOL-Library.Pattern_Aliases"
### 0.134s elapsed time, 0.534s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Nat_Bijection"
### 0.352s elapsed time, 1.406s cpu time, 0.111s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Set_Algebras"
### 0.234s elapsed time, 0.916s cpu time, 0.070s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.579s elapsed time, 2.307s cpu time, 0.193s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis" via "Skew_Heap.Skew_Heap" via "HOL-Library.Tree_Multiset")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
### theory "Draft.Priority_Queue_ops_merge"
### 0.860s elapsed time, 3.415s cpu time, 0.276s GC time
Loading theory "Draft.Amortized_Framework" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.143s elapsed time, 4.340s cpu time, 0.941s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
locale Amortized
  fixes arity :: "'op => nat"
    and exec :: "'op => 's list => 's"
    and inv :: "'s => bool"
    and cost :: "'op => 's list => nat"
    and \<Phi> :: "'s => real"
    and U :: "'op => 's list => real"
  assumes "Amortized arity exec inv cost \<Phi> U"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
locale Amortized2
  fixes arity :: "'op => nat"
    and exec :: "'op => 's list => 's"
    and inv :: "'s => bool"
    and cost :: "'op => 's list => nat"
    and \<Phi> :: "'s => real"
    and U :: "'op => 's list => real"
    and exec' :: "'op => 't list => 't"
    and inv' :: "'t => bool"
    and cost' :: "'op => 't list => nat"
    and U' :: "'op => 't list => real"
    and hom :: "'t => 's"
  assumes "Amortized2 arity exec inv cost \<Phi> U exec' inv' cost' U' hom"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Amortized_Framework"
### 1.302s elapsed time, 4.969s cpu time, 1.008s GC time
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.849s elapsed time, 3.180s cpu time, 0.338s GC time
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.555s elapsed time, 8.751s cpu time, 2.199s GC time
Loading theory "Draft.Templates" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.ExtrEqs")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.109s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Skew_Heap_AnalysisMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.537s elapsed time, 1.126s cpu time, 0.120s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.660s elapsed time, 10.209s cpu time, 2.374s GC time
Loading theory "HOL-Data_Structures.Priority_Queue_Specs" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis" via "Skew_Heap.Skew_Heap" via "HOL-Data_Structures.Heaps")
Loading theory "HOL-Library.Tree_Multiset" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis" via "Skew_Heap.Skew_Heap")
locale Priority_Queue
  fixes empty :: "'q"
    and is_empty :: "'q => bool"
    and insert :: "'a => 'q => 'q"
    and get_min :: "'q => 'a"
    and del_min :: "'q => 'q"
    and invar :: "'q => bool"
    and mset :: "'q => 'a multiset"
  assumes "Priority_Queue empty is_empty insert get_min del_min invar mset"
locale Priority_Queue_Merge
  fixes is_empty :: "'q => bool"
    and insert :: "'a => 'q => 'q"
    and get_min :: "'q => 'a"
    and del_min :: "'q => 'q"
    and invar :: "'q => bool"
    and mset :: "'q => 'a multiset"
    and empty :: "'q"
    and merge :: "'q => 'q => 'q"
  assumes
    "Priority_Queue_Merge is_empty insert get_min del_min invar mset empty
      merge"
### theory "HOL-Data_Structures.Priority_Queue_Specs"
### 0.051s elapsed time, 0.149s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree_Multiset"
### 0.560s elapsed time, 1.363s cpu time, 0.951s GC time
Loading theory "HOL-Data_Structures.Heaps" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis" via "Skew_Heap.Skew_Heap")
locale Heap
  fixes insert :: "'a => 'a tree => 'a tree"
    and del_min :: "'a tree => 'a tree"
  assumes "Heap insert del_min"
Found termination order: "{}"
locale Heap_Merge
  fixes merge :: "'a tree => 'a tree => 'a tree"
  assumes "Heap_Merge merge"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Data_Structures.Heaps"
### 0.300s elapsed time, 0.302s cpu time, 0.000s GC time
Loading theory "Skew_Heap.Skew_Heap" (required by "Draft.Skew_Heap_AnalysisMoreTemplates" via "Draft.Skew_Heap_Analysis")
### theory "Skew_Heap.Skew_Heap"
### 0.391s elapsed time, 0.427s cpu time, 0.047s GC time
Loading theory "Draft.Skew_Heap_Analysis" (required by "Draft.Skew_Heap_AnalysisMoreTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v. exec (Insert v) [] = undefined
### !!v va vc vd. exec (Insert v) (va # vc # vd) = undefined
### exec Del_min [] = undefined
### (12 more)
Found termination order: "{}"
### Missing patterns in function definition:
### !!v. cost (Insert v) [] = undefined
### !!v va vc vd. cost (Insert v) (va # vc # vd) = undefined
### cost Del_min [] = undefined
### (12 more)
Found termination order: "{}"
### Missing patterns in function definition:
### !!v. U (Insert v) [] = undefined
### !!v va vc vd. U (Insert v) (va # vc # vd) = undefined
### U Del_min [] = undefined
### (12 more)
Found termination order: "{}"
### theory "Draft.Skew_Heap_Analysis"
### 1.617s elapsed time, 2.156s cpu time, 0.288s GC time
Loading theory "Draft.Skew_Heap_AnalysisMoreTemplates"
val templateLemmas =
   [("Skew_Heap_Analysis.\<Phi>_nneg", "0 <= \<Phi> ?t",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Skew_Heap_Analysis.T_merge_nneg", "0 <= T_merge ?t1.0 ?t2.0",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Skew_Heap_Analysis.rh1", "rh ?l ?r <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_hole 0)),
    ("Skew_Heap_Analysis.inv_state", "Skew_Heap_Analysis.wf ?ot ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("Skew_Heap_Analysis.ppos", "True ==> 0 <= real_of_int (\<Phi> ?s)",
     template_implication
      ([template_predicate (template_hole 4)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Skew_Heap_Analysis.Gexp", "2 ^ lrh ?t <= size ?t + 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Skew_Heap_Analysis.Dexp", "2 ^ rlh ?t <= size ?t + 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Skew_Heap_Analysis.Glog", "real (lrh ?t) <= log 2 (real (size1 ?t))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app
          (template_hole 6,
           template_app (template_hole 0, template_var 0))))),
    ("Skew_Heap_Analysis.Dlog", "real (rlh ?t) <= log 2 (real (size1 ?t))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app
          (template_hole 6,
           template_app (template_hole 0, template_var 0))))),
    ("Skew_Heap_Analysis.t_sum_le_U_sum",
     "Skew_Heap_Analysis.wf ?ot ==> cost_sum ?ot <= U_sum ?ot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 3),
             template_hole 0),
           template_var 0)))),
    ("Skew_Heap_Analysis.inv_exec",
     "[| ALL s:set ?ss. True; length ?ss = arity ?f |] ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate (template_hole 3))),
    ("Skew_Heap_Analysis.t_sum_le_a_sum",
     "Skew_Heap_Analysis.wf ?ot ==> cost_sum ?ot <= acost_sum ?ot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 4),
               template_hole 3),
             t_empty),
           template_var 0)))),
    ("Skew_Heap_Analysis.a_sum_le_U_sum",
     "Skew_Heap_Analysis.wf ?ot ==> acost_sum ?ot <= U_sum ?ot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4),
             t_empty),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 5),
             template_hole 0),
           template_var 0)))),
    ("Skew_Heap_Analysis.t_sum_a_sum",
     "Skew_Heap_Analysis.wf ?ot ==>
      cost_sum ?ot = acost_sum ?ot - real_of_int (\<Phi> (state ?ot))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_hole 5),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 6),
                   template_hole 5),
                 t_empty),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 6),
                 template_var 0))))))),
    ("Skew_Heap_Analysis.a_le_U",
     "[| ALL s:set ?ss. True; length ?ss = arity ?f |]
      ==> acost ?f ?ss <= U ?f ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 3),
               t_empty),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Skew_Heap_Analysis.amor_le",
     "int (T_merge ?t1.0 ?t2.0) + \<Phi> (merge ?t1.0 ?t2.0) -
      \<Phi> ?t1.0 -
      \<Phi> ?t2.0
      <= int (lrh (merge ?t1.0 ?t2.0) + rlh ?t1.0 + rlh ?t2.0 + 1)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0)))),
             template_app (template_hole 5, template_var 1))),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0))),
                   template_app (template_hole 1, template_var 1))),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("Skew_Heap_Analysis.a_del_min",
     "real_of_int (T_del_min ?t + \<Phi> (skew_heap.del_min ?t) - \<Phi> ?t)
      <= 3 * log 2 (real (size1 ?t + 2)) + 2",
     template_inequation
      (less_equals,
       template_app
        (template_hole 17,
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 15,
                 template_app (template_hole 14, template_var 0)),
               template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_var 0)))),
           template_app (template_hole 13, template_var 0))),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 4, template_hole 6))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_hole 6))))))),
         template_app
          (template_hole 8,
           template_app (template_hole 4, template_hole 6))))),
    ("Skew_Heap_Analysis.plus_log_le_2log_plus",
     "[| 0 < ?x; 0 < ?y; 1 < ?b |]
      ==> log ?b ?x + log ?b ?y <= 2 * log ?b (?x + ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)))))),
    ("Skew_Heap_Analysis.a_insert",
     "real_of_int
       (T_insert ?a ?t + \<Phi> (skew_heap.insert ?a ?t) - \<Phi> ?t)
      <= 3 * log 2 (real (size1 ?t + 2)) + 2",
     template_inequation
      (less_equals,
       template_app
        (template_hole 17,
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 14, template_var 1),
                   template_var 0)),
               template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_app (template_hole 12, template_hole 11),
                     template_var 1),
                   template_var 0)))),
           template_app (template_hole 13, template_var 0))),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 4, template_hole 6))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_hole 6))))))),
         template_app
          (template_hole 8,
           template_app (template_hole 4, template_hole 6))))),
    ("Skew_Heap_Analysis.a_merge",
     "real_of_int
       (int (T_merge ?t1.0 ?t2.0) + \<Phi> (merge ?t1.0 ?t2.0) -
        \<Phi> ?t1.0 -
        \<Phi> ?t2.0)
      <= 3 * log 2 (real (size1 ?t1.0 + size1 ?t2.0)) + 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 17,
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_var 1),
                         template_var 0))),
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 1),
                       template_var 0)))),
               template_app (template_hole 12, template_var 1))),
           template_app (template_hole 12, template_var 0))),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_hole 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 4, template_hole 6))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0)))))),
         template_hole 0))),
    ("Skew_Heap_Analysis.U",
     "[| ALL s:set ?ss. True; length ?ss = arity ?f |]
      ==> real (cost ?f ?ss) + real_of_int (\<Phi> (exec ?f ?ss)) -
          (SUM x<-?ss. real_of_int (\<Phi> x))
          <= U ?f ?ss",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 1)),
              t_empty)
            ),
        template_equation
         (template_app (template_hole 12, template_var 1),
          template_app (template_hole 11, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 1))),
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 1))))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1))))]:
   (string * thm * template) list
### theory "Draft.Skew_Heap_AnalysisMoreTemplates"
### 0.409s elapsed time, 0.645s cpu time, 0.089s GC time
val it = (): unit
