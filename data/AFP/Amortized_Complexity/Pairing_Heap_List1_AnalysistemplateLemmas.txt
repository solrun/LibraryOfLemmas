   [("Pairing_Heap_List1_Analysis.\<Phi>_hps_ge0", "0 <= \<Phi>_hps ?hs",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Pairing_Heap_List1_Analysis.merge_Empty", "merge heap.Empty ?h = ?h",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Pairing_Heap_List1_Analysis.is_root_if_no_Empty",
     "no_Empty ?h ==> is_root ?h",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Pairing_Heap_List1_Analysis.\<Phi>_hps1",
     "\<Phi>_hps [?h] = \<Phi> ?h",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Pairing_Heap_List1_Analysis.pass1_Nil_iff",
     "(pass\<^sub>1 ?hs = []) = (?hs = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Pairing_Heap_List1_Analysis.no_Empty_ge0",
     "no_Empty ?h ==> 0 < size_hp ?h",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Pairing_Heap_List1_Analysis.size_hp_merge",
     "size_hp (merge ?h1.0 ?h2.0) = size_hp ?h1.0 + size_hp ?h2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Pairing_Heap_List1_Analysis.pass\<^sub>1_size",
     "size_hps (pass\<^sub>1 ?hs) = size_hps ?hs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Pairing_Heap_List1_Analysis.no_Emptys_hps",
     "no_Empty ?h ==> no_Emptys (hps ?h)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             t_empty)
           ))),
    ("Pairing_Heap_List1_Analysis.is_root_pass2",
     "no_Emptys ?hs ==> is_root (pass\<^sub>2 ?hs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Pairing_Heap_List1_Analysis.is_root_merge",
     "[| is_root ?h1.0; is_root ?h2.0 |] ==> is_root (merge ?h1.0 ?h2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pairing_Heap_List1_Analysis.no_Empty_merge",
     "[| no_Empty ?h1.0; no_Empty ?h2.0 |]
      ==> no_Empty (merge ?h1.0 ?h2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pairing_Heap_List1_Analysis.no_Emptys_pass1",
     "no_Emptys ?hs ==> no_Emptys (pass\<^sub>1 ?hs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0))),
             t_empty)
           ))),
    ("Pairing_Heap_List1_Analysis.\<Delta>\<Phi>_insert",
     "\<Phi> (Pairing_Heap_List1.insert ?x ?h) - \<Phi> ?h
      <= log 2 (real (size_hp ?h + 1))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0))),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("Pairing_Heap_List1_Analysis.\<Delta>\<Phi>_pass1_sum_ub",
     "no_Emptys ?hs ==>
      \<Phi>_hps (pass\<^sub>1 ?hs) - \<Phi>_hps ?hs <= sum_ub ?hs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Pairing_Heap_List1_Analysis.\<Delta>\<Phi>_merge",
     "\<Phi> (merge ?h1.0 ?h2.0) - \<Phi> ?h1.0 - \<Phi> ?h2.0
      <= log 2 (real (size_hp ?h1.0 + size_hp ?h2.0 + 1)) + 1",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_var 0))),
             template_app (template_hole 11, template_var 1))),
         template_app (template_hole 11, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 5))),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_app (template_hole 2, template_var 0))),
                 template_hole 1)))),
         template_hole 0))),
    ("Pairing_Heap_List1_Analysis.\<Delta>\<Phi>_pass2",
     "[| ?hs ~= []; no_Emptys ?hs |]
      ==> \<Phi> (pass\<^sub>2 ?hs) - \<Phi>_hps ?hs
          <= log 2 (real (size_hps ?hs))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 16)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 0))),
           template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("Pairing_Heap_List1_Analysis.merge2",
     "merge (Hp ?x ?lx) ?h =
      (case ?h of heap.Empty => Hp ?x ?lx
       | Hp y ly =>
           if ?x < y then Hp ?x (Hp y ly # ?lx)
           else Hp y (Hp ?x ?lx # ly))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           t_empty),
         template_var 0))),
    ("Pairing_Heap_List1_Analysis.size_hps_pass2",
     "[| ?hs ~= []; no_Emptys ?hs |]
      ==> no_Empty (pass\<^sub>2 ?hs) &
          size_hps ?hs = size_hps (hps (pass\<^sub>2 ?hs)) + 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 12)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 9,
                 template_app (template_hole 7, template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_hole 1,
                         template_app (template_hole 7, template_var 0))))),
                 template_hole 0)))
           ))),
    ("Pairing_Heap_List1_Analysis.\<Delta>\<Phi>_del_min",
     "[| hps ?h ~= []; no_Empty ?h |]
      ==> \<Phi> (del_min ?h) - \<Phi> ?h
          <= 3 * log 2 (real (size_hps (hps ?h))) - real (length (hps ?h)) +
             2",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 18, template_var 0),
              template_hole 17)
            ),
        template_predicate
         (template_app (template_hole 16, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 13,
               template_app (template_hole 12, template_var 0))),
           template_app (template_hole 13, template_var 0)),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_hole 7))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 5, template_hole 7))),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_app
                            (template_hole 18, template_var 0))))))),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 18, template_var 0))))),
           template_app
            (template_hole 9,
             template_app (template_hole 5, template_hole 7)))))),
    ("Pairing_Heap_List1_Analysis.\<Delta>\<Phi>_pass1",
     "[| ?hs ~= []; no_Emptys ?hs |]
      ==> \<Phi>_hps (pass\<^sub>1 ?hs) - \<Phi>_hps ?hs
          <= 2 * log 2 (real (size_hps ?hs)) - real (length ?hs) + 2",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 18)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app (template_hole 11, template_var 0))),
           template_app (template_hole 12, template_var 0)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6))),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_var 0)))))),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0)))),
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6))))))]
