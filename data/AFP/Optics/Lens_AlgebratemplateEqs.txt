   [("Lens_Algebra.lens_comp_left_id", "1\<^sub>L ;\<^sub>L ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Lens_Algebra.lens_comp_right_id", "?X ;\<^sub>L 1\<^sub>L = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Lens_Algebra.lens_quotient_id_denom", "?X /\<^sub>L 1\<^sub>L = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Lens_Algebra.get_fst_lens",
     "get\<^bsub>fst\<^sub>L\<^esub> (?x, ?y) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Lens_Algebra.get_snd_lens",
     "get\<^bsub>snd\<^sub>L\<^esub> (?x, ?y) = ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Lens_Algebra.lens_obs_eq_zero",
     "(?s\<^sub>1 \<simeq>\<^bsub>0\<^sub>L\<^esub> ?s\<^sub>2) =
      (?s\<^sub>1 = ?s\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Lens_Algebra.lens_comp_assoc",
     "?X ;\<^sub>L (?Y ;\<^sub>L ?Z) = ?X ;\<^sub>L ?Y ;\<^sub>L ?Z",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Lens_Algebra.prod_as_plus",
     "?X \<times>\<^sub>L ?Y =
      ?X ;\<^sub>L fst\<^sub>L +\<^sub>L ?Y ;\<^sub>L snd\<^sub>L",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0))))]
