   [("Lens_Algebra.zero_lens_compat", "0\<^sub>L ##\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Lens_Algebra.zero_lens_indep'", "?X \<bowtie> 0\<^sub>L",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Lens_Algebra.zero_lens_indep", "0\<^sub>L \<bowtie> ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Lens_Algebra.lens_obs_eq_one",
     "?s\<^sub>1 \<simeq>\<^bsub>1\<^sub>L\<^esub> ?s\<^sub>2",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)
         )),
    ("Lens_Algebra.lens_comp_left_id", "1\<^sub>L ;\<^sub>L ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Lens_Algebra.lens_comp_right_id", "?X ;\<^sub>L 1\<^sub>L = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Lens_Algebra.lens_quotient_id_denom", "?X /\<^sub>L 1\<^sub>L = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Lens_Algebra.get_fst_lens",
     "get\<^bsub>fst\<^sub>L\<^esub> (?x, ?y) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Lens_Algebra.get_snd_lens",
     "get\<^bsub>snd\<^sub>L\<^esub> (?x, ?y) = ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Lens_Algebra.lens_inv_bij",
     "bij_lens ?X ==> bij_lens (inv\<^sub>L ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lens_Algebra.id_lens_compat",
     "vwb_lens ?X ==> 1\<^sub>L ##\<^sub>L ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Lens_Algebra.lens_obs_eq_zero",
     "(?s\<^sub>1 \<simeq>\<^bsub>0\<^sub>L\<^esub> ?s\<^sub>2) =
      (?s\<^sub>1 = ?s\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Lens_Algebra.inv_inv_lens",
     "bij_lens ?X ==> inv\<^sub>L (inv\<^sub>L ?X) = ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Lens_Algebra.lens_comp_anhil",
     "wb_lens ?X ==> 0\<^sub>L ;\<^sub>L ?X = 0\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0))),
    ("Lens_Algebra.lens_comp_anhil_right",
     "wb_lens ?X ==> ?X ;\<^sub>L 0\<^sub>L = 0\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Lens_Algebra.lens_quotient_id",
     "weak_lens ?X ==> ?X /\<^sub>L ?X = 1\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Lens_Algebra.lens_quotient_unit",
     "weak_lens ?X ==> 0\<^sub>L /\<^sub>L ?X = 0\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0))),
    ("Lens_Algebra.lens_indep_right_ext",
     "?x \<bowtie> ?z ==> ?x \<bowtie> ?y ;\<^sub>L ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Algebra.lens_indep_left_ext",
     "?y \<bowtie> ?z ==> ?x ;\<^sub>L ?y \<bowtie> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("Lens_Algebra.lens_comp_assoc",
     "?X ;\<^sub>L (?Y ;\<^sub>L ?Z) = ?X ;\<^sub>L ?Y ;\<^sub>L ?Z",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Lens_Algebra.prod_as_plus",
     "?X \<times>\<^sub>L ?Y =
      ?X ;\<^sub>L fst\<^sub>L +\<^sub>L ?Y ;\<^sub>L snd\<^sub>L",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Lens_Algebra.split_prod_lens_indep",
     "mwb_lens ?X ==>
      fst\<^sub>L ;\<^sub>L ?X \<bowtie> snd\<^sub>L ;\<^sub>L ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Lens_Algebra.fst_lens_plus",
     "wb_lens ?y ==> fst\<^sub>L ;\<^sub>L (?x +\<^sub>L ?y) = ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Lens_Algebra.lens_comp_quotient",
     "weak_lens ?Y ==> (?X ;\<^sub>L ?Y) /\<^sub>L ?Y = ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("Lens_Algebra.lens_indep_right_comp",
     "?y \<bowtie> ?z ==> ?x ;\<^sub>L ?y \<bowtie> ?x ;\<^sub>L ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Algebra.prod_bij_lens",
     "[| bij_lens ?X; bij_lens ?Y |] ==> bij_lens (?X \<times>\<^sub>L ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.prod_mwb_lens",
     "[| mwb_lens ?X; mwb_lens ?Y |] ==> mwb_lens (?X \<times>\<^sub>L ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.comp_mwb_lens",
     "[| mwb_lens ?x; mwb_lens ?y |] ==> mwb_lens (?x ;\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.prod_vwb_lens",
     "[| vwb_lens ?X; vwb_lens ?Y |] ==> vwb_lens (?X \<times>\<^sub>L ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.comp_vwb_lens",
     "[| vwb_lens ?x; vwb_lens ?y |] ==> vwb_lens (?x ;\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.prod_wb_lens",
     "[| wb_lens ?X; wb_lens ?Y |] ==> wb_lens (?X \<times>\<^sub>L ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.comp_wb_lens",
     "[| wb_lens ?x; wb_lens ?y |] ==> wb_lens (?x ;\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.comp_weak_lens",
     "[| weak_lens ?x; weak_lens ?y |] ==> weak_lens (?x ;\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.lens_comp_indep_cong",
     "mwb_lens ?Z ==>
      (?X ;\<^sub>L ?Z \<bowtie> ?Y ;\<^sub>L ?Z) = (?X \<bowtie> ?Y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lens_Algebra.lens_obs_eq_as_override",
     "vwb_lens ?X ==>
      (?s\<^sub>1 \<simeq>\<^bsub>?X\<^esub> ?s\<^sub>2) =
      (?s\<^sub>2 =
       ?s\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub> ?s\<^sub>2)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0)
              )],
         template_equation
          (template_var 0,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Lens_Algebra.plus_pres_lens_indep'",
     "[| ?X \<bowtie> ?Y; ?X \<bowtie> ?Z |]
      ==> ?X \<bowtie> ?Y +\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.plus_pres_lens_indep",
     "[| ?X \<bowtie> ?Z; ?Y \<bowtie> ?Z |]
      ==> ?X +\<^sub>L ?Y \<bowtie> ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Lens_Algebra.lens_plus_swap",
     "?X \<bowtie> ?Y ==>
      swap\<^sub>L ;\<^sub>L (?X +\<^sub>L ?Y) = ?Y +\<^sub>L ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Lens_Algebra.lens_comp_indep_cong_left",
     "[| mwb_lens ?Z; ?X ;\<^sub>L ?Z \<bowtie> ?Y ;\<^sub>L ?Z |]
      ==> ?X \<bowtie> ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lens_Algebra.lens_indep_left_comp",
     "[| mwb_lens ?z; ?x \<bowtie> ?y |]
      ==> ?x ;\<^sub>L ?z \<bowtie> ?y ;\<^sub>L ?z",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Lens_Algebra.snd_lens_plus",
     "[| wb_lens ?x; ?x \<bowtie> ?y |]
      ==> snd\<^sub>L ;\<^sub>L (?x +\<^sub>L ?y) = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Lens_Algebra.lens_indep_quasi_irrefl",
     "[| wb_lens ?x; eff_lens ?x |] ==> ~ ?x \<bowtie> ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 0)
               )
           ))),
    ("Lens_Algebra.plus_lens_distr",
     "mwb_lens ?Z ==>
      (?X +\<^sub>L ?Y) ;\<^sub>L ?Z =
      ?X ;\<^sub>L ?Z +\<^sub>L ?Y ;\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Lens_Algebra.lens_indep_prod",
     "[| ?X\<^sub>1 \<bowtie> ?X\<^sub>2; ?Y\<^sub>1 \<bowtie> ?Y\<^sub>2 |]
      ==> ?X\<^sub>1 \<times>\<^sub>L ?Y\<^sub>1 \<bowtie>
          ?X\<^sub>2 \<times>\<^sub>L ?Y\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lens_Algebra.plus_mwb_lens",
     "[| mwb_lens ?x; mwb_lens ?y; ?x \<bowtie> ?y |]
      ==> mwb_lens (?x +\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.plus_vwb_lens",
     "[| vwb_lens ?x; vwb_lens ?y; ?x \<bowtie> ?y |]
      ==> vwb_lens (?x +\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.plus_wb_lens",
     "[| wb_lens ?x; wb_lens ?y; ?x \<bowtie> ?y |]
      ==> wb_lens (?x +\<^sub>L ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Algebra.prod_lens_comp_plus",
     "?X\<^sub>2 \<bowtie> ?Y\<^sub>2 ==>
      ?X\<^sub>1 \<times>\<^sub>L ?Y\<^sub>1 ;\<^sub>L
      (?X\<^sub>2 +\<^sub>L ?Y\<^sub>2) =
      ?X\<^sub>1 ;\<^sub>L ?X\<^sub>2 +\<^sub>L
      ?Y\<^sub>1 ;\<^sub>L ?Y\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Lens_Algebra.source_plus_lens",
     "[| mwb_lens ?x; mwb_lens ?y; ?x \<bowtie> ?y |]
      ==> \<S>\<^bsub>?x +\<^sub>L ?y\<^esub> =
          \<S>\<^bsub>?x\<^esub> Int \<S>\<^bsub>?y\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Lens_Algebra.source_lens_comp",
     "[| mwb_lens ?x; mwb_lens ?y |]
      ==> \<S>\<^bsub>?x ;\<^sub>L ?y\<^esub> =
          {s: \<S>\<^bsub>?y\<^esub>.
           get\<^bsub>?y\<^esub> s : \<S>\<^bsub>?x\<^esub>}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app (template_hole 6, t_empty))))]
