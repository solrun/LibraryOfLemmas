   [("Scenes.scene_inter_idem", "?X \<sqinter>\<^sub>S ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Scenes.scene_union_unit",
     "?X \<squnion>\<^sub>S \<bottom>\<^sub>S = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Scenes.scene_union_idem", "?X \<squnion>\<^sub>S ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Scenes.uminus_scene_twice", "- (- ?X) = ?X",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Scenes.scene_override_unit",
     "?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>2 on \<bottom>\<^sub>S =
      ?S\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Scenes.scene_override_id",
     "?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>2 on \<top>\<^sub>S =
      ?S\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Scenes.scene_union_commute",
     "?X \<squnion>\<^sub>S ?Y = ?Y \<squnion>\<^sub>S ?X",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Scenes.fun_dom_scene_compl", "fds (- ?A) = - fds ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Scenes.scene_le_iff_indep_inv",
     "(?A \<bowtie>\<^sub>S - ?B) = ?A \<subseteq>\<^sub>S ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Scenes.fun_dom_scene_le",
     "fds ?A \<subseteq>\<^sub>S fds ?B = (?A <= ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Scenes.lens_insert_idem",
     "insert\<^sub>S ?x (insert\<^sub>S ?x ?A) = insert\<^sub>S ?x ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Scenes.scene_override_commute",
     "?S\<^sub>2 \<oplus>\<^sub>S ?S\<^sub>1 on (- ?X) =
      ?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>2 on ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 2),
         template_var 0))),
    ("Scenes.scene_demorgan2",
     "- (?X \<sqinter>\<^sub>S ?Y) = - ?X \<squnion>\<^sub>S - ?Y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Scenes.scene_demorgan1",
     "- (?X \<squnion>\<^sub>S ?Y) = - ?X \<sqinter>\<^sub>S - ?Y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Scenes.fun_dom_scene_inter",
     "fds (?A Int ?B) = fds ?A \<sqinter>\<^sub>S fds ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Scenes.fun_dom_scene_union",
     "fds (?A Un ?B) = fds ?A \<squnion>\<^sub>S fds ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Scenes.fun_dom_scene_indep",
     "(fds ?A \<bowtie>\<^sub>S fds ?B) = (?A Int ?B = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Scenes.scene_override_overshadow_right",
     "?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>2 \<oplus>\<^sub>S ?S\<^sub>3 on ?X on ?X =
      ?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>3 on ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_var 0))),
    ("Scenes.scene_override_overshadow_left",
     "?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>2 on ?X \<oplus>\<^sub>S ?S\<^sub>3 on ?X =
      ?S\<^sub>1 \<oplus>\<^sub>S ?S\<^sub>3 on ?X",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_var 1),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_var 1))),
    ("Scenes.scene_indep_override",
     "(?X \<bowtie>\<^sub>S ?Y) =
      (ALL s\<^sub>1 s\<^sub>2 s\<^sub>3.
          s\<^sub>1 \<oplus>\<^sub>S s\<^sub>2 on ?X \<oplus>\<^sub>S s\<^sub>3 on ?Y =
          s\<^sub>1 \<oplus>\<^sub>S s\<^sub>3 on ?Y \<oplus>\<^sub>S s\<^sub>2 on ?X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Scenes.scene_compat_copy",
     "(?X ##\<^sub>S ?Y) =
      (ALL s.
          (%s'. s' \<oplus>\<^sub>S s on ?X) o
          (%s'. s' \<oplus>\<^sub>S s on ?Y) =
          (%s'. s' \<oplus>\<^sub>S s on ?Y) o
          (%s'. s' \<oplus>\<^sub>S s on ?X))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Scenes.scene_indep_copy",
     "(?X \<bowtie>\<^sub>S ?Y) =
      (ALL s\<^sub>1 s\<^sub>2.
          (%s'. s' \<oplus>\<^sub>S s\<^sub>1 on ?X) o
          (%s'. s' \<oplus>\<^sub>S s\<^sub>2 on ?Y) =
          (%s'. s' \<oplus>\<^sub>S s\<^sub>2 on ?Y) o
          (%s'. s' \<oplus>\<^sub>S s\<^sub>1 on ?X))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty)))]
