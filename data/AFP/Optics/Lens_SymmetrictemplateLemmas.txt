   [("Lens_Symmetric.coview_slens_compl",
     "\<C>\<^bsub>-\<^sub>L ?a\<^esub> = \<V>\<^bsub>?a\<^esub>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Lens_Symmetric.view_slens_compl",
     "\<V>\<^bsub>-\<^sub>L ?a\<^esub> = \<C>\<^bsub>?a\<^esub>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Lens_Symmetric.sym_lens_psym", "sym_lens ?x ==> psym_lens ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Symmetric.psym_lens_compl",
     "psym_lens ?a ==> psym_lens (-\<^sub>L ?a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lens_Symmetric.sym_lens_compl",
     "sym_lens ?a ==> sym_lens (-\<^sub>L ?a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           )))]
