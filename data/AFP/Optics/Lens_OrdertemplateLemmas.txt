   [("Lens_Order.lens_equiv_refl", "?X \<approx>\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Lens_Order.sublens_refl", "?X \<subseteq>\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Lens_Order.lens_plus_right_unit",
     "?X +\<^sub>L 0\<^sub>L \<approx>\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 0)
         )),
    ("Lens_Order.lens_plus_left_unit",
     "0\<^sub>L +\<^sub>L ?X \<approx>\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 0)
         )),
    ("Lens_Order.lens_unit_plus_sublens_1",
     "?X \<subseteq>\<^sub>L 0\<^sub>L +\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Lens_Order.lens_unit_prod_sublens_2",
     "0\<^sub>L +\<^sub>L ?X \<subseteq>\<^sub>L ?X",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 0)
         )),
    ("Lens_Order.lens_override_id",
     "?S\<^sub>1 \<triangleleft>\<^bsub>1\<^sub>L\<^esub> ?S\<^sub>2 =
      ?S\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 0)),
    ("Lens_Order.lens_override_unit",
     "?S\<^sub>1 \<triangleleft>\<^bsub>0\<^sub>L\<^esub> ?S\<^sub>2 =
      ?S\<^sub>1",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 1)),
    ("Lens_Order.bij_lens_equiv_id",
     "bij_lens ?X = ?X \<approx>\<^sub>L 1\<^sub>L",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Lens_Order.sublens_greatest",
     "vwb_lens ?X ==> ?X \<subseteq>\<^sub>L 1\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Lens_Order.sublens_least",
     "wb_lens ?X ==> 0\<^sub>L \<subseteq>\<^sub>L ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Lens_Order.lens_equiv_sym",
     "?X \<approx>\<^sub>L ?Y ==> ?Y \<approx>\<^sub>L ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lens_Order.lens_comp_lb",
     "vwb_lens ?X ==> ?X ;\<^sub>L ?Y \<subseteq>\<^sub>L ?Y",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("Lens_Order.lens_plus_ub",
     "wb_lens ?Y ==> ?X \<subseteq>\<^sub>L ?X +\<^sub>L ?Y",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Order.bij_lens_inv_right",
     "bij_lens ?X ==> ?X ;\<^sub>L inv\<^sub>L ?X = 1\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Lens_Order.bij_lens_inv_left",
     "bij_lens ?X ==> inv\<^sub>L ?X ;\<^sub>L ?X = 1\<^sub>L",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_hole 0))),
    ("Lens_Order.lens_override_idem",
     "vwb_lens ?X ==> ?S \<triangleleft>\<^bsub>?X\<^esub> ?S = ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0),
         template_var 0))),
    ("Lens_Order.bij_lens_cong",
     "?X \<approx>\<^sub>L ?Y ==> bij_lens ?X = bij_lens ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.lens_plus_assoc",
     "(?X +\<^sub>L ?Y) +\<^sub>L ?Z \<approx>\<^sub>L
      ?X +\<^sub>L ?Y +\<^sub>L ?Z",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Lens_Order.lens_plus_sub_assoc_1",
     "?X +\<^sub>L ?Y +\<^sub>L ?Z \<subseteq>\<^sub>L
      (?X +\<^sub>L ?Y) +\<^sub>L ?Z",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))
         )),
    ("Lens_Order.lens_plus_sub_assoc_2",
     "(?X +\<^sub>L ?Y) +\<^sub>L ?Z \<subseteq>\<^sub>L
      ?X +\<^sub>L ?Y +\<^sub>L ?Z",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Lens_Order.bij_lens_equiv",
     "[| bij_lens ?X; ?X \<approx>\<^sub>L ?Y |] ==> bij_lens ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.sublens_pres_mwb",
     "[| mwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |] ==> mwb_lens ?X",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.sublens_pres_vwb",
     "[| vwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |] ==> vwb_lens ?X",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.sublens_pres_wb",
     "[| wb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |] ==> wb_lens ?X",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.lens_plus_comm",
     "?X \<bowtie> ?Y ==>
      ?X +\<^sub>L ?Y \<approx>\<^sub>L ?Y +\<^sub>L ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Order.lens_plus_sub_comm",
     "?X \<bowtie> ?Y ==>
      ?X +\<^sub>L ?Y \<subseteq>\<^sub>L ?Y +\<^sub>L ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Order.lens_comp_cong_1",
     "?X \<approx>\<^sub>L ?Y ==>
      ?X ;\<^sub>L ?Z \<approx>\<^sub>L ?Y ;\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Order.sublens_implies_sublens'",
     "[| vwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> ?X \<subseteq>\<^sub>L' ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lens_Order.lens_quotient_mwb",
     "[| mwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> mwb_lens (?X /\<^sub>L ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Order.lens_equiv_pres_indep",
     "[| ?X \<approx>\<^sub>L ?Y; ?Y \<bowtie> ?Z |] ==> ?X \<bowtie> ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Lens_Order.lens_equiv_pres_indep'",
     "[| ?X \<approx>\<^sub>L ?Y; ?Z \<bowtie> ?Y |] ==> ?Z \<bowtie> ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Lens_Order.lens_equiv_trans",
     "[| ?X \<approx>\<^sub>L ?Y; ?Y \<approx>\<^sub>L ?Z |]
      ==> ?X \<approx>\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Lens_Order.sublens_pres_indep",
     "[| ?X \<subseteq>\<^sub>L ?Y; ?Y \<bowtie> ?Z |] ==> ?X \<bowtie> ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Lens_Order.sublens_pres_indep'",
     "[| ?X \<subseteq>\<^sub>L ?Y; ?Z \<bowtie> ?Y |] ==> ?Z \<bowtie> ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Lens_Order.lens_equivI",
     "[| ?X \<subseteq>\<^sub>L ?Y; ?Y \<subseteq>\<^sub>L ?X |]
      ==> ?X \<approx>\<^sub>L ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lens_Order.sublens_trans",
     "[| ?X \<subseteq>\<^sub>L ?Y; ?Y \<subseteq>\<^sub>L ?Z |]
      ==> ?X \<subseteq>\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Lens_Order.lens_equiv_via_bij",
     "[| bij_lens ?Z; ?X = ?Z ;\<^sub>L ?Y |] ==> ?X \<approx>\<^sub>L ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lens_Order.sublens_comp",
     "[| vwb_lens ?b; ?c \<subseteq>\<^sub>L ?a |]
      ==> ?b ;\<^sub>L ?c \<subseteq>\<^sub>L ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Lens_Order.lens_id_unique",
     "[| weak_lens ?Y; ?Y = ?X ;\<^sub>L ?Y |] ==> ?X = 1\<^sub>L",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1))],
       template_equation (template_var 0, template_hole 0))),
    ("Lens_Order.lens_plus_prod_exchange",
     "(?X\<^sub>1 +\<^sub>L ?X\<^sub>2) \<times>\<^sub>L
      (?Y\<^sub>1 +\<^sub>L ?Y\<^sub>2) \<approx>\<^sub>L
      ?X\<^sub>1 \<times>\<^sub>L ?Y\<^sub>1 +\<^sub>L
      ?X\<^sub>2 \<times>\<^sub>L ?Y\<^sub>2",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))
         )),
    ("Lens_Order.lens_equiv_iff_lens_equiv'",
     "[| vwb_lens ?X; vwb_lens ?Y |]
      ==> ?X \<approx>\<^sub>L ?Y = ?X \<approx>\<^sub>L' ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lens_Order.sublens_iff_sublens'",
     "[| vwb_lens ?X; vwb_lens ?Y |]
      ==> ?X \<subseteq>\<^sub>L ?Y = ?X \<subseteq>\<^sub>L' ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lens_Order.lens_override_overshadow_right",
     "mwb_lens ?X ==>
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub>
      (?S\<^sub>2 \<triangleleft>\<^bsub>?X\<^esub> ?S\<^sub>3) =
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub> ?S\<^sub>3",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Lens_Order.lens_override_overshadow_left",
     "mwb_lens ?X ==>
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub>
      ?S\<^sub>2 \<triangleleft>\<^bsub>?X\<^esub>
      ?S\<^sub>3 =
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub> ?S\<^sub>3",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Lens_Order.lens_override_mwb_idem",
     "[| mwb_lens ?X; ?S : \<S>\<^bsub>?X\<^esub> |]
      ==> ?S \<triangleleft>\<^bsub>?X\<^esub> ?S = ?S",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0),
         template_var 0))),
    ("Lens_Order.override_idem_implies_vwb",
     "[| mwb_lens ?X; !!s. s \<triangleleft>\<^bsub>?X\<^esub> s = s |]
      ==> vwb_lens ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.lens_quotient_comp",
     "[| weak_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> ?X /\<^sub>L ?Y ;\<^sub>L ?Y = ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("Lens_Order.sublens_compat",
     "[| vwb_lens ?X; vwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> ?X ##\<^sub>L ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lens_Order.sublens'_implies_sublens",
     "[| vwb_lens ?X; vwb_lens ?Y; ?X \<subseteq>\<^sub>L' ?Y |]
      ==> ?X \<subseteq>\<^sub>L ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lens_Order.lens_override_irr",
     "?X \<bowtie> ?Y ==>
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub>
      (?S\<^sub>2 \<triangleleft>\<^bsub>?Y\<^esub> ?S\<^sub>3) =
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub> ?S\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 1)))),
    ("Lens_Order.lens_plus_eq_right",
     "[| ?X \<bowtie> ?Y; ?Y \<approx>\<^sub>L ?Z |]
      ==> ?X +\<^sub>L ?Y \<approx>\<^sub>L ?X +\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lens_Order.lens_plus_eq_left",
     "[| ?X \<bowtie> ?Z; ?X \<approx>\<^sub>L ?Y |]
      ==> ?X +\<^sub>L ?Z \<approx>\<^sub>L ?Y +\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lens_Order.lens_plus_mono_right",
     "[| ?X \<bowtie> ?Z; ?Y \<subseteq>\<^sub>L ?Z |]
      ==> ?X +\<^sub>L ?Y \<subseteq>\<^sub>L ?X +\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Lens_Order.lens_plus_mono_left",
     "[| ?Y \<bowtie> ?Z; ?X \<subseteq>\<^sub>L ?Y |]
      ==> ?X +\<^sub>L ?Z \<subseteq>\<^sub>L ?Y +\<^sub>L ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Lens_Order.prod_lens_equiv_cong",
     "[| ?X\<^sub>1 \<approx>\<^sub>L ?X\<^sub>2;
         ?Y\<^sub>1 \<approx>\<^sub>L ?Y\<^sub>2 |]
      ==> ?X\<^sub>1 \<times>\<^sub>L ?Y\<^sub>1 \<approx>\<^sub>L
          ?X\<^sub>2 \<times>\<^sub>L ?Y\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lens_Order.prod_lens_sublens_cong",
     "[| ?X\<^sub>1 \<subseteq>\<^sub>L ?X\<^sub>2;
         ?Y\<^sub>1 \<subseteq>\<^sub>L ?Y\<^sub>2 |]
      ==> ?X\<^sub>1 \<times>\<^sub>L ?Y\<^sub>1 \<subseteq>\<^sub>L
          ?X\<^sub>2 \<times>\<^sub>L ?Y\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Lens_Order.bij_lens_via_comp_id_left",
     "[| wb_lens ?X; wb_lens ?Y; ?X ;\<^sub>L ?Y = 1\<^sub>L |]
      ==> bij_lens ?X",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Lens_Order.bij_lens_via_comp_id_right",
     "[| wb_lens ?X; wb_lens ?Y; ?X ;\<^sub>L ?Y = 1\<^sub>L |]
      ==> bij_lens ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lens_Order.lens_equiv_iff_bij",
     "weak_lens ?Y ==>
      ?X \<approx>\<^sub>L ?Y = (EX Z. bij_lens Z & ?X = Z ;\<^sub>L ?Y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0), template_var 1),
         template_app (template_hole 4, t_empty)))),
    ("Lens_Order.lens_override_plus",
     "?X \<bowtie> ?Y ==>
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X +\<^sub>L ?Y\<^esub> ?S\<^sub>2 =
      ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub>
      ?S\<^sub>2 \<triangleleft>\<^bsub>?Y\<^esub>
      ?S\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 0)))),
    ("Lens_Order.lens_plus_right_sublens",
     "[| vwb_lens ?Y; ?Y \<bowtie> ?Z; ?X \<subseteq>\<^sub>L ?Z |]
      ==> ?X \<subseteq>\<^sub>L ?Y +\<^sub>L ?Z",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Lens_Order.lens_quotient_plus_den1",
     "[| weak_lens ?x; weak_lens ?y; ?x \<bowtie> ?y |]
      ==> ?x /\<^sub>L (?x +\<^sub>L ?y) = fst\<^sub>L",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Lens_Order.sublens_put_put",
     "[| mwb_lens ?X; ?Y \<subseteq>\<^sub>L ?X |]
      ==> put\<^bsub>?X\<^esub> (put\<^bsub>?Y\<^esub> ?\<sigma> ?v) ?u =
          put\<^bsub>?X\<^esub> ?\<sigma> ?u",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Lens_Order.lens_override_overshadow",
     "[| mwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> ?S\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub>
          ?S\<^sub>2 \<triangleleft>\<^bsub>?Y\<^esub>
          ?S\<^sub>3 =
          ?S\<^sub>1 \<triangleleft>\<^bsub>?Y\<^esub> ?S\<^sub>3",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Lens_Order.lens_override_put_right_out",
     "[| vwb_lens ?A; ?X \<bowtie> ?A |]
      ==> ?S\<^sub>1 \<triangleleft>\<^bsub>?A\<^esub>
          put\<^bsub>?X\<^esub> ?S\<^sub>2 ?v =
          ?S\<^sub>1 \<triangleleft>\<^bsub>?A\<^esub> ?S\<^sub>2",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_var 1)))),
    ("Lens_Order.sublens'_prop2",
     "[| vwb_lens ?X; ?X \<subseteq>\<^sub>L' ?Y |]
      ==> get\<^bsub>?X\<^esub>
           (put\<^bsub>?Y\<^esub> ?s\<^sub>1
             (get\<^bsub>?Y\<^esub> ?s\<^sub>2)) =
          get\<^bsub>?X\<^esub> ?s\<^sub>2",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Lens_Order.sublens_obs_get",
     "[| mwb_lens ?X; ?Y \<subseteq>\<^sub>L ?X |]
      ==> get\<^bsub>?Y\<^esub> (put\<^bsub>?X\<^esub> ?\<sigma> ?v) =
          get\<^bsub>?Y\<^esub> (put\<^bsub>?X\<^esub> ?\<rho> ?v)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0),
             template_var 1))))),
    ("Lens_Order.lens_plus_cong",
     "[| ?X\<^sub>1 \<bowtie> ?X\<^sub>2;
         ?X\<^sub>1 \<approx>\<^sub>L ?Y\<^sub>1;
         ?X\<^sub>2 \<approx>\<^sub>L ?Y\<^sub>2 |]
      ==> ?X\<^sub>1 +\<^sub>L ?X\<^sub>2 \<approx>\<^sub>L
          ?Y\<^sub>1 +\<^sub>L ?Y\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Order.lens_plus_subcong",
     "[| ?Y\<^sub>1 \<bowtie> ?Y\<^sub>2;
         ?X\<^sub>1 \<subseteq>\<^sub>L ?Y\<^sub>1;
         ?X\<^sub>2 \<subseteq>\<^sub>L ?Y\<^sub>2 |]
      ==> ?X\<^sub>1 +\<^sub>L ?X\<^sub>2 \<subseteq>\<^sub>L
          ?Y\<^sub>1 +\<^sub>L ?Y\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Lens_Order.pbij_plus_commute",
     "[| ?a \<bowtie> ?b; mwb_lens ?a; mwb_lens ?b;
         pbij_lens (?b +\<^sub>L ?a) |]
      ==> pbij_lens (?a +\<^sub>L ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lens_Order.lens_override_put_right_in",
     "[| vwb_lens ?A; ?X \<subseteq>\<^sub>L ?A |]
      ==> ?S\<^sub>1 \<triangleleft>\<^bsub>?A\<^esub>
          put\<^bsub>?X\<^esub> ?S\<^sub>2 ?v =
          put\<^bsub>?X\<^esub>
           (?S\<^sub>1 \<triangleleft>\<^bsub>?A\<^esub> ?S\<^sub>2) ?v",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Lens_Order.lens_get_put_quasi_commute",
     "[| vwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> get\<^bsub>?Y\<^esub> (put\<^bsub>?X\<^esub> ?s ?v) =
          put\<^bsub>?X /\<^sub>L ?Y\<^esub> (get\<^bsub>?Y\<^esub> ?s) ?v",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Lens_Order.plus_pred_sublens",
     "[| mwb_lens ?Z; ?X \<subseteq>\<^sub>L ?Z; ?Y \<subseteq>\<^sub>L ?Z;
         ?X \<bowtie> ?Y |]
      ==> ?X +\<^sub>L ?Y \<subseteq>\<^sub>L ?Z",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("Lens_Order.lens_put_of_quotient",
     "[| vwb_lens ?Y; ?X \<subseteq>\<^sub>L ?Y |]
      ==> put\<^bsub>?Y\<^esub> ?s
           (put\<^bsub>?X /\<^sub>L ?Y\<^esub> ?v\<^sub>2 ?v\<^sub>1) =
          put\<^bsub>?X\<^esub> (put\<^bsub>?Y\<^esub> ?s ?v\<^sub>2)
           ?v\<^sub>1",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 4)),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Lens_Order.lens_quotient_plus",
     "[| mwb_lens ?Z; ?X \<subseteq>\<^sub>L ?Z;
         ?Y \<subseteq>\<^sub>L ?Z |]
      ==> (?X +\<^sub>L ?Y) /\<^sub>L ?Z =
          ?X /\<^sub>L ?Z +\<^sub>L ?Y /\<^sub>L ?Z",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Lens_Order.sublens'_prop1",
     "[| vwb_lens ?X; ?X \<subseteq>\<^sub>L' ?Y |]
      ==> put\<^bsub>?X\<^esub>
           (put\<^bsub>?Y\<^esub> ?s\<^sub>1
             (get\<^bsub>?Y\<^esub> ?s\<^sub>2))
           ?s\<^sub>3 =
          put\<^bsub>?Y\<^esub> ?s\<^sub>1
           (get\<^bsub>?Y\<^esub>
             (put\<^bsub>?X\<^esub> ?s\<^sub>2 ?s\<^sub>3))",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1),
               template_var 0)))))),
    ("Lens_Order.lens_quotient_plus_den2",
     "[| weak_lens ?x; weak_lens ?z; ?x \<bowtie> ?z;
         ?y \<subseteq>\<^sub>L ?z |]
      ==> ?y /\<^sub>L (?x +\<^sub>L ?z) =
          ?y /\<^sub>L ?z ;\<^sub>L snd\<^sub>L",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("Lens_Order.sublens'_prop3",
     "[| vwb_lens ?X; vwb_lens ?Y; ?X \<subseteq>\<^sub>L' ?Y |]
      ==> put\<^bsub>?Y\<^esub> ?\<sigma>
           (get\<^bsub>?Y\<^esub>
             (put\<^bsub>?X\<^esub>
               (put\<^bsub>?Y\<^esub> ?\<rho>
                 (get\<^bsub>?Y\<^esub> ?\<sigma>))
               ?v)) =
          put\<^bsub>?X\<^esub> ?\<sigma> ?v",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2))),
               template_var 0))),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Lens_Order.lens_indep_overrideI",
     "[| vwb_lens ?X; vwb_lens ?Y;
         !!s\<^sub>1 s\<^sub>2 s\<^sub>3.
            s\<^sub>1 \<triangleleft>\<^bsub>?X\<^esub>
            s\<^sub>2 \<triangleleft>\<^bsub>?Y\<^esub>
            s\<^sub>3 =
            s\<^sub>1 \<triangleleft>\<^bsub>?Y\<^esub>
            s\<^sub>3 \<triangleleft>\<^bsub>?X\<^esub>
            s\<^sub>2 |]
      ==> ?X \<bowtie> ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
