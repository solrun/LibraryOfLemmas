   [("Hidden.hidden_inacc", "hidden ?xs ?i ==> last_index ?xs ?x ~= ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Hidden.hidden_last_index",
     "?x : set ?xs ==> hidden (?xs @ [?x]) (last_index ?xs ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Hidden.fun_upds_apply",
     "(?m(?xs [|->] ?ys)) ?x =
      (let xs' = take (length ?ys) ?xs
       in if ?x : set xs' then Some (?ys ! last_index xs' ?x) else ?m ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 2)),
         t_empty))),
    ("Hidden.map_upds_upd_conv_last_index",
     "[| ?x : set ?xs; length ?xs <= length ?ys |]
      ==> ?m(?xs [|->] ?ys, ?x |-> ?y) = ?m(?xs [|->] ?ys
          [last_index ?xs ?x := ?y])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app (template_hole 9, template_var 3))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 3),
                 template_var 2)),
             template_var 4),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 4)),
             template_var 0))))),
    ("Hidden.map_upds_apply_eq_Some",
     "((?m(?xs [|->] ?ys)) ?x = Some ?y) =
      (let xs' = take (length ?ys) ?xs
       in if ?x : set xs' then ?ys ! last_index xs' ?x = ?y
          else ?m ?x = Some ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 10, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 2)),
             template_var 3)),
         t_empty)))]
