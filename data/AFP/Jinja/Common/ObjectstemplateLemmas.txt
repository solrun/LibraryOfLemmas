   [("Objects.hext_refl", "?h \<unlhd> ?h",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Objects.new_Addr_code_code", "new_Addr ?h = gen_new_Addr ?h 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Objects.new_Addr_SomeD",
     "new_Addr ?h = \<lfloor>?a\<rfloor> ==> ?h ?a = None",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_var 1, template_var 0), template_hole 0))),
    ("Objects.typeof_lit_is_type",
     "typeof ?v = \<lfloor>?T\<rfloor> ==> is_type ?P ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, t_empty), template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Objects.hext_new", "?h ?a = None ==> ?h \<unlhd> ?h(?a |-> ?x)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Objects.hext_trans",
     "[| ?h \<unlhd> ?h'; ?h' \<unlhd> ?h'' |] ==> ?h \<unlhd> ?h''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Objects.gen_new_Addr_code",
     "gen_new_Addr ?h ?n =
      (if ?h ?n = None then \<lfloor>?n\<rfloor>
       else gen_new_Addr ?h (Suc ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_var 1, template_var 0)),
                   template_hole 2)),
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Objects.typeof_lit_typeof",
     "typeof ?v = \<lfloor>?T\<rfloor> ==>
      typeof\<^bsub>?h\<^esub> ?v = \<lfloor>?T\<rfloor>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, t_empty), template_var 2),
          template_app (template_hole 0, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Objects.hext_upd_obj",
     "?h ?a = \<lfloor>(?C, ?fs)\<rfloor> ==>
      ?h \<unlhd> ?h(?a |-> (?C, ?fs'))",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0))))
           ))),
    ("Objects.hext_typeof_mono",
     "[| ?h \<unlhd> ?h';
         typeof\<^bsub>?h\<^esub> ?v = \<lfloor>?T\<rfloor> |]
      ==> typeof\<^bsub>?h'\<^esub> ?v = \<lfloor>?T\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Objects.hext_objD",
     "[| ?h \<unlhd> ?h'; ?h ?a = \<lfloor>(?C, ?fs)\<rfloor> |]
      ==> EX fs'. ?h' ?a = \<lfloor>(?C, fs')\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 4, template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Objects.hextI",
     "ALL a C fs.
         ?h a = \<lfloor>(C, fs)\<rfloor> -->
         (EX fs'. ?h' a = \<lfloor>(C, fs')\<rfloor>) ==>
      ?h \<unlhd> ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
