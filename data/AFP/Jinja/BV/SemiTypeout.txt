Loading theory "Draft.Auxiliary" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Auxiliary"
### 0.140s elapsed time, 0.583s cpu time, 0.044s GC time
Loading theory "Draft.Type" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl")
### theory "HOL-Library.Function_Algebras"
### 0.162s elapsed time, 0.671s cpu time, 0.044s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.239s elapsed time, 0.980s cpu time, 0.044s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.394s elapsed time, 1.580s cpu time, 0.155s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.367s elapsed time, 1.454s cpu time, 0.112s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.Semilattices" via "Draft.Err" via "Draft.Semilat")
### theory "Draft.Type"
### 0.499s elapsed time, 1.965s cpu time, 0.194s GC time
Loading theory "Draft.Decl" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
### theory "Draft.Decl"
### 0.085s elapsed time, 0.337s cpu time, 0.000s GC time
Loading theory "Draft.TypeRel" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm")
Found termination order: "{}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "{}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "widen"
  Proving monotonicity ...
### theory "HOL-Library.While_Combinator"
### 0.485s elapsed time, 1.922s cpu time, 0.163s GC time
Loading theory "Draft.Semilat" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.Semilattices" via "Draft.Err")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Proofs for inductive predicate(s) "Methods"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
locale Semilat
  fixes A :: "'a set"
    and r :: "'a => 'a => bool"
    and f :: "'a => 'a => 'a"
  assumes "Semilat A r f"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Proofs for inductive predicate(s) "Fields"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.212s elapsed time, 4.603s cpu time, 1.030s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Semilat"
### 0.567s elapsed time, 2.061s cpu time, 0.785s GC time
Loading theory "Draft.Err" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.Semilattices")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Introduced fixed type variable(s): 'a in "y"
### Introduced fixed type variable(s): 'a in "z"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### No equation for constructor "Err"
consts
  ok_val :: "'a err => 'a"
Found termination order: "size <*mlex*> {}"
consts
  strict :: "('a => 'b err) => 'a err => 'b err"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Err"
### 0.695s elapsed time, 2.742s cpu time, 0.300s GC time
Loading theory "Draft.Listn" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.Semilattices")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  coalesce :: "'a err list => 'a list err"
### theory "Draft.TypeRel"
### 1.718s elapsed time, 6.617s cpu time, 1.226s GC time
Loading theory "Draft.Value" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions" via "Draft.Objects")
### theory "HOL-Library.BigO"
### 0.943s elapsed time, 3.720s cpu time, 0.444s GC time
Loading theory "Draft.Opt" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.Semilattices")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Opt"
### 0.111s elapsed time, 0.445s cpu time, 0.000s GC time
Loading theory "Draft.Product" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.Semilattices")
### theory "Draft.Product"
### 0.128s elapsed time, 0.511s cpu time, 0.064s GC time
### theory "Draft.Listn"
### 0.490s elapsed time, 1.936s cpu time, 0.209s GC time
Loading theory "Draft.Semilattices" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType")
### theory "HOL-Library.Tree"
### 2.641s elapsed time, 10.192s cpu time, 1.733s GC time
Loading theory "Draft.Templates" (required by "Draft.SemiTypeMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.203s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SemiTypeMoreTemplates")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "Draft.Value"
### 0.513s elapsed time, 1.874s cpu time, 0.212s GC time
Loading theory "Draft.Objects" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions")
consts
  typeof_h ::
    "(nat => (char list * (char list * char list => val option)) option)
     => val => ty option"
### theory "Draft.Semilattices"
### 0.314s elapsed time, 0.965s cpu time, 0.135s GC time
### theory "Draft.Objects"
### 0.152s elapsed time, 0.448s cpu time, 0.052s GC time
Loading theory "Draft.Exceptions" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses")
### theory "Draft.Exceptions"
### 0.093s elapsed time, 0.185s cpu time, 0.000s GC time
Loading theory "Draft.SystemClasses" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType" via "Draft.WellForm")
### theory "Draft.SystemClasses"
### 0.050s elapsed time, 0.102s cpu time, 0.000s GC time
Loading theory "Draft.WellForm" (required by "Draft.SemiTypeMoreTemplates" via "Draft.SemiType")
### theory "Draft.WellForm"
### 0.241s elapsed time, 0.506s cpu time, 0.065s GC time
Loading theory "Draft.SemiType" (required by "Draft.SemiTypeMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.656s elapsed time, 1.543s cpu time, 0.117s GC time
### No equation for constructor "Void"
### No equation for constructor "Boolean"
### No equation for constructor "Integer"
### No equation for constructor "NT"
consts
  the_Class :: "ty => char list"
### theory "Draft.SemiType"
### 0.272s elapsed time, 0.415s cpu time, 0.058s GC time
Loading theory "Draft.SemiTypeMoreTemplates"
val templateLemmas =
   [("SemiType.exec_lub_refl", "exec_lub ?r ?f ?T ?T = ?T",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 0),
       template_var 0)),
    ("SemiType.wf_subtype_acc", "wf_prog ?wf_mb ?P ==> acc (subtype ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SemiType.err_semilat_JType_esl",
     "wf_prog ?wf_mb ?P ==> err_semilat (SemiType.esl ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SemiType.wf_converse_subcls1_impl_acc_subtype",
     "wf ((subcls1 ?P)^-1) ==> acc (subtype ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SemiType.order_widen",
     "wf_prog ?m ?P ==> order (subtype ?P) (types ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SemiType.closed_err_types",
     "wf_prog ?wf_mb ?P ==>
      Semilat.closed (err (types ?P)) (lift2 (SemiType.sup ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SemiType.superI",
     "?P \<turnstile> ?C \<prec>\<^sup>1 ?D ==> super ?P ?C = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("SemiType.NT_widen",
     "subtype ?P NT ?T = (?T = NT | (EX C. ?T = Class C))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 4)),
             template_app (template_hole 1, t_empty))
           ))),
    ("SemiType.is_class_is_subcls",
     "wf_prog ?m ?P ==>
      is_class ?P ?C = ?P \<turnstile> ?C \<preceq>\<^sup>* Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("SemiType.Class_widen2",
     "subtype ?P (Class ?C) ?T =
      (EX D. ?T = Class D & ?P \<turnstile> ?C \<preceq>\<^sup>* D)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app (template_hole 6, t_empty))),
    ("SemiType.widen_antisym",
     "[| wf_prog ?m ?P; subtype ?P ?T ?U; subtype ?P ?U ?T |] ==> ?T = ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("SemiType.sup_exists",
     "[| subtype ?P ?a ?c; subtype ?P ?b ?c |]
      ==> EX T. SemiType.sup ?P ?a ?b = OK T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SemiType.subcls_antisym",
     "[| wf_prog ?m ?P; ?P \<turnstile> ?C \<preceq>\<^sup>* ?D;
         ?P \<turnstile> ?D \<preceq>\<^sup>* ?C |]
      ==> ?C = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_equation (template_var 1, template_var 0))),
    ("SemiType.sup_subtype_greater",
     "[| wf_prog ?wf_mb ?P; is_type ?P ?t1.0; is_type ?P ?t2.0;
         SemiType.sup ?P ?t1.0 ?t2.0 = OK ?s |]
      ==> subtype ?P ?t1.0 ?s & subtype ?P ?t2.0 ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0))
           ))),
    ("SemiType.sup_subtype_smallest",
     "[| wf_prog ?wf_mb ?P; is_type ?P ?a; is_type ?P ?b; is_type ?P ?c;
         subtype ?P ?a ?c; subtype ?P ?b ?c;
         SemiType.sup ?P ?a ?b = OK ?d |]
      ==> subtype ?P ?d ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 0),
             template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.SemiTypeMoreTemplates"
### 0.425s elapsed time, 0.583s cpu time, 0.067s GC time
val it = (): unit
