Loading theory "Draft.Auxiliary" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Auxiliary"
### 0.139s elapsed time, 0.574s cpu time, 0.044s GC time
Loading theory "Draft.Type" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl")
### theory "HOL-Library.Function_Algebras"
### 0.166s elapsed time, 0.681s cpu time, 0.044s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.241s elapsed time, 0.978s cpu time, 0.044s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
### theory "HOL-Library.Nat_Bijection"
### 0.401s elapsed time, 1.599s cpu time, 0.157s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.512s elapsed time, 2.010s cpu time, 0.200s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices" via "Draft.Err" via "Draft.Semilat")
### theory "Draft.Type"
### 0.675s elapsed time, 2.653s cpu time, 0.266s GC time
Loading theory "Draft.Decl" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
consts
  shift :: "'a list => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
Proofs for coinductive predicate(s) "streamsp"
consts
  right :: "'a tree => 'a tree"
  Proving monotonicity ...
### theory "Draft.Decl"
### 0.083s elapsed time, 0.333s cpu time, 0.000s GC time
Loading theory "Draft.TypeRel" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Proofs for inductive predicate(s) "subcls1p"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "{}"
  Proving monotonicity ...
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "widen"
  Proving monotonicity ...
Found termination order: "{}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.While_Combinator"
### 0.824s elapsed time, 3.083s cpu time, 0.797s GC time
Loading theory "Draft.Semilat" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices" via "Draft.Err")
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.209s elapsed time, 4.606s cpu time, 0.884s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs")
locale Semilat
  fixes A :: "'a set"
    and r :: "'a => 'a => bool"
    and f :: "'a => 'a => 'a"
  assumes "Semilat A r f"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "Fields"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.Semilat"
### 0.358s elapsed time, 1.424s cpu time, 0.097s GC time
Loading theory "Draft.Err" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Introduced fixed type variable(s): 'a in "y"
### Introduced fixed type variable(s): 'a in "z"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### No equation for constructor "Err"
consts
  ok_val :: "'a err => 'a"
Found termination order: "size <*mlex*> {}"
consts
  strict :: "('a => 'b err) => 'a err => 'b err"
### theory "HOL-Library.Tree"
### 2.403s elapsed time, 9.305s cpu time, 1.422s GC time
Loading theory "Draft.Templates" (required by "Draft.EffectMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Err"
### 0.828s elapsed time, 3.256s cpu time, 0.416s GC time
Loading theory "Draft.Listn" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
### theory "Draft.TypeRel"
### 1.814s elapsed time, 6.975s cpu time, 1.244s GC time
Loading theory "Draft.Value" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions" via "Draft.Objects")
### theory "HOL-Library.BigO"
### 1.097s elapsed time, 4.316s cpu time, 0.513s GC time
Loading theory "Draft.Opt" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.095s elapsed time, 0.361s cpu time, 0.088s GC time
Loading theory "Draft.Product" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
consts
  coalesce :: "'a err list => 'a list err"
### theory "Draft.Opt"
### 0.386s elapsed time, 1.386s cpu time, 0.928s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.EffectMoreTemplates")
### theory "Draft.Product"
### 0.446s elapsed time, 1.609s cpu time, 0.981s GC time
### theory "Draft.Listn"
### 0.657s elapsed time, 2.298s cpu time, 0.981s GC time
Loading theory "Draft.Semilattices" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "Draft.Value"
### 0.770s elapsed time, 2.659s cpu time, 1.076s GC time
Loading theory "Draft.Objects" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions")
consts
  typeof_h ::
    "(nat => (char list * (char list * char list => val option)) option)
     => val => ty option"
### theory "Draft.Objects"
### 0.134s elapsed time, 0.407s cpu time, 0.000s GC time
Loading theory "Draft.Exceptions" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses")
Loading theory "Draft.JVMState" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVMExceptions" via "Draft.JVMInstructions")
### theory "Draft.JVMState"
### 0.038s elapsed time, 0.145s cpu time, 0.000s GC time
Loading theory "Draft.JVMInstructions" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVMExceptions")
### theory "Draft.Semilattices"
### 0.309s elapsed time, 1.004s cpu time, 0.095s GC time
### theory "Draft.Exceptions"
### 0.165s elapsed time, 0.564s cpu time, 0.093s GC time
Loading theory "Draft.SystemClasses" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.734s elapsed time, 2.391s cpu time, 0.241s GC time
### theory "Draft.SystemClasses"
### 0.073s elapsed time, 0.209s cpu time, 0.000s GC time
Loading theory "Draft.WellForm" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType" via "Draft.SemiType")
### theory "Draft.WellForm"
### 0.255s elapsed time, 0.544s cpu time, 0.078s GC time
Loading theory "Draft.SemiType" (required by "Draft.EffectMoreTemplates" via "Draft.Effect" via "Draft.JVM_SemiType")
### No equation for constructor "Void"
### No equation for constructor "Boolean"
### No equation for constructor "Integer"
### No equation for constructor "NT"
consts
  the_Class :: "ty => char list"
### theory "Draft.SemiType"
### 0.313s elapsed time, 0.676s cpu time, 0.105s GC time
Loading theory "Draft.JVM_SemiType" (required by "Draft.EffectMoreTemplates" via "Draft.Effect")
### theory "Draft.JVM_SemiType"
### 0.252s elapsed time, 0.562s cpu time, 0.129s GC time
### theory "Draft.JVMInstructions"
### 1.803s elapsed time, 4.011s cpu time, 1.562s GC time
Loading theory "Draft.JVMExceptions" (required by "Draft.EffectMoreTemplates" via "Draft.Effect")
consts
  match_ex_table ::
    "(char list *
      char list *
      (char list * ty) list * (char list * ty list * ty * 'm) list) list
     => char list
        => nat
           => (nat * nat * char list * nat * nat) list
              => (nat * nat) option"
consts
  find_handler ::
    "(char list *
      char list *
      (char list * ty) list *
      (char list *
       ty list *
       ty *
       nat *
       nat *
       instr list * (nat * nat * char list * nat * nat) list) list) list
     => nat
        => (nat
            => (char list * (char list * char list => val option)) option)
           => (val list * val list * char list * char list * nat) list
              => nat option *
                 (nat
                  => (char list *
                      (char list * char list => val option)) option) *
                 (val list * val list * char list * char list * nat) list"
### theory "Draft.JVMExceptions"
### 0.158s elapsed time, 0.163s cpu time, 0.000s GC time
Loading theory "Draft.Effect" (required by "Draft.EffectMoreTemplates")
locale prog
  fixes
    P :: "(char list *
           char list *
           (char list * ty) list *
           (char list * ty list * ty * 'a) list) list"
locale jvm_method
  fixes
    P :: "(char list *
           char list *
           (char list * ty) list *
           (char list * ty list * ty * 'a) list) list"
    and mxs :: "nat"
    and mxl\<^sub>0 :: "nat"
    and Ts :: "ty list"
    and T\<^sub>r :: "ty"
    and "is" :: "instr list"
    and xt :: "(nat * nat * char list * nat * nat) list"
    and mxl :: "nat"
  defines "mxl == 1 + length Ts + mxl\<^sub>0"
consts
  succs :: "instr => ty list * ty err list => nat => nat list"
### Missing patterns in function definition:
### the_class Void = undefined
### the_class Boolean = undefined
### the_class Integer = undefined
### (1 more)
Found termination order: "{}"
### Missing patterns in function definition:
### !!vb v ve. eff\<^sub>i (Store vb, v, [], ve) = undefined
### !!vb vc v vf. eff\<^sub>i (Getfield vb vc, v, [], vf) = undefined
### !!vb vc v vf. eff\<^sub>i (Putfield vb vc, v, [], vf) = undefined
### (10 more)
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale eff
  fixes
    P :: "(char list *
           char list *
           (char list * ty) list *
           (char list * ty list * ty * 'a) list) list"
    and mxs :: "nat"
    and mxl\<^sub>0 :: "nat"
    and Ts :: "ty list"
    and T\<^sub>r :: "ty"
    and "is" :: "instr list"
    and xt :: "(nat * nat * char list * nat * nat) list"
    and mxl :: "nat"
    and
    eff\<^sub>i :: "instr => ty list * ty err list => ty list * ty err list"
    and app\<^sub>i :: "instr => nat => ty list * ty err list => bool"
    and
    eff ::
      "instr
       => nat
          => (ty list * ty err list) option
             => (nat * (ty list * ty err list) option) list"
    and app :: "instr => nat => (ty list * ty err list) option => bool"
    and
    norm_eff ::
      "instr
       => nat
          => ty list * ty err list
             => (nat * (ty list * ty err list) option) list"
    and xcpt_app :: "instr => nat => ty list * ty err list => bool"
    and
    xcpt_eff ::
      "instr
       => nat
          => ty list * ty err list
             => (nat * (ty list * ty err list) option) list"
    and mpc :: "nat"
  defines "mxl == 1 + length Ts + mxl\<^sub>0"
    and "mpc == length is"
    and "!!i \<tau>. eff\<^sub>i i \<tau> == eff\<^sub>i (i, P, \<tau>)"
    and
    "!!i pc \<tau>.
        app\<^sub>i i pc \<tau> ==
        app\<^sub>i (i, P, pc, mxs, T\<^sub>r, \<tau>)"
    and "!!i pc \<tau>. xcpt_eff i pc \<tau> == xcpt_eff i P pc \<tau> xt"
    and "!!i pc \<tau>. norm_eff i pc \<tau> == norm_eff i P pc \<tau>"
    and "!!i pc. eff i pc == eff i P pc xt"
    and
    "!!i pc \<tau>. xcpt_app i pc \<tau> == xcpt_app i P pc mxs xt \<tau>"
    and "!!i pc. app i pc == app i P mxs T\<^sub>r pc mpc xt"
### theory "Draft.Effect"
### 5.496s elapsed time, 7.954s cpu time, 0.564s GC time
Loading theory "Draft.EffectMoreTemplates"
val templateLemmas =
   [("Effect.rel_Invoke", "is_relevant_class (Invoke ?M ?n) = (%P C. True)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Effect.eff_None", "eff ?i ?P ?pc ?xt None = []",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Effect.eff\<^sub>i_Goto", "eff\<^sub>i (Goto ?n, ?P, ?s) = ?s",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_var 0)),
    ("Effect.appNone", "app ?i ?P ?mxs ?T\<^sub>r ?pc ?mpc ?et None = True",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Effect.rel_Checcast",
     "is_relevant_class (Checkcast ?D) = (%P. subcls P ClassCast)",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       t_empty)),
    ("Effect.rel_New",
     "is_relevant_class (New ?D) = (%P. subcls P OutOfMemory)",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       t_empty)),
    ("Effect.rel_Getfield",
     "is_relevant_class (Getfield ?F ?D) = (%P. subcls P NullPointer)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Effect.rel_Putfield",
     "is_relevant_class (Putfield ?F ?D) = (%P. subcls P NullPointer)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Effect.eff\<^sub>i_Pop",
     "eff\<^sub>i (Pop, ?P, ?T # ?ST, ?LT) = (?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Effect.eff\<^sub>i_IfFalse",
     "eff\<^sub>i (IfFalse ?b, ?P, ?T\<^sub>1 # ?ST, ?LT) = (?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 4)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Effect.eff\<^sub>i_New",
     "eff\<^sub>i (New ?C, ?P, ?ST, ?LT) = (Class ?C # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 1)),
         template_var 0))),
    ("Effect.effNone",
     "(?pc', ?s') : set (eff ?i ?P ?pc ?et None) ==> ?s' = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0),
                  template_hole 1)))
            )],
       template_equation (template_var 4, template_hole 1))),
    ("Effect.app\<^sub>i_Pop",
     "app\<^sub>i (Pop, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T # ?ST, ?LT) = True",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 6),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 1)),
                     template_var 0))))))),
       template_hole 0)),
    ("Effect.eff\<^sub>i_Load",
     "eff\<^sub>i (Load ?n, ?P, ?ST, ?LT) = (ok_val (?LT ! ?n) # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3))),
             template_var 1)),
         template_var 0))),
    ("Effect.eff\<^sub>i_Checkcast",
     "eff\<^sub>i (Checkcast ?C, ?P, ?T # ?ST, ?LT) =
      (Class ?C # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 4)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)),
             template_var 1)),
         template_var 0))),
    ("Effect.eff\<^sub>i_CmpEq",
     "eff\<^sub>i (CmpEq, ?P, ?T\<^sub>1 # ?T\<^sub>2 # ?ST, ?LT) =
      (Boolean # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0))),
    ("Effect.eff\<^sub>i_IAdd",
     "eff\<^sub>i (IAdd, ?P, ?T\<^sub>1 # ?T\<^sub>2 # ?ST, ?LT) =
      (Integer # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0))),
    ("Effect.eff\<^sub>i_Putfield",
     "eff\<^sub>i (Putfield ?F ?C, ?P, ?T\<^sub>1 # ?T\<^sub>2 # ?ST, ?LT) =
      (?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 6),
               template_var 5)),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1))),
               template_var 0)))),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Effect.app\<^sub>i_Throw",
     "app\<^sub>i (Throw, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T # ?ST, ?LT) =
      is_refT ?T",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 6),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 1)),
                     template_var 0))))))),
       template_app (template_hole 0, template_var 2))),
    ("Effect.relevant_entries_append",
     "relevant_entries ?P ?i ?pc (?xt @ ?xt') =
      relevant_entries ?P ?i ?pc ?xt @ relevant_entries ?P ?i ?pc ?xt'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0)))),
    ("Effect.eff\<^sub>i_Push",
     "eff\<^sub>i (Push ?v, ?P, ?ST, ?LT) = (the (typeof ?v) # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 3)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_var 3))),
             template_var 1)),
         template_var 0))),
    ("Effect.eff\<^sub>i_Store",
     "eff\<^sub>i (Store ?n, ?P, ?T # ?ST, ?LT) = (?ST, ?LT[?n := OK ?T])",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 4),
           template_app (template_hole 0, template_var 2))))),
    ("Effect.app\<^sub>i_Goto",
     "app\<^sub>i (Goto ?b, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (0 <= int ?pc + ?b)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 5)),
           template_app
            (template_app (template_hole 7, template_var 4),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))))),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 5)))),
    ("Effect.eff_Some",
     "eff ?i ?P ?pc ?xt \<lfloor>?\<tau>\<rfloor> =
      norm_eff ?i ?P ?pc ?\<tau> @ xcpt_eff ?i ?P ?pc ?\<tau> ?xt",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0),
           template_var 1)))),
    ("Effect.app\<^sub>i_Return",
     "app\<^sub>i (Return, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T # ?ST, ?LT) =
      subtype ?P ?T ?T\<^sub>r",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 6),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 1)),
                     template_var 0))))))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 6), template_var 2),
         template_var 3))),
    ("Effect.app\<^sub>i_Store",
     "app\<^sub>i (Store ?n, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T # ?ST, ?LT) =
      (?n < length ?LT)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 7)),
           template_app
            (template_app (template_hole 7, template_var 6),
             template_app
              (template_app (template_hole 6, template_var 5),
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_var 1)),
                     template_var 0))))))),
       template_app
        (template_app (template_hole 1, template_var 7),
         template_app (template_hole 0, template_var 0)))),
    ("Effect.xcpt_eff_append",
     "xcpt_eff ?i ?P ?pc ?\<tau> (?xt @ ?xt') =
      xcpt_eff ?i ?P ?pc ?\<tau> ?xt @ xcpt_eff ?i ?P ?pc ?\<tau> ?xt'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 0)))),
    ("Effect.eff\<^sub>i_Getfield",
     "eff\<^sub>i (Getfield ?F ?C, ?P, ?T # ?ST, ?LT) =
      (snd (field ?P ?C ?F) # ?ST, ?LT)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 4),
                   template_var 5))),
             template_var 1)),
         template_var 0))),
    ("Effect.app\<^sub>i_New",
     "app\<^sub>i (New ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?ST, ?LT) =
      (is_class ?P ?C & length ?ST < ?mxs)",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 6)),
           template_app
            (template_app (template_hole 8, template_var 5),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0))))))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 5),
             template_var 6)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 3)))),
    ("Effect.app\<^sub>i_Checkcast",
     "app\<^sub>i (Checkcast ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T # ?ST, ?LT) =
      (is_class ?P ?C & is_refT ?T)",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 7)),
           template_app
            (template_app (template_hole 8, template_var 6),
             template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 2),
                         template_var 1)),
                     template_var 0))))))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 6),
             template_var 7)),
         template_app (template_hole 0, template_var 2)))),
    ("Effect.app\<^sub>i_IfFalse",
     "app\<^sub>i
       (IfFalse ?b, ?P, ?pc, ?mxs, ?T\<^sub>r, Boolean # ?ST, ?LT) =
      (0 <= int ?pc + ?b)",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app
            (template_hole 12,
             template_app (template_hole 11, template_var 6)),
           template_app
            (template_app (template_hole 10, template_var 5),
             template_app
              (template_app (template_hole 9, template_var 4),
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 1)),
                     template_var 0))))))),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 4)),
           template_var 6)))),
    ("Effect.length_cases2",
     "[| !!LT. ?P ([], LT); !!l ST LT. ?P (l # ST, LT) |] ==> ?P ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Effect.xcpt_app_append",
     "xcpt_app ?i ?P ?pc ?mxs (?xt @ ?xt') ?\<tau> =
      (xcpt_app ?i ?P ?pc ?mxs ?xt ?\<tau> &
       xcpt_app ?i ?P ?pc ?mxs ?xt' ?\<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Effect.appIAdd",
     "app\<^sub>i (IAdd, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX ST LT. ?s = (Integer # Integer # ST, LT))",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app (template_hole 11, template_hole 10),
           template_app
            (template_app (template_hole 9, template_var 4),
             template_app
              (template_app (template_hole 8, template_var 3),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 5, t_empty))),
    ("Effect.app\<^sub>iPop",
     "app\<^sub>i (Pop, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX ts ST LT. ?s = (ts # ST, LT))",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app (template_hole 11, template_hole 10),
           template_app
            (template_app (template_hole 9, template_var 4),
             template_app
              (template_app (template_hole 8, template_var 3),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 5, t_empty))),
    ("Effect.app\<^sub>i_IAdd",
     "app\<^sub>i
       (IAdd, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T\<^sub>1 # ?T\<^sub>2 # ?ST,
        ?LT) =
      (?T\<^sub>1 = ?T\<^sub>2 & ?T\<^sub>1 = Integer)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app
                     (template_app (template_hole 6, template_var 5),
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_app
                               (template_hole 3, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 1))),
                          template_var 0)))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0))
           ))),
    ("Effect.app\<^sub>i_Push",
     "app\<^sub>i (Push ?v, ?P, ?pc, ?mxs, ?T\<^sub>r, ?ST, ?LT) =
      (length ?ST < ?mxs & typeof ?v ~= None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 6)),
                template_app
                 (template_app (template_hole 12, template_var 5),
                  template_app
                   (template_app (template_hole 11, template_var 4),
                    template_app
                     (template_app (template_hole 10, template_var 3),
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_app
                         (template_app (template_hole 8, template_var 1),
                          template_var 0)))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_var 3)),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_var 6)),
                 template_hole 0)))
           ))),
    ("Effect.app\<^sub>i_CmpEq",
     "app\<^sub>i
       (CmpEq, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T\<^sub>1 # ?T\<^sub>2 # ?ST,
        ?LT) =
      (?T\<^sub>1 = ?T\<^sub>2 | is_refT ?T\<^sub>1 & is_refT ?T\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app (template_hole 9, template_var 7),
                  template_app
                   (template_app (template_hole 8, template_var 6),
                    template_app
                     (template_app (template_hole 7, template_var 5),
                      template_app
                       (template_app (template_hole 6, template_var 4),
                        template_app
                         (template_app
                           (template_hole 5,
                            template_app
                             (template_app
                               (template_hole 4, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 2),
                                template_var 1))),
                          template_var 0)))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Effect.appThrow",
     "app\<^sub>i (Throw, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX T ST LT. ?s = (T # ST, LT) & is_refT T)",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app (template_hole 13, template_hole 12),
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app
              (template_app (template_hole 10, template_var 3),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 7, t_empty))),
    ("Effect.app_append",
     "app ?i ?P ?pc ?T ?mxs ?mpc (?xt @ ?xt') ?\<tau> =
      (app ?i ?P ?pc ?T ?mxs ?mpc ?xt ?\<tau> &
       app ?i ?P ?pc ?T ?mxs ?mpc ?xt' ?\<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Effect.appReturn",
     "app\<^sub>i (Return, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX T ST LT. ?s = (T # ST, LT) & subtype ?P T ?T\<^sub>r)",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app (template_hole 13, template_hole 12),
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app
              (template_app (template_hole 10, template_var 3),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 7, t_empty))),
    ("Effect.appIfFalse",
     "app\<^sub>i (IfFalse ?b, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX ST LT. ?s = (Boolean # ST, LT) & 0 <= int ?pc + ?b)",
     template_equation
      (template_app
        (template_hole 17,
         template_app
          (template_app
            (template_hole 16,
             template_app (template_hole 15, template_var 5)),
           template_app
            (template_app (template_hole 14, template_var 4),
             template_app
              (template_app (template_hole 13, template_var 3),
               template_app
                (template_app (template_hole 12, template_var 2),
                 template_app
                  (template_app (template_hole 11, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 10, t_empty))),
    ("Effect.appNew",
     "app\<^sub>i (New ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX ST LT. ?s = (ST, LT) & is_class ?P ?C & length ST < ?mxs)",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app
            (template_hole 13,
             template_app (template_hole 12, template_var 5)),
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app
              (template_app (template_hole 10, template_var 3),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 7, t_empty))),
    ("Effect.appStore",
     "app\<^sub>i (Store ?idx, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX ts ST LT. ?s = (ts # ST, LT) & ?idx < length LT)",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app
            (template_hole 14,
             template_app (template_hole 13, template_var 5)),
           template_app
            (template_app (template_hole 12, template_var 4),
             template_app
              (template_app (template_hole 11, template_var 3),
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 8, t_empty))),
    ("Effect.app\<^sub>i_Load",
     "app\<^sub>i (Load ?n, ?P, ?pc, ?mxs, ?T\<^sub>r, ?ST, ?LT) =
      (?n < length ?LT & ?LT ! ?n ~= Err & length ?ST < ?mxs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 6)),
                template_app
                 (template_app (template_hole 12, template_var 5),
                  template_app
                   (template_app (template_hole 11, template_var 4),
                    template_app
                     (template_app (template_hole 10, template_var 3),
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_app
                         (template_app (template_hole 8, template_var 1),
                          template_var 0)))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 6),
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_var 6)),
                     template_hole 1))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 0, template_var 1)),
                 template_var 3)))
           ))),
    ("Effect.app\<^sub>i_Getfield",
     "app\<^sub>i
       (Getfield ?F ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?T # ?ST, ?LT) =
      (EX T\<^sub>f.
          ?P \<turnstile> ?C sees ?F:T\<^sub>f in ?C &
          subtype ?P ?T (Class ?C))",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 8),
               template_var 7)),
           template_app
            (template_app (template_hole 10, template_var 6),
             template_app
              (template_app (template_hole 9, template_var 5),
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 2),
                         template_var 1)),
                     template_var 0))))))),
       template_app (template_hole 4, t_empty))),
    ("Effect.appCheckcast",
     "app\<^sub>i (Checkcast ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX T ST LT. ?s = (T # ST, LT) & is_class ?P ?C & is_refT T)",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app
            (template_hole 14,
             template_app (template_hole 13, template_var 5)),
           template_app
            (template_app (template_hole 12, template_var 4),
             template_app
              (template_app (template_hole 11, template_var 3),
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 8, t_empty))),
    ("Effect.appPush",
     "app\<^sub>i (Push ?v, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX ST LT. ?s = (ST, LT) & length ST < ?mxs & typeof ?v ~= None)",
     template_equation
      (template_app
        (template_hole 18,
         template_app
          (template_app
            (template_hole 17,
             template_app (template_hole 16, template_var 5)),
           template_app
            (template_app (template_hole 15, template_var 4),
             template_app
              (template_app (template_hole 14, template_var 3),
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 11, t_empty))),
    ("Effect.length_cases3",
     "[| !!LT. ?P ([], LT); !!l LT. ?P ([l], LT);
         !!l ST LT. ?P (l # ST, LT) |]
      ==> ?P ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Effect.eff\<^sub>i_Invoke",
     "eff\<^sub>i (Invoke ?M ?n, ?P, ?ST, ?LT) =
      (let C = the_class (?ST ! ?n); (D, Ts, T\<^sub>r, b) = method ?P C ?M
       in (T\<^sub>r # drop (?n + 1) ?ST, ?LT))",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 13, template_var 2),
             template_app
              (template_app (template_hole 12, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 3))),
         t_empty))),
    ("Effect.appLoad",
     "app\<^sub>i (Load ?idx, ?P, ?T\<^sub>r, ?mxs, ?pc, ?s) =
      (EX ST LT.
          ?s = (ST, LT) &
          ?idx < length LT & LT ! ?idx ~= Err & length ST < ?mxs)",
     template_equation
      (template_app
        (template_hole 18,
         template_app
          (template_app
            (template_hole 17,
             template_app (template_hole 16, template_var 5)),
           template_app
            (template_app (template_hole 15, template_var 4),
             template_app
              (template_app (template_hole 14, template_var 3),
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 11, t_empty))),
    ("Effect.app\<^sub>i_Putfield",
     "app\<^sub>i
       (Putfield ?F ?C, ?P, ?pc, ?mxs, ?T\<^sub>r,
        ?T\<^sub>1 # ?T\<^sub>2 # ?ST, ?LT) =
      (EX T\<^sub>f.
          ?P \<turnstile> ?C sees ?F:T\<^sub>f in ?C &
          subtype ?P ?T\<^sub>2 (Class ?C) &
          subtype ?P ?T\<^sub>1 T\<^sub>f)",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 9),
               template_var 8)),
           template_app
            (template_app (template_hole 10, template_var 7),
             template_app
              (template_app (template_hole 9, template_var 6),
               template_app
                (template_app (template_hole 8, template_var 5),
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_app
                          (template_app (template_hole 5, template_var 2),
                           template_var 1))),
                     template_var 0))))))),
       template_app (template_hole 4, t_empty))),
    ("Effect.appGetField",
     "app\<^sub>i (Getfield ?F ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX oT vT ST LT.
          ?s = (oT # ST, LT) &
          ?P \<turnstile> ?C sees ?F:vT in ?C & subtype ?P oT (Class ?C))",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 6),
               template_var 5)),
           template_app
            (template_app (template_hole 13, template_var 4),
             template_app
              (template_app (template_hole 12, template_var 3),
               template_app
                (template_app (template_hole 11, template_var 2),
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 9, t_empty))),
    ("Effect.appCmpEq",
     "app\<^sub>i (CmpEq, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX T\<^sub>1 T\<^sub>2 ST LT.
          ?s = (T\<^sub>1 # T\<^sub>2 # ST, LT) &
          (~ is_refT T\<^sub>1 & T\<^sub>2 = T\<^sub>1 |
           is_refT T\<^sub>1 & is_refT T\<^sub>2))",
     template_equation
      (template_app
        (template_hole 17,
         template_app
          (template_app (template_hole 16, template_hole 15),
           template_app
            (template_app (template_hole 14, template_var 4),
             template_app
              (template_app (template_hole 13, template_var 3),
               template_app
                (template_app (template_hole 12, template_var 2),
                 template_app
                  (template_app (template_hole 11, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 10, t_empty))),
    ("Effect.app_Some",
     "app ?i ?P ?mxs ?T\<^sub>r ?pc ?mpc ?xt \<lfloor>?\<tau>\<rfloor> =
      (app\<^sub>i (?i, ?P, ?pc, ?mxs, ?T\<^sub>r, ?\<tau>) &
       xcpt_app ?i ?P ?pc ?mxs ?xt ?\<tau> &
       (ALL (pc', s'):set (eff ?i ?P ?pc ?xt \<lfloor>?\<tau>\<rfloor>).
           pc' < ?mpc))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 14, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 13, template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 7),
               template_app
                (template_app (template_hole 9, template_var 6),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_app
                    (template_app (template_hole 7, template_var 5),
                     template_app
                      (template_app (template_hole 6, template_var 4),
                       template_var 0))))))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 3),
                   template_var 5),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 7),
                         template_var 6),
                       template_var 3),
                     template_var 1),
                   template_app (template_hole 13, template_var 0)))),
             template_app (template_hole 1, t_empty)))))),
    ("Effect.appPutField",
     "app\<^sub>i (Putfield ?F ?C, ?P, ?pc, ?mxs, ?T\<^sub>r, ?s) =
      (EX vT vT' oT ST LT.
          ?s = (vT # oT # ST, LT) &
          ?P \<turnstile> ?C sees ?F:vT' in ?C &
          subtype ?P oT (Class ?C) & subtype ?P vT vT')",
     template_equation
      (template_app
        (template_hole 16,
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 6),
               template_var 5)),
           template_app
            (template_app (template_hole 13, template_var 4),
             template_app
              (template_app (template_hole 12, template_var 3),
               template_app
                (template_app (template_hole 11, template_var 2),
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_var 0)))))),
       template_app (template_hole 9, t_empty))),
    ("Effect.length_cases4",
     "[| !!LT. ?P ([], LT); !!l LT. ?P ([l], LT);
         !!l l' LT. ?P ([l, l'], LT); !!l l' ST LT. ?P (l # l' # ST, LT) |]
      ==> ?P ?s",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Effect.app\<^sub>i_Invoke",
     "app\<^sub>i (Invoke ?M ?n, ?P, ?pc, ?mxs, ?T\<^sub>r, ?ST, ?LT) =
      (?n < length ?ST &
       (?ST ! ?n ~= NT -->
        (EX C D Ts T m.
            ?ST ! ?n = Class C &
            ?P \<turnstile> C sees ?M: Ts\<rightarrow>T = m in D &
            ?P \<turnstile> rev (take ?n ?ST) [\<le>] Ts)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 25,
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app (template_hole 23, template_var 7),
                    template_var 6)),
                template_app
                 (template_app (template_hole 22, template_var 5),
                  template_app
                   (template_app (template_hole 21, template_var 4),
                    template_app
                     (template_app (template_hole 20, template_var 3),
                      template_app
                       (template_app (template_hole 19, template_var 2),
                        template_app
                         (template_app (template_hole 18, template_var 1),
                          template_var 0)))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_var 6),
                 template_app (template_hole 15, template_var 1))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_var 1),
                         template_var 6)),
                     template_hole 10))),
               template_app (template_hole 9, t_empty)))
           )))]:
   (string * thm * template) list
### theory "Draft.EffectMoreTemplates"
### 0.444s elapsed time, 0.590s cpu time, 0.000s GC time
val it = (): unit
