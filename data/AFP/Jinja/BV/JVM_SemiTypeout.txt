Loading theory "Draft.Auxiliary" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Auxiliary"
### 0.140s elapsed time, 0.578s cpu time, 0.054s GC time
Loading theory "Draft.Type" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl")
### theory "HOL-Library.Function_Algebras"
### 0.146s elapsed time, 0.602s cpu time, 0.054s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rtrancl_tab"
Found termination order: "size_list size <*mlex*> {}"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.314s elapsed time, 1.273s cpu time, 0.054s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.402s elapsed time, 1.611s cpu time, 0.178s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.470s elapsed time, 1.846s cpu time, 0.222s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices" via "Draft.Err" via "Draft.Semilat")
### theory "Draft.Type"
### 0.528s elapsed time, 2.079s cpu time, 0.222s GC time
Loading theory "Draft.Decl" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.TypeRel")
### theory "Draft.Decl"
### 0.057s elapsed time, 0.236s cpu time, 0.000s GC time
Loading theory "Draft.TypeRel" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "{}"
consts
  snth :: "'a stream => nat => 'a"
consts
  left :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "subcls1p"
consts
  right :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Proofs for inductive predicate(s) "widen"
consts
  cycle :: "'a list => 'a stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Proofs for inductive predicate(s) "Methods"
consts
  flat :: "'a list stream => 'a stream"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.While_Combinator"
### 0.828s elapsed time, 3.102s cpu time, 0.808s GC time
Loading theory "Draft.Semilat" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices" via "Draft.Err")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.188s elapsed time, 4.518s cpu time, 0.974s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "Fields"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
locale Semilat
  fixes A :: "'a set"
    and r :: "'a => 'a => bool"
    and f :: "'a => 'a => 'a"
  assumes "Semilat A r f"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Introduced fixed type variable(s): 'a in "y"
### Introduced fixed type variable(s): 'a in "z"
### theory "Draft.Semilat"
### 0.405s elapsed time, 1.596s cpu time, 0.154s GC time
Loading theory "Draft.Err" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.TypeRel"
### 1.670s elapsed time, 6.409s cpu time, 1.240s GC time
Loading theory "Draft.Value" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions" via "Draft.Objects")
### theory "HOL-Library.BigO"
### 1.121s elapsed time, 4.245s cpu time, 1.152s GC time
### No equation for constructor "Err"
consts
  ok_val :: "'a err => 'a"
consts
  strict :: "('a => 'b err) => 'a err => 'b err"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Err"
### 1.129s elapsed time, 4.041s cpu time, 1.105s GC time
Loading theory "Draft.Listn" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
Loading theory "Draft.Opt" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
consts
  coalesce :: "'a err list => 'a list err"
### theory "HOL-Library.Tree"
### 2.806s elapsed time, 10.467s cpu time, 2.373s GC time
Loading theory "Draft.Templates" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Opt"
### 0.130s elapsed time, 0.507s cpu time, 0.084s GC time
Loading theory "Draft.Product" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.Semilattices")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "Draft.Value"
### 0.785s elapsed time, 2.675s cpu time, 0.911s GC time
Loading theory "Draft.Objects" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.113s elapsed time, 0.438s cpu time, 0.099s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.JVM_SemiTypeMoreTemplates")
### theory "Draft.Product"
### 0.137s elapsed time, 0.540s cpu time, 0.099s GC time
consts
  typeof_h ::
    "(nat => (char list * (char list * char list => val option)) option)
     => val => ty option"
### theory "Draft.Objects"
### 0.173s elapsed time, 0.590s cpu time, 0.099s GC time
Loading theory "Draft.Exceptions" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm" via "Draft.SystemClasses")
### theory "Draft.Exceptions"
### 0.119s elapsed time, 0.369s cpu time, 0.092s GC time
Loading theory "Draft.SystemClasses" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType" via "Draft.WellForm")
### theory "Draft.Listn"
### 0.487s elapsed time, 1.723s cpu time, 0.276s GC time
Loading theory "Draft.Semilattices" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType")
### theory "Draft.SystemClasses"
### 0.055s elapsed time, 0.159s cpu time, 0.000s GC time
Loading theory "Draft.WellForm" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType" via "Draft.SemiType")
### theory "Draft.Semilattices"
### 0.285s elapsed time, 0.868s cpu time, 0.083s GC time
### theory "Draft.WellForm"
### 0.261s elapsed time, 0.779s cpu time, 0.083s GC time
Loading theory "Draft.SemiType" (required by "Draft.JVM_SemiTypeMoreTemplates" via "Draft.JVM_SemiType")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.692s elapsed time, 2.004s cpu time, 0.175s GC time
### No equation for constructor "Void"
### No equation for constructor "Boolean"
### No equation for constructor "Integer"
### No equation for constructor "NT"
consts
  the_Class :: "ty => char list"
### theory "Draft.SemiType"
### 0.269s elapsed time, 0.427s cpu time, 0.000s GC time
Loading theory "Draft.JVM_SemiType" (required by "Draft.JVM_SemiTypeMoreTemplates")
### theory "Draft.JVM_SemiType"
### 0.222s elapsed time, 0.270s cpu time, 0.067s GC time
Loading theory "Draft.JVM_SemiTypeMoreTemplates"
val templateLemmas =
   [("JVM_SemiType.sup_state_refl", "?P |- ?s <=i ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("JVM_SemiType.sup_state_opt_None_any", "?P |- None <=?s",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)
         )),
    ("JVM_SemiType.sup_state_opt_refl", "?P |- ?s <=?s",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("JVM_SemiType.any_Err", "?P |- ?T <=T Err",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("JVM_SemiType.sup_ty_opt_refl", "?P |- ?T <=T ?T",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("JVM_SemiType.subtype_refl", "subtype ?P ?t ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("JVM_SemiType.sup_state_opt_err", "Err.le (sup_state_opt ?P) ?s ?s",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0),
           template_var 0)
         )),
    ("JVM_SemiType.sup_loc_refl", "?P |- ?LT [<=T] ?LT",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0),
           template_var 0)
         )),
    ("JVM_SemiType.JVM_le_Err_conv",
     "JVM_SemiType.le ?P ?m ?n = Err.le (sup_state_opt ?P)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 2)))),
    ("JVM_SemiType.sup_state_opt_any_None", "?P |- ?s <=None = (?s = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("JVM_SemiType.Err_any_conv", "?P |- Err <=T ?T = (?T = Err)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("JVM_SemiType.acc_le_listI1",
     "acc (subtype ?P) ==> acc (Listn.le (subtype ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)))
           ))),
    ("JVM_SemiType.err_le_unfold", "Err.le ?r (OK ?a) (OK ?b) = ?r ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("JVM_SemiType.acc_JVM",
     "wf_prog ?wf_mb ?P ==> acc (JVM_SemiType.le ?P ?mxs ?mxl)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("JVM_SemiType.semilat_JVM",
     "wf_prog ?wf_mb ?P ==> semilat (JVM_SemiType.sl ?P ?mxs ?mxl)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("JVM_SemiType.stk_convert",
     "?P \<turnstile> ?ST [\<le>] ?ST' = Listn.le (subtype ?P) ?ST ?ST'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0))),
    ("JVM_SemiType.sup_state_opt_Some_Some",
     "?P |- \<lfloor>?a\<rfloor> <=\<lfloor>?b\<rfloor> = ?P |- ?a <=i ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("JVM_SemiType.OK_OK_conv",
     "?P |- OK ?T <=T OK ?T' = subtype ?P ?T ?T'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("JVM_SemiType.acc_le_listI2",
     "acc (Err.le (subtype ?P)) ==> acc (Listn.le (Err.le (subtype ?P)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("JVM_SemiType.JVM_le_conv",
     "JVM_SemiType.le ?P ?m ?n (OK ?t1.0) (OK ?t2.0) = ?P |- ?t1.0 <=?t2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 4), template_var 1),
         template_var 0))),
    ("JVM_SemiType.sup_loc_widens_conv",
     "?P |- map OK ?Ts [<=T] map OK ?Ts' =
      ?P \<turnstile> ?Ts [\<le>] ?Ts'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("JVM_SemiType.sup_state_trans",
     "[| ?P |- ?a <=i ?b; ?P |- ?b <=i ?c |] ==> ?P |- ?a <=i ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("JVM_SemiType.sup_state_opt_trans",
     "[| ?P |- ?a <=?b; ?P |- ?b <=?c |] ==> ?P |- ?a <=?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("JVM_SemiType.sup_ty_opt_trans",
     "[| ?P |- ?a <=T ?b; ?P |- ?b <=T ?c |] ==> ?P |- ?a <=T ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("JVM_SemiType.sup_state_opt_any_Some",
     "?P |- \<lfloor>?s\<rfloor> <=?X =
      (EX s'. ?X = \<lfloor>s'\<rfloor> & ?P |- ?s <=i s')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("JVM_SemiType.any_OK_conv",
     "?P |- ?X <=T OK ?T' = (EX T. ?X = OK T & subtype ?P T ?T')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("JVM_SemiType.sup_loc_trans",
     "[| ?P |- ?a [<=T] ?b; ?P |- ?b [<=T] ?c |] ==> ?P |- ?a [<=T] ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 0)
           ))),
    ("JVM_SemiType.sup_state_conv2",
     "?P |- ?s1.0 <=i ?s2.0 =
      (?P \<turnstile> fst ?s1.0 [\<le>] fst ?s2.0 &
       ?P |- snd ?s1.0 [<=T] snd ?s2.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("JVM_SemiType.sup_state_conv",
     "?P |- (?ST, ?LT) <=i (?ST', ?LT') =
      (?P \<turnstile> ?ST [\<le>] ?ST' & ?P |- ?LT [<=T] ?LT')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 4),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 4)),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)),
             template_var 2),
           template_var 0)))),
    ("JVM_SemiType.OK_any_conv",
     "?P |- OK ?T <=T ?X =
      (?X = Err | (EX T'. ?X = OK T' & subtype ?P ?T T'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))
           ))),
    ("JVM_SemiType.sup_loc_Cons1",
     "?P |- (?x # ?xs) [<=T] ?ys =
      (EX z zs. ?ys = z # zs & ?P |- ?x <=T z & ?P |- ?xs [<=T] zs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("JVM_SemiType.Cons_less_Conss1",
     "(?x # ?xs [<subtype ?P] ?y # ?ys) =
      (?x <_(subtype ?P) ?y & ?xs [<=subtype ?P] ?ys |
       ?x = ?y & ?xs [<subtype ?P] ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3)),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 2))),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_app (template_hole 5, template_var 2)),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 2))),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 3),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 2))),
                 template_var 0)))
           ))),
    ("JVM_SemiType.order_sup_state_opt'",
     "wf_prog ?wf_mb ?P ==>
      order (sup_state_opt ?P)
       (opt (\<Union> {list n (types ?P) |n. n <= ?mxs} \<times>
             list (Suc (length ?Ts + ?mxl\<^sub>0)) (err (types ?P))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app (template_hole 16, template_var 3)),
             template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_hole 13,
                     template_app (template_hole 12, t_empty))),
                 t_empty)))
           ))),
    ("JVM_SemiType.Cons_less_Conss2",
     "(?x # ?xs [<Err.le (subtype ?P)] ?y # ?ys) =
      (?x <_(Err.le (subtype ?P)) ?y & ?xs [<=Err.le (subtype ?P)] ?ys |
       ?x = ?y & ?xs [<Err.le (subtype ?P)] ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 4),
                    template_var 3)),
                template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 2)))),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 2))),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 2)))),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 3),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 2)))),
                 template_var 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.JVM_SemiTypeMoreTemplates"
### 0.400s elapsed time, 0.504s cpu time, 0.000s GC time
val it = (): unit
