Loading theory "Draft.Auxiliary" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions" via "Draft.Objects" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Auxiliary"
### 0.109s elapsed time, 0.452s cpu time, 0.035s GC time
Loading theory "Draft.Type" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions" via "Draft.Objects" via "Draft.TypeRel" via "Draft.Decl")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.527s cpu time, 0.035s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions" via "Draft.Objects" via "Draft.TypeRel")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rtrancl_tab"
### theory "HOL-Library.Set_Algebras"
### 0.192s elapsed time, 0.788s cpu time, 0.035s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.342s elapsed time, 1.366s cpu time, 0.118s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.293s elapsed time, 1.155s cpu time, 0.083s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Type"
### 0.403s elapsed time, 1.588s cpu time, 0.156s GC time
Loading theory "Draft.Decl" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions" via "Draft.Objects" via "Draft.TypeRel")
### theory "Draft.Decl"
### 0.054s elapsed time, 0.210s cpu time, 0.000s GC time
Loading theory "Draft.TypeRel" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions" via "Draft.Objects")
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "widen"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for inductive predicate(s) "Fields"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.080s elapsed time, 4.111s cpu time, 0.905s GC time
### Introduced fixed type variable(s): 'a in "y"
### Introduced fixed type variable(s): 'a in "z"
### theory "HOL-Library.BigO"
### 1.017s elapsed time, 3.845s cpu time, 0.833s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.TypeRel"
### 1.343s elapsed time, 4.309s cpu time, 0.929s GC time
Loading theory "Draft.Value" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions" via "Draft.Objects")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.012s elapsed time, 6.384s cpu time, 1.127s GC time
Loading theory "Draft.Templates" (required by "Draft.BigStepMoreTemplates" via "Draft.ExtrEqs")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.115s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.BigStepMoreTemplates")
### theory "Draft.Value"
### 0.354s elapsed time, 0.733s cpu time, 0.042s GC time
Loading theory "Draft.Objects" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr" via "Draft.Exceptions")
consts
  typeof_h ::
    "(nat => (char list * (char list * char list => val option)) option)
     => val => ty option"
### theory "Draft.Objects"
### 0.127s elapsed time, 0.279s cpu time, 0.057s GC time
Loading theory "Draft.Exceptions" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep" via "Draft.Expr")
### theory "Draft.Exceptions"
### 0.078s elapsed time, 0.154s cpu time, 0.000s GC time
Loading theory "Draft.Expr" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep")
Loading theory "Draft.State" (required by "Draft.BigStepMoreTemplates" via "Draft.BigStep")
### theory "Draft.State"
### 0.037s elapsed time, 0.106s cpu time, 0.000s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.540s elapsed time, 1.169s cpu time, 0.116s GC time
Found termination order: "{}"
### Ambiguous input (line 81 of "$AFP/Jinja/J/Expr.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_Update" ("_position" fv)
###       ("_updbind"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D) ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.exp.LAss"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  fv :: "char list exp => char list set"
  fvs :: "char list exp list => char list set"
### theory "Draft.Expr"
### 3.205s elapsed time, 4.422s cpu time, 1.190s GC time
Loading theory "Draft.BigStep" (required by "Draft.BigStepMoreTemplates")
### Ambiguous input (line 119 of "$AFP/Jinja/J/BigStep.thy") produces 4 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>0)
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>0)
###             ("_updbind" ("_position" V) ("_position" None)))))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg" ("_position" l\<^sub>1)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>1)
###             ("\<^const>Expr.exp.LAss" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>0)
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>0)
###             ("\<^const>Expr.exp.LAss" ("_position" V) ("_position" None)))))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg" ("_position" l\<^sub>1)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>1)
###             ("\<^const>Expr.exp.LAss" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>0)
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>0)
###             ("_updbind" ("_position" V) ("_position" None)))))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg" ("_position" l\<^sub>1)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>1)
###             ("_updbind" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>0)
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>0)
###             ("\<^const>Expr.exp.LAss" ("_position" V) ("_position" None)))))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg" ("_position" l\<^sub>1)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>1)
###             ("_updbind" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 175 of "$AFP/Jinja/J/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0)
###         ("_applC" ("_position" Throw) ("_position" a))
###         ("_tuple" ("_position" h\<^sub>1)
###           ("_tuple_arg" ("_position" l\<^sub>1)))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" h\<^sub>1) ("_position" a))
###           ("_applC" ("_position" Some)
###             ("_tuple" ("_position" D) ("_tuple_arg" ("_position" fs))))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>TypeRel.subcls" ("_position" P) ("_position" D)
###             ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###               ("_tuple" ("_position" h\<^sub>1)
###                 ("_tuple_arg"
###                   ("_MapUpd" ("_position" l\<^sub>1)
###                     ("_maplet" ("_position" V)
###                       ("_applC" ("_position" Addr) ("_position" a))))))
###               ("_position" e\<^sub>2')
###               ("_tuple" ("_position" h\<^sub>2)
###                 ("_tuple_arg" ("_position" l\<^sub>2)))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.TryCatch" ("_position" e\<^sub>1) ("_position" C)
###         ("_position" V) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0) ("_position" e\<^sub>2')
###       ("_tuple" ("_position" h\<^sub>2)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>2)
###             ("\<^const>Expr.exp.LAss" ("_position" V)
###               ("_applC" ("_position" l\<^sub>1) ("_position" V)))))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0)
###         ("_applC" ("_position" Throw) ("_position" a))
###         ("_tuple" ("_position" h\<^sub>1)
###           ("_tuple_arg" ("_position" l\<^sub>1)))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" h\<^sub>1) ("_position" a))
###           ("_applC" ("_position" Some)
###             ("_tuple" ("_position" D) ("_tuple_arg" ("_position" fs))))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>TypeRel.subcls" ("_position" P) ("_position" D)
###             ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###               ("_tuple" ("_position" h\<^sub>1)
###                 ("_tuple_arg"
###                   ("_MapUpd" ("_position" l\<^sub>1)
###                     ("_maplet" ("_position" V)
###                       ("_applC" ("_position" Addr) ("_position" a))))))
###               ("_position" e\<^sub>2')
###               ("_tuple" ("_position" h\<^sub>2)
###                 ("_tuple_arg" ("_position" l\<^sub>2)))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.TryCatch" ("_position" e\<^sub>1) ("_position" C)
###         ("_position" V) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0) ("_position" e\<^sub>2')
###       ("_tuple" ("_position" h\<^sub>2)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>2)
###             ("_updbind" ("_position" V)
###               ("_applC" ("_position" l\<^sub>1) ("_position" V)))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 83 of "$AFP/Jinja/J/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0)
###         ("_applC" ("_position" addr) ("_position" a))
###         ("_position" s\<^sub>1)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###           ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_tuple" ("_position" h\<^sub>2)
###             ("_tuple_arg" ("_position" l\<^sub>2)))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" h\<^sub>2) ("_position" a))
###             ("_applC" ("_position" Some)
###               ("_tuple" ("_position" C) ("_tuple_arg" ("_position" fs))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq" ("_position" fs')
###               ("_MapUpd" ("_position" fs)
###                 ("_maplet"
###                   ("_tuple" ("_position" F) ("_tuple_arg" ("_position" D)))
###                   ("_position" v)))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq" ("_position" h\<^sub>2')
###                 ("_MapUpd" ("_position" h\<^sub>2)
###                   ("_maplet" ("_position" a)
###                     ("_tuple" ("_position" C)
###                       ("_tuple_arg" ("_position" fs'))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.LAss"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0) ("_position" unit)
###       ("_tuple" ("_position" h\<^sub>2')
###         ("_tuple_arg" ("_position" l\<^sub>2))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0)
###         ("_applC" ("_position" addr) ("_position" a))
###         ("_position" s\<^sub>1)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###           ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_tuple" ("_position" h\<^sub>2)
###             ("_tuple_arg" ("_position" l\<^sub>2)))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" h\<^sub>2) ("_position" a))
###             ("_applC" ("_position" Some)
###               ("_tuple" ("_position" C) ("_tuple_arg" ("_position" fs))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq" ("_position" fs')
###               ("_MapUpd" ("_position" fs)
###                 ("_maplet"
###                   ("_tuple" ("_position" F) ("_tuple_arg" ("_position" D)))
###                   ("_position" v)))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq" ("_position" h\<^sub>2')
###                 ("_MapUpd" ("_position" h\<^sub>2)
###                   ("_maplet" ("_position" a)
###                     ("_tuple" ("_position" C)
###                       ("_tuple_arg" ("_position" fs'))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0) ("_position" unit)
###       ("_tuple" ("_position" h\<^sub>2')
###         ("_tuple_arg" ("_position" l\<^sub>2))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 88 of "$AFP/Jinja/J/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0) ("_position" null) ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###           ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.LAss"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" THROW) ("_position" NullPointer))
###       ("_position" s\<^sub>2))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0) ("_position" null) ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###           ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" THROW) ("_position" NullPointer))
###       ("_position" s\<^sub>2))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 92 of "$AFP/Jinja/J/BigStep.thy") produces 2 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.LAss"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 96 of "$AFP/Jinja/J/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0) ("_applC" ("_position" Val) ("_position" v))
###         ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###           ("_position" s\<^sub>1)
###           ("_applC" ("_position" throw) ("_position" e'))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.LAss"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>2))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>1)
###         ("_position" s\<^sub>0) ("_applC" ("_position" Val) ("_position" v))
###         ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" e\<^sub>2)
###           ("_position" s\<^sub>1)
###           ("_applC" ("_position" throw) ("_position" e'))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P)
###       ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>2))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "eval", "evals"
  Proving monotonicity ...
### Ambiguous input (line 204 of "$AFP/Jinja/J/BigStep.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BigStep.eval" ("_position" P)
###     ("\<^const>Expr.exp.LAss"
###       ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D))
###       ("_position" e\<^sub>2))
###     ("_position" s) ("_position" e') ("_position" s')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BigStep.eval" ("_position" P)
###     ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###       ("_position" D) ("_position" e\<^sub>2))
###     ("_position" s) ("_position" e') ("_position" s')))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.BigStep"
### 2.118s elapsed time, 3.204s cpu time, 1.131s GC time
Loading theory "Draft.BigStepMoreTemplates"
val templateLemmas =
   [("BigStep.finals_app_map", "finals (map Val ?vs @ ?es) = finals ?es",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("BigStep.eval_finalId",
     "final ?e ==>
      ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                      \<langle>?e,?s\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0),
               template_var 2),
             template_var 0)
           ))),
    ("BigStep.eval_finalsId",
     "finals ?es ==>
      ?P \<turnstile> \<langle>?es,?s\<rangle> [\<Rightarrow>]
                      \<langle>?es,?s\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0),
               template_var 2),
             template_var 0)
           ))),
    ("BigStep.not_finals_ConsI", "~ final ?e ==> ~ finals (?e # ?es)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("BigStep.eval_final",
     "?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                      \<langle>?e',?s'\<rangle> ==>
      final ?e'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BigStep.evals_final",
     "?P \<turnstile> \<langle>?es,?s\<rangle> [\<Rightarrow>]
                      \<langle>?es',?s'\<rangle> ==>
      finals ?es'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BigStep.eval_hext",
     "?P \<turnstile> \<langle>?e,(?h, ?l)\<rangle> \<Rightarrow>
                      \<langle>?e',(?h', ?l')\<rangle> ==>
      ?h \<unlhd> ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4), template_var 1)
           ))),
    ("BigStep.evals_hext",
     "?P \<turnstile> \<langle>?es,(?h, ?l)\<rangle> [\<Rightarrow>]
                      \<langle>?es',(?h', ?l')\<rangle> ==>
      ?h \<unlhd> ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4), template_var 1)
           ))),
    ("BigStep.eval_lcl_incr",
     "?P \<turnstile> \<langle>?e,
                       (?h\<^sub>0, ?l\<^sub>0)\<rangle> \<Rightarrow>
                      \<langle>?e',(?h\<^sub>1, ?l\<^sub>1)\<rangle> ==>
      dom ?l\<^sub>0 <= dom ?l\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("BigStep.evals_lcl_incr",
     "?P \<turnstile> \<langle>?es,
                       (?h\<^sub>0, ?l\<^sub>0)\<rangle> [\<Rightarrow>]
                      \<langle>?es',(?h\<^sub>1, ?l\<^sub>1)\<rangle> ==>
      dom ?l\<^sub>0 <= dom ?l\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("BigStep.evals_cases",
     "[| ?P \<turnstile> \<langle>[],?s\<rangle> [\<Rightarrow>]
                         \<langle>?e',?s'\<rangle>;
         [| ?e' = []; ?s' = ?s |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_hole 2),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 2)],
          template_implication
           ([template_equation (template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>Val ?v,?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         [| ?e' = Val ?v; ?s' = ?s |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app (template_hole 2, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 2, template_var 4))],
          template_implication
           ([template_equation (template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("BigStep.finalE",
     "[| final ?e; !!v. ?e = Val v ==> ?R; !!a. ?e = Throw a ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>?e\<^sub>1;; ?e\<^sub>2,
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!v s\<^sub>1.
            [| ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Val v,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!e. [| ?e' = throw e;
                 ?P \<turnstile> \<langle>?e\<^sub>1,
                                  ?s\<rangle> \<Rightarrow>
                                 \<langle>throw e,?s'\<rangle> |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>{?V:?T; ?e\<^sub>1},
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!h\<^sub>0 l\<^sub>0 h\<^sub>1 l\<^sub>1.
            [| ?s = (h\<^sub>0, l\<^sub>0);
               ?s' = (h\<^sub>1, l\<^sub>1(?V := l\<^sub>0 ?V));
               ?P \<turnstile> \<langle>?e\<^sub>1,
                                (h\<^sub>0, l\<^sub>0
                                 (?V := None))\<rangle> \<Rightarrow>
                               \<langle>?e',
                                (h\<^sub>1, l\<^sub>1)\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.evals_cases",
     "[| ?P \<turnstile> \<langle>?e # ?es,?s\<rangle> [\<Rightarrow>]
                         \<langle>?e',?s'\<rangle>;
         !!v s\<^sub>1 es'.
            [| ?e' = Val v # es';
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>Val v,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?es,
                                s\<^sub>1\<rangle> [\<Rightarrow>]
                               \<langle>es',?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e' # ?es;
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 6),
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>?V:=?e,?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!v h l.
            [| ?e' = unit; ?s' = (h, l(?V |-> v));
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>Val v,(h, l)\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 13, template_var 6),
                    template_app
                     (template_app (template_hole 12, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>throw ?e,?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!a. [| ?e' = Throw a;
                 ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                 \<langle>addr a,?s'\<rangle> |]
              ==> ?Pa;
         [| ?e' = THROW NullPointer;
            ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                            \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_app (template_hole 8, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_hole 8,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 9, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_app (template_hole 5, template_hole 1)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>if (?e) ?e\<^sub>1 else ?e\<^sub>2,
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!s\<^sub>1.
            [| ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>true,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>1,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!s\<^sub>1.
            [| ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>false,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>?e\<^sub>1 \<guillemotleft>?bop\<guillemotright> ?e\<^sub>2,
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!v\<^sub>1 s\<^sub>1 v\<^sub>2 v.
            [| ?e' = Val v;
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>2,?s'\<rangle>;
               binop (?bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?Pa;
         !!e. [| ?e' = throw e;
                 ?P \<turnstile> \<langle>?e\<^sub>1,
                                  ?s\<rangle> \<Rightarrow>
                                 \<langle>throw e,?s'\<rangle> |]
              ==> ?Pa;
         !!v\<^sub>1 s\<^sub>1 e.
            [| ?e' = throw e;
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>throw e,?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>?e\<bullet>?F{?D},
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!a h l C fs v.
            [| ?e' = Val v; ?s' = (h, l);
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>addr a,(h, l)\<rangle>;
               h a = \<lfloor>(C, fs)\<rfloor>;
               fs (?F, ?D) = \<lfloor>v\<rfloor> |]
            ==> ?Pa;
         [| ?e' = THROW NullPointer;
            ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                            \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 23, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 22, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_hole 4,
               template_app
                (template_hole 14,
                 template_app
                  (template_hole 11,
                   template_app (template_hole 3, template_hole 2)))))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 23, template_var 7),
                         template_var 6),
                       template_var 3),
                     template_app (template_hole 14, template_hole 1)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>while (?b) ?c,?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         [| ?e' = unit;
            ?P \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                            \<langle>false,?s'\<rangle> |]
         ==> ?Pa;
         !!s\<^sub>1 v\<^sub>1 s\<^sub>2.
            [| ?P \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                               \<langle>true,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?c,s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,s\<^sub>2\<rangle>;
               ?P \<turnstile> \<langle>while (?b) ?c,
                                s\<^sub>2\<rangle> \<Rightarrow>
                               \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!s\<^sub>1 e'.
            [| ?e' = throw e';
               ?P \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                               \<langle>true,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?c,s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>throw e',?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 6),
                    template_app
                     (template_app (template_hole 10, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 8, template_hole 7))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 11, template_var 6),
                         template_var 5),
                       template_var 3),
                     template_app
                      (template_hole 8,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>Cast ?C ?e,?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!a h l D fs.
            [| ?e' = addr a; ?s' = (h, l);
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>addr a,(h, l)\<rangle>;
               h a = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* ?C |]
            ==> ?Pa;
         [| ?e' = null;
            ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                            \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!a h l D fs.
            [| ?e' = THROW ClassCast; ?s' = (h, l);
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>addr a,(h, l)\<rangle>;
               h a = \<lfloor>(D, fs)\<rfloor>; (D, ?C) ~: (subcls1 ?P)^* |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 24, template_var 6),
                    template_app
                     (template_app (template_hole 23, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 16, template_hole 5))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 24, template_var 6),
                         template_var 4),
                       template_var 3),
                     template_app (template_hole 16, template_hole 5)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>try ?e\<^sub>1 catch(?C ?V) ?e\<^sub>2,
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!v\<^sub>1.
            [| ?e' = Val v\<^sub>1;
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,?s'\<rangle> |]
            ==> ?Pa;
         !!a h\<^sub>1 l\<^sub>1 D fs h\<^sub>2 l\<^sub>2.
            [| ?s' = (h\<^sub>2, l\<^sub>2(?V := l\<^sub>1 ?V));
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Throw a,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               h\<^sub>1 a = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* ?C;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                (h\<^sub>1, l\<^sub>1(?V |->
                                 Addr a))\<rangle> \<Rightarrow>
                               \<langle>?e',
                                (h\<^sub>2, l\<^sub>2)\<rangle> |]
            ==> ?Pa;
         !!a h\<^sub>1 l\<^sub>1 D fs.
            [| ?e' = Throw a; ?s' = (h\<^sub>1, l\<^sub>1);
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Throw a,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               h\<^sub>1 a = \<lfloor>(D, fs)\<rfloor>;
               (D, ?C) ~: (subcls1 ?P)^* |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 23, template_var 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 22, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>?e\<^sub>1\<bullet>?F{?D} := ?e\<^sub>2,
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!a s\<^sub>1 v h\<^sub>2 l\<^sub>2 C fs.
            [| ?e' = unit;
               ?s' = (h\<^sub>2(a |-> (C, fs((?F, ?D) |-> v))), l\<^sub>2);
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>addr a,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>Val v,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               h\<^sub>2 a = \<lfloor>(C, fs)\<rfloor> |]
            ==> ?Pa;
         !!s\<^sub>1 v.
            [| ?e' = THROW NullPointer;
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>null,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>Val v,?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!v s\<^sub>1 e'.
            [| ?e' = throw e';
               ?P \<turnstile> \<langle>?e\<^sub>1,?s\<rangle> \<Rightarrow>
                               \<langle>Val v,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?e\<^sub>2,
                                s\<^sub>1\<rangle> \<Rightarrow>
                               \<langle>throw e',?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 26, template_var 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 25, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P \<turnstile> \<langle>?e\<bullet>?M {?D}(?es),
                          ?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle>;
         !!e'. [| ?e' = throw e';
                  ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!v s\<^sub>1 vs ex es'.
            [| ?e' = throw ex;
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>Val v,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?es,
                                s\<^sub>1\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs @ throw ex # es',
                                ?s'\<rangle> |]
            ==> ?Pa;
         !!s\<^sub>1 vs.
            [| ?e' = THROW NullPointer;
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>null,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?es,
                                s\<^sub>1\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,?s'\<rangle> |]
            ==> ?Pa;
         !!a s\<^sub>1 vs h\<^sub>2 l\<^sub>2 C fs Ts T pns body D h\<^sub>3
            l\<^sub>3.
            [| ?s' = (h\<^sub>3, l\<^sub>2);
               ?P \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>addr a,s\<^sub>1\<rangle>;
               ?P \<turnstile> \<langle>?es,
                                s\<^sub>1\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               h\<^sub>2 a = \<lfloor>(C, fs)\<rfloor>;
               ?P \<turnstile> C sees ?M
 {?D}: Ts\<rightarrow>T = (pns, body) in D;
               length vs = length pns;
               ?P \<turnstile> \<langle>body,
                                (h\<^sub>2,
                                 [this |-> Addr a, pns [|->]
                                  vs])\<rangle> \<Rightarrow>
                               \<langle>?e',
                                (h\<^sub>3, l\<^sub>3)\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 42, template_var 8),
                    template_app
                     (template_app
                       (template_app (template_hole 41, template_var 7),
                        template_app
                         (template_var 6,
                          template_app
                           (template_app (template_hole 40, template_var 5),
                            template_hole 39))),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 38, t_empty)),
        template_predicate (template_app (template_hole 35, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_evals_inducts",
     "[| ?P \<turnstile> \<langle>?x1a,(?x2a, ?x2b)\<rangle> \<Rightarrow>
                         \<langle>?x3a,(?x4a, ?x4b)\<rangle>;
         !!h a C FDTs h' l.
            [| new_Addr h = \<lfloor>a\<rfloor>;
               ?P \<turnstile> C has_fields FDTs;
               h' = h(a |-> (C, init_fields FDTs)) |]
            ==> ?P1.0 (new C) h l (addr a) h' l;
         !!h C l.
            new_Addr h = None ==> ?P1.0 (new C) h l (THROW OutOfMemory) h l;
         !!e a b aa h l D fs C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* C |]
            ==> ?P1.0 (Cast C e) a b (addr aa) h l;
         !!e a b aa ba C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (Cast C e) a b null aa ba;
         !!e a b aa h l D fs C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(D, fs)\<rfloor>;
               (D, C) ~: (subcls1 ?P)^* |]
            ==> ?P1.0 (Cast C e) a b (THROW ClassCast) h l;
         !!e a b e' aa ba C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (Cast C e) a b (throw e') aa ba;
         !!v a b. ?P1.0 (Val v) a b (Val v) a b;
         !!e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 v\<^sub>2 ab bb bop v.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (Val v\<^sub>2) ab bb;
               binop (bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (Val v) ab bb;
         !!e\<^sub>1 a b e aa ba bop e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (throw e) aa ba |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) aa ba;
         !!e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 e ab bb bop.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (throw e) ab bb |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) ab bb;
         !!l V v h.
            l V = \<lfloor>v\<rfloor> ==> ?P1.0 (Var V) h l (Val v) h l;
         !!e a b v h l l' V.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(h, l)\<rangle>;
               ?P1.0 e a b (Val v) h l; l' = l(V |-> v) |]
            ==> ?P1.0 (V:=e) a b unit h l';
         !!e a b e' aa ba V.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (V:=e) a b (throw e') aa ba;
         !!e a b aa h l C fs F D v.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(C, fs)\<rfloor>;
               fs (F, D) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (Val v) h l;
         !!e a b aa ba F D.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (THROW NullPointer) aa ba;
         !!e a b e' aa ba F D.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (throw e') aa ba;
         !!e\<^sub>1 a b aa ab ba e\<^sub>2 v h\<^sub>2 l\<^sub>2 C fs fs' F
            D h\<^sub>2'.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (addr aa) ab ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (ab, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 e\<^sub>2 ab ba (Val v) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, fs)\<rfloor>;
               fs' = fs((F, D) |-> v);
               h\<^sub>2' = h\<^sub>2(aa |-> (C, fs')) |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b unit
                 h\<^sub>2' l\<^sub>2;
         !!e\<^sub>1 a b aa ba e\<^sub>2 v ab bb F D.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b null aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (Val v) ab bb |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b
                 (THROW NullPointer) ab bb;
         !!e\<^sub>1 a b e' aa ba F D e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (throw e') aa ba |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b (throw e')
                 aa ba;
         !!e\<^sub>1 a b v aa ba e\<^sub>2 e' ab bb F D.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (throw e') ab bb |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b (throw e')
                 ab bb;
         !!e a b e' aa ba M ps.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b (throw e') aa ba;
         !!e a b v aa ba es vs ex es' ab bb M.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e a b (Val v) aa ba;
               ?P \<turnstile> \<langle>es,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs @ throw ex # es',
                                (ab, bb)\<rangle>;
               ?P2.0 es aa ba (map Val vs @ throw ex # es') ab bb |]
            ==> ?P1.0 (e\<bullet>M(es)) a b (throw ex) ab bb;
         !!e a b aa ba ps vs ab bb M.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba;
               ?P \<turnstile> \<langle>ps,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,(ab, bb)\<rangle>;
               ?P2.0 ps aa ba (map Val vs) ab bb |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b (THROW NullPointer) ab bb;
         !!e a b aa ab ba ps vs h\<^sub>2 l\<^sub>2 C fs M Ts T pns body D
            l\<^sub>2' e' h\<^sub>3 l\<^sub>3.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e a b (addr aa) ab ba;
               ?P \<turnstile> \<langle>ps,(ab, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, fs)\<rfloor>;
               ?P \<turnstile> C sees M: Ts\<rightarrow>T = (pns,
                       body) in D;
               length vs = length pns;
               l\<^sub>2' = [this |-> Addr aa, pns [|->] vs];
               ?P \<turnstile> \<langle>body,
                                (h\<^sub>2,
                                 l\<^sub>2')\<rangle> \<Rightarrow>
                               \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 body h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b e' h\<^sub>3 l\<^sub>2;
         !!e\<^sub>0 h\<^sub>0 l\<^sub>0 V e\<^sub>1 h\<^sub>1 l\<^sub>1 T.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (h\<^sub>0, l\<^sub>0
                                 (V := None))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>1,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>0 h\<^sub>0 (l\<^sub>0(V := None)) e\<^sub>1
                h\<^sub>1 l\<^sub>1 |]
            ==> ?P1.0 {V:T; e\<^sub>0} h\<^sub>0 l\<^sub>0 e\<^sub>1
                 h\<^sub>1 (l\<^sub>1(V := l\<^sub>0 V));
         !!e\<^sub>0 a b v aa ba e\<^sub>1 e\<^sub>2 ab bb.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>0 a b (Val v) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>1,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>1 aa ba e\<^sub>2 ab bb |]
            ==> ?P1.0 (e\<^sub>0;; e\<^sub>1) a b e\<^sub>2 ab bb;
         !!e\<^sub>0 a b e aa ba e\<^sub>1.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>0 a b (throw e) aa ba |]
            ==> ?P1.0 (e\<^sub>0;; e\<^sub>1) a b (throw e) aa ba;
         !!e a b aa ba e\<^sub>1 e' ab bb e\<^sub>2.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>e\<^sub>1,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>1 aa ba e' ab bb |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!e a b aa ba e\<^sub>2 e' ab bb e\<^sub>1.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 e a b false aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba e' ab bb |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!e a b e' aa ba e\<^sub>1 e\<^sub>2.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b (throw e') aa
                 ba;
         !!e a b aa ba c.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 e a b false aa ba |]
            ==> ?P1.0 (while (e) c) a b unit aa ba;
         !!e a b aa ba c v\<^sub>1 ab bb e\<^sub>3 ac bc.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(ab, bb)\<rangle>;
               ?P1.0 c aa ba (Val v\<^sub>1) ab bb;
               ?P \<turnstile> \<langle>while (e) c,
                                (ab, bb)\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>3,(ac, bc)\<rangle>;
               ?P1.0 (while (e) c) ab bb e\<^sub>3 ac bc |]
            ==> ?P1.0 (while (e) c) a b e\<^sub>3 ac bc;
         !!e a b e' aa ba c.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (while (e) c) a b (throw e') aa ba;
         !!e a b aa ba c e' ab bb.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 c aa ba (throw e') ab bb |]
            ==> ?P1.0 (while (e) c) a b (throw e') ab bb;
         !!e a b aa ab ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e a b (addr aa) ab ba |]
            ==> ?P1.0 (throw e) a b (Throw aa) ab ba;
         !!e a b aa ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (throw e) a b (THROW NullPointer) aa ba;
         !!e a b e' aa ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (throw e) a b (throw e') aa ba;
         !!e\<^sub>1 a b v\<^sub>1 aa ba C V e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b
                 (Val v\<^sub>1) aa ba;
         !!e\<^sub>1 a b aa h\<^sub>1 l\<^sub>1 D fs C e\<^sub>2 V
            e\<^sub>2' h\<^sub>2 l\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Throw aa,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Throw aa) h\<^sub>1 l\<^sub>1;
               h\<^sub>1 aa = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* C;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (h\<^sub>1, l\<^sub>1(V |->
                                 Addr aa))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>2',
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 e\<^sub>2 h\<^sub>1 (l\<^sub>1(V |-> Addr aa))
                e\<^sub>2' h\<^sub>2 l\<^sub>2 |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b e\<^sub>2'
                 h\<^sub>2 (l\<^sub>2(V := l\<^sub>1 V));
         !!e\<^sub>1 a b aa h\<^sub>1 l\<^sub>1 D fs C V e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Throw aa,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Throw aa) h\<^sub>1 l\<^sub>1;
               h\<^sub>1 aa = \<lfloor>(D, fs)\<rfloor>;
               (D, C) ~: (subcls1 ?P)^* |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b (Throw aa)
                 h\<^sub>1 l\<^sub>1;
         !!a b. ?P2.0 [] a b [] a b;
         !!e a b v aa ba es es' ab bb.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e a b (Val v) aa ba;
               ?P \<turnstile> \<langle>es,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>es',(ab, bb)\<rangle>;
               ?P2.0 es aa ba es' ab bb |]
            ==> ?P2.0 (e # es) a b (Val v # es') ab bb;
         !!e a b e' aa ba es.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P2.0 (e # es) a b (throw e' # es) aa ba |]
      ==> ?P1.0 ?x1a ?x2a ?x2b ?x3a ?x4a ?x4b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 78, template_var 8),
                    template_var 7),
                  template_app
                   (template_app (template_hole 77, template_var 6),
                    template_var 5)),
                template_var 4),
              template_app
               (template_app (template_hole 77, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 76, t_empty)),
        template_predicate (template_app (template_hole 76, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 44, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 72, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 76, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_var 1, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("BigStep.eval_evals_inducts",
     "[| ?P \<turnstile> \<langle>?x5a,(?x6a, ?x6b)\<rangle> [\<Rightarrow>]
                         \<langle>?x7a,(?x8a, ?x8b)\<rangle>;
         !!h a C FDTs h' l.
            [| new_Addr h = \<lfloor>a\<rfloor>;
               ?P \<turnstile> C has_fields FDTs;
               h' = h(a |-> (C, init_fields FDTs)) |]
            ==> ?P1.0 (new C) h l (addr a) h' l;
         !!h C l.
            new_Addr h = None ==> ?P1.0 (new C) h l (THROW OutOfMemory) h l;
         !!e a b aa h l D fs C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* C |]
            ==> ?P1.0 (Cast C e) a b (addr aa) h l;
         !!e a b aa ba C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (Cast C e) a b null aa ba;
         !!e a b aa h l D fs C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(D, fs)\<rfloor>;
               (D, C) ~: (subcls1 ?P)^* |]
            ==> ?P1.0 (Cast C e) a b (THROW ClassCast) h l;
         !!e a b e' aa ba C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (Cast C e) a b (throw e') aa ba;
         !!v a b. ?P1.0 (Val v) a b (Val v) a b;
         !!e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 v\<^sub>2 ab bb bop v.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (Val v\<^sub>2) ab bb;
               binop (bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (Val v) ab bb;
         !!e\<^sub>1 a b e aa ba bop e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (throw e) aa ba |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) aa ba;
         !!e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 e ab bb bop.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (throw e) ab bb |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) ab bb;
         !!l V v h.
            l V = \<lfloor>v\<rfloor> ==> ?P1.0 (Var V) h l (Val v) h l;
         !!e a b v h l l' V.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(h, l)\<rangle>;
               ?P1.0 e a b (Val v) h l; l' = l(V |-> v) |]
            ==> ?P1.0 (V:=e) a b unit h l';
         !!e a b e' aa ba V.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (V:=e) a b (throw e') aa ba;
         !!e a b aa h l C fs F D v.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(C, fs)\<rfloor>;
               fs (F, D) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (Val v) h l;
         !!e a b aa ba F D.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (THROW NullPointer) aa ba;
         !!e a b e' aa ba F D.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (throw e') aa ba;
         !!e\<^sub>1 a b aa ab ba e\<^sub>2 v h\<^sub>2 l\<^sub>2 C fs fs' F
            D h\<^sub>2'.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (addr aa) ab ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (ab, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 e\<^sub>2 ab ba (Val v) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, fs)\<rfloor>;
               fs' = fs((F, D) |-> v);
               h\<^sub>2' = h\<^sub>2(aa |-> (C, fs')) |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b unit
                 h\<^sub>2' l\<^sub>2;
         !!e\<^sub>1 a b aa ba e\<^sub>2 v ab bb F D.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b null aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (Val v) ab bb |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b
                 (THROW NullPointer) ab bb;
         !!e\<^sub>1 a b e' aa ba F D e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (throw e') aa ba |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b (throw e')
                 aa ba;
         !!e\<^sub>1 a b v aa ba e\<^sub>2 e' ab bb F D.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (throw e') ab bb |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b (throw e')
                 ab bb;
         !!e a b e' aa ba M ps.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b (throw e') aa ba;
         !!e a b v aa ba es vs ex es' ab bb M.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e a b (Val v) aa ba;
               ?P \<turnstile> \<langle>es,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs @ throw ex # es',
                                (ab, bb)\<rangle>;
               ?P2.0 es aa ba (map Val vs @ throw ex # es') ab bb |]
            ==> ?P1.0 (e\<bullet>M(es)) a b (throw ex) ab bb;
         !!e a b aa ba ps vs ab bb M.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba;
               ?P \<turnstile> \<langle>ps,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,(ab, bb)\<rangle>;
               ?P2.0 ps aa ba (map Val vs) ab bb |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b (THROW NullPointer) ab bb;
         !!e a b aa ab ba ps vs h\<^sub>2 l\<^sub>2 C fs M Ts T pns body D
            l\<^sub>2' e' h\<^sub>3 l\<^sub>3.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e a b (addr aa) ab ba;
               ?P \<turnstile> \<langle>ps,(ab, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, fs)\<rfloor>;
               ?P \<turnstile> C sees M: Ts\<rightarrow>T = (pns,
                       body) in D;
               length vs = length pns;
               l\<^sub>2' = [this |-> Addr aa, pns [|->] vs];
               ?P \<turnstile> \<langle>body,
                                (h\<^sub>2,
                                 l\<^sub>2')\<rangle> \<Rightarrow>
                               \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 body h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b e' h\<^sub>3 l\<^sub>2;
         !!e\<^sub>0 h\<^sub>0 l\<^sub>0 V e\<^sub>1 h\<^sub>1 l\<^sub>1 T.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (h\<^sub>0, l\<^sub>0
                                 (V := None))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>1,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>0 h\<^sub>0 (l\<^sub>0(V := None)) e\<^sub>1
                h\<^sub>1 l\<^sub>1 |]
            ==> ?P1.0 {V:T; e\<^sub>0} h\<^sub>0 l\<^sub>0 e\<^sub>1
                 h\<^sub>1 (l\<^sub>1(V := l\<^sub>0 V));
         !!e\<^sub>0 a b v aa ba e\<^sub>1 e\<^sub>2 ab bb.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>0 a b (Val v) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>1,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>1 aa ba e\<^sub>2 ab bb |]
            ==> ?P1.0 (e\<^sub>0;; e\<^sub>1) a b e\<^sub>2 ab bb;
         !!e\<^sub>0 a b e aa ba e\<^sub>1.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>0 a b (throw e) aa ba |]
            ==> ?P1.0 (e\<^sub>0;; e\<^sub>1) a b (throw e) aa ba;
         !!e a b aa ba e\<^sub>1 e' ab bb e\<^sub>2.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>e\<^sub>1,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>1 aa ba e' ab bb |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!e a b aa ba e\<^sub>2 e' ab bb e\<^sub>1.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 e a b false aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba e' ab bb |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!e a b e' aa ba e\<^sub>1 e\<^sub>2.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b (throw e') aa
                 ba;
         !!e a b aa ba c.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 e a b false aa ba |]
            ==> ?P1.0 (while (e) c) a b unit aa ba;
         !!e a b aa ba c v\<^sub>1 ab bb e\<^sub>3 ac bc.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(ab, bb)\<rangle>;
               ?P1.0 c aa ba (Val v\<^sub>1) ab bb;
               ?P \<turnstile> \<langle>while (e) c,
                                (ab, bb)\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>3,(ac, bc)\<rangle>;
               ?P1.0 (while (e) c) ab bb e\<^sub>3 ac bc |]
            ==> ?P1.0 (while (e) c) a b e\<^sub>3 ac bc;
         !!e a b e' aa ba c.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (while (e) c) a b (throw e') aa ba;
         !!e a b aa ba c e' ab bb.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 c aa ba (throw e') ab bb |]
            ==> ?P1.0 (while (e) c) a b (throw e') ab bb;
         !!e a b aa ab ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e a b (addr aa) ab ba |]
            ==> ?P1.0 (throw e) a b (Throw aa) ab ba;
         !!e a b aa ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (throw e) a b (THROW NullPointer) aa ba;
         !!e a b e' aa ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (throw e) a b (throw e') aa ba;
         !!e\<^sub>1 a b v\<^sub>1 aa ba C V e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b
                 (Val v\<^sub>1) aa ba;
         !!e\<^sub>1 a b aa h\<^sub>1 l\<^sub>1 D fs C e\<^sub>2 V
            e\<^sub>2' h\<^sub>2 l\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Throw aa,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Throw aa) h\<^sub>1 l\<^sub>1;
               h\<^sub>1 aa = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* C;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (h\<^sub>1, l\<^sub>1(V |->
                                 Addr aa))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>2',
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 e\<^sub>2 h\<^sub>1 (l\<^sub>1(V |-> Addr aa))
                e\<^sub>2' h\<^sub>2 l\<^sub>2 |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b e\<^sub>2'
                 h\<^sub>2 (l\<^sub>2(V := l\<^sub>1 V));
         !!e\<^sub>1 a b aa h\<^sub>1 l\<^sub>1 D fs C V e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Throw aa,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Throw aa) h\<^sub>1 l\<^sub>1;
               h\<^sub>1 aa = \<lfloor>(D, fs)\<rfloor>;
               (D, C) ~: (subcls1 ?P)^* |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b (Throw aa)
                 h\<^sub>1 l\<^sub>1;
         !!a b. ?P2.0 [] a b [] a b;
         !!e a b v aa ba es es' ab bb.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e a b (Val v) aa ba;
               ?P \<turnstile> \<langle>es,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>es',(ab, bb)\<rangle>;
               ?P2.0 es aa ba es' ab bb |]
            ==> ?P2.0 (e # es) a b (Val v # es') ab bb;
         !!e a b e' aa ba es.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P2.0 (e # es) a b (throw e' # es) aa ba |]
      ==> ?P2.0 ?x5a ?x6a ?x6b ?x7a ?x8a ?x8b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 78, template_var 8),
                    template_var 7),
                  template_app
                   (template_app (template_hole 77, template_var 6),
                    template_var 5)),
                template_var 4),
              template_app
               (template_app (template_hole 77, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 76, t_empty)),
        template_predicate (template_app (template_hole 76, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 43, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 72, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 76, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty)),
        template_predicate (template_app (template_hole 55, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_var 0, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("BigStep.eval_evals_induct",
     "[| !!h a C FDTs h' l.
            [| new_Addr h = \<lfloor>a\<rfloor>;
               ?P \<turnstile> C has_fields FDTs;
               h' = h(a |-> (C, init_fields FDTs)) |]
            ==> ?P1.0 (new C) h l (addr a) h' l;
         !!h C l.
            new_Addr h = None ==> ?P1.0 (new C) h l (THROW OutOfMemory) h l;
         !!e a b aa h l D fs C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* C |]
            ==> ?P1.0 (Cast C e) a b (addr aa) h l;
         !!e a b aa ba C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (Cast C e) a b null aa ba;
         !!e a b aa h l D fs C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(D, fs)\<rfloor>;
               (D, C) ~: (subcls1 ?P)^* |]
            ==> ?P1.0 (Cast C e) a b (THROW ClassCast) h l;
         !!e a b e' aa ba C.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (Cast C e) a b (throw e') aa ba;
         !!v a b. ?P1.0 (Val v) a b (Val v) a b;
         !!e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 v\<^sub>2 ab bb bop v.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (Val v\<^sub>2) ab bb;
               binop (bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (Val v) ab bb;
         !!e\<^sub>1 a b e aa ba bop e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (throw e) aa ba |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) aa ba;
         !!e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 e ab bb bop.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (throw e) ab bb |]
            ==> ?P1.0
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) ab bb;
         !!l V v h.
            l V = \<lfloor>v\<rfloor> ==> ?P1.0 (Var V) h l (Val v) h l;
         !!e a b v h l l' V.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(h, l)\<rangle>;
               ?P1.0 e a b (Val v) h l; l' = l(V |-> v) |]
            ==> ?P1.0 (V:=e) a b unit h l';
         !!e a b e' aa ba V.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (V:=e) a b (throw e') aa ba;
         !!e a b aa h l C fs F D v.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(h, l)\<rangle>;
               ?P1.0 e a b (addr aa) h l; h aa = \<lfloor>(C, fs)\<rfloor>;
               fs (F, D) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (Val v) h l;
         !!e a b aa ba F D.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (THROW NullPointer) aa ba;
         !!e a b e' aa ba F D.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (e\<bullet>F{D}) a b (throw e') aa ba;
         !!e\<^sub>1 a b aa ab ba e\<^sub>2 v h\<^sub>2 l\<^sub>2 C fs fs' F
            D h\<^sub>2'.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (addr aa) ab ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (ab, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 e\<^sub>2 ab ba (Val v) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, fs)\<rfloor>;
               fs' = fs((F, D) |-> v);
               h\<^sub>2' = h\<^sub>2(aa |-> (C, fs')) |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b unit
                 h\<^sub>2' l\<^sub>2;
         !!e\<^sub>1 a b aa ba e\<^sub>2 v ab bb F D.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b null aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (Val v) ab bb |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b
                 (THROW NullPointer) ab bb;
         !!e\<^sub>1 a b e' aa ba F D e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (throw e') aa ba |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b (throw e')
                 aa ba;
         !!e\<^sub>1 a b v aa ba e\<^sub>2 e' ab bb F D.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba (throw e') ab bb |]
            ==> ?P1.0 (e\<^sub>1\<bullet>F{D} := e\<^sub>2) a b (throw e')
                 ab bb;
         !!e a b e' aa ba M ps.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b (throw e') aa ba;
         !!e a b v aa ba es vs ex es' ab bb M.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e a b (Val v) aa ba;
               ?P \<turnstile> \<langle>es,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs @ throw ex # es',
                                (ab, bb)\<rangle>;
               ?P2.0 es aa ba (map Val vs @ throw ex # es') ab bb |]
            ==> ?P1.0 (e\<bullet>M(es)) a b (throw ex) ab bb;
         !!e a b aa ba ps vs ab bb M.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba;
               ?P \<turnstile> \<langle>ps,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,(ab, bb)\<rangle>;
               ?P2.0 ps aa ba (map Val vs) ab bb |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b (THROW NullPointer) ab bb;
         !!e a b aa ab ba ps vs h\<^sub>2 l\<^sub>2 C fs M Ts T pns body D
            l\<^sub>2' e' h\<^sub>3 l\<^sub>3.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e a b (addr aa) ab ba;
               ?P \<turnstile> \<langle>ps,(ab, ba)\<rangle> [\<Rightarrow>]
                               \<langle>map Val vs,
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, fs)\<rfloor>;
               ?P \<turnstile> C sees M: Ts\<rightarrow>T = (pns,
                       body) in D;
               length vs = length pns;
               l\<^sub>2' = [this |-> Addr aa, pns [|->] vs];
               ?P \<turnstile> \<langle>body,
                                (h\<^sub>2,
                                 l\<^sub>2')\<rangle> \<Rightarrow>
                               \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 body h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 (e\<bullet>M(ps)) a b e' h\<^sub>3 l\<^sub>2;
         !!e\<^sub>0 h\<^sub>0 l\<^sub>0 V e\<^sub>1 h\<^sub>1 l\<^sub>1 T.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (h\<^sub>0, l\<^sub>0
                                 (V := None))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>1,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>0 h\<^sub>0 (l\<^sub>0(V := None)) e\<^sub>1
                h\<^sub>1 l\<^sub>1 |]
            ==> ?P1.0 {V:T; e\<^sub>0} h\<^sub>0 l\<^sub>0 e\<^sub>1
                 h\<^sub>1 (l\<^sub>1(V := l\<^sub>0 V));
         !!e\<^sub>0 a b v aa ba e\<^sub>1 e\<^sub>2 ab bb.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>0 a b (Val v) aa ba;
               ?P \<turnstile> \<langle>e\<^sub>1,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>1 aa ba e\<^sub>2 ab bb |]
            ==> ?P1.0 (e\<^sub>0;; e\<^sub>1) a b e\<^sub>2 ab bb;
         !!e\<^sub>0 a b e aa ba e\<^sub>1.
            [| ?P \<turnstile> \<langle>e\<^sub>0,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>0 a b (throw e) aa ba |]
            ==> ?P1.0 (e\<^sub>0;; e\<^sub>1) a b (throw e) aa ba;
         !!e a b aa ba e\<^sub>1 e' ab bb e\<^sub>2.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>e\<^sub>1,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>1 aa ba e' ab bb |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!e a b aa ba e\<^sub>2 e' ab bb e\<^sub>1.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 e a b false aa ba;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (aa, ba)\<rangle> \<Rightarrow>
                               \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 e\<^sub>2 aa ba e' ab bb |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!e a b e' aa ba e\<^sub>1 e\<^sub>2.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (if (e) e\<^sub>1 else e\<^sub>2) a b (throw e') aa
                 ba;
         !!e a b aa ba c.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 e a b false aa ba |]
            ==> ?P1.0 (while (e) c) a b unit aa ba;
         !!e a b aa ba c v\<^sub>1 ab bb e\<^sub>3 ac bc.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(ab, bb)\<rangle>;
               ?P1.0 c aa ba (Val v\<^sub>1) ab bb;
               ?P \<turnstile> \<langle>while (e) c,
                                (ab, bb)\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>3,(ac, bc)\<rangle>;
               ?P1.0 (while (e) c) ab bb e\<^sub>3 ac bc |]
            ==> ?P1.0 (while (e) c) a b e\<^sub>3 ac bc;
         !!e a b e' aa ba c.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (while (e) c) a b (throw e') aa ba;
         !!e a b aa ba c e' ab bb.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 e a b true aa ba;
               ?P \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                               \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 c aa ba (throw e') ab bb |]
            ==> ?P1.0 (while (e) c) a b (throw e') ab bb;
         !!e a b aa ab ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>addr aa,(ab, ba)\<rangle>;
               ?P1.0 e a b (addr aa) ab ba |]
            ==> ?P1.0 (throw e) a b (Throw aa) ab ba;
         !!e a b aa ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 e a b null aa ba |]
            ==> ?P1.0 (throw e) a b (THROW NullPointer) aa ba;
         !!e a b e' aa ba.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P1.0 (throw e) a b (throw e') aa ba;
         !!e\<^sub>1 a b v\<^sub>1 aa ba C V e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Val v\<^sub>1) aa ba |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b
                 (Val v\<^sub>1) aa ba;
         !!e\<^sub>1 a b aa h\<^sub>1 l\<^sub>1 D fs C e\<^sub>2 V
            e\<^sub>2' h\<^sub>2 l\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Throw aa,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Throw aa) h\<^sub>1 l\<^sub>1;
               h\<^sub>1 aa = \<lfloor>(D, fs)\<rfloor>;
               ?P \<turnstile> D \<preceq>\<^sup>* C;
               ?P \<turnstile> \<langle>e\<^sub>2,
                                (h\<^sub>1, l\<^sub>1(V |->
                                 Addr aa))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>2',
                                (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 e\<^sub>2 h\<^sub>1 (l\<^sub>1(V |-> Addr aa))
                e\<^sub>2' h\<^sub>2 l\<^sub>2 |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b e\<^sub>2'
                 h\<^sub>2 (l\<^sub>2(V := l\<^sub>1 V));
         !!e\<^sub>1 a b aa h\<^sub>1 l\<^sub>1 D fs C V e\<^sub>2.
            [| ?P \<turnstile> \<langle>e\<^sub>1,
                                (a, b)\<rangle> \<Rightarrow>
                               \<langle>Throw aa,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 e\<^sub>1 a b (Throw aa) h\<^sub>1 l\<^sub>1;
               h\<^sub>1 aa = \<lfloor>(D, fs)\<rfloor>;
               (D, C) ~: (subcls1 ?P)^* |]
            ==> ?P1.0 (try e\<^sub>1 catch(C V) e\<^sub>2) a b (Throw aa)
                 h\<^sub>1 l\<^sub>1;
         !!a b. ?P2.0 [] a b [] a b;
         !!e a b v aa ba es es' ab bb.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 e a b (Val v) aa ba;
               ?P \<turnstile> \<langle>es,(aa, ba)\<rangle> [\<Rightarrow>]
                               \<langle>es',(ab, bb)\<rangle>;
               ?P2.0 es aa ba es' ab bb |]
            ==> ?P2.0 (e # es) a b (Val v # es') ab bb;
         !!e a b e' aa ba es.
            [| ?P \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                               \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 e a b (throw e') aa ba |]
            ==> ?P2.0 (e # es) a b (throw e' # es) aa ba |]
      ==> (?P \<turnstile> \<langle>?x1a,(?x2a, ?x2b)\<rangle> \<Rightarrow>
                           \<langle>?x3a,(?x4a, ?x4b)\<rangle> -->
           ?P1.0 ?x1a ?x2a ?x2b ?x3a ?x4a ?x4b) &
          (?P \<turnstile> \<langle>?x5a,
                            (?x6a, ?x6b)\<rangle> [\<Rightarrow>]
                           \<langle>?x7a,(?x8a, ?x8b)\<rangle> -->
           ?P2.0 ?x5a ?x6a ?x6b ?x7a ?x8a ?x8b)",
     template_implication
      ([template_predicate (template_app (template_hole 81, t_empty)),
        template_predicate (template_app (template_hole 81, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 46, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 77, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 81, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 57, template_var 14),
                           template_var 11),
                         template_app
                          (template_app (template_hole 56, template_var 10),
                           template_var 9)),
                       template_var 8),
                     template_app
                      (template_app (template_hole 56, template_var 7),
                       template_var 6))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_var 13, template_var 11),
                           template_var 10),
                         template_var 9),
                       template_var 8),
                     template_var 7),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 25, template_var 14),
                         template_var 5),
                       template_app
                        (template_app (template_hole 56, template_var 4),
                         template_var 3)),
                     template_var 2),
                   template_app
                    (template_app (template_hole 56, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_var 12, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.BigStepMoreTemplates"
### 1.175s elapsed time, 1.328s cpu time, 0.044s GC time
val it = (): unit
