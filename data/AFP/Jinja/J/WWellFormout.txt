Loading theory "Draft.Auxiliary" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl" via "Draft.Type")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Auxiliary"
### 0.105s elapsed time, 0.449s cpu time, 0.000s GC time
Loading theory "Draft.Type" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.TypeRel" via "Draft.Decl")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.167s elapsed time, 0.685s cpu time, 0.047s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.TypeRel")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.308s elapsed time, 1.241s cpu time, 0.047s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.391s elapsed time, 1.560s cpu time, 0.172s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Type"
### 0.518s elapsed time, 2.034s cpu time, 0.291s GC time
Loading theory "Draft.Decl" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.TypeRel")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.461s elapsed time, 1.813s cpu time, 0.244s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Decl"
### 0.059s elapsed time, 0.237s cpu time, 0.000s GC time
Loading theory "Draft.TypeRel" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "widen"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Proofs for inductive predicate(s) "Fields"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### Introduced fixed type variable(s): 'a in "y"
### Introduced fixed type variable(s): 'a in "z"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.210s elapsed time, 4.623s cpu time, 0.998s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.103s elapsed time, 4.090s cpu time, 0.920s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.TypeRel"
### 1.442s elapsed time, 4.706s cpu time, 0.987s GC time
Loading theory "Draft.Value" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions" via "Draft.Objects")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "Draft.Value"
### 0.420s elapsed time, 0.909s cpu time, 0.137s GC time
Loading theory "Draft.Objects" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.SystemClasses" via "Draft.Exceptions")
consts
  typeof_h ::
    "(nat => (char list * (char list * char list => val option)) option)
     => val => ty option"
### theory "HOL-Library.Tree"
### 2.348s elapsed time, 7.312s cpu time, 1.368s GC time
Loading theory "Draft.Templates" (required by "Draft.WWellFormMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Objects"
### 0.126s elapsed time, 0.251s cpu time, 0.000s GC time
Loading theory "Draft.Exceptions" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm" via "Draft.SystemClasses")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.087s elapsed time, 0.203s cpu time, 0.079s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.WWellFormMoreTemplates")
### theory "Draft.Exceptions"
### 0.123s elapsed time, 0.281s cpu time, 0.079s GC time
Loading theory "Draft.Expr" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm")
Loading theory "Draft.SystemClasses" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm" via "Draft.WellForm")
### theory "Draft.SystemClasses"
### 0.050s elapsed time, 0.151s cpu time, 0.000s GC time
Loading theory "Draft.WellForm" (required by "Draft.WWellFormMoreTemplates" via "Draft.WWellForm")
### theory "Draft.WellForm"
### 0.255s elapsed time, 0.765s cpu time, 0.077s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.649s elapsed time, 1.656s cpu time, 0.180s GC time
Found termination order: "{}"
### Ambiguous input (line 81 of "$AFP/Jinja/J/Expr.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_Update" ("_position" fv)
###       ("_updbind"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.exp.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" D) ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.exp.LAss"
###         ("\<^const>Expr.exp.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" D))
###         ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  fv :: "char list exp => char list set"
  fvs :: "char list exp list => char list set"
### theory "Draft.Expr"
### 3.843s elapsed time, 5.711s cpu time, 1.439s GC time
Loading theory "Draft.WWellForm" (required by "Draft.WWellFormMoreTemplates")
### theory "Draft.WWellForm"
### 0.462s elapsed time, 1.168s cpu time, 0.996s GC time
Loading theory "Draft.WWellFormMoreTemplates"
val templateLemmas =
   [("WWellForm.wwf_J_mdecl",
     "wwf_J_mdecl ?P ?C (?M, ?Ts, ?T, ?pns, ?body) =
      (length ?Ts = length ?pns &
       distinct ?pns & this ~: set ?pns & fv ?body <= {this} Un set ?pns)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 6),
                template_var 5),
              template_app
               (template_app (template_hole 17, template_var 4),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_app
                   (template_app (template_hole 15, template_var 2),
                    template_app
                     (template_app (template_hole 14, template_var 1),
                      template_var 0)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_var 3)),
                 template_app (template_hole 10, template_var 1))),
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 9, template_var 1)),
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 1)))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_hole 6),
                         template_hole 0)),
                     template_app (template_hole 5, template_var 1))))))
           )))]:
   (string * thm * template) list
### theory "Draft.WWellFormMoreTemplates"
### 0.482s elapsed time, 0.647s cpu time, 0.034s GC time
val it = (): unit
