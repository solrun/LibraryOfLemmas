   [("WellTypeRT.WT_implies_WTrt",
     "?P,?E \<turnstile> ?e :: ?T ==> ?P,?E,?h \<turnstile> ?e : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTs_implies_WTrts",
     "?P,?E \<turnstile> ?es [::] ?Ts ==>
      ?P,?E,?h \<turnstile> ?es [:] ?Ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTrts_same_length",
     "?P,?E,?h \<turnstile> ?es [:] ?Ts ==> length ?es = length ?Ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("WellTypeRT.WTrts_Val",
     "(?P,?E,?h \<turnstile> map Val ?vs [:] ?Ts) =
      (map typeof\<^bsub>?h\<^esub> ?vs = map Some ?Ts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 3)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("WellTypeRT.WTrt_env_mono",
     "[| ?P,?E,?h \<turnstile> ?e : ?T; ?E \<subseteq>\<^sub>m ?E' |]
      ==> ?P,?E',?h \<turnstile> ?e : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTrt_hext_mono",
     "[| ?P,?E,?h \<turnstile> ?e : ?T; ?h \<unlhd> ?h' |]
      ==> ?P,?E,?h' \<turnstile> ?e : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTrts_hext_mono",
     "[| ?P,?E,?h \<turnstile> ?es [:] ?Ts; ?h \<unlhd> ?h' |]
      ==> ?P,?E,?h' \<turnstile> ?es [:] ?Ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> new ?C : ?T;
         [| ?T = Class ?C; is_class ?P ?C |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> throw ?e : ?T;
         !!T\<^sub>r.
            [| ?P,?E,?h \<turnstile> ?e : T\<^sub>r; is_refT T\<^sub>r |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> while (?e) ?c : ?T;
         !!T. [| ?T = Void; ?P,?E,?h \<turnstile> ?e : Boolean;
                 ?P,?E,?h \<turnstile> ?c : T |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> Cast ?D ?e : ?T;
         !!T. [| ?T = Class ?D; ?P,?E,?h \<turnstile> ?e : T; is_refT T;
                 is_class ?P ?D |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?v:=?e : ?T;
         !!T T'.
            [| ?T = Void; ?E ?v = \<lfloor>T\<rfloor>;
               ?P,?E,?h \<turnstile> ?e : T'; ?P \<turnstile> T' \<le> T |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> try ?e\<^sub>1 catch(?C ?V) ?e\<^sub>2 : ?T;
         !!T\<^sub>1.
            [| ?P,?E,?h \<turnstile> ?e\<^sub>1 : T\<^sub>1;
               ?P,?E(?V |-> Class ?C),?h \<turnstile> ?e\<^sub>2 : ?T;
               ?P \<turnstile> T\<^sub>1 \<le> ?T |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<bullet>?F{?D} : ?T;
         !!C. [| ?P,?E,?h \<turnstile> ?e : Class C;
                 ?P \<turnstile> C has ?F:?T in ?D |]
              ==> ?Pa;
         ?P,?E,?h \<turnstile> ?e : NT ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_hole 0)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> if (?e) ?e\<^sub>1 else ?e\<^sub>2 : ?T;
         !!T\<^sub>1 T\<^sub>2.
            [| ?P,?E,?h \<turnstile> ?e : Boolean;
               ?P,?E,?h \<turnstile> ?e\<^sub>1 : T\<^sub>1;
               ?P,?E,?h \<turnstile> ?e\<^sub>2 : T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 --> ?T = T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1 -->
               ?T = T\<^sub>1 |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<^sub>1 \<guillemotleft>?bop\<guillemotright> ?e\<^sub>2 : ?T;
         !!T\<^sub>1 T\<^sub>2.
            [| ?bop = Eq; ?T = Boolean;
               ?P,?E,?h \<turnstile> ?e\<^sub>1 : T\<^sub>1;
               ?P,?E,?h \<turnstile> ?e\<^sub>2 : T\<^sub>2 |]
            ==> ?Pa;
         [| ?bop = Add; ?T = Integer;
            ?P,?E,?h \<turnstile> ?e\<^sub>1 : Integer;
            ?P,?E,?h \<turnstile> ?e\<^sub>2 : Integer |]
         ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 1)],
          template_implication
           ([template_equation (template_var 1, template_hole 0)],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 8, template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 4),
                     template_hole 0)
                   )],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 8, template_var 7),
                             template_var 6),
                           template_var 5),
                         template_var 2),
                       template_hole 0)
                     )],
                template_predicate (template_var 0)))))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<bullet>?F{?D} := ?v : ?T;
         !!C T T\<^sub>2.
            [| ?T = Void; ?P,?E,?h \<turnstile> ?e : Class C;
               ?P \<turnstile> C has ?F:T in ?D;
               ?P,?E,?h \<turnstile> ?v : T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T |]
            ==> ?Pa;
         !!T\<^sub>2.
            [| ?T = Void; ?P,?E,?h \<turnstile> ?e : NT;
               ?P,?E,?h \<turnstile> ?v : T\<^sub>2 |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<bullet>?M {?D}(?es) : ?T;
         !!C Ts pns body D Ts'.
            [| ?P,?E,?h \<turnstile> ?e : Class C;
               ?P \<turnstile> C sees ?M
 {?D}: Ts\<rightarrow>?T = (pns, body) in D;
               ?P,?E,?h \<turnstile> ?es [:] Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?Pa;
         !!Ts. [| ?P,?E,?h \<turnstile> ?e : NT;
                  ?P,?E,?h \<turnstile> ?es [:] Ts |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 5),
                    template_app
                     (template_var 4,
                      template_app
                       (template_app (template_hole 12, template_var 3),
                        template_hole 11))),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_inducts",
     "[| ?P,?x1a,?h \<turnstile> ?x2a : ?x3a;
         !!C E. is_class ?P C ==> ?P1.0 E (new C) (Class C);
         !!E e T C.
            [| ?P,E,?h \<turnstile> e : T; ?P1.0 E e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E (Cast C e) (Class C);
         !!v T E.
            typeof\<^bsub>?h\<^esub> v = \<lfloor>T\<rfloor> ==>
            ?P1.0 E (Val v) T;
         !!E V T. E V = \<lfloor>T\<rfloor> ==> ?P1.0 E (Var V) T;
         !!E e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>Eq\<guillemotright> e\<^sub>2)
                 Boolean;
         !!E e\<^sub>1 e\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : Integer;
               ?P1.0 E e\<^sub>1 Integer;
               ?P,E,?h \<turnstile> e\<^sub>2 : Integer;
               ?P1.0 E e\<^sub>2 Integer |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>Add\<guillemotright> e\<^sub>2)
                 Integer;
         !!E V T e T'.
            [| E V = \<lfloor>T\<rfloor>; ?P,E,?h \<turnstile> e : T';
               ?P1.0 E e T'; ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E (V:=e) Void;
         !!E e C F T D.
            [| ?P,E,?h \<turnstile> e : Class C; ?P1.0 E e (Class C);
               ?P \<turnstile> C has F:T in D |]
            ==> ?P1.0 E (e\<bullet>F{D}) T;
         !!E e F D T.
            [| ?P,E,?h \<turnstile> e : NT; ?P1.0 E e NT |]
            ==> ?P1.0 E (e\<bullet>F{D}) T;
         !!E e\<^sub>1 C F T D e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : Class C;
               ?P1.0 E e\<^sub>1 (Class C); ?P \<turnstile> C has F:T in D;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{D} := e\<^sub>2) Void;
         !!E e\<^sub>1 e\<^sub>2 T\<^sub>2 F D.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : NT; ?P1.0 E e\<^sub>1 NT;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{D} := e\<^sub>2) Void;
         !!E e C M Ts T pns body D es Ts'.
            [| ?P,E,?h \<turnstile> e : Class C; ?P1.0 E e (Class C);
               ?P \<turnstile> C sees M: Ts\<rightarrow>T = (pns,
                       body) in D;
               ?P,E,?h \<turnstile> es [:] Ts'; ?P2.0 E es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E (e\<bullet>M(es)) T;
         !!E e es Ts M T.
            [| ?P,E,?h \<turnstile> e : NT; ?P1.0 E e NT;
               ?P,E,?h \<turnstile> es [:] Ts; ?P2.0 E es Ts |]
            ==> ?P1.0 E (e\<bullet>M(es)) T;
         !!E V T e T'.
            [| ?P,E(V |-> T),?h \<turnstile> e : T';
               ?P1.0 (E(V |-> T)) e T' |]
            ==> ?P1.0 E {V:T; e} T';
         !!E e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E (e\<^sub>1;; e\<^sub>2) T\<^sub>2;
         !!E e e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2 T.
            [| ?P,E,?h \<turnstile> e : Boolean; ?P1.0 E e Boolean;
               ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 --> T = T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1 -->
               T = T\<^sub>1 |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) T;
         !!E e c T.
            [| ?P,E,?h \<turnstile> e : Boolean; ?P1.0 E e Boolean;
               ?P,E,?h \<turnstile> c : T; ?P1.0 E c T |]
            ==> ?P1.0 E (while (e) c) Void;
         !!E e T\<^sub>r T.
            [| ?P,E,?h \<turnstile> e : T\<^sub>r; ?P1.0 E e T\<^sub>r;
               is_refT T\<^sub>r |]
            ==> ?P1.0 E (throw e) T;
         !!E e\<^sub>1 T\<^sub>1 V C e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E(V |-> Class C),?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 (E(V |-> Class C)) e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |]
            ==> ?P1.0 E (try e\<^sub>1 catch(C V) e\<^sub>2) T\<^sub>2;
         !!E. ?P2.0 E [] [];
         !!E e T es Ts.
            [| ?P,E,?h \<turnstile> e : T; ?P1.0 E e T;
               ?P,E,?h \<turnstile> es [:] Ts; ?P2.0 E es Ts |]
            ==> ?P2.0 E (e # es) (T # Ts) |]
      ==> ?P1.0 ?x1a ?x2a ?x3a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 49, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 48, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 39, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 1, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("WellTypeRT.WTrt_inducts",
     "[| ?P,?x4a,?h \<turnstile> ?x5a [:] ?x6a;
         !!C E. is_class ?P C ==> ?P1.0 E (new C) (Class C);
         !!E e T C.
            [| ?P,E,?h \<turnstile> e : T; ?P1.0 E e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E (Cast C e) (Class C);
         !!v T E.
            typeof\<^bsub>?h\<^esub> v = \<lfloor>T\<rfloor> ==>
            ?P1.0 E (Val v) T;
         !!E V T. E V = \<lfloor>T\<rfloor> ==> ?P1.0 E (Var V) T;
         !!E e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>Eq\<guillemotright> e\<^sub>2)
                 Boolean;
         !!E e\<^sub>1 e\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : Integer;
               ?P1.0 E e\<^sub>1 Integer;
               ?P,E,?h \<turnstile> e\<^sub>2 : Integer;
               ?P1.0 E e\<^sub>2 Integer |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>Add\<guillemotright> e\<^sub>2)
                 Integer;
         !!E V T e T'.
            [| E V = \<lfloor>T\<rfloor>; ?P,E,?h \<turnstile> e : T';
               ?P1.0 E e T'; ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E (V:=e) Void;
         !!E e C F T D.
            [| ?P,E,?h \<turnstile> e : Class C; ?P1.0 E e (Class C);
               ?P \<turnstile> C has F:T in D |]
            ==> ?P1.0 E (e\<bullet>F{D}) T;
         !!E e F D T.
            [| ?P,E,?h \<turnstile> e : NT; ?P1.0 E e NT |]
            ==> ?P1.0 E (e\<bullet>F{D}) T;
         !!E e\<^sub>1 C F T D e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : Class C;
               ?P1.0 E e\<^sub>1 (Class C); ?P \<turnstile> C has F:T in D;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{D} := e\<^sub>2) Void;
         !!E e\<^sub>1 e\<^sub>2 T\<^sub>2 F D.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : NT; ?P1.0 E e\<^sub>1 NT;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{D} := e\<^sub>2) Void;
         !!E e C M Ts T pns body D es Ts'.
            [| ?P,E,?h \<turnstile> e : Class C; ?P1.0 E e (Class C);
               ?P \<turnstile> C sees M: Ts\<rightarrow>T = (pns,
                       body) in D;
               ?P,E,?h \<turnstile> es [:] Ts'; ?P2.0 E es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E (e\<bullet>M(es)) T;
         !!E e es Ts M T.
            [| ?P,E,?h \<turnstile> e : NT; ?P1.0 E e NT;
               ?P,E,?h \<turnstile> es [:] Ts; ?P2.0 E es Ts |]
            ==> ?P1.0 E (e\<bullet>M(es)) T;
         !!E V T e T'.
            [| ?P,E(V |-> T),?h \<turnstile> e : T';
               ?P1.0 (E(V |-> T)) e T' |]
            ==> ?P1.0 E {V:T; e} T';
         !!E e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E (e\<^sub>1;; e\<^sub>2) T\<^sub>2;
         !!E e e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2 T.
            [| ?P,E,?h \<turnstile> e : Boolean; ?P1.0 E e Boolean;
               ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 --> T = T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1 -->
               T = T\<^sub>1 |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) T;
         !!E e c T.
            [| ?P,E,?h \<turnstile> e : Boolean; ?P1.0 E e Boolean;
               ?P,E,?h \<turnstile> c : T; ?P1.0 E c T |]
            ==> ?P1.0 E (while (e) c) Void;
         !!E e T\<^sub>r T.
            [| ?P,E,?h \<turnstile> e : T\<^sub>r; ?P1.0 E e T\<^sub>r;
               is_refT T\<^sub>r |]
            ==> ?P1.0 E (throw e) T;
         !!E e\<^sub>1 T\<^sub>1 V C e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E(V |-> Class C),?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 (E(V |-> Class C)) e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |]
            ==> ?P1.0 E (try e\<^sub>1 catch(C V) e\<^sub>2) T\<^sub>2;
         !!E. ?P2.0 E [] [];
         !!E e T es Ts.
            [| ?P,E,?h \<turnstile> e : T; ?P1.0 E e T;
               ?P,E,?h \<turnstile> es [:] Ts; ?P2.0 E es Ts |]
            ==> ?P2.0 E (e # es) (T # Ts) |]
      ==> ?P2.0 ?x4a ?x5a ?x6a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 49, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 48, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 38, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 47, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("WellTypeRT.WTrt_induct",
     "[| !!C E. is_class ?P C ==> ?P1.0 E (new C) (Class C);
         !!E e T C.
            [| ?P,E,?h \<turnstile> e : T; ?P1.0 E e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E (Cast C e) (Class C);
         !!v T E.
            typeof\<^bsub>?h\<^esub> v = \<lfloor>T\<rfloor> ==>
            ?P1.0 E (Val v) T;
         !!E V T. E V = \<lfloor>T\<rfloor> ==> ?P1.0 E (Var V) T;
         !!E e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>Eq\<guillemotright> e\<^sub>2)
                 Boolean;
         !!E e\<^sub>1 e\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : Integer;
               ?P1.0 E e\<^sub>1 Integer;
               ?P,E,?h \<turnstile> e\<^sub>2 : Integer;
               ?P1.0 E e\<^sub>2 Integer |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>Add\<guillemotright> e\<^sub>2)
                 Integer;
         !!E V T e T'.
            [| E V = \<lfloor>T\<rfloor>; ?P,E,?h \<turnstile> e : T';
               ?P1.0 E e T'; ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E (V:=e) Void;
         !!E e C F T D.
            [| ?P,E,?h \<turnstile> e : Class C; ?P1.0 E e (Class C);
               ?P \<turnstile> C has F:T in D |]
            ==> ?P1.0 E (e\<bullet>F{D}) T;
         !!E e F D T.
            [| ?P,E,?h \<turnstile> e : NT; ?P1.0 E e NT |]
            ==> ?P1.0 E (e\<bullet>F{D}) T;
         !!E e\<^sub>1 C F T D e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : Class C;
               ?P1.0 E e\<^sub>1 (Class C); ?P \<turnstile> C has F:T in D;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{D} := e\<^sub>2) Void;
         !!E e\<^sub>1 e\<^sub>2 T\<^sub>2 F D.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : NT; ?P1.0 E e\<^sub>1 NT;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{D} := e\<^sub>2) Void;
         !!E e C M Ts T pns body D es Ts'.
            [| ?P,E,?h \<turnstile> e : Class C; ?P1.0 E e (Class C);
               ?P \<turnstile> C sees M: Ts\<rightarrow>T = (pns,
                       body) in D;
               ?P,E,?h \<turnstile> es [:] Ts'; ?P2.0 E es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E (e\<bullet>M(es)) T;
         !!E e es Ts M T.
            [| ?P,E,?h \<turnstile> e : NT; ?P1.0 E e NT;
               ?P,E,?h \<turnstile> es [:] Ts; ?P2.0 E es Ts |]
            ==> ?P1.0 E (e\<bullet>M(es)) T;
         !!E V T e T'.
            [| ?P,E(V |-> T),?h \<turnstile> e : T';
               ?P1.0 (E(V |-> T)) e T' |]
            ==> ?P1.0 E {V:T; e} T';
         !!E e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E (e\<^sub>1;; e\<^sub>2) T\<^sub>2;
         !!E e e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2 T.
            [| ?P,E,?h \<turnstile> e : Boolean; ?P1.0 E e Boolean;
               ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E,?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 --> T = T\<^sub>2;
               ?P \<turnstile> T\<^sub>2 \<le> T\<^sub>1 -->
               T = T\<^sub>1 |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) T;
         !!E e c T.
            [| ?P,E,?h \<turnstile> e : Boolean; ?P1.0 E e Boolean;
               ?P,E,?h \<turnstile> c : T; ?P1.0 E c T |]
            ==> ?P1.0 E (while (e) c) Void;
         !!E e T\<^sub>r T.
            [| ?P,E,?h \<turnstile> e : T\<^sub>r; ?P1.0 E e T\<^sub>r;
               is_refT T\<^sub>r |]
            ==> ?P1.0 E (throw e) T;
         !!E e\<^sub>1 T\<^sub>1 V C e\<^sub>2 T\<^sub>2.
            [| ?P,E,?h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E e\<^sub>1 T\<^sub>1;
               ?P,E(V |-> Class C),?h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 (E(V |-> Class C)) e\<^sub>2 T\<^sub>2;
               ?P \<turnstile> T\<^sub>1 \<le> T\<^sub>2 |]
            ==> ?P1.0 E (try e\<^sub>1 catch(C V) e\<^sub>2) T\<^sub>2;
         !!E. ?P2.0 E [] [];
         !!E e T es Ts.
            [| ?P,E,?h \<turnstile> e : T; ?P1.0 E e T;
               ?P,E,?h \<turnstile> es [:] Ts; ?P2.0 E es Ts |]
            ==> ?P2.0 E (e # es) (T # Ts) |]
      ==> (?P,?x1a,?h \<turnstile> ?x2a : ?x3a --> ?P1.0 ?x1a ?x2a ?x3a) &
          (?P,?x4a,?h \<turnstile> ?x5a [:] ?x6a --> ?P2.0 ?x4a ?x5a ?x6a)",
     template_implication
      ([template_predicate (template_app (template_hole 51, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 40, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 43, template_var 9),
                           template_var 7),
                         template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app (template_var 8, template_var 5),
                     template_var 4),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 17, template_var 9),
                         template_var 7),
                       template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_var 6, template_var 2),
                   template_var 1),
                 template_var 0)))
           )))]
