Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Tree" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.115s elapsed time, 0.475s cpu time, 0.046s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.SemilatticesMoreTemplates" via "Draft.Semilattices" via "Draft.Err" via "Draft.Semilat")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.195s elapsed time, 0.796s cpu time, 0.046s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Nat_Bijection"
### 0.369s elapsed time, 1.471s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.While_Combinator"
### 0.397s elapsed time, 1.562s cpu time, 0.154s GC time
Loading theory "Draft.Semilat" (required by "Draft.SemilatticesMoreTemplates" via "Draft.Semilattices" via "Draft.Err")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
locale Semilat
  fixes A :: "'a set"
    and r :: "'a => 'a => bool"
    and f :: "'a => 'a => 'a"
  assumes "Semilat A r f"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
### theory "Draft.Semilat"
### 0.304s elapsed time, 1.196s cpu time, 0.137s GC time
Loading theory "Draft.Err" (required by "Draft.SemilatticesMoreTemplates" via "Draft.Semilattices")
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.994s elapsed time, 3.747s cpu time, 0.822s GC time
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### No equation for constructor "Err"
consts
  ok_val :: "'a err => 'a"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.118s elapsed time, 3.982s cpu time, 0.855s GC time
consts
  strict :: "('a => 'b err) => 'a err => 'b err"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Err"
### 0.809s elapsed time, 2.498s cpu time, 0.643s GC time
Loading theory "Draft.Listn" (required by "Draft.SemilatticesMoreTemplates" via "Draft.Semilattices")
Loading theory "Draft.Opt" (required by "Draft.SemilatticesMoreTemplates" via "Draft.Semilattices")
Loading theory "Draft.Product" (required by "Draft.SemilatticesMoreTemplates" via "Draft.Semilattices")
Found termination order: "size <*mlex*> {}"
consts
  coalesce :: "'a err list => 'a list err"
### theory "Draft.Opt"
### 0.133s elapsed time, 0.524s cpu time, 0.073s GC time
### theory "Draft.Product"
### 0.137s elapsed time, 0.539s cpu time, 0.073s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Listn"
### 0.325s elapsed time, 0.940s cpu time, 0.150s GC time
Loading theory "Draft.Semilattices" (required by "Draft.SemilatticesMoreTemplates")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.162s elapsed time, 7.149s cpu time, 1.170s GC time
Loading theory "Draft.Templates" (required by "Draft.SemilatticesMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Semilattices"
### 0.237s elapsed time, 0.509s cpu time, 0.041s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.117s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SemilatticesMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.470s elapsed time, 0.520s cpu time, 0.059s GC time
Loading theory "Draft.SemilatticesMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.SemilatticesMoreTemplates"
### 0.298s elapsed time, 0.392s cpu time, 0.000s GC time
val it = (): unit
