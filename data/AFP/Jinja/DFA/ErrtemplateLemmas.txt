   [("Err.top_Err", "Semilat.top (le ?r) Err",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Err.Err_in_err", "Err : err ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Err.le_Err", "?e <=_(le ?r) Err",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Err.not_Err_less", "~ Err <_(le ?r) ?x",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1)),
               template_var 0)
             )
         )),
    ("Err.Err_lift2", "Err +_(lift2 ?f) ?x = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("Err.Err_sup_Err", "Err +_(Err.sup ?f) ?x = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("Err.lift2_Err", "?x +_(lift2 ?f) Err = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Err.Err_sup_Err2", "?x +_(Err.sup ?f) Err = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Err.acc_err", "acc ?r ==> acc (le ?r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Err.err_semilat_eslI", "semilat ?L ==> err_semilat (esl ?L)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Err.Err_le_conv", "(Err <=_(le ?r) ?e) = (?e = Err)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 2))),
    ("Err.order_le_err", "order (le ?r) (err ?A) = order ?r ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Err.Ok_in_err", "(OK ?x : err ?A) = (?x : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Err.unfold_lesub_err", "(?e1.0 <=_(le ?r) ?e2.0) = le ?r ?e1.0 ?e2.0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Err.not_Err_eq", "(?x ~= Err) = (EX a. ?x = OK a)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Err.not_OK_eq", "(ALL y. ?x ~= OK y) = (?x = Err)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Err.OK_lift2_OK", "OK ?x +_(lift2 ?f) OK ?y = ?x +_?f ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Err.OK_le_err_OK", "(OK ?x <=_(le ?r) OK ?y) = (?x <=_?r ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Err.Err_sup_OK", "OK ?x +_(Err.sup ?f) OK ?y = OK (?x +_?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Err.le_err_refl", "ALL x. x <=_?r x ==> ?e <=_(le ?r) ?e",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Err.Err_sup_eq_Err",
     "(Err.sup ?f ?ex ?ey = Err) = (?ex = Err | ?ey = Err)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Err.err_semilat_eslI_aux",
     "Semilat ?A ?r ?f ==> err_semilat (esl (?A, ?r, ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))))
           ))),
    ("Err.le_OK_conv",
     "(?e <=_(le ?r) OK ?x) = (EX y. ?e = OK y & y <=_?r ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Err.strict_Some",
     "(strict ?f ?x = OK ?y) = (EX z. ?x = OK z & ?f z = OK ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Err.all_bex_swap_lemma",
     "(ALL x. (EX y:?A. x = ?f y) --> ?P x) = (ALL y:?A. ?P (?f y))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Err.semilat_errI",
     "Semilat ?A ?r ?f ==>
      semilat (err ?A, le ?r, lift2 (%x y. OK (?f x y)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, t_empty))))
           ))),
    ("Err.le_err_refl'",
     "[| ALL x:?A. x <=_?r x; ?e : err ?A |] ==> ?e <=_(le ?r) ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Err.OK_less_conv",
     "(OK ?x <_(le ?r) ?e) = (?e = Err | (EX y. ?e = OK y & ?x <_?r y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 2)),
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Err.OK_le_conv",
     "(OK ?x <=_(le ?r) ?e) = (?e = Err | (EX y. ?e = OK y & ?x <=_?r y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 2)),
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Err.semilat_le_err_Err_plus",
     "[| ?x : err ?A; semilat (err ?A, le ?r, ?f) |] ==> Err +_?f ?x = Err",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 7, template_var 2)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 3),
         template_hole 0))),
    ("Err.semilat_le_err_plus_Err",
     "[| ?x : err ?A; semilat (err ?A, le ?r, ?f) |] ==> ?x +_?f Err = Err",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 7, template_var 2)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0),
           template_hole 0),
         template_hole 0))),
    ("Err.eq_order_le",
     "[| ?x = ?y; order ?r ?A; ?x : ?A; ?y : ?A |] ==> ?x <=_?r ?y",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 2)
           ))),
    ("Err.Err_sup_eq_OK_conv",
     "(Err.sup ?f ?ex ?ey = OK ?z) =
      (EX x y. ?ex = OK x & ?ey = OK y & ?f x y = ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 8, template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Err.lift_in_errI",
     "[| ?e : err ?S; ALL x:?S. ?e = OK x --> ?f x : err ?S |]
      ==> lift ?f ?e : err ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app (template_hole 5, template_var 1))
           ))),
    ("Err.semilat_le_err_OK1",
     "[| ?x : ?A; ?y : ?A; semilat (err ?A, le ?r, ?f);
         OK ?x +_?f OK ?y = OK ?z |]
      ==> ?x <=_?r ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 4)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)),
                  template_var 1)))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 5)),
              template_var 1),
            template_app (template_hole 1, template_var 3)),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0)
           ))),
    ("Err.semilat_le_err_OK2",
     "[| ?x : ?A; ?y : ?A; semilat (err ?A, le ?r, ?f);
         OK ?x +_?f OK ?y = OK ?z |]
      ==> ?y <=_?r ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 4)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)),
                  template_var 1)))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 5)),
              template_var 1),
            template_app (template_hole 1, template_var 3)),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Err.le_err_antisym",
     "[| order ?r ?A; ?e1.0 : err ?A; ?e2.0 : err ?A; ?e3.0 : err ?A;
         ?e1.0 <=_(le ?r) ?e2.0; ?e2.0 <=_(le ?r) ?e1.0 |]
      ==> ?e1.0 = ?e2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 4)),
              template_var 2)
            )],
       template_equation (template_var 2, template_var 1))),
    ("Err.OK_plus_OK_eq_Err_conv",
     "[| ?x : ?A; ?y : ?A; semilat (err ?A, le ?r, ?fe) |]
      ==> (OK ?x +_?fe OK ?y = Err) =
          (~ (EX z:?A. ?x <=_?r z & ?y <=_?r z))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 4)),
                 template_var 0),
               template_app (template_hole 5, template_var 2))),
           template_hole 4),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3), t_empty))))),
    ("Err.le_err_trans",
     "[| order ?r ?A; ?e1.0 : err ?A; ?e2.0 : err ?A; ?e3.0 : err ?A;
         ?e1.0 <=_(le ?r) ?e2.0; ?e2.0 <=_(le ?r) ?e3.0 |]
      ==> ?e1.0 <=_(le ?r) ?e3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, template_var 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_app (template_hole 0, template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 4)),
             template_var 0)
           ))),
    ("Err.err_semilat_UnionI_auxi",
     "[| ALL A:?AS. order ?r A;
         ALL A:?AS.
            ALL B:?AS.
               A ~= B -->
               (ALL a:A. ALL b:B. ~ a <=_?r b & a +_?f b = Err) |]
      ==> order ?r (\<Union> ?AS)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Err.closed_err_Union_lift2I",
     "[| ALL A:?AS. Semilat.closed (err A) (lift2 ?f); ?AS ~= {};
         ALL A:?AS.
            ALL B:?AS. A ~= B --> (ALL a:A. ALL b:B. a +_?f b = Err) |]
      ==> Semilat.closed (err (\<Union> ?AS)) (lift2 ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1), t_empty)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 10, template_var 0))
           ))),
    ("Err.err_semilat_UnionI",
     "[| ALL A:?AS. err_semilat (A, ?r, ?f); ?AS ~= {};
         ALL A:?AS.
            ALL B:?AS.
               A ~= B -->
               (ALL a:A. ALL b:B. ~ a <=_?r b & a +_?f b = Err) |]
      ==> err_semilat (\<Union> ?AS, ?r, ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2), t_empty)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app (template_hole 0, template_var 2)),
                 template_app
                  (template_app (template_hole 12, template_var 1),
                   template_var 0))))
           )))]
