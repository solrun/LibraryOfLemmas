   [("Listn.list_0", "list 0 ?A = {[]}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Listn.Cons_notle_Nil", "~ ?x # ?xs [<=?r] []",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1)),
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)
             )
         )),
    ("Listn.lem", "?x +_(#) ?xs = ?x # ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Listn.Listn_sl", "semilat ?L ==> semilat (Listn.sl ?n ?L)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Listn.Nil_le_conv", "([] [<=?r] ?ys) = (?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 2))),
    ("Listn.unfold_lesub_list", "(?xs [<=?r] ?ys) = Listn.le ?r ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Listn.err_semilat_upto_esl",
     "err_semilat ?L ==> err_semilat (upto_esl ?m ?L)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Listn.order_listI",
     "order ?r ?A ==> order (Listn.le ?r) (list ?n ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Listn.listE_length", "?xs : list ?n ?A ==> length ?xs = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Listn.listE_set", "?xs : list ?n ?A ==> set ?xs <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 2),
         template_var 0))),
    ("Listn.list_replicateI", "?x : ?A ==> replicate ?n ?x : list ?n ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Listn.lesssub_lengthD", "?xs [<?r] ?ys ==> length ?ys = length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Listn.lesub_list_impl_same_size",
     "?xs [<=?r] ?ys ==> length ?ys = length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Listn.le_list_refl", "ALL x. x <=_?r x ==> ?xs [<=?r] ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Listn.Listn_sl_aux",
     "Semilat ?A ?r ?f ==> semilat (Listn.sl ?n (?A, ?r, ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))))
           ))),
    ("Listn.list_not_empty", "EX a. a : ?A ==> EX xs. xs : list ?n ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Listn.list_map",
     "(map ?f ?xs : list (length ?xs) ?A) = (?f ` set ?xs <= ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("Listn.closed_lift2_sup",
     "Semilat.closed (err ?A) (lift2 ?f) ==>
      Semilat.closed (err (list ?n ?A)) (lift2 (Listn.sup ?f))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 2))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Listn.coalesce_in_err_list",
     "?xes : list ?n (err ?A) ==> coalesce ?xes : err (list ?n ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Listn.less_lengthI",
     "[| ?xs : list ?n ?A; ?p < ?n |] ==> ?p < length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 3)))),
    ("Listn.plus_list_Nil", "[] [+?f] ?xs = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_var 0),
       template_hole 0)),
    ("Listn.le_list_refl'",
     "[| order ?r ?A; ?xs : list ?n ?A |] ==> ?xs [<=?r] ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 3)),
             template_var 1)
           ))),
    ("Listn.listI",
     "[| length ?xs = ?n; set ?xs <= ?A |] ==> ?xs : list ?n ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Listn.listE_nth_in",
     "[| ?xs : list ?n ?A; ?i < ?n |] ==> ?xs ! ?i : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 1)
           ))),
    ("Listn.length_plus_list",
     "length (?xs [+?f] ?ys) = min (length ?xs) (length ?ys)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2), t_empty),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 0)))),
    ("Listn.Cons_in_list_Suc",
     "(?x # ?xs : list (Suc ?n) ?A) = (?x : ?A & ?xs : list ?n ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Listn.closed_err_lift2_conv",
     "Semilat.closed (err ?A) (lift2 ?f) =
      (ALL x:?A. ALL y:?A. x +_?f y : err ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Listn.in_list_Suc_iff",
     "(?xs : list (Suc ?n) ?A) = (EX y:?A. EX ys:list ?n ?A. ?xs = y # ys)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 0), t_empty))),
    ("Listn.Cons_le_Cons",
     "(?x # ?xs [<=?r] ?y # ?ys) = (?x <=_?r ?y & ?xs [<=?r] ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3)),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_var 0)))),
    ("Listn.err_semilat_sup",
     "err_semilat (?A, ?r, ?f) ==>
      err_semilat (list ?n ?A, Listn.le ?r, Listn.sup ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 0, template_var 1)))))
           ))),
    ("Listn.listt_update_in_list",
     "[| ?xs : list ?n ?A; ?x : ?A |] ==> ?xs[?i := ?x] : list ?n ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2))
           ))),
    ("Listn.closed_listI",
     "Semilat.closed ?S ?f ==> Semilat.closed (list ?n ?S) (map2 ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)),
             t_empty)
           ))),
    ("Listn.le_listD",
     "[| ?xs [<=?r] ?ys; ?p < length ?xs |] ==> ?xs ! ?p <=_?r ?ys ! ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Listn.order_listI2",
     "order ?r ?A ==>
      order (Listn.le ?r) (\<Union> {list n ?A |n. n <= ?mxs})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 2)),
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty)))
           ))),
    ("Listn.nth_in",
     "[| length ?xs = ?n; set ?xs <= ?A; ?i < ?n |] ==> ?xs ! ?i : ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3), template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_var 1),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 1)
           ))),
    ("Listn.le_list_appendI",
     "[| ?a [<=?r] ?b; ?c [<=?r] ?d |] ==> ?a @ ?c [<=?r] ?b @ ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_app (template_hole 1, template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Listn.list_appendI",
     "[| ?a : list ?n ?A; ?b : list ?m ?A |]
      ==> ?a @ ?b : list (?n + ?m) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2))
           ))),
    ("Listn.le_list_refl2'",
     "[| order ?r ?A; ?xs : \<Union> {list n ?A |n. n <= ?mxs} |]
      ==> ?xs [<=?r] ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 3)),
             template_var 1)
           ))),
    ("Listn.le_listI",
     "[| length ?a = length ?b;
         !!n. n < length ?a ==> ?a ! n <=_?r ?b ! n |]
      ==> ?a [<=?r] ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Listn.list_update_le_cong",
     "[| ?i < length ?xs; ?xs [<=?r] ?ys; ?x <=_?r ?y |]
      ==> ?xs[?i := ?x] [<=?r] ?ys[?i := ?y]",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app (template_hole 2, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 5),
                   template_var 1)),
               template_app (template_hole 2, template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 5),
               template_var 0))
           ))),
    ("Listn.closed_map2_list",
     "[| Semilat.closed (err ?A) (lift2 ?f); ?xs : list ?n ?A;
         ?ys : list ?n ?A |]
      ==> map2 ?f ?xs ?ys : list ?n (err ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 4)),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 8, template_var 4)))
           ))),
    ("Listn.listn_Cons_Suc",
     "[| ?l # ?xs : list ?n ?A;
         !!n'. [| ?n = Suc n'; ?l : ?A; ?xs : list n' ?A |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Listn.le_list_antisym",
     "[| order ?r ?A; ?xs : list ?n ?A; ?ys : list ?n ?A; ?xs [<=?r] ?ys;
         ?ys [<=?r] ?xs |]
      ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 4)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 4)),
              template_var 2)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Listn.listn_appendE",
     "[| ?a @ ?b : list ?n ?A;
         !!n1 n2.
            [| ?n = n1 + n2; ?a : list n1 ?A; ?b : list n2 ?A |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Listn.nth_plus_list",
     "[| length ?xs = ?n; length ?ys = ?n; ?i < ?n |]
      ==> (?xs [+?f] ?ys) ! ?i = ?xs ! ?i +_?f ?ys ! ?i",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 10, template_var 2), template_var 3),
        template_inequation (less_than, template_var 1, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 4), t_empty),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Listn.lift2_eq_ErrD",
     "[| ?x +_?f ?y = Err; semilat (err ?A, Err.le ?r, lift2 ?f); ?x : ?A;
         ?y : ?A |]
      ==> ~ (EX u:?A. ?x <=_?r u & ?y <=_?r u)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 12, template_var 4),
              template_var 3),
            template_var 2),
          template_hole 11),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app (template_hole 5, template_var 3))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1), t_empty)
               )
           ))),
    ("Listn.plus_list_Cons",
     "?x # ?xs [+?f] ?ys =
      (case ?ys of [] => [] | y # ys => (?x +_?f y) # ?xs [+?f] ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2)),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         template_var 0))),
    ("Listn.le_list_trans",
     "[| order ?r ?A; ?xs : list ?n ?A; ?ys : list ?n ?A; ?zs : list ?n ?A;
         ?xs [<=?r] ?ys; ?ys [<=?r] ?zs |]
      ==> ?xs [<=?r] ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_app (template_hole 0, template_var 5)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_app (template_hole 0, template_var 5)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app (template_hole 0, template_var 5)),
             template_var 0)
           ))),
    ("Listn.coalesce_eq_OK1_D",
     "[| semilat (err ?A, Err.le ?r, lift2 ?f); ?xs : list ?n ?A;
         ?ys : list ?n ?A; coalesce (?xs [+?f] ?ys) = OK ?zs |]
      ==> ?xs [<=?r] ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_var 6)),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 5)),
                  template_app (template_hole 11, template_var 4))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 6))
            ),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3), t_empty),
              template_var 1)),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app (template_hole 0, template_var 5)),
             template_var 0)
           ))),
    ("Listn.coalesce_eq_OK2_D",
     "[| semilat (err ?A, Err.le ?r, lift2 ?f); ?xs : list ?n ?A;
         ?ys : list ?n ?A; coalesce (?xs [+?f] ?ys) = OK ?zs |]
      ==> ?ys [<=?r] ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_var 6)),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 5)),
                  template_app (template_hole 11, template_var 4))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 6))
            ),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3), t_empty),
              template_var 1)),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 5)),
             template_var 0)
           ))),
    ("Listn.lift2_le_ub",
     "[| semilat (err ?A, Err.le ?r, lift2 ?f); ?x : ?A; ?y : ?A;
         ?x +_?f ?y = OK ?z; ?u : ?A; ?x <=_?r ?u; ?y <=_?r ?u |]
      ==> ?z <=_?r ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 6)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 5)),
                  template_app (template_hole 5, template_var 4))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 6)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 3),
              template_var 4),
            template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 5),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 5),
             template_var 0)
           ))),
    ("Listn.coalesce_eq_Err_D",
     "[| semilat (err ?A, Err.le ?r, lift2 ?f); ?xs : list ?n ?A;
         ?ys : list ?n ?A; coalesce (?xs [+?f] ?ys) = Err |]
      ==> ~ (EX zs:list ?n ?A. ?xs [<=?r] zs & ?ys [<=?r] zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 19,
              template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 5)),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 4)),
                  template_app (template_hole 14, template_var 3))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 5))
            ),
        template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2), t_empty),
              template_var 0)),
          template_hole 5)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 12, template_var 1),
                     template_var 5)),
                 t_empty)
               )
           ))),
    ("Listn.le_list_antisym2",
     "[| order ?r ?A; ?xs : \<Union> {list n ?A |n. n <= ?mxs};
         ?ys : \<Union> {list n ?A |n. n <= ?mxs}; ?xs [<=?r] ?ys;
         ?ys [<=?r] ?xs |]
      ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9, template_app (template_hole 8, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9, template_app (template_hole 8, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 4)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 4)),
              template_var 2)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Listn.coalesce_eq_OK_ub_D",
     "[| semilat (err ?A, Err.le ?r, lift2 ?f); ?xs : list ?n ?A;
         ?ys : list ?n ?A;
         coalesce (?xs [+?f] ?ys) = OK ?zs &
         ?xs [<=?r] ?us & ?ys [<=?r] ?us & ?us : list ?n ?A |]
      ==> ?zs [<=?r] ?us",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 7)),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 6)),
                  template_app (template_hole 12, template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 6, template_var 4),
                          t_empty),
                        template_var 2))),
                  template_app (template_hole 2, template_var 1))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 4),
                      template_app (template_hole 0, template_var 6)),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 2),
                        template_app (template_hole 0, template_var 6)),
                      template_var 0)),
                  template_app
                   (template_app (template_hole 11, template_var 0),
                    template_app
                     (template_app (template_hole 10, template_var 3),
                      template_var 7)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 6)),
             template_var 0)
           ))),
    ("Listn.le_list_trans2",
     "[| order ?r ?A; ?xs : \<Union> {list n ?A |n. n <= ?mxs};
         ?ys : \<Union> {list n ?A |n. n <= ?mxs};
         ?zs : \<Union> {list n ?A |n. n <= ?mxs}; ?xs [<=?r] ?ys;
         ?ys [<=?r] ?zs |]
      ==> ?xs [<=?r] ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_app (template_hole 0, template_var 5)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_app (template_hole 0, template_var 5)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app (template_hole 0, template_var 5)),
             template_var 0)
           )))]
