   [("BVExample.eff_simps",
     "norm_eff ?i ?P ?pc ?\<tau> =
      map (%pc'. (pc', \<lfloor>eff\<^sub>i (?i, ?P, ?\<tau>)\<rfloor>))
       (succs ?i ?\<tau> ?pc)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1)))),
    ("BVExample.eff_simps",
     "eff ?i ?P ?pc ?et ?t =
      (case ?t of None => []
       | \<lfloor>\<tau>\<rfloor> =>
           norm_eff ?i ?P ?pc \<tau> @ xcpt_eff ?i ?P ?pc \<tau> ?et)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), t_empty),
         template_var 0))),
    ("BVExample.JVM_sup_unfold",
     "JVM_SemiType.sup ?S ?m ?n =
      lift2
       (Opt.sup
         (Product.sup (Listn.sup (SemiType.sup ?S))
           (%x y. OK (map2 (lift2 (SemiType.sup ?S)) x y))))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 2))),
             t_empty))))),
    ("BVExample.eff_simps",
     "xcpt_eff ?i ?P ?pc ?\<tau> ?et =
      (let (ST, LT) = ?\<tau>
       in map (%(f, t, C, h, d).
                  (h, \<lfloor>(Class C # drop (length ST - d) ST,
                                LT)\<rfloor>))
           (relevant_entries ?P ?i ?pc ?et))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 16, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 15, template_var 1),
         template_app (template_hole 14, t_empty))))]
