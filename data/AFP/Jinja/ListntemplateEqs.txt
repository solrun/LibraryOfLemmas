   [("Listn.list_0", "list 0 ?A = {[]}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Listn.lem", "?x +_(#) ?xs = ?x # ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Listn.Nil_le_conv", "([] [<=?r] ?ys) = (?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 2))),
    ("Listn.unfold_lesub_list", "(?xs [<=?r] ?ys) = Listn.le ?r ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Listn.list_map",
     "(map ?f ?xs : list (length ?xs) ?A) = (?f ` set ?xs <= ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("Listn.plus_list_Nil", "[] [+?f] ?xs = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_var 0),
       template_hole 0)),
    ("Listn.length_plus_list",
     "length (?xs [+?f] ?ys) = min (length ?xs) (length ?ys)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2), t_empty),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 0)))),
    ("Listn.Cons_in_list_Suc",
     "(?x # ?xs : list (Suc ?n) ?A) = (?x : ?A & ?xs : list ?n ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Listn.closed_err_lift2_conv",
     "closed (err ?A) (lift2 ?f) = (ALL x:?A. ALL y:?A. x +_?f y : err ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Listn.in_list_Suc_iff",
     "(?xs : list (Suc ?n) ?A) = (EX y:?A. EX ys:list ?n ?A. ?xs = y # ys)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 0), t_empty))),
    ("Listn.Cons_le_Cons",
     "(?x # ?xs [<=?r] ?y # ?ys) = (?x <=_?r ?y & ?xs [<=?r] ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3)),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_var 0)))),
    ("Listn.plus_list_Cons",
     "?x # ?xs [+?f] ?ys =
      (case ?ys of [] => [] | y # ys => (?x +_?f y) # ?xs [+?f] ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2)),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), t_empty),
         template_var 0)))]
