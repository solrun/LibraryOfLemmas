Loading theory "Draft.AList-Utils" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.EverythingAdequacyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Pointwise" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.HOLCF-Utils")
Loading theory "Draft.Mono-Nat-Fun" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.CValue-Nominal" via "Draft.CValue" via "Draft.C")
### Ignoring duplicate rewrite rule:
### (PROP ?P ==> True) == True
### Ignoring duplicate rewrite rule:
### (False ==> ?P) == True
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Mono-Nat-Fun"
### 0.035s elapsed time, 0.172s cpu time, 0.000s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.EverythingAdequacyTemplates" via "Draft.ExtrEqs")
### theory "Draft.Pointwise"
### 0.040s elapsed time, 0.195s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.EverythingAdequacyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.615s cpu time, 0.046s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.EverythingAdequacyTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.AList-Utils"
### 0.179s elapsed time, 0.731s cpu time, 0.046s GC time
Loading theory "Draft.Nominal-Utils" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.AList-Utils-Nominal")
### theory "HOL-Library.Set_Algebras"
### 0.199s elapsed time, 0.785s cpu time, 0.046s GC time
Loading theory "Draft.Vars" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.Terms")
### theory "Draft.Vars"
### 0.093s elapsed time, 0.354s cpu time, 0.102s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.EverythingAdequacyTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Nominal-Utils"
### 0.442s elapsed time, 1.732s cpu time, 0.179s GC time
Loading theory "Draft.AList-Utils-Nominal" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.898s elapsed time, 3.520s cpu time, 0.392s GC time
Loading theory "Draft.C" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.CValue-Nominal" via "Draft.CValue")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.AList-Utils-Nominal"
### 0.729s elapsed time, 2.706s cpu time, 0.823s GC time
Loading theory "Draft.Terms" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational")
### theory "HOL-Library.BigO"
### 1.020s elapsed time, 3.862s cpu time, 0.901s GC time
Loading theory "Draft.HOLCF-Join" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.Env" via "Draft.HOLCF-Join-Classes")
Found termination order: "size <*mlex*> {}"
class cpo = po +
  assumes "cpo": "!!S. chain S ==> EX x. range S <<| x"
Found termination order: "size <*mlex*> {}"
class pcpo = cpo +
  assumes "least": "EX x. ALL y. x << y"
### theory "Draft.HOLCF-Join"
### 0.150s elapsed time, 0.599s cpu time, 0.000s GC time
Loading theory "Draft.HOLCF-Join-Classes" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.Env")
Found termination order: "size <*mlex*> {}"
Proving isomorphism properties of domain C ...
Found termination order: "size <*mlex*> {}"
Proving induction properties of domain C ...
class Finite_Join_cpo = cpo +
  assumes "all_compatible": "!!x y. compatible x y"
instantiation
  fun :: (type, Finite_Join_cpo) Finite_Join_cpo
Found termination order: "size <*mlex*> {}"
instantiation
  cfun :: (cpo, Finite_Join_cpo) Finite_Join_cpo
### theory "Draft.C"
### 0.748s elapsed time, 2.796s cpu time, 0.750s GC time
Loading theory "Draft.CValue" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.CValue-Nominal")
class is_unit = type +
  fixes unit :: "'a"
  assumes "is_unit": "!!x. x = unit"
instantiation
  unit :: is_unit
  unit_unit == unit :: unit
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proving isomorphism properties of domain CValue ...
Indirect recursion detected, skipping proofs of (co)induction rules
### theory "Draft.CValue"
### 0.464s elapsed time, 1.831s cpu time, 0.183s GC time
Loading theory "Draft.HOLCF-Meet" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.C-restr" via "Draft.C-Meet")
class po = below +
  assumes "below_refl": "!!x. x << x"
  assumes "below_trans": "!!x y z. [| x << y; y << z |] ==> x << z"
  assumes "below_antisym": "!!x y. [| x << y; y << x |] ==> x = y"
### theory "Draft.HOLCF-Join-Classes"
### 0.705s elapsed time, 2.771s cpu time, 0.343s GC time
Loading theory "Draft.Env" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap")
Found termination order: "size <*mlex*> {}"
class Finite_Meet_cpo = cpo +
  assumes
    "binary_meet_exists":
      "!!x y. EX l. l << x & l << y & (ALL z. z << x --> z << y --> z << l)"
### theory "HOL-Library.Tree"
### 2.265s elapsed time, 8.759s cpu time, 1.425s GC time
Loading theory "Draft.Templates" (required by "Draft.EverythingAdequacyTemplates" via "Draft.ExtrEqs")
### theory "Draft.Env"
### 0.240s elapsed time, 0.945s cpu time, 0.079s GC time
Loading theory "Draft.HOLCF-Utils" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.269s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.EverythingAdequacyTemplates")
class cont_binary_meet = Finite_Meet_cpo +
  assumes
    "meet_cont'":
      "!!Y y.
          chain Y ==> (LUB i. Y i) \<sqinter> y = (LUB i. Y i \<sqinter> y)"
### theory "Draft.HOLCF-Meet"
### 0.400s elapsed time, 1.559s cpu time, 0.219s GC time
Loading theory "Draft.C-Meet" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.C-restr")
Found termination order: "{}"
instantiation
  C :: Finite_Meet_cpo
Found termination order: "{}"
### theory "Draft.C-Meet"
### 0.292s elapsed time, 1.153s cpu time, 0.089s GC time
Loading theory "Draft.Value" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Value-Nominal")
### theory "Draft.HOLCF-Utils"
### 0.412s elapsed time, 1.616s cpu time, 0.163s GC time
Loading theory "Draft.C-restr" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational")
Proving isomorphism properties of domain Value ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.706s elapsed time, 2.775s cpu time, 0.297s GC time
Loading theory "Draft.Env-HOLCF" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.HasESem")
Indirect recursion detected, skipping proofs of (co)induction rules
### theory "Draft.C-restr"
### 0.341s elapsed time, 1.335s cpu time, 0.133s GC time
Loading theory "Draft.EvalHeap" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
### theory "Draft.Value"
### 0.422s elapsed time, 1.659s cpu time, 0.133s GC time
Loading theory "Draft.Nominal-HOLCF" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.HasESem")
### Ignoring duplicate rewrite rule:
### cont ?f1 ==> cont (%x. ?f1 x f|` ?S1) == True
### theory "Draft.Env-HOLCF"
### 0.274s elapsed time, 1.071s cpu time, 0.129s GC time
Loading theory "Draft.Iterative" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
locale iterative
  fixes \<rho> :: "'a => 'b"
    and e1 :: "('a => 'b) -> 'a => 'b"
    and e2 :: "('a => 'b) -> 'b"
    and S :: "'a set"
    and x :: "'a"
  assumes "iterative S x"
### theory "Draft.Iterative"
### 0.098s elapsed time, 0.386s cpu time, 0.000s GC time
Loading theory "Draft.ValueSimilarity" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.Denotational-Related")
class cont_pt = pt + cpo +
  assumes "perm_cont": "!!p. cont (permute p)"
Proofs for inductive predicate(s) "similar'_base"
  Proving monotonicity ...
Proofs for inductive predicate(s) "similar'_step"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.ValueSimilarity"
### 0.691s elapsed time, 2.704s cpu time, 0.231s GC time
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.EvalHeap"
### 1.157s elapsed time, 4.462s cpu time, 0.420s GC time
instantiation
  cfun :: (cont_pt, cont_pt) pt
  permute_cfun == permute :: perm => ('a -> 'b) => 'a -> 'b
instantiation
  u :: (cont_pt) pt
  permute_u == permute :: perm => 'a\<^sub>\<bottom> => 'a\<^sub>\<bottom>
instantiation
  lift :: (pt) pt
  permute_lift == permute :: perm => 'a lift => 'a lift
### theory "Draft.Nominal-HOLCF"
### 1.295s elapsed time, 4.627s cpu time, 0.384s GC time
Loading theory "Draft.CValue-Nominal" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational")
Loading theory "Draft.Env-Nominal" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
Loading theory "Draft.HasESem" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
locale has_ESem
  fixes ESem :: "'exp => ('var => 'value) -> 'value"
locale has_ignore_fresh_ESem
  fixes ESem :: "'a => ('b => 'c) -> 'c"
  assumes "has_ignore_fresh_ESem ESem"
### theory "Draft.HasESem"
### 0.321s elapsed time, 1.257s cpu time, 0.108s GC time
Loading theory "Draft.Value-Nominal" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational")
instantiation
  C :: pure
  permute_C == permute :: perm => C => C
instantiation
  CValue :: pure
  permute_CValue == permute :: perm => CValue => CValue
### theory "Draft.CValue-Nominal"
### 0.477s elapsed time, 1.868s cpu time, 0.165s GC time
### theory "Draft.Env-Nominal"
### 0.492s elapsed time, 1.915s cpu time, 0.165s GC time
Loading theory "Draft.HeapSemantics" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational")
instantiation
  Value :: pure
  permute_Value == permute :: perm => Value => Value
### theory "Draft.Value-Nominal"
### 0.461s elapsed time, 1.531s cpu time, 0.143s GC time
locale has_ESem
  fixes ESem :: "'exp => ('var => 'value) -> 'value"
locale has_ignore_fresh_ESem
  fixes ESem :: "'a => ('b => 'c) -> 'c"
  assumes "has_ignore_fresh_ESem ESem"
### theory "Draft.HeapSemantics"
### 0.983s elapsed time, 2.289s cpu time, 0.183s GC time
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Terms"
### 5.313s elapsed time, 17.104s cpu time, 1.581s GC time
Loading theory "Draft.Substitution" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props")
Loading theory "Draft.AbstractDenotational" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational" via "Draft.Abstract-Denotational-Props")
Found termination order: "{}"
locale semantic_domain
  fixes Fn :: "('Value -> 'Value) -> 'Value"
    and Fn_project :: "'Value -> 'Value -> 'Value"
    and B :: "bool discr -> 'Value"
    and B_project :: "'Value -> 'Value -> 'Value -> 'Value"
    and tick :: "'Value -> 'Value"
### Additional type variable(s) in specification of "ESem_rel": 'Value
### Additional type variable(s) in specification of "ESem_dom": 'Value
### theory "Draft.Substitution"
### 0.953s elapsed time, 2.433s cpu time, 1.164s GC time
Loading theory "Draft.Launchbury" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal")
### theory "Draft.AbstractDenotational"
### 0.986s elapsed time, 2.504s cpu time, 1.164s GC time
Loading theory "Draft.Abstract-Denotational-Props" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal" via "Draft.Denotational")
Proofs for inductive predicate(s) "reds"
  Proving monotonicity ...
locale semantic_domain
  fixes Fn :: "('Value -> 'Value) -> 'Value"
    and Fn_project :: "'Value -> 'Value -> 'Value"
    and B :: "bool discr -> 'Value"
    and B_project :: "'Value -> 'Value -> 'Value -> 'Value"
    and tick :: "'Value -> 'Value"
### theory "Draft.Abstract-Denotational-Props"
### 0.331s elapsed time, 0.674s cpu time, 0.050s GC time
Loading theory "Draft.ResourcedDenotational" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy")
Loading theory "Draft.Denotational" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.CorrectnessOriginal")
### theory "Draft.Denotational"
### 0.489s elapsed time, 1.450s cpu time, 0.078s GC time
### theory "Draft.Launchbury"
### 1.094s elapsed time, 2.699s cpu time, 0.193s GC time
Loading theory "Draft.CorrectnessOriginal" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy")
### theory "Draft.ResourcedDenotational"
### 0.864s elapsed time, 2.260s cpu time, 0.143s GC time
Loading theory "Draft.CorrectnessResourced" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy" via "Draft.ResourcedAdequacy")
Loading theory "Draft.Denotational-Related" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy")
[| ?S <= ?S'; ?m1.0 f|` ?S' = ?m2.0 f|` ?S' |]
==> ?m1.0 f|` ?S = ?m2.0 f|` ?S
### theory "Draft.CorrectnessOriginal"
### 0.334s elapsed time, 0.933s cpu time, 0.071s GC time
### theory "Draft.CorrectnessResourced"
### 0.337s elapsed time, 0.900s cpu time, 0.043s GC time
Loading theory "Draft.ResourcedAdequacy" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy" via "Draft.Adequacy")
### theory "Draft.ResourcedAdequacy"
### 0.092s elapsed time, 0.207s cpu time, 0.058s GC time
### theory "Draft.Denotational-Related"
### 0.536s elapsed time, 1.262s cpu time, 0.129s GC time
Loading theory "Draft.Adequacy" (required by "Draft.EverythingAdequacyTemplates" via "Draft.EverythingAdequacy")
### theory "Draft.Adequacy"
### 0.283s elapsed time, 0.317s cpu time, 0.049s GC time
Loading theory "Draft.EverythingAdequacy" (required by "Draft.EverythingAdequacyTemplates")
### theory "Draft.EverythingAdequacy"
### 0.481s elapsed time, 0.498s cpu time, 0.027s GC time
Loading theory "Draft.EverythingAdequacyTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.EverythingAdequacyTemplates"
### 0.709s elapsed time, 0.912s cpu time, 0.110s GC time
val it = (): unit
