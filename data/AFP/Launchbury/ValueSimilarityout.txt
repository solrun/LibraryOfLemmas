Loading theory "Draft.Pointwise" (required by "Draft.ValueSimilarityTemplates" via "Draft.ValueSimilarity")
Loading theory "Draft.Mono-Nat-Fun" (required by "Draft.ValueSimilarityTemplates" via "Draft.ValueSimilarity" via "Draft.CValue" via "Draft.C")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ValueSimilarityTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.ValueSimilarityTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Mono-Nat-Fun"
### 0.035s elapsed time, 0.172s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ValueSimilarityTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "Draft.Pointwise"
### 0.041s elapsed time, 0.198s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ValueSimilarityTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.152s elapsed time, 0.618s cpu time, 0.055s GC time
Loading theory "Draft.C" (required by "Draft.ValueSimilarityTemplates" via "Draft.ValueSimilarity" via "Draft.CValue")
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.833s cpu time, 0.055s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ValueSimilarityTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proving isomorphism properties of domain C ...
Proving induction properties of domain C ...
consts
  left :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
### theory "Draft.C"
### 0.495s elapsed time, 1.946s cpu time, 0.176s GC time
Loading theory "Draft.CValue" (required by "Draft.ValueSimilarityTemplates" via "Draft.ValueSimilarity")
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.905s elapsed time, 3.587s cpu time, 0.314s GC time
Loading theory "Draft.Value" (required by "Draft.ValueSimilarityTemplates" via "Draft.ValueSimilarity")
Found termination order: "size <*mlex*> {}"
Proving isomorphism properties of domain CValue ...
Found termination order: "size <*mlex*> {}"
Indirect recursion detected, skipping proofs of (co)induction rules
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.048s elapsed time, 3.963s cpu time, 0.945s GC time
### theory "Draft.CValue"
### 0.700s elapsed time, 2.568s cpu time, 0.770s GC time
Found termination order: "size <*mlex*> {}"
Proving isomorphism properties of domain Value ...
Found termination order: "size <*mlex*> {}"
Indirect recursion detected, skipping proofs of (co)induction rules
Found termination order: "size <*mlex*> {}"
### theory "Draft.Value"
### 0.628s elapsed time, 1.924s cpu time, 0.718s GC time
Loading theory "Draft.ValueSimilarity" (required by "Draft.ValueSimilarityTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "similar'_base"
  Proving monotonicity ...
Proofs for inductive predicate(s) "similar'_step"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.ValueSimilarity"
### 0.568s elapsed time, 1.189s cpu time, 0.115s GC time
### theory "HOL-Library.Tree"
### 2.101s elapsed time, 6.564s cpu time, 1.147s GC time
Loading theory "Draft.Templates" (required by "Draft.ValueSimilarityTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.069s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ValueSimilarityTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.501s elapsed time, 0.568s cpu time, 0.087s GC time
Loading theory "Draft.ValueSimilarityTemplates"
val templateLemmas =
   [("ValueSimilarity.similar'_botI",
     "\<bottom> \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<bottom>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("ValueSimilarity.similar_bool",
     "B$?b \<triangleleft>\<triangleright> CB$?b",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("ValueSimilarity.similar'_adm",
     "adm (%x. fst x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> snd
                                  x)",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("ValueSimilarity.similar'_typed",
     "~ Fn$?f \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> CB$?b",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("ValueSimilarity.similar'_typed",
     "~ B$?b \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> CFn$?g",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("ValueSimilarity.bot_or_not_bot",
     "?x \<triangleleft>\<triangleright> ?y ==>
      (?x = \<bottom>) = (?y = \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_bimplication
        (template_equation (template_var 1, template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("ValueSimilarity.similar'_bool",
     "(B$?b\<^sub>1 \<triangleleft>\<triangleright>\<^bsub>Suc
                      ?n\<^esub> CB$?b\<^sub>2) =
      (?b\<^sub>1 = ?b\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 2)),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("ValueSimilarity.bot_or_not_bot'",
     "?x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?y ==>
      (?x = \<bottom>) = (?y = \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_bimplication
        (template_equation (template_var 1, template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("ValueSimilarity.similar'_bot",
     "[| \<bottom> \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?x;
         ?x = \<bottom> ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueSimilarity.similar'_bot",
     "[| ?y \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<bottom>;
         ?y = \<bottom> ==> PROP ?W |]
      ==> PROP ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_hole 2)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 0)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueSimilarity.similarE",
     "?x \<triangleleft>\<triangleright> ?y ==>
      \<psi>\<^sup>D\<^bsub>?n\<^esub>$
      ?x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$
                     ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("ValueSimilarity.take_similar'_similar",
     "?x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?y ==>
      \<psi>\<^sup>D\<^bsub>?n\<^esub>$?x \<triangleleft>\<triangleright>
      \<psi>\<^sup>E\<^bsub>?n\<^esub>$?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("ValueSimilarity.similar_admI",
     "[| cont ?f; cont ?g |]
      ==> adm (%x. ?f x \<triangleleft>\<triangleright> ?g x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("ValueSimilarity.bool_or_not_bool",
     "?x \<triangleleft>\<triangleright> ?y ==> (?x = B$?b) = (?y = CB$?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_bimplication
        (template_equation
          (template_var 2,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("ValueSimilarity.similar'_take",
     "?d \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?e ==>
      \<psi>\<^sup>D\<^bsub>?n\<^esub>$
      ?d \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$
                     ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("ValueSimilarity.similar'_admI",
     "[| cont ?f; cont ?g |]
      ==> adm (%x. ?f x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?g
                                     x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("ValueSimilarity.similar'_up",
     "?d \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?e ==>
      \<psi>\<^sup>D\<^bsub>?n\<^esub>$
      ?d \<triangleleft>\<triangleright>\<^bsub>Suc
           ?n\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("ValueSimilarity.similar'_down",
     "?d \<triangleleft>\<triangleright>\<^bsub>Suc ?n\<^esub> ?e ==>
      \<psi>\<^sup>D\<^bsub>?n\<^esub>$
      ?d \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$
                     ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("ValueSimilarity.similar'_step_adm",
     "adm (%x. ?s (fst x) (snd x)) ==>
      adm (%x. similar'_step ?s (fst x) (snd x))",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("ValueSimilarity.similarI",
     "(!!n. \<psi>\<^sup>D\<^bsub>n\<^esub>$
            ?x \<triangleleft>\<triangleright>\<^bsub>n\<^esub> \<psi>\<^sup>E\<^bsub>n\<^esub>$
                          ?y) ==>
      ?x \<triangleleft>\<triangleright> ?y",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("ValueSimilarity.Abramsky 4,3,5 (1)",
     "\<psi>\<^sup>D\<^bsub>?n\<^esub>$
      (?d \<down>Fn \<psi>\<^sup>D\<^bsub>?n\<^esub>$?d') =
      \<psi>\<^sup>D\<^bsub>Suc ?n\<^esub>$?d \<down>Fn
      \<psi>\<^sup>D\<^bsub>?n\<^esub>$?d'",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 2))),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_var 0)))),
    ("ValueSimilarity.Value_CValue_take_induct",
     "[| adm (%(x, y). ?P x y);
         !!n. ?P (\<psi>\<^sup>D\<^bsub>n\<^esub>$?x)
               (\<psi>\<^sup>A\<^bsub>n\<^esub>$?y) |]
      ==> ?P ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("ValueSimilarity.similar_FnD",
     "[| Fn$?f \<triangleleft>\<triangleright> CFn$?g;
         ?x \<triangleleft>\<triangleright> ?y$C\<^sup>\<infinity> |]
      ==> ?f$?x \<triangleleft>\<triangleright> ?g$?y$C\<^sup>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_hole 2))
           ))),
    ("ValueSimilarity.similar'_down_le",
     "[| ?n <= ?m;
         \<psi>\<^sup>D\<^bsub>?m\<^esub>$
         ?d \<triangleleft>\<triangleright>\<^bsub>?m\<^esub> \<psi>\<^sup>E\<^bsub>?m\<^esub>$
                        ?e |]
      ==> \<psi>\<^sup>D\<^bsub>?n\<^esub>$
          ?d \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$
                         ?e",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 2)),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 0))
           ))),
    ("ValueSimilarity.similar'_up_le",
     "[| ?n <= ?m;
         \<psi>\<^sup>D\<^bsub>?n\<^esub>$
         ?d \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$
                        ?e |]
      ==> \<psi>\<^sup>D\<^bsub>?n\<^esub>$
          ?d \<triangleleft>\<triangleright>\<^bsub>?m\<^esub> \<psi>\<^sup>E\<^bsub>?n\<^esub>$
                         ?e",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 3)),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 0))
           ))),
    ("ValueSimilarity.fun_similarE",
     "[| ?m \<triangleleft>\<triangleright>\<^sup>* ?m';
         (!!x. ?m x \<triangleleft>\<triangleright>
               ?m' x$C\<^sup>\<infinity>) ==>
         ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty), template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 0, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueSimilarity.similar_FnI",
     "(!!x y.
          x \<triangleleft>\<triangleright> y$C\<^sup>\<infinity> ==>
          ?f$x \<triangleleft>\<triangleright> ?g$y$C\<^sup>\<infinity>) ==>
      Fn$?f \<triangleleft>\<triangleright> CFn$?g",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("ValueSimilarity.similar'_FnI",
     "(!!x y.
          x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> y$
                        C\<^sup>\<infinity> ==>
          ?f$x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?g$y$
                           C\<^sup>\<infinity>) ==>
      Fn$?f \<triangleleft>\<triangleright>\<^bsub>Suc ?n\<^esub> CFn$?g",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("ValueSimilarity.similar_FnE",
     "[| Fn$?f \<triangleleft>\<triangleright> CFn$?g;
         (!!x y.
             x \<triangleleft>\<triangleright> y$C\<^sup>\<infinity> ==>
             ?f$x \<triangleleft>\<triangleright>
             ?g$y$C\<^sup>\<infinity>) ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 2)),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1))
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueSimilarity.similar'_FnE",
     "[| Fn$?f \<triangleleft>\<triangleright>\<^bsub>Suc ?n\<^esub> CFn$?g;
         (!!x y.
             x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> y$
                           C\<^sup>\<infinity> ==>
             ?f$x \<triangleleft>\<triangleright>\<^bsub>?n\<^esub> ?g$y$
                              C\<^sup>\<infinity>) ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 2)),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1))
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueSimilarity.slimilar_bot_cases",
     "[| ?x \<triangleleft>\<triangleright> ?y;
         [| ?x = \<bottom>; ?y = \<bottom> |] ==> ?thesis;
         !!b. [| ?x = B$(Discr b); ?y = CB$(Discr b) |] ==> ?thesis;
         !!f g. [| ?x = Fn$f; ?y = CFn$g |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 14)],
          template_implication
           ([template_equation (template_var 1, template_hole 12)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("ValueSimilarity.value_CValue_cases",
     "[| [| ?x = \<bottom>; ?y = \<bottom> |] ==> ?thesis;
         !!f. [| ?x = Fn$f; ?y = \<bottom> |] ==> ?thesis;
         !!g. [| ?x = \<bottom>; ?y = CFn$g |] ==> ?thesis;
         !!f g. [| ?x = Fn$f; ?y = CFn$g |] ==> ?thesis;
         !!b\<^sub>1.
            [| ?x = B$(Discr b\<^sub>1); ?y = \<bottom> |] ==> ?thesis;
         !!b\<^sub>1 g.
            [| ?x = B$(Discr b\<^sub>1); ?y = CFn$g |] ==> ?thesis;
         !!b\<^sub>1 b\<^sub>2.
            [| ?x = B$(Discr b\<^sub>1); ?y = CB$(Discr b\<^sub>2) |]
            ==> ?thesis;
         !!f b\<^sub>2.
            [| ?x = Fn$f; ?y = CB$(Discr b\<^sub>2) |] ==> ?thesis;
         !!b\<^sub>2.
            [| ?x = \<bottom>; ?y = CB$(Discr b\<^sub>2) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 2, template_hole 14)],
          template_implication
           ([template_equation (template_var 1, template_hole 12)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.ValueSimilarityTemplates"
### 0.433s elapsed time, 0.601s cpu time, 0.072s GC time
val it = (): unit
