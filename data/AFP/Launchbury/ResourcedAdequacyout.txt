Loading theory "Draft.AList-Utils" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap")
Loading theory "Draft.Mono-Nat-Fun" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.CValue-Nominal" via "Draft.CValue" via "Draft.C")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Pointwise" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.HOLCF-Utils")
### theory "Draft.Mono-Nat-Fun"
### 0.028s elapsed time, 0.140s cpu time, 0.000s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ExtrEqs")
### Ignoring duplicate rewrite rule:
### (PROP ?P ==> True) == True
### Ignoring duplicate rewrite rule:
### (False ==> ?P) == True
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Pointwise"
### 0.034s elapsed time, 0.163s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.551s cpu time, 0.038s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.AList-Utils"
### 0.168s elapsed time, 0.685s cpu time, 0.038s GC time
Loading theory "Draft.Nominal-Utils" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.AList-Utils-Nominal")
### theory "HOL-Library.Set_Algebras"
### 0.205s elapsed time, 0.809s cpu time, 0.038s GC time
Loading theory "Draft.Vars" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.Terms")
### theory "Draft.Vars"
### 0.091s elapsed time, 0.348s cpu time, 0.101s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Nominal-Utils"
### 0.444s elapsed time, 1.748s cpu time, 0.180s GC time
Loading theory "Draft.AList-Utils-Nominal" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.900s elapsed time, 3.538s cpu time, 0.379s GC time
Loading theory "Draft.C" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.CValue-Nominal" via "Draft.CValue")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.AList-Utils-Nominal"
### 0.711s elapsed time, 2.646s cpu time, 0.775s GC time
Loading theory "Draft.Terms" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.009s elapsed time, 3.820s cpu time, 0.854s GC time
Loading theory "Draft.HOLCF-Join" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.Env" via "Draft.HOLCF-Join-Classes")
class cpo = po +
  assumes "cpo": "!!S. chain S ==> EX x. range S <<| x"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class pcpo = cpo +
  assumes "least": "EX x. ALL y. x << y"
### theory "Draft.HOLCF-Join"
### 0.162s elapsed time, 0.642s cpu time, 0.000s GC time
Loading theory "Draft.HOLCF-Join-Classes" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.Env")
Found termination order: "size <*mlex*> {}"
Proving isomorphism properties of domain C ...
Found termination order: "size <*mlex*> {}"
Proving induction properties of domain C ...
class Finite_Join_cpo = cpo +
  assumes "all_compatible": "!!x y. compatible x y"
instantiation
  fun :: (type, Finite_Join_cpo) Finite_Join_cpo
instantiation
  cfun :: (cpo, Finite_Join_cpo) Finite_Join_cpo
### theory "Draft.C"
### 0.737s elapsed time, 2.756s cpu time, 0.710s GC time
Loading theory "Draft.CValue" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.CValue-Nominal")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class is_unit = type +
  fixes unit :: "'a"
  assumes "is_unit": "!!x. x = unit"
instantiation
  unit :: is_unit
  unit_unit == unit :: unit
Found termination order: "size <*mlex*> {}"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
Proving isomorphism properties of domain CValue ...
Indirect recursion detected, skipping proofs of (co)induction rules
### theory "Draft.CValue"
### 0.464s elapsed time, 1.831s cpu time, 0.183s GC time
Loading theory "Draft.HOLCF-Meet" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.C-restr" via "Draft.C-Meet")
Found termination order: "size <*mlex*> {}"
class po = below +
  assumes "below_refl": "!!x. x << x"
  assumes "below_trans": "!!x y z. [| x << y; y << z |] ==> x << z"
  assumes "below_antisym": "!!x y. [| x << y; y << x |] ==> x = y"
### theory "Draft.HOLCF-Join-Classes"
### 0.710s elapsed time, 2.792s cpu time, 0.344s GC time
Loading theory "Draft.Env" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap")
### theory "HOL-Library.Tree"
### 2.222s elapsed time, 8.604s cpu time, 1.383s GC time
Loading theory "Draft.Templates" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ExtrEqs")
class Finite_Meet_cpo = cpo +
  assumes
    "binary_meet_exists":
      "!!x y. EX l. l << x & l << y & (ALL z. z << x --> z << y --> z << l)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.259s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ResourcedAdequacyTemplates")
### theory "Draft.Env"
### 0.238s elapsed time, 0.932s cpu time, 0.084s GC time
Loading theory "Draft.HOLCF-Utils" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.EvalHeap")
class cont_binary_meet = Finite_Meet_cpo +
  assumes
    "meet_cont'":
      "!!Y y.
          chain Y ==> (LUB i. Y i) \<sqinter> y = (LUB i. Y i \<sqinter> y)"
### theory "Draft.HOLCF-Meet"
### 0.409s elapsed time, 1.592s cpu time, 0.232s GC time
Loading theory "Draft.C-Meet" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.C-restr")
Found termination order: "{}"
instantiation
  C :: Finite_Meet_cpo
Found termination order: "{}"
### theory "Draft.C-Meet"
### 0.294s elapsed time, 1.158s cpu time, 0.089s GC time
### theory "Draft.HOLCF-Utils"
### 0.413s elapsed time, 1.622s cpu time, 0.171s GC time
Loading theory "Draft.C-restr" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational")
Loading theory "Draft.Env-HOLCF" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.HasESem")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.733s elapsed time, 2.886s cpu time, 0.303s GC time
Loading theory "Draft.EvalHeap" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
### Ignoring duplicate rewrite rule:
### cont ?f1 ==> cont (%x. ?f1 x f|` ?S1) == True
### theory "Draft.Env-HOLCF"
### 0.288s elapsed time, 1.129s cpu time, 0.132s GC time
Loading theory "Draft.Iterative" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
locale iterative
  fixes \<rho> :: "'a => 'b"
    and e1 :: "('a => 'b) -> 'a => 'b"
    and e2 :: "('a => 'b) -> 'b"
    and S :: "'a set"
    and x :: "'a"
  assumes "iterative S x"
### theory "Draft.C-restr"
### 0.338s elapsed time, 1.331s cpu time, 0.132s GC time
Loading theory "Draft.Nominal-HOLCF" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics" via "Draft.HasESem")
### theory "Draft.Iterative"
### 0.117s elapsed time, 0.463s cpu time, 0.069s GC time
class cont_pt = pt + cpo +
  assumes "perm_cont": "!!p. cont (permute p)"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.EvalHeap"
### 1.037s elapsed time, 3.247s cpu time, 0.268s GC time
instantiation
  cfun :: (cont_pt, cont_pt) pt
  permute_cfun == permute :: perm => ('a -> 'b) => 'a -> 'b
instantiation
  u :: (cont_pt) pt
  permute_u == permute :: perm => 'a\<^sub>\<bottom> => 'a\<^sub>\<bottom>
instantiation
  lift :: (pt) pt
  permute_lift == permute :: perm => 'a lift => 'a lift
### theory "Draft.Nominal-HOLCF"
### 1.173s elapsed time, 3.403s cpu time, 0.309s GC time
Loading theory "Draft.CValue-Nominal" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational")
Loading theory "Draft.Env-Nominal" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
Loading theory "Draft.HasESem" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational" via "Draft.HeapSemantics")
locale has_ESem
  fixes ESem :: "'exp => ('var => 'value) -> 'value"
locale has_ignore_fresh_ESem
  fixes ESem :: "'a => ('b => 'c) -> 'c"
  assumes "has_ignore_fresh_ESem ESem"
### theory "Draft.HasESem"
### 0.320s elapsed time, 1.255s cpu time, 0.112s GC time
instantiation
  C :: pure
  permute_C == permute :: perm => C => C
instantiation
  CValue :: pure
  permute_CValue == permute :: perm => CValue => CValue
### theory "Draft.CValue-Nominal"
### 0.473s elapsed time, 1.717s cpu time, 0.162s GC time
### theory "Draft.Env-Nominal"
### 0.489s elapsed time, 1.749s cpu time, 0.162s GC time
Loading theory "Draft.HeapSemantics" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props" via "Draft.AbstractDenotational")
locale has_ESem
  fixes ESem :: "'exp => ('var => 'value) -> 'value"
locale has_ignore_fresh_ESem
  fixes ESem :: "'a => ('b => 'c) -> 'c"
  assumes "has_ignore_fresh_ESem ESem"
### theory "Draft.HeapSemantics"
### 0.954s elapsed time, 1.939s cpu time, 0.107s GC time
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Terms"
### 5.195s elapsed time, 15.291s cpu time, 1.396s GC time
Loading theory "Draft.Substitution" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props")
Loading theory "Draft.AbstractDenotational" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational" via "Draft.Abstract-Denotational-Props")
Found termination order: "{}"
locale semantic_domain
  fixes Fn :: "('Value -> 'Value) -> 'Value"
    and Fn_project :: "'Value -> 'Value -> 'Value"
    and B :: "bool discr -> 'Value"
    and B_project :: "'Value -> 'Value -> 'Value -> 'Value"
    and tick :: "'Value -> 'Value"
### Additional type variable(s) in specification of "ESem_rel": 'Value
### Additional type variable(s) in specification of "ESem_dom": 'Value
### theory "Draft.Substitution"
### 0.934s elapsed time, 2.422s cpu time, 1.207s GC time
Loading theory "Draft.Launchbury" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy")
### theory "Draft.AbstractDenotational"
### 0.974s elapsed time, 2.507s cpu time, 1.207s GC time
Loading theory "Draft.Abstract-Denotational-Props" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy" via "Draft.ResourcedDenotational")
Proofs for inductive predicate(s) "reds"
  Proving monotonicity ...
locale semantic_domain
  fixes Fn :: "('Value -> 'Value) -> 'Value"
    and Fn_project :: "'Value -> 'Value -> 'Value"
    and B :: "bool discr -> 'Value"
    and B_project :: "'Value -> 'Value -> 'Value -> 'Value"
    and tick :: "'Value -> 'Value"
### theory "Draft.Abstract-Denotational-Props"
### 0.333s elapsed time, 0.672s cpu time, 0.033s GC time
Loading theory "Draft.ResourcedDenotational" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy")
### theory "Draft.Launchbury"
### 1.008s elapsed time, 2.034s cpu time, 0.101s GC time
### theory "Draft.ResourcedDenotational"
### 0.740s elapsed time, 1.428s cpu time, 0.068s GC time
Loading theory "Draft.CorrectnessResourced" (required by "Draft.ResourcedAdequacyTemplates" via "Draft.ResourcedAdequacy")
### theory "Draft.CorrectnessResourced"
### 0.668s elapsed time, 1.522s cpu time, 1.153s GC time
Loading theory "Draft.ResourcedAdequacy" (required by "Draft.ResourcedAdequacyTemplates")
### theory "Draft.ResourcedAdequacy"
### 0.066s elapsed time, 0.066s cpu time, 0.000s GC time
Loading theory "Draft.ResourcedAdequacyTemplates"
val templateLemmas =
   [("ResourcedAdequacy.demand_not_0",
     "demand (\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>?\<rho>\<^esub>) ~=
      \<bottom>",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 24,
             template_app
              (template_app
                (template_hole 23,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 22,
                             template_app (template_hole 21, t_empty)),
                           template_app (template_hole 13, t_empty)),
                         template_app (template_hole 9, t_empty)),
                       template_app (template_hole 6, t_empty)),
                     template_hole 1),
                   template_var 1)),
               template_var 0)),
           template_hole 0)
         )),
    ("ResourcedAdequacy.can_restrict_env",
     "(\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>?\<rho>\<^esub>)$(C$?r) =
      (\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>?\<rho>|\<^sup>\<circ>\<^bsub>?r\<^esub>\<^esub>)$
      (C$?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 27,
           template_app
            (template_app
              (template_hole 26,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 25,
                           template_app (template_hole 24, t_empty)),
                         template_app (template_hole 16, t_empty)),
                       template_app (template_hole 13, t_empty)),
                     template_app (template_hole 10, t_empty)),
                   template_hole 5),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 27,
           template_app
            (template_app
              (template_hole 26,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_hole 25,
                           template_app (template_hole 24, t_empty)),
                         template_app (template_hole 16, t_empty)),
                       template_app (template_hole 13, t_empty)),
                     template_app (template_hole 10, t_empty)),
                   template_hole 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)),
               template_var 1))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("ResourcedAdequacy.restr_can_restrict_env",
     "(\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>?\<rho>\<^esub>)|\<^bsub>C$
                            ?r\<^esub> =
      (\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>?\<rho>|\<^sup>\<circ>\<^bsub>?r\<^esub>\<^esub>)|\<^bsub>C$
                       ?r\<^esub>",
     template_equation
      (template_app
        (template_app
          (template_hole 27,
           template_app
            (template_app (template_hole 26, template_hole 25),
             template_app
              (template_app (template_hole 24, template_hole 23),
               template_var 2))),
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 21,
                         template_app (template_hole 20, t_empty)),
                       template_app (template_hole 15, t_empty)),
                     template_app (template_hole 11, t_empty)),
                   template_app (template_hole 8, t_empty)),
                 template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 27,
           template_app
            (template_app (template_hole 26, template_hole 25),
             template_app
              (template_app (template_hole 24, template_hole 23),
               template_var 2))),
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 21,
                         template_app (template_hole 20, t_empty)),
                       template_app (template_hole 15, t_empty)),
                     template_app (template_hole 11, t_empty)),
                   template_app (template_hole 8, t_empty)),
                 template_hole 3),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)),
             template_var 0))))),
    ("ResourcedAdequacy.resourced_adequacy",
     "(\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>\<N>\<lbrace>?\<Gamma>\<rbrace>\<^esub>)$
      ?r ~=
      \<bottom> ==>
      EX \<Delta> v. ?\<Gamma> : ?e \<Down>\<^bsub>?S\<^esub> \<Delta> : v",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 29,
                  template_app
                   (template_app
                     (template_hole 28,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 27,
                                  template_app (template_hole 26, t_empty)),
                                template_app (template_hole 18, t_empty)),
                              template_app (template_hole 15, t_empty)),
                            template_app (template_hole 12, t_empty)),
                          template_hole 7),
                        template_var 3)),
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app
                           (template_hole 5,
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 27,
template_app (template_hole 26, t_empty)),
                                    template_app
                                     (template_hole 18, t_empty)),
                                  template_app (template_hole 15, t_empty)),
                                template_app (template_hole 12, t_empty)),
                              template_hole 7)),
                          template_var 2)),
                      template_hole 4))),
                template_var 1),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("ResourcedAdequacy.add_BH",
     "[| map_of ?\<Gamma> ?x = Some ?e;
         (\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>\<N>\<lbrace>?\<Gamma>\<rbrace>\<^esub>)$
         ?r' ~=
         \<bottom> |]
      ==> (\<N>\<lbrakk> ?e \<rbrakk>\<^bsub>\<N>\<lbrace>delete ?x
                     ?\<Gamma>\<rbrace>\<^esub>)$
          ?r' ~=
          \<bottom>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 31, template_var 3),
            template_var 2),
          template_app (template_hole 30, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 27,
                  template_app
                   (template_app
                     (template_hole 26,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 25,
                                  template_app (template_hole 24, t_empty)),
                                template_app (template_hole 16, t_empty)),
                              template_app (template_hole 13, t_empty)),
                            template_app (template_hole 10, t_empty)),
                          template_hole 5),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 3,
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 25,
template_app (template_hole 24, t_empty)),
                                    template_app
                                     (template_hole 16, t_empty)),
                                  template_app (template_hole 13, t_empty)),
                                template_app (template_hole 10, t_empty)),
                              template_hole 5)),
                          template_var 3)),
                      template_hole 2))),
                template_var 0),
              template_hole 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 27,
                 template_app
                  (template_app
                    (template_hole 26,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 25,
                                 template_app (template_hole 24, t_empty)),
                               template_app (template_hole 16, t_empty)),
                             template_app (template_hole 13, t_empty)),
                           template_app (template_hole 10, t_empty)),
                         template_hole 5),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 25,
                                     template_app
(template_hole 24, t_empty)),
                                   template_app
                                    (template_hole 16, t_empty)),
                                 template_app (template_hole 13, t_empty)),
                               template_app (template_hole 10, t_empty)),
                             template_hole 5)),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_var 3))),
                     template_hole 2))),
               template_var 0),
             template_hole 1)
           )))]:
   (string * thm * template) list
### theory "Draft.ResourcedAdequacyTemplates"
### 0.739s elapsed time, 0.934s cpu time, 0.101s GC time
val it = (): unit
