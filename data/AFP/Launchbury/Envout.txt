Loading theory "HOL-Library.Function_Algebras" (required by "Draft.EnvTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.EnvTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.EnvTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.EnvTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.578s cpu time, 0.054s GC time
Loading theory "Draft.HOLCF-Join" (required by "Draft.EnvTemplates" via "Draft.Env" via "Draft.HOLCF-Join-Classes")
class cpo = po +
  assumes "cpo": "!!S. chain S ==> EX x. range S <<| x"
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.864s cpu time, 0.054s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.EnvTemplates" via "Draft.ExtrEqs")
class pcpo = cpo +
  assumes "least": "EX x. ALL y. x << y"
### theory "Draft.HOLCF-Join"
### 0.185s elapsed time, 0.732s cpu time, 0.101s GC time
Loading theory "Draft.HOLCF-Join-Classes" (required by "Draft.EnvTemplates" via "Draft.Env")
class Finite_Join_cpo = cpo +
  assumes "all_compatible": "!!x y. compatible x y"
instantiation
  fun :: (type, Finite_Join_cpo) Finite_Join_cpo
instantiation
  cfun :: (cpo, Finite_Join_cpo) Finite_Join_cpo
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class is_unit = type +
  fixes unit :: "'a"
  assumes "is_unit": "!!x. x = unit"
instantiation
  unit :: is_unit
  unit_unit == unit :: unit
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.882s elapsed time, 3.490s cpu time, 0.370s GC time
### theory "Draft.HOLCF-Join-Classes"
### 0.599s elapsed time, 2.334s cpu time, 0.216s GC time
Loading theory "Draft.Env" (required by "Draft.EnvTemplates")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.744s elapsed time, 2.853s cpu time, 0.317s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Env"
### 0.377s elapsed time, 0.982s cpu time, 0.526s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.875s elapsed time, 5.275s cpu time, 0.986s GC time
Loading theory "Draft.Templates" (required by "Draft.EnvTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.EnvTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.452s elapsed time, 0.511s cpu time, 0.075s GC time
Loading theory "Draft.EnvTemplates"
val templateLemmas =
   [("Env.env_restr_cont", "cont (env_restr ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Env.env_restr_UNIV", "?m f|` UNIV = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Env.env_delete_below_arg", "env_delete ?x ?m << ?m",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Env.env_restr_below_self", "?f f|` ?S << ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Env.edom_subset_adm", "adm (%ae'. edom ae' <= ?S)",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Env.lookup_env_delete_None", "env_delete ?x ?m ?x = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 1),
       template_hole 0)),
    ("Env.esing_bot", "esing ?x$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Env.esing_simps", "(esing ?x$?n) ?x = ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 1),
       template_var 0)),
    ("Env.edom_env_delete_subset", "edom (env_delete ?x ?m) <= edom ?m",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Env.override_on_bot", "\<bottom> ++\<^bsub>?S\<^esub> ?m = ?m f|` ?S",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Env.env_delete_esing", "env_delete ?x (esing ?x$?n) = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_hole 0)),
    ("Env.edom_empty_iff_bot", "(edom ?m = {}) = (?m = \<bottom>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Env.override_on_bot",
     "?m ++\<^bsub>?S\<^esub> \<bottom> = ?m f|` (- ?S)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Env.edom_env", "edom (?m f|` ?S) = edom ?m Int ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_var 1))),
    ("Env.edom_esing_subset", "edom (esing ?x$?n) <= {?x}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Env.env_delete_restr", "env_delete ?x ?m = ?m f|` (- {?x})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("Env.env_delete_fun_upd",
     "env_delete ?x (?m(?x := ?v)) = env_delete ?x ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1))),
    ("Env.env_restr_split", "?m = ?m f|` ?S \<squnion> ?m f|` (- ?S)",
     template_equation
      (template_var 1,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Env.edom_join", "edom (?f \<squnion> ?g) = edom ?f Un edom ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Env.edom_iff2", "(?m ?a = \<bottom>) = (?a ~: edom ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_var 1, template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Env.edomIff", "(?a : edom ?m) = (?m ?a ~= \<bottom>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 0, template_var 1), template_hole 0)
           ))),
    ("Env.edom_fun_upd_subset",
     "edom (?h(?x := ?v)) <= insert ?x (edom ?h)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 2)))),
    ("Env.edom_mono", "?x << ?y ==> edom ?x <= edom ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Env.env_delete_env_restr_swap",
     "env_delete ?x (?e f|` ?S) = env_delete ?x ?e f|` ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Env.env_restr_env_restr",
     "?x f|` ?d2.0 f|` ?d1.0 = ?x f|` (?d1.0 Int ?d2.0)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Env.env_delete_fun_upd2",
     "(env_delete ?x ?m)(?x := ?v) = ?m(?x := ?v)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 2),
         template_var 0))),
    ("Env.edom_env_delete", "edom (env_delete ?x ?m) = edom ?m - {?x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Env.edom_esing_up", "edom (esing ?x$(up$?n)) = {?x}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Env.esing_below_iff", "(esing ?x$?a << ?ae) = (?a << ?ae ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_var 0, template_var 2)))),
    ("Env.env_restr_useless", "edom ?m <= ?S ==> ?m f|` ?S = ?m",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Env.lookup_edom", "?m ?x ~= \<bottom> ==> ?x : edom ?m",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Env.lookup_not_edom", "?x ~: edom ?m ==> ?m ?x = \<bottom>",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app (template_var 0, template_var 1), template_hole 0))),
    ("Env.lookup_env_restr_eq",
     "(?m f|` ?S) ?x = (if ?x : ?S then ?m ?x else \<bottom>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app (template_var 1, template_var 0)),
         template_hole 0))),
    ("Env.env_restr_empty_iff",
     "(?m f|` ?S = \<bottom>) = (edom ?m Int ?S = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_hole 4),
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Env.env_restr_mono2",
     "?S2.0 <= ?S1.0 ==> ?m f|` ?S2.0 << ?m f|` ?S1.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Env.env_delete_mono",
     "?m << ?m' ==> env_delete ?x ?m << env_delete ?x ?m'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Env.env_restr_mono",
     "?m1.0 << ?m2.0 ==> ?m1.0 f|` ?S << ?m2.0 f|` ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Env.lookup_env_restr", "?x : ?S ==> (?m f|` ?S) ?x = ?m ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Env.lookup_env_restr_not_there",
     "?x ~: ?S ==> (?m f|` ?S) ?x = \<bottom>",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2),
         template_hole 0))),
    ("Env.env_delete_noop", "?x ~: edom ?m ==> env_delete ?x ?m = ?m",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Env.env_delete_join",
     "env_delete ?x (?f \<squnion> ?g) =
      env_delete ?x ?f \<squnion> env_delete ?x ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Env.env_restr_join",
     "(?m1.0 \<squnion> ?m2.0) f|` ?S =
      ?m1.0 f|` ?S \<squnion> ?m2.0 f|` ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Env.env_restr_join2",
     "?m f|` ?S \<squnion> ?m f|` ?S' = ?m f|` (?S Un ?S')",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Env.esing_eq_iff", "(esing ?x$?v = esing ?x$?v') = (?v = ?v')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Env.lookup_env_delete", "?x' ~= ?x ==> env_delete ?x ?m ?x' = ?m ?x'",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Env.esing_simps", "?x' ~= ?x ==> (esing ?x$?n) ?x' = \<bottom>",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0),
           template_var 2),
         template_hole 0))),
    ("Env.env_restr_empty", "edom ?m Int ?S = {} ==> ?m f|` ?S = \<bottom>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Env.lookup_override_on_eq",
     "(?m1.0 ++\<^bsub>?S\<^esub> ?m2.0) ?x =
      (if ?x : ?S then ?m2.0 ?x else ?m1.0 ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app (template_var 2, template_var 0)),
         template_app (template_var 3, template_var 0)))),
    ("Env.env_restr_env_restr_subset",
     "?d1.0 <= ?d2.0 ==> ?x f|` ?d2.0 f|` ?d1.0 = ?x f|` ?d1.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Env.env_restr_esing2", "?x ~: ?S ==> esing ?x$?v f|` ?S = \<bottom>",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 0)),
         template_hole 0))),
    ("Env.env_restr_add",
     "(?m1.0 ++\<^bsub>?S2.0\<^esub> ?m2.0) f|` ?S =
      ?m1.0 f|` ?S ++\<^bsub>?S2.0\<^esub> ?m2.0 f|` ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_var 0))),
    ("Env.edom_override_on",
     "edom (?m1.0 ++\<^bsub>?S\<^esub> ?m2.0) =
      edom ?m1.0 - ?S Un edom ?m2.0 Int ?S",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 0)))),
    ("Env.env_restr_env_delete_other",
     "?x ~: ?S ==> env_delete ?x ?m f|` ?S = ?m f|` ?S",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Env.fun_upd_env_delete",
     "?x : edom ?\<Gamma> ==>
      (env_delete ?x ?\<Gamma>)(?x := ?\<Gamma> ?x) = ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1),
           template_app (template_var 0, template_var 1)),
         template_var 0))),
    ("Env.env_restr_esing", "?x : ?S ==> esing ?x$?v f|` ?S = esing ?x$?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Env.env_restr_fun_upd_other",
     "?x ~: ?S ==> ?m1.0(?x := ?v) f|` ?S = ?m1.0 f|` ?S",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Env.join_env_restr_UNIV",
     "?S1.0 Un ?S2.0 = UNIV ==> ?m f|` ?S1.0 \<squnion> ?m f|` ?S2.0 = ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Env.below_env_deleteI",
     "[| ?f ?x = \<bottom>; ?f << ?g |] ==> ?f << env_delete ?x ?g",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Env.env_restr_fun_upd",
     "?x : ?S ==> ?m1.0(?x := ?v) f|` ?S = (?m1.0 f|` ?S)(?x := ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0)))),
    ("Env.env_restr_below_split",
     "[| ?m f|` ?S << ?m'; ?m f|` (- ?S) << ?m' |] ==> ?m << ?m'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Env.env_delete_add",
     "env_delete ?x (?m1.0 ++\<^bsub>?S\<^esub> ?m2.0) =
      env_delete ?x ?m1.0 ++\<^bsub>?S - {?x}\<^esub> env_delete ?x ?m2.0",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Env.esing_eq_up_iff",
     "((esing ?x$(up$?a)) ?y = up$?a') = (?x = ?y & ?a = ?a')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 3)),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Env.env_delete_fun_upd3",
     "?x ~= ?y ==>
      env_delete ?x (?m(?y := ?v)) = (env_delete ?x ?m)(?y := ?v)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 2),
           template_var 0)))),
    ("Env.env_restr_eqD",
     "[| ?m\<^sub>1 f|` ?S = ?m\<^sub>2 f|` ?S; ?x : ?S |]
      ==> ?m\<^sub>1 ?x = ?m\<^sub>2 ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Env.env_restr_belowD",
     "[| ?m\<^sub>1 f|` ?S << ?m\<^sub>2 f|` ?S; ?x : ?S |]
      ==> ?m\<^sub>1 ?x << ?m\<^sub>2 ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)),
             template_app (template_var 1, template_var 0))
           ))),
    ("Env.override_on_upd_swap",
     "?x ~: ?S ==>
      ?\<rho>(?x := ?z) ++\<^bsub>?S\<^esub> ?\<rho>' =
      (?\<rho> ++\<^bsub>?S\<^esub> ?\<rho>')(?x := ?z)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 1)),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0),
                 template_var 3)),
             template_var 4),
           template_var 1)))),
    ("Env.env_restr_eqI",
     "(!!x. x : ?S ==> ?m\<^sub>1 x = ?m\<^sub>2 x) ==>
      ?m\<^sub>1 f|` ?S = ?m\<^sub>2 f|` ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Env.env_restr_belowI",
     "(!!x. x : ?S ==> ?m\<^sub>1 x << ?m\<^sub>2 x) ==>
      ?m\<^sub>1 f|` ?S << ?m\<^sub>2 f|` ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Env.env_restr_eq_subset",
     "[| ?S <= ?S'; ?m1.0 f|` ?S' = ?m2.0 f|` ?S' |]
      ==> ?m1.0 f|` ?S = ?m2.0 f|` ?S",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Env.env_restr_below_subset",
     "[| ?S <= ?S'; ?m1.0 f|` ?S' << ?m2.0 f|` ?S' |]
      ==> ?m1.0 f|` ?S << ?m2.0 f|` ?S",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Env.env_delete_below_cong",
     "(?x ~= ?v ==> ?e1.0 ?x << ?e2.0 ?x) ==>
      env_delete ?v ?e1.0 ?x << env_delete ?v ?e2.0 ?x",
     template_implication
      ([template_implication
         ([template_negation
            (template_equation (template_var 3, template_var 2))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_var 1, template_var 3)),
                template_app (template_var 0, template_var 3))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 3))
           ))),
    ("Env.env_restr_cong",
     "(!!x. edom ?m <= ?S Int ?S' Un - ?S Int - ?S') ==>
      ?m f|` ?S = ?m f|` ?S'",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Env.override_on_upd",
     "?x : ?S ==>
      ?\<rho> ++\<^bsub>?S\<^esub> ?\<rho>'(?x := ?z) =
      (?\<rho> ++\<^bsub>?S - {?x}\<^esub> ?\<rho>')(?x := ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_hole 0)))),
             template_var 4),
           template_var 0)))),
    ("Env.env_restr_below_trans",
     "[| ?m1.0 f|` ?S1.0 << ?m2.0 f|` ?S1.0;
         ?m2.0 f|` ?S2.0 << ?m3.0 f|` ?S2.0 |]
      ==> ?m1.0 f|` (?S1.0 Int ?S2.0) << ?m3.0 f|` (?S1.0 Int ?S2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.EnvTemplates"
### 0.405s elapsed time, 0.580s cpu time, 0.073s GC time
val it = (): unit
