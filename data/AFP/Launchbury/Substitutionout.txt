Loading theory "Draft.AList-Utils" (required by "Draft.SubstitutionTemplates" via "Draft.Substitution" via "Draft.Terms" via "Draft.AList-Utils-Nominal")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SubstitutionTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SubstitutionTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.SubstitutionTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### Ignoring duplicate rewrite rule:
### (PROP ?P ==> True) == True
### Ignoring duplicate rewrite rule:
### (False ==> ?P) == True
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.554s cpu time, 0.061s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SubstitutionTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.AList-Utils"
### 0.179s elapsed time, 0.729s cpu time, 0.061s GC time
Loading theory "Draft.Nominal-Utils" (required by "Draft.SubstitutionTemplates" via "Draft.Substitution" via "Draft.Terms")
### theory "HOL-Library.Set_Algebras"
### 0.241s elapsed time, 0.984s cpu time, 0.061s GC time
Loading theory "Draft.Vars" (required by "Draft.SubstitutionTemplates" via "Draft.Substitution" via "Draft.Terms")
### theory "Draft.Vars"
### 0.096s elapsed time, 0.371s cpu time, 0.101s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SubstitutionTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.Nominal-Utils"
### 0.420s elapsed time, 1.656s cpu time, 0.167s GC time
Loading theory "Draft.AList-Utils-Nominal" (required by "Draft.SubstitutionTemplates" via "Draft.Substitution" via "Draft.Terms")
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.842s elapsed time, 3.338s cpu time, 0.366s GC time
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.898s elapsed time, 3.205s cpu time, 0.784s GC time
### theory "Draft.AList-Utils-Nominal"
### 0.655s elapsed time, 2.235s cpu time, 0.755s GC time
Loading theory "Draft.Terms" (required by "Draft.SubstitutionTemplates" via "Draft.Substitution")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.907s elapsed time, 5.716s cpu time, 1.051s GC time
Loading theory "Draft.Templates" (required by "Draft.SubstitutionTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.174s cpu time, 0.051s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SubstitutionTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.547s elapsed time, 1.146s cpu time, 0.128s GC time
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Terms"
### 4.003s elapsed time, 5.679s cpu time, 0.482s GC time
Loading theory "Draft.Substitution" (required by "Draft.SubstitutionTemplates")
Found termination order: "{}"
### theory "Draft.Substitution"
### 0.519s elapsed time, 0.629s cpu time, 0.103s GC time
Loading theory "Draft.SubstitutionTemplates"
val templateLemmas =
   [("Substitution.subst_noop", "?\<Gamma>[?y::h=?y] = ?\<Gamma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0),
       template_var 1)),
    ("Substitution.subst_noop", "?e[?y::=?y] = ?e",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0),
       template_var 1)),
    ("Substitution.bn_subst", "domA ?\<Gamma>[?y::h=?z] = domA ?\<Gamma>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Substitution.thunks_subst",
     "thunks ?\<Gamma>[?y::h=?x] = thunks ?\<Gamma>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Substitution.isLam_subst", "isLam ?e[?x::=?y] = isLam ?e",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Substitution.isVal_subst", "isVal ?e[?x::=?y] = isVal ?e",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Substitution.subst_nil_iff",
     "(?\<Gamma>[?x::h=?z] = []) = (?\<Gamma> = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 2, template_hole 0))),
    ("Substitution.subst_heap_fresh_noop",
     "atom ?x \<sharp> ?\<Gamma> ==> ?\<Gamma>[?x::h=?y] = ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Substitution.subst_fresh_noop",
     "atom ?x \<sharp> ?e ==> ?e[?x::=?y] = ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Substitution.subst_heap_delete",
     "(delete ?x ?\<Gamma>)[?y::h=?z] = delete ?x ?\<Gamma>[?y::h=?z]",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Substitution.subst_is_fresh",
     "atom ?y \<sharp> ?z ==> atom ?y \<sharp> ?e[?y::=?z]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Substitution.subst_subst_back",
     "atom ?x \<sharp> ?e ==> ?e[?y::=?x][?x::=?y] = ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Substitution.map_of_subst",
     "map_of ?\<Gamma>[?x::h=?y] ?k =
      map_option (%e. e[?x::=?y]) (map_of ?\<Gamma> ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Substitution.fv_subst_subset",
     "fv ?e[?y::=?x] <= fv ?e - {?y} Un {?x}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Substitution.subst_swap_same",
     "atom ?x \<sharp> ?e ==>
      (?x \<leftrightarrow> ?y) \<bullet> ?e = ?e[?y::=?x]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Substitution.supp_subst",
     "supp ?e[?y::=?x] <= supp ?e - {atom ?y} Un {atom ?x}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Substitution.subst_is_fresh",
     "[| atom ?y \<sharp> ?z; atom ` domA ?\<Gamma> \<sharp>* ?y |]
      ==> atom ?y \<sharp> ?\<Gamma>[?y::h=?z]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 5),
                  template_app (template_hole 2, template_var 0))),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 5, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Substitution.fv_subst_eq",
     "fv ?e[?y::=?x] = fv ?e - {?y} Un (if ?y : fv ?e then {?x} else {})",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 7, template_var 2)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_hole 7, template_var 2))),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_hole 2)))),
    ("Substitution.mapCollect_subst",
     "mapCollect ?e (map_of ?\<Gamma>[?x::h=?y]) =
      {?e k v[?x::=?y] |k\<mapsto>v\<in>map_of ?\<Gamma>}",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 2, template_var 2)))),
    ("Substitution.subst_pres_fresh",
     "[| atom ?x \<sharp> ?e | ?x = ?y; atom ?x \<sharp> ?z |]
      ==> atom ?x \<sharp> ?e[?y::=?z]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 3)),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Substitution.fv_subst_int2",
     "[| ?x ~: ?S; ?y ~: ?S |] ==> ?S Int fv ?e[?y::=?x] = ?S Int fv ?e",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 3))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 0))))),
    ("Substitution.fv_subst_int",
     "[| ?x ~: ?S; ?y ~: ?S |] ==> fv ?e[?y::=?x] Int ?S = fv ?e Int ?S",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 3))),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 2)))),
    ("Substitution.nonrec_subst",
     "[| atom ` domA ?\<Gamma> \<sharp>* ?x;
         atom ` domA ?\<Gamma> \<sharp>* ?y |]
      ==> nonrec ?\<Gamma>[?x::h=?y] = nonrec ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 2))),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 2)))),
    ("Substitution.supp_subst_eq",
     "supp ?e[?y::=?x] =
      supp ?e - {atom ?y} Un (if atom ?y : supp ?e then {atom ?x} else {})",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_hole 2))),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 8, template_var 2))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2)),
           template_hole 2)))),
    ("Substitution.subst_SmartLet",
     "atom ` domA ?\<Gamma> \<sharp>* (?y, ?z) ==>
      (SmartLet ?\<Gamma> ?body)[?y::=?z] =
      SmartLet ?\<Gamma>[?y::h=?z] ?body[?y::=?z]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app (template_hole 5, template_var 3))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1))))),
    ("Substitution.subst_eq_Cons",
     "(?\<Gamma>[?x::h=?y] = (?x', ?e) # ?\<Delta>) =
      (EX e' \<Gamma>'.
          ?\<Gamma> = (?x', e') # \<Gamma>' &
          e'[?x::=?y] = ?e & \<Gamma>'[?x::h=?y] = ?\<Delta>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Substitution.subst_let_be",
     "[| atom ?x' \<sharp> ?y; atom ?x' \<sharp> ?x |]
      ==> (let ?x' be ?e in ?exp )[?y::=?x] =
          let ?x' be ?e[?y::=?x] in ?exp[?y::=?x] ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 1)),
                     template_hole 0)),
                 template_var 0)),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 3),
                     template_var 2))),
               template_hole 0)),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 3),
             template_var 2)))))]:
   (string * thm * template) list
### theory "Draft.SubstitutionTemplates"
### 0.710s elapsed time, 1.421s cpu time, 0.792s GC time
val it = (): unit
