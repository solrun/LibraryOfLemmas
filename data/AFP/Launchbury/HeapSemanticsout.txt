Loading theory "Draft.Pointwise" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.HOLCF-Utils")
Loading theory "Draft.AList-Utils" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.EvalHeap")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.HeapSemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.HeapSemanticsTemplates" via "Draft.ExtrEqs")
### Ignoring duplicate rewrite rule:
### (PROP ?P ==> True) == True
### Ignoring duplicate rewrite rule:
### (False ==> ?P) == True
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Pointwise"
### 0.041s elapsed time, 0.199s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.HeapSemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.154s elapsed time, 0.632s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.HeapSemanticsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.AList-Utils"
### 0.164s elapsed time, 0.677s cpu time, 0.042s GC time
Loading theory "Draft.Nominal-Utils" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.AList-Utils-Nominal")
### theory "HOL-Library.Set_Algebras"
### 0.234s elapsed time, 0.919s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.HeapSemanticsTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Nominal-Utils"
### 0.408s elapsed time, 1.604s cpu time, 0.147s GC time
Loading theory "Draft.AList-Utils-Nominal" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.837s elapsed time, 3.310s cpu time, 0.323s GC time
Loading theory "Draft.HOLCF-Join" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.Env" via "Draft.HOLCF-Join-Classes")
class cpo = po +
  assumes "cpo": "!!S. chain S ==> EX x. range S <<| x"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
class pcpo = cpo +
  assumes "least": "EX x. ALL y. x << y"
### theory "Draft.HOLCF-Join"
### 0.310s elapsed time, 1.086s cpu time, 0.555s GC time
Loading theory "Draft.HOLCF-Join-Classes" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.EvalHeap" via "Draft.Env")
Found termination order: "size <*mlex*> {}"
### theory "Draft.AList-Utils-Nominal"
### 0.649s elapsed time, 2.405s cpu time, 0.734s GC time
Loading theory "Draft.HOLCF-Utils" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.EvalHeap")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.970s elapsed time, 3.658s cpu time, 0.881s GC time
class Finite_Join_cpo = cpo +
  assumes "all_compatible": "!!x y. compatible x y"
instantiation
  fun :: (type, Finite_Join_cpo) Finite_Join_cpo
instantiation
  cfun :: (cpo, Finite_Join_cpo) Finite_Join_cpo
Found termination order: "size <*mlex*> {}"
class is_unit = type +
  fixes unit :: "'a"
  assumes "is_unit": "!!x. x = unit"
instantiation
  unit :: is_unit
  unit_unit == unit :: unit
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
class Join_cpo = cpo +
  assumes "exists_lub": "!!S. EX u. S <<| u"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.HOLCF-Utils"
### 0.385s elapsed time, 1.208s cpu time, 0.087s GC time
Loading theory "Draft.Nominal-HOLCF" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.HasESem")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.HOLCF-Join-Classes"
### 0.646s elapsed time, 2.057s cpu time, 0.214s GC time
Loading theory "Draft.Env" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.EvalHeap")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Env"
### 0.219s elapsed time, 0.669s cpu time, 0.078s GC time
Loading theory "Draft.Env-HOLCF" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics" via "Draft.HasESem")
Loading theory "Draft.EvalHeap" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics")
Found termination order: "size <*mlex*> {}"
class cont_pt = pt + cpo +
  assumes "perm_cont": "!!p. cont (permute p)"
### theory "HOL-Library.Tree"
### 2.077s elapsed time, 7.357s cpu time, 1.186s GC time
Loading theory "Draft.Templates" (required by "Draft.HeapSemanticsTemplates" via "Draft.ExtrEqs")
### Ignoring duplicate rewrite rule:
### cont ?f1 ==> cont (%x. ?f1 x f|` ?S1) == True
### theory "Draft.Env-HOLCF"
### 0.268s elapsed time, 1.075s cpu time, 0.057s GC time
Loading theory "Draft.Iterative" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.273s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.HeapSemanticsTemplates")
locale iterative
  fixes \<rho> :: "'a => 'b"
    and e1 :: "('a => 'b) -> 'a => 'b"
    and e2 :: "('a => 'b) -> 'b"
    and S :: "'a set"
    and x :: "'a"
  assumes "iterative S x"
### theory "Draft.Iterative"
### 0.125s elapsed time, 0.483s cpu time, 0.090s GC time
instantiation
  cfun :: (cont_pt, cont_pt) pt
  permute_cfun == permute :: perm => ('a -> 'b) => 'a -> 'b
instantiation
  u :: (cont_pt) pt
  permute_u == permute :: perm => 'a\<^sub>\<bottom> => 'a\<^sub>\<bottom>
instantiation
  lift :: (pt) pt
  permute_lift == permute :: perm => 'a lift => 'a lift
### theory "Draft.Nominal-HOLCF"
### 1.241s elapsed time, 4.168s cpu time, 0.400s GC time
Loading theory "Draft.Env-Nominal" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics")
Loading theory "Draft.HasESem" (required by "Draft.HeapSemanticsTemplates" via "Draft.HeapSemantics")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.706s elapsed time, 2.408s cpu time, 0.253s GC time
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.EvalHeap"
### 1.098s elapsed time, 3.862s cpu time, 0.309s GC time
locale has_ESem
  fixes ESem :: "'exp => ('var => 'value) -> 'value"
locale has_ignore_fresh_ESem
  fixes ESem :: "'a => ('b => 'c) -> 'c"
  assumes "has_ignore_fresh_ESem ESem"
### theory "Draft.HasESem"
### 0.364s elapsed time, 1.185s cpu time, 0.139s GC time
### theory "Draft.Env-Nominal"
### 0.474s elapsed time, 1.298s cpu time, 0.139s GC time
Loading theory "Draft.HeapSemantics" (required by "Draft.HeapSemanticsTemplates")
locale has_ESem
  fixes ESem :: "'exp => ('var => 'value) -> 'value"
locale has_ignore_fresh_ESem
  fixes ESem :: "'a => ('b => 'c) -> 'c"
  assumes "has_ignore_fresh_ESem ESem"
### theory "Draft.HeapSemantics"
### 0.782s elapsed time, 0.814s cpu time, 0.046s GC time
Loading theory "Draft.HeapSemanticsTemplates"
val templateLemmas =
   [("HeapSemantics.HSem_eqvt",
     "?\<pi> \<bullet> has_ESem.HSem ?ESem ?\<Gamma> =
      has_ESem.HSem (?\<pi> \<bullet> ?ESem) (?\<pi> \<bullet> ?\<Gamma>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("HeapSemantics.env_restr_override_onI",
     "- ?S2.0 <= ?S ==>
      ?\<rho>1.0 f|` ?S ++\<^bsub>?S2.0\<^esub> ?\<rho>2.0 =
      ?\<rho>1.0 ++\<^bsub>?S2.0\<^esub> ?\<rho>2.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 3)))),
    ("HeapSemantics.HSem_cong",
     "[| !!e. e : snd ` set ?heap2.0 ==> ?ESem1.0 e = ?ESem2.0 e;
         ?heap1.0 = ?heap2.0 |]
      ==> has_ESem.HSem ?ESem1.0 ?heap1.0 =
          has_ESem.HSem ?ESem2.0 ?heap2.0",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_equation (template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("HeapSemantics.parallel_HSem_ind_different_ESem",
     "[| adm (%\<rho>'. ?P (fst \<rho>') (snd \<rho>'));
         ?P \<bottom> \<bottom>;
         !!y z.
            ?P y z ==>
            ?P (?\<rho> ++\<^bsub>domA
                                   ?h\<^esub> evalHeap ?h
         (%e. ?ESem1.0 e$y))
             (?\<rho>2.0 ++\<^bsub>domA
                                    ?h2.0\<^esub> evalHeap ?h2.0
             (%e. ?ESem2.0 e$z)) |]
      ==> ?P (has_ESem.HSem ?ESem1.0 ?h$?\<rho>)
           (has_ESem.HSem ?ESem2.0 ?h2.0$?\<rho>2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_var 6, template_hole 15),
              template_hole 14)
            ),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_var 5)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 2))
           )))]:
   (string * thm * template) list
### theory "Draft.HeapSemanticsTemplates"
### 0.579s elapsed time, 0.773s cpu time, 0.122s GC time
val it = (): unit
