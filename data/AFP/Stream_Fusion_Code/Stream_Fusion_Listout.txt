Loading theory "Draft.Stream_Fusion" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.Stream_Fusion_List")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature STREAM_FUSION =
  sig
    val add_fusion_rule: thm -> Context.generic -> Context.generic
    val add_unstream: string -> Context.generic -> Context.generic
    val del_fusion_rule: thm -> Context.generic -> Context.generic
    val del_unstream: string -> Context.generic -> Context.generic
    val fusion_add: attribute
    val fusion_conv: Proof.context -> conv
    val fusion_del: attribute
    val fusion_simproc: Proof.context -> cterm -> thm option
    val get_conspats: Proof.context -> (term * thm) list
    val get_rules: Proof.context -> thm list
    val get_unstream: Proof.context -> string list
    val match_consumer: Proof.context -> term -> bool
    val trace: bool Config.T
  end
structure Stream_Fusion: STREAM_FUSION
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Stream_Fusion"
### 0.119s elapsed time, 0.499s cpu time, 0.044s GC time
Loading theory "Draft.Stream_Fusion_List" (required by "Draft.Stream_Fusion_ListMoreTemplates")
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.516s cpu time, 0.044s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.201s elapsed time, 0.825s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.347s elapsed time, 1.390s cpu time, 0.160s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for inductive predicate(s) "terminates_onp"
  Proving monotonicity ...
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 1.032s elapsed time, 3.904s cpu time, 0.968s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.082s elapsed time, 3.928s cpu time, 0.852s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class ord = type +
  fixes less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.028s elapsed time, 6.399s cpu time, 1.232s GC time
Loading theory "Draft.Templates" (required by "Draft.Stream_Fusion_ListMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.077s elapsed time, 0.190s cpu time, 0.083s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Stream_Fusion_ListMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.760s elapsed time, 1.841s cpu time, 0.764s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Stream_Fusion_List"
### 4.208s elapsed time, 9.938s cpu time, 2.302s GC time
Loading theory "Draft.Stream_Fusion_ListMoreTemplates"
val templateLemmas =
   [("Stream_Fusion_List.terminates_upto_raw", "terminates (upto_raw ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Stream_Fusion_List.terminates_replicate_raw",
     "terminates (replicate_raw ?a)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Stream_Fusion_List.terminates_upt_raw", "terminates (upt_raw ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Stream_Fusion_List.unstream_stream", "unstream stream ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Stream_Fusion_List.terminates_on_conv_dom_terminates_within",
     "terminates_on ?g = dom (terminates_within ?g)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Stream_Fusion_List.terminates_drop_raw",
     "terminates ?g ==> terminates (drop_raw ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_take_raw",
     "terminates ?g ==> terminates (take_raw ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_tl_raw",
     "terminates ?g ==> terminates (tl_raw ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_butlast_raw",
     "terminates ?g ==> terminates (butlast_raw ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_concat_raw",
     "terminates ?g ==> terminates (concat_raw ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_onp_terminates_on_eq",
     "terminates_onp ?g = (%x. x : terminates_on ?g)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("Stream_Fusion_List.unstream_replicate_prod",
     "unstream (replicate_prod ?x) ?n = replicate ?n ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Stream_Fusion_List.unstream_upto_prod",
     "unstream (upto_prod ?n) ?m = [?m..?n]",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Stream_Fusion_List.unstream_upt_prod",
     "unstream (upt_prod ?n) ?m = [?m..<?n]",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Stream_Fusion_List.terminatesD",
     "terminates ?g ==> ?s : terminates_on ?g",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_filter_raw",
     "terminates ?g ==> terminates (filter_raw ?P ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_removeAll_raw",
     "terminates ?g ==> terminates (removeAll_raw ?b ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_takeWhile_raw",
     "terminates ?g ==> terminates (takeWhile_raw ?P ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_map_raw",
     "terminates ?g ==> terminates (map_raw ?f ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_maps_raw",
     "terminates ?g ==> terminates (maps_raw ?f ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_list_update_raw",
     "terminates ?g ==> terminates (list_update_raw ?g ?b)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_Cons_raw",
     "terminates ?g ==> terminates (Cons_raw ?x ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_dropWhile_raw",
     "terminates ?g ==> terminates (dropWhile_raw ?P ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.terminates_remove1_raw",
     "terminates ?g ==> terminates (remove1_raw ?b ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stream_Fusion_List.unstream_last_cons",
     "last_cons ?g None ?s = last (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_gen_length",
     "gen_length_cons ?g 0 ?s = length (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_gen_length2",
     "gen_length_cons ?g ?n ?s = List.gen_length ?n (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_tl_trans_True",
     "unstream (tl_trans ?g) (True, ?s) = unstream ?g ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stream_Fusion_List.unstream_splice_trans_Left_only",
     "unstream (splice_trans ?g ?h) (Left_only ?sg) = unstream ?g ?sg",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Stream_Fusion_List.unstream_splice_trans_Right_only",
     "unstream (splice_trans ?g ?h) (Right_only ?sh) = unstream ?h ?sh",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stream_Fusion_List.terminates_fix_gen_raw",
     "(!!x. terminates (?g x)) ==> terminates (fix_gen_raw ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Stream_Fusion_List.terminatesI",
     "(!!s. s : terminates_on ?g) ==> terminates ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Stream_Fusion_List.unstream_filter_trans",
     "unstream (filter_trans ?P ?g) ?s = filter ?P (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_map_trans",
     "unstream (map_trans ?f ?g) ?s = map ?f (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_removeAll_trans",
     "unstream (removeAll_trans ?b ?g) ?s = removeAll ?b (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_takeWhile_trans",
     "unstream (takeWhile_trans ?P ?g) ?s = takeWhile ?P (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_fix_gen",
     "unstream (fix_gen ?g) (?a, ?s) = unstream (?g ?a) ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_var 0))),
    ("Stream_Fusion_List.unstream_tl_trans",
     "unstream (tl_trans ?g) (False, ?s) = tl (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_concat_trans",
     "unstream (concat_trans ?g) ([], ?s) = concat (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_butlast_trans",
     "unstream (butlast_trans ?g) (None, ?s) = butlast (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_append_trans_Inr",
     "unstream (append_trans ?g ?h ?sh) (Inr ?sh') = unstream ?h ?sh'",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Stream_Fusion_List.unstream_lift_update_trans_None",
     "unstream (list_update_trans ?g ?b) (0, ?s) = unstream ?g ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Stream_Fusion_List.unstream_Cons_trans_False",
     "unstream (Cons_trans ?x ?g) (False, ?s) = unstream ?g ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stream_Fusion_List.unstream_dropWhile_trans_False",
     "unstream (dropWhile_trans ?P ?g) (False, ?s) = unstream ?g ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stream_Fusion_List.unstream_remove1_trans_False",
     "unstream (remove1_trans ?b ?g) (False, ?s) = unstream ?g ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stream_Fusion_List.unstream_drop_trans",
     "unstream (drop_trans ?g) (?n, ?s) = drop ?n (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_take_trans",
     "unstream (take_trans ?g) (?n, ?s) = take ?n (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.terminates_on_append_raw_Inr",
     "terminates ?h ==>
      Inr ?sh : terminates_on (append_raw ?g ?h ?sh_start)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 0)))
           ))),
    ("Stream_Fusion_List.unstream_force_None",
     "force ?g ?s = None ==> unstream ?g ?s = []",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Stream_Fusion_List.unstream_simps",
     "generator ?g ?s = Done ==> unstream ?g ?s = []",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Stream_Fusion_List.force_simps",
     "generator ?g ?s = Done ==> force ?g ?s = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Stream_Fusion_List.terminates_splice_raw",
     "[| terminates ?g; terminates ?h |] ==> terminates (splice_raw ?g ?h)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_zip_raw",
     "[| terminates ?g; terminates ?h |] ==> terminates (zip_raw ?g ?h)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Stream_Fusion_List.unstream_concat_trans_gen",
     "unstream (concat_trans ?g) (?xs, ?s) = ?xs @ concat (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Stream_Fusion_List.unstream_Cons_trans",
     "unstream (Cons_trans ?x ?g) (True, ?s) = ?x # unstream ?g ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_dropWhile_trans",
     "unstream (dropWhile_trans ?P ?g) (True, ?s) =
      dropWhile ?P (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_remove1_trans",
     "unstream (remove1_trans ?b ?g) (True, ?s) =
      remove1 ?b (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.terminates_append_raw",
     "[| terminates ?g; terminates ?h |]
      ==> terminates (append_raw ?g ?h ?sh_start)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Stream_Fusion_List.terminates_flatten_raw",
     "[| terminates ?g''; terminates ?g |]
      ==> terminates (flatten_raw ?f ?g'' ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Stream_Fusion_List.unstream_butlast_trans_Some",
     "unstream (butlast_trans ?g) (Some ?b, ?s) =
      butlast (?b # unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Stream_Fusion_List.unstream_append_trans",
     "unstream (append_trans ?g ?h ?sh) (Inl ?sg) =
      unstream ?g ?sg @ unstream ?h ?sh",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Stream_Fusion_List.unstream_splice_trans",
     "unstream (splice_trans ?g ?h) (splice_state.Left ?sg ?sh) =
      splice (unstream ?g ?sg) (unstream ?h ?sh)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_list_update_trans",
     "unstream (list_update_trans ?g ?b) (Suc ?n, ?s) = (unstream ?g ?s)
      [?n := ?b]",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 1),
         template_var 2))),
    ("Stream_Fusion_List.unstream_simps",
     "generator ?g ?s = Skip ?s' ==> unstream ?g ?s = unstream ?g ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.force_simps",
     "generator ?g ?s = Skip ?s' ==> force ?g ?s = force ?g ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.hd_cons_code",
     "hd_cons ?g ?s =
      (case generator ?g ?s of Skip s' => hd_cons ?g s' | Yield a s' => a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.null_cons_code",
     "null_cons ?g ?s =
      (case generator ?g ?s of Done => True | Skip s' => null_cons ?g s'
       | Yield x xa => False)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_maps_trans",
     "unstream (maps_trans ?f ?g) (?s, None) =
      List.maps ((%(x, y). unstream x y) o ?f) (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_zip_trans",
     "unstream (zip_trans ?g ?h) (?sg, ?sh, None) =
      zip (unstream ?g ?sg) (unstream ?h ?sh)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.force_simps",
     "generator ?g ?s = Yield ?x ?s' ==> force ?g ?s = Some (?x, ?s')",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Stream_Fusion_List.unstream_flatten",
     "unstream (flatten ?f ?g'' ?g) (?s, None) =
      List.maps (%s'. unstream ?g'' (?f s')) (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_simps",
     "generator ?g ?s = Yield ?x ?s' ==>
      unstream ?g ?s = ?x # unstream ?g ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Stream_Fusion_List.unstream_force_Some",
     "force ?g ?s = Some (?x, ?s') ==>
      unstream ?g ?s = ?x # unstream ?g ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Stream_Fusion_List.sum_list_cons_code",
     "sum_list_cons ?g ?s =
      (case generator ?g ?s of Done => 0::?'a
       | Skip s' => sum_list_cons ?g s'
       | Yield a s' => a + sum_list_cons ?g s')",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.length_cons_code",
     "length_cons ?g ?s =
      (case generator ?g ?s of Done => 0 | Skip s' => length_cons ?g s'
       | Yield a s' => 1 + length_cons ?g s')",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.map_option_mono",
     "monotone option.le_fun option_ord ?f ==>
      monotone option.le_fun option_ord (%x. map_option ?g (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))),
                template_app (template_hole 5, template_hole 4)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_hole 6))),
               template_app (template_hole 2, template_hole 1)),
             t_empty)
           ))),
    ("Stream_Fusion_List.terminates_on_maps_raw_Some",
     "(?s, None) : terminates_on (maps_raw ?f ?g) ==>
      (?s, Some (?g'', ?s'')) : terminates_on (maps_raw ?f ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_hole 4)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)))
           ))),
    ("Stream_Fusion_List.gen_length_cons_code",
     "gen_length_cons ?g ?n ?s =
      (case generator ?g ?s of Done => ?n
       | Skip s' => gen_length_cons ?g ?n s'
       | Yield a s' => gen_length_cons ?g (Suc ?n) s')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_flatten_Some",
     "unstream (flatten ?f ?g'' ?g) (?s, Some ?s') =
      unstream ?g'' ?s' @ unstream (flatten ?f ?g'' ?g) (?s, None)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 0))))),
    ("Stream_Fusion_List.unstream_maps_trans_Some",
     "unstream (maps_trans ?f ?g) (?s, Some (?g'', ?s'')) =
      unstream ?g'' ?s'' @ unstream (maps_trans ?f ?g) (?s, None)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 4),
             template_var 3)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_hole 0))))),
    ("Stream_Fusion_List.last_cons_code",
     "last_cons ?g ?x ?s =
      (case generator ?g ?s of Done => the ?x
       | Skip s' => last_cons ?g ?x s'
       | Yield a s' => last_cons ?g (Some a) s')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.list_all_cons_code",
     "list_all_cons ?g ?P ?s =
      (case generator ?g ?s of Done => True
       | Skip s' => list_all_cons ?g ?P s'
       | Yield x s' => ?P x & list_all_cons ?g ?P s')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Stream_Fusion_List.unstream_flatten_fix_gen",
     "unstream (flatten (%s. (s, ?f s)) (fix_gen ?g'') ?g) (?s, None) =
      List.maps (%s'. unstream (?g'' s') (?f s')) (unstream ?g ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 5, template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Stream_Fusion_List.nth_cons_code",
     "nth_cons ?g ?s ?n =
      (case generator ?g ?s of Done => undefined ?n
       | Skip s' => nth_cons ?g s' ?n
       | Yield x s' => case ?n of 0 => x | Suc n' => nth_cons ?g s' n')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Stream_Fusion_List.foldl_cons_code",
     "foldl_cons ?g ?f ?z ?s =
      (case generator ?g ?s of Done => ?z
       | Skip s' => foldl_cons ?g ?f ?z s'
       | Yield a s' => foldl_cons ?g ?f (?f ?z a) s')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Stream_Fusion_List.fold_cons_code",
     "fold_cons ?g ?f ?z ?s =
      (case generator ?g ?s of Done => ?z | Skip s' => fold_cons ?g ?f ?z s'
       | Yield a s' => fold_cons ?g ?f (?f a ?z) s')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Stream_Fusion_List.foldr_cons_code",
     "foldr_cons ?g ?f ?z ?s =
      (case generator ?g ?s of Done => ?z
       | Skip s' => foldr_cons ?g ?f ?z s'
       | Yield a s' => ?f a (foldr_cons ?g ?f ?z s'))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Stream_Fusion_List.list_all2_cons_code",
     "list_all2_cons ?g ?h ?P ?sg ?sh =
      (case generator ?g ?sg of Done => null_cons ?h ?sh
       | Skip sg' => list_all2_cons ?g ?h ?P sg' ?sh
       | Yield a sg' => list_all2_cons1 ?g ?h ?P a sg' ?sh)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)),
             t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 1)))),
    ("Stream_Fusion_List.list_all2_cons1_code",
     "list_all2_cons1 ?g ?h ?P ?x ?sg' ?sh =
      (case generator ?h ?sh of Done => False
       | Skip sh' => list_all2_cons1 ?g ?h ?P ?x ?sg' sh'
       | Yield y sh' => ?P ?x y & list_all2_cons ?g ?h ?P ?sg' sh')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3), t_empty),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 0)))),
    ("Stream_Fusion_List.wf_terminates",
     "[| wf ?R; !!s s'. ?g s = Skip s' ==> (s', s) : ?R;
         !!s s' a. ?g s = Yield a s' ==> (s', s) : ?R |]
      ==> terminates ?g",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Stream_Fusion_List.terminates_wfE",
     "[| terminates ?g;
         !!R. [| wf R; !!s s'. ?g s = Skip s' ==> (s', s) : R;
                 !!s a s'. ?g s = Yield a s' ==> (s', s) : R |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Stream_Fusion_ListMoreTemplates"
### 0.325s elapsed time, 0.521s cpu time, 0.071s GC time
val it = (): unit
