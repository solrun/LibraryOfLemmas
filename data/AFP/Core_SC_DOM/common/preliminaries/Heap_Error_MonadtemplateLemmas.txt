   [("Heap_Error_Monad.get_heap_ok", "?h \<turnstile> ok get_heap",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Heap_Error_Monad.get_pure", "pure get_heap ?h",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Heap_Error_Monad.noop_pure", "pure noop ?h",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Heap_Error_Monad.reflp_preserved_f", "reflp (preserved ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Heap_Error_Monad.transp_preserved_f", "transp (preserved ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Heap_Error_Monad.return_ok", "?h \<turnstile> ok return ?x",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Heap_Error_Monad.error_pure", "pure (error ?e) ?h",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Heap_Error_Monad.return_pure", "pure (return ?x) ?h",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Heap_Error_Monad.return_id", "?f >>= return = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Heap_Error_Monad.noop_reads", "reads {} noop ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.error_returns_error",
     "?h \<turnstile> error ?e \<rightarrow>\<^sub>e ?e",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Heap_Error_Monad.return_heap_returns_result",
     "?h \<turnstile> return_heap ?h' \<rightarrow>\<^sub>r ()",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Heap_Error_Monad.return_returns_error",
     "~ ?h \<turnstile> return ?x \<rightarrow>\<^sub>e ?e",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_var 0)
             )
         )),
    ("Heap_Error_Monad.error_returns_heap",
     "~ ?h \<turnstile> error ?e \<rightarrow>\<^sub>h ?h'",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_var 0)
             )
         )),
    ("Heap_Error_Monad.error_returns_result",
     "~ ?h \<turnstile> error ?e \<rightarrow>\<^sub>r ?y",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1)),
               template_var 0)
             )
         )),
    ("Heap_Error_Monad.error_reads", "reads {} (error ?e) ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.return_reads", "reads {} (return ?x) ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.writes_error", "writes ?S (error ?e) ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.error_bind", "error ?e >>= ?g = error ?e",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Heap_Error_Monad.return_bind", "return ?x >>= ?g = ?g ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Heap_Error_Monad.writes_singleton",
     "writes (all_args ?f) (?f ?a) ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_app (template_var 3, template_var 2)),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.writes_singleton2", "writes {?f} ?f ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0)),
               template_var 2),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.noop_returns_heap",
     "?h \<turnstile> noop \<rightarrow>\<^sub>h ?h' = (?h = ?h')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Heap_Error_Monad.reads_singleton", "reads {preserved ?f} ?f ?h ?h'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_hole 0)),
               template_var 2),
             template_var 1),
           template_var 0)
         )),
    ("Heap_Error_Monad.return_returns_heap",
     "?h \<turnstile> return ?x \<rightarrow>\<^sub>h ?h' = (?h = ?h')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Heap_Error_Monad.return_heap_E",
     "?h \<turnstile> return_heap ?h' \<rightarrow>\<^sub>h ?h'' =
      (?h'' = ?h')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Heap_Error_Monad.return_returns_result",
     "?h \<turnstile> return ?x \<rightarrow>\<^sub>r ?y = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Heap_Error_Monad.is_OK_returns_heap_I",
     "?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h' ==>
      ?h \<turnstile> ok ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Heap_Error_Monad.get_heap_E",
     "?h \<turnstile> get_heap \<rightarrow>\<^sub>r ?x ==> ?x = ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Heap_Error_Monad.is_OK_returns_result_I",
     "?h \<turnstile> ?f \<rightarrow>\<^sub>r ?y ==>
      ?h \<turnstile> ok ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Heap_Error_Monad.writes_pure", "pure ?f ?h ==> writes ?S ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Heap_Error_Monad.writes_not_ok",
     "~ ?h \<turnstile> ok ?f ==> writes ?S ?f ?h ?h'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 3),
             template_var 0)
           ))),
    ("Heap_Error_Monad.get_heap_is_OK",
     "?h \<turnstile> ok (get_heap >>= ?f) = ?h \<turnstile> ok ?f ?h",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0), t_empty)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Heap_Error_Monad.returns_result_select_result",
     "?h \<turnstile> ok ?f ==>
      ?h \<turnstile> ?f
      \<rightarrow>\<^sub>r |?h \<turnstile> ?f|\<^sub>r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Heap_Error_Monad.bind_returns_error_I",
     "?h \<turnstile> ?f \<rightarrow>\<^sub>e ?e ==>
      ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>e ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Heap_Error_Monad.select_result_I2",
     "?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x ==>
      |?h \<turnstile> ?f|\<^sub>r = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Heap_Error_Monad.bind_assoc",
     "?f >>= ?g >>= ?h = ?f >>= (%x. ?g x >>= ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Heap_Error_Monad.filter_M_subset",
     "?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys ==>
      set ?ys <= set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Heap_Error_Monad.get_heap_returns_heap",
     "?h \<turnstile> get_heap >>= ?f \<rightarrow>\<^sub>h ?h'' =
      ?h \<turnstile> ?f ?h \<rightarrow>\<^sub>h ?h''",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_hole 0), t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_var 1, template_var 2)),
         template_var 0))),
    ("Heap_Error_Monad.get_heap_returns_result",
     "?h \<turnstile> get_heap >>= ?f \<rightarrow>\<^sub>r ?x =
      ?h \<turnstile> ?f ?h \<rightarrow>\<^sub>r ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_hole 0), t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_var 1, template_var 2)),
         template_var 0))),
    ("Heap_Error_Monad.writes_union_left_I",
     "writes ?S ?f ?h ?h' ==> writes (?S Un ?S') ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Heap_Error_Monad.writes_union_right_I",
     "writes ?S' ?f ?h ?h' ==> writes (?S Un ?S') ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Heap_Error_Monad.pure_pure",
     "[| ?h \<turnstile> ok ?f; pure ?f ?h |]
      ==> ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 1)
           ))),
    ("Heap_Error_Monad.pure_returns_heap_eq",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h'; pure ?f ?h |]
      ==> ?h = ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Heap_Error_Monad.filter_M_distinct",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         distinct ?xs |]
      ==> distinct ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Heap_Error_Monad.returns_heap_eq",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h'' |]
      ==> ?h' = ?h''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Heap_Error_Monad.returns_result_eq",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?y;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?y' |]
      ==> ?y = ?y'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Heap_Error_Monad.fold_M_pure_I",
     "(!!d x. pure (?f d x) ?h) ==> pure (fold_M ?f ?d ?xs) ?h",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("Heap_Error_Monad.is_OK_returns_heap_E",
     "[| ?h \<turnstile> ok ?f;
         !!h'. ?h \<turnstile> ?f \<rightarrow>\<^sub>h h' ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.is_OK_returns_result_E",
     "[| ?h \<turnstile> ok ?f;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.writes_subset",
     "[| writes ?S ?f ?h ?h'; ?S <= ?S' |] ==> writes ?S' ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Heap_Error_Monad.pure_forall_M_I",
     "(!!x. x : set ?xs ==> pure (?P x) ?h) ==> pure (forall_M ?P ?xs) ?h",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.filter_M_pure_I",
     "(!!x. x : set ?xs ==> pure (?P x) ?h) ==> pure (filter_M ?P ?xs) ?h",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.map_M_pure_I",
     "(!!x. x : set ?xs ==> pure (?f x) ?h) ==> pure (map_M ?f ?xs) ?h",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_returns_error_eq",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>e ?e;
         ?h \<turnstile> ?g \<rightarrow>\<^sub>e ?e |]
      ==> ?h \<turnstile> ?f = ?h \<turnstile> ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Heap_Error_Monad.pure_eq_iff",
     "(ALL h' x.
          ?h \<turnstile> ?f \<rightarrow>\<^sub>r x -->
          ?h \<turnstile> ?f \<rightarrow>\<^sub>h h' --> ?h = h') =
      pure ?f ?h",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Heap_Error_Monad.map_filter_M_pure",
     "(!!x h. x : set ?xs ==> pure (?f x) h) ==>
      pure (map_filter_M ?f ?xs) ?h",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.iterate_M_concat",
     "[| ?h \<turnstile> iterate_M ?xs \<rightarrow>\<^sub>h ?h';
         ?h' \<turnstile> iterate_M ?ys \<rightarrow>\<^sub>h ?h'' |]
      ==> ?h \<turnstile> iterate_M (?xs @ ?ys) \<rightarrow>\<^sub>h ?h''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_var 0)
           ))),
    ("Heap_Error_Monad.select_result_eq",
     "(!!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x =
            ?h' \<turnstile> ?f \<rightarrow>\<^sub>r x) ==>
      |?h \<turnstile> ?f|\<^sub>r = |?h' \<turnstile> ?f|\<^sub>r",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Heap_Error_Monad.select_result_I",
     "[| ?h \<turnstile> ok ?f;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==> ?P x |]
      ==> ?P |?h \<turnstile> ?f|\<^sub>r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Heap_Error_Monad.execute_bind_simp",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h' |]
      ==> ?h \<turnstile> ?f >>= ?g = ?h' \<turnstile> ?g ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_var 0, template_var 2))))),
    ("Heap_Error_Monad.reads_insert_writes_set_right",
     "[| reflp ?getter; transp ?getter; reads ?S ?f ?h ?h' |]
      ==> reads (insert ?getter ?S) ?f ?h ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 4)),
        template_predicate (template_app (template_hole 2, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_is_OK_I",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         ?h' \<turnstile> ok ?g ?x |]
      ==> ?h \<turnstile> ok (?f >>= ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_var 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Heap_Error_Monad.return_result_heap_code",
     "?h \<turnstile> ?p
      \<rightarrow>\<^sub>r ?r \<rightarrow>\<^sub>h ?h' =
      (case ?h \<turnstile> ?p of Inl x => False
       | Inr (r', h'') => ?r = r' & ?h' = h'')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_app (template_hole 6, t_empty), t_empty),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("Heap_Error_Monad.bind_pure_I",
     "[| pure ?f ?h;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              pure (?g x) ?h |]
      ==> pure (?f >>= ?g) ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Heap_Error_Monad.bind_returns_error_I2",
     "[| pure ?f ?h; ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?g ?x \<rightarrow>\<^sub>e ?e |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>e ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_app (template_var 1, template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_pure_returns_result_I",
     "[| pure ?f ?h; ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?g ?x \<rightarrow>\<^sub>r ?y |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_app (template_var 1, template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_returns_heap_E3",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>h ?h';
         ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x; pure ?f ?h |]
      ==> ?h \<turnstile> ?g ?x \<rightarrow>\<^sub>h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_app (template_var 2, template_var 0)),
             template_var 1)
           ))),
    ("Heap_Error_Monad.bind_returns_result_E3",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x; pure ?f ?h |]
      ==> ?h \<turnstile> ?g ?x \<rightarrow>\<^sub>r ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_app (template_var 2, template_var 0)),
             template_var 1)
           ))),
    ("Heap_Error_Monad.filter_M_empty_I",
     "[| !!x. pure (?P x) ?h;
         ALL x:set ?xs. ?h \<turnstile> ?P x \<rightarrow>\<^sub>r False |]
      ==> ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r []",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Heap_Error_Monad.bind_returns_error_I3",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         ?h' \<turnstile> ?g ?x \<rightarrow>\<^sub>e ?e |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>e ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_var 1, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_returns_heap_I",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         ?h' \<turnstile> ?g ?x \<rightarrow>\<^sub>h ?h'' |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>h ?h''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_var 1, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_returns_result_I",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         ?h' \<turnstile> ?g ?x \<rightarrow>\<^sub>r ?y |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_var 1, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.reads_insert_writes_set_left",
     "[| ALL P:?S. reflp P & transp P; reads {?getter} ?f ?h ?h' |]
      ==> reads (insert ?getter ?S) ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_hole 0)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 4)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_returns_heap_I2",
     "[| ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              ?h' \<turnstile> ?g x \<rightarrow>\<^sub>h ?h'' |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>h ?h''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.writes_union_minus_split",
     "[| writes (?S - ?S2.0) ?f ?h ?h'; writes (?S' - ?S2.0) ?f ?h ?h' |]
      ==> writes (?S Un ?S' - ?S2.0) ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 0),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 0)),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Heap_Error_Monad.writes_bind_pure",
     "[| pure ?f ?h;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              writes ?S (?g x) ?h ?h' |]
      ==> writes ?S (?f >>= ?g) ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 3),
             template_var 0)
           ))),
    ("Heap_Error_Monad.select_result_E",
     "[| ?P |?h \<turnstile> ?f|\<^sub>r; ?h \<turnstile> ok ?f;
         !!x. [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x; ?P x |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.bind_is_OK_pure_I",
     "[| pure ?f ?h; ?h \<turnstile> ok ?f;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              ?h \<turnstile> ok ?g x |]
      ==> ?h \<turnstile> ok (?f >>= ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Heap_Error_Monad.reads_subset",
     "[| reads ?S ?f ?h ?h'; ALL P:?S' - ?S. reflp P & transp P;
         ?S <= ?S' |]
      ==> reads ?S' ?f ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 4)),
              t_empty)
            ),
        template_inequation (less_equals, template_var 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Heap_Error_Monad.bind_pure_returns_result_I2",
     "[| pure ?f ?h; ?h \<turnstile> ok ?f;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              ?h \<turnstile> ?g x \<rightarrow>\<^sub>r ?y |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.bind_is_OK_E2",
     "[| ?h \<turnstile> ok (?f >>= ?g);
         ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         !!h'. [| ?h \<turnstile> ?f \<rightarrow>\<^sub>h h';
                  h' \<turnstile> ok ?g ?x |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.preserved_code",
     "preserved ?f ?h ?h' =
      (?h \<turnstile> ok ?f &
       ?h' \<turnstile> ok ?f &
       |?h \<turnstile> ?f|\<^sub>r = |?h' \<turnstile> ?f|\<^sub>r |
       ~ ?h \<turnstile> ok ?f & ~ ?h' \<turnstile> ok ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 2))),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 2)))))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 2))),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 2))))
           ))),
    ("Heap_Error_Monad.bind_is_OK_I2",
     "[| ?h \<turnstile> ok ?f;
         !!x h'.
            [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
               ?h \<turnstile> ?f \<rightarrow>\<^sub>h h' |]
            ==> h' \<turnstile> ok ?g x |]
      ==> ?h \<turnstile> ok (?f >>= ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Heap_Error_Monad.bind_returns_heap_E2",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>h ?h'; pure ?f ?h;
         !!x. [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
                 ?h \<turnstile> ?g x \<rightarrow>\<^sub>h ?h' |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.bind_returns_result_E2",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y; pure ?f ?h;
         !!x. [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
                 ?h \<turnstile> ?g x \<rightarrow>\<^sub>r ?y |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 4)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.filter_M_not_more_elements",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         !!x. x : set ?xs ==> pure (?P x) ?h; ?x : set ?ys |]
      ==> ?x : set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Heap_Error_Monad.filter_ex1",
     "[| EX! x. x : set ?xs & ?P x; ?P ?x; ?x : set ?xs; distinct ?xs |]
      ==> filter ?P ?xs = [?x]",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Heap_Error_Monad.bind_is_OK_E",
     "[| ?h \<turnstile> ok (?f >>= ?g);
         !!x h'.
            [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
               ?h \<turnstile> ?f \<rightarrow>\<^sub>h h';
               h' \<turnstile> ok ?g x |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.map_M_ok_I",
     "[| !!x. x : set ?xs ==> ?h \<turnstile> ok ?f x;
         !!x. x : set ?xs ==> pure (?f x) ?h |]
      ==> ?h \<turnstile> ok map_M ?f ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Heap_Error_Monad.filter_M_is_OK_I",
     "[| !!x. x : set ?xs ==> ?h \<turnstile> ok ?P x;
         !!x. x : set ?xs ==> pure (?P x) ?h |]
      ==> ?h \<turnstile> ok filter_M ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Heap_Error_Monad.bind_returns_heap_E4",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>h ?h'';
         ?h \<turnstile> ?f \<rightarrow>\<^sub>h ?h';
         !!x. [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
                 ?h' \<turnstile> ?g x \<rightarrow>\<^sub>h ?h'' |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.bind_returns_result_E4",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y;
         ?h \<turnstile> ?f \<rightarrow>\<^sub>r ?x;
         !!h'. [| ?h \<turnstile> ?f \<rightarrow>\<^sub>h h';
                  h' \<turnstile> ?g ?x \<rightarrow>\<^sub>r ?y |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.bind_returns_heap_E",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>h ?h'';
         !!x h'.
            [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
               ?h \<turnstile> ?f \<rightarrow>\<^sub>h h';
               h' \<turnstile> ?g x \<rightarrow>\<^sub>h ?h'' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.bind_returns_result_E",
     "[| ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y;
         !!x h'.
            [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
               ?h \<turnstile> ?f \<rightarrow>\<^sub>h h';
               h' \<turnstile> ?g x \<rightarrow>\<^sub>r ?y |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.filter_M_holds_for_result",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         ?x : set ?ys; !!x h. x : set ?xs ==> pure (?P x) h |]
      ==> ?h \<turnstile> ?P ?x \<rightarrow>\<^sub>r True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_var 3, template_var 0)),
             template_hole 0)
           ))),
    ("Heap_Error_Monad.bind_case_cong",
     "[| ?x = ?x'; !!a. ?x = Some a ==> ?f a ?h = ?f' a ?h |]
      ==> (case ?x of None => ?g | Some a => ?f a) ?h =
          (case ?x' of None => ?g | Some a => ?f' a) ?h",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0), t_empty),
             template_var 5),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0), t_empty),
             template_var 4),
           template_var 2)))),
    ("Heap_Error_Monad.filter_M_filter2",
     "[| !!x. x : set ?xs ==> pure (?P x) ?h & ?h \<turnstile> ok ?P x;
         filter (%x. |?h \<turnstile> ?P x|\<^sub>r) ?xs = ?ys |]
      ==> ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 4, t_empty), template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 0)
           ))),
    ("Heap_Error_Monad.writes_bind",
     "[| !!h2. writes ?S ?f ?h h2;
         !!x h2.
            [| ?h \<turnstile> ?f \<rightarrow>\<^sub>r x;
               ?h \<turnstile> ?f \<rightarrow>\<^sub>h h2 |]
            ==> writes ?S (?g x) h2 ?h' |]
      ==> writes ?S (?f >>= ?g) ?h ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 2),
             template_var 0)
           ))),
    ("Heap_Error_Monad.reads_bind_pure",
     "[| pure ?f ?h; pure ?f ?h'; reads ?S ?f ?h ?h';
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              reads ?S (?g x) ?h ?h' |]
      ==> reads ?S (?f >>= ?g) ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0)),
               template_var 3),
             template_var 2)
           ))),
    ("Heap_Error_Monad.filter_M_filter",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         !!x. x : set ?xs ==> pure (?P x) ?h |]
      ==> (ALL x:set ?xs. ?h \<turnstile> ok ?P x) &
          ?ys = filter (%x. |?h \<turnstile> ?P x|\<^sub>r) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 8, template_var 1)),
                 t_empty)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, t_empty), template_var 1)))
           ))),
    ("Heap_Error_Monad.filter_M_in_result_if_ok",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         !!h x. x : set ?xs ==> pure (?P x) h; ?x : set ?xs;
         ?h \<turnstile> ?P ?x \<rightarrow>\<^sub>r True |]
      ==> ?x : set ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_app (template_var 3, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 1))
           ))),
    ("Heap_Error_Monad.writes_small_big",
     "[| writes ?SW ?setter ?h ?h';
         ?h \<turnstile> ?setter \<rightarrow>\<^sub>h ?h';
         !!h h' w.
            [| w : ?SW; h \<turnstile> w \<rightarrow>\<^sub>h h' |]
            ==> ?P h h';
         reflp ?P; transp ?P |]
      ==> ?P ?h ?h'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Heap_Error_Monad.bind_cong",
     "[| ?h \<turnstile> ?f1.0 = ?h \<turnstile> ?f2.0;
         !!y h'.
            [| ?h \<turnstile> ?f1.0 \<rightarrow>\<^sub>r y;
               ?h \<turnstile> ?f1.0 \<rightarrow>\<^sub>h h' |]
            ==> h' \<turnstile> ?g1.0 y = h' \<turnstile> ?g2.0 y |]
      ==> ?h \<turnstile> ?f1.0 >>= ?g1.0 =
          ?h \<turnstile> ?f2.0 >>= ?g2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Heap_Error_Monad.reads_writes_preserved",
     "[| reads ?SR ?getter ?h ?h'; writes ?SW ?setter ?h ?h';
         ?h \<turnstile> ?setter \<rightarrow>\<^sub>h ?h';
         !!h h'.
            ALL w:?SW.
               h \<turnstile> w \<rightarrow>\<^sub>h h' -->
               (ALL r:?SR. r h h') |]
      ==> ?h \<turnstile> ?getter \<rightarrow>\<^sub>r ?x =
          ?h' \<turnstile> ?getter \<rightarrow>\<^sub>r ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 1),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 5),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 5),
           template_var 0)))),
    ("Heap_Error_Monad.map_M_pure_E2",
     "[| ?h \<turnstile> map_M ?g ?xs \<rightarrow>\<^sub>r ?ys;
         ?y : set ?ys; !!x h. x : set ?xs ==> pure (?g x) h;
         !!x. [| ?h \<turnstile> ?g x \<rightarrow>\<^sub>r ?y;
                 x : set ?xs |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 5),
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.map_M_pure_E",
     "[| ?h \<turnstile> map_M ?g ?xs \<rightarrow>\<^sub>r ?ys;
         ?x : set ?xs; !!x h. x : set ?xs ==> pure (?g x) h;
         !!y. [| ?h \<turnstile> ?g ?x \<rightarrow>\<^sub>r y;
                 y : set ?ys |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.map_filter_M_pure_E",
     "[| ?h \<turnstile> map_filter_M ?f ?xs \<rightarrow>\<^sub>r ?ys;
         ?y : set ?ys; !!x h. x : set ?xs ==> pure (?f x) h;
         !!x. [| ?h \<turnstile> ?f x \<rightarrow>\<^sub>r Some ?y;
                 x : set ?xs |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Heap_Error_Monad.reads_writes_separate_forwards",
     "[| reads ?SR ?getter ?h ?h'; writes ?SW ?setter ?h ?h';
         ?h \<turnstile> ?setter \<rightarrow>\<^sub>h ?h';
         ?h \<turnstile> ?getter \<rightarrow>\<^sub>r ?x;
         !!h h'.
            ALL w:?SW.
               h \<turnstile> w \<rightarrow>\<^sub>h h' -->
               (ALL r:?SR. r h h') |]
      ==> ?h' \<turnstile> ?getter \<rightarrow>\<^sub>r ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 5),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 5),
             template_var 0)
           ))),
    ("Heap_Error_Monad.reads_writes_separate_backwards",
     "[| reads ?SR ?getter ?h ?h'; writes ?SW ?setter ?h ?h';
         ?h \<turnstile> ?setter \<rightarrow>\<^sub>h ?h';
         ?h' \<turnstile> ?getter \<rightarrow>\<^sub>r ?x;
         !!h h'.
            ALL w:?SW.
               h \<turnstile> w \<rightarrow>\<^sub>h h' -->
               (ALL r:?SR. r h h') |]
      ==> ?h \<turnstile> ?getter \<rightarrow>\<^sub>r ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 5),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 5),
             template_var 0)
           ))),
    ("Heap_Error_Monad.filter_M_eq",
     "[| !!x. pure (?P x) ?h; !!x. pure (?P x) ?h';
         !!b x.
            x : set ?xs ==>
            ?h \<turnstile> ?P x \<rightarrow>\<^sub>r b =
            ?h' \<turnstile> ?P x \<rightarrow>\<^sub>r b |]
      ==> ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys =
          ?h' \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           template_var 0)))),
    ("Heap_Error_Monad.bind_cong_2",
     "[| pure ?f ?h; pure ?f ?h';
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x =
              ?h' \<turnstile> ?f \<rightarrow>\<^sub>r x;
         !!x. ?h \<turnstile> ?f \<rightarrow>\<^sub>r x ==>
              ?h \<turnstile> ?g x \<rightarrow>\<^sub>r ?y =
              ?h' \<turnstile> ?g x \<rightarrow>\<^sub>r ?y' |]
      ==> ?h \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y =
          ?h' \<turnstile> ?f >>= ?g \<rightarrow>\<^sub>r ?y'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 0)))),
    ("Heap_Error_Monad.filter_M_subset_2",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         ?h' \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys';
         !!x. pure (?P x) ?h; !!x. pure (?P x) ?h';
         ALL b.
            ALL x:set ?xs.
               ?h \<turnstile> ?P x \<rightarrow>\<^sub>r True -->
               ?h' \<turnstile> ?P x \<rightarrow>\<^sub>r b --> b |]
      ==> set ?ys <= set ?ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 2),
         template_app (template_hole 4, template_var 0)))),
    ("Heap_Error_Monad.filter_M_ex1",
     "[| ?h \<turnstile> filter_M ?P ?xs \<rightarrow>\<^sub>r ?ys;
         ?x : set ?xs;
         EX! x.
            x : set ?xs & ?h \<turnstile> ?P x \<rightarrow>\<^sub>r True;
         !!x. x : set ?xs ==> pure (?P x) ?h; distinct ?xs;
         ?h \<turnstile> ?P ?x \<rightarrow>\<^sub>r True |]
      ==> ?ys = [?x]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 10, template_var 2))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_app (template_var 3, template_var 0)),
              template_hole 6)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Heap_Error_Monad.filter_M_reads",
     "[| !!x. x : set ?xs ==> pure (?P x) ?h;
         !!x. x : set ?xs ==> pure (?P x) ?h';
         !!x. x : set ?xs ==> reads ?S (?P x) ?h ?h';
         ALL P:?S. reflp P & transp P |]
      ==> reads ?S (filter_M ?P ?xs) ?h ?h'",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 4)),
               template_var 2),
             template_var 1)
           )))]
