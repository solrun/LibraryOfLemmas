Loading theory "Draft.FSext" (required by "Draft.SCFsMoreTemplates" via "Draft.SCFs" via "Draft.RPRs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.FSext"
### 0.133s elapsed time, 0.552s cpu time, 0.041s GC time
Loading theory "Draft.RPRs" (required by "Draft.SCFsMoreTemplates" via "Draft.SCFs")
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.574s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.224s elapsed time, 0.916s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.RPRs"
### 0.162s elapsed time, 0.635s cpu time, 0.082s GC time
Loading theory "Draft.SCFs" (required by "Draft.SCFsMoreTemplates")
### theory "HOL-Library.Nat_Bijection"
### 0.321s elapsed time, 1.293s cpu time, 0.123s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.SCFs"
### 0.208s elapsed time, 0.821s cpu time, 0.071s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.759s elapsed time, 2.557s cpu time, 0.277s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.006s elapsed time, 3.093s cpu time, 0.768s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.825s elapsed time, 4.511s cpu time, 0.914s GC time
Loading theory "Draft.Templates" (required by "Draft.SCFsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SCFsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.459s elapsed time, 0.503s cpu time, 0.052s GC time
Loading theory "Draft.SCFsMoreTemplates"
val templateLemmas =
   [("SCFs.trans_imp_quasi_trans", "trans ?r ==> quasi_trans ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SCFs.dictator_individual", "dictator ?scf ?A ?Is ?j ==> ?j : ?Is",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("SCFs.decisive_coalitionD",
     "decisive ?scf ?A ?Is ?C ?x ?y ==> ?C <= ?Is",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 2, template_var 3))),
    ("SCFs.semidecisive_coalitionD",
     "semidecisive ?scf ?A ?Is ?C ?x ?y ==> ?C <= ?Is",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 2, template_var 3))),
    ("SCFs.rpr_choiceFn", "[| finite ?A; rpr ?A ?r |] ==> choiceFn ?A ?r",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SCFs.d_imp_sd",
     "decisive ?scf ?A ?Is ?C ?x ?y ==> semidecisive ?scf ?A ?Is ?C ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("SCFs.SCF_completeD",
     "[| SCF ?scf ?A ?Is ?Pcond; ?Pcond ?A ?Is ?P |]
      ==> RPRs.complete ?A (?scf ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app (template_var 4, template_var 0))
           ))),
    ("SCFs.SWF_rpr",
     "[| SWF ?swf ?A ?Is ?Pcond; ?Pcond ?A ?Is ?P |] ==> rpr ?A (?swf ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app (template_var 4, template_var 0))
           ))),
    ("SCFs.d_refl",
     "[| ?C <= ?Is; ?C ~= {} |] ==> decisive ?scf ?A ?Is ?C ?x ?x",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_negation
         (template_equation (template_var 4, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 4),
               template_var 0),
             template_var 0)
           ))),
    ("SCFs.sd_refl",
     "[| ?C <= ?Is; ?C ~= {} |] ==> semidecisive ?scf ?A ?Is ?C ?x ?x",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_negation
         (template_equation (template_var 4, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 4),
               template_var 0),
             template_var 0)
           ))),
    ("SCFs.SCFI",
     "(!!P. ?Pcond ?A ?Is P ==> RPRs.complete ?A (?scf P)) ==>
      SCF ?scf ?A ?Is ?Pcond",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1),
             template_var 3)
           ))),
    ("SCFs.quasi_transD",
     "[| ?x \<^bsub>?r\<^esub>\<prec> ?y; ?y \<^bsub>?r\<^esub>\<prec> ?z;
         quasi_trans ?r |]
      ==> ?x \<^bsub>?r\<^esub>\<prec> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("SCFs.r_c_qt_imp_cf",
     "[| finite ?A; RPRs.complete ?A ?r; quasi_trans ?r; refl_on ?A ?r |]
      ==> choiceFn ?A ?r",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SCFs.choiceFnI",
     "(!!A'. [| A' <= ?A; A' ~= {} |] ==> choiceSet A' ?r ~= {}) ==>
      choiceFn ?A ?r",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SCFs.choiceSetI",
     "[| ?x : ?A; !!y. y : ?A ==> ?x \<^bsub>?r\<^esub>\<preceq> y |]
      ==> ?x : choiceSet ?A ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SCFs.quasi_transI",
     "(!!x y z.
          [| x \<^bsub>?r\<^esub>\<prec> y; y \<^bsub>?r\<^esub>\<prec> z |]
          ==> x \<^bsub>?r\<^esub>\<prec> z) ==>
      quasi_trans ?r",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SCFs.dictatorI",
     "[| ?j : ?Is;
         !!x y. [| x : ?A; y : ?A |] ==> decisive ?scf ?A ?Is {?j} x y |]
      ==> dictator ?scf ?A ?Is ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 2),
             template_var 3)
           ))),
    ("SCFs.decisiveI",
     "[| ?C <= ?Is;
         !!P. [| profile ?A ?Is P;
                 !!i. i : ?C ==> ?x \<^bsub>(P i)\<^esub>\<prec> ?y |]
              ==> ?x \<^bsub>(?scf P)\<^esub>\<prec> ?y |]
      ==> decisive ?scf ?A ?Is ?C ?x ?y",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 4),
                 template_var 5),
               template_var 2),
             template_var 1)
           ))),
    ("SCFs.weak_paretoD",
     "[| weak_pareto ?scf ?A ?Is ?Pcond; ?Pcond ?A ?Is ?P; ?x : ?A; ?y : ?A;
         !!i. i : ?Is ==> ?x \<^bsub>(?P i)\<^esub>\<prec> ?y |]
      ==> ?x \<^bsub>(?scf ?P)\<^esub>\<prec> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 3, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 6, template_var 2)),
             template_var 0)
           ))),
    ("SCFs.weak_paretoI",
     "(!!P x y.
          [| ?Pcond ?A ?Is P; x : ?A; y : ?A;
             !!i. i : ?Is ==> x \<^bsub>(P i)\<^esub>\<prec> y |]
          ==> x \<^bsub>(?scf P)\<^esub>\<prec> y) ==>
      weak_pareto ?scf ?A ?Is ?Pcond",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1),
             template_var 3)
           ))),
    ("SCFs.semidecisiveI",
     "[| ?C <= ?Is;
         !!P. [| profile ?A ?Is P;
                 !!i. i : ?C ==> ?x \<^bsub>(P i)\<^esub>\<prec> ?y;
                 !!i. i : ?Is - ?C ==> ?y \<^bsub>(P i)\<^esub>\<prec> ?x |]
              ==> ?x \<^bsub>(?scf P)\<^esub>\<prec> ?y |]
      ==> semidecisive ?scf ?A ?Is ?C ?x ?y",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 4),
                 template_var 5),
               template_var 2),
             template_var 1)
           ))),
    ("SCFs.iiaI",
     "(!!P P' x y.
          [| profile ?S ?Is P; profile ?S ?Is P'; x : ?S; y : ?S;
             !!i. i : ?Is ==>
                  (x \<^bsub>(P i)\<^esub>\<preceq> y) =
                  (x \<^bsub>(P' i)\<^esub>\<preceq> y) &
                  (y \<^bsub>(P i)\<^esub>\<preceq> x) =
                  (y \<^bsub>(P' i)\<^esub>\<preceq> x) |]
          ==> (x \<^bsub>(?swf P)\<^esub>\<preceq> y) =
              (x \<^bsub>(?swf P')\<^esub>\<preceq> y)) ==>
      iia ?swf ?S ?Is",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("SCFs.iiaE",
     "[| iia ?swf ?S ?Is; {?x, ?y} <= ?S; ?a : {?x, ?y}; ?b : {?x, ?y};
         !!i a b.
            [| a : {?x, ?y}; b : {?x, ?y}; i : ?Is |]
            ==> (a \<^bsub>(?P' i)\<^esub>\<preceq> b) =
                (a \<^bsub>(?P i)\<^esub>\<preceq> b);
         profile ?S ?Is ?P; profile ?S ?Is ?P' |]
      ==> (?a \<^bsub>(?swf ?P)\<^esub>\<preceq> ?b) =
          (?a \<^bsub>(?swf ?P')\<^esub>\<preceq> ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 5),
            template_app
             (template_app (template_hole 9, template_var 4),
              template_hole 8)),
          template_var 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_hole 8)))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 7),
                template_var 6),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 7),
                template_var 6),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app (template_var 8, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app (template_var 8, template_var 1)))))]:
   (string * thm * template) list
### theory "Draft.SCFsMoreTemplates"
### 0.315s elapsed time, 0.450s cpu time, 0.069s GC time
val it = (): unit
