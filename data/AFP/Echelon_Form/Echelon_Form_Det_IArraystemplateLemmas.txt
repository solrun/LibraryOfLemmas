   [("Echelon_Form_Det_IArrays.matrix_to_iarray_det_euclidean_ring",
     "det ?A = det_iarrays_rings (matrix_to_iarray ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_charpoly",
     "Cayley_Hamilton_Compatible.charpoly ?A =
      charpoly_iarrays (matrix_to_iarray ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_mat2matofpoly",
     "matrix_to_iarray (mat2matofpoly ?A) =
      mat2matofpoly_iarrays (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Echelon_Form_Det_IArrays.fst_echelon_form_of_det",
     "fst (echelon_form_of_det ?A ?bezout) =
      fst (echelon_form_of_det_iarrays (matrix_to_iarray ?A) ?bezout)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Echelon_Form_Det_IArrays.vec_to_iarray_minus",
     "vec_to_iarray (?a - ?b) = vec_to_iarray ?a - vec_to_iarray ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_minus",
     "matrix_to_iarray (?A - ?B) =
      matrix_to_iarray ?A - matrix_to_iarray ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_echelon_form_of_det",
     "matrix_to_iarray (snd (echelon_form_of_det ?A ?bezout)) =
      snd (echelon_form_of_det_iarrays (matrix_to_iarray ?A) ?bezout)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 0)))),
    ("Echelon_Form_Det_IArrays.fst_snd_echelon_form_of_column_k_le_nrows",
     "?i <= nrows ?A ==>
      snd (echelon_form_of_column_k ?bezout (?A, ?i) ?k) <= nrows ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 0)),
         template_app (template_hole 3, template_var 2)))),
    ("Echelon_Form_Det_IArrays.snd_snd_snd_foldl_echelon_form_of_column_k_det_iarrays",
     "snd (snd (snd (foldl echelon_form_of_column_k_det_iarrays
                      (?n, ?A, 0, ?bezout) [0..<?k]))) =
      ?bezout",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 1)))),
               template_app
                (template_app (template_hole 0, template_hole 1),
                 template_var 0))))),
       template_var 1)),
    ("Echelon_Form_Det_IArrays.snd_echelon_form_of_column_k_det",
     "snd (echelon_form_of_column_k_det_iarrays (?det_P, ?A, ?i, ?bezout)
            ?k) =
      echelon_form_of_column_k_iarrays (?A, ?i, ?bezout) ?k",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Echelon_Form_Det_IArrays.fst_snd_snd_echelon_form_of_column_k_det_le_nrows",
     "?i <= nrows ?A ==>
      snd (snd (echelon_form_of_column_k_det ?bezout (?n, ?A, ?i) ?k))
      <= nrows ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 5, template_var 3))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 4))),
               template_var 0))),
         template_app (template_hole 5, template_var 3)))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_fst_echelon_form_of_upt_k_det",
     "?k < ncols ?A ==>
      fst (echelon_form_of_upt_k_det ?bezout (1::?'a, ?A) ?k) =
      fst (echelon_form_of_upt_k_det_iarrays (1::?'a, matrix_to_iarray ?A)
            ?k ?bezout)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 1)),
             template_var 2)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 4),
                   template_app (template_hole 0, template_var 1))),
               template_var 2),
             template_var 0))))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_snd_echelon_form_of_upt_k_det",
     "?k < ncols ?A ==>
      matrix_to_iarray
       (snd (echelon_form_of_upt_k_det ?bezout (1::?'a, ?A) ?k)) =
      snd (echelon_form_of_upt_k_det_iarrays (1::?'a, matrix_to_iarray ?A)
            ?k ?bezout)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1)),
               template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 3),
                   template_app (template_hole 7, template_var 1))),
               template_var 2),
             template_var 0))))),
    ("Echelon_Form_Det_IArrays.vector_all_zero_from_index3",
     "(EX m>?i. ?A $ m $ ?k ~= (0::?'a)) =
      (~ vector_all_zero_from_index
          (mod_type_class.to_nat ?i + 1, vec_to_iarray (column ?k ?A)))",
     template_equation
      (template_app (template_hole 14, t_empty),
       template_app
        (template_hole 11,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)),
                 template_hole 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))))))),
    ("Echelon_Form_Det_IArrays.det_echelon_form_of_euclidean_iarrays",
     "det ?A =
      (let A' = echelon_form_of_det_iarrays (matrix_to_iarray ?A)
                 euclid_ext2
       in (1::?'a) div fst A' *
          (PROD i<-[0..<
                    nrows_iarray
                     (matrix_to_iarray ?A)]. snd A' !! i !! i))",
     template_equation
      (template_app (template_hole 16, template_var 0),
       template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 14,
               template_app (template_hole 13, template_var 0)),
             template_hole 12)),
         t_empty))),
    ("Echelon_Form_Det_IArrays.fst_matrix_to_iarray_echelon_form_of_column_k_det",
     "[| ?k < ncols ?A; ?i <= nrows ?A |]
      ==> fst (echelon_form_of_column_k_det ?bezout (?det_P, ?A, ?i) ?k) =
          fst (echelon_form_of_column_k_det_iarrays
                (?det_P, matrix_to_iarray ?A, ?i, ?bezout) ?k)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 13, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 11, template_var 3))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2))),
             template_var 4)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)))),
             template_var 4))))),
    ("Echelon_Form_Det_IArrays.fst_snd_snd_echelon_form_of_column_k_det",
     "[| ?k < ncols ?A; ?i <= nrows ?A |]
      ==> snd (snd (echelon_form_of_column_k_det ?bezout (?n, ?A, ?i) ?k)) =
          fst (snd (snd (echelon_form_of_column_k_det_iarrays
                          (?n, matrix_to_iarray ?A, ?i, ?bezout) ?k)))",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 16, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 14, template_var 3))],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 1),
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_var 2))),
               template_var 4))),
         template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1)))),
                 template_var 4))))))),
    ("Echelon_Form_Det_IArrays.matrix_to_iarray_echelon_form_of_column_k_det",
     "[| ?k < ncols ?A; ?i <= nrows ?A |]
      ==> matrix_to_iarray
           (fst (snd (echelon_form_of_column_k_det ?bezout (?n, ?A, ?i)
                       ?k))) =
          fst (snd (echelon_form_of_column_k_det_iarrays
                     (?n, matrix_to_iarray ?A, ?i, ?bezout) ?k))",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 15, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 13, template_var 3))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 1),
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 2))),
                 template_var 4)))),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 11, template_var 3)),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)))),
               template_var 4))))))]
