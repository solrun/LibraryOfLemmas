   [("Cayley_Hamilton_Compatible.det_sq_matrix_eq",
     "Square_Matrix.det (from_vec ?A) = det ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cayley_Hamilton_Compatible.charpoly_eq",
     "Cayley_Hamilton_Compatible.charpoly ?A =
      Cayley_Hamilton.charpoly (from_vec ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Cayley_Hamilton_Compatible.to_vec_diag", "to_vec (diag ?x) = mat ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Cayley_Hamilton_Compatible.invertible_iff_is_unit",
     "invertible ?A = (det ?A dvd (1::?'a))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Cayley_Hamilton_Compatible.to_vec_eq_iff",
     "(to_vec ?M = to_vec ?N) = (?M = ?N)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Cayley_Hamilton_Compatible.to_vec_matrix_scalar_mult",
     "to_vec (?x *\<^sub>S ?A) = ?x *k to_vec ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton_Compatible.to_vec_matrix_matrix_mult",
     "to_vec (?A * ?B) = to_vec ?A ** to_vec ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cayley_Hamilton_Compatible.minorM_eq",
     "minorM ?M ?i ?j = to_vec (minor (from_vec ?M) ?i ?j)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0))))]
