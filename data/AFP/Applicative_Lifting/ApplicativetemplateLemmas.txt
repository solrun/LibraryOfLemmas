   [("Applicative.Domainp_eq_on", "Domainp (eq_on ?X) = (%x. x : ?X)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Applicative.uncurry_pair",
     "??.Applicative.cuncurry ?f (??.Applicative.cpair ?x ?y) = ?f ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("Applicative.UNIV_E", "[| ?x : UNIV; ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            ),
        template_predicate (template_var 0)],
       template_predicate (template_var 0))),
    ("Applicative.arg1_cong", "?x = ?y ==> ?f ?x ?z = ?f ?y ?z",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_var 1, template_var 3), template_var 0),
         template_app
          (template_app (template_var 1, template_var 2),
           template_var 0)))),
    ("Applicative.rel_fun_eq_onI",
     "(!!x. x : ?A ==> ?R (?f x) (?g x)) ==> rel_fun (eq_on ?A) ?R ?f ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Applicative.rel_fun_refl_eq_onp",
     "(!!z. z : ?f ` ?X ==> ?A z z) ==> rel_fun (eq_on ?X) ?A ?f ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 0),
               template_var 2),
             template_var 2)
           ))),
    ("Applicative.eq_onE",
     "[| eq_on ?X ?a ?b; [| ?b : ?X; ?a = ?b |] ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)
               )],
          template_implication
           ([template_equation (template_var 2, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Applicative.rel_fun_map_fun2",
     "rel_fun (eq_on (range ?h)) ?A ?f ?g ==>
      rel_fun (BNF_Def.Grp UNIV ?h)^--1 ?A ?f (map_fun ?h id ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 3),
                        template_hole 5))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 5),
                       template_var 3))),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_hole 0),
               template_var 0))
           )))]
