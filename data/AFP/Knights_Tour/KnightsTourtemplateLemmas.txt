   [("KnightsTour.finite_row_exec", "finite (row_exec ?m)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("KnightsTour.board_finite", "finite (board ?n ?m)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("KnightsTour.card_row_exec", "card (row_exec ?m) = ?m",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("KnightsTour.transpose_board2",
     "transpose_board (transpose_board ?b) = ?b",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("KnightsTour.transpose2",
     "transpose_square (transpose_square ?s\<^sub>i) = ?s\<^sub>i",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("KnightsTour.length_mirror1", "length ?ps = length (mirror1 ?ps)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.length_mirror2", "length ?ps = length (mirror2 ?ps)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.transpose_length",
     "length ?ps = length (KnightsTour.transpose ?ps)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.length_mirror1_aux",
     "length ?ps = length (mirror1_aux ?n ?ps)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("KnightsTour.length_mirror2_aux",
     "length ?ps = length (mirror2_aux ?n ?ps)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("KnightsTour.board_exec_correct", "board ?n ?m = board_exec ?n ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KnightsTour.circuit_checker_correct",
     "circuit_checker ?b ?ps = knights_circuit ?b ?ps",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KnightsTour.path_checker_correct",
     "path_checker ?b ?ps = knights_path ?b ?ps",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KnightsTour.step_checker_correct",
     "step_checker ?s\<^sub>i ?s\<^sub>j =
      valid_step ?s\<^sub>i ?s\<^sub>j",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KnightsTour.knights_path_distinct",
     "knights_path ?b ?ps ==> distinct ?ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.card_board", "card (board ?n ?m) = ?n * ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KnightsTour.transpose_board",
     "transpose_board (board ?n ?m) = board ?m ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("KnightsTour.mirror1_nil", "(?ps = []) = (mirror1 ?ps = [])",
     template_bimplication
      (template_equation (template_var 0, template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("KnightsTour.mirror2_nil", "(?ps = []) = (mirror2 ?ps = [])",
     template_bimplication
      (template_equation (template_var 0, template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("KnightsTour.transpose_nil",
     "(?ps = []) = (KnightsTour.transpose ?ps = [])",
     template_bimplication
      (template_equation (template_var 0, template_hole 1),
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("KnightsTour.finite_board_exec_aux",
     "finite ?M ==> finite (board_exec_aux ?n ?M)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KnightsTour.valid_step_rev",
     "valid_step ?s\<^sub>i ?s\<^sub>j ==>
      valid_step ?s\<^sub>j ?s\<^sub>i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("KnightsTour.trans_path_length",
     "length ?ps = length (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps)",
     template_equation
      (template_app (template_hole 2, template_var 2),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("KnightsTour.mirror1_aux_nil",
     "(?ps = []) = (mirror1_aux ?m ?ps = [])",
     template_bimplication
      (template_equation (template_var 1, template_hole 1),
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_hole 1))),
    ("KnightsTour.mirror2_aux_nil",
     "(?ps = []) = (mirror2_aux ?m ?ps = [])",
     template_bimplication
      (template_equation (template_var 1, template_hole 1),
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_hole 1))),
    ("KnightsTour.transpose_valid_step",
     "valid_step ?s\<^sub>i ?s\<^sub>j =
      valid_step (transpose_square ?s\<^sub>i)
       (transpose_square ?s\<^sub>j)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.transpose_board_correct",
     "(?s\<^sub>i : ?b) =
      (transpose_square ?s\<^sub>i : transpose_board ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.drop_transpose",
     "drop ?k (KnightsTour.transpose ?ps) =
      KnightsTour.transpose (drop ?k ?ps)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("KnightsTour.take_transpose",
     "take ?k (KnightsTour.transpose ?ps) =
      KnightsTour.transpose (take ?k ?ps)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("KnightsTour.knights_circuit_rev",
     "knights_circuit ?b ?ps ==> knights_circuit ?b (rev ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.knights_path_board_non_empty",
     "knights_path ?b ?ps ==> ?b ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("KnightsTour.knights_path_non_nil",
     "knights_path ?b ?ps ==> ?ps ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("KnightsTour.knights_path_set_eq",
     "knights_path ?b ?ps ==> set ?ps = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("KnightsTour.knights_path_rev",
     "knights_path ?b ?ps ==> knights_path ?b (rev ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.knights_path_o_iI",
     "knights_path ?x ?xa ==> pred.eval (knights_path_o_i ?xa) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("KnightsTour.valid_step_neq",
     "valid_step ?s\<^sub>i ?s\<^sub>j ==> ?s\<^sub>i ~= ?s\<^sub>j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("KnightsTour.transpose_union",
     "transpose_board (?b\<^sub>1 Un ?b\<^sub>2) =
      transpose_board ?b\<^sub>1 Un transpose_board ?b\<^sub>2",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("KnightsTour.insert_transpose_board",
     "insert (transpose_square ?s\<^sub>i) (transpose_board ?b) =
      transpose_board (insert ?s\<^sub>i ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("KnightsTour.knights_path_length",
     "knights_path ?b ?ps ==> length ?ps = card ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("KnightsTour.transpose_knights_path'",
     "knights_path ?b ?ps ==>
      knights_path (transpose_board ?b) (KnightsTour.transpose ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.knights_path_i_iI",
     "knights_path ?x ?xa ==> pred.eval (knights_path_i_i ?x ?xa) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("KnightsTour.valid_step_mirror1",
     "valid_step ?s\<^sub>i ?s\<^sub>j =
      valid_step (mirror1_square ?n ?s\<^sub>i)
       (mirror1_square ?n ?s\<^sub>j)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("KnightsTour.valid_step_mirror2",
     "valid_step ?s\<^sub>i ?s\<^sub>j =
      valid_step (mirror2_square ?m ?s\<^sub>i)
       (mirror2_square ?m ?s\<^sub>j)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("KnightsTour.knights_circuit_exec_simp",
     "knights_circuit (board ?n ?m) ?ps =
      circuit_checker (board_exec ?n ?m) ?ps",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("KnightsTour.knights_path_exec_simp",
     "knights_path (board ?n ?m) ?ps = path_checker (board_exec ?n ?m) ?ps",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("KnightsTour.len1_hd_last", "length ?xs = 1 ==> hd ?xs = last ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("KnightsTour.mirror1_board_id",
     "mirror1_board (int ?n + 1) (board ?n ?m) = board ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("KnightsTour.mirror2_board_id",
     "mirror2_board (int ?m + 1) (board ?n ?m) = board ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("KnightsTour.mirror1_aux_knights_path",
     "knights_path ?b ?ps ==>
      knights_path (mirror1_board ?n ?b) (mirror1_aux ?n ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KnightsTour.mirror2_aux_knights_path",
     "knights_path ?b ?ps ==>
      knights_path (mirror2_board ?n ?b) (mirror2_aux ?n ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KnightsTour.hd_take", "0 < ?k ==> hd ?xs = hd (take ?k ?xs)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("KnightsTour.step_in_append",
     "step_in ?ps ?s\<^sub>i ?s\<^sub>j ==>
      step_in (?ps @ ?ps') ?s\<^sub>i ?s\<^sub>j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("KnightsTour.step_in_prepend",
     "step_in ?ps ?s\<^sub>i ?s\<^sub>j ==>
      step_in (?ps' @ ?ps) ?s\<^sub>i ?s\<^sub>j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("KnightsTour.step_in_Cons",
     "step_in ?ps ?s\<^sub>i ?s\<^sub>j ==>
      step_in (?s\<^sub>k # ?ps) ?s\<^sub>i ?s\<^sub>j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("KnightsTour.knights_path_board_m_n_geq_1",
     "knights_path (board ?n ?m) ?ps ==> 1 <= min ?n ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("KnightsTour.transpose_trans_board",
     "transpose_board (trans_board (?k\<^sub>1, ?k\<^sub>2) ?b) =
      trans_board (?k\<^sub>2, ?k\<^sub>1) (transpose_board ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("KnightsTour.insert_mirror1_board",
     "insert (mirror1_square ?n ?s\<^sub>i) (mirror1_board ?n ?b) =
      mirror1_board ?n (insert ?s\<^sub>i ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("KnightsTour.insert_mirror2_board",
     "insert (mirror2_square ?n ?s\<^sub>i) (mirror2_board ?n ?b) =
      mirror2_board ?n (insert ?s\<^sub>i ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("KnightsTour.mirror1_board_iff",
     "(?s\<^sub>i ~: ?b) =
      (mirror1_square ?n ?s\<^sub>i ~: mirror1_board ?n ?b)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2), template_var 1)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("KnightsTour.mirror2_board_iff",
     "(?s\<^sub>i ~: ?b) =
      (mirror2_square ?n ?s\<^sub>i ~: mirror2_board ?n ?b)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2), template_var 1)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("KnightsTour.row_exec_leq",
     "(?j : row_exec ?m) = (1 <= ?j & ?j <= int ?m)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("KnightsTour.card_board_exec_aux",
     "finite ?M ==> card (board_exec_aux ?k ?M) = ?k * card ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("KnightsTour.last_transpose",
     "?ps ~= [] ==>
      last (KnightsTour.transpose ?ps) = transpose_square (last ?ps)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("KnightsTour.hd_transpose",
     "?ps ~= [] ==>
      hd (KnightsTour.transpose ?ps) = transpose_square (hd ?ps)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("KnightsTour.transpose_step_in",
     "step_in ?ps ?s\<^sub>i ?s\<^sub>j ==>
      step_in (KnightsTour.transpose ?ps) (transpose_square ?s\<^sub>i)
       (transpose_square ?s\<^sub>j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.last_drop",
     "?k < length ?xs ==> last ?xs = last (drop ?k ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("KnightsTour.transpose_knights_circuit",
     "knights_circuit (board ?n ?m) ?ps ==>
      knights_circuit (board ?m ?n) (KnightsTour.transpose ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.transpose_knights_path",
     "knights_path (board ?n ?m) ?ps ==>
      knights_path (board ?m ?n) (KnightsTour.transpose ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.mirror1_knights_path",
     "knights_path (board ?n ?m) ?ps ==>
      knights_path (board ?n ?m) (mirror1 ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.mirror2_knights_path",
     "knights_path (board ?n ?m) ?ps ==>
      knights_path (board ?n ?m) (mirror2 ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("KnightsTour.knights_path_board_unique",
     "[| knights_path ?b\<^sub>1 ?ps; knights_path ?b\<^sub>2 ?ps |]
      ==> ?b\<^sub>1 = ?b\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("KnightsTour.trans_path_non_nil",
     "?ps ~= [] ==> trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps ~= []",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2),
             template_hole 2)
           ))),
    ("KnightsTour.knights_circuit_rotate1",
     "knights_circuit ?b (?s\<^sub>i # ?ps) ==>
      knights_circuit ?b (?ps @ [?s\<^sub>i])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0)))
           ))),
    ("KnightsTour.knights_path_min1",
     "knights_path (board ?n ?m) ?ps ==> min1 ?ps = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("KnightsTour.knights_path_min2",
     "knights_path (board ?n ?m) ?ps ==> min2 ?ps = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("KnightsTour.rot90_knights_path",
     "knights_path (board ?n ?m) ?ps ==>
      knights_path (board ?m ?n) (mirror1 (KnightsTour.transpose ?ps))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("KnightsTour.step_in_valid_step",
     "[| knights_path ?b ?ps; step_in ?ps ?s\<^sub>i ?s\<^sub>j |]
      ==> valid_step ?s\<^sub>i ?s\<^sub>j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("KnightsTour.valid_step_non_transitive",
     "[| valid_step ?s\<^sub>i ?s\<^sub>j;
         valid_step ?s\<^sub>j ?s\<^sub>k |]
      ==> ~ valid_step ?s\<^sub>i ?s\<^sub>k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)
               )
           ))),
    ("KnightsTour.drop_trans",
     "drop ?k (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps) =
      trans_path (?k\<^sub>1, ?k\<^sub>2) (drop ?k ?ps)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("KnightsTour.take_trans",
     "take ?k (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps) =
      trans_path (?k\<^sub>1, ?k\<^sub>2) (take ?k ?ps)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("KnightsTour.knights_path_max1",
     "knights_path (board ?n ?m) ?ps ==> max1 ?ps = int ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 2)))),
    ("KnightsTour.knights_path_max2",
     "knights_path (board ?n ?m) ?ps ==> max2 ?ps = int ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("KnightsTour.knights_path_o_iE",
     "[| pred.eval (knights_path_o_i ?xa) ?x; knights_path ?x ?xa ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("KnightsTour.trans_knights_path",
     "knights_path ?b ?ps ==>
      knights_path (trans_board (?k\<^sub>1, ?k\<^sub>2) ?b)
       (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("KnightsTour.board_leq_subset",
     "?n\<^sub>1 <= ?n\<^sub>2 & ?m\<^sub>1 <= ?m\<^sub>2 ==>
      board ?n\<^sub>1 ?m\<^sub>1 <= board ?n\<^sub>2 ?m\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("KnightsTour.step_checker_rev",
     "step_checker (?i, ?j) (?i', ?j') ==>
      step_checker (?i', ?j') (?i, ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("KnightsTour.knights_path_i_iE",
     "[| pred.eval (knights_path_i_i ?x ?xa) ?y;
         knights_path ?x ?xa ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("KnightsTour.knights_path_exists",
     "5 <= min ?n ?m ==> EX ps. knights_path (board ?n ?m) ps",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.board_subset",
     "[| ?n\<^sub>1 <= ?n\<^sub>2; ?m\<^sub>1 <= ?m\<^sub>2 |]
      ==> board ?n\<^sub>1 ?m\<^sub>1 <= board ?n\<^sub>2 ?m\<^sub>2",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("KnightsTour.board_concat",
     "board ?n ?m\<^sub>1 Un
      trans_board (0, int ?m\<^sub>1) (board ?n ?m\<^sub>2) =
      board ?n (?m\<^sub>1 + ?m\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("KnightsTour.board_concatT",
     "board ?n\<^sub>1 ?m Un
      trans_board (int ?n\<^sub>1, 0) (board ?n\<^sub>2 ?m) =
      board (?n\<^sub>1 + ?n\<^sub>2) ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_hole 1)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("KnightsTour.knights_circuit_6xm_exists",
     "5 <= ?m ==> EX ps. knights_circuit (board 6 ?m) ps",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3))),
          template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.trans_board_correct",
     "((?i, ?j) : ?b) =
      ((?i + ?k\<^sub>1, ?j + ?k\<^sub>2)
       : trans_board (?k\<^sub>1, ?k\<^sub>2) ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3)),
         template_var 2),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("KnightsTour.list_len_g_1_split",
     "1 < length ?xs ==>
      EX x\<^sub>1 x\<^sub>2 xs'. ?xs = x\<^sub>1 # x\<^sub>2 # xs'",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("KnightsTour.knights_path_subset",
     "[| knights_path ?b\<^sub>1 ?ps\<^sub>1;
         knights_path ?b\<^sub>2 ?ps\<^sub>2 |]
      ==> (set ?ps\<^sub>1 <= set ?ps\<^sub>2) =
          (?b\<^sub>1 <= ?b\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 1)))),
    ("KnightsTour.board_exec_aux_leq_mem",
     "((?i, ?j) : board_exec_aux ?k ?M) =
      (1 <= ?i & ?i <= int ?k & ?j : ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("KnightsTour.trans_path_correct",
     "((?i, ?j) : set ?ps) =
      ((?i + ?k\<^sub>1, ?j + ?k\<^sub>2)
       : set (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3)),
         template_app (template_hole 2, template_var 2)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_var 2))))),
    ("KnightsTour.finite_card_set_comp",
     "finite ?M ==> card {(?k, j) |j. j : ?M} = card ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app (template_hole 0, template_var 1)))),
    ("KnightsTour.trans_path_non_nil_last",
     "?ps ~= [] ==>
      last (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps) =
      last (trans_path (?k\<^sub>1, ?k\<^sub>2) ((?i, ?j) # ?ps))",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 4)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 4)))))),
    ("KnightsTour.trans_valid_step",
     "valid_step (?i, ?j) (?i', ?j') ==>
      valid_step (?i + ?k\<^sub>1, ?j + ?k\<^sub>2)
       (?i' + ?k\<^sub>1, ?j' + ?k\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("KnightsTour.last_mirror1_aux",
     "[| ?ps ~= []; last ?ps = (?i, ?j) |]
      ==> last (mirror1_aux ?n ?ps) = (?n - ?i, ?j)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("KnightsTour.last_mirror2_aux",
     "[| ?ps ~= []; last ?ps = (?i, ?j) |]
      ==> last (mirror2_aux ?m ?ps) = (?i, ?m - ?j)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("KnightsTour.knights_path_drop",
     "[| knights_path ?b ?ps; 0 < ?k; ?k < length ?ps |]
      ==> knights_path (set (drop ?k ?ps)) (drop ?k ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KnightsTour.knights_path_take",
     "[| knights_path ?b ?ps; 0 < ?k; ?k < length ?ps |]
      ==> knights_path (set (take ?k ?ps)) (take ?k ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("KnightsTour.board_exec_leq",
     "((?i, ?j) : board_exec ?n ?m) =
      (1 <= ?i & ?i <= int ?n & 1 <= ?j & ?j <= int ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 0, template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 0, template_var 0))))))),
    ("KnightsTour.knights_circuit_exists",
     "[| 5 <= min ?n ?m; even (?n * ?m) |]
      ==> EX ps. knights_circuit (board ?n ?m) ps",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_hole 6))),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 9,
                  template_app (template_hole 7, template_hole 6))),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.list_len_g_3_split",
     "3 < length ?xs ==>
      EX x\<^sub>1 x\<^sub>2 xs' x\<^sub>3.
         ?xs = x\<^sub>1 # x\<^sub>2 # xs' @ [x\<^sub>3]",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)),
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("KnightsTour.last_mirror1",
     "[| knights_path (board ?n ?m) ?ps; last ?ps = (?i, ?j) |]
      ==> last (mirror1 ?ps) = (int ?n + 1 - ?i, ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 4)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("KnightsTour.last_mirror2",
     "[| knights_path (board ?n ?m) ?ps; last ?ps = (?i, ?j) |]
      ==> last (mirror2 ?ps) = (?i, int ?m + 1 - ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("KnightsTour.hd_mirror1",
     "[| knights_path (board ?n ?m) ?ps; hd ?ps = (?i, ?j) |]
      ==> hd (mirror1 ?ps) = (int ?n + 1 - ?i, ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 4)),
                   template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("KnightsTour.hd_mirror2",
     "[| knights_path (board ?n ?m) ?ps; hd ?ps = (?i, ?j) |]
      ==> hd (mirror2 ?ps) = (?i, int ?m + 1 - ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_hole 0)),
             template_var 0))))),
    ("KnightsTour.last_trans_path",
     "[| ?ps ~= []; last ?ps = (?i, ?j) |]
      ==> last (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps) =
          (?i + ?k\<^sub>1, ?j + ?k\<^sub>2)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_var 4)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("KnightsTour.hd_trans_path",
     "[| ?ps ~= []; hd ?ps = (?i, ?j) |]
      ==> hd (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps) =
          (?i + ?k\<^sub>1, ?j + ?k\<^sub>2)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_var 4)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("KnightsTour.last_rot90_knights_path",
     "[| knights_path (board ?n ?m) ?ps; last ?ps = (?i, ?j) |]
      ==> last (mirror1 (KnightsTour.transpose ?ps)) =
          (int ?m + 1 - ?j, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 0)),
           template_var 1)))),
    ("KnightsTour.hd_rot90_knights_path",
     "[| knights_path (board ?n ?m) ?ps; hd ?ps = (?i, ?j) |]
      ==> hd (mirror1 (KnightsTour.transpose ?ps)) = (int ?m + 1 - ?j, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_hole 0)),
               template_var 0)),
           template_var 1)))),
    ("KnightsTour.knights_path_intro_rev",
     "[| ?s\<^sub>i : ?b; valid_step ?s\<^sub>i ?s\<^sub>j;
         knights_path (?b - {?s\<^sub>i}) (?s\<^sub>j # ?ps) |]
      ==> knights_path ?b (?s\<^sub>i # ?s\<^sub>j # ?ps)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_hole 1))),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("KnightsTour.knights_circuit_rotate_to",
     "[| knights_circuit ?b ?ps; hd (drop ?k ?ps) = ?s\<^sub>i;
         ?k < length ?ps |]
      ==> EX ps'. knights_circuit ?b ps' & hd ps' = ?s\<^sub>i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)),
          template_var 0),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("KnightsTour.trans_step_in",
     "step_in ?ps (?i, ?j) (?i', ?j') ==>
      step_in (trans_path (?k\<^sub>1, ?k\<^sub>2) ?ps)
       (?i + ?k\<^sub>1, ?j + ?k\<^sub>2)
       (?i' + ?k\<^sub>1, ?j' + ?k\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 6),
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0)),
                   template_var 6)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("KnightsTour.knights_circuit_exists_n_even_gr_10",
     "[| 10 <= ?n & even ?n; 5 <= ?m |]
      ==> EX ps. knights_circuit (board ?n ?m) ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 6, template_hole 4))))),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_hole 4))),
                template_var 1))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_hole 5,
              template_app (template_hole 6, template_hole 4))),
          template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.knights_path_append",
     "[| knights_path ?b\<^sub>1 ?ps\<^sub>1;
         knights_path ?b\<^sub>2 ?ps\<^sub>2;
         ?b\<^sub>1 Int ?b\<^sub>2 = {};
         valid_step (last ?ps\<^sub>1) (hd ?ps\<^sub>2) |]
      ==> knights_path (?b\<^sub>1 Un ?b\<^sub>2)
           (?ps\<^sub>1 @ ?ps\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 1),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("KnightsTour.set_comp_ins",
     "{(?k, j) |j. j : insert ?x ?M} =
      insert (?k, ?x) {(?k, j) |j. j : ?M}",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 7, t_empty)))),
    ("KnightsTour.knights_path_6xm_ul_exists",
     "5 <= ?m ==>
      EX ps.
         knights_path (board 6 ?m) ps & hd ps = (1, 1) & last ps = (5, 2)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10))),
          template_var 0)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("KnightsTour.knights_path_5xm_lr_exists",
     "5 <= ?m ==>
      EX ps.
         knights_path (board 5 ?m) ps &
         hd ps = (1, 1) & last ps = (2, int ?m - 1)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_hole 12))),
          template_var 0)],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("KnightsTour.knights_circuit_8xm_exists",
     "5 <= ?m ==>
      EX ps.
         knights_circuit (board 8 ?m) ps &
         step_in ps (2, int ?m - 1) (4, int ?m)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10))),
          template_var 0)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("KnightsTour.knights_path_5xm_ur_exists",
     "5 <= ?m ==>
      EX ps.
         knights_path (board 5 ?m) ps &
         hd ps = (1, 1) & last ps = (4, int ?m - 1)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_hole 12))),
          template_var 0)],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("KnightsTour.knights_path_8xm_ul_exists",
     "5 <= ?m ==>
      EX ps.
         knights_path (board 8 ?m) ps & hd ps = (1, 1) & last ps = (7, 2)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10))),
          template_var 0)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("KnightsTour.rotate_knights_circuit",
     "[| knights_circuit (board ?n ?m) ?ps; 5 <= min ?n ?m |]
      ==> EX ps.
             knights_circuit (board ?n ?m) ps &
             hd ps = (1, 1) & last ps = (3, 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9))),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("KnightsTour.valid_step_1_1",
     "[| valid_step (1, 1) (?i, ?j); 0 < ?i; 0 < ?j |]
      ==> (?i, ?j) = (2, 3) | (?i, ?j) = (3, 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_hole 8)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            ),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 0, template_hole 1))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 0, template_hole 1))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))))
           ))),
    ("KnightsTour.knights_path_split",
     "[| knights_path ?b ?ps; 0 < ?k; ?k < length ?ps |]
      ==> EX b\<^sub>1 b\<^sub>2.
             knights_path b\<^sub>1 (take ?k ?ps) &
             knights_path b\<^sub>2 (drop ?k ?ps) &
             b\<^sub>1 Un b\<^sub>2 = ?b & b\<^sub>1 Int b\<^sub>2 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 9, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 1))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("KnightsTour.knights_path_odd_n_exists",
     "[| odd ?n; 5 <= min ?n ?m |]
      ==> EX ps.
             knights_path (board ?n ?m) ps &
             hd ps = (int ?n, 1) & last ps = (int ?n - 1, int ?m - 1)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_hole 16,
                      template_app (template_hole 15, template_hole 14))),
                  template_var 1)
                )
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 16,
            template_app
             (template_hole 12,
              template_app (template_hole 15, template_hole 14))),
          template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("KnightsTour.knights_path_concat",
     "[| knights_path (board ?n ?m\<^sub>1) ?ps\<^sub>1;
         knights_path (board ?n ?m\<^sub>2) ?ps\<^sub>2;
         hd ?ps\<^sub>2 = (?i\<^sub>h, ?j\<^sub>h);
         valid_step (last ?ps\<^sub>1)
          (?i\<^sub>h, int ?m\<^sub>1 + ?j\<^sub>h) |]
      ==> knights_path (board ?n (?m\<^sub>1 + ?m\<^sub>2))
           (?ps\<^sub>1 @ trans_path (0, int ?m\<^sub>1) ?ps\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 5)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 6),
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 3))),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 8, template_hole 0),
                     template_app (template_hole 4, template_var 5))),
                 template_var 2)))
           ))),
    ("KnightsTour.knights_path_lr_concat",
     "[| knights_path (board ?n ?m\<^sub>1) ?ps\<^sub>1;
         knights_path (board ?n ?m\<^sub>2) ?ps\<^sub>2;
         last ?ps\<^sub>1 = (2, int ?m\<^sub>1 - 1);
         hd ?ps\<^sub>2 = (1, 1) |]
      ==> knights_path (board ?n (?m\<^sub>1 + ?m\<^sub>2))
           (?ps\<^sub>1 @ trans_path (0, int ?m\<^sub>1) ?ps\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_hole 5))),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 11, template_hole 5),
            template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_var 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 11, template_hole 0),
                     template_app (template_hole 6, template_var 3))),
                 template_var 0)))
           ))),
    ("KnightsTour.knights_circuit_exists_even_n_gr10",
     "[| even ?n; 10 <= ?n; 5 <= ?m;
         EX ps.
            knights_path (board (?n - 5) ?m) ps &
            hd ps = (int (?n - 5), 1) &
            last ps = (int (?n - 5) - 1, int ?m - 1) |]
      ==> EX ps. knights_circuit (board ?m ?n) ps",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_hole 15))),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 17,
            template_app
             (template_hole 16,
              template_app
               (template_hole 13,
                template_app (template_hole 16, template_hole 15)))),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 17,
            template_app
             (template_hole 13,
              template_app (template_hole 16, template_hole 15))),
          template_var 0),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("KnightsTour.knights_path_split_concat",
     "[| knights_path (board ?n ?m\<^sub>1) ?ps\<^sub>1;
         knights_path (board ?n ?m\<^sub>2) ?ps\<^sub>2;
         step_in ?ps\<^sub>1 ?s\<^sub>i ?s\<^sub>j;
         hd ?ps\<^sub>2 = (?i\<^sub>h, ?j\<^sub>h);
         last ?ps\<^sub>2 = (?i\<^sub>l, ?j\<^sub>l);
         valid_step ?s\<^sub>i (?i\<^sub>h, int ?m\<^sub>1 + ?j\<^sub>h);
         valid_step (?i\<^sub>l, int ?m\<^sub>1 + ?j\<^sub>l) ?s\<^sub>j |]
      ==> EX ps.
             knights_path (board ?n (?m\<^sub>1 + ?m\<^sub>2)) ps &
             hd ps = hd ?ps\<^sub>1 & last ps = last ?ps\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 10),
                  template_var 9)),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 10),
                  template_var 7)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 8),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_hole 8, template_var 6),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 6),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 9)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 9)),
                    template_var 0))),
              template_var 4)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.knights_path_split_concatT",
     "[| knights_path (board ?n\<^sub>1 ?m) ?ps\<^sub>1;
         knights_path (board ?n\<^sub>2 ?m) ?ps\<^sub>2;
         step_in ?ps\<^sub>1 ?s\<^sub>i ?s\<^sub>j;
         hd ?ps\<^sub>2 = (?i\<^sub>h, ?j\<^sub>h);
         last ?ps\<^sub>2 = (?i\<^sub>l, ?j\<^sub>l);
         valid_step ?s\<^sub>i (int ?n\<^sub>1 + ?i\<^sub>h, ?j\<^sub>h);
         valid_step (int ?n\<^sub>1 + ?i\<^sub>l, ?j\<^sub>l) ?s\<^sub>j |]
      ==> EX ps.
             knights_path (board (?n\<^sub>1 + ?n\<^sub>2) ?m) ps &
             hd ps = hd ?ps\<^sub>1 & last ps = last ?ps\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 10),
                  template_var 9)),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 9)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 8),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_hole 8, template_var 6),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 6),
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 10)),
                    template_var 3)),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_var 10)),
                      template_var 1)),
                  template_var 0)),
              template_var 4)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.knights_path_split_concat_si_prev",
     "[| knights_path (board ?n ?m\<^sub>1) ?ps\<^sub>1;
         knights_path (board ?n ?m\<^sub>2) ?ps\<^sub>2;
         step_in ?ps\<^sub>1 ?s\<^sub>i ?s\<^sub>j;
         hd ?ps\<^sub>2 = (?i\<^sub>h, ?j\<^sub>h);
         last ?ps\<^sub>2 = (?i\<^sub>l, ?j\<^sub>l);
         step_in ?ps\<^sub>2 (?i, ?j) (?i', ?j');
         valid_step ?s\<^sub>i (?i\<^sub>h, int ?m\<^sub>1 + ?j\<^sub>h);
         valid_step (?i\<^sub>l, int ?m\<^sub>1 + ?j\<^sub>l) ?s\<^sub>j |]
      ==> EX ps.
             knights_path (board ?n (?m\<^sub>1 + ?m\<^sub>2)) ps &
             hd ps = hd ?ps\<^sub>1 &
             last ps = last ?ps\<^sub>1 &
             step_in ps (?i, int ?m\<^sub>1 + ?j)
              (?i', int ?m\<^sub>1 + ?j')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 14),
                  template_var 13)),
              template_var 12)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 14),
                  template_var 11)),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 12),
                template_var 9),
              template_var 8)
            ),
        template_equation
         (template_app (template_hole 8, template_var 10),
          template_app
           (template_app (template_hole 7, template_var 7),
            template_var 6)),
        template_equation
         (template_app (template_hole 6, template_var 10),
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 10),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 9),
              template_app
               (template_app (template_hole 7, template_var 7),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 13)),
                  template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 13)),
                    template_var 4))),
              template_var 8)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("KnightsTour.knights_circuit_lr_concat",
     "[| knights_circuit (board ?n ?m\<^sub>1) ?ps\<^sub>1;
         knights_circuit (board ?n ?m\<^sub>2) ?ps\<^sub>2;
         step_in ?ps\<^sub>1 (2, int ?m\<^sub>1 - 1) (4, int ?m\<^sub>1);
         hd ?ps\<^sub>2 = (1, 1); last ?ps\<^sub>2 = (3, 2);
         step_in ?ps\<^sub>2 (2, int ?m\<^sub>2 - 1) (4, int ?m\<^sub>2) |]
      ==> EX ps.
             knights_circuit (board ?n (?m\<^sub>1 + ?m\<^sub>2)) ps &
             step_in ps (2, int (?m\<^sub>1 + ?m\<^sub>2) - 1)
              (4, int (?m\<^sub>1 + ?m\<^sub>2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 2),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10))),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_var 3)),
                    template_hole 7))),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 11, template_hole 10)))),
                template_app (template_hole 8, template_var 3)))
            ),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app
           (template_app (template_hole 13, template_hole 7),
            template_hole 7)),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app (template_hole 3, template_hole 10))),
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10)))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 0),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10))),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_var 1)),
                    template_hole 7))),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 11, template_hole 10)))),
                template_app (template_hole 8, template_var 1)))
            )],
       template_predicate (template_app (template_hole 2, t_empty))))]
