   [("Szemeredi.all_edges_between_empty", "all_edges_between {} ?Z ?G = {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Szemeredi.all_edges_between_empty", "all_edges_between ?Z {} ?G = {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Szemeredi.energy_graph_subsets_0",
     "energy_graph_subsets ?A {} ?G = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Szemeredi.energy_graph_subsets_0",
     "energy_graph_subsets {} ?B ?G = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Szemeredi.edge_density_commute",
     "edge_density ?X ?Y ?G = edge_density ?Y ?X ?G",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Szemeredi.energy_graph_partitions_subsets_commute",
     "energy_graph_partitions_subsets ?G ?W ?U =
      energy_graph_partitions_subsets ?G ?U ?W",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Szemeredi.energy_graph_subsets_commute",
     "energy_graph_subsets ?\<U> ?\<W> ?G =
      energy_graph_subsets ?\<W> ?\<U> ?G",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Szemeredi.card_all_edges_between_commute",
     "card (all_edges_between ?X ?Y ?G) =
      card (all_edges_between ?Y ?X ?G)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Szemeredi.regular_pair_commute",
     "regular_pair ?X ?Y ?G ?\<epsilon> =
      regular_pair ?Y ?X ?G ?\<epsilon>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 1),
         template_var 0))),
    ("Szemeredi.finite_graph_partition_empty",
     "finite_graph_partition {} ?P ?n = (?P = {} & ?n = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Szemeredi.finite_graph_partition_0",
     "finite_graph_partition ?V ?P 0 = (?V = {} & ?P = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_dunno)),
    ("Szemeredi.all_edges_between_swap",
     "all_edges_between ?X ?Y ?G =
      (%(x, y). (y, x)) ` all_edges_between ?Y ?X ?G",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Szemeredi.all_edges_between_Un2",
     "all_edges_between ?X (?Y Un ?Z) ?G =
      all_edges_between ?X ?Y ?G Un all_edges_between ?X ?Z ?G",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Szemeredi.all_edges_between_Un1",
     "all_edges_between (?X Un ?Y) ?Z ?G =
      all_edges_between ?X ?Z ?G Un all_edges_between ?Y ?Z ?G",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Szemeredi.irregular_set_swap",
     "((?i, ?j) : irregular_set ?\<epsilon> ?G ?P) =
      ((?j, ?i) : irregular_set ?\<epsilon> ?G ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 4)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0))))]
