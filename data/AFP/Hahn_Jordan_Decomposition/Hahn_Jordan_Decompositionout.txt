Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Hahn_Jordan_DecompositionTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.Hahn_Jordan_DecompositionTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Extended_Reals_Sums_Compl" (required by "Draft.Hahn_Jordan_DecompositionTemplates" via "Draft.Hahn_Jordan_Decomposition" via "Draft.Hahn_Jordan_Prelims")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.250s cpu time, 0.000s GC time
### theory "Draft.Extended_Reals_Sums_Compl"
### 0.109s elapsed time, 0.318s cpu time, 0.000s GC time
Loading theory "Draft.Hahn_Jordan_Prelims" (required by "Draft.Hahn_Jordan_DecompositionTemplates" via "Draft.Hahn_Jordan_Decomposition")
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.346s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Hahn_Jordan_DecompositionTemplates" via "Draft.ExtrEqs")
### theory "Draft.Hahn_Jordan_Prelims"
### 0.125s elapsed time, 0.279s cpu time, 0.064s GC time
Loading theory "Draft.Hahn_Jordan_Decomposition" (required by "Draft.Hahn_Jordan_DecompositionTemplates")
locale near_finite_function
  fixes \<mu> :: "'b set => ereal"
  assumes "near_finite_function \<mu>"
locale signed_measure_space
  fixes M :: "'a measure"
    and \<mu> :: "'a set => ereal"
  assumes "signed_measure_space M \<mu>"
locale signed_measure_space
  fixes M :: "'a measure"
    and \<mu> :: "'a set => ereal"
  assumes "signed_measure_space M \<mu>"
locale signed_measure_space
  fixes M :: "'a measure"
    and \<mu> :: "'a set => ereal"
  assumes "signed_measure_space M \<mu>"
### theory "HOL-Library.BigO"
### 0.614s elapsed time, 1.269s cpu time, 0.089s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Hahn_Jordan_DecompositionTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale signed_measure_space
  fixes M :: "'a measure"
    and \<mu> :: "'a set => ereal"
  assumes "signed_measure_space M \<mu>"
### theory "Draft.Hahn_Jordan_Decomposition"
### 0.965s elapsed time, 2.016s cpu time, 0.232s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.514s elapsed time, 1.024s cpu time, 0.143s GC time
Loading theory "Draft.Hahn_Jordan_DecompositionTemplates"
val templateLemmas =
   [("Hahn_Jordan_Decomposition.disjoint_family_imp_on",
     "disjoint_family ?A ==> disjoint_family_on ?A ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Hahn_Jordan_Decomposition.signed_measure_empty",
     "signed_measure ?M ?\<mu> ==> ?\<mu> {} = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 0, template_hole 1), template_hole 0))),
    ("Hahn_Jordan_Decomposition.signed_measure_additive",
     "signed_measure ?M ?\<mu> ==> Measure_Space.additive (sets ?M) ?\<mu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Hahn_Jordan_Decomposition.signed_measure_minus",
     "signed_measure ?M ?\<mu> ==> signed_measure ?M (%A. - ?\<mu> A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Hahn_Jordan_Decomposition.signed_measure_inter",
     "[| signed_measure ?M ?\<mu>; ?A : sets ?M |]
      ==> signed_measure ?M (%E. ?\<mu> (E Int ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)
           ))),
    ("Hahn_Jordan_Decomposition.pos_signed_measure_count_additive",
     "[| signed_measure ?M ?\<mu>; ALL E:sets ?M. 0 <= ?\<mu> E |]
      ==> countably_additive (sets ?M) (%A. e2ennreal (?\<mu> A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             t_empty)
           ))),
    ("Hahn_Jordan_Decomposition.signed_measure_add",
     "[| signed_measure ?M ?\<mu>; ?a : sets ?M; ?b : sets ?M;
         ?a Int ?b = {} |]
      ==> ?\<mu> (?a Un ?b) = ?\<mu> ?a + ?\<mu> ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("Hahn_Jordan_Decomposition.signed_measure_sums",
     "[| signed_measure ?M ?\<mu>; range ?A <= sets ?M; disjoint_family ?A;
         \<Union> (range ?A) : sets ?M |]
      ==> (%i. ?\<mu> (?A i)) sums ?\<mu> (\<Union> (range ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_hole 5))),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty),
             template_app
              (template_var 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))))
           ))),
    ("Hahn_Jordan_Decomposition.signed_measure_inf_sum",
     "[| signed_measure ?M ?\<mu>; range ?A <= sets ?M; disjoint_family ?A;
         \<Union> (range ?A) : sets ?M |]
      ==> (\<Sum>i. ?\<mu> (?A i)) = ?\<mu> (\<Union> (range ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 6),
          template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_hole 6))),
              template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app
          (template_var 1,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6)))))),
    ("Hahn_Jordan_Decomposition.signed_measure_disj_sum",
     "[| finite ?I; signed_measure ?M ?\<mu>; disjoint_family_on ?A ?I;
         !!i. i : ?I ==> ?A i : sets ?M |]
      ==> ?\<mu> (\<Union> (?A ` ?I)) = (SUM i:?I. ?\<mu> (?A i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 3))),
         template_app
          (template_app (template_hole 0, t_empty), template_var 3)))),
    ("Hahn_Jordan_Decomposition.signed_measure_summable",
     "[| signed_measure ?M ?\<mu>; range ?A <= sets ?M; disjoint_family ?A;
         \<Union> (range ?A) : sets ?M;
         \<bar>?\<mu> (\<Union> (range ?A))\<bar> < \<infinity> |]
      ==> summable (%i. real_of_ereal \<bar>?\<mu> (?A i)\<bar>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 0),
            template_hole 9),
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_hole 9))),
              template_app (template_hole 8, template_var 2))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 3,
            template_app
             (template_var 1,
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_hole 9)))),
          template_hole 2)],
       template_predicate (template_app (template_hole 1, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Hahn_Jordan_DecompositionTemplates"
### 1.293s elapsed time, 1.885s cpu time, 0.608s GC time
val it = (): unit
