Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Extended_Reals_Sums_ComplTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Extended_Reals_Sums_Compl" (required by "Draft.Extended_Reals_Sums_ComplTemplates")
Loading theory "Draft.Templates" (required by "Draft.Extended_Reals_Sums_ComplTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.243s cpu time, 0.000s GC time
### theory "Draft.Extended_Reals_Sums_Compl"
### 0.094s elapsed time, 0.291s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.104s elapsed time, 0.305s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Extended_Reals_Sums_ComplTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.BigO"
### 0.595s elapsed time, 0.600s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Extended_Reals_Sums_ComplTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.494s elapsed time, 0.545s cpu time, 0.073s GC time
Loading theory "Draft.Extended_Reals_Sums_ComplTemplates"
val templateLemmas =
   [("Extended_Reals_Sums_Compl.mem_sums_Pinfty",
     "?f ?i = \<infinity> ==> ?f sums \<infinity>",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_var 0), template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 1)
           ))),
    ("Extended_Reals_Sums_Compl.real_ereal_leq",
     "[| real_of_ereal ?a <= ?b; ?a ~= \<infinity> |] ==> ?a <= ereal ?b",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Extended_Reals_Sums_Compl.ereal_sums_not_infty",
     "[| ?f sums ?a; \<bar>?a\<bar> ~= \<infinity> |]
      ==> \<bar>?f ?n\<bar> ~= \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 0)),
             template_hole 0)
           ))),
    ("Extended_Reals_Sums_Compl.ereal_sums_not_infty_minus",
     "[| ?f sums ?a; \<bar>?a\<bar> ~= \<infinity> |]
      ==> (%n. - ?f n) sums - ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Extended_Reals_Sums_Compl.mem_sums_Minfty",
     "[| ?f ?i = - \<infinity>; \<infinity> ~: range ?f |]
      ==> ?f sums - \<infinity>",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_var 0),
          template_app (template_hole 6, template_hole 5)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_hole 5),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 6, template_hole 5))
           ))),
    ("Extended_Reals_Sums_Compl.ereal_sums_Pinfty",
     "[| ?f sums \<infinity>; !!n. \<bar>?f n\<bar> ~= \<infinity> |]
      ==> (%n. - ?f n) sums - \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 0, template_hole 5))
           ))),
    ("Extended_Reals_Sums_Compl.ereal_sums_minus",
     "[| ?f sums ?a; !!n. \<bar>?f n\<bar> ~= \<infinity> |]
      ==> (%n. - ?f n) sums - ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Extended_Reals_Sums_Compl.ereal_sums_Minfty",
     "[| ?f sums - \<infinity>; !!n. \<bar>?f n\<bar> ~= \<infinity> |]
      ==> (%n. - ?f n) sums \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty), template_hole 4)
           ))),
    ("Extended_Reals_Sums_Compl.sums_minus'",
     "[| - \<infinity> ~: range ?f | \<infinity> ~: range ?f; ?f sums ?a |]
      ==> (%n. - ?f n) sums - ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_hole 3)),
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_hole 1)))),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 3),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 1))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty),
             template_app (template_hole 4, template_var 0))
           ))),
    ("Extended_Reals_Sums_Compl.sum_Minfty",
     "[| finite ?P; ?i : ?P; ?f ?i = - \<infinity>;
         \<infinity> ~: range ?f |]
      ==> sum ?f ?P = - \<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 0, template_var 1),
          template_app (template_hole 6, template_hole 5)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_hole 5),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app (template_hole 6, template_hole 5))))]:
   (string * thm * template) list
### theory "Draft.Extended_Reals_Sums_ComplTemplates"
### 1.033s elapsed time, 1.313s cpu time, 0.171s GC time
val it = (): unit
