Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Hahn_Jordan_PrelimsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Extended_Reals_Sums_Compl" (required by "Draft.Hahn_Jordan_PrelimsTemplates" via "Draft.Hahn_Jordan_Prelims")
Loading theory "Draft.Templates" (required by "Draft.Hahn_Jordan_PrelimsTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.084s elapsed time, 0.283s cpu time, 0.000s GC time
### theory "Draft.Extended_Reals_Sums_Compl"
### 0.105s elapsed time, 0.322s cpu time, 0.000s GC time
Loading theory "Draft.Hahn_Jordan_Prelims" (required by "Draft.Hahn_Jordan_PrelimsTemplates")
### theory "HOL-Library.Function_Algebras"
### 0.108s elapsed time, 0.328s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Hahn_Jordan_PrelimsTemplates" via "Draft.ExtrEqs")
### theory "Draft.Hahn_Jordan_Prelims"
### 0.131s elapsed time, 0.288s cpu time, 0.057s GC time
### theory "HOL-Library.BigO"
### 0.647s elapsed time, 0.827s cpu time, 0.089s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Hahn_Jordan_PrelimsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.465s elapsed time, 0.466s cpu time, 0.000s GC time
Loading theory "Draft.Hahn_Jordan_PrelimsTemplates"
val templateLemmas =
   [("Hahn_Jordan_Prelims.e2ennreal_less_top",
     "?x < \<infinity> ==> e2ennreal ?x < \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 3)],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_hole 0))),
    ("Hahn_Jordan_Prelims.shift_denum",
     "1 / real (?x ?i - 1) <= 2 / real (?x ?i)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_var 1, template_var 0)),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app
          (template_hole 5,
           template_app (template_var 1, template_var 0))))),
    ("Hahn_Jordan_Prelims.sum_shift_denum",
     "summable (%i. 1 / real (?f i)) ==>
      summable (%i. 1 / real (?f i - 1))",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Hahn_Jordan_Prelims.sum_le",
     "(!!i. ?f i <= ?g i) ==> sum ?f {..?n} <= sum ?g {..?n}",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Hahn_Jordan_Prelims.e2ennreal_add",
     "[| 0 <= ?x; 0 <= ?y |]
      ==> e2ennreal (?x + ?y) = e2ennreal ?x + e2ennreal ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1),
        template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Hahn_Jordan_Prelims.summable_bounded",
     "[| !!i. 0 <= ?f i; !!i. ?f i <= ?g i; summable ?g |] ==> summable ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Hahn_Jordan_Prelims.diff_union",
     "?A - \<Union> (?B ` {..?n}) - ?B (Suc ?n) =
      ?A - \<Union> (?B ` {..Suc ?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app (template_hole 1, template_var 0))))),
         template_app
          (template_var 1, template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("Hahn_Jordan_Prelims.pos_e2ennreal_additive",
     "[| measure_space (space ?M) (sets ?M) (%x. e2ennreal (?m1.0 x));
         ALL x:sets ?M. 0 <= ?m1.0 x |]
      ==> Measure_Space.additive (sets ?M) ?m1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1)),
                template_app (template_hole 5, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 5, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 5, template_var 1)),
             template_var 0)
           ))),
    ("Hahn_Jordan_Prelims.e2ennreal_finite_sum",
     "[| finite ?I; !!i. i : ?I ==> 0 <= ?A i |]
      ==> (SUM i:?I. e2ennreal (?A i)) = e2ennreal (sum ?A ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Hahn_Jordan_Prelims.conv_0_half",
     "[| ?f \<longlonglongrightarrow> 0; !!n. 0 <= ?f n |]
      ==> EX N. ALL n>=N. ?f n < 1 / 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 0),
                template_app (template_hole 14, template_hole 13)),
              template_hole 12)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Hahn_Jordan_Prelims.disj_subsets",
     "[| ?B 0 = ?A 0;
         !!i. ?B (Suc i) = ?A (Suc i) - \<Union> (?A ` {..i}) |]
      ==> \<Union> (range ?B) = \<Union> (range ?A)",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 7),
          template_app (template_var 0, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0))))),
    ("Hahn_Jordan_Prelims.disj_Union2",
     "[| !!i. ?A i : sets ?M;
         !!B. [| disjoint_family B;
                 \<Union> (range B) = \<Union> (range ?A);
                 !!i. B i : sets ?M; !!i. B i <= ?A i |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Hahn_Jordan_Prelims.shift_denum'",
     "[| !!i. ?k <= ?x i ==> ?k + ?e <= ?x i; !!i. 0 < ?x i; !!i. ?x i < ?p;
         0 < ?e |]
      ==> EX c. ALL i. 1 / real (?x i - ?k) <= c / real (?x i)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation (less_than, template_hole 7, template_var 1)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Hahn_Jordan_Prelims.sum_shift_denum'",
     "[| summable (%i. 1 / real (?f i)); 0 < ?e;
         !!i. ?k <= ?f i ==> ?k + ?e <= ?f i; !!i. 0 < ?f i;
         !!i. ?f i < ?p |]
      ==> summable (%i. 1 / real (?f i - ?k))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_inequation (less_than, template_hole 4, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Hahn_Jordan_PrelimsTemplates"
### 1.048s elapsed time, 1.375s cpu time, 0.162s GC time
val it = (): unit
