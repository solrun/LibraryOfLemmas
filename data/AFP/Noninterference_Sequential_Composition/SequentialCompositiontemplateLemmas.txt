   [("SequentialComposition.seq_implies_weakly_seq",
     "sequential ?P ==> weakly_sequential ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SequentialComposition.seq_comp_prop_1",
     "([], {}) : seq_comp_failures ?P ?Q",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SequentialComposition.seq_comp_divergences",
     "weakly_sequential ?P ==> divergences (?P ; ?Q) = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("SequentialComposition.seq_comp_failures",
     "weakly_sequential ?P ==>
      failures (?P ; ?Q) = seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SequentialComposition.seq_comp_sequential",
     "[| sequential ?P; sequential ?Q |] ==> sequential (?P ; ?Q)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_weakly_sequential",
     "[| weakly_sequential ?P; weakly_sequential ?Q |]
      ==> weakly_sequential (?P ; ?Q)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_failuresp_seq_comp_failures_eq",
     "seq_comp_failuresp ?P ?Q =
      (%x xa. (x, xa) : seq_comp_failures ?P ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       t_empty)),
    ("SequentialComposition.seq_comp_traces",
     "weakly_sequential ?P ==>
      traces (?P ; ?Q) = Domain (seq_comp_failures ?P ?Q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SequentialComposition.seq_comp_rep",
     "weakly_sequential ?P ==>
      Rep_process (?P ; ?Q) = (seq_comp_failures ?P ?Q, {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("SequentialComposition.weakly_seq_sentences_none",
     "[| weakly_sequential ?P; ?xs : sentences ?P |] ==> None ~: set ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("SequentialComposition.seq_comp_ref_union_closed",
     "[| weakly_sequential ?P; ref_union_closed ?P; ref_union_closed ?Q |]
      ==> ref_union_closed (?P ; ?Q)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_list_sequential",
     "(!!x. x : set (?P # ?PS) ==> sequential x) ==>
      sequential (foldl (;) ?P ?PS)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_list_weakly_sequential",
     "(!!x. x : set (?P # ?PS) ==> weakly_sequential x) ==>
      weakly_sequential (foldl (;) ?P ?PS)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_prop_3",
     "[| (?xs, ?Y) : seq_comp_failures ?P ?Q; ?X <= ?Y |]
      ==> (?xs, ?X) : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))
           ))),
    ("SequentialComposition.seq_comp_next_events",
     "weakly_sequential ?P ==>
      next_events (?P ; ?Q) ?xs =
      {x. ?xs @ [x] : Domain (seq_comp_failures ?P ?Q)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_var 0),
         template_app (template_hole 6, t_empty)))),
    ("SequentialComposition.seq_comp_futures",
     "weakly_sequential ?P ==>
      futures (?P ; ?Q) ?xs =
      {(ys, Y). (?xs @ ys, Y) : seq_comp_failures ?P ?Q}",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("SequentialComposition.seq_sentences_none",
     "[| sequential ?P; ?xs : sentences ?P; ?xs @ ?y # ?ys : traces ?P |]
      ==> ?y = None",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))),
              template_app (template_hole 2, template_var 3))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("SequentialComposition.seq_comp_prop_2",
     "[| weakly_sequential ?P; (?xs @ [?x], ?X) : seq_comp_failures ?P ?Q |]
      ==> (?xs, {}) : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_hole 2))),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 0))
           ))),
    ("SequentialComposition.seq_sentences_ref",
     "[| ref_union_closed ?P; sequential ?P; ?xs : sentences ?P |]
      ==> (?xs, {x. x ~= None}) : failures ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 4, t_empty))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SequentialComposition.seq_comp_prop_2_aux",
     "[| weakly_sequential ?P; (?ws, ?X) : seq_comp_failures ?P ?Q;
         ?ws = ?xs @ [?x] |]
      ==> (?xs, {}) : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 2))
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 2))
           ))),
    ("SequentialComposition.seq_comp_secure",
     "[| secure_termination ?I ?D; ref_union_closed ?P; sequential ?P;
         secure ?P ?I ?D; secure ?Q ?I ?D |]
      ==> secure (?P ; ?Q) ?I ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 0),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 3),
             template_var 2)
           ))),
    ("SequentialComposition.seq_comp_prop_4",
     "[| weakly_sequential ?P; (?xs, ?X) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ [?x], {}) : seq_comp_failures ?P ?Q |
          (?xs, insert ?x ?X) : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_app
                          (template_app (template_hole 3, template_var 0),
                           template_hole 2))),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 1)))
           ))),
    ("SequentialComposition.seq_comp_list_ref_union_closed",
     "[| !!x. x : set (butlast (?P # ?PS)) ==> weakly_sequential x;
         !!x. x : set (?P # ?PS) ==> ref_union_closed x |]
      ==> ref_union_closed (foldl (;) ?P ?PS)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_refusals_finite",
     "[| ?xs : Domain (seq_comp_failures ?P ?Q); finite ?A;
         !!x. x : ?A ==> (?xs, ?F x) : seq_comp_failures ?P ?Q |]
      ==> (?xs, \<Union> (?F ` ?A)) : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)))
            ),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)))),
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2))
           ))),
    ("SequentialComposition.seq_comp_list_secure",
     "[| secure_termination ?I ?D;
         !!X. X : set (butlast (?P # ?PS)) ==>
              ref_union_closed X & sequential X;
         !!X. X : set (?P # ?PS) ==> secure X ?I ?D |]
      ==> secure (foldl (;) ?P ?PS) ?I ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1),
                   template_var 0)),
               template_var 3),
             template_var 2)
           ))),
    ("SequentialComposition.seq_comp_secure_1",
     "[| secure_termination ?I ?D; ref_union_closed ?P; sequential ?P;
         secure ?P ?I ?D; secure ?Q ?I ?D;
         (?xs @ ?y # ?ys, ?Y) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ ipurge_tr ?I ?D (?D ?y) ?ys,
           ipurge_ref ?I ?D (?D ?y) ?ys ?Y)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 7),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 9, template_var 5)),
        template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 1))),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 7),
                           template_var 6),
                         template_app (template_var 6, template_var 2)),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_app (template_var 6, template_var 2)),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 4))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_1",
     "[| secure_termination ?I ?D; ref_union_closed ?P; sequential ?P;
         secure ?P ?I ?D; secure ?Q ?I ?D;
         (?ws, ?Y) : seq_comp_failures ?P ?Q; ?ws = ?xs @ ?y # ?ys |]
      ==> (?xs @ ipurge_tr ?I ?D (?D ?y) ?ys,
           ipurge_ref ?I ?D (?D ?y) ?ys ?Y)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 8),
              template_var 7)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 6)),
        template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 6),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 5),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_var 6),
                template_var 5))
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 8),
                           template_var 7),
                         template_app (template_var 7, template_var 1)),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 8),
                         template_var 7),
                       template_app (template_var 7, template_var 1)),
                     template_var 0),
                   template_var 3))),
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 5))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_1_case_3",
     "[| secure_termination ?I ?D; ref_union_closed ?Q; sequential ?Q;
         secure ?Q ?I ?D; secure ?R ?I ?D; ?ws : sentences ?Q;
         (?ys', ?Y) : failures ?R; ?ws @ ?ys' = ?xs @ ?y # ?ys |]
      ==> (?xs @ ipurge_tr ?I ?D (?D ?y) ?ys,
           ipurge_ref ?I ?D (?D ?y) ?ys ?Y)
          : seq_comp_failures ?Q ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 9),
              template_var 8)
            ),
        template_predicate
         (template_app (template_hole 13, template_var 7)),
        template_predicate
         (template_app (template_hole 12, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 7),
                template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 6),
                template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app (template_hole 9, template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_app (template_hole 6, template_var 6))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, template_var 9),
                           template_var 8),
                         template_app (template_var 8, template_var 1)),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 9),
                         template_var 8),
                       template_app (template_var 8, template_var 1)),
                     template_var 0),
                   template_var 3))),
             template_app
              (template_app (template_hole 0, template_var 7),
               template_var 6))
           ))),
    ("SequentialComposition.seq_comp_secure_2",
     "[| secure_termination ?I ?D; ref_union_closed ?P; sequential ?P;
         secure ?P ?I ?D; secure ?Q ?I ?D;
         (?xs @ ?zs, ?Z) : seq_comp_failures ?P ?Q;
         (?xs @ [?y], {}) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ ?y # ipurge_tr ?I ?D (?D ?y) ?zs,
           ipurge_ref ?I ?D (?D ?y) ?zs ?Z)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 7),
              template_var 6)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 5),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_app
                       (template_app (template_hole 4, template_var 0),
                        template_hole 3))),
                  template_hole 2)),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 7),
                             template_var 6),
                           template_app (template_var 6, template_var 0)),
                         template_var 2)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_app (template_var 6, template_var 0)),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_1_case_2",
     "[| secure_termination ?I ?D; sequential ?P; secure ?P ?I ?D;
         secure ?Q ?I ?D; ?xs @ ?y # ?ys : sentences ?P;
         (?xs @ ?y # ?ys, ?X) : failures ?P; ([], ?Y) : failures ?Q |]
      ==> (?xs @ ipurge_tr ?I ?D (?D ?y) ?ys,
           ipurge_ref ?I ?D (?D ?y) ?ys (insert None ?X Int ?Y))
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 8),
              template_var 7)
            ),
        template_predicate
         (template_app (template_hole 15, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 6),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 5),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2))),
              template_app (template_hole 10, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 2))),
                  template_var 1)),
              template_app (template_hole 7, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 6),
                  template_var 0)),
              template_app (template_hole 7, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 12, template_var 4),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 5, template_var 8),
                           template_var 7),
                         template_app (template_var 7, template_var 3)),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 8),
                         template_var 7),
                       template_app (template_var 7, template_var 3)),
                     template_var 2),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_hole 1),
                         template_var 1)),
                     template_var 0)))),
             template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_2",
     "[| secure_termination ?I ?D; ref_union_closed ?P; sequential ?P;
         secure ?P ?I ?D; secure ?Q ?I ?D;
         (?ws, ?Z) : seq_comp_failures ?P ?Q; ?ws = ?xs @ ?zs;
         (?xs @ [?y], {}) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ ?y # ipurge_tr ?I ?D (?D ?y) ?zs,
           ipurge_ref ?I ?D (?D ?y) ?zs ?Z)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 8),
              template_var 7)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 6)),
        template_predicate
         (template_app (template_hole 11, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 6),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 7, template_var 6),
                template_var 5))
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_app
                       (template_app (template_hole 4, template_var 0),
                        template_hole 3))),
                  template_hole 2)),
              template_app
               (template_app (template_hole 7, template_var 6),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 8),
                             template_var 7),
                           template_app (template_var 7, template_var 0)),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 8),
                         template_var 7),
                       template_app (template_var 7, template_var 0)),
                     template_var 1),
                   template_var 3))),
             template_app
              (template_app (template_hole 7, template_var 6),
               template_var 5))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_1_case_1",
     "[| secure_termination ?I ?D; sequential ?P; secure ?P ?I ?D;
         ?xs @ ?y # ?ys ~: sentences ?P; (?xs @ ?y # ?ys, ?X) : failures ?P;
         None ~= ?y; None ~: set ?xs; None ~: set ?ys |]
      ==> (?xs @ ipurge_tr ?I ?D (?D ?y) ?ys,
           ipurge_ref ?I ?D (?D ?y) ?ys ?X)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 7),
              template_var 6)
            ),
        template_predicate
         (template_app (template_hole 16, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 5),
                template_var 7),
              template_var 6)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 2))),
                  template_app (template_hole 10, template_var 5))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 2))),
                  template_var 1)),
              template_app (template_hole 7, template_var 5))
            ),
        template_negation
         (template_equation (template_hole 5, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_hole 5),
                  template_app (template_hole 3, template_var 4))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_hole 5),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 12, template_var 4),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, template_var 7),
                           template_var 6),
                         template_app (template_var 6, template_var 3)),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_app (template_var 6, template_var 3)),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_2_case_1",
     "[| secure_termination ?I ?D; sequential ?P; secure ?P ?I ?D;
         ?xs @ ?zs ~: sentences ?P; (?xs @ ?zs, ?X) : failures ?P;
         None ~: set ?xs; None ~: set ?zs;
         (?xs @ [?y], {}) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ ?y # ipurge_tr ?I ?D (?D ?y) ?zs,
           ipurge_ref ?I ?D (?D ?y) ?zs ?X)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 7),
              template_var 6)
            ),
        template_predicate
         (template_app (template_hole 17, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 5),
                template_var 7),
              template_var 6)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 4),
                      template_var 3)),
                  template_app (template_hole 12, template_var 5))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 13, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_app (template_hole 9, template_var 5))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 4))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 13, template_var 4),
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_hole 4))),
                  template_hole 3)),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 13, template_var 4),
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 7),
                             template_var 6),
                           template_app (template_var 6, template_var 1)),
                         template_var 3)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_app (template_var 6, template_var 1)),
                     template_var 3),
                   template_var 2))),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 0))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_2_case_2",
     "[| secure_termination ?I ?D; sequential ?P; secure ?P ?I ?D;
         secure ?Q ?I ?D; ?xs @ ?zs : sentences ?P;
         (?xs @ ?zs, ?X) : failures ?P; ([], ?Y) : failures ?Q;
         (?xs @ [?y], {}) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ ?y # ipurge_tr ?I ?D (?D ?y) ?zs,
           ipurge_ref ?I ?D (?D ?y) ?zs (insert None ?X Int ?Y))
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 8),
              template_var 7)
            ),
        template_predicate
         (template_app (template_hole 16, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 5),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3)),
              template_app (template_hole 12, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 13, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_app (template_hole 9, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_hole 8),
                  template_var 1)),
              template_app (template_hole 9, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 13, template_var 4),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_hole 8))),
                  template_hole 6)),
              template_app
               (template_app (template_hole 5, template_var 6),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 13, template_var 4),
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 4, template_var 8),
                             template_var 7),
                           template_app (template_var 7, template_var 0)),
                         template_var 3)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 8),
                         template_var 7),
                       template_app (template_var 7, template_var 0)),
                     template_var 3),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_var 2)),
                     template_var 1)))),
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 5))
           ))),
    ("SequentialComposition.seq_comp_secure_aux_2_case_3",
     "[| secure_termination ?I ?D; ref_union_closed ?P; sequential ?P;
         secure ?P ?I ?D; secure ?Q ?I ?D; ?ws : sentences ?P;
         (?ys, ?Y) : failures ?Q; ?ys ~= []; ?ws @ ?ys = ?xs @ ?zs;
         (?xs @ [?y], {}) : seq_comp_failures ?P ?Q |]
      ==> (?xs @ ?y # ipurge_tr ?I ?D (?D ?y) ?zs,
           ipurge_ref ?I ?D (?D ?y) ?zs ?Y)
          : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 9),
              template_var 8)
            ),
        template_predicate
         (template_app (template_hole 16, template_var 7)),
        template_predicate
         (template_app (template_hole 15, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 7),
                template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 6),
                template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app (template_hole 12, template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_app (template_hole 9, template_var 6))
            ),
        template_negation
         (template_equation (template_var 4, template_hole 6)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_app
                       (template_app (template_hole 4, template_var 0),
                        template_hole 6))),
                  template_hole 3)),
              template_app
               (template_app (template_hole 2, template_var 7),
                template_var 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 1, template_var 9),
                             template_var 8),
                           template_app (template_var 8, template_var 0)),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 9),
                         template_var 8),
                       template_app (template_var 8, template_var 0)),
                     template_var 1),
                   template_var 3))),
             template_app
              (template_app (template_hole 2, template_var 7),
               template_var 6))
           ))),
    ("SequentialComposition.seq_comp_refusals_1",
     "(?xs, ?X) : seq_comp_failures ?P ?Q ==>
      EX R. ?X = (UN n<=length ?xs. UN W:R n. W) &
            (ALL W:R 0.
                ?xs ~: sentences ?P &
                None ~: set ?xs & (?xs, W) : failures ?P |
                ?xs : sentences ?P &
                (EX U V.
                    (?xs, U) : failures ?P &
                    ([], V) : failures ?Q & W = insert None U Int V)) &
            (ALL n:{0<..length ?xs}.
                ALL W:R n.
                   take (length ?xs - n) ?xs : sentences ?P &
                   (drop (length ?xs - n) ?xs, W) : failures ?Q) &
            (EX n:{..length ?xs}. EX W. W : R n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app (template_hole 30, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 29, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 28, t_empty)))),
    ("SequentialComposition.seq_comp_refusals_2",
     "[| ref_union_closed ?P; ref_union_closed ?Q;
         ?xs : Domain (seq_comp_failures ?P ?Q);
         ?X = (UN n<=length ?xs. UN W:?R n. W) &
         (ALL W:?R 0.
             ?xs ~: sentences ?P &
             None ~: set ?xs & (?xs, W) : failures ?P |
             ?xs : sentences ?P &
             (EX U V.
                 (?xs, U) : failures ?P &
                 ([], V) : failures ?Q & W = insert None U Int V)) &
         (ALL n:{0<..length ?xs}.
             ALL W:?R n.
                take (length ?xs - n) ?xs : sentences ?P &
                (drop (length ?xs - n) ?xs, W) : failures ?Q) |]
      ==> (?xs, ?X) : seq_comp_failures ?P ?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 30, template_var 4)),
        template_predicate
         (template_app (template_hole 30, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 2),
              template_app
               (template_hole 28,
                template_app
                 (template_app (template_hole 27, template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 1),
                  template_app
                   (template_hole 24,
                    template_app
                     (template_app (template_hole 23, t_empty),
                      template_app
                       (template_hole 21,
                        template_app
                         (template_hole 20, template_var 2)))))),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app (template_var 0, template_hole 18)),
                    t_empty)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_hole 18),
                      template_app (template_hole 20, template_var 2))),
                  t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 27, template_var 4),
               template_var 3))
           )))]
