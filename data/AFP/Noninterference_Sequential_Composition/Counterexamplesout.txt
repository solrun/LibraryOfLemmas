Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Tree" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.521s cpu time, 0.044s GC time
Loading theory "List_Interleaving.ListInterleaving" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.Counterexamples" via "Draft.SequentialComposition" via "Draft.Propaedeutics" via "Noninterference_Ipurge_Unwinding.DeterministicProcesses" via "Noninterference_Ipurge_Unwinding.IpurgeUnwinding")
### theory "HOL-Library.Set_Algebras"
### 0.203s elapsed time, 0.826s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.330s elapsed time, 1.323s cpu time, 0.123s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs")
Found termination order:
  "(%p. length (snd (snd (snd p)))) <*mlex*>
   (%p. length (fst (snd (snd p)))) <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.986s elapsed time, 3.747s cpu time, 0.837s GC time
Loading theory "Noninterference_CSP.CSPNoninterference" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.Counterexamples" via "Draft.SequentialComposition" via "Draft.Propaedeutics" via "Noninterference_Ipurge_Unwinding.DeterministicProcesses" via "Noninterference_Ipurge_Unwinding.IpurgeUnwinding")
Found termination order:
  "(%p. length (snd (snd (snd p)))) <*mlex*>
   (%p. length (fst (snd (snd p)))) <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.074s elapsed time, 4.102s cpu time, 0.839s GC time
Found termination order: "size <*mlex*> {}"
### theory "List_Interleaving.ListInterleaving"
### 1.311s elapsed time, 5.004s cpu time, 0.918s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Noninterference_CSP.CSPNoninterference"
### 0.519s elapsed time, 1.535s cpu time, 0.174s GC time
Loading theory "Noninterference_Ipurge_Unwinding.IpurgeUnwinding" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.Counterexamples" via "Draft.SequentialComposition" via "Draft.Propaedeutics" via "Noninterference_Ipurge_Unwinding.DeterministicProcesses")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.063s elapsed time, 6.894s cpu time, 1.170s GC time
Loading theory "Draft.Templates" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.129s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CounterexamplesMoreTemplates")
consts
  sources :: "('d * 'd) set => ('a => 'd) => 'd => 'a list => 'd set"
consts
  ipurge_tr_rev :: "('d * 'd) set => ('a => 'd) => 'd => 'a list => 'a list"
consts
  sources_aux ::
    "('d * 'd) set => ('a => 'd) => 'd set => 'a list => 'd set"
consts
  ipurge_tr_rev_aux ::
    "('d * 'd) set => ('a => 'd) => 'd set => 'a list => 'a list"
consts
  offset :: "nat => 'a => 'a list => nat option"
### theory "Noninterference_Ipurge_Unwinding.IpurgeUnwinding"
### 0.821s elapsed time, 1.744s cpu time, 0.171s GC time
Loading theory "Noninterference_Ipurge_Unwinding.DeterministicProcesses" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.Counterexamples" via "Draft.SequentialComposition" via "Draft.Propaedeutics")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.572s elapsed time, 1.247s cpu time, 0.215s GC time
### theory "Noninterference_Ipurge_Unwinding.DeterministicProcesses"
### 0.134s elapsed time, 0.277s cpu time, 0.085s GC time
Loading theory "Draft.Propaedeutics" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.Counterexamples" via "Draft.SequentialComposition")
Proofs for inductive predicate(s) "ipurge_fail_aux_t_setp"
  Proving monotonicity ...
### theory "Draft.Propaedeutics"
### 1.437s elapsed time, 2.121s cpu time, 0.952s GC time
Loading theory "Draft.SequentialComposition" (required by "Draft.CounterexamplesMoreTemplates" via "Draft.Counterexamples")
Proofs for inductive predicate(s) "seq_comp_failuresp"
  Proving monotonicity ...
### theory "Draft.SequentialComposition"
### 0.480s elapsed time, 0.629s cpu time, 0.202s GC time
Loading theory "Draft.Counterexamples" (required by "Draft.CounterexamplesMoreTemplates")
### theory "Draft.Counterexamples"
### 0.566s elapsed time, 1.280s cpu time, 0.992s GC time
Loading theory "Draft.CounterexamplesMoreTemplates"
val templateLemmas =
   [("Counterexamples.not_secure_comp_1_aux_aux_1",
     "(?xs, ?X) : seq_comp_failures P\<^sub>1 Q ==> ?xs ~= [Some b]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 6))
            )],
       template_negation
        (
           template_equation
            (template_var 1,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)),
               template_hole 0))
           ))),
    ("Counterexamples.not_secure_comp_2_aux_aux_1",
     "(?xs, ?X) : seq_comp_failures P\<^sub>2 Q ==>
      ?xs ~= [Some b, Some a]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_negation
        (
           template_equation
            (template_var 1,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 1)),
                 template_hole 0)))
           ))),
    ("Counterexamples.next_events_snd",
     "(?x : next_events (ts_process {[], [Some b]}) ?xs) =
      (?xs @ [?x] : {[], [Some b]})",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_hole 3)),
                       template_hole 6)),
                   template_hole 2)))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 6))),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)),
                 template_hole 6)),
             template_hole 2))))),
    ("Counterexamples.unwinding_snd",
     "secure (ts_process {[], [Some b]}) ?I ?D =
      d_weakly_future_consistent (ts_process {[], [Some b]}) ?I ?D
       (rel_ipurge (ts_process {[], [Some b]}) ?I ?D)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_hole 3)),
                       template_hole 6)),
                   template_hole 2)))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_hole 3)),
                         template_hole 6)),
                     template_hole 2)))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_hole 3)),
                         template_hole 6)),
                     template_hole 2)))),
             template_var 1),
           template_var 0)))),
    ("Counterexamples.next_events_fst_1",
     "(?x : next_events (ts_process {[], [Some a], [Some a, None]}) ?xs) =
      (?xs @ [?x] : {[], [Some a], [Some a, None]})",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_hole 4)),
                         template_app
                          (template_app (template_hole 6, template_hole 3),
                           template_hole 7))),
                     template_hole 2))))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 7))),
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4)),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)),
                   template_app
                    (template_app (template_hole 6, template_hole 3),
                     template_hole 7))),
               template_hole 2)))))),
    ("Counterexamples.next_events_fst_2",
     "(?x : next_events (ts_process {[], [None], [Some a], [Some a, None]})
             ?xs) =
      (?xs @ [?x] : {[], [None], [Some a], [Some a, None]})",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 4, template_hole 3)),
                         template_hole 7)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 4, template_hole 3)),
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_hole 7))),
                       template_hole 2)))))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_hole 7))),
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 4, template_hole 3)),
                   template_hole 7)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 4, template_hole 3)),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 7))),
                 template_hole 2))))))),
    ("Counterexamples.unwinding_fst_1",
     "secure (ts_process {[], [Some a], [Some a, None]}) ?I ?D =
      d_weakly_future_consistent (ts_process {[], [Some a], [Some a, None]})
       ?I ?D
       (rel_ipurge (ts_process {[], [Some a], [Some a, None]}) ?I ?D)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_hole 4)),
                         template_app
                          (template_app (template_hole 6, template_hole 3),
                           template_hole 7))),
                     template_hole 2))))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_hole 4)),
                         template_hole 7)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4)),
                           template_app
                            (template_app
                              (template_hole 6, template_hole 3),
                             template_hole 7))),
                       template_hole 2))))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_hole 4)),
                         template_hole 7)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4)),
                           template_app
                            (template_app
                              (template_hole 6, template_hole 3),
                             template_hole 7))),
                       template_hole 2))))),
             template_var 1),
           template_var 0)))),
    ("Counterexamples.unwinding_fst_2",
     "secure (ts_process {[], [None], [Some a], [Some a, None]}) ?I ?D =
      d_weakly_future_consistent
       (ts_process {[], [None], [Some a], [Some a, None]}) ?I ?D
       (rel_ipurge (ts_process {[], [None], [Some a], [Some a, None]}) ?I
         ?D)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 4, template_hole 3)),
                         template_hole 7)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 4, template_hole 3)),
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_hole 7))),
                       template_hole 2)))))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 6, template_hole 5),
                         template_hole 7)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 4, template_hole 3)),
                           template_hole 7)),
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 4, template_hole 3)),
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_hole 7))),
                         template_hole 2)))))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 6, template_hole 5),
                         template_hole 7)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 4, template_hole 3)),
                           template_hole 7)),
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 4, template_hole 3)),
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_hole 7))),
                         template_hole 2)))))),
             template_var 1),
           template_var 0))))]:
   (string * thm * template) list
### theory "Draft.CounterexamplesMoreTemplates"
### 0.348s elapsed time, 0.513s cpu time, 0.045s GC time
val it = (): unit
