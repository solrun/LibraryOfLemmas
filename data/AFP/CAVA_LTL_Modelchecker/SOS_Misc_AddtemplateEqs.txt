   [("SOS_Misc_Add.assert_option_eqs",
     "(assert_option ?\<Phi> = None) = (~ ?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("SOS_Misc_Add.assert_option_eqs",
     "(assert_option ?\<Phi> = Some ?x) = ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("SOS_Misc_Add.all_disjx_conv", "(ALL x. x | ?P x) = ?P False",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("SOS_Misc_Add.all_disjx_conv", "(ALL x. x | ?P (~ x)) = ?P True",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("SOS_Misc_Add.find_min_idx_None_conv",
     "(find_min_idx ?P ?l = None) = (ALL a:set ?l. ~ ?P a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((?a | ?b) = (~ ?a)) = (?a = False & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app (template_hole 3, template_var 1)),
       template_dunno)),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((?b | ?a) = (~ ?a)) = (?a = False & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app (template_hole 3, template_var 0)),
       template_dunno)),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((?b | ~ ?a) = ?a) = (?a = True & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_var 0),
       template_dunno)),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((~ ?a | ?b) = ?a) = (?a = True & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_var 1),
       template_dunno)),
    ("SOS_Misc_Add.do_set_push_Image",
     "?g ` (?m >>= ?f) = ?m >>= (%x. ?g ` ?f x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("SOS_Misc_Add.do_set_push_Image",
     "?g ` Let ?m ?f = (let x = ?m in ?g ` ?f x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("SOS_Misc_Add.case_option_distrib",
     "?f (case ?x of None => ?fn | Some v => ?fs v) =
      (case ?x of None => ?f ?fn | Some v => ?f (?fs v))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2), t_empty),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 3, template_var 2)),
           t_empty),
         template_var 0))),
    ("SOS_Misc_Add.case_sum_distrib",
     "?f (case ?x of Inl x => ?fl x | Inr x => ?fr x) =
      (case ?x of Inl x => ?f (?fl x) | Inr x => ?f (?fr x))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app (template_app (template_hole 1, t_empty), t_empty),
           template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0)))]
