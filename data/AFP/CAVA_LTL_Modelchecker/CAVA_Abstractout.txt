Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CAVA_AbstractTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CAVA_AbstractTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.CAVA_AbstractTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "Draft.CAVA_Abstract" (required by "Draft.CAVA_AbstractTemplates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.180s elapsed time, 0.706s cpu time, 0.063s GC time
### theory "HOL-Library.Set_Algebras"
### 0.277s elapsed time, 1.006s cpu time, 0.063s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CAVA_AbstractTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale impl_model_checker
  fixes sa_rel :: "('sai * ('s, 'prop set, 'sa_more) sa_rec_scheme) set"
    and
    igba_rel :: "('igbai * ('q, 'prop set, 'igba_more) igba_rec_scheme) set"
    and igbg_rel :: "('igbgi * ('sq, 'igbg_more) igb_graph_rec_scheme) set"
    and ce_rel :: "('cei * (nat => 'sq)) set"
    and mce_rel :: "('mcei * (nat => 's)) set"
    and ltl_to_gba_impl :: "'cfg_l2b => 'prop ltlc => 'igbai"
    and inter_impl :: "'cfg_int => 'sai => 'igbai => 'igbgi * ('sq => 's)"
    and find_ce_impl :: "'cfg_ce => 'igbgi => 'cei option option"
    and map_run_impl :: "('sq => 's) => 'cei => 'mcei"
  assumes
    "impl_model_checker sa_rel igba_rel igbg_rel ce_rel mce_rel
      ltl_to_gba_impl inter_impl find_ce_impl map_run_impl"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.BigO"
### 0.720s elapsed time, 2.141s cpu time, 0.257s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.CAVA_Abstract"
### 1.172s elapsed time, 3.536s cpu time, 0.403s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.872s elapsed time, 4.575s cpu time, 0.909s GC time
Loading theory "Draft.Templates" (required by "Draft.CAVA_AbstractTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.096s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CAVA_AbstractTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.475s elapsed time, 0.527s cpu time, 0.070s GC time
Loading theory "Draft.CAVA_AbstractTemplates"
val templateLemmas =
   [("CAVA_Abstract.abs_model_check_correct",
     "abs_model_check ?T1.0 ?T2.0 ?T3.0 ?T4.0 ?sys ?\<phi>
      <= ASSERT (sa ?sys) >>=
         (%_. ASSERT (finite ((g_E ?sys)^* `` g_V0 ?sys)) >>=
              (%_. SPEC
                    (%res. case res of
                           None => sa.lang ?sys <= language_ltlc ?\<phi>
                           | Some None =>
                               ~ sa.lang ?sys <= language_ltlc ?\<phi>
                           | Some (Some r) =>
                               graph_defs.is_run ?sys r &
                               sa_L ?sys o r ~: language_ltlc ?\<phi>)))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 21, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 20,
           template_app
            (template_hole 19,
             template_app (template_hole 18, template_var 1))),
         t_empty)))]:
   (string * thm * template) list
### theory "Draft.CAVA_AbstractTemplates"
### 2.207s elapsed time, 2.669s cpu time, 0.312s GC time
val it = (): unit
