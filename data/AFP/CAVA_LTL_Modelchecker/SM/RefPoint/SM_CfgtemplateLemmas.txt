   [("SM_Cfg.finite_approx_reachable", "finite (approx_reachable ?c)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SM_Cfg.approx_reachable_refl", "?c : approx_reachable ?c",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))
         )),
    ("SM_Cfg.finite_cfg_reachable",
     "finite (Collect (cfg_lts.reachable ?c))",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("SM_Cfg.approx_reachable_approx",
     "cfg_lts.reachable ?c ?c' ==> ?c' : approx_reachable ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SM_Cfg.approx_reachable_closed",
     "[| ?c : approx_reachable ?c0.0; cfg ?c ?a ?c' |]
      ==> ?c' : approx_reachable ?c0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 2))
           ))),
    ("SM_Cfg.Seq_cases",
     "[| cfg (Seq ?c1.0 ?c2.0) ?e ?c';
         [| ?c1.0 = Skip; ?e = Inl ASkip; ?c' = ?c2.0 |] ==> ?P;
         [| ?c' = ?c2.0; cfg ?c1.0 ?e Skip |] ==> ?P;
         !!c1'.
            [| ?c' = Seq c1' ?c2.0; cfg ?c1.0 ?e c1'; c1' ~= Skip |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 4, template_hole 5)],
          template_implication
           ([template_equation
              (template_var 2,
               template_app (template_hole 3, template_hole 2))],
            template_implication
             ([template_equation (template_var 1, template_var 3)],
              template_predicate (template_var 0)))),
        template_implication
         ([template_equation (template_var 1, template_var 3)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 8, template_var 4),
                     template_var 2),
                   template_hole 5)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0)))]
