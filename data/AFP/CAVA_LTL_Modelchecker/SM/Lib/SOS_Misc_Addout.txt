Loading theory "Draft.SOS_Misc_Add" (required by "Draft.SOS_Misc_AddTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SOS_Misc_AddTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SOS_Misc_AddTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.SOS_Misc_AddTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
consts
  assert_option :: "bool => unit option"
consts
  find_min_idx :: "('a => bool) => 'a list => nat option"
### theory "Draft.SOS_Misc_Add"
### 0.128s elapsed time, 0.489s cpu time, 0.057s GC time
### theory "HOL-Library.Function_Algebras"
### 0.148s elapsed time, 0.551s cpu time, 0.057s GC time
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.669s cpu time, 0.057s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SOS_Misc_AddTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.703s elapsed time, 1.455s cpu time, 0.171s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.649s elapsed time, 2.979s cpu time, 0.371s GC time
Loading theory "Draft.Templates" (required by "Draft.SOS_Misc_AddTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.065s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SOS_Misc_AddTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.676s elapsed time, 1.019s cpu time, 0.500s GC time
Loading theory "Draft.SOS_Misc_AddTemplates"
val templateLemmas =
   [("SOS_Misc_Add.assert_option_eqs",
     "(assert_option ?\<Phi> = None) = (~ ?\<Phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("SOS_Misc_Add.assert_option_eqs",
     "(assert_option ?\<Phi> = Some ?x) = ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_var 1)),
    ("SOS_Misc_Add.all_disjx_conv", "(ALL x. x | ?P x) = ?P False",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("SOS_Misc_Add.all_disjx_conv", "(ALL x. x | ?P (~ x)) = ?P True",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("SOS_Misc_Add.find_min_idx_None_conv",
     "(find_min_idx ?P ?l = None) = (ALL a:set ?l. ~ ?P a)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((?a | ?b) = (~ ?a)) = (?a = False & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app (template_hole 3, template_var 1)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 0))
           ))),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((?b | ?a) = (~ ?a)) = (?a = False & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app (template_hole 3, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 0))
           ))),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((?b | ~ ?a) = ?a) = (?a = True & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 0))
           ))),
    ("SOS_Misc_Add.disj_eq_nota_conv",
     "((~ ?a | ?b) = ?a) = (?a = True & ?b = True)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_var 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("SOS_Misc_Add.do_set_push_Image",
     "?g ` (?m >>= ?f) = ?m >>= (%x. ?g ` ?f x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("SOS_Misc_Add.do_set_push_Image",
     "?g ` Let ?m ?f = (let x = ?m in ?g ` ?f x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("SOS_Misc_Add.case_option_distrib",
     "?f (case ?x of None => ?fn | Some v => ?fs v) =
      (case ?x of None => ?f ?fn | Some v => ?f (?fs v))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2), t_empty),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 3, template_var 2)),
           t_empty),
         template_var 0))),
    ("SOS_Misc_Add.find_min_idx_SomeD",
     "find_min_idx ?P ?l = Some ?i ==> ?P (?l ! ?i) & ?i < length ?l",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_var 2,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("SOS_Misc_Add.case_sum_distrib",
     "?f (case ?x of Inl x => ?fl x | Inr x => ?fr x) =
      (case ?x of Inl x => ?f (?fl x) | Inr x => ?f (?fr x))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app (template_app (template_hole 1, t_empty), t_empty),
           template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("SOS_Misc_Add.finite_bindI",
     "[| finite ?m; !!x. x : ?m ==> finite (?f x) |]
      ==> finite (?m >>= ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("SOS_Misc_Add.finite_ImageI",
     "[| finite ?A; !!a. a : ?A ==> finite (?R `` {a}) |]
      ==> finite (?R `` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))
           ))),
    ("SOS_Misc_Add.neq_Some_bool_cases",
     "[| ?a ~= Some ?x; ?a = None ==> ?thesis;
         ?a = Some (~ ?x) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 0)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 1)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("SOS_Misc_Add.find_min_idx_SomeD_complete",
     "find_min_idx ?P ?l = Some ?i ==>
      ?P (?l ! ?i) & ?i < length ?l & (ALL j<?i. ~ ?P (?l ! j))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 2), template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_var 2,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app (template_hole 3, template_var 1))),
               template_app (template_hole 2, t_empty)))
           ))),
    ("SOS_Misc_Add.do_set_eq_bind",
     "[| ?m' = ?m; !!x. x : ?m ==> ?f x = ?g x |]
      ==> ?m >>= ?f = ?m' >>= ?g",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_app (template_hole 0, template_var 3), t_empty))))]:
   (string * thm * template) list
### theory "Draft.SOS_Misc_AddTemplates"
### 0.321s elapsed time, 0.445s cpu time, 0.000s GC time
val it = (): unit
