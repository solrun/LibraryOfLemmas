Loading theory "Draft.SM_Syntax" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Decide_Locality" via "Draft.SM_Semantics" via "Draft.SM_State")
Loading theory "Draft.SOS_Misc_Add" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Gen_Scheduler_Refine" via "Draft.Gen_Scheduler")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SM_IndepTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SM_IndepTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  assert_option :: "bool => unit option"
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
consts
  find_min_idx :: "('a => bool) => 'a list => nat option"
### theory "Draft.SOS_Misc_Add"
### 0.113s elapsed time, 0.448s cpu time, 0.049s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SM_IndepTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.529s cpu time, 0.049s GC time
Loading theory "Draft.LTS" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Gen_Scheduler_Refine" via "Draft.Gen_Scheduler")
locale LTS
  fixes step :: "'s => 'l => 's => bool"
consts
  path :: "'s => 'l list => 's => bool"
### theory "HOL-Library.Set_Algebras"
### 0.226s elapsed time, 0.898s cpu time, 0.049s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SM_IndepTemplates" via "Draft.ExtrEqs")
locale asystem
  fixes init :: "'c => bool"
    and astep :: "'c => 'a => 'c => bool"
### theory "Draft.LTS"
### 0.181s elapsed time, 0.678s cpu time, 0.090s GC time
Loading theory "Draft.Gen_Scheduler" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Gen_Scheduler_Refine")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.928s elapsed time, 3.395s cpu time, 0.764s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Gen_Scheduler
  fixes cstep :: "'c => 'a + 'b => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool option"
    and ex :: "'ls * 'gs => 'a => ('ls * 'gs) option"
Found termination order: "size <*mlex*> {}"
locale Gen_Scheduler_linit
  fixes cstep :: "'c => 'a + 'b => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool option"
    and ex :: "'ls * 'gs => 'a => ('ls * 'gs) option"
    and ginit :: "('c, 'ls, 'gs) global_config set"
    and glabel :: "('c, 'ls, 'gs) global_config => 'l"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.180s elapsed time, 7.175s cpu time, 1.104s GC time
Loading theory "Draft.Templates" (required by "Draft.SM_IndepTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.058s elapsed time, 0.171s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SM_IndepTemplates")
### theory "Draft.Gen_Scheduler"
### 2.083s elapsed time, 6.730s cpu time, 1.014s GC time
Loading theory "Draft.Gen_Scheduler_Refine" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System")
locale Gen_Scheduler'
  fixes cstep :: "'c => 'a => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool"
    and ex :: "'ls * 'gs => 'a => 'ls * 'gs"
locale Gen_Scheduler'_linit
  fixes cstep :: "'c => 'a => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool"
    and ex :: "'ls * 'gs => 'a => 'ls * 'gs"
    and init :: "('c, 'ls, 'gs) global_config set"
    and label :: "('c, 'ls, 'gs) global_config => 'l"
locale sched_typing
  fixes cstep1 :: "'c => 'a + 'b => 'c => bool"
    and en1 :: "'ls * 'gs => 'a => bool option"
    and ex1 :: "'ls * 'gs => 'a => ('ls * 'gs) option"
    and cstep2 :: "'c => 'a => 'c => bool"
    and en2 :: "'ls * 'gs => 'a => bool"
    and ex2 :: "'ls * 'gs => 'a => 'ls * 'gs"
    and wf_local :: "'c => 'ls => 'gs => bool"
  assumes "sched_typing cstep1 en1 ex1 cstep2 en2 ex2 wf_local"
consts
  wf_global :: "('c, 'ls, 'gs) global_config option => bool"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.875s elapsed time, 2.621s cpu time, 0.869s GC time
locale sched_typing_init
  fixes cstep1 :: "'c => 'a + 'b => 'c => bool"
    and en1 :: "'ls * 'gs => 'a => bool option"
    and ex1 :: "'ls * 'gs => 'a => ('ls * 'gs) option"
    and cstep2 :: "'c => 'a => 'c => bool"
    and en2 :: "'ls * 'gs => 'a => bool"
    and ex2 :: "'ls * 'gs => 'a => 'ls * 'gs"
    and ginit :: "('c, 'ls, 'gs) global_config set"
    and glabel :: "('c, 'ls, 'gs) global_config => 'l"
    and wf_local :: "'c => 'ls => 'gs => bool"
  assumes "sched_typing_init cstep1 en1 ex1 cstep2 en2 ex2 ginit wf_local"
### theory "Draft.Gen_Scheduler_Refine"
### 0.941s elapsed time, 2.711s cpu time, 0.924s GC time
Loading theory "Draft.Gen_Cfg_Bisim" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Variables" via "Draft.SM_Pid" via "Draft.SM_Visible" via "Draft.Rename_Cfg")
Loading theory "Draft.Pid_Scheduler" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Variables" via "Draft.SM_Pid")
locale Gen_Cfg_Bisim_Pre
  fixes rel_c :: "'c => 'd => bool"
    and cstep1 :: "'c => 'a => 'c => bool"
    and cstep2 :: "'d => 'a => 'd => bool"
    and en :: "'ls * 'gs => 'a => bool"
    and ex :: "'ls * 'gs => 'a => 'ls * 'gs"
  assumes "Gen_Cfg_Bisim_Pre rel_c cstep1 cstep2"
### theory "Draft.SM_Syntax"
### 3.565s elapsed time, 11.315s cpu time, 2.157s GC time
Loading theory "Draft.SM_Cfg" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Decide_Locality" via "Draft.SM_Semantics")
Loading theory "Draft.SM_State" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Decide_Locality" via "Draft.SM_Semantics")
locale Gen_Cfg_LBisim
  fixes rel_c :: "'c => 'd => bool"
    and cstep1 :: "'c => 'a => 'c => bool"
    and init1 :: "('c, 'ls, 'gs) global_config set"
    and label1 :: "('c, 'ls, 'gs) global_config => 'l"
    and cstep2 :: "'d => 'a => 'd => bool"
    and init2 :: "('d, 'ls, 'gs) global_config set"
    and label2 :: "('d, 'ls, 'gs) global_config => 'l"
    and en :: "'ls * 'gs => 'a => bool"
    and ex :: "'ls * 'gs => 'a => 'ls * 'gs"
  assumes "Gen_Cfg_LBisim rel_c cstep1 init1 label1 cstep2 init2 label2"
### theory "Draft.Gen_Cfg_Bisim"
### 0.499s elapsed time, 1.721s cpu time, 0.191s GC time
consts
  val_of_bool :: "bool => 32 word"
locale Gen_Scheduler'
  fixes cstep :: "'c => 'a => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool"
    and ex :: "'ls * 'gs => 'a => 'ls * 'gs"
### theory "Draft.SM_State"
### 1.572s elapsed time, 5.155s cpu time, 1.308s GC time
locale Pid_Gen_Scheduler_linit
  fixes cstep :: "'c => 'a => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool"
    and ex :: "'ls * 'gs => 'a => 'ls * 'gs"
    and init :: "('c, 'ls, 'gs) global_config set"
    and label :: "('c, 'ls, 'gs) global_config => 'l"
    and pid_init :: "('c, 'ls, 'gs) pid_global_config"
    and pid_label :: "('c, 'ls, 'gs) pid_global_config => 'l"
  assumes "Pid_Gen_Scheduler_linit init label pid_init pid_label"
### theory "Draft.Pid_Scheduler"
### 2.491s elapsed time, 7.207s cpu time, 1.436s GC time
Proofs for inductive predicate(s) "cfg"
  Proving monotonicity ...
consts
  reachable_term_order_aux :: "cmd => nat"
### theory "Draft.SM_Cfg"
### 3.665s elapsed time, 8.066s cpu time, 1.513s GC time
Loading theory "Draft.SM_Semantics" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System" via "Draft.Decide_Locality")
consts
  eval_bin_op :: "bin_op => 32 Word.word => 32 Word.word => 32 Word.word"
consts
  eval_un_op :: "un_op => 32 Word.word => 32 Word.word"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  la_en :: "local_state * global_state => action => bool option"
Found termination order: "{}"
### theory "Draft.SM_Semantics"
### 2.609s elapsed time, 2.797s cpu time, 0.204s GC time
Loading theory "Draft.Decide_Locality" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable" via "Draft.Type_System")
Loading theory "Draft.SM_LTL" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Variables" via "Draft.SM_Pid" via "Draft.SM_Visible")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Decide_Locality"
### 0.781s elapsed time, 1.677s cpu time, 0.183s GC time
Loading theory "Draft.Type_System" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Finite_Reachable")
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.SM_LTL"
### 2.205s elapsed time, 4.622s cpu time, 0.422s GC time
Found termination order: "{}"
locale well_typed_prog
  fixes prog :: "program"
  assumes "well_typed_prog prog"
### theory "Draft.Type_System"
### 1.744s elapsed time, 3.273s cpu time, 0.239s GC time
Loading theory "Draft.SM_Finite_Reachable" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep")
locale well_typed_prog
  fixes prog :: "program"
  assumes "well_typed_prog prog"
### theory "Draft.SM_Finite_Reachable"
### 0.312s elapsed time, 0.379s cpu time, 0.077s GC time
Loading theory "Draft.Rename_Cfg" (required by "Draft.SM_IndepTemplates" via "Draft.SM_Indep" via "Draft.SM_Variables" via "Draft.SM_Pid" via "Draft.SM_Visible")
consts
  cfg_succ :: "cmd => ((action + brk_ctd) * cmd) set"
consts
  cfg_succ_list :: "cmd => ((action + brk_ctd) * cmd) list"
consts
  cr_index_of :: "'a list => 'a => nat option"
locale sl_graph
  fixes init :: "'a => bool"
    and astep :: "'a => 'b => 'a => bool"
    and rlist :: "'a list"
    and succ_list :: "'a => ('b * 'a) list"
  assumes "sl_graph init astep rlist succ_list"
locale cprog
  fixes prog :: "program"
locale well_typed_prog
  fixes prog :: "program"
  assumes "well_typed_prog prog"
### theory "Draft.Rename_Cfg"
### 2.661s elapsed time, 2.767s cpu time, 0.171s GC time
*** Failed to load theory "Draft.SM_Visible" (unresolved "Draft.Rename_Cfg")
*** Failed to load theory "Draft.SM_Pid" (unresolved "Draft.SM_Visible")
*** Failed to load theory "Draft.SM_Variables" (unresolved "Draft.SM_Pid")
*** Failed to load theory "Draft.SM_Indep" (unresolved "Draft.SM_Variables")
*** Failed to load theory "Draft.SM_IndepTemplates" (unresolved "Draft.SM_Indep")
*** exception Protocol_Message
***   [("function", "invoke_scala"), ("name", "make_directory"), ("id", "308")] raised (line 124 of "General/output.ML")
*** At command "export_code" (line 733 of "$AFP/CAVA_LTL_Modelchecker/SM/Refine/Rename_Cfg.thy")
Exception- TOPLEVEL_ERROR raised
