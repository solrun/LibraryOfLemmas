Loading theory "Draft.SM_Syntax" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality" via "Draft.SM_Semantics" via "Draft.SM_State")
Loading theory "Draft.SOS_Misc_Add" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality" via "Draft.SM_Semantics" via "Draft.SM_Cfg")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Decide_LocalityTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Decide_LocalityTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  assert_option :: "bool => unit option"
consts
  find_min_idx :: "('a => bool) => 'a list => nat option"
### theory "Draft.SOS_Misc_Add"
### 0.123s elapsed time, 0.480s cpu time, 0.072s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Decide_LocalityTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Function_Algebras"
### 0.156s elapsed time, 0.611s cpu time, 0.072s GC time
Loading theory "Draft.LTS" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality" via "Draft.SM_Semantics" via "Draft.SM_Cfg")
locale LTS
  fixes step :: "'s => 'l => 's => bool"
consts
  path :: "'s => 'l list => 's => bool"
### theory "HOL-Library.Set_Algebras"
### 0.234s elapsed time, 0.923s cpu time, 0.072s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Decide_LocalityTemplates" via "Draft.ExtrEqs")
locale asystem
  fixes init :: "'c => bool"
    and astep :: "'c => 'a => 'c => bool"
### theory "Draft.LTS"
### 0.188s elapsed time, 0.707s cpu time, 0.136s GC time
Loading theory "Draft.Gen_Scheduler" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality" via "Draft.SM_Semantics")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.968s elapsed time, 3.558s cpu time, 0.930s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Gen_Scheduler
  fixes cstep :: "'c => 'a + 'b => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool option"
    and ex :: "'ls * 'gs => 'a => ('ls * 'gs) option"
Found termination order: "size <*mlex*> {}"
locale Gen_Scheduler_linit
  fixes cstep :: "'c => 'a + 'b => 'c => bool"
    and en :: "'ls * 'gs => 'a => bool option"
    and ex :: "'ls * 'gs => 'a => ('ls * 'gs) option"
    and ginit :: "('c, 'ls, 'gs) global_config set"
    and glabel :: "('c, 'ls, 'gs) global_config => 'l"
### theory "HOL-Library.Tree"
### 2.068s elapsed time, 6.906s cpu time, 1.216s GC time
Loading theory "Draft.Templates" (required by "Draft.Decide_LocalityTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.087s elapsed time, 0.243s cpu time, 0.080s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Decide_LocalityTemplates")
### theory "Draft.Gen_Scheduler"
### 2.020s elapsed time, 6.578s cpu time, 1.160s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.792s elapsed time, 1.912s cpu time, 0.681s GC time
### theory "Draft.SM_Syntax"
### 3.327s elapsed time, 9.850s cpu time, 2.087s GC time
Loading theory "Draft.SM_Cfg" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality" via "Draft.SM_Semantics")
Loading theory "Draft.SM_State" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality" via "Draft.SM_Semantics")
consts
  val_of_bool :: "bool => 32 word"
### theory "Draft.SM_State"
### 0.994s elapsed time, 2.108s cpu time, 0.190s GC time
Proofs for inductive predicate(s) "cfg"
  Proving monotonicity ...
consts
  reachable_term_order_aux :: "cmd => nat"
### theory "Draft.SM_Cfg"
### 3.056s elapsed time, 4.278s cpu time, 0.359s GC time
Loading theory "Draft.SM_Semantics" (required by "Draft.Decide_LocalityTemplates" via "Draft.Decide_Locality")
consts
  eval_bin_op :: "bin_op => 32 Word.word => 32 Word.word => 32 Word.word"
consts
  eval_un_op :: "un_op => 32 Word.word => 32 Word.word"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  la_en :: "local_state * global_state => action => bool option"
Found termination order: "{}"
### theory "Draft.SM_Semantics"
### 3.006s elapsed time, 3.913s cpu time, 1.184s GC time
Loading theory "Draft.Decide_Locality" (required by "Draft.Decide_LocalityTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Decide_Locality"
### 0.785s elapsed time, 0.915s cpu time, 0.105s GC time
Loading theory "Draft.Decide_LocalityTemplates"
val templateLemmas =
   [("Decide_Locality.dom_init_valuation_eq_set",
     "dom (init_valuation ?l) = set ?l",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Decide_Locality.dloc_lc_state",
     "local_config.state (dloc_lc ?lc) = local_config.state ?lc",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Decide_Locality.dloc_gc_state",
     "global_config.state (dloc_gc ?gc) = global_config.state ?gc",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Decide_Locality.dloc_rel_init",
     "dloc_gc (init_gc ?prog) = init_gc (dloc ?prog)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Decide_Locality.dloc_eq_skip_conv",
     "(Skip = dloc_cmd ?L ?c) = (?c = Skip)",
     template_bimplication
      (template_equation
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_equation (template_var 0, template_hole 1))),
    ("Decide_Locality.dloc_eq_skip_conv",
     "(dloc_cmd ?L ?c = Skip) = (?c = Skip)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Decide_Locality.dloc_rel_label",
     "li.label (map_option dloc_gc ?gc) = li.label ?gc",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2), template_var 0))),
    ("Decide_Locality.dloc_ai_conv",
     "(Inr ?b = dloc_ai ?L ?y) = (?y = Inr ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 2)))),
    ("Decide_Locality.dloc_rel_gstep_succ",
     "li.gstep_succ (dloc_gc ?gc) = map_option dloc_gc ` li.gstep_succ ?gc",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app (template_hole 0, template_hole 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4),
             template_hole 3),
           template_var 0)))),
    ("Decide_Locality.dloc_la_en_correct",
     "la_en (?ls, ?gs) (dloc_a (ls_vars ?ls) ?a) = la_en (?ls, ?gs) ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Decide_Locality.dloc_exp_correct",
     "eval_exp (dloc_exp (ls_vars ?ls) ?e) (?ls, ?gs) =
      eval_exp ?e (?ls, ?gs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2))),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Decide_Locality.dloc_la_ex_correct",
     "la_ex (?ls, ?gs) (dloc_a (ls_vars ?ls) ?a) = la_ex (?ls, ?gs) ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Decide_Locality.dloc_ai_conv",
     "(Inl ?a = dloc_ai ?L ?y) = (EX aa. ?y = Inl aa & ?a = dloc_a ?L aa)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Decide_Locality.la_ex_pres_gs_vars",
     "la_ex (?ls, ?gs) ?a = Some (?ls', ?gs') ==>
      gs_vars ?gs' = gs_vars ?gs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 3))))),
    ("Decide_Locality.la_ex_pres_ls_vars",
     "la_ex (?ls, ?gs) ?a = Some (?ls', ?gs') ==>
      ls_vars ?ls' = ls_vars ?ls",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 4))))),
    ("Decide_Locality.image_mset_eq_sng_conv",
     "(?f `# ?m = {#?y#}) = (EX x. ?m = {#x#} & ?y = ?f x)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app (template_hole 5, t_empty))),
    ("Decide_Locality.cfg_dloc",
     "cfg (dloc_cmd ?L ?c) ?da ?dc' =
      (EX c' a. ?dc' = dloc_cmd ?L c' & ?da = dloc_ai ?L a & cfg ?c a c')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Decide_Locality.dloc_rel_gstep",
     "((map_option dloc_gc ?gc, ?dgc') : li.gstep) =
      (EX gc'. ?dgc' = map_option dloc_gc gc' & (?gc, gc') : li.gstep)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_hole 3)),
       template_app (template_hole 2, t_empty))),
    ("Decide_Locality.image_mset_eq_add_conv",
     "(?f `# ?m = ?a' + ?b') =
      (EX a b. ?m = a + b & ?f `# a = ?a' & ?f `# b = ?b')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Decide_Locality.bind_set_map",
     "[| ?g ` ?m = ?m'; !!x. x : ?m ==> ?f x = ?f' (?g x) |]
      ==> ?m >>= ?f = ?m' >>= ?f'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Decide_Locality.choose_action_as_map_aux",
     "map_prod (dloc_ai (lc_vars ?lc)) (dloc_cmd (lc_vars ?lc)) `
      {(a, c'). cfg (command ?lc) a c'} =
      {(a, c'). cfg (command (dloc_lc ?lc)) a c'}",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 0))))),
             template_app
              (template_hole 5,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)))))),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Decide_LocalityTemplates"
### 2.505s elapsed time, 2.907s cpu time, 0.181s GC time
val it = (): unit
