   [("SM_Finite_Reachable.gco_approx_finite", "finite (gco_approx ?prog)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SM_Finite_Reachable.finite_global_var_approx",
     "finite (global_var_approx ?prog)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SM_Finite_Reachable.finite_local_var_approx",
     "finite (local_var_approx ?prog)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SM_Finite_Reachable.ginit_approx", "init_gc ?prog : gc_approx ?prog",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SM_Finite_Reachable.finitely_many_lists_for_multiset",
     "finite {l. mset l = ?m}",
     template_predicate
      (
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))
         )),
    ("SM_Finite_Reachable.obtain_list_of_multiset",
     "(!!l. mset l = ?m ==> ?thesis) ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("SM_Finite_Reachable.init_approx",
     "?gc : li.init ?prog ==> ?gc : gco_approx ?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SM_Finite_Reachable.finite_maps_to_finite_type",
     "[| finite ?D; finite UNIV |] ==> finite (dom -` Pow ?D)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (template_app (template_hole 5, template_hole 4))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SM_Finite_Reachable.lists_le_len_fin",
     "finite ?P ==> finite (lists ?P Int {l. length l <= ?n})",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("SM_Finite_Reachable.finite_size_bounded_msets",
     "finite ?S ==> finite {m. size m <= ?len & set_mset m <= ?S}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("SM_Finite_Reachable.cfg_approx",
     "[| ?c : cfg_approx ?prog; cfg ?c ?a ?c' |]
      ==> ?c' : cfg_approx ?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 2))
           ))),
    ("SM_Finite_Reachable.step_approx",
     "[| ?gc : gco_approx ?prog; (?gc, ?gc') : li.step |]
      ==> ?gc' : gco_approx ?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 1),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app (template_hole 6, template_var 1))
           ))),
    ("SM_Finite_Reachable.sys_finite_reachable",
     "finite (li.sa.reachable ?prog)",
     template_predicate
      (
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_hole 6),
                         template_hole 5),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 0)),
                         template_hole 2)),
                     template_hole 1)))),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_hole 6),
                     template_hole 5),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0)),
                     template_hole 2)),
                 template_hole 1))))
         ))]
