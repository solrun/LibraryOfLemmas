   [("Pid_Scheduler.sngp_sym_conv", "(%p. p = ?x) = (=) ?x",
     template_implication
      ([template_predicate (t_empty)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Pid_Scheduler.in_multiset_of_conv_nth",
     "(?x :# mset ?l) = (EX i<length ?l. ?x = ?l ! i)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("Pid_Scheduler.multiset_of_em_conv_nth",
     "(mset ?l = {#?x#} + ?m') =
      (EX i<length ?l. ?x = ?l ! i & ?m' = mset ?l - {#?x#})",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 2)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_hole 7)),
           template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Pid_Scheduler.prod_splitE",
     "[| ALL a b. ?p = (a, b) --> ?P a b;
         !!a b. [| ?p = (a, b); ?P a b |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Pid_Scheduler.system_complete_language_eq_lsystem_accept",
     "sa (| g_V = UNIV, g_E = rel_of_enex (?en, ?ex), g_V0 = {?init},
            sa_L = ?int |) ==>
      (!!) `
      transition_system_complete.language ?ex (%a p. a : ?en p)
       (%p. p = ?init) ?int =
      {w. sa.accept
           (| g_V = UNIV, g_E = rel_of_enex (?en, ?ex), g_V0 = {?init},
              sa_L = ?int |)
           w}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_app
                     (template_hole 13,
                      template_app
                       (template_app (template_hole 12, template_var 3),
                        template_var 2))),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10)),
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_hole 8)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 2), t_empty),
               t_empty),
             template_var 0)),
         template_app (template_hole 1, t_empty))))]
