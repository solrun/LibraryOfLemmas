   [("Nielson_VCGi.finite_varnewacom", "finite (varnewacom ?C)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Nielson_VCGi.supportE_single2", "supportE (%l. ?P) = {}",
     template_equation
      (template_app (template_hole 1, t_empty), template_hole 0)),
    ("Nielson_VCGi.funStart_prop1", "?x : funStar ?f ?x",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Nielson_VCGi.supportE_single", "supportE (%l s. ?P) = {}",
     template_equation
      (template_app (template_hole 1, t_empty), template_hole 0)),
    ("Nielson_VCGi.supportE_time", "supportE (%l. time ?C) = {}",
     template_equation
      (template_app (template_hole 2, t_empty), template_hole 0)),
    ("Nielson_VCGi.funStart_prop2", "?f ?x <= funStar ?f ?x",
     template_inequation
      (less_equals, template_app (template_var 1, template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Nielson_VCGi.preT_constant", "preT ?C (%_. ?a) = (%_. ?a)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), t_empty),
       t_empty)),
    ("Nielson_VCGi.support_postList",
     "support (postList ?xs) <= lesvars ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Nielson_VCGi.TQ", "preT ?C ?e ?s = ?e (postQ ?C ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Nielson_VCGi.support_preList",
     "support (preList ?upds ?C1.0) <= lesvars ?upds",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 1)))),
    ("Nielson_VCGi.supportE_preT",
     "supportE (%l. preT ?C (?e l)) <= supportE ?e",
     template_inequation
      (less_equals, template_app (template_hole 1, t_empty),
       template_app (template_hole 1, template_var 0))),
    ("Nielson_VCGi.ListUpdate_E",
     "ListUpdateE ?f ?xs = ListUpdate ?f ?xs (%e x. e)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         t_empty))),
    ("Nielson_VCGi.supportE_Suc",
     "supportE (%l s. Suc (?e1.0 l s)) = supportE ?e1.0",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 1, template_var 0))),
    ("Nielson_VCGi.ListAskip",
     "preList ?xs SKIP ?l ?s = postList ?xs ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_hole 1),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Nielson_VCGi.support_pre",
     "support (pre ?C ?Q) <= support ?Q Un varacom ?C",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Nielson_VCGi.support_supportE",
     "support (%l. ?P (?e l)) <= supportE ?e",
     template_inequation
      (less_equals, template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Nielson_VCGi.supportE_preTz",
     "supportE (%l. preTz ?C (?e l) ?n) <= supportE ?e",
     template_inequation
      (less_equals, template_app (template_hole 1, t_empty),
       template_app (template_hole 1, template_var 1))),
    ("Nielson_VCGi.TzQ", "preTz ?C ?e ?n ?s = ?e (postQz ?C ?s ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1)))),
    ("Nielson_VCGi.supportE_twicepreT",
     "supportE (%l. preT ?C1.0 (preT ?C2.0 (?e l))) <= supportE ?e",
     template_inequation
      (less_equals, template_app (template_hole 1, t_empty),
       template_app (template_hole 1, template_var 0))),
    ("Nielson_VCGi.fune_mono", "?A <= ?B ==> fune ?C ?A <= fune ?C ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Nielson_VCGi.qdeps_mono", "?A <= ?B ==> qdeps ?C ?A <= qdeps ?C ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Nielson_VCGi.preT_linear",
     "preT ?C (%s. ?k * ?e s) = (%s. ?k * preT ?C ?e s)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       t_empty)),
    ("Nielson_VCGi.ListAconseq",
     "preList ?upds ({?x1.0/?x2.0/?x3.0} CONSEQ ?C) ?l ?s =
      preList ?upds ?C ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Nielson_VCGi.expr_lupd",
     "?x ~: supportE ?Q ==> ?Q (?l(?x := ?n)) = ?Q ?l",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app (template_var 2, template_var 1)))),
    ("Nielson_VCGi.finite_support_pre",
     "[| finite (support ?Q); finite (varacom ?C) |]
      ==> finite (support (pre ?C ?Q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Nielson_VCGi.support_eq",
     "support (%l s. l ?x = ?E l s) <= supportE ?E Un {?x}",
     template_inequation
      (less_equals, template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Nielson_VCGi.supportE_plus",
     "supportE (%l s. ?e1.0 l s + ?e2.0 l s)
      <= supportE ?e1.0 Un supportE ?e2.0",
     template_inequation
      (less_equals, template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Nielson_VCGi.ListAassign",
     "preList ?upds (?x1.0 ::= ?x2.0) ?l ?s =
      postList ?upds ?l (?s[?x2.0/?x1.0])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Nielson_VCGi.ListUpdate_updates",
     "?x : lesvars ?xs ==> ListUpdate ?l'' ?xs (%e. ?l) ?x = ?l ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app (template_hole 2, template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             t_empty),
           template_var 3),
         template_app (template_var 0, template_var 3)))),
    ("Nielson_VCGi.supportE_if",
     "supportE (%l s. if ?b s then ?A l s else ?B l s)
      <= supportE ?A Un supportE ?B",
     template_inequation
      (less_equals, template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Nielson_VCGi.ListAif1",
     "bval ?b ?s ==>
      preList ?upds (IF ?b THEN ?C1.0 ELSE ?C2.0) ?l ?s =
      preList ?upds ?C1.0 ?l ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("Nielson_VCGi.ListAif2",
     "~ bval ?b ?s ==>
      preList ?upds (IF ?b THEN ?C1.0 ELSE ?C2.0) ?l ?s =
      preList ?upds ?C2.0 ?l ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0),
           template_var 4)))),
    ("Nielson_VCGi.ListUpdateE_updates",
     "[| distinct (map fst ?xs); ?x : set ?xs |]
      ==> ListUpdateE ?l'' ?xs (fst ?x) = fst (snd ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2),
           template_app (template_hole 6, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Nielson_VCGi.postListpostSet2",
     "postList ?xs ?l ?s = postSet (set ?xs) ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         t_empty))),
    ("Nielson_VCGi.supportE_preTz_Un",
     "supportE (%l. preTz ?C (?e l) (l ?x))
      <= insert ?x (UN n. supportE (%l. preTz ?C (?e l) n))",
     template_inequation
      (less_equals, template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))))),
    ("Nielson_VCGi.k4If",
     "[| K4 ?upds ?LVQ ?C1.0 ?Q; K4 ?upds ?LVQ ?C2.0 ?Q |]
      ==> K4 ?upds ?LVQ (IF ?b THEN ?C1.0 ELSE ?C2.0) ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 1)),
             template_var 2)
           ))),
    ("Nielson_VCGi.postSetpostList",
     "postList ?xs ?l ?s ==> postSet (set ?xs) ?l ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("Nielson_VCGi.postListpostSet",
     "postSet (set ?xs) ?l ?s ==> postList ?xs ?l ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Nielson_VCGi.preSetpreList_eq",
     "preList ?xs ?C ?l ?s = preSet (set ?xs) ?C ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         t_empty))),
    ("Nielson_VCGi.postList_preList",
     "postList (map (%(x, e, v). (x, preT ?C2.0 e, fune ?C2.0 v)) ?upds) ?l
       ?s =
      preList ?upds ?C2.0 ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 1),
         template_var 0))),
    ("Nielson_VCGi.preSetpreList",
     "preList ?xs ?C ?l ?s ==> preSet (set ?xs) ?C ?l ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 3)),
             t_empty)
           ))),
    ("Nielson_VCGi.support_impl_in",
     "?G ?e --> support (?H ?e) <= ?T ==>
      support (%l s. ?G ?e --> ?H ?e l s) <= ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_var 3, template_var 2)),
              template_app
               (template_app
                 (template_hole 1, template_app (template_hole 0, t_empty)),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, t_empty),
         template_var 0))),
    ("Nielson_VCGi.preListpreSet",
     "preSet (set ?xs) ?C ?l ?s ==> preList ?xs ?C ?l ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Nielson_VCGi.preList_Seq",
     "preList ?upds (?C1.0;; ?C2.0) ?l ?s =
      preList (map (%(x, e, v). (x, preT ?C2.0 e, fune ?C2.0 v)) ?upds)
       ?C1.0 ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 4),
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_var 4)),
             template_var 3),
           template_var 1),
         template_var 0))),
    ("Nielson_VCGi.SetAskip", "preSet ?U SKIP ?l ?s = postSet ?U ?l ?s",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2), t_empty),
       template_app
        (template_app (template_hole 5, template_var 2), t_empty))),
    ("Nielson_VCGi.SetAconseq",
     "preSet ?U ({?x1.0/?x2.0/?x3.0} CONSEQ ?C) ?l ?s = preSet ?U ?C ?l ?s",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 6), t_empty),
       template_app
        (template_app (template_hole 5, template_var 6), t_empty))),
    ("Nielson_VCGi.SetAassign",
     "preSet ?U (?x1.0 ::= ?x2.0) ?l ?s = postSet ?U ?l (?s[?x2.0/?x1.0])",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 4), t_empty),
       template_app
        (template_app (template_hole 7, template_var 4), t_empty))),
    ("Nielson_VCGi.allg_E",
     "[| !!l s n x. x : fst ` ?upds ==> ?A (l(x := n)) = ?A l;
         lesvars ?xs <= fst ` ?upds |]
      ==> ?A (ListUpdateE ?f ?xs) = ?A ?f",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app (template_hole 1, template_var 1)),
          template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 3))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_var 2, template_var 0)))),
    ("Nielson_VCGi.allg",
     "[| !!l s n x. x : fst ` ?upds ==> ?A (l(x := n)) = ?A l;
         lesvars ?xs <= fst ` ?upds |]
      ==> ?A (ListUpdate ?l'' ?xs ?q) = ?A ?l''",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app (template_hole 1, template_var 2)),
          template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 4))],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_app (template_var 3, template_var 1)))),
    ("Nielson_VCGi.SetAif1",
     "bval ?b ?s ==>
      preSet ?upds (IF ?b THEN ?C1.0 ELSE ?C2.0) ?l ?s =
      preSet ?upds ?C1.0 ?l ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), t_empty),
         template_app
          (template_app (template_hole 5, template_var 3), t_empty)))),
    ("Nielson_VCGi.times_z",
     "[| ?I ?z ?s; !!s z. ?I (Suc z) s ==> bval ?b s & ?I z (postQ ?C s);
         !!s. ?I 0 s ==> ~ bval ?b s |]
      ==> Nielson_VCGi.times ?s ?b ?C = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 2)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_var 3))),
    ("Nielson_VCGi.SetAif2",
     "~ bval ?b ?s ==>
      preSet ?upds (IF ?b THEN ?C1.0 ELSE ?C2.0) ?l ?s =
      preSet ?upds ?C2.0 ?l ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), t_empty),
         template_app
          (template_app (template_hole 5, template_var 3), t_empty)))),
    ("Nielson_VCGi.vc_sound'",
     "[| vc ?C ?Q ?Qset {}; finite (support ?Q); finite (varacom ?C);
         ALL l s. ?P l s --> pre ?C ?Q l s;
         !!s1 s2 l. s1 = s2 on ?Qset ==> ?Q l s1 = ?Q l s2 |]
      ==> \<turnstile>\<^sub>1 {?P} strip ?C { time ?C \<Down> ?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2),
                template_var 1),
              template_hole 15)
            ),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 3)),
               template_app (template_hole 0, template_var 3)),
             template_var 2)
           ))),
    ("Nielson_VCGi.vc_sound''",
     "[| vc ?C ?Q ?Qset {}; finite (support ?Q); finite (varacom ?C);
         EX k>0. ALL l s. ?P l s --> pre ?C ?Q l s & time ?C s <= k * ?e s;
         !!s1 s2 l. s1 = s2 on ?Qset ==> ?Q l s1 = ?Q l s2 |]
      ==> \<turnstile>\<^sub>1 {?P} strip ?C { ?e \<Down> ?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 22, template_var 4),
                  template_var 3),
                template_var 2),
              template_hole 21)
            ),
        template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 19, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 20,
              template_app (template_hole 18, template_var 4))
            ),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 4)),
               template_var 0),
             template_var 3)
           ))),
    ("Nielson_VCGi.vc_sound",
     "[| vc ?C ?Q ?LVQ ?LVE; finite (support ?Q);
         lesvars ?upds Int varacom ?C = {}; distinct (map fst ?upds);
         finite (varacom ?C);
         ALL l s1 s2. s1 = s2 on ?LVQ --> ?Q l s1 = ?Q l s2;
         ALL l s1 s2.
            s1 = s2 on ?LVE --> postList ?upds l s1 = postList ?upds l s2;
         ALL (a, b, c):set ?upds. ALL s1 s2. s1 = s2 on c --> b s1 = b s2;
         (UN (a, b, c):set ?upds. c) <= ?LVE |]
      ==> \<turnstile>\<^sub>1 {%l s. pre ?C ?Q l s & preList ?upds ?C l s}
                               strip ?C
                               { time
                                  ?C \<Down> %l s.
          ?Q l s & postList ?upds l s} &
          (ALL l s. pre ?C ?Q l s --> ?Q l (postQ ?C s)) &
          K4 ?upds ?LVQ ?C ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 35, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 34,
              template_app (template_hole 33, template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 31,
              template_app
               (template_app (template_hole 30, template_hole 29),
                template_app (template_hole 28, template_var 0))),
            template_app (template_hole 27, template_var 4)),
          template_hole 26),
        template_predicate
         (
            template_app
             (template_hole 25,
              template_app
               (template_app (template_hole 24, template_hole 29),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 34,
              template_app (template_hole 27, template_var 4))
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 28, template_var 0)),
              template_app (template_hole 15, t_empty))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 10, template_app (template_hole 9, t_empty)),
              template_app (template_hole 28, template_var 0))),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, t_empty),
                     template_app (template_hole 3, template_var 4)),
                   template_app (template_hole 2, template_var 4)),
                 t_empty)),
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 23, t_empty)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2),
                   template_var 4),
                 template_var 3)))
           )))]
