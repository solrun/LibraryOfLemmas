   [("QuantK_Hoare.hoareQ_inf",
     "\<turnstile>\<^sub>2\<^sub>' {%s. \<infinity>} ?c {?Q}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 0)
         )),
    ("QuantK_Hoare.wpQ_is_pre",
     "\<turnstile>\<^sub>2\<^sub>' {wp\<^sub>Q ?c ?Q} ?c {?Q}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0)
         )),
    ("QuantK_Hoare.enatSuc0", "enat (Suc 0) * ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0),
       template_var 0)),
    ("QuantK_Hoare.wpQ_skip", "wp\<^sub>Q SKIP ?Q = (%s. eSuc (?Q s))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       t_empty)),
    ("QuantK_Hoare.hoareQ_sound_complete",
     "(\<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}) =
      (\<Turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("QuantK_Hoare.QZ_iff",
     "(\<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}) =
      (\<turnstile>\<^sub>Z {?P} ?c {?Q})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("QuantK_Hoare.hoareQ_complete",
     "\<Turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q} ==>
      \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuantK_Hoare.hoareQ_sound",
     "\<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q} ==>
      \<Turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuantK_Hoare.QZ",
     "\<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q} ==>
      \<turnstile>\<^sub>Z {?P} ?c {?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuantK_Hoare.ZQ",
     "\<turnstile>\<^sub>Z {?P} ?c {?Q} ==>
      \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuantK_Hoare.wpt_Seq",
     "wp\<^sub>Q (?c\<^sub>1;; ?c\<^sub>2) ?Q =
      wp\<^sub>Q ?c\<^sub>1 (wp\<^sub>Q ?c\<^sub>2 ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("QuantK_Hoare.SKIPt", "\<down>\<^sub>s (SKIP, ?s) = ?s",
     template_equation
      (template_app (template_hole 4, t_empty), template_var 0)),
    ("QuantK_Hoare.SKIPp", "\<down>\<^sub>t (SKIP, ?s) = Suc 0",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, template_hole 0))),
    ("QuantK_Hoare.ASSp", "\<down>\<^sub>t (?x ::= ?e, ?s) = Suc 0",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app (template_hole 1, template_hole 0))),
    ("QuantK_Hoare.wpQ_ass",
     "wp\<^sub>Q (?x ::= ?e) ?Q = (%s. eSuc (?Q (s[?e/?x])))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       t_empty)),
    ("QuantK_Hoare.wpQ_is_pre'",
     "\<turnstile>\<^sub>2\<^sub>' {wp\<^sub>Q ?c (%s. enat ?k * ?Q s)} ?c
                                   {%s. enat ?k * ?Q s}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2), t_empty)),
             template_var 2),
           t_empty)
         )),
    ("QuantK_Hoare.wpQ_WhileFalse",
     "~ bval ?b ?s ==> ?Q ?s + 1 <= wp\<^sub>Q (WHILE ?b DO ?c) ?Q ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)
                )
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_var 1, template_var 2)),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 1),
           template_var 2)))),
    ("QuantK_Hoare.wpQ_If",
     "wp\<^sub>Q (IF ?b THEN ?c\<^sub>1 ELSE ?c\<^sub>2) ?Q =
      (%s. eSuc
            (wp\<^sub>Q (if bval ?b s then ?c\<^sub>1 else ?c\<^sub>2) ?Q
              s))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       t_empty)),
    ("QuantK_Hoare.SKIPnot",
     "(~ (SKIP, ?s) \<Rightarrow> ?p \<Down> ?t) =
      (?s ~= ?t | ?p ~= Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0))),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("QuantK_Hoare.ASSt", "\<down>\<^sub>s (?x ::= ?e, ?s) = ?s[?e/?x]",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("QuantK_Hoare.weakenpre",
     "[| \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}; ALL s. ?P s <= ?P' s |]
      ==> \<turnstile>\<^sub>2\<^sub>' {?P'} ?c {?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("QuantK_Hoare.weaken_post",
     "[| \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}; ALL s. ?Q' s <= ?Q s |]
      ==> \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("QuantK_Hoare.strengthen_pre",
     "[| ALL s. ?P s <= ?P' s; \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q} |]
      ==> \<turnstile>\<^sub>2\<^sub>' {?P'} ?c {?Q}",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuantK_Hoare.bigstepT_the_state",
     "(?c, ?s) \<Rightarrow> ?P \<Down> ?T ==>
      \<down>\<^sub>s (?c, ?s) = ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("QuantK_Hoare.bigstepT_the_cost",
     "(?c, ?s) \<Rightarrow> ?P \<Down> ?T ==>
      \<down>\<^sub>t (?c, ?s) = ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("QuantK_Hoare.Assign'",
     "ALL s. eSuc (?Q (s[?a/?x])) <= ?P s ==>
      \<turnstile>\<^sub>2\<^sub>' {?P} ?x ::= ?a {?Q}",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 3)
           ))),
    ("QuantK_Hoare.wpQ_WhileTrue",
     "bval ?b ?s ==>
      wp\<^sub>Q ?c (wp\<^sub>Q (WHILE ?b DO ?c) ?Q) ?s + 1
      <= wp\<^sub>Q (WHILE ?b DO ?c) ?Q ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 1)),
                   template_var 0)),
               template_var 2)),
           template_hole 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 0),
           template_var 2)))),
    ("QuantK_Hoare.bigstep_det",
     "[| (?c1.0, ?s) \<Rightarrow> ?p1.0 \<Down> ?t1.0;
         (?c1.0, ?s) \<Rightarrow> ?p \<Down> ?t |]
      ==> ?p1.0 = ?p & ?t1.0 = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("QuantK_Hoare.ASSnot",
     "(~ (?x ::= ?e, ?s) \<Rightarrow> ?p \<Down> ?t) =
      (?p ~= Suc 0 | ?t ~= ?s[?e/?x])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 4),
                          template_var 3)),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 4, template_hole 3)))),
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)))))
           ))),
    ("QuantK_Hoare.const",
     "[| \<turnstile>\<^sub>2\<^sub>' {%s. enat ?k * ?P s} ?c
{%s. enat ?k * ?Q s};
         0 < ?k |]
      ==> \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty), template_var 1),
              t_empty)
            ),
        template_inequation (less_than, template_hole 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuantK_Hoare.conseq'",
     "[| \<turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q}; ALL s. ?P s <= ?P' s;
         ALL s. ?Q' s <= ?Q s |]
      ==> \<turnstile>\<^sub>2\<^sub>' {?P'} ?c {?Q'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("QuantK_Hoare.wpQ_is_weakestprePotential1",
     "\<Turnstile>\<^sub>2\<^sub>' {?P} ?c {?Q} ==>
      EX k>0. ALL s. wp\<^sub>Q ?c (%s. enat k * ?Q s) s <= enat k * ?P s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("QuantK_Hoare.Z",
     "0 < ?X ==>
      eSuc (enat (nat (2 * ?X) * nat (2 * ?X)))
      <= enat (5 * nat (?X * ?X))",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2))),
                     template_var 0))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 0))))))),
    ("QuantK_Hoare.Zconseq",
     "[| \<turnstile>\<^sub>Z {?P} ?c {?Q}; !!s. ?P s <= enat ?k * ?P' s;
         !!s. enat ?k * ?Q' s <= ?Q s; 0 < ?k |]
      ==> \<turnstile>\<^sub>Z {?P'} ?c {?Q'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_than, template_hole 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_var 4),
             template_var 0)
           )))]
