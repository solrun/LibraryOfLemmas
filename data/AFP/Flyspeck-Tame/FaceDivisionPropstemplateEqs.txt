   [("FaceDivisionProps.verticesFrom_hd", "hd (verticesFrom ?f ?v) = ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("FaceDivisionProps.edges_makeFaceFinal",
     "\<E> (makeFaceFinal ?f ?g) = \<E> ?g",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("FaceDivisionProps.removeNones_none_hd",
     "removeNones (None # ?ls) = removeNones ?ls",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("FaceDivisionProps.vertices_makeFaceFinal",
     "vertices (makeFaceFinal ?f ?g) = vertices ?g",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("FaceDivisionProps.len_faces_makeFaceFinal",
     "|faces (makeFaceFinal ?f ?g)| = |faces ?g|",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)))),
    ("FaceDivisionProps.natToVertexListRec_length",
     "|natToVertexListRec ?e ?v ?f ?es| = |?es|",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("FaceDivisionProps.nvlr_length",
     "|natToVertexListRec ?old ?v ?f ?ls| = |?ls|",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("FaceDivisionProps.removeNones_none_last",
     "removeNones (?ls @ [None]) = removeNones ?ls",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app (template_hole 4, template_var 0))),
    ("FaceDivisionProps.is_nextElem_rev",
     "is_nextElem (rev ?zs) ?a ?b = is_nextElem ?zs ?b ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 1))),
    ("FaceDivisionProps.is_sublist_hd_eq",
     "is_sublist [?a] ?vs = (?a : set ?vs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FaceDivisionProps.removeNones_hd",
     "removeNones (Some ?a # ?ls) = ?a # removeNones ?ls",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("FaceDivisionProps.verticesFrom_split",
     "?v # tl (verticesFrom ?f ?v) = verticesFrom ?f ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("FaceDivisionProps.is_nextElem_rotate_eq",
     "is_nextElem (rotate ?m ?ls) ?x ?y = is_nextElem ?ls ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0))),
    ("FaceDivisionProps.is_prefix_f",
     "is_prefix (?a # ?as) (?a # ?vs) = is_prefix ?as ?vs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("FaceDivisionProps.removeNones_none_in",
     "removeNones (?as @ None # ?bs) = removeNones (?as @ ?bs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("FaceDivisionProps.Edges_rev",
     "Edges (rev ?zs) = {(b, a). (a, b) : Edges ?zs}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("FaceDivisionProps.in_Edges_rev",
     "((?a, ?b) : Edges (rev ?zs)) = ((?b, ?a) : Edges ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app (template_hole 1, template_var 0)))),
    ("FaceDivisionProps.removeNones_last",
     "removeNones (?ls @ [Some ?a]) = removeNones ?ls @ [?a]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("FaceDivisionProps.is_prefix_hd",
     "is_prefix [?l] ?vs = (?l = hd ?vs & ?vs ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)),
              template_var 0)
            )],
       template_dunno)),
    ("FaceDivisionProps.removeNones_in",
     "removeNones (?as @ Some ?a # ?bs) =
      removeNones ?as @ ?a # removeNones ?bs",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 5, template_var 0))))),
    ("FaceDivisionProps.is_sublist_rev",
     "is_sublist [?a, ?b] (rev ?zs) = is_sublist [?b, ?a] ?zs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1))),
         template_var 0))),
    ("FaceDivisionProps.nths_reduceIndices",
     "nths ?xs ?iset = nths ?xs {i. i < |?xs| & i : ?iset}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, t_empty)))),
    ("FaceDivisionProps.Edges_Cons",
     "Edges (?x # ?xs) =
      (if ?xs = [] then {} else Edges ?xs Un {(?x, hd ?xs)})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("FaceDivisionProps.is_sublist_rec",
     "is_sublist ?xs ?ys =
      (if |?ys| < |?xs| then False
       else if ?xs = take |?xs| ?ys then True
            else is_sublist ?xs (tl ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("FaceDivisionProps.splitFace_add_vertices_direct",
     "vertices
       (snd (snd (splitFace ?g ?ram1.0 ?ram2.0 ?oldF
                   [countVertices ?g..<countVertices ?g + ?n]))) =
      vertices ?g @ [countVertices ?g..<countVertices ?g + ?n]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 4)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_var 4)),
                   template_var 0)))))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 7, template_var 4)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 4)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 4)),
             template_var 0))))),
    ("FaceDivisionProps.Edges_append",
     "Edges (?xs @ ?ys) =
      (if ?xs = [] then Edges ?ys
       else if ?ys = [] then Edges ?xs
            else Edges ?xs Un Edges ?ys Un {(last ?xs, hd ?ys)})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_dunno))]
