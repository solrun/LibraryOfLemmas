   [("Worklist.worklist_aux_Nil",
     "worklist_aux ?succs ?f ([], ?s) = Some ([], ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Worklist.worklist_end_empty",
     "worklist_aux ?succs ?f (?ws, ?s) = Some (?ws', ?s') ==> ?ws' = []",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)))],
       template_equation (template_var 1, template_hole 0))),
    ("Worklist.RTranCl_conv",
     "(?g [?succs]\<rightarrow>* ?h) = ((?g, ?h) : (Rel ?succs)^*)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty)))))),
    ("Worklist.worklist_aux_Cons",
     "worklist_aux ?succs ?f (?x # ?ws', ?s) =
      worklist_aux ?succs ?f (?succs ?s ?x @ ?ws', ?f ?x ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_var 4, template_var 0),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app (template_var 3, template_var 2),
             template_var 0))))),
    ("Worklist.worklist_tree_aux_unfold",
     "worklist_tree_aux ?succs ?f (?ws, ?s) =
      (case ?ws of [] => Some ([], ?s)
       | x # ws' => worklist_tree_aux ?succs ?f (?succs x @ ws', ?f x ?s))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_hole 1),
                 template_var 0))),
           t_empty),
         template_var 1))),
    ("Worklist.worklist_aux_unfold",
     "worklist_aux ?succs ?f (?ws, ?s) =
      (case ?ws of [] => Some ([], ?s)
       | x # ws' => worklist_aux ?succs ?f (?succs ?s x @ ws', ?f x ?s))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_hole 1),
                 template_var 0))),
           t_empty),
         template_var 1))),
    ("Worklist.invariant_succs",
     "[| invariant ?I ?succs; ALL x:?S. ?I x |]
      ==> ALL x:(Rel ?succs)^* `` ?S. ?I x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, t_empty)))),
                 template_var 0)),
             t_empty)
           ))),
    ("Worklist.Image_Rel_set",
     "(Rel ?succs)^* `` set (?succs ?x) = (Rel ?succs)^+ `` {?x}",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty)))),
         template_app
          (template_hole 3, template_app (template_var 1, template_var 0))),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 2,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty)))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Worklist.worklist_tree_state_inv",
     "[| worklist_tree ?succs ?f ?ws ?s = Some ?s'; ?I ?s;
         !!x s. ?I s ==> ?I (?f x s) |]
      ==> ?I ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_var 0, template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Worklist.worklist_tree_aux_state_inv",
     "[| worklist_tree_aux ?succs ?f (?ws, ?s) = Some (?ws', ?s'); ?I ?s;
         !!x s. ?I s ==> ?I (?f x s) |]
      ==> ?I ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 6),
              template_var 5),
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_var 0, template_var 3)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Worklist.worklist_tree_Some_foldl",
     "worklist_tree ?succs ?f ?ws ?s = Some ?s' ==>
      EX rs.
         set rs = (Rel ?succs)^* `` set ?ws &
         ?s' = foldl (%s x. ?f x s) ?s rs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Worklist.worklist_tree_aux_Some_foldl",
     "worklist_tree_aux ?succs ?f (?ws, ?s) = Some (?ws', ?s') ==>
      EX rs.
         set rs = (Rel ?succs)^* `` set ?ws &
         ?s' = foldl (%s x. ?f x s) ?s rs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 13, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2)),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Worklist.worklist_tree_rule",
     "[| worklist_tree ?succs ?f ?ws ?s = Some ?s'; invariant ?I ?succs;
         ALL x:set ?ws. ?I x; !!s. ?P [] s s;
         !!r x ws s.
            [| ?I x; ALL x:set ws. ?I x; ?P ws (?f x s) r |]
            ==> ?P (x # ws) s r |]
      ==> EX rs. set rs = (Rel ?succs)^* `` set ?ws & ?P rs ?s ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 17, template_var 6),
                template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 4)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Worklist.worklist_tree_aux_rule",
     "[| worklist_tree_aux ?succs ?f (?ws, ?s) = Some (?ws', ?s');
         invariant ?I ?succs; ALL x:set ?ws. ?I x; !!s. ?P [] s s;
         !!r x ws s.
            [| ?I x; ALL x:set ws. ?I x; ?P ws (?f x s) r |]
            ==> ?P (x # ws) s r |]
      ==> EX rs. set rs = (Rel ?succs)^* `` set ?ws & ?P rs ?s ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 7),
              template_var 6),
            template_app
             (template_app (template_hole 17, template_var 5),
              template_var 4)),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 5)),
              t_empty)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Worklist.worklist_tree_rule2",
     "[| worklist_tree ?succs ?f ?ws ?s = Some ?s'; invariant ?I ?succs;
         ALL x:set ?ws. ?I x; ?S ?s;
         !!x s. [| ?I x; ?S s |] ==> ?S (?f x s); !!s. ?P [] s s;
         !!r x ws s.
            [| ?I x; ALL x:set ws. ?I x; ?S s; ?P ws (?f x s) r |]
            ==> ?P (x # ws) s r |]
      ==> EX rs. set rs = (Rel ?succs)^* `` set ?ws & ?P rs ?s ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 17, template_var 7),
                template_var 6),
              template_var 5),
            template_var 4),
          template_app (template_hole 16, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 5)),
              t_empty)
            ),
        template_predicate (template_app (template_var 1, template_var 4)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Worklist.worklist_tree_aux_rule2",
     "[| worklist_tree_aux ?succs ?f (?ws, ?s) = Some (?ws', ?s');
         invariant ?I ?succs; ALL x:set ?ws. ?I x; ?S ?s;
         !!x s. [| ?I x; ?S s |] ==> ?S (?f x s); !!s. ?P [] s s;
         !!r x ws s.
            [| ?I x; ALL x:set ws. ?I x; ?S s; ?P ws (?f x s) r |]
            ==> ?P (x # ws) s r |]
      ==> EX rs. set rs = (Rel ?succs)^* `` set ?ws & ?P rs ?s ?s'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 8),
              template_var 7),
            template_app
             (template_app (template_hole 17, template_var 6),
              template_var 5)),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 17, template_var 4),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 6)),
              t_empty)
            ),
        template_predicate (template_app (template_var 1, template_var 5)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty))))]
