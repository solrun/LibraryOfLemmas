   [("Plane1Props.inv_inv_next_plane",
     "invariant Invariants.inv next_plane\<^bsub>?p\<^esub>",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Plane1Props.mgp_next_plane0_if_next_plane",
     "[| minGraphProps ?g; ?g' : set (next_plane\<^bsub>?p\<^esub> ?g) |]
      ==> ?g' : set (next_plane0\<^bsub>?p\<^esub> ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Plane1Props.next_plane_subset",
     "ALL f:\<F> ?g. vertices f ~= [] ==>
      set (next_plane\<^bsub>?p\<^esub> ?g)
      <= set (next_plane0\<^bsub>?p\<^esub> ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1))),
              t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)))))]
