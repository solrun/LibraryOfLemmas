   [("GeneratorProps.inv_inv_next_tame0",
     "invariant Invariants.inv next_tame0\<^bsub>?p\<^esub>",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("GeneratorProps.inv_inv_next_tame",
     "invariant Invariants.inv next_tame\<^bsub>?p\<^esub>",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("GeneratorProps.dist_ExcessTab",
     "distinct (map fst (ExcessTable ?g (vertices ?g)))",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 0))))
         )),
    ("GeneratorProps.mgp_TameEnum",
     "?g : TameEnum\<^bsub>?p\<^esub> ==> minGraphProps ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("GeneratorProps.next_tame0_subset_plane",
     "set (next_tame0\<^bsub>?p\<^esub> ?g)
      <= set (next_plane\<^bsub>?p\<^esub> ?g)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("GeneratorProps.inv_inv_notame",
     "invariant (%g. Invariants.inv g & notame7 g)
       next_plane\<^bsub>?p\<^esub>",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("GeneratorProps.sep_ne", "EX P<=?M. separated ?g (fst ` P)",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("GeneratorProps.fst_set_ExcessTable_subset",
     "fst ` set (ExcessTable ?g (vertices ?g)) <= \<V> ?g",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("GeneratorProps.ExcessTab_final",
     "?p : set (ExcessTable ?g (vertices ?g)) ==> finalVertex ?g (fst ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app (template_hole 2, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("GeneratorProps.ExcessTab_vertex",
     "?p : set (ExcessTable ?g (vertices ?g)) ==> fst ?p : \<V> ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 0)))
           ))),
    ("GeneratorProps.genPolyTame_spec",
     "generatePolygonTame ?n ?v ?f ?g =
      filter (%g'. ~ notame g') (generatePolygon ?n ?v ?f ?g)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("GeneratorProps.next_plane0_incr_squander_lb",
     "[| ?g' : set (next_plane0\<^bsub>?p\<^esub> ?g); Invariants.inv ?g |]
      ==> squanderLowerBound ?g <= squanderLowerBound ?g'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("GeneratorProps.genPolyTame_subset_genPoly",
     "?g' : set (generatePolygonTame ?i ?v ?f ?g) ==>
      ?g' : set (generatePolygon ?i ?v ?f ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("GeneratorProps.inv_notame",
     "[| ?g' : set (next_plane0\<^bsub>?p\<^esub> ?g); Invariants.inv ?g;
         notame7 ?g |]
      ==> notame7 ?g'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("GeneratorProps.next_plane0_incr_ExcessNotAt",
     "[| ?g' : set (next_plane0\<^bsub>?p\<^esub> ?g); Invariants.inv ?g |]
      ==> ExcessNotAt ?g None <= ExcessNotAt ?g' None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("GeneratorProps.close_sym",
     "[| minGraphProps ?g; ?u : \<V> ?g; close ?g ?u ?v |]
      ==> close ?g ?v ?u",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("GeneratorProps.mono_ExcessTab",
     "[| ?g' : set (next_plane0\<^bsub>?p\<^esub> ?g); Invariants.inv ?g |]
      ==> set (ExcessTable ?g (vertices ?g))
          <= set (ExcessTable ?g' (vertices ?g'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 2)))))),
    ("GeneratorProps.excess_notame",
     "[| Invariants.inv ?g; ?g' : set (next_plane\<^bsub>?p\<^esub> ?g);
         ?g' ~: set (next_tame0\<^bsub>?p\<^esub> ?g) |]
      ==> notame7 ?g'",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 1, template_var 0),
                      template_var 2)))
                )
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("GeneratorProps.next_tame0_comp",
     "[| Seed\<^bsub>?p\<^esub> [next_plane\<^bsub>?p\<^esub>]\<rightarrow>* ?g;
         final ?g; tame ?g |]
      ==> Seed\<^bsub>?p\<^esub> [next_tame0\<^bsub>?p\<^esub>]\<rightarrow>* ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_var 0)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_var 0)),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("GeneratorProps.sep_conv",
     "[| minGraphProps ?g; ?V <= \<V> ?g |]
      ==> separated ?g ?V =
          (ALL u:?V. ALL v:?V. u ~= v --> ~ close ?g u v)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, template_var 0), t_empty)))),
    ("GeneratorProps.genPolyTame_notame",
     "[| ?g' : set (generatePolygon ?n ?v ?f ?g);
         ?g' ~: set (generatePolygonTame ?n ?v ?f ?g); Invariants.inv ?g;
         3 <= ?n |]
      ==> notame7 ?g'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 0)))
                )
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_hole 1)),
          template_var 3)],
       template_predicate
        (template_app (template_hole 0, template_var 4)))),
    ("GeneratorProps.close_antimono",
     "[| ?g' : set (next_plane0\<^bsub>?p\<^esub> ?g); Invariants.inv ?g;
         ?u : \<V> ?g; finalVertex ?g ?u; close ?g' ?u ?v |]
      ==> close ?g ?u ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)))
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("GeneratorProps.genPoly_incr_facesquander_lb",
     "[| ?g' : set (generatePolygon ?n ?v ?f ?g); Invariants.inv ?g;
         ?f : set (nonFinals ?g); ?v : \<V> ?f; 3 <= ?n |]
      ==> faceSquanderLowerBound ?g + \<d> ?n
          <= faceSquanderLowerBound ?g'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 14, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_hole 3)),
          template_var 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 3)),
         template_app (template_hole 1, template_var 4)))),
    ("GeneratorProps.ExcessNotAtRec_conv_Max",
     "[| minGraphProps ?g; set (map fst ?ps) <= \<V> ?g;
         distinct (map fst ?ps) |]
      ==> ExcessNotAtRec ?ps ?g =
          Max {sum snd P |P. P <= set ?ps & separated ?g (fst ` P)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_hole 14),
              template_var 0)),
          template_app
           (template_hole 16,
            template_app (template_hole 13, template_var 1))),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 0), template_var 1),
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))))),
    ("GeneratorProps.genPoly_new_face",
     "[| ?g' : set (generatePolygon ?n ?v ?f ?g); minGraphProps ?g;
         ?f : set (nonFinals ?g); ?v : \<V> ?f; 3 <= ?n |]
      ==> EX f:set (finals ?g') - set (finals ?g). |vertices f| = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 16, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 13,
                     template_app (template_hole 2, template_var 4))),
                 template_app
                  (template_hole 13,
                   template_app (template_hole 2, template_var 0)))),
             t_empty)
           ))),
    ("GeneratorProps.polysizes_tame",
     "[| ?g' : set (generatePolygon ?n ?v ?f ?g); Invariants.inv ?g;
         ?f : set (nonFinals ?g); ?v : \<V> ?f; 3 <= ?n; ?n < 4 + ?p;
         ?n ~: set (polysizes ?p ?g) |]
      ==> notame7 ?g'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 5),
              template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 17, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)),
          template_var 4),
        template_inequation
         (less_than, template_var 4,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 8,
                template_app
                 (template_hole 3,
                  template_app (template_hole 3, template_hole 6)))),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 1, template_var 0),
                      template_var 1)))
                )
            )],
       template_predicate
        (template_app (template_hole 0, template_var 5))))]
