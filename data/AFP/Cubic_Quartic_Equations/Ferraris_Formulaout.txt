Loading theory "Draft.Ferraris_Formula" (required by "Draft.Ferraris_FormulaTemplates")
Loading theory "Draft.Templates" (required by "Draft.Ferraris_FormulaTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.179s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Ferraris_FormulaTemplates")
### theory "Draft.Ferraris_Formula"
### 0.547s elapsed time, 1.118s cpu time, 0.049s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.579s elapsed time, 1.045s cpu time, 0.049s GC time
Loading theory "Draft.Ferraris_FormulaTemplates"
val templateLemmas =
   [("Ferraris_Formula.biquadratic_solution",
     "(?y ^ 4 + ?p * ?y\<^sup>2 + ?q = (0::?'a)) =
      (EX z. z\<^sup>2 + ?p * z + ?q = (0::?'a) & z = ?y\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5, template_hole 4))))),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)))))),
             template_var 0)),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Ferraris_Formula.depressed_quartic_Ferrari",
     "[| (8::?'a) * ?m ^ 3 + (8::?'a) * ?p * ?m\<^sup>2 +
         ((2::?'a) * ?p\<^sup>2 - (8::?'a) * ?r) * ?m -
         ?q\<^sup>2 =
         (0::?'a);
         ?q ~= (0::?'a); ?a * ?a = (2::?'a) * ?m;
         ?b1.0 = ?p / (2::?'a) + ?m - ?q / ((2::?'a) * ?a);
         ?b2.0 = ?p / (2::?'a) + ?m + ?q / ((2::?'a) * ?a) |]
      ==> (?y ^ 4 + ?p * ?y\<^sup>2 + ?q * ?y + ?r = (0::?'a)) =
          (poly [:?b1.0, ?a, 1::?'a:] ?y = (0::?'a) |
           poly [:?b2.0, - ?a, 1::?'a:] ?y = (0::?'a))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 18,
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app
                           (template_hole 15,
                            template_app
                             (template_hole 14,
                              template_app
                               (template_hole 14,
                                template_app
                                 (template_hole 14, template_hole 13))))),
                        template_app
                         (template_app (template_hole 12, template_var 7),
                          template_app
                           (template_hole 11,
                            template_app
                             (template_hole 10, template_hole 13))))),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15,
                              template_app
                               (template_hole 14,
                                template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 14, template_hole 13))))),
                          template_var 6)),
                      template_app
                       (template_app (template_hole 12, template_var 7),
                        template_app
                         (template_hole 11,
                          template_app
                           (template_hole 14, template_hole 13)))))),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15,
                              template_app
                               (template_hole 14, template_hole 13))),
                          template_app
                           (template_app (template_hole 12, template_var 6),
                            template_app
                             (template_hole 11,
                              template_app
                               (template_hole 14, template_hole 13))))),
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app
                           (template_hole 15,
                            template_app
                             (template_hole 14,
                              template_app
                               (template_hole 14,
                                template_app
                                 (template_hole 14, template_hole 13))))),
                        template_var 5))),
                  template_var 7))),
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_hole 11,
                template_app (template_hole 14, template_hole 13)))),
          template_hole 9),
        template_negation
         (template_equation (template_var 4, template_hole 9)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 3),
            template_var 3),
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13))),
            template_var 7)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 18,
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_hole 13)))),
                template_var 7)),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 13))),
                template_var 3)))),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 17,
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_hole 13)))),
                template_var 7)),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 13))),
                template_var 3))))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 12, template_var 0),
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 14, template_hole 13))))),
                     template_app
                      (template_app (template_hole 16, template_var 6),
                       template_app
                        (template_app (template_hole 12, template_var 0),
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 14, template_hole 13)))))),
                 template_app
                  (template_app (template_hole 16, template_var 4),
                   template_var 0))),
             template_var 5),
           template_hole 9),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_app
                            (template_app (template_hole 3, template_var 3),
                             template_app
                              (template_app
                                (template_hole 3, template_hole 2),
                               template_hole 1)))),
                       template_var 0)),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 19,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 0, template_var 3)),
                           template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_hole 1)))),
                     template_var 0)),
                 template_hole 9))
             )))),
    ("Ferraris_Formula.to_depressed_quartic",
     "[| ?a4.0 ~= (0::?'a); ?b = ?a3.0 / ?a4.0; ?c = ?a2.0 / ?a4.0;
         ?d = ?a1.0 / ?a4.0; ?e = ?a0.0 / ?a4.0;
         ?p = ?c - (3::?'a) / (8::?'a) * ?b\<^sup>2;
         ?q = (?b ^ 3 - (4::?'a) * ?b * ?c + (8::?'a) * ?d) / (8::?'a);
         ?r =
         (- (3::?'a) * ?b ^ 4 + (256::?'a) * ?e - (64::?'a) * ?b * ?d +
          (16::?'a) * ?b\<^sup>2 * ?c) /
         (256::?'a);
         ?x = ?y - ?b / (4::?'a) |]
      ==> (?a4.0 * ?x ^ 4 + ?a3.0 * ?x ^ 3 + ?a2.0 * ?x\<^sup>2 +
           ?a1.0 * ?x +
           ?a0.0 =
           (0::?'a)) =
          (?y ^ 4 + ?p * ?y\<^sup>2 + ?q * ?y + ?r = (0::?'a))",
     template_implication
      ([template_negation
         (template_equation (template_var 13, template_hole 12)),
        template_equation
         (template_var 12,
          template_app
           (template_app (template_hole 11, template_var 11),
            template_var 13)),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 11, template_var 9),
            template_var 13)),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 11, template_var 7),
            template_var 13)),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 11, template_var 5),
            template_var 13)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 10, template_var 10),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_hole 6))),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5, template_hole 6)))))),
              template_app
               (template_app (template_hole 4, template_var 12),
                template_app
                 (template_hole 3,
                  template_app (template_hole 5, template_hole 6)))))),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 4, template_var 12),
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 7, template_hole 6)))),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 5, template_hole 6)))),
                          template_var 12)),
                      template_var 10))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5, template_hole 6))))),
                  template_var 8))),
            template_app
             (template_hole 8,
              template_app
               (template_hole 5,
                template_app
                 (template_hole 5,
                  template_app (template_hole 5, template_hole 6)))))),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app
                             (template_hole 9,
                              template_app
                               (template_hole 1,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6)))),
                            template_app
                             (template_app
                               (template_hole 4, template_var 12),
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 5, template_hole 6)))))),
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 5,
                                    template_app
                                     (template_hole 5,
template_app
 (template_hole 5,
  template_app
   (template_hole 5,
    template_app
     (template_hole 5,
      template_app (template_hole 5, template_hole 6)))))))))),
                          template_var 6))),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 5,
                                    template_app
                                     (template_hole 5,
template_app
 (template_hole 5, template_app (template_hole 5, template_hole 6)))))))),
                          template_var 12)),
                      template_var 8))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 5, template_hole 6)))))),
                      template_app
                       (template_app (template_hole 4, template_var 12),
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 5, template_hole 6))))),
                  template_var 10))),
            template_app
             (template_hole 8,
              template_app
               (template_hole 5,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 5, template_hole 6))))))))))),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 10, template_var 0),
            template_app
             (template_app (template_hole 11, template_var 12),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 5,
                  template_app (template_hole 5, template_hole 6))))))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_hole 9, template_var 13),
                             template_app
                              (template_app
                                (template_hole 4, template_var 1),
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5, template_hole 6)))))),
                         template_app
                          (template_app (template_hole 9, template_var 11),
                           template_app
                            (template_app (template_hole 4, template_var 1),
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 7, template_hole 6)))))),
                     template_app
                      (template_app (template_hole 9, template_var 9),
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 5, template_hole 6)))))),
                 template_app
                  (template_app (template_hole 9, template_var 7),
                   template_var 1))),
             template_var 5),
           template_hole 12),
         template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5, template_hole 6))))),
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 5, template_hole 6)))))),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 0))),
             template_var 2),
           template_hole 12))))]:
   (string * thm * template) list
### theory "Draft.Ferraris_FormulaTemplates"
### 0.527s elapsed time, 0.671s cpu time, 0.075s GC time
val it = (): unit
