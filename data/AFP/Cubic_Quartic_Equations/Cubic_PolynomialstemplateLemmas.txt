   [("Cubic_Polynomials.rroots3",
     "degree ?p = 3 ==> set (rroots3 ?p) = {x. poly ?p x = 0}",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Cubic_Polynomials.croots3",
     "degree ?p = 3 ==> set (croots3 ?p) = {x. poly ?p x = 0}",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Cubic_Polynomials.solve_depressed_cubic_real",
     "(?y : set (solve_depressed_cubic_real ?e ?f)) =
      (?y ^ 3 + ?e * ?y + ?f = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2))),
           template_var 0),
         template_hole 0))),
    ("Cubic_Polynomials.solve_depressed_cubic_complex",
     "(?y : set (solve_depressed_cubic_complex ?e ?f)) =
      (?y ^ 3 + ?e * ?y + ?f = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2))),
           template_var 0),
         template_hole 0))),
    ("Cubic_Polynomials.solve_depressed_cubic_Cardano_real",
     "solve_depressed_cubic_Cardano_real ?e ?f = Some ?y ==>
      {y. y ^ 3 + ?e * y + ?f = 0} = {?y}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 2),
            template_var 1),
          template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app (template_hole 10, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Cubic_Polynomials.degree3_coeffs",
     "degree ?p = 3 ==> EX a b c d. ?p = [:d, c, b, a:] & a ~= (0::?'a)",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 0),
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_hole 8)))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Cubic_Polynomials.roots3_generic",
     "[| degree ?p = 3;
         !!e f y.
            (y : set (?depressed_solver e f)) =
            (y ^ 3 + e * y + f = (0::?'a)) |]
      ==> set (roots3_generic ?depressed_solver ?p) =
          {x. poly ?p x = (0::?'a)}",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 1),
          template_app
           (template_hole 15,
            template_app (template_hole 14, template_hole 13))),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app (template_hole 1, t_empty)))),
    ("Cubic_Polynomials.solve_depressed_cubic_complex_code",
     "solve_depressed_cubic_complex ?e ?f =
      Let (if ?e = 0 then all_croots 3 (- ?f)
           else let f2 = ?f / 2; u = - f2 + csqrt (f2\<^sup>2 + ?e ^ 3 / 27)
                in Let (all_croots 3 u) (map (%z. z - ?e / (3 * z))))
       remdups",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_app (template_hole 17, template_var 1),
                       template_hole 16)),
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13, template_hole 12))),
                     template_app (template_hole 11, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7, template_hole 12)))),
                   t_empty))),
             t_empty)
           ))),
    ("Cubic_Polynomials.solve_depressed_cubic_real_code",
     "solve_depressed_cubic_real ?e ?f =
      (if ?e = 0 then [root 3 (- ?f)]
       else let v = ?e ^ 3 / 27; f2 = ?f / 2; f2v = f2\<^sup>2 + v
            in if 0 < f2v
               then let u = - f2 + sqrt f2v; rt = root 3 u
                    in [rt - ?e / (3 * rt)]
               else let ce3 = cor ?e / 3; u = - cor f2 + csqrt (cor f2v)
                    in map Re
                        (remdups
                          (map (%rt. rt - ce3 / rt) (all_croots 3 u))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 33, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 32,
                 template_app
                  (template_app (template_hole 31, template_var 1),
                   template_hole 30)),
               template_app
                (template_app
                  (template_hole 29,
                   template_app
                    (template_app
                      (template_hole 28,
                       template_app
                        (template_hole 27,
                         template_app
                          (template_hole 26, template_hole 25))),
                     template_app (template_hole 24, template_var 0))),
                 template_hole 23)),
             template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app (template_hole 20, template_var 1),
                       template_app
                        (template_hole 27,
                         template_app
                          (template_hole 26, template_hole 25)))),
                   template_app
                    (template_hole 19,
                     template_app
                      (template_hole 26,
                       template_app
                        (template_hole 26,
                         template_app
                          (template_hole 18,
                           template_app
                            (template_hole 26, template_hole 25))))))),
               t_empty))
           )))]
