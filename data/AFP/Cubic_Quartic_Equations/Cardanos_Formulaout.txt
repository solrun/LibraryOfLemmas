Loading theory "Draft.Cardanos_Formula" (required by "Draft.Cardanos_FormulaTemplates")
Loading theory "Draft.Templates" (required by "Draft.Cardanos_FormulaTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.089s elapsed time, 0.209s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Cardanos_FormulaTemplates")
### theory "Draft.Cardanos_Formula"
### 0.496s elapsed time, 1.018s cpu time, 0.052s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.564s elapsed time, 1.035s cpu time, 0.151s GC time
Loading theory "Draft.Cardanos_FormulaTemplates"
val templateLemmas =
   [("Cardanos_Formula.solve_cubic_depressed_Cardano_all_real_roots",
     "[| 0 <= discriminant_cubic_depressed ?e ?f;
         ?y ^ 3 + cor ?e * ?y + cor ?f = 0 |]
      ==> ?y : \<real>",
     template_implication
      ([template_inequation
         (less_equals, template_hole 12,
          template_app
           (template_app (template_hole 11, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 0),
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5)))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_var 0))),
            template_app (template_hole 3, template_var 1)),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Cardanos_Formula.discriminant_cubic_depressed",
     "[:- ?x, 1::?'a:] * [:- ?y, 1::?'a:] * [:- ?z, 1::?'a:] =
      [:?f, ?e, 0::?'a, 1::?'a:] ==>
      discriminant_cubic_depressed ?e ?f =
      (?x - ?y)\<^sup>2 * (?x - ?z)\<^sup>2 * (?y - ?z)\<^sup>2",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_var 4)),
                    template_app
                     (template_app (template_hole 12, template_hole 10),
                      template_hole 9))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 3)),
                  template_app
                   (template_app (template_hole 12, template_hole 10),
                    template_hole 9)))),
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 2)),
              template_app
               (template_app (template_hole 12, template_hole 10),
                template_hole 9))),
          template_app
           (template_app (template_hole 12, template_var 1),
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app (template_hole 12, template_hole 8),
                template_app
                 (template_app (template_hole 12, template_hole 10),
                  template_hole 9)))))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 3)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_var 2)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))))),
    ("Cardanos_Formula.solve_cubic_depressed_Cardano_complex",
     "[| ?e ~= 0; ?v = - (?e ^ 3 / 27); ?u\<^sup>2 + ?f * ?u + ?v = 0 |]
      ==> (?y ^ 3 + ?e * ?y + ?f = 0) =
          (EX z. z ^ 3 = ?u & ?y = z - ?e / (3 * z))",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 14)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 8)))),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 9, template_hole 8)))))))),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_app
                     (template_hole 10,
                      template_app (template_hole 6, template_hole 8)))),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2))),
            template_var 3),
          template_hole 14)],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 11, template_var 0),
                       template_app
                        (template_hole 10,
                         template_app (template_hole 9, template_hole 8)))),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 0))),
               template_var 1)),
           template_hole 14),
         template_app (template_hole 2, t_empty)))),
    ("Cardanos_Formula.solve_cubic_depressed_Cardano_real",
     "[| ?e ~= 0; ?v = - (?e ^ 3 / 27); ?u\<^sup>2 + ?f * ?u + ?v = 0;
         discriminant_cubic_depressed ?e ?f ~= 0;
         ?y ^ 3 + ?e * ?y + ?f = 0 |]
      ==> ?y = root 3 ?u - ?e / (3 * root 3 ?u)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 13)),
        template_equation
         (template_var 3,
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7)))),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 8,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 8, template_hole 7)))))))),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_app
                     (template_hole 9,
                      template_app (template_hole 5, template_hole 7)))),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 2))),
            template_var 3),
          template_hole 13),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 1),
              template_hole 13)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 7)))),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 0))),
            template_var 1),
          template_hole 13)],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7))),
               template_var 2)),
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 8, template_hole 7))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 7))),
                 template_var 2))))))),
    ("Cardanos_Formula.solve_cubic_depressed_Cardano_real",
     "[| ?e ~= 0; ?v = - (?e ^ 3 / 27); ?u\<^sup>2 + ?f * ?u + ?v = 0 |]
      ==> (root 3 ?u - ?e / (3 * root 3 ?u)) ^ 3 +
          ?e * (root 3 ?u - ?e / (3 * root 3 ?u)) +
          ?f =
          0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 12)),
        template_equation
         (template_var 2,
          template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6)))),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 7,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 7, template_hole 6)))))))),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 4, template_hole 6)))),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 1))),
            template_var 2),
          template_hole 12)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_hole 0,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7, template_hole 6))),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 10, template_var 3),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 7, template_hole 6))),
                           template_app
                            (template_app
                              (template_hole 0,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6))),
                             template_var 1))))),
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)))),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7, template_hole 6))),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 10, template_var 3),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 7, template_hole 6))),
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_hole 6))),
                         template_var 1))))))),
           template_var 0),
         template_hole 12))),
    ("Cardanos_Formula.cubic_depressed",
     "[| ?e ~= (0::?'a) ==> ?z\<^sup>2 - ?y * ?z - ?e / (3::?'a) = (0::?'a);
         ?e ~= (0::?'a) ==> ?u = ?z ^ 3; ?v = - (?e ^ 3 / (27::?'a)) |]
      ==> (?y ^ 3 + ?e * ?y + ?f = (0::?'a)) =
          (if ?e = (0::?'a) then ?y ^ 3 = - ?f
           else ?u\<^sup>2 + ?f * ?u + ?v = (0::?'a))",
     template_implication
      ([template_implication
         ([template_negation
            (template_equation (template_var 5, template_hole 13))],
          template_equation
           (template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 4),
                      template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_hole 8)))),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 4))),
              template_app
               (template_app (template_hole 6, template_var 5),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 8)))),
            template_hole 13)),
        template_implication
         ([template_negation
            (template_equation (template_var 5, template_hole 13))],
          template_equation
           (template_var 2,
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_hole 10,
                template_app (template_hole 4, template_hole 8))))),
        template_equation
         (template_var 1,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 11, template_var 5),
                  template_app
                   (template_hole 10,
                    template_app (template_hole 4, template_hole 8)))),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 4, template_hole 8))))))))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 11, template_var 3),
                     template_app
                      (template_hole 10,
                       template_app (template_hole 4, template_hole 8)))),
                 template_app
                  (template_app (template_hole 7, template_var 5),
                   template_var 3))),
             template_var 0),
           template_hole 13),
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 14, template_var 5),
                     template_hole 13)),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 11, template_var 3),
                       template_app
                        (template_hole 10,
                         template_app (template_hole 4, template_hole 8)))),
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_hole 11, template_var 2),
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9, template_hole 8)))),
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 2))),
                     template_var 1)),
                 template_hole 13))
             )))),
    ("Cardanos_Formula.to_depressed_cubic",
     "[| ?a ~= (0::?'a); ?x = ?y - ?b / ((3::?'a) * ?a);
         ?e = (?c - ?b\<^sup>2 / ((3::?'a) * ?a)) / ?a;
         ?f =
         (?d + (2::?'a) * ?b ^ 3 / ((27::?'a) * ?a\<^sup>2) -
          ?b * ?c / ((3::?'a) * ?a)) /
         ?a |]
      ==> (?a * ?x ^ 3 + ?b * ?x\<^sup>2 + ?c * ?x + ?d = (0::?'a)) =
          (?y ^ 3 + ?e * ?y + ?f = (0::?'a))",
     template_implication
      ([template_negation
         (template_equation (template_var 7, template_hole 11)),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 10, template_var 5),
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_hole 5))),
                template_var 7)))),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 10, template_var 2),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_app
                       (template_hole 3,
                        template_app (template_hole 2, template_hole 5)))),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_hole 5))),
                    template_var 7)))),
            template_var 7)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 1, template_var 0),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 2, template_hole 5))),
                          template_app
                           (template_app (template_hole 4, template_var 4),
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 6, template_hole 5))))),
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6,
                              template_app
                               (template_hole 6,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 6, template_hole 5)))))),
                        template_app
                         (template_app (template_hole 4, template_var 7),
                          template_app
                           (template_hole 3,
                            template_app
                             (template_hole 2, template_hole 5))))))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 4),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_hole 5))),
                    template_var 7)))),
            template_var 7))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 8, template_var 7),
                         template_app
                          (template_app (template_hole 4, template_var 6),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 6, template_hole 5))))),
                     template_app
                      (template_app (template_hole 8, template_var 4),
                       template_app
                        (template_app (template_hole 4, template_var 6),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 5)))))),
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 6))),
             template_var 0),
           template_hole 11),
         template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_hole 5)))),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 5))),
             template_var 1),
           template_hole 11))))]:
   (string * thm * template) list
### theory "Draft.Cardanos_FormulaTemplates"
### 0.454s elapsed time, 0.559s cpu time, 0.000s GC time
val it = (): unit
