Loading theory "Draft.Templates" (required by "Draft.Complex_RootsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Complex_Roots" (required by "Draft.Complex_RootsTemplates")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.086s elapsed time, 0.220s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Complex_RootsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.571s elapsed time, 1.170s cpu time, 0.172s GC time
### theory "Draft.Complex_Roots"
### 3.154s elapsed time, 4.003s cpu time, 0.379s GC time
Loading theory "Draft.Complex_RootsTemplates"
val templateLemmas =
   [("Complex_Roots.croot_0", "croot 0 ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Complex_Roots.croot_0", "croot ?n 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Complex_Roots.cos_abs", "cos \<bar>?x\<bar> = cos ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Complex_Roots_Real_Poly.map_poly_Re_of_real",
     "map_poly Re (map_poly cor ?p) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Complex_Roots.Arg_of_real",
     "Arg (cor ?x) = (if ?x < 0 then pi else 0)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0),
         template_hole 1))),
    ("Complex_Roots.Arg_croot", "Arg (croot ?n ?x) = Arg ?x / real ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Complex_Roots_Real_Poly.real_poly_real_coeff",
     "set (coeffs ?p) <= \<real> ==> coeff ?p ?x : \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1)),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 2)
           ))),
    ("Complex_Roots.Arg_rcis_cis",
     "0 < ?x ==> Arg (rcis ?x ?y) = Arg (cis ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Complex_Roots.croot_power", "?n ~= 0 ==> croot ?n ?x ^ ?n = ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1),
         template_var 0))),
    ("Complex_Roots_Real_Poly.real_poly_uminus",
     "set (coeffs ?p) <= \<real> ==> set (coeffs (- ?p)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.real_poly_power",
     "set (coeffs ?p) <= \<real> ==> set (coeffs (?p ^ ?n)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.map_poly_of_real_Re",
     "set (coeffs ?p) <= \<real> ==> map_poly cor (map_poly Re ?p) = ?p",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_var 0))),
    ("Complex_Roots_Real_Poly.map_poly_Re_coeffs",
     "set (coeffs ?p) <= \<real> ==>
      coeffs (map_poly Re ?p) = map Re (coeffs ?p)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_hole 1),
           template_app (template_hole 6, template_var 0))))),
    ("Complex_Roots_Real_Poly.odd_degree_imp_real_root",
     "odd (degree ?p) ==> EX x. poly ?p x = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5))),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Complex_Roots_Real_Poly.real_degree_2_factorization_exists",
     "EX qs. ?p = prod_list qs & (ALL q:set qs. degree q <= 2)",
     template_predicate (template_app (template_hole 10, t_empty))),
    ("Complex_Roots_Real_Poly.map_poly_Re_0",
     "[| set (coeffs ?p) <= \<real>; map_poly Re ?p = 0 |] ==> ?p = 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 0)),
          template_hole 6),
        template_equation
         (template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0),
          template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("Complex_Roots.all_croots",
     "?n ~= 0 ==> set (all_croots ?n ?x) = {y. y ^ ?n = ?x}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, t_empty)))),
    ("Complex_Roots.cis_Arg_power",
     "?x ~= 0 ==> cis (Arg (?x ^ ?n)) = cis (Arg ?x * real ?n)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 0, template_var 0)))))),
    ("Complex_Roots_Real_Poly.map_poly_Re_poly",
     "set (coeffs ?p) <= \<real> ==>
      cor (poly (map_poly Re ?p) ?x) = poly ?p (cor ?x)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 1)),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("Complex_Roots_Real_Poly.map_poly_Re_power",
     "set (coeffs ?p) <= \<real> ==>
      map_poly Re (?p ^ ?n) = map_poly Re ?p ^ ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_var 0)))),
    ("Complex_Roots_Real_Poly.real_poly_pCons",
     "[| ?c : \<real>; set (coeffs ?p) <= \<real> |]
      ==> set (coeffs (pCons ?c ?p)) <= \<real>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)),
          template_hole 4)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_hole 4))),
    ("Complex_Roots_Real_Poly.real_poly_smult",
     "[| ?c : \<real>; set (coeffs ?p) <= \<real> |]
      ==> set (coeffs (smult ?c ?p)) <= \<real>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)),
          template_hole 4)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_hole 4))),
    ("Complex_Roots.abs_add_2_mult_bound",
     "\<bar>?x\<bar> <= ?y ==>
      \<bar>?x\<bar> <= \<bar>?x + (2::?'a) * of_int ?i * ?y\<bar>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 2),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_app (template_hole 0, template_var 0))),
               template_var 1)))))),
    ("Complex_Roots_Real_Poly.complex_conjugate_root",
     "[| set (coeffs ?p) <= \<real>; poly ?p ?c = 0 |]
      ==> poly ?p (cnj ?c) = 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1)),
          template_hole 4),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_hole 1))),
    ("Complex_Roots.croot_impl",
     "croot ?n ?x =
      (if ?n = 0 then 0
       else arg_min_list (%y. (- Re y, - Im y)) (all_croots ?n ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 7)),
               template_hole 6),
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Complex_Roots_Real_Poly.real_poly_div",
     "[| set (coeffs ?p) <= \<real>; set (coeffs ?q) <= \<real> |]
      ==> set (coeffs (?q div ?p)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_hole 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.real_poly_mod",
     "[| set (coeffs ?p) <= \<real>; set (coeffs ?q) <= \<real> |]
      ==> set (coeffs (?q mod ?p)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_hole 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.real_poly_minus",
     "[| set (coeffs ?p) <= \<real>; set (coeffs ?q) <= \<real> |]
      ==> set (coeffs (?p - ?q)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_hole 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.real_poly_add",
     "[| set (coeffs ?p) <= \<real>; set (coeffs ?q) <= \<real> |]
      ==> set (coeffs (?p + ?q)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_hole 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.real_poly_mult",
     "[| set (coeffs ?p) <= \<real>; set (coeffs ?q) <= \<real> |]
      ==> set (coeffs (?p * ?q)) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_hole 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.complex_conjugate_order",
     "[| set (coeffs ?p) <= \<real>; ?p ~= 0 |]
      ==> Polynomial.order (cnj ?c) ?p = Polynomial.order ?c ?p",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 1)),
          template_hole 6),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Complex_Roots_Real_Poly.real_poly_sum",
     "(!!x. x : ?S ==> set (coeffs (?f x)) <= \<real>) ==>
      set (coeffs (sum ?f ?S)) <= \<real>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_hole 1))),
    ("Complex_Roots_Real_Poly.real_poly_prod",
     "(!!x. x : ?S ==> set (coeffs (?f x)) <= \<real>) ==>
      set (coeffs (prod ?f ?S)) <= \<real>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_hole 1))),
    ("Complex_Roots.cos_mono_le",
     "[| \<bar>?x\<bar> <= pi; \<bar>?y\<bar> <= pi |]
      ==> (cos ?x <= cos ?y) = (\<bar>?y\<bar> <= \<bar>?x\<bar>)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_hole 2),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 3, template_var 1))))),
    ("Complex_Roots_Real_Poly.map_poly_Re_mult",
     "[| set (coeffs ?p) <= \<real>; set (coeffs ?q) <= \<real> |]
      ==> map_poly Re (?p * ?q) = map_poly Re ?p * map_poly Re ?q",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)),
          template_hole 5),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("Complex_Roots_Real_Poly.real_poly_factor",
     "[| set (coeffs (?p * ?q)) <= \<real>; set (coeffs ?p) <= \<real>;
         ?p ~= 0 |]
      ==> set (coeffs ?q) <= \<real>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))),
          template_hole 3),
        template_inequation
         (less_equals,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 1)),
          template_hole 3),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 3))),
    ("Complex_Roots_Real_Poly.real_degree_2_factorization_exists_complex",
     "set (coeffs ?p) <= \<real> ==>
      EX qs.
         ?p = prod_list qs &
         (ALL q:set qs. set (coeffs q) <= \<real> & degree q <= 2)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 0)),
          template_hole 11)],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Complex_Roots.croot_via_root_selection",
     "[| set ?ys = {y. y ^ ?n = ?x}; ?n ~= 0 |]
      ==> croot ?n ?x = arg_min_list (%y. (- Re y, - Im y)) ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 2),
          template_app (template_hole 11, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, t_empty), template_var 2)))),
    ("Complex_Roots.abs_eq_add_2_mult",
     "[| \<bar>?x\<bar> = \<bar>?x + (2::?'a) * of_int ?i * ?y\<bar>;
         - ?y < ?x; ?x <= ?y; ?i ~= 0 |]
      ==> ?x = ?y & ?i = - 1",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_hole 12,
                        template_app (template_hole 11, template_hole 10))),
                    template_app (template_hole 9, template_var 1))),
                template_var 0)))),
        template_inequation
         (less_than, template_app (template_hole 7, template_var 0),
          template_var 2),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 16, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("Complex_Roots.croot_principal",
     "[| ?n ~= 0; ?y ^ ?n = ?x; ?y ~= croot ?n ?x |]
      ==> Re ?y < Re (croot ?n ?x) |
          Re ?y = Re (croot ?n ?x) & Im ?y < Im (croot ?n ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 2),
          template_var 0),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 3, template_var 1)),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 0, template_var 1)),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)))))
           ))),
    ("Complex_Roots.croot_unique",
     "[| ?n ~= 0; ?y ^ ?n = ?x;
         !!z. z ^ ?n = ?x ==> Re z < Re ?y | Re z = Re ?y & Im z <= Im ?y |]
      ==> croot ?n ?x = ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 11)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1), template_var 2),
          template_var 0),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Complex_Roots.all_croots_code",
     "all_croots ?n ?x =
      (if ?n = 0 then []
       else if ?x = 0 then [0]
            else if algebraic ?x
                 then genuine_roots_impl (all_croots_part1 ?n ?x)
                 else Code.abort
                       STR ''all_croots invoked on non-algebraic number''
                       (%_. all_croots ?n ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 1),
                   template_hole 12)),
               template_hole 11),
             template_app
              (template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_hole 9)),
                 template_app
                  (template_app (template_hole 8, template_hole 9),
                   template_hole 11)),
               template_app
                (template_app
                  (template_app
                    (template_hole 14,
                     template_app (template_hole 7, template_var 0)),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 1),
                           template_hole 2),
                         template_hole 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 1),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 1), template_hole 1),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 2), template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 1),
                               template_hole 2),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 2),
   template_hole 1),
 template_hole 1),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 2),
     template_hole 1),
   template_hole 1),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 2),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 2),
       template_hole 2),
     template_hole 2),
   template_hole 1),
 template_hole 2),
                                     template_hole 2),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 2),
         template_hole 2),
       template_hole 2),
     template_hole 1),
   template_hole 2),
 template_hole 2),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 1),
             template_hole 1),
           template_hole 2),
         template_hole 1),
       template_hole 2),
     template_hole 2),
   template_hole 2),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 2),
     template_hole 2),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 1),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_hole 2),
         template_hole 2),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 1),
                     template_hole 2),
                   template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 2),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_hole 2),
                     template_hole 2),
                   template_hole 1),
                 template_hole 2),
               template_hole 2),
             template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 2),
                       template_hole 2),
                     template_hole 2),
                   template_hole 1),
                 template_hole 2),
               template_hole 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 2),
                     template_hole 1),
                   template_hole 2),
                 template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_hole 1),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_hole 2),
                   template_hole 2),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_hole 1),
                               template_hole 1),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_hole 2),
                     template_hole 2),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 1),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 1),
                           template_hole 1),
                         template_hole 2),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 2),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 1),
                           template_hole 2),
                         template_hole 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 1),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 1), template_hole 1),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 1),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 2),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 2),
   template_hole 2),
 template_hole 2),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 2),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 1),
       template_hole 2),
     template_hole 2),
   template_hole 1),
 template_hole 2),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_hole 1),
       template_hole 1),
     template_hole 1),
   template_hole 2),
 template_hole 2),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 1),
             template_hole 1),
           template_hole 2),
         template_hole 2),
       template_hole 1),
     template_hole 2),
   template_hole 2),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_hole 2),
     template_hole 2),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 2),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 1),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 2),
         template_hole 2),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 1),
                     template_hole 2),
                   template_hole 1),
                 template_hole 1),
               template_hole 2),
             template_hole 2),
           template_hole 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 1),
                     template_hole 1),
                   template_hole 1),
                 template_hole 1),
               template_hole 2),
             template_hole 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_hole 2),
                   template_hole 1),
                 template_hole 2),
               template_hole 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_hole 1),
                   template_hole 2),
                 template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_hole 1),
                             template_hole 1),
                           template_hole 1),
                         template_hole 1),
                       template_hole 1),
                     template_hole 2),
                   template_hole 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 2),
                     template_hole 2),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 1),
                           template_hole 2),
                         template_hole 2),
                       template_hole 2),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 2),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 2),
                             template_hole 1),
                           template_hole 2),
                         template_hole 2),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 2), template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 2),
 template_hole 1),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 2),
                             template_hole
                              0))))))))))))))))))))))))))))))))))))))))))),
                   t_empty))))
           )))]:
   (string * thm * template) list
### theory "Draft.Complex_RootsTemplates"
### 2.860s elapsed time, 3.559s cpu time, 0.735s GC time
val it = (): unit
