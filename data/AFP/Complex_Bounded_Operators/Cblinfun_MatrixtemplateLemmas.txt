   [("Cblinfun_Matrix.vec_of_basis_enum_inverse",
     "basis_enum_of_vec (vec_of_basis_enum ?w) = ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Cblinfun_Matrix.mat_of_cblinfun_inverse",
     "cblinfun_of_mat (mat_of_cblinfun ?B) = ?B",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Cblinfun_Matrix.dim_col_mat_of_cblinfun",
     "dim_col (mat_of_cblinfun ?a) = CARD(?'a)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cblinfun_Matrix.dim_row_mat_of_cblinfun",
     "dim_row (mat_of_cblinfun ?a) = CARD(?'b)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cblinfun_Matrix.dim_vec_of_basis_enum'",
     "dim_vec (vec_of_basis_enum ?v) = length canonical_basis",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cblinfun_Matrix.mat_of_cblinfun_uminus",
     "mat_of_cblinfun (- ?M) = - mat_of_cblinfun ?M",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_adj",
     "mat_of_cblinfun (adj ?F) = mat_adjoint (mat_of_cblinfun ?F)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_uminus",
     "vec_of_basis_enum (- ?b2.0) = - vec_of_basis_enum ?b2.0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_ell2_carrier",
     "mat_of_cblinfun ?a : carrier_mat CARD(?'b) CARD(?'a)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_app (template_hole 1, template_hole 0)))
         )),
    ("Cblinfun_Matrix.mat_of_cblinfun_scaleC",
     "mat_of_cblinfun (?a *\<^sub>C ?F) =
      smult_mat ?a (mat_of_cblinfun ?F)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_ket",
     "vec_of_basis_enum (ket ?i) = unit_vec CARD(?'a) (enum_idx ?i)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_scaleC",
     "vec_of_basis_enum (?c *\<^sub>C ?b) =
      smult_vec ?c (vec_of_basis_enum ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_minus",
     "mat_of_cblinfun (?M - ?N) = mat_of_cblinfun ?M - mat_of_cblinfun ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_plus",
     "mat_of_cblinfun (?F + ?G) = mat_of_cblinfun ?F + mat_of_cblinfun ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_scaleR",
     "mat_of_cblinfun (?a *\<^sub>R ?F) =
      smult_mat (complex_of_real ?a) (mat_of_cblinfun ?F)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_compose",
     "mat_of_cblinfun (cblinfun_compose ?F ?G) =
      mat_of_cblinfun ?F * mat_of_cblinfun ?G",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_minus",
     "vec_of_basis_enum (?b1.0 - ?b2.0) =
      vec_of_basis_enum ?b1.0 - vec_of_basis_enum ?b2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_add",
     "vec_of_basis_enum (?b1.0 + ?b2.0) =
      vec_of_basis_enum ?b1.0 + vec_of_basis_enum ?b2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_scaleR",
     "vec_of_basis_enum (?r *\<^sub>R ?b) =
      smult_vec (complex_of_real ?r) (vec_of_basis_enum ?b)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_cblinfun_apply",
     "vec_of_basis_enum (cblinfun_apply ?F ?u) =
      mult_mat_vec (mat_of_cblinfun ?F) (vec_of_basis_enum ?u)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.cscalar_prod_vec_of_basis_enum",
     "cscalar_prod (vec_of_basis_enum ?\<phi>) (vec_of_basis_enum ?\<psi>) =
      ?\<psi> \<bullet>\<^sub>C ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Cblinfun_Matrix.cblinfun_eq_mat_of_cblinfunI",
     "mat_of_cblinfun ?a = mat_of_cblinfun ?b ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Cblinfun_Matrix.basis_enum_eq_vec_of_basis_enumI",
     "vec_of_basis_enum ?a = vec_of_basis_enum ?b ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Cblinfun_Matrix.corthogonal_vec_of_basis_enum",
     "corthogonal (map vec_of_basis_enum ?S) =
      (is_ortho_set (set ?S) & distinct ?S)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_vector_to_cblinfun",
     "mat_of_cblinfun (vector_to_cblinfun ?\<psi>) =
      mat_of_cols (length canonical_basis) [vec_of_basis_enum ?\<psi>]",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_to_inverse",
     "vec_of_basis_enum (inverse ?\<psi>) =
      vec_of_list [inverse (vec_index (vec_of_basis_enum ?\<psi>) 0)]",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 0)),
                 template_hole 1))),
           template_hole 0)))),
    ("Cblinfun_Matrix.basis_enum_of_vec_inverse",
     "dim_vec ?v = length canonical_basis ==>
      vec_of_basis_enum (basis_enum_of_vec ?v) = ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Cblinfun_Matrix.cblinfun_of_mat_inverse",
     "?M : carrier_mat (length canonical_basis) (length canonical_basis) ==>
      mat_of_cblinfun (cblinfun_of_mat ?M) = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5)),
                template_app (template_hole 4, template_hole 3)))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Cblinfun_Matrix.basis_enum_of_vec_unit_vec",
     "?i < length canonical_basis ==>
      basis_enum_of_vec (unit_vec (length canonical_basis) ?i) =
      canonical_basis ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 5, template_hole 4)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_hole 4),
           template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_canonical_basis",
     "?i < length canonical_basis ==>
      vec_of_basis_enum (canonical_basis ! ?i) =
      unit_vec (length canonical_basis) ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 4),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 5, template_hole 4)),
           template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_ell2_component",
     "?i < CARD(?'a) ==>
      vec_index (vec_of_basis_enum ?\<psi>) ?i =
      Rep_ell2 ?\<psi> (enum_class.enum ! ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1))))),
    ("Cblinfun_Matrix.basis_enum_of_vec_mult",
     "dim_vec ?v = length canonical_basis ==>
      basis_enum_of_vec (smult_vec ?c ?v) =
      ?c *\<^sub>C basis_enum_of_vec ?v",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Cblinfun_Matrix.cblinfun_of_mat_adjoint",
     "?M : carrier_mat (length canonical_basis) (length canonical_basis) ==>
      cblinfun_of_mat (mat_adjoint ?M) = adj (cblinfun_of_mat ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7)),
                template_app (template_hole 6, template_hole 5)))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Cblinfun_Matrix.cblinfun_of_mat_uminus",
     "?M : carrier_mat (length canonical_basis) (length canonical_basis) ==>
      cblinfun_of_mat (- ?M) = - cblinfun_of_mat ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Cblinfun_Matrix.ccspan_leq_using_vec",
     "(ccspan (set ?A) <= ccspan (set ?B)) =
      is_subspace_of_vec_list (length canonical_basis)
       (map vec_of_basis_enum ?A) (map vec_of_basis_enum ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_Proj_ccspan",
     "mat_of_cblinfun (Proj (ccspan (set ?S))) =
      (let d = length canonical_basis
       in mk_projector_orthog d
           (gram_schmidt0 d (map vec_of_basis_enum ?S)))",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)))),
       template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         t_empty))),
    ("Cblinfun_Matrix.mat_of_cblinfun_sandwich",
     "mat_of_cblinfun (cblinfun_apply (sandwich ?a) ?b) =
      (let a' = mat_of_cblinfun ?a
       in a' * mat_of_cblinfun ?b * mat_adjoint a')",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         t_empty))),
    ("Cblinfun_Matrix.vec_of_basis_enum_times",
     "vec_of_basis_enum (?\<psi> * ?\<phi>) =
      vec_of_list
       [vec_index (vec_of_basis_enum ?\<psi>) 0 *
        vec_index (vec_of_basis_enum ?\<phi>) 0]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 7, template_var 1)),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 0)),
                 template_hole 1))),
           template_hole 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_divide",
     "vec_of_basis_enum (?\<psi> / ?\<phi>) =
      vec_of_list
       [vec_index (vec_of_basis_enum ?\<psi>) 0 /
        vec_index (vec_of_basis_enum ?\<phi>) 0]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 7, template_var 1)),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 0)),
                 template_hole 1))),
           template_hole 0)))),
    ("Cblinfun_Matrix.cblinfun_apply_ccspan_using_vec",
     "cblinfun_image ?A (ccspan (set ?S)) =
      ccspan
       (basis_enum_of_vec `
        set (map (mult_mat_vec (mat_of_cblinfun ?A))
              (map vec_of_basis_enum ?S)))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0))),
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("Cblinfun_Matrix.mk_projector_orthog_correct",
     "[| is_ortho_set (set ?S); distinct ?S |]
      ==> mk_projector_orthog (length canonical_basis)
           (map vec_of_basis_enum ?S) =
          mat_of_cblinfun (Proj (ccspan (set ?S)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_hole 5)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 10, template_var 0))))))),
    ("Cblinfun_Matrix.ccspan_gram_schmidt0_invariant",
     "set ?ws <= carrier_vec (length canonical_basis) ==>
      ccspan
       (set (map basis_enum_of_vec
              (gram_schmidt0 (length canonical_basis) ?ws))) =
      ccspan (set (map basis_enum_of_vec ?ws))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 7, template_hole 6)),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0)))))),
    ("Cblinfun_Matrix.mat_of_cblinfun_classical_operator",
     "mat_of_cblinfun (classical_operator ?f) =
      mat CARD(?'b) CARD(?'a)
       (%(r, c).
           if ?f (enum_class.enum ! c) = Some (enum_class.enum ! r) then 1
           else 0)",
     template_equation
      (template_app
        (template_hole 16, template_app (template_hole 15, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 14,
             template_app (template_hole 13, template_hole 12)),
           template_app (template_hole 11, template_hole 10)),
         template_app (template_hole 9, t_empty)))),
    ("Cblinfun_Matrix.basis_enum_of_vec_add",
     "[| dim_vec ?v1.0 = length canonical_basis;
         dim_vec ?v2.0 = length canonical_basis |]
      ==> basis_enum_of_vec (?v1.0 + ?v2.0) =
          basis_enum_of_vec ?v1.0 + basis_enum_of_vec ?v2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Cblinfun_Matrix.cinner_basis_enum_of_vec",
     "[| dim_vec ?x = length canonical_basis;
         dim_vec ?y = length canonical_basis |]
      ==> basis_enum_of_vec ?x \<bullet>\<^sub>C basis_enum_of_vec ?y =
          cscalar_prod ?y ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_hole 5)),
        template_equation
         (template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Cblinfun_Matrix.basis_enum_of_vec_cblinfun_apply",
     "[| ?M : carrier_mat (length canonical_basis) (length canonical_basis);
         dim_vec ?x = length canonical_basis |]
      ==> basis_enum_of_vec (mult_mat_vec ?M ?x) =
          cblinfun_apply (cblinfun_of_mat ?M) (basis_enum_of_vec ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_hole 10)),
                template_app (template_hole 9, template_hole 8)))
            ),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 9, template_hole 8))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Cblinfun_Matrix.cblinfun_of_mat_minus",
     "[| ?M : carrier_mat (length canonical_basis) (length canonical_basis);
         ?N : carrier_mat (length canonical_basis)
               (length canonical_basis) |]
      ==> cblinfun_of_mat (?M - ?N) =
          cblinfun_of_mat ?M - cblinfun_of_mat ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app (template_hole 5, template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Cblinfun_Matrix.cblinfun_of_mat_plus",
     "[| ?M : carrier_mat (length canonical_basis) (length canonical_basis);
         ?N : carrier_mat (length canonical_basis)
               (length canonical_basis) |]
      ==> cblinfun_of_mat (?M + ?N) =
          cblinfun_of_mat ?M + cblinfun_of_mat ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app (template_hole 5, template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app (template_hole 5, template_hole 4)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Cblinfun_Matrix.cblinfun_of_mat_times",
     "[| ?M : carrier_mat (length canonical_basis) (length canonical_basis);
         ?N : carrier_mat (length canonical_basis)
               (length canonical_basis) |]
      ==> cblinfun_of_mat (?M * ?N) =
          cblinfun_compose (cblinfun_of_mat ?M) (cblinfun_of_mat ?N)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_hole 10)),
                template_app (template_hole 9, template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 9, template_hole 8)),
                template_app (template_hole 7, template_hole 6)))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Cblinfun_Matrix.mat_of_cblinfun_ell2_component",
     "[| ?i < CARD(?'b); ?j < CARD(?'a) |]
      ==> index_mat (mat_of_cblinfun ?a) (?i, ?j) =
          Rep_ell2 (cblinfun_apply ?a (ket (enum_class.enum ! ?j)))
           (enum_class.enum ! ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 14, template_hole 13)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 12, template_hole 11))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 0)),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 1)))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2))))),
    ("Cblinfun_Matrix.norm_ell2_vec_of_basis_enum",
     "norm ?\<psi> =
      (let \<psi>' = vec_of_basis_enum ?\<psi>
       in sqrt
           (SUM i = 0..<dim_vec \<psi>'.
            let z = vec_index \<psi>' i
            in (Re z)\<^sup>2 + (Im z)\<^sup>2))",
     template_equation
      (template_app (template_hole 16, template_var 0),
       template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 0)),
         t_empty))),
    ("Cblinfun_Matrix.mat_of_cblinfun_proj",
     "mat_of_cblinfun (proj ?a) =
      smult_mat
       (1 / cscalar_prod (vec_of_basis_enum ?a) (vec_of_basis_enum ?a))
       (mat_of_cols (length canonical_basis) [vec_of_basis_enum ?a] *
        mat_of_rows (length canonical_basis)
         [conjugate (vec_of_basis_enum ?a)])",
     template_equation
      (template_app
        (template_hole 17,
         template_app
          (template_hole 16,
           template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 0),
               template_hole 13)))),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0)),
               template_app
                (template_hole 7,
                 template_app (template_hole 8, template_var 0))))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 8, template_var 0)),
                 template_hole 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 8, template_var 0))),
               template_hole 1))))))]
