   [("Cblinfun_Matrix.vec_of_basis_enum_inverse",
     "basis_enum_of_vec (vec_of_basis_enum ?w) = ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Cblinfun_Matrix.mat_of_cblinfun_inverse",
     "cblinfun_of_mat (mat_of_cblinfun ?B) = ?B",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Cblinfun_Matrix.dim_col_mat_of_cblinfun",
     "dim_col (mat_of_cblinfun ?a) = CARD(?'a)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cblinfun_Matrix.dim_row_mat_of_cblinfun",
     "dim_row (mat_of_cblinfun ?a) = CARD(?'b)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cblinfun_Matrix.dim_vec_of_basis_enum'",
     "dim_vec (vec_of_basis_enum ?v) = length canonical_basis",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Cblinfun_Matrix.mat_of_cblinfun_uminus",
     "mat_of_cblinfun (- ?M) = - mat_of_cblinfun ?M",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_adj",
     "mat_of_cblinfun (adj ?F) = mat_adjoint (mat_of_cblinfun ?F)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_uminus",
     "vec_of_basis_enum (- ?b2.0) = - vec_of_basis_enum ?b2.0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_scaleC",
     "mat_of_cblinfun (?a *\<^sub>C ?F) =
      smult_mat ?a (mat_of_cblinfun ?F)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_ket",
     "vec_of_basis_enum (ket ?i) = unit_vec CARD(?'a) (enum_idx ?i)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_scaleC",
     "vec_of_basis_enum (?c *\<^sub>C ?b) =
      smult_vec ?c (vec_of_basis_enum ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_minus",
     "mat_of_cblinfun (?M - ?N) = mat_of_cblinfun ?M - mat_of_cblinfun ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_plus",
     "mat_of_cblinfun (?F + ?G) = mat_of_cblinfun ?F + mat_of_cblinfun ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_scaleR",
     "mat_of_cblinfun (?a *\<^sub>R ?F) =
      smult_mat (complex_of_real ?a) (mat_of_cblinfun ?F)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_compose",
     "mat_of_cblinfun (cblinfun_compose ?F ?G) =
      mat_of_cblinfun ?F * mat_of_cblinfun ?G",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_minus",
     "vec_of_basis_enum (?b1.0 - ?b2.0) =
      vec_of_basis_enum ?b1.0 - vec_of_basis_enum ?b2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_add",
     "vec_of_basis_enum (?b1.0 + ?b2.0) =
      vec_of_basis_enum ?b1.0 + vec_of_basis_enum ?b2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_scaleR",
     "vec_of_basis_enum (?r *\<^sub>R ?b) =
      smult_vec (complex_of_real ?r) (vec_of_basis_enum ?b)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_cblinfun_apply",
     "vec_of_basis_enum (cblinfun_apply ?F ?u) =
      mult_mat_vec (mat_of_cblinfun ?F) (vec_of_basis_enum ?u)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.cscalar_prod_vec_of_basis_enum",
     "cscalar_prod (vec_of_basis_enum ?\<phi>) (vec_of_basis_enum ?\<psi>) =
      ?\<psi> \<bullet>\<^sub>C ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Cblinfun_Matrix.corthogonal_vec_of_basis_enum",
     "corthogonal (map vec_of_basis_enum ?S) =
      (is_ortho_set (set ?S) & distinct ?S)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_vector_to_cblinfun",
     "mat_of_cblinfun (vector_to_cblinfun ?\<psi>) =
      mat_of_cols (length canonical_basis) [vec_of_basis_enum ?\<psi>]",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_to_inverse",
     "vec_of_basis_enum (inverse ?\<psi>) =
      vec_of_list [inverse (vec_index (vec_of_basis_enum ?\<psi>) 0)]",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 0)),
                 template_hole 1))),
           template_hole 0)))),
    ("Cblinfun_Matrix.ccspan_leq_using_vec",
     "(ccspan (set ?A) <= ccspan (set ?B)) =
      is_subspace_of_vec_list (length canonical_basis)
       (map vec_of_basis_enum ?A) (map vec_of_basis_enum ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Cblinfun_Matrix.mat_of_cblinfun_Proj_ccspan",
     "mat_of_cblinfun (Proj (ccspan (set ?S))) =
      (let d = length canonical_basis
       in mk_projector_orthog d
           (gram_schmidt0 d (map vec_of_basis_enum ?S)))",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)))),
       template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         t_empty))),
    ("Cblinfun_Matrix.mat_of_cblinfun_sandwich",
     "mat_of_cblinfun (cblinfun_apply (sandwich ?a) ?b) =
      (let a' = mat_of_cblinfun ?a
       in a' * mat_of_cblinfun ?b * mat_adjoint a')",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         t_empty))),
    ("Cblinfun_Matrix.vec_of_basis_enum_times",
     "vec_of_basis_enum (?\<psi> * ?\<phi>) =
      vec_of_list
       [vec_index (vec_of_basis_enum ?\<psi>) 0 *
        vec_index (vec_of_basis_enum ?\<phi>) 0]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 7, template_var 1)),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 0)),
                 template_hole 1))),
           template_hole 0)))),
    ("Cblinfun_Matrix.vec_of_basis_enum_divide",
     "vec_of_basis_enum (?\<psi> / ?\<phi>) =
      vec_of_list
       [vec_index (vec_of_basis_enum ?\<psi>) 0 /
        vec_index (vec_of_basis_enum ?\<phi>) 0]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 7, template_var 1)),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 7, template_var 0)),
                 template_hole 1))),
           template_hole 0)))),
    ("Cblinfun_Matrix.cblinfun_apply_ccspan_using_vec",
     "cblinfun_image ?A (ccspan (set ?S)) =
      ccspan
       (basis_enum_of_vec `
        set (map (mult_mat_vec (mat_of_cblinfun ?A))
              (map vec_of_basis_enum ?S)))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0))),
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("Cblinfun_Matrix.mat_of_cblinfun_classical_operator",
     "mat_of_cblinfun (classical_operator ?f) =
      mat CARD(?'b) CARD(?'a)
       (%(r, c).
           if ?f (enum_class.enum ! c) = Some (enum_class.enum ! r) then 1
           else 0)",
     template_equation
      (template_app
        (template_hole 16, template_app (template_hole 15, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 14,
             template_app (template_hole 13, template_hole 12)),
           template_app (template_hole 11, template_hole 10)),
         template_app (template_hole 9, t_empty)))),
    ("Cblinfun_Matrix.norm_ell2_vec_of_basis_enum",
     "norm ?\<psi> =
      (let \<psi>' = vec_of_basis_enum ?\<psi>
       in sqrt
           (SUM i = 0..<dim_vec \<psi>'.
            let z = vec_index \<psi>' i
            in (Re z)\<^sup>2 + (Im z)\<^sup>2))",
     template_equation
      (template_app (template_hole 16, template_var 0),
       template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 0)),
         t_empty))),
    ("Cblinfun_Matrix.mat_of_cblinfun_proj",
     "mat_of_cblinfun (proj ?a) =
      smult_mat
       (1 / cscalar_prod (vec_of_basis_enum ?a) (vec_of_basis_enum ?a))
       (mat_of_cols (length canonical_basis) [vec_of_basis_enum ?a] *
        mat_of_rows (length canonical_basis)
         [conjugate (vec_of_basis_enum ?a)])",
     template_equation
      (template_app
        (template_hole 17,
         template_app
          (template_hole 16,
           template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 0),
               template_hole 13)))),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_hole 10),
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0)),
               template_app
                (template_hole 7,
                 template_app (template_hole 8, template_var 0))))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 8, template_var 0)),
                 template_hole 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 8, template_var 0))),
               template_hole 1))))))]
