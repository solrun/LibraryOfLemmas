   [("Complex_L2.norm_ket", "norm (ket ?i) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Complex_L2.trunc_ell2_empty", "trunc_ell2 {} ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Complex_L2.cinner_ket_same", "ket ?i \<bullet>\<^sub>C ket ?i = 1",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Complex_L2.ket_canonical_basis",
     "ket ?x = canonical_basis ! enum_idx ?x",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_L2.ell2_norm_finite_L2_set",
     "ell2_norm ?x = L2_set (cmod o ?x) UNIV",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Complex_L2.cinner_ket_left",
     "ket ?i \<bullet>\<^sub>C ?\<psi> = Rep_ell2 ?\<psi> ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complex_L2.ket_injective", "(ket ?i = ket ?j) = (?i = ?j)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.cinner_ket_right",
     "?\<psi> \<bullet>\<^sub>C ket ?i = cnj (Rep_ell2 ?\<psi> ?i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_L2.ell2_norm_ket",
     "ell2_norm (%i. if ?a = i then 1 else 0) = 1",
     template_equation
      (template_app (template_hole 5, t_empty), template_hole 0)),
    ("Complex_L2.has_ell2_norm_L2_set",
     "has_ell2_norm ?x = bdd_above (L2_set (cmod o ?x) ` Collect finite)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0))),
           template_app (template_hole 1, template_hole 0))))),
    ("Complex_L2.orthogonal_ket",
     "is_orthogonal (ket ?i) (ket ?j) = (?i ~= ?j)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Complex_L2.cinner_ket",
     "ket ?i \<bullet>\<^sub>C ket ?j = (if ?i = ?j then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_dunno)),
    ("Complex_L2.classical_operator_ket_finite",
     "cblinfun_apply (classical_operator ?\<pi>) (ket ?x) =
      (case ?\<pi> ?x of None => 0 | Some i => ket i)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app (template_var 1, template_var 0)))),
    ("Complex_L2.ell2_norm_finite",
     "ell2_norm ?x = sqrt (SUM i:UNIV. (cmod (?x i))\<^sup>2)",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_hole 0)))),
    ("Complex_L2.has_ell2_norm_bdd_above",
     "has_ell2_norm ?x =
      bdd_above (sum (%xa. cmod ((?x xa)\<^sup>2)) ` Collect finite)",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app (template_hole 1, template_hole 0))))),
    ("Complex_L2.norm_id_minus_trunc_ell2",
     "(norm (?x - trunc_ell2 ?S ?x))\<^sup>2 =
      (norm ?x)\<^sup>2 - (norm (trunc_ell2 ?S ?x))\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))))))]
