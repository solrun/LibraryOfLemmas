   [("Complex_Inner_Product0.complex_inner_1_left", "cinner 1 ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Complex_Inner_Product0.complex_inner_1_right", "cinner ?x 1 = cnj ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Inner_Product0.of_complex_inner_1",
     "cinner (of_complex ?x) (1::?'a) = cnj ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Inner_Product0.summable_of_complex_iff",
     "summable (%x. of_complex (?f x)) = summable ?f",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Inner_Product0.cnorm_eq_1",
     "(norm ?x = 1) = (cinner ?x ?x = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Complex_Inner_Product0.cdot_square_norm",
     "cinner ?x ?x = complex_of_real ((norm ?x)\<^sup>2)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 0), template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Complex_Inner_Product0.cinner_simps",
     "cinner ?x (?r *\<^sub>C ?y) = ?r * cinner ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Inner_Product0.cgderiv_deriv",
     "cGDERIV ?f ?x :> ?D = (?f has_field_derivative cnj ?D) (at ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Complex_Inner_Product0.cinner_simps",
     "cinner (?r *\<^sub>C ?x) ?y = cnj ?r * cinner ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Complex_Inner_Product0.cinner_divide_right",
     "cinner ?a (?b / of_complex ?m) = cinner ?a ?b / ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Complex_Inner_Product0.cnorm_eq",
     "(norm ?x = norm ?y) = (cinner ?x ?x = cinner ?y ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Complex_Inner_Product0.cnorm_lt",
     "(norm ?x < norm ?y) = (cinner ?x ?x < cinner ?y ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Complex_Inner_Product0.cnorm_le",
     "(norm ?x <= norm ?y) = (cinner ?x ?x <= cinner ?y ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Complex_Inner_Product0.cinner_simps",
     "cinner ?x (?y - ?z) = cinner ?x ?y - cinner ?x ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Inner_Product0.cinner_simps",
     "cinner ?x (?y + ?z) = cinner ?x ?y + cinner ?x ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Inner_Product0.cinner_simps",
     "cinner (?x - ?y) ?z = cinner ?x ?z - cinner ?y ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Inner_Product0.cinner_simps",
     "cinner (?x + ?y) ?z = cinner ?x ?z + cinner ?y ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Inner_Product0.cinner_divide_left",
     "cinner (?a / of_complex ?m) ?b = cinner ?a ?b / cnj ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Complex_Inner_Product0.cnorm_eq_square",
     "(norm ?x = ?a) =
      (0 <= ?a & cinner ?x ?x = complex_of_real (?a\<^sup>2))",
     template_bimplication
      (template_equation
        (template_app (template_hole 10, template_var 1), template_var 0),
       template_dunno)),
    ("Complex_Inner_Product0.norm_gt_square",
     "(?a < norm ?x) =
      (?a < 0 | complex_of_real (?a\<^sup>2) < cinner ?x ?x)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_hole 7)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))))),
    ("Complex_Inner_Product0.norm_lt_square",
     "(norm ?x < ?a) =
      (0 < ?a & cinner ?x ?x < complex_of_real (?a\<^sup>2))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 10, template_hole 7),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 1)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Complex_Inner_Product0.cnorm_ge_square",
     "(?a <= norm ?x) =
      (?a <= 0 | complex_of_real (?a\<^sup>2) <= cinner ?x ?x)",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_hole 7)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))))),
    ("Complex_Inner_Product0.cnorm_le_square",
     "(norm ?x <= ?a) =
      (0 <= ?a & cinner ?x ?x <= complex_of_real (?a\<^sup>2))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 10, template_hole 7),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 1)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Complex_Inner_Product0.cdot_norm",
     "cinner ?x ?y =
      (complex_of_real
        ((norm (?x + ?y))\<^sup>2 - (norm (?x - ?y))\<^sup>2) -
       \<i> * complex_of_real ((norm (?x + \<i> *\<^sub>C ?y))\<^sup>2) +
       \<i> * complex_of_real ((norm (?x - \<i> *\<^sub>C ?y))\<^sup>2)) /
      4",
     template_equation
      (template_app
        (template_app (template_hole 16, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8, template_var 1),
                                 template_var 0))),
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_hole 5)))),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 4, template_var 1),
                               template_var 0))),
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6, template_hole 5)))))),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app (template_hole 8, template_var 1),
                             template_app
                              (template_app
                                (template_hole 1, template_hole 2),
                               template_var 0)))),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_hole 5))))))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_app (template_hole 1, template_hole 2),
                           template_var 0)))),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))))))),
         template_app
          (template_hole 0,
           template_app
            (template_hole 6,
             template_app (template_hole 6, template_hole 5))))))]
