   [("Complex_Bounded_Linear_Function.cblinfun_from_CARD_1_0", "?A = 0",
     template_equation (template_var 0, template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_to_CARD_1_0", "?A = 0",
     template_equation (template_var 0, template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_apply_1_left",
     "cblinfun_apply 1 ?y = ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.id_cblinfun_apply",
     "cblinfun_apply id_cblinfun ?\<psi> = ?\<psi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function0.cblinfun_compose_zero",
     "?x o\<^sub>L 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_image_id",
     "cblinfun_image id_cblinfun ?\<psi> = ?\<psi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.zero_cblinfun_image",
     "cblinfun_image 0 ?S = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_image_0",
     "cblinfun_image ?U 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_image_bot",
     "cblinfun_image ?U \<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_1_right",
     "cblinfun_compose ?x 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.double_adj", "adj (adj ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.butterfly_0_left",
     "butterfly (0::?'b) ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.butterfly_0_right",
     "butterfly ?a (0::?'a) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_1_left",
     "cblinfun_compose 1 ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_id_right",
     "cblinfun_compose ?U id_cblinfun = ?U",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_id_left",
     "cblinfun_compose id_cblinfun ?U = ?U",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_zero_left",
     "cblinfun_compose 0 ?U = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_zero_right",
     "cblinfun_compose ?U 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Complex_Bounded_Linear_Function.scaleC_1_right",
     "?x *\<^sub>C (1::?'a) = of_complex ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.unitary_adj",
     "unitary (adj ?U) = unitary ?U",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.blinfun_of_cblinfun_norm",
     "norm ?f = norm (blinfun_of_cblinfun ?f)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.norm_vector_to_cblinfun",
     "norm (vector_to_cblinfun ?x) = norm ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.norm_adj", "norm (adj ?A) = norm ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.Proj_range",
     "cblinfun_image (Proj ?S) \<top> = ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Complex_Bounded_Linear_Function.adj_Proj", "adj (Proj ?M) = Proj ?M",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.bifunctional_isometric",
     "norm (cblinfun_apply bifunctional ?x) = norm ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.one_dim_iso_adjoint_complex",
     "one_dim_iso (adj ?A) = cnj (one_dim_iso ?A)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.blinfun_of_cblinfun_uminus",
     "blinfun_of_cblinfun (- ?f) = - blinfun_of_cblinfun ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.one_dim_apply_is_times",
     "cblinfun_compose ?A ?B = ?A * ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Complex_Bounded_Linear_Function.one_dim_cblinfun_compose_commute",
     "cblinfun_compose ?a ?b = cblinfun_compose ?b ?a",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complex_Bounded_Linear_Function.one_dim_iso_adjoint",
     "one_dim_iso (adj ?A) = adj (one_dim_iso ?A)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_comp_one",
     "cblinfun_compose (vector_to_cblinfun ?s) 1 = vector_to_cblinfun ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.of_complex_cblinfun_apply",
     "cblinfun_apply (of_complex ?x) ?y = ?x *\<^sub>C ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Complex_Bounded_Linear_Function.one_dim_positive",
     "(0 <= ?A) = (0 <= one_dim_iso ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.Proj_ortho_compl",
     "Proj (- ?X) = id_cblinfun - Proj ?X",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Complex_Bounded_Linear_Function.Proj_idempotent",
     "cblinfun_compose (Proj ?M) (Proj ?M) = Proj ?M",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Complex_Bounded_Linear_Function.butterfly_adjoint",
     "adj (butterfly ?\<psi> ?\<phi>) = butterfly ?\<phi> ?\<psi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complex_Bounded_Linear_Function.scaleC_1_apply",
     "cblinfun_apply (?x *\<^sub>C 1) ?y = ?x *\<^sub>C ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Complex_Bounded_Linear_Function.scaleC_of_complex",
     "?x *\<^sub>C of_complex ?y = of_complex (?x * ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_apply_one_dim",
     "cblinfun_apply (vector_to_cblinfun ?\<phi>) ?\<gamma> =
      one_dim_iso ?\<gamma> *\<^sub>C ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Complex_Bounded_Linear_Function.unitary_twosided_isometry",
     "unitary ?U = (isometry ?U & isometry (adj ?U))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Complex_Bounded_Linear_Function.one_dim_loewner_order",
     "(?B <= ?A) = (one_dim_iso ?B <= one_dim_iso ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.bifunctional_apply",
     "cblinfun_apply (cblinfun_apply bifunctional ?x) ?f =
      cblinfun_apply ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complex_Bounded_Linear_Function.blinfun_of_cblinfun_scaleC",
     "blinfun_of_cblinfun (?c *\<^sub>C ?f) =
      ?c *\<^sub>C blinfun_of_cblinfun ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.blinfun_of_cblinfun_scaleR",
     "blinfun_of_cblinfun (?c *\<^sub>R ?f) =
      ?c *\<^sub>R blinfun_of_cblinfun ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.image_vector_to_cblinfun",
     "cblinfun_image (vector_to_cblinfun ?x) \<top> = ccspan {?x}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_cblinfun_apply",
     "vector_to_cblinfun (cblinfun_apply ?A ?\<psi>) =
      cblinfun_compose ?A (vector_to_cblinfun ?\<psi>)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_scaleC",
     "vector_to_cblinfun (?a *\<^sub>C ?\<psi>) =
      ?a *\<^sub>C vector_to_cblinfun ?\<psi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.scaleR_adj",
     "adj (?a *\<^sub>R ?A) = ?a *\<^sub>R adj ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.one_dim_iso_comp_distr_times",
     "one_dim_iso (cblinfun_compose ?a ?b) =
      one_dim_iso ?a * one_dim_iso ?b",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_adj_apply",
     "cblinfun_apply (adj (vector_to_cblinfun ?\<psi>)) ?\<phi> =
      of_complex (?\<psi> \<bullet>\<^sub>C ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.norm_sandwich",
     "norm (sandwich ?A) = (norm ?A)\<^sup>2",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Complex_Bounded_Linear_Function.norm_butterfly",
     "norm (butterfly ?\<psi> ?\<phi>) = norm ?\<psi> * norm ?\<phi>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.blinfun_of_cblinfun_minus",
     "blinfun_of_cblinfun (?f - ?g) =
      blinfun_of_cblinfun ?f - blinfun_of_cblinfun ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.blinfun_of_cblinfun_cblinfun_compose",
     "blinfun_of_cblinfun (cblinfun_compose ?f ?g) =
      blinfun_of_cblinfun ?f o\<^sub>L blinfun_of_cblinfun ?g",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_image_ccspan",
     "cblinfun_image ?A (ccspan ?G) = ccspan (cblinfun_apply ?A ` ?G)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.one_dim_iso_comp_distr",
     "one_dim_iso (cblinfun_compose ?a ?b) =
      cblinfun_compose (one_dim_iso ?a) (one_dim_iso ?b)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_add",
     "vector_to_cblinfun (?x + ?y) =
      vector_to_cblinfun ?x + vector_to_cblinfun ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function.scaleC_adj",
     "adj (?a *\<^sub>C ?A) = cnj ?a *\<^sub>C adj ?A",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Complex_Bounded_Linear_Function.adj_plus",
     "adj (?A + ?B) = adj ?A + adj ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Complex_Bounded_Linear_Function0.cblinfun_of_matrix_minus",
     "cblinfun_of_matrix ?x - cblinfun_of_matrix ?y =
      cblinfun_of_matrix (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function0.cblinfun_of_matrix_works",
     "cblinfun_of_matrix (%i j. i \<bullet>\<^sub>C cblinfun_apply ?f j) =
      ?f",
     template_equation
      (template_app (template_hole 2, t_empty), template_var 0)),
    ("Complex_Bounded_Linear_Function.adj_cblinfun_compose",
     "adj (cblinfun_compose ?A ?B) = cblinfun_compose (adj ?B) (adj ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Complex_Bounded_Linear_Function.butterfly_apply",
     "cblinfun_apply (butterfly ?\<psi> ?\<psi>') ?\<phi> =
      (?\<psi>' \<bullet>\<^sub>C ?\<phi>) *\<^sub>C ?\<psi>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 2))),
    ("Complex_Bounded_Linear_Function0.cblinfun_apply_cblinfun_compose",
     "cblinfun_apply (cblinfun_compose ?a ?b) ?c =
      cblinfun_apply ?a (cblinfun_apply ?b ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.blinfun_compose_assoc",
     "?A o\<^sub>L ?B o\<^sub>L ?C = ?A o\<^sub>L (?B o\<^sub>L ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_image",
     "cblinfun_image (cblinfun_compose ?A ?B) ?S =
      cblinfun_image ?A (cblinfun_image ?B ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_assoc_left",
     "cblinfun_image ?A (cblinfun_image ?B ?S) =
      cblinfun_image (cblinfun_compose ?A ?B) ?S",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Complex_Bounded_Linear_Function.scaleC_cblinfun_image",
     "cblinfun_image (?\<alpha> *\<^sub>C ?A) ?S =
      ?\<alpha> *\<^sub>C cblinfun_image ?A ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.sandwich_apply_adj",
     "cblinfun_apply (sandwich ?A) (adj ?B) =
      adj (cblinfun_apply (sandwich ?A) ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_assoc_left",
     "?a + (?b + ?c) = ?a + ?b + ?c",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Complex_Bounded_Linear_Function.cblinfun_assoc_right",
     "?a + ?b + ?c = ?a + (?b + ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_scaleC_left",
     "butterfly (?c *\<^sub>C ?\<psi>) ?\<phi> =
      ?c *\<^sub>C butterfly ?\<psi> ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_comp_butterfly",
     "cblinfun_compose ?a (butterfly ?\<psi> ?\<phi>) =
      butterfly (cblinfun_apply ?a ?\<psi>) ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Complex_Bounded_Linear_Function.sandwich_apply",
     "cblinfun_apply (sandwich ?A) ?B =
      cblinfun_compose (cblinfun_compose ?A ?B) (adj ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_assoc",
     "cblinfun_compose (cblinfun_compose ?A ?B) ?C =
      cblinfun_compose ?A (cblinfun_compose ?B ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_assoc_left",
     "cblinfun_compose ?A (cblinfun_compose ?B ?C) =
      cblinfun_compose (cblinfun_compose ?A ?B) ?C",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_scaleC_right",
     "cblinfun_compose ?A (?a *\<^sub>C ?B) =
      ?a *\<^sub>C cblinfun_compose ?A ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_scaleR_right",
     "cblinfun_compose ?A (?a *\<^sub>R ?B) =
      ?a *\<^sub>R cblinfun_compose ?A ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_scaleC_left",
     "cblinfun_compose (?a *\<^sub>C ?A) ?B =
      ?a *\<^sub>C cblinfun_compose ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_scaleR_left",
     "cblinfun_compose (?a *\<^sub>R ?A) ?B =
      ?a *\<^sub>R cblinfun_compose ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.norm_AAadj",
     "norm (cblinfun_compose ?A (adj ?A)) = (norm ?A)\<^sup>2",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Complex_Bounded_Linear_Function.cinner_adj_right",
     "?x \<bullet>\<^sub>C cblinfun_apply (adj ?G) ?y =
      cblinfun_apply ?G ?x \<bullet>\<^sub>C ?y",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Complex_Bounded_Linear_Function.cinner_adj_left",
     "cblinfun_apply (adj ?G) ?x \<bullet>\<^sub>C ?y =
      ?x \<bullet>\<^sub>C cblinfun_apply ?G ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.vector_to_cblinfun_adj_comp_vector_to_cblinfun",
     "cblinfun_compose (adj (vector_to_cblinfun ?\<psi>))
       (vector_to_cblinfun ?\<phi>) =
      (?\<psi> \<bullet>\<^sub>C ?\<phi>) *\<^sub>C id_cblinfun",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Complex_Bounded_Linear_Function.butterfly_scaleC_right",
     "butterfly ?\<psi> (?c *\<^sub>C ?\<phi>) =
      cnj ?c *\<^sub>C butterfly ?\<psi> ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_scaleR_right",
     "butterfly ?\<psi> (?r *\<^sub>R ?\<phi>) =
      complex_of_real ?r *\<^sub>C butterfly ?\<psi> ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_scaleR_left",
     "butterfly (?r *\<^sub>R ?\<psi>) ?\<phi> =
      complex_of_real ?r *\<^sub>C butterfly ?\<psi> ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_comp_cblinfun",
     "cblinfun_compose (butterfly ?\<psi> ?\<phi>) ?a =
      butterfly ?\<psi> (cblinfun_apply (adj ?a) ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Complex_Bounded_Linear_Function.is_Proj_algebraic",
     "is_Proj ?P = (cblinfun_compose ?P ?P = ?P & ?P = adj ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_dunno)),
    ("Complex_Bounded_Linear_Function.cblinfun_image_sup",
     "cblinfun_image ?U (?A \<squnion> ?B) =
      cblinfun_image ?U ?A \<squnion> cblinfun_image ?U ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_add_right",
     "butterfly ?a (?b + ?b') = butterfly ?a ?b + butterfly ?a ?b'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_add_left",
     "butterfly (?a + ?a') ?b = butterfly ?a ?b + butterfly ?a' ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_add_right",
     "cblinfun_compose ?a (?b + ?c) =
      cblinfun_compose ?a ?b + cblinfun_compose ?a ?c",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.cblinfun_compose_add_left",
     "cblinfun_compose (?a + ?b) ?c =
      cblinfun_compose ?a ?c + cblinfun_compose ?b ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function.butterfly_comp_butterfly",
     "cblinfun_compose (butterfly ?\<psi>1.0 ?\<psi>2.0)
       (butterfly ?\<psi>3.0 ?\<psi>4.0) =
      (?\<psi>2.0 \<bullet>\<^sub>C ?\<psi>3.0) *\<^sub>C
      butterfly ?\<psi>1.0 ?\<psi>4.0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Complex_Bounded_Linear_Function0.continuous_on_cstrong_operator_topo_iff_coordinatewise",
     "continuous_map ?T cstrong_operator_topology ?f =
      (ALL x. continuous_map ?T euclidean (%y. cblinfun_apply (?f y) x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 1), template_hole 5),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Complex_Bounded_Linear_Function0.cblinfun_of_matrix_apply",
     "cblinfun_apply (cblinfun_of_matrix ?a) ?x =
      (SUM i:CBasis.
          SUM j:CBasis. (j \<bullet>\<^sub>C ?x * ?a i j) *\<^sub>C i)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 6, t_empty), template_hole 0))),
    ("Complex_Bounded_Linear_Function.cinner_sup_norm_cblinfun",
     "norm ?A =
      (SUP (\<psi>, \<phi>).
          cmod (\<psi> \<bullet>\<^sub>C cblinfun_apply ?A \<phi>) /
          (norm \<psi> * norm \<phi>))",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9, template_app (template_hole 8, t_empty)),
           template_hole 0))))]
