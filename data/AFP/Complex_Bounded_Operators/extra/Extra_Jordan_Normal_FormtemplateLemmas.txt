   [("Extra_Jordan_Normal_Form.scaleC_minus1_left_vec",
     "smult_vec (- (1::?'b)) ?v = - ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Extra_Jordan_Normal_Form.list_of_vec_mult",
     "list_of_vec (smult_vec ?c ?v) = map ((*) ?c) (list_of_vec ?v)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Extra_Jordan_Normal_Form.square_nneg_complex",
     "?x : \<real> ==> 0 <= ?x\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_inequation
        (less_equals, template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Extra_Jordan_Normal_Form.vec_is_zero",
     "dim_vec ?v = ?n ==> vec_is_zero ?n ?v = (?v = 0\<^sub>v ?n)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_var 0)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1)
              )],
         template_equation
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Extra_Jordan_Normal_Form.adjuster_carrier'",
     "[| ?w : carrier_vec ?n; set ?us <= carrier_vec ?n |]
      ==> adjuster ?n ?w ?us : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_app (template_hole 3, template_var 1))
           ))),
    ("Extra_Jordan_Normal_Form.list_of_vec_plus",
     "dim_vec ?v1.0 = dim_vec ?v2.0 ==>
      list_of_vec (?v1.0 + ?v2.0) =
      map2 (+) (list_of_vec ?v1.0) (list_of_vec ?v2.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 5, template_var 1)),
             template_app (template_hole 5, template_var 0)))))),
    ("Extra_Jordan_Normal_Form.gram_schmidt0_corthogonal",
     "[| corthogonal ?R; !!x. x : set ?R ==> dim_vec x = ?d |]
      ==> gram_schmidt0 ?d ?R = rev ?R",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Extra_Jordan_Normal_Form.mat_entry_explicit",
     "[| ?M : carrier_mat ?m ?n; ?i < ?m; ?j < ?n |]
      ==> vec_index (mult_mat_vec ?M (unit_vec ?n ?j)) ?i =
          index_mat ?M (?i, ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Extra_Jordan_Normal_Form.mat_adjoint_swap",
     "[| ?M : carrier_mat ?nB ?nA; ?iA < dim_row ?M; ?iB < dim_col ?M |]
      ==> index_mat (mat_adjoint ?M) (?iB, ?iA) =
          cnj (index_mat ?M (?iA, ?iB))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 4)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 4)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("Extra_Jordan_Normal_Form.cscalar_prod_adjoint",
     "[| ?M : carrier_mat ?nB ?nA; dim_vec ?v = ?nA; dim_vec ?u = ?nB |]
      ==> cscalar_prod ?v (mult_mat_vec (mat_adjoint ?M) ?u) =
          cscalar_prod (mult_mat_vec ?M ?v) ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 5, template_var 1), template_var 2),
        template_equation
         (template_app (template_hole 5, template_var 0), template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 4)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Extra_Jordan_Normal_Form.eq_mat_on_vecI",
     "[| !!v. v : carrier_vec ?nA ==> mult_mat_vec ?M v = mult_mat_vec ?N v;
         ?M : carrier_mat ?nB ?nA; ?N : carrier_mat ?nB ?nA |]
      ==> ?M = ?N",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 3))
            )],
       template_equation (template_var 2, template_var 1)))]
