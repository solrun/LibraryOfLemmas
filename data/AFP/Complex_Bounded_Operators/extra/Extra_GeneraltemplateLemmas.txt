   [("Extra_General.inj_map_inv_map", "inj_map (inv_map ?\<pi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Extra_General.abs_complex_real", "\<bar>?x\<bar> : \<real>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Extra_General.complete_singleton",
     "uniform_space_class.complete {?s}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Extra_General.enum_CARD_1", "enum_class.enum = [?a]",
     template_equation
      (template_hole 2,
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Extra_General.Im_abs", "Im \<bar>?x\<bar> = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Extra_General.enum_idx_bound", "enum_idx ?x < length enum_class.enum",
     template_inequation
      (less_than, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Extra_General.not_singleton_existence", "EX x. x ~= ?t",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Extra_General.UNIV_not_singleton", "UNIV ~= {?x}",
     template_negation
      (
         template_equation
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Extra_General.enum_idx_correct", "enum_class.enum ! enum_idx ?i = ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Extra_General.index_of_length", "index_of ?x ?y <= length ?y",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Extra_General.cnj_x_x_geq0", "0 <= cnj ?x * ?x",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Extra_General.inj_map_total", "inj_map (Some o ?\<pi>) = inj ?\<pi>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Extra_General.tendsto_principal_singleton",
     "(?f \<longlongrightarrow> ?f ?x) (principal {?x})",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3,
               template_app (template_var 1, template_var 0))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("Extra_General.map_filter_Some",
     "List.map_filter (%x. Some (?f x)) ?l = map ?f ?l",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Extra_General.cmod_Re", "0 <= ?x ==> cmod ?x = Re ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Extra_General.map_filter_map",
     "List.map_filter ?f (map ?g ?l) = List.map_filter (?f o ?g) ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Extra_General.cnj_x_x", "cnj ?x * ?x = \<bar>?x\<bar>\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Extra_General.reals_zero_comparable",
     "?x : \<real> ==> ?x <= 0 | 0 <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Extra_General.enum_idx_enum",
     "?i < CARD(?'a) ==> enum_idx (enum_class.enum ! ?i) = ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_var 0))),
    ("Extra_General.inj_map_map_comp",
     "[| inj_map ?f; inj_map ?g |] ==> inj_map (?f \<circ>\<^sub>m ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Extra_General.filter_Un",
     "Set.filter ?f (?x Un ?y) = Set.filter ?f ?x Un Set.filter ?f ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Extra_General.index_of_correct",
     "?x : set ?y ==> ?y ! index_of ?x ?y = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Extra_General.finite_subsets_at_top_inter",
     "?A <= ?B ==>
      filtermap (%F. F Int ?A) (finite_subsets_at_top ?B)
      <= finite_subsets_at_top ?A",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Extra_General.Set_filter_unchanged",
     "(!!x. x : ?X ==> ?P x) ==> Set.filter ?P ?X = ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Extra_General.L2_set_mono2",
     "[| finite ?L; ?K <= ?L |] ==> L2_set ?f ?K <= L2_set ?f ?L",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Extra_General.tendsto_add_const_iff",
     "((%x. ?c + ?f x) \<longlongrightarrow> ?c + ?d) ?F =
      (?f \<longlongrightarrow> ?d) ?F",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Extra_General.image_set_plus",
     "linear ?U ==> ?U ` (?A + ?B) = ?U ` ?A + ?U ` ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Extra_General.finite_subsets_at_top_minus",
     "?A <= ?B ==>
      finite_subsets_at_top (?B - ?A)
      <= filtermap (%F. F - ?A) (finite_subsets_at_top ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 2, template_var 0))))),
    ("Extra_General.inv_map_total",
     "surj ?\<pi> ==> inv_map (Some o ?\<pi>) = Some o inv ?\<pi>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 8),
          template_hole 7)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_hole 8),
             template_var 0))))),
    ("Extra_General.unique_choice",
     "ALL x. EX! y. ?Q x y ==> EX! f. ALL x. ?Q x (f x)",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Extra_General.index_of_nth",
     "[| distinct ?xs; ?i < length ?xs |] ==> index_of (?xs ! ?i) ?xs = ?i",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1),
         template_var 0))),
    ("Extra_General.infsum_nonneg",
     "(!!x. x : ?M ==> (0::?'b) <= ?f x) ==> (0::?'b) <= infsum ?f ?M",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Extra_General.index_of_bound",
     "[| ?y ~= []; ?x : set ?y |] ==> index_of ?x ?y < length ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Extra_General.abs_summable_bdd_above",
     "(?f abs_summable_on ?A) =
      bdd_above (sum (%x. norm (?f x)) ` {F. F <= ?A & finite F})",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty), template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app (template_hole 3, t_empty))))),
    ("Extra_General.Sup_real_close",
     "[| 0 < ?e; bdd_above ?S; ?S ~= {} |] ==> EX x:?S. Sup ?S - ?e < x",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Extra_General.abs_summable_product",
     "[| (%x. ?x x * ?x x) abs_summable_on ?A;
         (%x. ?y x * ?y x) abs_summable_on ?A |]
      ==> (%x. ?x x * ?y x) abs_summable_on ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)
           ))),
    ("Extra_General.cauchy_filter_metricI",
     "(!!e. 0 < e ==>
            EX P. eventually P ?F &
                  (ALL x y. P x & P y --> dist x y < e)) ==>
      cauchy_filter ?F",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Extra_General.sum_single",
     "[| finite ?A; !!j. [| j ~= ?i; j : ?A |] ==> ?f j = (0::?'b) |]
      ==> sum ?f ?A = (if ?i : ?A then ?f ?i else (0::?'b))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2)),
             template_app (template_var 0, template_var 1)),
           template_hole 2)))),
    ("Extra_General.cauchy_filter_metric_filtermapI",
     "(!!e. 0 < e ==>
            EX P. eventually P ?F &
                  (ALL x y. P x & P y --> dist (?f x) (?f y) < e)) ==>
      cauchy_filter (filtermap ?f ?F)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           )))]
