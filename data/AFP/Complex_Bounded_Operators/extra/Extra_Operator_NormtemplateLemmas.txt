   [("Extra_Operator_Norm.bdd_above_norm_f",
     "bounded_linear ?f ==> bdd_above {norm (?f x) |x. norm x = 1}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("Extra_Operator_Norm.onorm_sphere",
     "bounded_linear ?f ==> onorm ?f = Sup {norm (?f x) |x. norm x = 1}",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))))),
    ("Extra_Operator_Norm.onorm_Inf_bound",
     "bounded_linear ?f ==>
      onorm ?f =
      Inf {K. ALL x. x ~= (0::?'a) --> norm (?f x) <= norm x * K}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app (template_hole 11, template_var 0),
         template_app
          (template_hole 10, template_app (template_hole 9, t_empty))))),
    ("Extra_Operator_Norm.norm_unit_sphere",
     "[| bounded_linear (blinfun_apply ?f); 0 < ?e |]
      ==> EX x:sphere (0::?'a) 1.
             norm (norm (blinfun_apply ?f x) - norm ?f) < ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            ),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4)),
             t_empty)
           ))),
    ("Extra_Operator_Norm.onormI",
     "[| !!x. norm (?f x) <= ?b * norm x; ?x ~= (0::?'a);
         norm (?f ?x) = ?b * norm ?x |]
      ==> onorm ?f = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_equation
         (template_app
           (template_hole 7, template_app (template_var 2, template_var 0)),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 5, template_var 0)))],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1)))]
