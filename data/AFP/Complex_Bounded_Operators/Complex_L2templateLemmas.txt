   [("Complex_L2.classical_operator_exists_finite",
     "classical_operator_exists ?\<pi>",
     template_predicate (template_app (template_hole 0, template_var 0))),
    ("Complex_L2.has_ell2_norm_finite", "has_ell2_norm ?x",
     template_predicate (template_app (template_hole 0, template_var 0))),
    ("Complex_L2.ell2_norm_geq0", "0 <= ell2_norm ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Complex_L2.ket_nonzero", "ket ?i ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Complex_L2.norm_ket", "norm (ket ?i) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Complex_L2.trunc_ell2_empty", "trunc_ell2 {} ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Complex_L2.classical_operator_exists_inj",
     "inj_map ?\<pi> ==> classical_operator_exists ?\<pi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Complex_L2.cinner_ket_same", "ket ?i \<bullet>\<^sub>C ket ?i = 1",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Complex_L2.ket_canonical_basis",
     "ket ?x = canonical_basis ! enum_idx ?x",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Complex_L2.norm_point_bound_ell2", "cmod (Rep_ell2 ?x ?i) <= norm ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Complex_L2.has_ell2_norm_ket",
     "has_ell2_norm (%i. if ?a = i then 1 else 0)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Complex_L2.ell2_norm_finite_L2_set",
     "ell2_norm ?x = L2_set (cmod o ?x) UNIV",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Complex_L2.cinner_ket_left",
     "ket ?i \<bullet>\<^sub>C ?\<psi> = Rep_ell2 ?\<psi> ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Complex_L2.trunc_ell2_lim_at_UNIV",
     "((%S. trunc_ell2 S ?\<psi>) \<longlongrightarrow> ?\<psi>)
       (finite_subsets_at_top UNIV)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Complex_L2.ket_injective", "(ket ?i = ket ?j) = (?i = ?j)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.cinner_ket_right",
     "?\<psi> \<bullet>\<^sub>C ket ?i = cnj (Rep_ell2 ?\<psi> ?i)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Complex_L2.ell2_norm_uminus",
     "has_ell2_norm ?x ==> has_ell2_norm (%i. - ?x i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Complex_L2.ell2_norm_ket",
     "ell2_norm (%i. if ?a = i then 1 else 0) = 1",
     template_equation
      (template_app (template_hole 5, t_empty), template_hole 0)),
    ("Complex_L2.ell2_norm_smult",
     "has_ell2_norm ?x ==> has_ell2_norm (%i. ?c * ?x i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Complex_L2.ell2_norm_point_bound",
     "has_ell2_norm ?x ==> cmod (?x ?i) <= ell2_norm ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Complex_L2.isometry_classical_operator",
     "inj ?\<pi> ==> isometry (classical_operator (Some o ?\<pi>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Complex_L2.has_ell2_norm_L2_set",
     "has_ell2_norm ?x = bdd_above (L2_set (cmod o ?x) ` Collect finite)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0))),
           template_app (template_hole 1, template_hole 0))))),
    ("Complex_L2.classical_operator_adjoint",
     "inj_map ?\<pi> ==>
      adj (classical_operator ?\<pi>) =
      classical_operator (inv_map ?\<pi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Complex_L2.unitary_classical_operator",
     "bij ?\<pi> ==> unitary (classical_operator (Some o ?\<pi>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Complex_L2.orthogonal_ket",
     "is_orthogonal (ket ?i) (ket ?j) = (?i ~= ?j)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Complex_L2.cinner_ket",
     "ket ?i \<bullet>\<^sub>C ket ?j = (if ?i = ?j then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Complex_L2.ell2_norm_uminus",
     "has_ell2_norm ?x ==> ell2_norm (%i. - ?x i) = ell2_norm ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, template_var 0)))),
    ("Complex_L2.trunc_ell2_ket_cspan",
     "finite ?S ==> trunc_ell2 ?S ?x : cspan (range ket)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)))
           ))),
    ("Complex_L2.classical_operator_exists_comp",
     "[| classical_operator_exists ?\<pi>;
         classical_operator_exists ?\<rho> |]
      ==> classical_operator_exists (?\<pi> \<circ>\<^sub>m ?\<rho>)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Complex_L2.classical_operator_ket_finite",
     "cblinfun_apply (classical_operator ?\<pi>) (ket ?x) =
      (case ?\<pi> ?x of None => 0 | Some i => ket i)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app (template_var 1, template_var 0)))),
    ("Complex_L2.ell2_norm_0",
     "has_ell2_norm ?x ==> (ell2_norm ?x = 0) = (?x = (%_. 0))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_bimplication
        (template_equation
          (template_app (template_hole 3, template_var 0), template_hole 2),
         template_equation (template_var 0, t_empty)))),
    ("Complex_L2.ell2_norm_finite",
     "ell2_norm ?x = sqrt (SUM i:UNIV. (cmod (?x i))\<^sup>2)",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty), template_hole 0)))),
    ("Complex_L2.ell2_norm_triangle",
     "[| has_ell2_norm ?x; has_ell2_norm ?y |]
      ==> has_ell2_norm (%i. ?x i + ?y i)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Complex_L2.has_ell2_norm_bdd_above",
     "has_ell2_norm ?x =
      bdd_above (sum (%xa. cmod ((?x xa)\<^sup>2)) ` Collect finite)",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app (template_hole 1, template_hole 0))))),
    ("Complex_L2.ell2_norm_smult",
     "has_ell2_norm ?x ==>
      ell2_norm (%i. ?c * ?x i) = cmod ?c * ell2_norm ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 3, template_var 1))))),
    ("Complex_L2.equal_ket",
     "(!!x. cblinfun_apply ?A (ket x) = cblinfun_apply ?B (ket x)) ==>
      ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.cinner_ket_eqI",
     "(!!i. ket i \<bullet>\<^sub>C ?\<psi> =
            ket i \<bullet>\<^sub>C ?\<phi>) ==>
      ?\<psi> = ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.classical_operator_ket",
     "classical_operator_exists ?\<pi> ==>
      cblinfun_apply (classical_operator ?\<pi>) (ket ?x) =
      (case ?\<pi> ?x of None => 0 | Some i => ket i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1), t_empty),
           template_app (template_var 1, template_var 0))))),
    ("Complex_L2.classical_operator_existsI",
     "(!!x. cblinfun_apply ?B (ket x) =
            (case ?\<pi> x of None => 0 | Some i => ket i)) ==>
      classical_operator_exists ?\<pi>",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Complex_L2.classical_operator_mult",
     "[| classical_operator_exists ?\<pi>;
         classical_operator_exists ?\<rho> |]
      ==> cblinfun_compose (classical_operator ?\<pi>)
           (classical_operator ?\<rho>) =
          classical_operator (?\<pi> \<circ>\<^sub>m ?\<rho>)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Complex_L2.ell2_norm_L2_set",
     "has_ell2_norm ?x ==>
      ell2_norm ?x = \<Squnion> (L2_set (cmod o ?x) ` {F. finite F})",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 1, t_empty)))))),
    ("Complex_L2.ell2_pointwise_ortho",
     "(!!i. Rep_ell2 ?x i = 0 | Rep_ell2 ?y i = 0) ==> is_orthogonal ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 1))),
    ("Complex_L2.norm_trunc_ell2_finite",
     "finite ?S ==>
      norm (trunc_ell2 ?S ?x) =
      sqrt (SUM i:?S. (cmod (Rep_ell2 ?x i))\<^sup>2)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, t_empty), template_var 1))))),
    ("Complex_L2.ell2_norm_triangle",
     "[| has_ell2_norm ?x; has_ell2_norm ?y |]
      ==> ell2_norm (%i. ?x i + ?y i) <= ell2_norm ?x + ell2_norm ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Complex_L2.antilinear_equal_ket",
     "[| antilinear ?f; antilinear ?g; !!i. ?f (ket i) = ?g (ket i) |]
      ==> ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.clinear_equal_ket",
     "[| clinear ?f; clinear ?g; !!i. ?f (ket i) = ?g (ket i) |]
      ==> ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.ell2_norm_SUP",
     "has_ell2_norm ?x ==>
      ell2_norm ?x =
      sqrt (\<Squnion> (sum (%i. (cmod (?x i))\<^sup>2) ` {F. finite F}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app (template_hole 11, template_var 0),
         template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, t_empty),
               template_app (template_hole 1, t_empty))))))),
    ("Complex_L2.cinner_ket_adjointI",
     "(!!i j.
          cblinfun_apply ?F (ket i) \<bullet>\<^sub>C ket j =
          ket i \<bullet>\<^sub>C cblinfun_apply ?G (ket j)) ==>
      ?F = adj ?G",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Complex_L2.norm_id_minus_trunc_ell2",
     "(norm (?x - trunc_ell2 ?S ?x))\<^sup>2 =
      (norm ?x)\<^sup>2 - (norm (trunc_ell2 ?S ?x))\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Complex_L2.clinear_eq_butterfly_ketI",
     "[| clinear ?F; clinear ?G;
         !!i j.
            ?F (butterfly (ket i) (ket j)) =
            ?G (butterfly (ket i) (ket j)) |]
      ==> ?F = ?G",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Complex_L2.ell2_norm_finite_support",
     "[| finite ?S; !!i. i ~: ?S ==> Rep_ell2 ?x i = 0 |]
      ==> norm ?x = sqrt (SUM i:?S. (cmod (Rep_ell2 ?x i))\<^sup>2)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)))))]
